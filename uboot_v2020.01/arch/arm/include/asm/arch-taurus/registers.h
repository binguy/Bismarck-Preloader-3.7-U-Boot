/*
 * REGISTERS.h
 *
 * THIS FILE WAS AUTOMATICALLY GENERATED BY ./rdb2tt.pl
 * -config rdb2h.yml -db reg.db
 *
 */
#ifndef _CA8277_REGISTERS_H_
#define _CA8277_REGISTERS_H_

#include "ca_types.h"

/* work around DEBUG being defined in the build overriding
 * registers named DEBUG in structures below
 *
 */
#ifdef DEBUG
#define CA_DEBUG_WORKAROUND DEBUG
#undef DEBUG
#endif /* DEBUG */

/******************************************************************
 *
 * Each register in the map is defined as a struct with bitfields.
 *
 ******************************************************************/

/*
 * APB1
 */

/*
 * PE0_ATU
 */

#define PE0_ATU_CTL                              0x90300000
#define PE0_ATU_CTL_dft                          0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_DATA0                            0x90300004
#define PE0_ATU_DATA0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_DATA1                            0x90300008
#define PE0_ATU_DATA1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_DATA2                            0x9030000c
#define PE0_ATU_DATA2_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_DATA3                            0x90300010
#define PE0_ATU_DATA3_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_DATA4                            0x90300014
#define PE0_ATU_DATA4_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_DATA5                            0x90300018
#define PE0_ATU_DATA5_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define PE0_ATU_UPPER                            0x9030001c
#define PE0_ATU_UPPER_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE0_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  PE0_ATU_CTL_t                            CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PE0_ATU_DATA0_t                          DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PE0_ATU_DATA1_t                          DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PE0_ATU_DATA2_t                          DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PE0_ATU_DATA3_t                          DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PE0_ATU_DATA4_t                          DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PE0_ATU_DATA5_t                          DATA5;                         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PE0_ATU_UPPER_t                          UPPER;                         /* addr: 0x0000001c */
} APB1_PE0_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * PE1_ATU
 */

#define PE1_ATU_CTL                              0x90300100
#define PE1_ATU_CTL_dft                          0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_DATA0                            0x90300104
#define PE1_ATU_DATA0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_DATA1                            0x90300108
#define PE1_ATU_DATA1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_DATA2                            0x9030010c
#define PE1_ATU_DATA2_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_DATA3                            0x90300110
#define PE1_ATU_DATA3_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_DATA4                            0x90300114
#define PE1_ATU_DATA4_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_DATA5                            0x90300118
#define PE1_ATU_DATA5_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define PE1_ATU_UPPER                            0x9030011c
#define PE1_ATU_UPPER_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE1_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  PE1_ATU_CTL_t                            CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PE1_ATU_DATA0_t                          DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PE1_ATU_DATA1_t                          DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PE1_ATU_DATA2_t                          DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PE1_ATU_DATA3_t                          DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PE1_ATU_DATA4_t                          DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PE1_ATU_DATA5_t                          DATA5;                         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PE1_ATU_UPPER_t                          UPPER;                         /* addr: 0x0000001c */
} APB1_PE1_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * CRYPTO0_ATU
 */

#define CRYPTO0_ATU_CTL                          0x90300200
#define CRYPTO0_ATU_CTL_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_DATA0                        0x90300204
#define CRYPTO0_ATU_DATA0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_DATA1                        0x90300208
#define CRYPTO0_ATU_DATA1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_DATA2                        0x9030020c
#define CRYPTO0_ATU_DATA2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_DATA3                        0x90300210
#define CRYPTO0_ATU_DATA3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_DATA4                        0x90300214
#define CRYPTO0_ATU_DATA4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_DATA5                        0x90300218
#define CRYPTO0_ATU_DATA5_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO0_ATU_UPPER                        0x9030021c
#define CRYPTO0_ATU_UPPER_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO0_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CRYPTO0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  CRYPTO0_ATU_CTL_t                        CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  CRYPTO0_ATU_DATA0_t                      DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  CRYPTO0_ATU_DATA1_t                      DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  CRYPTO0_ATU_DATA2_t                      DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  CRYPTO0_ATU_DATA3_t                      DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  CRYPTO0_ATU_DATA4_t                      DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  CRYPTO0_ATU_DATA5_t                      DATA5;                         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  CRYPTO0_ATU_UPPER_t                      UPPER;                         /* addr: 0x0000001c */
} APB1_CRYPTO0_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * CRYPTO1_ATU
 */

#define CRYPTO1_ATU_CTL                          0x90300400
#define CRYPTO1_ATU_CTL_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_DATA0                        0x90300404
#define CRYPTO1_ATU_DATA0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_DATA1                        0x90300408
#define CRYPTO1_ATU_DATA1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_DATA2                        0x9030040c
#define CRYPTO1_ATU_DATA2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_DATA3                        0x90300410
#define CRYPTO1_ATU_DATA3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_DATA4                        0x90300414
#define CRYPTO1_ATU_DATA4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_DATA5                        0x90300418
#define CRYPTO1_ATU_DATA5_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define CRYPTO1_ATU_UPPER                        0x9030041c
#define CRYPTO1_ATU_UPPER_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} CRYPTO1_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CRYPTO1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  CRYPTO1_ATU_CTL_t                        CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  CRYPTO1_ATU_DATA0_t                      DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  CRYPTO1_ATU_DATA1_t                      DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  CRYPTO1_ATU_DATA2_t                      DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  CRYPTO1_ATU_DATA3_t                      DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  CRYPTO1_ATU_DATA4_t                      DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  CRYPTO1_ATU_DATA5_t                      DATA5;                         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  CRYPTO1_ATU_UPPER_t                      UPPER;                         /* addr: 0x0000001c */
} APB1_CRYPTO1_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * LDMA
 */

/*
 * LDMA_GLB
 */

#define LDMA_LDMA_GLB_LDMA_CONTROL               0x90301000
#define LDMA_LDMA_GLB_LDMA_CONTROL_dft           0x00000080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t aruser_idx           :  3 ; /* bits 6:4 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 7:7 */
    ca_uint32_t buf_depth_sel        :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t lpae_en              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_LDMA_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER          0x90301004
#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER_dft      0x00800400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t period               : 16 ; /* bits 15:0 */
    ca_uint32_t credit               : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_LDMA_RATE_LIMITER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB       0x90301008
#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB_dft   0x00000fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upperbound           : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_LDMA_BKT0_DWRR             0x9030100c
#define LDMA_LDMA_GLB_LDMA_BKT0_DWRR_dft         0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t quantum_size         : 16 ; /* bits 15:0 */
    ca_uint32_t dc_upperbound        : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_LDMA_BKT0_DWRR_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_LDMA_BKT1_DWRR             0x90301010
#define LDMA_LDMA_GLB_LDMA_BKT1_DWRR_dft         0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t quantum_size         : 16 ; /* bits 15:0 */
    ca_uint32_t dc_upperbound        : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_LDMA_BKT1_DWRR_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0       0x90301014
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0         0x90301018
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1       0x9030101c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1         0x90301020
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2       0x90301024
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2         0x90301028
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3       0x9030102c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3         0x90301030
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4       0x90301034
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4         0x90301038
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5       0x9030103c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5         0x90301040
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6       0x90301044
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6         0x90301048
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7       0x9030104c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t bkt_sel              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_start_addr       : 20 ; /* bits 23:4 */
    ca_uint32_t seg_start_addr_lpae  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7         0x90301050
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser_idx           :  3 ; /* bits 2:0 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 3:3 */
    ca_uint32_t seg_end_addr         : 20 ; /* bits 23:4 */
    ca_uint32_t seg_end_addr_lpae    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_0                 0x90301054
#define LDMA_LDMA_GLB_AXPATTEN_0_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_0_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_1                 0x90301058
#define LDMA_LDMA_GLB_AXPATTEN_1_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_1_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_2                 0x9030105c
#define LDMA_LDMA_GLB_AXPATTEN_2_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_2_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_3                 0x90301060
#define LDMA_LDMA_GLB_AXPATTEN_3_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_3_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_4                 0x90301064
#define LDMA_LDMA_GLB_AXPATTEN_4_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_4_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_5                 0x90301068
#define LDMA_LDMA_GLB_AXPATTEN_5_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_5_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_6                 0x9030106c
#define LDMA_LDMA_GLB_AXPATTEN_6_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_6_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_AXPATTEN_7                 0x90301070
#define LDMA_LDMA_GLB_AXPATTEN_7_dft             0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ax_user              : 14 ; /* bits 13:0 */
    ca_uint32_t ax_cache             :  4 ; /* bits 17:14 */
    ca_uint32_t ax_qos               :  4 ; /* bits 21:18 */
    ca_uint32_t ax_prot              :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_AXPATTEN_7_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER      0x90301074
#define LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER_dft  0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t q0_sel               :  1 ; /* bits 0:0 */
    ca_uint32_t q1_sel               :  1 ; /* bits 1:1 */
    ca_uint32_t q2_sel               :  1 ; /* bits 2:2 */
    ca_uint32_t q3_sel               :  1 ; /* bits 3:3 */
    ca_uint32_t q4_sel               :  1 ; /* bits 4:4 */
    ca_uint32_t q5_sel               :  1 ; /* bits 5:5 */
    ca_uint32_t q6_sel               :  1 ; /* bits 6:6 */
    ca_uint32_t q7_sel               :  1 ; /* bits 7:7 */
    ca_uint32_t q8_sel               :  1 ; /* bits 8:8 */
    ca_uint32_t q9_sel               :  1 ; /* bits 9:9 */
    ca_uint32_t q10_sel              :  1 ; /* bits 10:10 */
    ca_uint32_t q11_sel              :  1 ; /* bits 11:11 */
    ca_uint32_t q12_sel              :  1 ; /* bits 12:12 */
    ca_uint32_t q13_sel              :  1 ; /* bits 13:13 */
    ca_uint32_t q14_sel              :  1 ; /* bits 14:14 */
    ca_uint32_t q15_sel              :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER     0x90301078
#define LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PE0_QA               :  4 ; /* bits 3:0 */
    ca_uint32_t PE0_QA_en            :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t PE0_QB               :  4 ; /* bits 11:8 */
    ca_uint32_t PE0_QB_en            :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t PE1_QA               :  4 ; /* bits 19:16 */
    ca_uint32_t PE1_QA_en            :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t PE1_QB               :  4 ; /* bits 27:24 */
    ca_uint32_t PE1_QB_en            :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER 0x9030107c
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER 0x90301080
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER 0x90301084
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER 0x90301088
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER 0x9030108c
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER 0x90301090
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER 0x90301094
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER 0x90301098
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER 0x9030109c
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER 0x903010a0
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER 0x903010a4
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER 0x903010a8
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER 0x903010ac
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER 0x903010b0
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER 0x903010b4
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER 0x903010b8
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER 0x903010bc
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER 0x903010c0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER 0x903010c4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER 0x903010c8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER 0x903010cc
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER 0x903010d0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER 0x903010d4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER 0x903010d8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER 0x903010dc
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER 0x903010e0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER 0x903010e4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER 0x903010e8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER 0x903010ec
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER 0x903010f0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER 0x903010f4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER 0x903010f8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER 0x903010fc
#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER 0x90301100
#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wch_dc               : 16 ; /* bits 15:0 */
    ca_uint32_t rch_dc               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_GLB_SRAM_TEST_CONTROL          0x90301104
#define LDMA_LDMA_GLB_SRAM_TEST_CONTROL_dft      0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sram0_rm             :  2 ; /* bits 1:0 */
    ca_uint32_t sram0_rme            :  1 ; /* bits 2:2 */
    ca_uint32_t sram0_test1          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sram1_rm             :  2 ; /* bits 9:8 */
    ca_uint32_t sram1_rme            :  1 ; /* bits 10:10 */
    ca_uint32_t sram1_test1          :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_GLB_SRAM_TEST_CONTROL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_GLB */
#ifndef __ASSEMBLER__
typedef struct {
  LDMA_LDMA_GLB_LDMA_CONTROL_t             LDMA_CONTROL;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  LDMA_LDMA_GLB_LDMA_RATE_LIMITER_t        LDMA_RATE_LIMITER;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB_t     LDMA_RATE_LIMITER_UB;          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  LDMA_LDMA_GLB_LDMA_BKT0_DWRR_t           LDMA_BKT0_DWRR;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  LDMA_LDMA_GLB_LDMA_BKT1_DWRR_t           LDMA_BKT1_DWRR;                /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0_t     MEM_START_ADDR_SEG_0;          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0_t       MEM_END_ADDR_SEG_0;            /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1_t     MEM_START_ADDR_SEG_1;          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1_t       MEM_END_ADDR_SEG_1;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2_t     MEM_START_ADDR_SEG_2;          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2_t       MEM_END_ADDR_SEG_2;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3_t     MEM_START_ADDR_SEG_3;          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3_t       MEM_END_ADDR_SEG_3;            /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4_t     MEM_START_ADDR_SEG_4;          /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4_t       MEM_END_ADDR_SEG_4;            /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5_t     MEM_START_ADDR_SEG_5;          /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5_t       MEM_END_ADDR_SEG_5;            /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6_t     MEM_START_ADDR_SEG_6;          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6_t       MEM_END_ADDR_SEG_6;            /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7_t     MEM_START_ADDR_SEG_7;          /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7_t       MEM_END_ADDR_SEG_7;            /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  LDMA_LDMA_GLB_AXPATTEN_0_t               AXPATTEN_0;                    /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  LDMA_LDMA_GLB_AXPATTEN_1_t               AXPATTEN_1;                    /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  LDMA_LDMA_GLB_AXPATTEN_2_t               AXPATTEN_2;                    /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  LDMA_LDMA_GLB_AXPATTEN_3_t               AXPATTEN_3;                    /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  LDMA_LDMA_GLB_AXPATTEN_4_t               AXPATTEN_4;                    /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  LDMA_LDMA_GLB_AXPATTEN_5_t               AXPATTEN_5;                    /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  LDMA_LDMA_GLB_AXPATTEN_6_t               AXPATTEN_6;                    /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  LDMA_LDMA_GLB_AXPATTEN_7_t               AXPATTEN_7;                    /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER_t    QUEUE_ASSIGN_REGISTER;         /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER_t   FAST_Q_ASSIGN_REGISTER;        /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER; /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER; /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER; /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER_t DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER_t DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER_t DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  LDMA_LDMA_GLB_SRAM_TEST_CONTROL_t        SRAM_TEST_CONTROL;             /* addr: 0x00000104 */
} APB1_LDMA_LDMA_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * AXIM2
 */

#define LDMA_AXIM2_CONFIG                        0x903011a0
#define LDMA_AXIM2_CONFIG_dft                    0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_write_outtrans_num :  4 ; /* bits 3:0 */
    ca_uint32_t axi_read_outtrans_num :  4 ; /* bits 7:4 */
    ca_uint32_t axi_xbus_len         :  3 ; /* bits 10:8 */
    ca_uint32_t write_cacheline_trans_en :  1 ; /* bits 11:11 */
    ca_uint32_t write_cacheline_trans_size :  1 ; /* bits 12:12 */
    ca_uint32_t read_cacheline_trans_en :  1 ; /* bits 13:13 */
    ca_uint32_t read_cacheline_trans_size :  1 ; /* bits 14:14 */
    ca_uint32_t arcache_eos_en       :  1 ; /* bits 15:15 */
    ca_uint32_t awcache_eos_en       :  1 ; /* bits 16:16 */
    ca_uint32_t reserved             : 15 ; /* bits 31:17 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_AXIM2_TIMEOUT_THRESHOLD             0x903011a4
#define LDMA_AXIM2_TIMEOUT_THRESHOLD_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_channel_threshold :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t write_channel_threshold :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_AXIM2_INTERRUPT_STATUS              0x903011a8
#define LDMA_AXIM2_INTERRUPT_STATUS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_AXIM2_INTERRUPT_ENABLE              0x903011ac
#define LDMA_AXIM2_INTERRUPT_ENABLE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int_en :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int_en :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int_en :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int_en :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int_en :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
  LDMA_AXIM2_CONFIG_t                      CONFIG;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  LDMA_AXIM2_TIMEOUT_THRESHOLD_t           TIMEOUT_THRESHOLD;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  LDMA_AXIM2_INTERRUPT_STATUS_t            INTERRUPT_STATUS;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  LDMA_AXIM2_INTERRUPT_ENABLE_t            INTERRUPT_ENABLE;              /* addr: 0x0000000c */
} APB1_LDMA_AXIM2_t;
#endif /* !__ASSEMBLER__ */


/*
 * LDMA_QUEUE[0..15]
 */

#define LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS        0x90301200
#define LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t desc_idx             :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t debug_mode           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 21 ;
    ca_uint32_t wrd_n                :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2         0x90301204
#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t length               : 12 ; /* bits 11:0 */
    ca_uint32_t rd_cmd_only          :  1 ; /* bits 12:12 */
    ca_uint32_t rd_trn_only          :  1 ; /* bits 13:13 */
    ca_uint32_t wr_zero_trn          :  1 ; /* bits 14:14 */
    ca_uint32_t ioc                  :  1 ; /* bits 15:15 */
    ca_uint32_t dst_addr_lpae        :  8 ; /* bits 23:16 */
    ca_uint32_t src_addr_lpae        :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1         0x90301208
#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dst_addr             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0         0x9030120c
#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t src_addr             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_CONTROL_REGISTER         0x90301210
#define LDMA_LDMA_QUEUE_CONTROL_REGISTER_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clsc_timer           : 16 ; /* bits 15:0 */
    ca_uint32_t clsc_threshold       :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t wch_axi_error        :  1 ; /* bits 24:24 */
    ca_uint32_t rch_axi_error        :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t reset                :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t en                   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_CONTROL_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_DWRR_REGISTER            0x90301214
#define LDMA_LDMA_QUEUE_DWRR_REGISTER_dft        0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t quantum_size         : 16 ; /* bits 15:0 */
    ca_uint32_t dc_upperbound        : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_DWRR_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_INTERRUPT_ENABLE         0x90301218
#define LDMA_LDMA_QUEUE_INTERRUPT_ENABLE_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dd_en                :  1 ; /* bits 0:0 */
    ca_uint32_t fov_en               :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_INTERRUPT_STATUS         0x9030121c
#define LDMA_LDMA_QUEUE_INTERRUPT_STATUS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t descriptor_done      :  1 ; /* bits 0:0 */
    ca_uint32_t fifo_overflow        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_QUEUE_POINTER_REGISTER         0x90301220
#define LDMA_LDMA_QUEUE_POINTER_REGISTER_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_ptr               :  4 ; /* bits 3:0 */
    ca_uint32_t rd_trans_rdptr       :  4 ; /* bits 7:4 */
    ca_uint32_t rd_trans_wrptr       :  4 ; /* bits 11:8 */
    ca_uint32_t wr_trans_rdptr       :  4 ; /* bits 15:12 */
    ca_uint32_t rd_ptr               :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t desc_depth           :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_QUEUE_POINTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define APB1_LDMA_LDMA_QUEUE_STRIDE              64
#define APB1_LDMA_LDMA_QUEUE_COUNT               16



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_QUEUE */
#ifndef __ASSEMBLER__
typedef struct {
  LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS_t      DESCRIPTOR_ACCESS;             /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2_t       DESCRIPTOR_DATA2;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1_t       DESCRIPTOR_DATA1;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0_t       DESCRIPTOR_DATA0;              /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  LDMA_LDMA_QUEUE_CONTROL_REGISTER_t       CONTROL_REGISTER;              /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  LDMA_LDMA_QUEUE_DWRR_REGISTER_t          DWRR_REGISTER;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  LDMA_LDMA_QUEUE_INTERRUPT_ENABLE_t       INTERRUPT_ENABLE;              /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  LDMA_LDMA_QUEUE_INTERRUPT_STATUS_t       INTERRUPT_STATUS;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  LDMA_LDMA_QUEUE_POINTER_REGISTER_t       POINTER_REGISTER;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[31];
} APB1_LDMA_LDMA_QUEUE_t;
#endif /* !__ASSEMBLER__ */


/*
 * LDMA_INTERRUPT_MUX
 */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE      0x90301600
#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS      0x90301604
#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE      0x90301608
#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS      0x9030160c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE      0x90301610
#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS      0x90301614
#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE      0x90301618
#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS      0x9030161c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE      0x90301620
#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS      0x90301624
#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE      0x90301628
#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS      0x9030162c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE      0x90301630
#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS      0x90301634
#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE      0x90301638
#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS      0x9030163c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_INTERRUPT_MUX */
#ifndef __ASSEMBLER__
typedef struct {
  LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t    IRQ0_ENABLE;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t    IRQ0_STATUS;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t    IRQ1_ENABLE;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t    IRQ1_STATUS;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t    IRQ2_ENABLE;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t    IRQ2_STATUS;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t    IRQ3_ENABLE;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t    IRQ3_STATUS;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t    IRQ4_ENABLE;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t    IRQ4_STATUS;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t    IRQ5_ENABLE;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t    IRQ5_STATUS;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t    IRQ6_ENABLE;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t    IRQ6_STATUS;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t    IRQ7_ENABLE;                   /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t    IRQ7_STATUS;                   /* addr: 0x0000003c */
} APB1_LDMA_LDMA_INTERRUPT_MUX_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA */

#ifndef __ASSEMBLER__
typedef struct {
  APB1_LDMA_LDMA_GLB_t                     LDMA_GLB;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[285];
  APB1_LDMA_AXIM2_t                        AXIM2;                         /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd2[89];
  APB1_LDMA_LDMA_QUEUE_t                   LDMA_QUEUE[16];                /* addr: 0x00000200 */
  APB1_LDMA_LDMA_INTERRUPT_MUX_t           LDMA_INTERRUPT_MUX;            /* addr: 0x00000600 */
} APB1_LDMA_t;
#endif /* !__ASSEMBLER__ */


/*
 * LDMA_RCPU
 */

/*
 * LDMA_QUEUE[0..15]
 */

#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS   0x90302200
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t desc_idx             :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t debug_mode           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 21 ;
    ca_uint32_t wrd_n                :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2    0x90302204
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t length               : 12 ; /* bits 11:0 */
    ca_uint32_t rd_cmd_only          :  1 ; /* bits 12:12 */
    ca_uint32_t rd_trn_only          :  1 ; /* bits 13:13 */
    ca_uint32_t wr_zero_trn          :  1 ; /* bits 14:14 */
    ca_uint32_t ioc                  :  1 ; /* bits 15:15 */
    ca_uint32_t dst_addr_lpae        :  8 ; /* bits 23:16 */
    ca_uint32_t src_addr_lpae        :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1    0x90302208
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dst_addr             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0    0x9030220c
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t src_addr             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER    0x90302210
#define LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clsc_timer           : 16 ; /* bits 15:0 */
    ca_uint32_t clsc_threshold       :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t wch_axi_error        :  1 ; /* bits 24:24 */
    ca_uint32_t rch_axi_error        :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t reset                :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t en                   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER       0x90302214
#define LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER_dft   0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t quantum_size         : 16 ; /* bits 15:0 */
    ca_uint32_t dc_upperbound        : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE    0x90302218
#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dd_en                :  1 ; /* bits 0:0 */
    ca_uint32_t fov_en               :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS    0x9030221c
#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t descriptor_done      :  1 ; /* bits 0:0 */
    ca_uint32_t fifo_overflow        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER    0x90302220
#define LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_ptr               :  4 ; /* bits 3:0 */
    ca_uint32_t rd_trans_rdptr       :  4 ; /* bits 7:4 */
    ca_uint32_t rd_trans_wrptr       :  4 ; /* bits 11:8 */
    ca_uint32_t wr_trans_rdptr       :  4 ; /* bits 15:12 */
    ca_uint32_t rd_ptr               :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t desc_depth           :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */


#define APB1_LDMA_RCPU_LDMA_QUEUE_STRIDE         64
#define APB1_LDMA_RCPU_LDMA_QUEUE_COUNT          16



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_QUEUE */
#ifndef __ASSEMBLER__
typedef struct {
  LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS_t DESCRIPTOR_ACCESS;             /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2_t  DESCRIPTOR_DATA2;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1_t  DESCRIPTOR_DATA1;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0_t  DESCRIPTOR_DATA0;              /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER_t  CONTROL_REGISTER;              /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER_t     DWRR_REGISTER;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE_t  INTERRUPT_ENABLE;              /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS_t  INTERRUPT_STATUS;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER_t  POINTER_REGISTER;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[31];
} APB1_LDMA_RCPU_LDMA_QUEUE_t;
#endif /* !__ASSEMBLER__ */


/*
 * LDMA_INTERRUPT_MUX
 */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE 0x90302600
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS 0x90302604
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE 0x90302608
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS 0x9030260c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE 0x90302610
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS 0x90302614
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE 0x90302618
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS 0x9030261c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE 0x90302620
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS 0x90302624
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE 0x90302628
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS 0x9030262c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE 0x90302630
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS 0x90302634
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE 0x90302638
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_en                :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_en                :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_en                :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_en                :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_en                :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_en                :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_en                :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_en                :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_en                :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_en                :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_en               :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_en               :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_en               :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_en               :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_en               :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_en               :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS 0x9030263c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Q0_status            :  1 ; /* bits 0:0 */
    ca_uint32_t Q1_status            :  1 ; /* bits 1:1 */
    ca_uint32_t Q2_status            :  1 ; /* bits 2:2 */
    ca_uint32_t Q3_status            :  1 ; /* bits 3:3 */
    ca_uint32_t Q4_status            :  1 ; /* bits 4:4 */
    ca_uint32_t Q5_status            :  1 ; /* bits 5:5 */
    ca_uint32_t Q6_status            :  1 ; /* bits 6:6 */
    ca_uint32_t Q7_status            :  1 ; /* bits 7:7 */
    ca_uint32_t Q8_status            :  1 ; /* bits 8:8 */
    ca_uint32_t Q9_status            :  1 ; /* bits 9:9 */
    ca_uint32_t Q10_status           :  1 ; /* bits 10:10 */
    ca_uint32_t Q11_status           :  1 ; /* bits 11:11 */
    ca_uint32_t Q12_status           :  1 ; /* bits 12:12 */
    ca_uint32_t Q13_status           :  1 ; /* bits 13:13 */
    ca_uint32_t Q14_status           :  1 ; /* bits 14:14 */
    ca_uint32_t Q15_status           :  1 ; /* bits 15:15 */
    ca_uint32_t axi_master_irq_status :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_INTERRUPT_MUX */
#ifndef __ASSEMBLER__
typedef struct {
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t IRQ0_ENABLE;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t IRQ0_STATUS;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t IRQ1_ENABLE;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t IRQ1_STATUS;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t IRQ2_ENABLE;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t IRQ2_STATUS;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t IRQ3_ENABLE;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t IRQ3_STATUS;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t IRQ4_ENABLE;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t IRQ4_STATUS;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t IRQ5_ENABLE;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t IRQ5_STATUS;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t IRQ6_ENABLE;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t IRQ6_STATUS;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t IRQ7_ENABLE;                   /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t IRQ7_STATUS;                   /* addr: 0x0000003c */
} APB1_LDMA_RCPU_LDMA_INTERRUPT_MUX_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_RCPU */

#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              rsrvd1[512];
  APB1_LDMA_RCPU_LDMA_QUEUE_t              LDMA_QUEUE[16];                /* addr: 0x00000200 */
  APB1_LDMA_RCPU_LDMA_INTERRUPT_MUX_t      LDMA_INTERRUPT_MUX;            /* addr: 0x00000600 */
} APB1_LDMA_RCPU_t;
#endif /* !__ASSEMBLER__ */


/*
 * PE_CTRL
 */

#define PE_CTRL_PES_ADDR_MASTER_CONFIG           0x90303000
#define PE_CTRL_PES_ADDR_MASTER_CONFIG_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe0s_shift_en        :  1 ; /* bits 0:0 */
    ca_uint32_t pe1s_shift_en        :  1 ; /* bits 1:1 */
    ca_uint32_t pe0s_slave_prot      :  1 ; /* bits 2:2 */
    ca_uint32_t pe1s_slave_prot      :  1 ; /* bits 3:3 */
    ca_uint32_t pe0_isolation_en     :  1 ; /* bits 4:4 */
    ca_uint32_t pe1_isolation_en     :  1 ; /* bits 5:5 */
    ca_uint32_t pe0_powercut_ctrl    :  1 ; /* bits 6:6 */
    ca_uint32_t pe1_powercut_ctrl    :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PES_ADDR_MASTER_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE0S_ADDR_CONFIG                 0x90303004
#define PE_CTRL_PE0S_ADDR_CONFIG_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe0s_addr_val        : 16 ; /* bits 15:0 */
    ca_uint32_t pe0s_addr_mask       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE0S_ADDR_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE1S_ADDR_CONFIG                 0x90303008
#define PE_CTRL_PE1S_ADDR_CONFIG_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe1s_addr_val        : 16 ; /* bits 15:0 */
    ca_uint32_t pe1s_addr_mask       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE1S_ADDR_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_AXI_CTRL_PE0                     0x9030300c
#define PE_CTRL_AXI_CTRL_PE0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arqos_pe             :  4 ; /* bits 3:0 */
    ca_uint32_t awqos_pe             :  4 ; /* bits 7:4 */
    ca_uint32_t ruser_pe             :  4 ; /* bits 11:8 */
    ca_uint32_t buser_pe             :  4 ; /* bits 15:12 */
    ca_uint32_t aruser_pes           :  4 ; /* bits 19:16 */
    ca_uint32_t awuser_pes           :  4 ; /* bits 23:20 */
    ca_uint32_t wuser_pes            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_AXI_CTRL_PE0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_AXI_CTRL1_PE0                    0x90303010
#define PE_CTRL_AXI_CTRL1_PE0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_pe            : 14 ; /* bits 13:0 */
    ca_uint32_t awuser_pe            : 14 ; /* bits 27:14 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_AXI_CTRL1_PE0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_AXI_CTRL_PE1                     0x90303014
#define PE_CTRL_AXI_CTRL_PE1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arqos_pe             :  4 ; /* bits 3:0 */
    ca_uint32_t awqos_pe             :  4 ; /* bits 7:4 */
    ca_uint32_t ruser_pe             :  4 ; /* bits 11:8 */
    ca_uint32_t buser_pe             :  4 ; /* bits 15:12 */
    ca_uint32_t aruser_pes           :  4 ; /* bits 19:16 */
    ca_uint32_t awuser_pes           :  4 ; /* bits 23:20 */
    ca_uint32_t wuser_pes            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_AXI_CTRL_PE1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_AXI_CTRL1_PE1                    0x90303018
#define PE_CTRL_AXI_CTRL1_PE1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser_pe            : 14 ; /* bits 13:0 */
    ca_uint32_t awuser_pe            : 14 ; /* bits 27:14 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_AXI_CTRL1_PE1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_QM_AGG_INTERRUPT_0            0x9030301c
#define PE_CTRL_PE_QM_AGG_INTERRUPT_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPU_REFILL_REQ_0i    :  1 ; /* bits 0:0 */
    ca_uint32_t CPU_REFILL_REQ_1i    :  1 ; /* bits 1:1 */
    ca_uint32_t CPU_REFILL_REQ_2i    :  1 ; /* bits 2:2 */
    ca_uint32_t CPU_REFILL_REQ_3i    :  1 ; /* bits 3:3 */
    ca_uint32_t CPU_REFILL_REQ_4i    :  1 ; /* bits 4:4 */
    ca_uint32_t CPU_REFILL_REQ_5i    :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_REFILL_REQ_6i    :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_REFILL_REQ_7i    :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_REFILL_REQ_8i    :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_REFILL_REQ_9i    :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_REFILL_REQ_10i   :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_REFILL_REQ_11i   :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_REFILL_REQ_12i   :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_REFILL_REQ_13i   :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_HIi :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_LOi :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_EPP_FIFO_0i      :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_EPP_FIFO_1i      :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_EPP_FIFO_2i      :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_EPP_FIFO_3i      :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_EPP_FIFO_4i      :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_EPP_FIFO_5i      :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_EPP_FIFO_6i      :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_EPP_FIFO_7i      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_QM_AGG_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_QM_AGG_INTENABLE_0            0x90303020
#define PE_CTRL_PE_QM_AGG_INTENABLE_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPU_REFILL_REQ_0e    :  1 ; /* bits 0:0 */
    ca_uint32_t CPU_REFILL_REQ_1e    :  1 ; /* bits 1:1 */
    ca_uint32_t CPU_REFILL_REQ_2e    :  1 ; /* bits 2:2 */
    ca_uint32_t CPU_REFILL_REQ_3e    :  1 ; /* bits 3:3 */
    ca_uint32_t CPU_REFILL_REQ_4e    :  1 ; /* bits 4:4 */
    ca_uint32_t CPU_REFILL_REQ_5e    :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_REFILL_REQ_6e    :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_REFILL_REQ_7e    :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_REFILL_REQ_8e    :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_REFILL_REQ_9e    :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_REFILL_REQ_10e   :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_REFILL_REQ_11e   :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_REFILL_REQ_12e   :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_REFILL_REQ_13e   :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_HIe :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_LOe :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_EPP_FIFO_0e      :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_EPP_FIFO_1e      :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_EPP_FIFO_2e      :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_EPP_FIFO_3e      :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_EPP_FIFO_4e      :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_EPP_FIFO_5e      :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_EPP_FIFO_6e      :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_EPP_FIFO_7e      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_QM_AGG_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_AGG_INTERRUPT_0               0x90303024
#define PE_CTRL_PE_AGG_INTERRUPT_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IRQ_soft0iSeti       :  1 ; /* bits 0:0 */
    ca_uint32_t IRQ_soft1iSeti       :  1 ; /* bits 1:1 */
    ca_uint32_t ipc_int_pe0i         :  1 ; /* bits 2:2 */
    ca_uint32_t ipc_int_pe1i         :  1 ; /* bits 3:3 */
    ca_uint32_t PER_UART0_INT_1i     :  1 ; /* bits 4:4 */
    ca_uint32_t PER_UART1_INT_1i     :  1 ; /* bits 5:5 */
    ca_uint32_t PER_UART2_INT_1i     :  1 ; /* bits 6:6 */
    ca_uint32_t PER_UART3_INT_1i     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t XFI0_INTERRUPTi      :  1 ; /* bits 9:9 */
    ca_uint32_t XFI1_INTERRUPTi      :  1 ; /* bits 10:10 */
    ca_uint32_t PER_PERIPHERAL_INTERRUPT_1i :  1 ; /* bits 11:11 */
    ca_uint32_t WOL_INTERRUPTi       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_AGG_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_AGG_INTENABLE_0               0x90303028
#define PE_CTRL_PE_AGG_INTENABLE_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IRQ_soft0iSete       :  1 ; /* bits 0:0 */
    ca_uint32_t IRQ_soft1iSete       :  1 ; /* bits 1:1 */
    ca_uint32_t ipc_int_pe0e         :  1 ; /* bits 2:2 */
    ca_uint32_t ipc_int_pe1e         :  1 ; /* bits 3:3 */
    ca_uint32_t PER_UART0_INT_1e     :  1 ; /* bits 4:4 */
    ca_uint32_t PER_UART1_INT_1e     :  1 ; /* bits 5:5 */
    ca_uint32_t PER_UART2_INT_1e     :  1 ; /* bits 6:6 */
    ca_uint32_t PER_UART3_INT_1e     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t XFI0_INTERRUPTe      :  1 ; /* bits 9:9 */
    ca_uint32_t XFI1_INTERRUPTe      :  1 ; /* bits 10:10 */
    ca_uint32_t PER_PERIPHERAL_INTERRUPT_1e :  1 ; /* bits 11:11 */
    ca_uint32_t WOL_INTERRUPTe       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_AGG_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_QM_AGG_INTERRUPT_1            0x9030302c
#define PE_CTRL_PE_QM_AGG_INTERRUPT_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPU_REFILL_REQ_0i    :  1 ; /* bits 0:0 */
    ca_uint32_t CPU_REFILL_REQ_1i    :  1 ; /* bits 1:1 */
    ca_uint32_t CPU_REFILL_REQ_2i    :  1 ; /* bits 2:2 */
    ca_uint32_t CPU_REFILL_REQ_3i    :  1 ; /* bits 3:3 */
    ca_uint32_t CPU_REFILL_REQ_4i    :  1 ; /* bits 4:4 */
    ca_uint32_t CPU_REFILL_REQ_5i    :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_REFILL_REQ_6i    :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_REFILL_REQ_7i    :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_REFILL_REQ_8i    :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_REFILL_REQ_9i    :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_REFILL_REQ_10i   :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_REFILL_REQ_11i   :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_REFILL_REQ_12i   :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_REFILL_REQ_13i   :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_HIi :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_LOi :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_EPP_FIFO_0i      :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_EPP_FIFO_1i      :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_EPP_FIFO_2i      :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_EPP_FIFO_3i      :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_EPP_FIFO_4i      :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_EPP_FIFO_5i      :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_EPP_FIFO_6i      :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_EPP_FIFO_7i      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_QM_AGG_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_QM_AGG_INTENABLE_1            0x90303030
#define PE_CTRL_PE_QM_AGG_INTENABLE_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPU_REFILL_REQ_0e    :  1 ; /* bits 0:0 */
    ca_uint32_t CPU_REFILL_REQ_1e    :  1 ; /* bits 1:1 */
    ca_uint32_t CPU_REFILL_REQ_2e    :  1 ; /* bits 2:2 */
    ca_uint32_t CPU_REFILL_REQ_3e    :  1 ; /* bits 3:3 */
    ca_uint32_t CPU_REFILL_REQ_4e    :  1 ; /* bits 4:4 */
    ca_uint32_t CPU_REFILL_REQ_5e    :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_REFILL_REQ_6e    :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_REFILL_REQ_7e    :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_REFILL_REQ_8e    :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_REFILL_REQ_9e    :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_REFILL_REQ_10e   :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_REFILL_REQ_11e   :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_REFILL_REQ_12e   :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_REFILL_REQ_13e   :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_HIe :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_LOe :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_EPP_FIFO_0e      :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_EPP_FIFO_1e      :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_EPP_FIFO_2e      :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_EPP_FIFO_3e      :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_EPP_FIFO_4e      :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_EPP_FIFO_5e      :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_EPP_FIFO_6e      :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_EPP_FIFO_7e      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_QM_AGG_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_AGG_INTERRUPT_1               0x90303034
#define PE_CTRL_PE_AGG_INTERRUPT_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IRQ_soft0iSeti       :  1 ; /* bits 0:0 */
    ca_uint32_t IRQ_soft1iSeti       :  1 ; /* bits 1:1 */
    ca_uint32_t ipc_int_pe0i         :  1 ; /* bits 2:2 */
    ca_uint32_t ipc_int_pe1i         :  1 ; /* bits 3:3 */
    ca_uint32_t PER_UART0_INT_1i     :  1 ; /* bits 4:4 */
    ca_uint32_t PER_UART1_INT_1i     :  1 ; /* bits 5:5 */
    ca_uint32_t PER_UART2_INT_1i     :  1 ; /* bits 6:6 */
    ca_uint32_t PER_UART3_INT_1i     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t XFI0_INTERRUPTi      :  1 ; /* bits 9:9 */
    ca_uint32_t XFI1_INTERRUPTi      :  1 ; /* bits 10:10 */
    ca_uint32_t PER_PERIPHERAL_INTERRUPT_1i :  1 ; /* bits 11:11 */
    ca_uint32_t WOL_INTERRUPTi       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_AGG_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_AGG_INTENABLE_1               0x90303038
#define PE_CTRL_PE_AGG_INTENABLE_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IRQ_soft0iSete       :  1 ; /* bits 0:0 */
    ca_uint32_t IRQ_soft1iSete       :  1 ; /* bits 1:1 */
    ca_uint32_t ipc_int_pe0e         :  1 ; /* bits 2:2 */
    ca_uint32_t ipc_int_pe1e         :  1 ; /* bits 3:3 */
    ca_uint32_t PER_UART0_INT_1e     :  1 ; /* bits 4:4 */
    ca_uint32_t PER_UART1_INT_1e     :  1 ; /* bits 5:5 */
    ca_uint32_t PER_UART2_INT_1e     :  1 ; /* bits 6:6 */
    ca_uint32_t PER_UART3_INT_1e     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t XFI0_INTERRUPTe      :  1 ; /* bits 9:9 */
    ca_uint32_t XFI1_INTERRUPTe      :  1 ; /* bits 10:10 */
    ca_uint32_t PER_PERIPHERAL_INTERRUPT_1e :  1 ; /* bits 11:11 */
    ca_uint32_t WOL_INTERRUPTe       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_AGG_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_DSS_CONFIG_0                  0x9030303c
#define PE_CTRL_PE_DSS_CONFIG_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dss_rst_n            :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_DSS_CONFIG_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_DSS_STATUS_0                  0x90303040
#define PE_CTRL_PE_DSS_STATUS_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_DSS_STATUS_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_DSS_CONFIG_1                  0x90303044
#define PE_CTRL_PE_DSS_CONFIG_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dss_rst_n            :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_DSS_CONFIG_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_DSS_STATUS_1                  0x90303048
#define PE_CTRL_PE_DSS_STATUS_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_DSS_STATUS_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_CRYPTO_PROT                      0x9030304c
#define PE_CTRL_CRYPTO_PROT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t override_c0m         :  2 ; /* bits 1:0 */
    ca_uint32_t override_c1m         :  2 ; /* bits 3:2 */
    ca_uint32_t override_c0s         :  2 ; /* bits 5:4 */
    ca_uint32_t override_c1s         :  2 ; /* bits 7:6 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_CRYPTO_PROT_t;
#endif /* !__ASSEMBLER__ */

#define     override_c1s_PASS                             0x0
#define     override_c1s_OVSEC                            0x1
#define     override_c1s_OVNS                             0x2
#define     override_c0s_PASS                             0x0
#define     override_c0s_OVSEC                            0x1
#define     override_c0s_OVNS                             0x2
#define     override_c1m_PASS                             0x0
#define     override_c1m_OVSEC                            0x1
#define     override_c1m_OVNS                             0x2
#define     override_c0m_PASS                             0x0
#define     override_c0m_OVSEC                            0x1
#define     override_c0m_OVNS                             0x2

#define PE_CTRL_PE_BUS_DEBUG_CTRL                0x90303050
#define PE_CTRL_PE_BUS_DEBUG_CTRL_dft            0x0000fffc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_timeout_axi      : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_clr_fail_t_axi   :  1 ; /* bits 16:16 */
    ca_uint32_t cfg_clr_fail_r_axi   :  1 ; /* bits 17:17 */
    ca_uint32_t cfg_clr_debug_axi    :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cfg_debug_sel_axi    :  5 ; /* bits 24:20 */
    ca_uint32_t cfg_debug_sel_pe     :  3 ; /* bits 27:25 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_BUS_DEBUG_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_BUS_DEBUG_STATUS              0x90303054
#define PE_CTRL_PE_BUS_DEBUG_STATUS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_dbg_out          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_BUS_DEBUG_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_CRYPT1_SLV_ID                    0x90303058
#define PE_CTRL_CRYPT1_SLV_ID_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_id_entry0        :  6 ; /* bits 5:0 */
    ca_uint32_t reg_id_entry1        :  6 ; /* bits 11:6 */
    ca_uint32_t reg_id_entry2        :  6 ; /* bits 17:12 */
    ca_uint32_t reg_id_entry3        :  6 ; /* bits 23:18 */
    ca_uint32_t reg_id_en0           :  1 ; /* bits 24:24 */
    ca_uint32_t reg_id_en1           :  1 ; /* bits 25:25 */
    ca_uint32_t reg_id_en2           :  1 ; /* bits 26:26 */
    ca_uint32_t reg_id_en3           :  1 ; /* bits 27:27 */
    ca_uint32_t reg_enabled          :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_CRYPT1_SLV_ID_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_CRYPT1_SLV_ID_MASK               0x9030305c
#define PE_CTRL_CRYPT1_SLV_ID_MASK_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_id_entry_mask0   :  6 ; /* bits 5:0 */
    ca_uint32_t reg_id_entry_mask1   :  6 ; /* bits 11:6 */
    ca_uint32_t reg_id_entry_mask2   :  6 ; /* bits 17:12 */
    ca_uint32_t reg_id_entry_mask3   :  6 ; /* bits 23:18 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_CRYPT1_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_SADB_SLV_ID                      0x90303060
#define PE_CTRL_SADB_SLV_ID_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_id_entry0        :  6 ; /* bits 5:0 */
    ca_uint32_t reg_id_entry1        :  6 ; /* bits 11:6 */
    ca_uint32_t reg_id_entry2        :  6 ; /* bits 17:12 */
    ca_uint32_t reg_id_entry3        :  6 ; /* bits 23:18 */
    ca_uint32_t reg_id_en0           :  1 ; /* bits 24:24 */
    ca_uint32_t reg_id_en1           :  1 ; /* bits 25:25 */
    ca_uint32_t reg_id_en2           :  1 ; /* bits 26:26 */
    ca_uint32_t reg_id_en3           :  1 ; /* bits 27:27 */
    ca_uint32_t reg_enabled          :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_SADB_SLV_ID_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_SADB_SLV_ID_MASK                 0x90303064
#define PE_CTRL_SADB_SLV_ID_MASK_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_id_entry_mask0   :  6 ; /* bits 5:0 */
    ca_uint32_t reg_id_entry_mask1   :  6 ; /* bits 11:6 */
    ca_uint32_t reg_id_entry_mask2   :  6 ; /* bits 17:12 */
    ca_uint32_t reg_id_entry_mask3   :  6 ; /* bits 23:18 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_SADB_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_TAROKO0_RM_0                     0x90303068
#define PE_CTRL_TAROKO0_RM_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2c_RM10_L2CACHE_DATA3 :  2 ; /* bits 1:0 */
    ca_uint32_t l2c_RM10_L2CACHE_DATA2 :  2 ; /* bits 3:2 */
    ca_uint32_t l2c_RM10_L2CACHE_DATA1 :  2 ; /* bits 5:4 */
    ca_uint32_t l2c_RM10_L2CACHE_DATA0 :  2 ; /* bits 7:6 */
    ca_uint32_t l2c_RM10_L2CACHE_TAG :  2 ; /* bits 9:8 */
    ca_uint32_t l2c_RM10_L2CACHE_LRU :  2 ; /* bits 11:10 */
    ca_uint32_t RM10_i_pht_sram      :  2 ; /* bits 13:12 */
    ca_uint32_t RM10_i_btb_tag_sram  :  2 ; /* bits 15:14 */
    ca_uint32_t RM10_i_btb_data_sram :  2 ; /* bits 17:16 */
    ca_uint32_t RM10_IRAM0           :  2 ; /* bits 19:18 */
    ca_uint32_t RM10_ICACHE_TAG      :  2 ; /* bits 21:20 */
    ca_uint32_t RM10_ICACHE_LRU      :  2 ; /* bits 23:22 */
    ca_uint32_t RM10_ICACHE_DATA     :  2 ; /* bits 25:24 */
    ca_uint32_t RM10_DRAM1           :  2 ; /* bits 27:26 */
    ca_uint32_t RM10_DRAM0           :  2 ; /* bits 29:28 */
    ca_uint32_t RM10_DCACHE_TAG      :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_TAROKO0_RM_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_TAROKO0_RM_1                     0x9030306c
#define PE_CTRL_TAROKO0_RM_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RM10_DCACHE_DATA     :  2 ; /* bits 1:0 */
    ca_uint32_t ALL_RM32             :  2 ; /* bits 3:2 */
    ca_uint32_t ALL_TEST1            :  1 ; /* bits 4:4 */
    ca_uint32_t ALL_SD               :  1 ; /* bits 5:5 */
    ca_uint32_t ALL_RME              :  1 ; /* bits 6:6 */
    ca_uint32_t ALL_LS               :  1 ; /* bits 7:7 */
    ca_uint32_t ALL_DS               :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_TAROKO0_RM_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_TAROKO1_RM_0                     0x90303070
#define PE_CTRL_TAROKO1_RM_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2c_RM10_L2CACHE_DATA3 :  2 ; /* bits 1:0 */
    ca_uint32_t l2c_RM10_L2CACHE_DATA2 :  2 ; /* bits 3:2 */
    ca_uint32_t l2c_RM10_L2CACHE_DATA1 :  2 ; /* bits 5:4 */
    ca_uint32_t l2c_RM10_L2CACHE_DATA0 :  2 ; /* bits 7:6 */
    ca_uint32_t l2c_RM10_L2CACHE_TAG :  2 ; /* bits 9:8 */
    ca_uint32_t l2c_RM10_L2CACHE_LRU :  2 ; /* bits 11:10 */
    ca_uint32_t RM10_i_pht_sram      :  2 ; /* bits 13:12 */
    ca_uint32_t RM10_i_btb_tag_sram  :  2 ; /* bits 15:14 */
    ca_uint32_t RM10_i_btb_data_sram :  2 ; /* bits 17:16 */
    ca_uint32_t RM10_IRAM0           :  2 ; /* bits 19:18 */
    ca_uint32_t RM10_ICACHE_TAG      :  2 ; /* bits 21:20 */
    ca_uint32_t RM10_ICACHE_LRU      :  2 ; /* bits 23:22 */
    ca_uint32_t RM10_ICACHE_DATA     :  2 ; /* bits 25:24 */
    ca_uint32_t RM10_DRAM1           :  2 ; /* bits 27:26 */
    ca_uint32_t RM10_DRAM0           :  2 ; /* bits 29:28 */
    ca_uint32_t RM10_DCACHE_TAG      :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_TAROKO1_RM_0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_TAROKO1_RM_1                     0x90303074
#define PE_CTRL_TAROKO1_RM_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RM10_DCACHE_DATA     :  2 ; /* bits 1:0 */
    ca_uint32_t ALL_RM32             :  2 ; /* bits 3:2 */
    ca_uint32_t ALL_TEST1            :  1 ; /* bits 4:4 */
    ca_uint32_t ALL_SD               :  1 ; /* bits 5:5 */
    ca_uint32_t ALL_RME              :  1 ; /* bits 6:6 */
    ca_uint32_t ALL_LS               :  1 ; /* bits 7:7 */
    ca_uint32_t ALL_DS               :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_TAROKO1_RM_1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_SADB_RM                          0x90303078
#define PE_CTRL_SADB_RM_dft                      0x00022222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sadb_sramtest        : 16 ; /* bits 15:0 */
    ca_uint32_t pel2_sramtest        :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_SADB_RM_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_CRYPTO1_RM1                      0x9030307c
#define PE_CTRL_CRYPTO1_RM1_dft                  0x00002222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crypto1_sramtest1    : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_CRYPTO1_RM1_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_CRYPTO1_RM0                      0x90303080
#define PE_CTRL_CRYPTO1_RM0_dft                  0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crypto1_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_CRYPTO1_RM0_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_CRYPTO2_RM                       0x90303084
#define PE_CTRL_CRYPTO2_RM_dft                   0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crypto2_sramtest     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_CRYPTO2_RM_t;
#endif /* !__ASSEMBLER__ */


#define PE_CTRL_PE_LS                            0x90303088
#define PE_CTRL_PE_LS_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t capsram_repair_sramls :  4 ; /* bits 3:0 */
    ca_uint32_t crypto0_1_sramls     :  6 ; /* bits 9:4 */
    ca_uint32_t crypto1_1_sramls     :  6 ; /* bits 15:10 */
    ca_uint32_t crypto0_2_sramls     :  2 ; /* bits 17:16 */
    ca_uint32_t crypto1_2_sramls     :  2 ; /* bits 19:18 */
    ca_uint32_t ldma_sramls          :  2 ; /* bits 21:20 */
    ca_uint32_t sadb_sramls          :  2 ; /* bits 23:22 */
    ca_uint32_t pel2_sramls          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} PE_CTRL_PE_LS_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE_CTRL */
#ifndef __ASSEMBLER__
typedef struct {
  PE_CTRL_PES_ADDR_MASTER_CONFIG_t         PES_ADDR_MASTER_CONFIG;        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PE_CTRL_PE0S_ADDR_CONFIG_t               PE0S_ADDR_CONFIG;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PE_CTRL_PE1S_ADDR_CONFIG_t               PE1S_ADDR_CONFIG;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PE_CTRL_AXI_CTRL_PE0_t                   AXI_CTRL_PE0;                  /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PE_CTRL_AXI_CTRL1_PE0_t                  AXI_CTRL1_PE0;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PE_CTRL_AXI_CTRL_PE1_t                   AXI_CTRL_PE1;                  /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PE_CTRL_AXI_CTRL1_PE1_t                  AXI_CTRL1_PE1;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PE_CTRL_PE_QM_AGG_INTERRUPT_0_t          PE_QM_AGG_INTERRUPT_0;         /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PE_CTRL_PE_QM_AGG_INTENABLE_0_t          PE_QM_AGG_INTENABLE_0;         /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PE_CTRL_PE_AGG_INTERRUPT_0_t             PE_AGG_INTERRUPT_0;            /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PE_CTRL_PE_AGG_INTENABLE_0_t             PE_AGG_INTENABLE_0;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PE_CTRL_PE_QM_AGG_INTERRUPT_1_t          PE_QM_AGG_INTERRUPT_1;         /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PE_CTRL_PE_QM_AGG_INTENABLE_1_t          PE_QM_AGG_INTENABLE_1;         /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PE_CTRL_PE_AGG_INTERRUPT_1_t             PE_AGG_INTERRUPT_1;            /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PE_CTRL_PE_AGG_INTENABLE_1_t             PE_AGG_INTENABLE_1;            /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PE_CTRL_PE_DSS_CONFIG_0_t                PE_DSS_CONFIG_0;               /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PE_CTRL_PE_DSS_STATUS_0_t                PE_DSS_STATUS_0;               /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PE_CTRL_PE_DSS_CONFIG_1_t                PE_DSS_CONFIG_1;               /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PE_CTRL_PE_DSS_STATUS_1_t                PE_DSS_STATUS_1;               /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PE_CTRL_CRYPTO_PROT_t                    CRYPTO_PROT;                   /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PE_CTRL_PE_BUS_DEBUG_CTRL_t              PE_BUS_DEBUG_CTRL;             /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PE_CTRL_PE_BUS_DEBUG_STATUS_t            PE_BUS_DEBUG_STATUS;           /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PE_CTRL_CRYPT1_SLV_ID_t                  CRYPT1_SLV_ID;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PE_CTRL_CRYPT1_SLV_ID_MASK_t             CRYPT1_SLV_ID_MASK;            /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PE_CTRL_SADB_SLV_ID_t                    SADB_SLV_ID;                   /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PE_CTRL_SADB_SLV_ID_MASK_t               SADB_SLV_ID_MASK;              /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PE_CTRL_TAROKO0_RM_0_t                   TAROKO0_RM_0;                  /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PE_CTRL_TAROKO0_RM_1_t                   TAROKO0_RM_1;                  /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PE_CTRL_TAROKO1_RM_0_t                   TAROKO1_RM_0;                  /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PE_CTRL_TAROKO1_RM_1_t                   TAROKO1_RM_1;                  /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PE_CTRL_SADB_RM_t                        SADB_RM;                       /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PE_CTRL_CRYPTO1_RM1_t                    CRYPTO1_RM1;                   /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PE_CTRL_CRYPTO1_RM0_t                    CRYPTO1_RM0;                   /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PE_CTRL_CRYPTO2_RM_t                     CRYPTO2_RM;                    /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PE_CTRL_PE_LS_t                          PE_LS;                         /* addr: 0x00000088 */
} APB1_PE_CTRL_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB1 */

#ifndef __ASSEMBLER__
typedef struct {
  APB1_PE0_ATU_t                           PE0_ATU;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[241];
  APB1_PE1_ATU_t                           PE1_ATU;                       /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[241];
  APB1_CRYPTO0_ATU_t                       CRYPTO0_ATU;                   /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd3[497];
  APB1_CRYPTO1_ATU_t                       CRYPTO1_ATU;                   /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd4[3057];
  APB1_LDMA_t                              LDMA;                          /* addr: 0x00001000 */
  ca_uint32_t                              rsrvd5[2529];
  APB1_LDMA_RCPU_t                         LDMA_RCPU;                     /* addr: 0x00002000 */
  ca_uint32_t                              rsrvd6[2529];
  APB1_PE_CTRL_t                           PE_CTRL;                       /* addr: 0x00003000 */
} APB1_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB0
 */

/*
 * NE_L23
 */

/*
 * L2FE
 */

/*
 * GLB
 */

#define L2FE_GLB_VER_CTRL                        0xf4301000
#define L2FE_GLB_VER_CTRL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rev_id               : 16 ; /* bits 15:0 */
    ca_uint32_t ver_id               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_VER_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_CTRL                            0xf4301004
#define L2FE_GLB_CTRL_dft                        0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t soft_reset           :  1 ; /* bits 0:0 */
    ca_uint32_t pipeline_clk_num     :  5 ; /* bits 5:1 */
    ca_uint32_t change_ip_if_pop_en  :  1 ; /* bits 6:6 */
    ca_uint32_t qos_enhance_mode     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_INTERRUPT                       0xf4301008
#define L2FE_GLB_INTERRUPT_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t lf_overflow_intI     :  1 ; /* bits 1:1 */
    ca_uint32_t ple_hd_ff_overflow_intI :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t port_mac_lmt_excd_intI :  1 ; /* bits 8:8 */
    ca_uint32_t l2e_hash_collision_intI :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd3               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_INTERRUPTE                      0xf430100c
#define L2FE_GLB_INTERRUPTE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t lf_overflow_intIE    :  1 ; /* bits 1:1 */
    ca_uint32_t ple_hd_ff_overflow_intIE :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t port_mac_lmt_excd_intIE :  1 ; /* bits 8:8 */
    ca_uint32_t l2e_hash_collision_intIE :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd3               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_STTS                            0xf4301010
#define L2FE_GLB_STTS_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2fe_init_done       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_STTS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_L2FE_CFG_SPARE                  0xf4301014
#define L2FE_GLB_L2FE_CFG_SPARE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bit                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_L2FE_CFG_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_L2FE_STTS_SPARE                 0xf4301018
#define L2FE_GLB_L2FE_STTS_SPARE_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bit                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_L2FE_STTS_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_0             0xf430101c
#define L2FE_GLB_SRAM_TEST_CONTROL_0_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_1             0xf4301020
#define L2FE_GLB_SRAM_TEST_CONTROL_1_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_2             0xf4301024
#define L2FE_GLB_SRAM_TEST_CONTROL_2_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_3             0xf4301028
#define L2FE_GLB_SRAM_TEST_CONTROL_3_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_4             0xf430102c
#define L2FE_GLB_SRAM_TEST_CONTROL_4_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_5             0xf4301030
#define L2FE_GLB_SRAM_TEST_CONTROL_5_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_5_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_6             0xf4301034
#define L2FE_GLB_SRAM_TEST_CONTROL_6_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_6_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_7             0xf4301038
#define L2FE_GLB_SRAM_TEST_CONTROL_7_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_7_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_8             0xf430103c
#define L2FE_GLB_SRAM_TEST_CONTROL_8_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_8_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_9             0xf4301040
#define L2FE_GLB_SRAM_TEST_CONTROL_9_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_9_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_10            0xf4301044
#define L2FE_GLB_SRAM_TEST_CONTROL_10_dft        0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_10_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_11            0xf4301048
#define L2FE_GLB_SRAM_TEST_CONTROL_11_dft        0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test1_3              :  1 ; /* bits 29:29 */
    ca_uint32_t test0_3              :  1 ; /* bits 30:30 */
    ca_uint32_t reserved3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_11_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_TEST_CONTROL_12            0xf430104c
#define L2FE_GLB_SRAM_TEST_CONTROL_12_dft        0x00020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test1_0              :  1 ; /* bits 5:5 */
    ca_uint32_t test0_0              :  1 ; /* bits 6:6 */
    ca_uint32_t reserved0            :  1 ; /* bits 7:7 */
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1_1              :  1 ; /* bits 13:13 */
    ca_uint32_t test0_1              :  1 ; /* bits 14:14 */
    ca_uint32_t reserved1            :  1 ; /* bits 15:15 */
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test1_2              :  1 ; /* bits 21:21 */
    ca_uint32_t test0_2              :  1 ; /* bits 22:22 */
    ca_uint32_t reserved2            :  1 ; /* bits 23:23 */
    ca_uint32_t reserved3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_TEST_CONTROL_12_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_LS_CONTROL_1               0xf4301050
#define L2FE_GLB_SRAM_LS_CONTROL_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2fe4_sramls         :  7 ; /* bits 6:0 */
    ca_uint32_t l2fe5_sramls         :  9 ; /* bits 15:7 */
    ca_uint32_t l2fe6_sramls         :  6 ; /* bits 21:16 */
    ca_uint32_t l2fe7_sramls         :  2 ; /* bits 23:22 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_LS_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_SRAM_LS_CONTROL_0               0xf4301054
#define L2FE_GLB_SRAM_LS_CONTROL_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2fe1_sramls         : 12 ; /* bits 11:0 */
    ca_uint32_t l2fe2_sramls         :  1 ; /* bits 12:12 */
    ca_uint32_t l2fe2_tcam_sramls    :  2 ; /* bits 14:13 */
    ca_uint32_t l2fe3_sramls         : 12 ; /* bits 26:15 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_SRAM_LS_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_L2FE_MONITOR_TRIG               0xf4301058
#define L2FE_GLB_L2FE_MONITOR_TRIG_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 30 ;
    ca_uint32_t mode                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_L2FE_MONITOR_TRIG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_L2FE_MONITOR_CTRL               0xf430105c
#define L2FE_GLB_L2FE_MONITOR_CTRL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_sel              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_L2FE_MONITOR_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_L2FE_MONITOR_RETURN             0xf4301060
#define L2FE_GLB_L2FE_MONITOR_RETURN_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_L2FE_MONITOR_RETURN_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_GLB_DEBUG                           0xf4301064
#define L2FE_GLB_DEBUG_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_sel              :  4 ; /* bits 3:0 */
    ca_uint32_t plx_bus_sel          :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_GLB_DEBUG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_GLB_VER_CTRL_t                      VER_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_GLB_CTRL_t                          CTRL;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_GLB_INTERRUPT_t                     INTERRUPT;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_GLB_INTERRUPTE_t                    INTERRUPTE;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_GLB_STTS_t                          STTS;                          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_GLB_L2FE_CFG_SPARE_t                L2FE_CFG_SPARE;                /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_GLB_L2FE_STTS_SPARE_t               L2FE_STTS_SPARE;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_GLB_SRAM_TEST_CONTROL_0_t           SRAM_TEST_CONTROL_0;           /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_GLB_SRAM_TEST_CONTROL_1_t           SRAM_TEST_CONTROL_1;           /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_GLB_SRAM_TEST_CONTROL_2_t           SRAM_TEST_CONTROL_2;           /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_GLB_SRAM_TEST_CONTROL_3_t           SRAM_TEST_CONTROL_3;           /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_GLB_SRAM_TEST_CONTROL_4_t           SRAM_TEST_CONTROL_4;           /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_GLB_SRAM_TEST_CONTROL_5_t           SRAM_TEST_CONTROL_5;           /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_GLB_SRAM_TEST_CONTROL_6_t           SRAM_TEST_CONTROL_6;           /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_GLB_SRAM_TEST_CONTROL_7_t           SRAM_TEST_CONTROL_7;           /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_GLB_SRAM_TEST_CONTROL_8_t           SRAM_TEST_CONTROL_8;           /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_GLB_SRAM_TEST_CONTROL_9_t           SRAM_TEST_CONTROL_9;           /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_GLB_SRAM_TEST_CONTROL_10_t          SRAM_TEST_CONTROL_10;          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_GLB_SRAM_TEST_CONTROL_11_t          SRAM_TEST_CONTROL_11;          /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_GLB_SRAM_TEST_CONTROL_12_t          SRAM_TEST_CONTROL_12;          /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_GLB_SRAM_LS_CONTROL_1_t             SRAM_LS_CONTROL_1;             /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_GLB_SRAM_LS_CONTROL_0_t             SRAM_LS_CONTROL_0;             /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_GLB_L2FE_MONITOR_TRIG_t             L2FE_MONITOR_TRIG;             /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2FE_GLB_L2FE_MONITOR_CTRL_t             L2FE_MONITOR_CTRL;             /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L2FE_GLB_L2FE_MONITOR_RETURN_t           L2FE_MONITOR_RETURN;           /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L2FE_GLB_DEBUG_t                         DEBUG;                         /* addr: 0x00000064 */
} APB0_L2FE_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * PP
 */

#define L2FE_PP_PPID_ATTR_CFG                    0xf4301100
#define L2FE_PP_PPID_ATTR_CFG_dft                0x009d0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ppid0                :  2 ; /* bits 1:0 */
    ca_uint32_t ppid1                :  2 ; /* bits 3:2 */
    ca_uint32_t ppid2                :  2 ; /* bits 5:4 */
    ca_uint32_t ppid3                :  2 ; /* bits 7:6 */
    ca_uint32_t ppid4                :  2 ; /* bits 9:8 */
    ca_uint32_t ppid5                :  2 ; /* bits 11:10 */
    ca_uint32_t ppid6                :  2 ; /* bits 13:12 */
    ca_uint32_t ppid7                :  2 ; /* bits 15:14 */
    ca_uint32_t ppid8                :  2 ; /* bits 17:16 */
    ca_uint32_t ppid9                :  2 ; /* bits 19:18 */
    ca_uint32_t ppid10               :  2 ; /* bits 21:20 */
    ca_uint32_t ppid11               :  2 ; /* bits 23:22 */
    ca_uint32_t ppid12               :  2 ; /* bits 25:24 */
    ca_uint32_t ppid13               :  2 ; /* bits 27:26 */
    ca_uint32_t ppid14               :  2 ; /* bits 29:28 */
    ca_uint32_t ppid15               :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_PPID_ATTR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DPB_CTRL                         0xf4301104
#define L2FE_PP_DPB_CTRL_dft                     0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid_pattern        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DPB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_TPID_CMP_S                       0xf4301108
#define L2FE_PP_TPID_CMP_S_dft                   0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_TPID_CMP_S_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_TPID_CMP_C                       0xf430110c
#define L2FE_PP_TPID_CMP_C_dft                   0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_TPID_CMP_C_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_TPID_CMP_O                       0xf4301110
#define L2FE_PP_TPID_CMP_O_dft                   0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_TPID_CMP_O_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_TPID_CMP_USER                    0xf4301114
#define L2FE_PP_TPID_CMP_USER_dft                0x00009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_TPID_CMP_USER_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HELLO_PKT_ENABLE_DA_LOW          0xf4301118
#define L2FE_PP_HELLO_PKT_ENABLE_DA_LOW_dft      0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HELLO_PKT_ENABLE_DA_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HELLO_PKT_ENABLE_DA_HI           0xf430111c
#define L2FE_PP_HELLO_PKT_ENABLE_DA_HI_dft       0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HELLO_PKT_ENABLE_DA_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HELLO_PKT_DA_LOW                 0xf4301120
#define L2FE_PP_HELLO_PKT_DA_LOW_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HELLO_PKT_DA_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HELLO_PKT_DA_HI                  0xf4301124
#define L2FE_PP_HELLO_PKT_DA_HI_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HELLO_PKT_DA_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_ENABLE_DA_0_LOW          0xf4301128
#define L2FE_PP_SPECIAL_ENABLE_DA_0_LOW_dft      0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_ENABLE_DA_0_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_ENABLE_DA_0_HI           0xf430112c
#define L2FE_PP_SPECIAL_ENABLE_DA_0_HI_dft       0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_ENABLE_DA_0_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_DA_0_LOW                 0xf4301130
#define L2FE_PP_SPECIAL_DA_0_LOW_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_DA_0_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_DA_0_HI                  0xf4301134
#define L2FE_PP_SPECIAL_DA_0_HI_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_DA_0_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_EV2PT                    0xf4301138
#define L2FE_PP_SPECIAL_EV2PT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ev2pt                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_EV2PT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_ENABLE_DA_1_LOW          0xf430113c
#define L2FE_PP_SPECIAL_ENABLE_DA_1_LOW_dft      0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_ENABLE_DA_1_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_ENABLE_DA_1_HI           0xf4301140
#define L2FE_PP_SPECIAL_ENABLE_DA_1_HI_dft       0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_ENABLE_DA_1_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_DA_1_LOW                 0xf4301144
#define L2FE_PP_SPECIAL_DA_1_LOW_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_DA_1_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_DA_1_HI                  0xf4301148
#define L2FE_PP_SPECIAL_DA_1_HI_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_DA_1_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_VLAN                     0xf430114c
#define L2FE_PP_SPECIAL_VLAN_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_VLAN_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MY_MAC_LOW                       0xf4301150
#define L2FE_PP_MY_MAC_LOW_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MY_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MY_MAC_HI                        0xf4301154
#define L2FE_PP_MY_MAC_HI_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MY_MAC_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MY_MAC_ENABLE_LOW                0xf4301158
#define L2FE_PP_MY_MAC_ENABLE_LOW_dft            0x00ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MY_MAC_ENABLE_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MY_MAC_LOW_1                     0xf430115c
#define L2FE_PP_MY_MAC_LOW_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MY_MAC_LOW_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MY_MAC_HI_1                      0xf4301160
#define L2FE_PP_MY_MAC_HI_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MY_MAC_HI_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MY_MAC_ENABLE_LOW_1              0xf4301164
#define L2FE_PP_MY_MAC_ENABLE_LOW_1_dft          0x00ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MY_MAC_ENABLE_LOW_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_MAC_MC_LOW                   0xf4301168
#define L2FE_PP_RSV_MAC_MC_LOW_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_MAC_MC_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_MAC_MC_HI                    0xf430116c
#define L2FE_PP_RSV_MAC_MC_HI_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_MAC_MC_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_ENABLE_MC_LOW                0xf4301170
#define L2FE_PP_RSV_ENABLE_MC_LOW_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_ENABLE_MC_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_ENABLE_MC_HI                 0xf4301174
#define L2FE_PP_RSV_ENABLE_MC_HI_dft             0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_ENABLE_MC_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_GROUP_MAC_LOW                0xf4301178
#define L2FE_PP_RSV_GROUP_MAC_LOW_dft            0xc2000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_GROUP_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_GROUP_MAC_HI                 0xf430117c
#define L2FE_PP_RSV_GROUP_MAC_HI_dft             0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_GROUP_MAC_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_GROUP_ENABLE_LOW             0xf4301180
#define L2FE_PP_RSV_GROUP_ENABLE_LOW_dft         0xfffffff0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_GROUP_ENABLE_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_RSV_GROUP_ENABLE_HI              0xf4301184
#define L2FE_PP_RSV_GROUP_ENABLE_HI_dft          0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_RSV_GROUP_ENABLE_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MEF_OAM_MAC_0_LOW                0xf4301188
#define L2FE_PP_MEF_OAM_MAC_0_LOW_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MEF_OAM_MAC_0_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MEF_OAM_MAC_0_HI                 0xf430118c
#define L2FE_PP_MEF_OAM_MAC_0_HI_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MEF_OAM_MAC_0_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MEF_OAM_TYPE_0                   0xf4301190
#define L2FE_PP_MEF_OAM_TYPE_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MEF_OAM_TYPE_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MEF_OAM_MAC_1_LOW                0xf4301194
#define L2FE_PP_MEF_OAM_MAC_1_LOW_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MEF_OAM_MAC_1_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MEF_OAM_MAC_1_HI                 0xf4301198
#define L2FE_PP_MEF_OAM_MAC_1_HI_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MEF_OAM_MAC_1_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_MEF_OAM_TYPE_1                   0xf430119c
#define L2FE_PP_MEF_OAM_TYPE_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_MEF_OAM_TYPE_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_L7_OFFSET                        0xf43011a0
#define L2FE_PP_L7_OFFSET_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t offset               :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_L7_OFFSET_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_ERR_STTS_0               0xf43011a4
#define L2FE_PP_NI_INTF_ERR_STTS_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sop_eop_mismatch_0   :  1 ; /* bits 0:0 */
    ca_uint32_t sop_eop_mismatch_1   :  1 ; /* bits 1:1 */
    ca_uint32_t sop_eop_mismatch_2   :  1 ; /* bits 2:2 */
    ca_uint32_t sop_eop_mismatch_3   :  1 ; /* bits 3:3 */
    ca_uint32_t sop_eop_mismatch_4   :  1 ; /* bits 4:4 */
    ca_uint32_t sop_eop_mismatch_5   :  1 ; /* bits 5:5 */
    ca_uint32_t sop_eop_mismatch_6   :  1 ; /* bits 6:6 */
    ca_uint32_t sop_eop_mismatch_7   :  1 ; /* bits 7:7 */
    ca_uint32_t sop_eop_mismatch_8   :  1 ; /* bits 8:8 */
    ca_uint32_t sop_eop_mismatch_9   :  1 ; /* bits 9:9 */
    ca_uint32_t sop_eop_mismatch_10  :  1 ; /* bits 10:10 */
    ca_uint32_t sop_eop_mismatch_11  :  1 ; /* bits 11:11 */
    ca_uint32_t sop_eop_mismatch_12  :  1 ; /* bits 12:12 */
    ca_uint32_t sop_eop_mismatch_13  :  1 ; /* bits 13:13 */
    ca_uint32_t sop_eop_mismatch_14  :  1 ; /* bits 14:14 */
    ca_uint32_t sop_eop_mismatch_15  :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_ERR_STTS_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_ERR_STTS_1               0xf43011a8
#define L2FE_PP_NI_INTF_ERR_STTS_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t runt_l2_pkt_0        :  1 ; /* bits 0:0 */
    ca_uint32_t runt_l2_pkt_1        :  1 ; /* bits 1:1 */
    ca_uint32_t runt_l2_pkt_2        :  1 ; /* bits 2:2 */
    ca_uint32_t runt_l2_pkt_3        :  1 ; /* bits 3:3 */
    ca_uint32_t runt_l2_pkt_4        :  1 ; /* bits 4:4 */
    ca_uint32_t runt_l2_pkt_5        :  1 ; /* bits 5:5 */
    ca_uint32_t runt_l2_pkt_6        :  1 ; /* bits 6:6 */
    ca_uint32_t runt_l2_pkt_7        :  1 ; /* bits 7:7 */
    ca_uint32_t runt_l2_pkt_8        :  1 ; /* bits 8:8 */
    ca_uint32_t runt_l2_pkt_9        :  1 ; /* bits 9:9 */
    ca_uint32_t runt_l2_pkt_10       :  1 ; /* bits 10:10 */
    ca_uint32_t runt_l2_pkt_11       :  1 ; /* bits 11:11 */
    ca_uint32_t runt_l2_pkt_12       :  1 ; /* bits 12:12 */
    ca_uint32_t runt_l2_pkt_13       :  1 ; /* bits 13:13 */
    ca_uint32_t runt_l2_pkt_14       :  1 ; /* bits 14:14 */
    ca_uint32_t runt_l2_pkt_15       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_ERR_STTS_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_ERR_STTS_2               0xf43011ac
#define L2FE_PP_NI_INTF_ERR_STTS_2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sob_eob_mismatch_0   :  1 ; /* bits 0:0 */
    ca_uint32_t sob_eob_mismatch_1   :  1 ; /* bits 1:1 */
    ca_uint32_t sob_eob_mismatch_2   :  1 ; /* bits 2:2 */
    ca_uint32_t sob_eob_mismatch_3   :  1 ; /* bits 3:3 */
    ca_uint32_t sob_eob_mismatch_4   :  1 ; /* bits 4:4 */
    ca_uint32_t sob_eob_mismatch_5   :  1 ; /* bits 5:5 */
    ca_uint32_t sob_eob_mismatch_6   :  1 ; /* bits 6:6 */
    ca_uint32_t sob_eob_mismatch_7   :  1 ; /* bits 7:7 */
    ca_uint32_t sob_eob_mismatch_8   :  1 ; /* bits 8:8 */
    ca_uint32_t sob_eob_mismatch_9   :  1 ; /* bits 9:9 */
    ca_uint32_t sob_eob_mismatch_10  :  1 ; /* bits 10:10 */
    ca_uint32_t sob_eob_mismatch_11  :  1 ; /* bits 11:11 */
    ca_uint32_t sob_eob_mismatch_12  :  1 ; /* bits 12:12 */
    ca_uint32_t sob_eob_mismatch_13  :  1 ; /* bits 13:13 */
    ca_uint32_t sob_eob_mismatch_14  :  1 ; /* bits 14:14 */
    ca_uint32_t sob_eob_mismatch_15  :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_ERR_STTS_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_ERR_STTS_3               0xf43011b0
#define L2FE_PP_NI_INTF_ERR_STTS_3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sop_2_sop_gap        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_ERR_STTS_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_PINGPONG_STS                     0xf43011b4
#define L2FE_PP_PINGPONG_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_PINGPONG_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_STS                      0xf43011b8
#define L2FE_PP_NI_INTF_STS_dft                  0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdy                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_DROP_CNT                 0xf43011bc
#define L2FE_PP_NI_INTF_DROP_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drop                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_NI_INTF_PKT_CNT                  0xf43011c0
#define L2FE_PP_NI_INTF_PKT_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eop                  : 16 ; /* bits 15:0 */
    ca_uint32_t sop                  : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_NI_INTF_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HEADER_A_LOW                     0xf43011c4
#define L2FE_PP_HEADER_A_LOW_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HEADER_A_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HEADER_A_MID                     0xf43011c8
#define L2FE_PP_HEADER_A_MID_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HEADER_A_MID_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HEADER_A_HI                      0xf43011cc
#define L2FE_PP_HEADER_A_HI_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HEADER_A_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_PARSER_CTRL                      0xf43011d0
#define L2FE_PP_PARSER_CTRL_dft                  0xa03b0400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t arp_ipv6_en          :  1 ; /* bits 10:10 */
    ca_uint32_t vlan_ext_mode        :  1 ; /* bits 11:11 */
    ca_uint32_t my_mac_det_range_mode :  1 ; /* bits 12:12 */
    ca_uint32_t arp_op_filter_dis    :  1 ; /* bits 13:13 */
    ca_uint32_t use_ip_addr_mc       :  1 ; /* bits 14:14 */
    ca_uint32_t l3fe_to_l2fe_lrn_ctrl :  1 ; /* bits 15:15 */
    ca_uint32_t egr_ptp_pkt_no_drop_set :  1 ; /* bits 16:16 */
    ca_uint32_t ipv4_checksum_check_enable :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t detect_oam_subtype   :  1 ; /* bits 19:19 */
    ca_uint32_t oam_subtype          :  8 ; /* bits 27:20 */
    ca_uint32_t udf0_det_en          :  1 ; /* bits 28:28 */
    ca_uint32_t udf0_det_type_en     :  1 ; /* bits 29:29 */
    ca_uint32_t udf1_det_en          :  1 ; /* bits 30:30 */
    ca_uint32_t udf1_det_vlan_en     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_PARSER_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPECIAL_PKT                      0xf43011d4
#define L2FE_PP_SPECIAL_PKT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPECIAL_PKT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DEBUG_BUS                        0xf43011d8
#define L2FE_PP_DEBUG_BUS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t ni2fe_pkt_cnt_wrap_en :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_IPPB_ACCESS                      0xf43011dc
#define L2FE_PP_IPPB_ACCESS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_IPPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_IPPB_DATA                        0xf43011e0
#define L2FE_PP_IPPB_DATA_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lspid                :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_IPPB_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ILPB_ACCESS                      0xf43011e4
#define L2FE_PP_ILPB_ACCESS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ILPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ILPB_DATA4                       0xf43011e8
#define L2FE_PP_ILPB_DATA4_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ilpb_unkwn_pol_mode  :  1 ; /* bits 0:0 */
    ca_uint32_t ilpb_well_known_mc_idx :  5 ; /* bits 5:1 */
    ca_uint32_t ilpb_well_known_mc_det_en :  1 ; /* bits 6:6 */
    ca_uint32_t ilpb_rxqos_idx       :  3 ; /* bits 9:7 */
    ca_uint32_t ilpb_wan_ind         :  1 ; /* bits 10:10 */
    ca_uint32_t ilpb_cp_port         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ILPB_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ILPB_DATA3                       0xf43011ec
#define L2FE_PP_ILPB_DATA3_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ilpb_vlan_cmd_sel_bm :  2 ; /* bits 1:0 */
    ca_uint32_t ilpb_sc_ind          :  1 ; /* bits 2:2 */
    ca_uint32_t ilpb_default_vlanid  : 12 ; /* bits 14:3 */
    ca_uint32_t ilpb_unkwn_pol_idx   :  3 ; /* bits 17:15 */
    ca_uint32_t ilpb_flowid_as_gemid :  1 ; /* bits 18:18 */
    ca_uint32_t ilpb_gemid_dynamic_mode :  1 ; /* bits 19:19 */
    ca_uint32_t ilpb_sa_miss_fwd     :  1 ; /* bits 20:20 */
    ca_uint32_t ilpb_sa_lmt_excd_drop :  1 ; /* bits 21:21 */
    ca_uint32_t ilpb_reserved_1      : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ILPB_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ILPB_DATA2                       0xf43011f0
#define L2FE_PP_ILPB_DATA2_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ilpb_stp_mode        :  2 ; /* bits 1:0 */
    ca_uint32_t ilpb_other_tpid_match :  4 ; /* bits 5:2 */
    ca_uint32_t ilpb_inner_c_tpid_enable :  1 ; /* bits 6:6 */
    ca_uint32_t ilpb_inner_s_tpid_enable :  1 ; /* bits 7:7 */
    ca_uint32_t ilpb_top_c_tpid_enable :  1 ; /* bits 8:8 */
    ca_uint32_t ilpb_top_s_tpid_enable :  1 ; /* bits 9:9 */
    ca_uint32_t ilpb_c_tpid_match    :  4 ; /* bits 13:10 */
    ca_uint32_t ilpb_s_tpid_match    :  4 ; /* bits 17:14 */
    ca_uint32_t ilpb_drop_doubletagged_packet :  1 ; /* bits 18:18 */
    ca_uint32_t ilpb_drop_prytagged_packet :  1 ; /* bits 19:19 */
    ca_uint32_t ilpb_drop_untagged_packet :  1 ; /* bits 20:20 */
    ca_uint32_t ilpb_drop_ctag_packet :  1 ; /* bits 21:21 */
    ca_uint32_t ilpb_drop_stag_packet :  1 ; /* bits 22:22 */
    ca_uint32_t ilpb_drop_singletagged_packet :  1 ; /* bits 23:23 */
    ca_uint32_t ilpb_default_noninnertag_cmd :  1 ; /* bits 24:24 */
    ca_uint32_t ilpb_inner_vlan_cmd  :  2 ; /* bits 26:25 */
    ca_uint32_t ilpb_inner_vid_sel_bm :  2 ; /* bits 28:27 */
    ca_uint32_t ilpb_default_untag_cmd :  1 ; /* bits 29:29 */
    ca_uint32_t ilpb_default_top_vlan_cmd :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ILPB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ILPB_DATA1                       0xf43011f4
#define L2FE_PP_ILPB_DATA1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ilpb_802_1p_mark_control_bm :  3 ; /* bits 2:0 */
    ca_uint32_t ilpb_change_1p_if_pop :  1 ; /* bits 3:3 */
    ca_uint32_t ilpb_top_802_1p_mode_sel :  2 ; /* bits 5:4 */
    ca_uint32_t ilpb_flowid_sel_bm   :  3 ; /* bits 8:6 */
    ca_uint32_t ilpb_cls_length      :  6 ; /* bits 14:9 */
    ca_uint32_t ilpb_cls_start       :  8 ; /* bits 22:15 */
    ca_uint32_t ilpb_igr_cls_lookup_en :  1 ; /* bits 23:23 */
    ca_uint32_t ilpb_spcl_pkt_idx    :  4 ; /* bits 27:24 */
    ca_uint32_t ilpb_da_sa_swap_en   :  1 ; /* bits 28:28 */
    ca_uint32_t ilpb_loop_enable     :  1 ; /* bits 29:29 */
    ca_uint32_t ilpb_sa_move_dis_fwd :  1 ; /* bits 30:30 */
    ca_uint32_t ilpb_station_move_en :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ILPB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ILPB_DATA0                       0xf43011f8
#define L2FE_PP_ILPB_DATA0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ilpb_dflt_premark    :  1 ; /* bits 0:0 */
    ca_uint32_t ilpb_color_src_sel   :  2 ; /* bits 2:1 */
    ca_uint32_t ilpb_ing_fltr_ena    :  1 ; /* bits 3:3 */
    ca_uint32_t ilpb_default_cos     :  3 ; /* bits 6:4 */
    ca_uint32_t ilpb_cos_control_bm  :  3 ; /* bits 9:7 */
    ca_uint32_t ilpb_cos_mode_sel    :  3 ; /* bits 12:10 */
    ca_uint32_t ilpb_default_dscp    :  6 ; /* bits 18:13 */
    ca_uint32_t ilpb_dscp_mark_control_bm :  4 ; /* bits 22:19 */
    ca_uint32_t ilpb_dscp_mode_sel   :  2 ; /* bits 24:23 */
    ca_uint32_t ilpb_dscp_markdown_en :  1 ; /* bits 25:25 */
    ca_uint32_t ilpb_default_802_1p  :  3 ; /* bits 28:26 */
    ca_uint32_t ilpb_inner_802_1p_mode_sel :  2 ; /* bits 30:29 */
    ca_uint32_t ilpb_802_1p_mark_control_bm :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ILPB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DPB_ACCESS                       0xf43011fc
#define L2FE_PP_DPB_ACCESS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DPB_DATA                         0xf4301200
#define L2FE_PP_DPB_DATA_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos                  :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid                :  6 ; /* bits 8:3 */
    ca_uint32_t bypass               :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DPB_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPKTP_ACCESS                     0xf4301204
#define L2FE_PP_SPKTP_ACCESS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPKTP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_SPKTP_DATA                       0xf4301208
#define L2FE_PP_SPKTP_DATA_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t encode               :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_SPKTP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HTTP_LINK_0                      0xf430120c
#define L2FE_PP_HTTP_LINK_0_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  2 ; /* bits 18:17 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HTTP_LINK_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HTTP_LINK_1                      0xf4301210
#define L2FE_PP_HTTP_LINK_1_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  2 ; /* bits 18:17 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HTTP_LINK_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_HTTP_LINK_2                      0xf4301214
#define L2FE_PP_HTTP_LINK_2_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  2 ; /* bits 18:17 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_HTTP_LINK_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ARP_FILTER_ADDR                  0xf4301218
#define L2FE_PP_ARP_FILTER_ADDR_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tip                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ARP_FILTER_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_ARP_FILTER_MSK                   0xf430121c
#define L2FE_PP_ARP_FILTER_MSK_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_ARP_FILTER_MSK_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_0                        0xf4301220
#define L2FE_PP_DOS_ATK_0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_1                        0xf4301224
#define L2FE_PP_DOS_ATK_1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_2                        0xf4301228
#define L2FE_PP_DOS_ATK_2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_3                        0xf430122c
#define L2FE_PP_DOS_ATK_3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_4                        0xf4301230
#define L2FE_PP_DOS_ATK_4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_FLOOD_CNT                0xf4301234
#define L2FE_PP_DOS_ATK_FLOOD_CNT_dft            0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_FLOOD_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PP_DOS_ATK_EVENT_TRAP               0xf4301238
#define L2FE_PP_DOS_ATK_EVENT_TRAP_dft           0x00000210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 5:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 8:6 */
    ca_uint32_t keep_orig_pkt        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PP_DOS_ATK_EVENT_TRAP_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PP */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_PP_PPID_ATTR_CFG_t                  PPID_ATTR_CFG;                 /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_PP_DPB_CTRL_t                       DPB_CTRL;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_PP_TPID_CMP_S_t                     TPID_CMP_S;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_PP_TPID_CMP_C_t                     TPID_CMP_C;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_PP_TPID_CMP_O_t                     TPID_CMP_O;                    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_PP_TPID_CMP_USER_t                  TPID_CMP_USER;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_PP_HELLO_PKT_ENABLE_DA_LOW_t        HELLO_PKT_ENABLE_DA_LOW;       /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_PP_HELLO_PKT_ENABLE_DA_HI_t         HELLO_PKT_ENABLE_DA_HI;        /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_PP_HELLO_PKT_DA_LOW_t               HELLO_PKT_DA_LOW;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_PP_HELLO_PKT_DA_HI_t                HELLO_PKT_DA_HI;               /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_PP_SPECIAL_ENABLE_DA_0_LOW_t        SPECIAL_ENABLE_DA_0_LOW;       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_PP_SPECIAL_ENABLE_DA_0_HI_t         SPECIAL_ENABLE_DA_0_HI;        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_PP_SPECIAL_DA_0_LOW_t               SPECIAL_DA_0_LOW;              /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_PP_SPECIAL_DA_0_HI_t                SPECIAL_DA_0_HI;               /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_PP_SPECIAL_EV2PT_t                  SPECIAL_EV2PT;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_PP_SPECIAL_ENABLE_DA_1_LOW_t        SPECIAL_ENABLE_DA_1_LOW;       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_PP_SPECIAL_ENABLE_DA_1_HI_t         SPECIAL_ENABLE_DA_1_HI;        /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_PP_SPECIAL_DA_1_LOW_t               SPECIAL_DA_1_LOW;              /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_PP_SPECIAL_DA_1_HI_t                SPECIAL_DA_1_HI;               /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_PP_SPECIAL_VLAN_t                   SPECIAL_VLAN;                  /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_PP_MY_MAC_LOW_t                     MY_MAC_LOW;                    /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_PP_MY_MAC_HI_t                      MY_MAC_HI;                     /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_PP_MY_MAC_ENABLE_LOW_t              MY_MAC_ENABLE_LOW;             /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2FE_PP_MY_MAC_LOW_1_t                   MY_MAC_LOW_1;                  /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L2FE_PP_MY_MAC_HI_1_t                    MY_MAC_HI_1;                   /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L2FE_PP_MY_MAC_ENABLE_LOW_1_t            MY_MAC_ENABLE_LOW_1;           /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L2FE_PP_RSV_MAC_MC_LOW_t                 RSV_MAC_MC_LOW;                /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L2FE_PP_RSV_MAC_MC_HI_t                  RSV_MAC_MC_HI;                 /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L2FE_PP_RSV_ENABLE_MC_LOW_t              RSV_ENABLE_MC_LOW;             /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L2FE_PP_RSV_ENABLE_MC_HI_t               RSV_ENABLE_MC_HI;              /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L2FE_PP_RSV_GROUP_MAC_LOW_t              RSV_GROUP_MAC_LOW;             /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L2FE_PP_RSV_GROUP_MAC_HI_t               RSV_GROUP_MAC_HI;              /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L2FE_PP_RSV_GROUP_ENABLE_LOW_t           RSV_GROUP_ENABLE_LOW;          /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L2FE_PP_RSV_GROUP_ENABLE_HI_t            RSV_GROUP_ENABLE_HI;           /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L2FE_PP_MEF_OAM_MAC_0_LOW_t              MEF_OAM_MAC_0_LOW;             /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L2FE_PP_MEF_OAM_MAC_0_HI_t               MEF_OAM_MAC_0_HI;              /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  L2FE_PP_MEF_OAM_TYPE_0_t                 MEF_OAM_TYPE_0;                /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  L2FE_PP_MEF_OAM_MAC_1_LOW_t              MEF_OAM_MAC_1_LOW;             /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  L2FE_PP_MEF_OAM_MAC_1_HI_t               MEF_OAM_MAC_1_HI;              /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  L2FE_PP_MEF_OAM_TYPE_1_t                 MEF_OAM_TYPE_1;                /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  L2FE_PP_L7_OFFSET_t                      L7_OFFSET;                     /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  L2FE_PP_NI_INTF_ERR_STTS_0_t             NI_INTF_ERR_STTS_0;            /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  L2FE_PP_NI_INTF_ERR_STTS_1_t             NI_INTF_ERR_STTS_1;            /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  L2FE_PP_NI_INTF_ERR_STTS_2_t             NI_INTF_ERR_STTS_2;            /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  L2FE_PP_NI_INTF_ERR_STTS_3_t             NI_INTF_ERR_STTS_3;            /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  L2FE_PP_PINGPONG_STS_t                   PINGPONG_STS;                  /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  L2FE_PP_NI_INTF_STS_t                    NI_INTF_STS;                   /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  L2FE_PP_NI_INTF_DROP_CNT_t               NI_INTF_DROP_CNT;              /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  L2FE_PP_NI_INTF_PKT_CNT_t                NI_INTF_PKT_CNT;               /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  L2FE_PP_HEADER_A_LOW_t                   HEADER_A_LOW;                  /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  L2FE_PP_HEADER_A_MID_t                   HEADER_A_MID;                  /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  L2FE_PP_HEADER_A_HI_t                    HEADER_A_HI;                   /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  L2FE_PP_PARSER_CTRL_t                    PARSER_CTRL;                   /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  L2FE_PP_SPECIAL_PKT_t                    SPECIAL_PKT;                   /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  L2FE_PP_DEBUG_BUS_t                      DEBUG_BUS;                     /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  L2FE_PP_IPPB_ACCESS_t                    IPPB_ACCESS;                   /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  L2FE_PP_IPPB_DATA_t                      IPPB_DATA;                     /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  L2FE_PP_ILPB_ACCESS_t                    ILPB_ACCESS;                   /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  L2FE_PP_ILPB_DATA4_t                     ILPB_DATA4;                    /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  L2FE_PP_ILPB_DATA3_t                     ILPB_DATA3;                    /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  L2FE_PP_ILPB_DATA2_t                     ILPB_DATA2;                    /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  L2FE_PP_ILPB_DATA1_t                     ILPB_DATA1;                    /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  L2FE_PP_ILPB_DATA0_t                     ILPB_DATA0;                    /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  L2FE_PP_DPB_ACCESS_t                     DPB_ACCESS;                    /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  L2FE_PP_DPB_DATA_t                       DPB_DATA;                      /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  L2FE_PP_SPKTP_ACCESS_t                   SPKTP_ACCESS;                  /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  L2FE_PP_SPKTP_DATA_t                     SPKTP_DATA;                    /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  L2FE_PP_HTTP_LINK_0_t                    HTTP_LINK_0;                   /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  L2FE_PP_HTTP_LINK_1_t                    HTTP_LINK_1;                   /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  L2FE_PP_HTTP_LINK_2_t                    HTTP_LINK_2;                   /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  L2FE_PP_ARP_FILTER_ADDR_t                ARP_FILTER_ADDR;               /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  L2FE_PP_ARP_FILTER_MSK_t                 ARP_FILTER_MSK;                /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  L2FE_PP_DOS_ATK_0_t                      DOS_ATK_0;                     /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  L2FE_PP_DOS_ATK_1_t                      DOS_ATK_1;                     /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  L2FE_PP_DOS_ATK_2_t                      DOS_ATK_2;                     /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  L2FE_PP_DOS_ATK_3_t                      DOS_ATK_3;                     /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  L2FE_PP_DOS_ATK_4_t                      DOS_ATK_4;                     /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  L2FE_PP_DOS_ATK_FLOOD_CNT_t              DOS_ATK_FLOOD_CNT;             /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  L2FE_PP_DOS_ATK_EVENT_TRAP_t             DOS_ATK_EVENT_TRAP;            /* addr: 0x00000138 */
} APB0_L2FE_PP_t;
#endif /* !__ASSEMBLER__ */


/*
 * PLA
 */

#define L2FE_PLA_DEBUG_BUS                       0xf4301300
#define L2FE_PLA_DEBUG_BUS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_EV2_PT_CNVT_ACCESS              0xf4301304
#define L2FE_PLA_EV2_PT_CNVT_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_EV2_PT_CNVT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_EV2_PT_CNVT_DATA                0xf4301308
#define L2FE_PLA_EV2_PT_CNVT_DATA_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ev2_pt_cnvt_encoded_value :  5 ; /* bits 4:0 */
    ca_uint32_t ev2_pt_cnvt_ethertype : 16 ; /* bits 20:5 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_EV2_PT_CNVT_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_SPB_ACCESS                      0xf430130c
#define L2FE_PLA_SPB_ACCESS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_SPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_SPB_DATA                        0xf4301310
#define L2FE_PLA_SPB_DATA_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spb_pkt_no_edit      :  1 ; /* bits 0:0 */
    ca_uint32_t spb_keep_ts          :  1 ; /* bits 1:1 */
    ca_uint32_t spb_bypass_sa_lrn_chk :  1 ; /* bits 2:2 */
    ca_uint32_t spb_limit_fwd_permit :  1 ; /* bits 3:3 */
    ca_uint32_t spb_learn_dis        :  1 ; /* bits 4:4 */
    ca_uint32_t spb_grpid_en         :  1 ; /* bits 5:5 */
    ca_uint32_t spb_flowid           : 12 ; /* bits 17:6 */
    ca_uint32_t spb_flow_en          :  1 ; /* bits 18:18 */
    ca_uint32_t spb_rate_limit_bypass :  1 ; /* bits 19:19 */
    ca_uint32_t spb_cos              :  3 ; /* bits 22:20 */
    ca_uint32_t spb_ldpid            :  6 ; /* bits 28:23 */
    ca_uint32_t spb_spcl_fwd         :  1 ; /* bits 29:29 */
    ca_uint32_t spb_pkt_no_drop      :  1 ; /* bits 30:30 */
    ca_uint32_t spb_hash_cllsn_fwd_permit :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_SPB_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_DOT1P_MAP_ACCESS                0xf4301314
#define L2FE_PLA_DOT1P_MAP_ACCESS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_DOT1P_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_DOT1P_MAP_DATA                  0xf4301318
#define L2FE_PLA_DOT1P_MAP_DATA_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dot1p_map_mapped_premark :  1 ; /* bits 0:0 */
    ca_uint32_t dot1p_map_mapped_cos :  3 ; /* bits 3:1 */
    ca_uint32_t dot1p_map_mapped_1p  :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_DOT1P_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_DSCP_MAP_ACCESS                 0xf430131c
#define L2FE_PLA_DSCP_MAP_ACCESS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_DSCP_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLA_DSCP_MAP_DATA                   0xf4301320
#define L2FE_PLA_DSCP_MAP_DATA_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mapped_premark       :  1 ; /* bits 0:0 */
    ca_uint32_t dscp_map_mapped_cos  :  3 ; /* bits 3:1 */
    ca_uint32_t dscp_map_marked_flag :  1 ; /* bits 4:4 */
    ca_uint32_t dscp_map_mapped_dscp :  6 ; /* bits 10:5 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLA_DSCP_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PLA */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_PLA_DEBUG_BUS_t                     DEBUG_BUS;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_PLA_EV2_PT_CNVT_ACCESS_t            EV2_PT_CNVT_ACCESS;            /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_PLA_EV2_PT_CNVT_DATA_t              EV2_PT_CNVT_DATA;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_PLA_SPB_ACCESS_t                    SPB_ACCESS;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_PLA_SPB_DATA_t                      SPB_DATA;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_PLA_DOT1P_MAP_ACCESS_t              DOT1P_MAP_ACCESS;              /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_PLA_DOT1P_MAP_DATA_t                DOT1P_MAP_DATA;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_PLA_DSCP_MAP_ACCESS_t               DSCP_MAP_ACCESS;               /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_PLA_DSCP_MAP_DATA_t                 DSCP_MAP_DATA;                 /* addr: 0x00000020 */
} APB0_L2FE_PLA_t;
#endif /* !__ASSEMBLER__ */


/*
 * PLC
 */

#define L2FE_PLC_HASH_CTRL                       0xf4301400
#define L2FE_PLC_HASH_CTRL_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lan_sa_hashing_vid_sel :  1 ; /* bits 0:0 */
    ca_uint32_t lan_da_hashing_vid_sel :  1 ; /* bits 1:1 */
    ca_uint32_t lan_sa_learning_vid_sel :  1 ; /* bits 2:2 */
    ca_uint32_t wan_sa_hashing_vid_sel :  1 ; /* bits 3:3 */
    ca_uint32_t wan_da_hashing_vid_sel :  1 ; /* bits 4:4 */
    ca_uint32_t wan_sa_learning_vid_sel :  1 ; /* bits 5:5 */
    ca_uint32_t use_dot1p_l2e        :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_HASH_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_DPID_FWD_CTRL                   0xf4301404
#define L2FE_PLC_DPID_FWD_CTRL_dft               0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vid_fff_fwd          :  1 ; /* bits 0:0 */
    ca_uint32_t unkvlan_fwd          :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_DPID_FWD_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_LRN_FWD_CTRL_0                  0xf4301408
#define L2FE_PLC_LRN_FWD_CTRL_0_dft              0x02000210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2_mac_sw_lrn_ldpid  :  6 ; /* bits 5:0 */
    ca_uint32_t l2_mac_sw_lrn_cos    :  3 ; /* bits 8:6 */
    ca_uint32_t l2_mac_sw_lrn_keep_old_wan :  1 ; /* bits 9:9 */
    ca_uint32_t l2_mac_sw_lrn_keep_old_lan :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t sa_miss_fwd          :  1 ; /* bits 25:25 */
    ca_uint32_t nonstd_sa_all_zero_fwd :  1 ; /* bits 26:26 */
    ca_uint32_t nonstd_sa_all_one_fwd :  1 ; /* bits 27:27 */
    ca_uint32_t nonstd_sa_b40_is_one_fwd :  1 ; /* bits 28:28 */
    ca_uint32_t sm_static_entry_fwd  :  1 ; /* bits 29:29 */
    ca_uint32_t sm_tmp_entry_fwd     :  1 ; /* bits 30:30 */
    ca_uint32_t sm_sm_entry_fwd      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_LRN_FWD_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_LRN_FWD_CTRL_1                  0xf430140c
#define L2FE_PLC_LRN_FWD_CTRL_1_dft              0x08100810

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sa_limit_excd_ldpid  :  6 ; /* bits 5:0 */
    ca_uint32_t sa_limit_excd_cos    :  3 ; /* bits 8:6 */
    ca_uint32_t sa_limit_excd_fwd_ctrl :  2 ; /* bits 10:9 */
    ca_uint32_t sa_limit_excd_keep_old_wan :  1 ; /* bits 11:11 */
    ca_uint32_t sa_limit_excd_keep_old_lan :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t sa_hash_cllsn_ldpid  :  6 ; /* bits 21:16 */
    ca_uint32_t sa_hash_cllsn_cos    :  3 ; /* bits 24:22 */
    ca_uint32_t sa_hash_cllsn_fwd_ctrl :  2 ; /* bits 26:25 */
    ca_uint32_t sa_hash_cllsn_keep_old_wan :  1 ; /* bits 27:27 */
    ca_uint32_t sa_hash_cllsn_keep_old_lan :  1 ; /* bits 28:28 */
    ca_uint32_t swlrn_othr_pkt_fwd   :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_LRN_FWD_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_L2_LEARNING_CTRL                0xf4301410
#define L2FE_PLC_L2_LEARNING_CTRL_dft            0x00000046

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unkvlan_learn        :  1 ; /* bits 0:0 */
    ca_uint32_t unk_ethtype_no_learn :  1 ; /* bits 1:1 */
    ca_uint32_t igr_dropped_pkt_no_learn :  1 ; /* bits 2:2 */
    ca_uint32_t non_std_sa_all_zero_learn :  1 ; /* bits 3:3 */
    ca_uint32_t non_std_sa_all_one_learn :  1 ; /* bits 4:4 */
    ca_uint32_t non_std_sa_b40_is_one_learn :  1 ; /* bits 5:5 */
    ca_uint32_t loop_pkt_no_learn    :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_L2_LEARNING_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_VLAN_MODE_CTRL                  0xf4301414
#define L2FE_PLC_VLAN_MODE_CTRL_dft              0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2e_glb_vlan_mode    :  1 ; /* bits 0:0 */
    ca_uint32_t en_fdb_vlan_pre_rslt :  1 ; /* bits 1:1 */
    ca_uint32_t en_egr_ptag_lkup_egr_ve :  1 ; /* bits 2:2 */
    ca_uint32_t en_mc_pkt_lkup_elpb  :  1 ; /* bits 3:3 */
    ca_uint32_t lan_src_usel2_vlan   :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_VLAN_MODE_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_SA_CHK_CTL                      0xf4301418
#define L2FE_PLC_SA_CHK_CTL_dft                  0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t skip_sa_chk          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_SA_CHK_CTL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_DEBUG                           0xf430141c
#define L2FE_PLC_DEBUG_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_sel              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_ELPB_ACCESS                     0xf4301420
#define L2FE_PLC_ELPB_ACCESS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_ELPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_ELPB_DATA1                      0xf4301424
#define L2FE_PLC_ELPB_DATA1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t elpb_802_1p_mark_control_bm :  3 ; /* bits 2:0 */
    ca_uint32_t elpb_change_1p_if_pop :  1 ; /* bits 3:3 */
    ca_uint32_t elpb_top_802_1p_mode_sel :  2 ; /* bits 5:4 */
    ca_uint32_t elpb_802_1p_ctrl_sel :  1 ; /* bits 6:6 */
    ca_uint32_t elpb_use_tx_vlan_lkup_acl :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_ELPB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLC_ELPB_DATA0                      0xf4301428
#define L2FE_PLC_ELPB_DATA0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t elpb_egr_vlan_aware_mode :  1 ; /* bits 0:0 */
    ca_uint32_t elpb_egr_port_stp_status :  1 ; /* bits 1:1 */
    ca_uint32_t elpb_egr_ve_srch_en  :  1 ; /* bits 2:2 */
    ca_uint32_t elpb_egr_dest_wan    :  1 ; /* bits 3:3 */
    ca_uint32_t elpb_egr_cls_length  :  6 ; /* bits 9:4 */
    ca_uint32_t elpb_egr_cls_start   :  8 ; /* bits 17:10 */
    ca_uint32_t elpb_egr_cls_lookup_en :  1 ; /* bits 18:18 */
    ca_uint32_t elpb_egr_cls_flowid_sel :  1 ; /* bits 19:19 */
    ca_uint32_t elpb_egr_cls_cos_sel :  1 ; /* bits 20:20 */
    ca_uint32_t elpb_dscp_mark_control_bm :  4 ; /* bits 24:21 */
    ca_uint32_t elpb_dscp_mode_sel   :  2 ; /* bits 26:25 */
    ca_uint32_t elpb_dscp_ctrl_sel   :  1 ; /* bits 27:27 */
    ca_uint32_t elpb_dscp_markdown_en :  1 ; /* bits 28:28 */
    ca_uint32_t elpb_inner_802_1p_mode_sel :  2 ; /* bits 30:29 */
    ca_uint32_t elpb_802_1p_mark_control_bm :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLC_ELPB_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PLC */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_PLC_HASH_CTRL_t                     HASH_CTRL;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_PLC_DPID_FWD_CTRL_t                 DPID_FWD_CTRL;                 /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_PLC_LRN_FWD_CTRL_0_t                LRN_FWD_CTRL_0;                /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_PLC_LRN_FWD_CTRL_1_t                LRN_FWD_CTRL_1;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_PLC_L2_LEARNING_CTRL_t              L2_LEARNING_CTRL;              /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_PLC_VLAN_MODE_CTRL_t                VLAN_MODE_CTRL;                /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_PLC_SA_CHK_CTL_t                    SA_CHK_CTL;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_PLC_DEBUG_t                         DEBUG;                         /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_PLC_ELPB_ACCESS_t                   ELPB_ACCESS;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_PLC_ELPB_DATA1_t                    ELPB_DATA1;                    /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_PLC_ELPB_DATA0_t                    ELPB_DATA0;                    /* addr: 0x00000028 */
} APB0_L2FE_PLC_t;
#endif /* !__ASSEMBLER__ */


/*
 * PLE
 */

#define L2FE_PLE_CTL_REG                         0xf4301500
#define L2FE_PLE_CTL_REG_dft                     0x00000260

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txvlan_membshp_chk_en_lan :  1 ; /* bits 0:0 */
    ca_uint32_t txvlan_membshp_chk_en_wan :  1 ; /* bits 1:1 */
    ca_uint32_t cos_l3_only          :  1 ; /* bits 2:2 */
    ca_uint32_t skip_port_lpbk_chk   :  1 ; /* bits 3:3 */
    ca_uint32_t pon_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t igr_fltr_chk_ldpid   :  1 ; /* bits 5:5 */
    ca_uint32_t egr_fltr_chk_lspid   :  1 ; /* bits 6:6 */
    ca_uint32_t use_gemid_mapped_from_txdot1p :  1 ; /* bits 7:7 */
    ca_uint32_t wan_dst_acl_vlan_en  :  1 ; /* bits 8:8 */
    ca_uint32_t use_rx_dscp_map_cos  :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_CTL_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_DEFAULT_REG                     0xf4301504
#define L2FE_PLE_DEFAULT_REG_dft                 0x001b0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dflt_flow_en         :  1 ; /* bits 0:0 */
    ca_uint32_t dflt_flowid          : 12 ; /* bits 12:1 */
    ca_uint32_t dflt_markdown_en     :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t dflt_mc_pid          :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_DEFAULT_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_RX_UNKWN_VLAN_DFT               0xf4301508
#define L2FE_PLE_RX_UNKWN_VLAN_DFT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t memshp_bm            : 16 ; /* bits 15:0 */
    ca_uint32_t vl_grp_id            : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_RX_UNKWN_VLAN_DFT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TX_UNKWN_VLAN_DFT_1             0xf430150c
#define L2FE_PLE_TX_UNKWN_VLAN_DFT_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stp_mode             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TX_UNKWN_VLAN_DFT_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TX_UNKWN_VLAN_DFT_2             0xf4301510
#define L2FE_PLE_TX_UNKWN_VLAN_DFT_2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t memshp_bm            : 16 ; /* bits 15:0 */
    ca_uint32_t untag_bm             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TX_UNKWN_VLAN_DFT_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_GRP_CTRL_0                0xf4301514
#define L2FE_PLE_TRUNK_GRP_CTRL_0_dft            0x00000012

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t trunk_hash_field_sel_mac_sa :  1 ; /* bits 0:0 */
    ca_uint32_t trunk_hash_field_sel_mac_da :  1 ; /* bits 1:1 */
    ca_uint32_t trunk_hash_field_sel_tx_top_vid :  1 ; /* bits 2:2 */
    ca_uint32_t trunk_hash_field_sel_ip_sa :  1 ; /* bits 3:3 */
    ca_uint32_t trunk_hash_field_sel_ip_da :  1 ; /* bits 4:4 */
    ca_uint32_t trunk_hash_field_sel_l4_sp :  1 ; /* bits 5:5 */
    ca_uint32_t trunk_hash_field_sel_l4_dp :  1 ; /* bits 6:6 */
    ca_uint32_t trunk_hash_field_sel_cos :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_GRP_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_GRP_0_MEMBER_0            0xf4301518
#define L2FE_PLE_TRUNK_GRP_0_MEMBER_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_GRP_0_MEMBER_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_GRP_0_MEMBER_1            0xf430151c
#define L2FE_PLE_TRUNK_GRP_0_MEMBER_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_GRP_0_MEMBER_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_GRP_CTRL_1                0xf4301520
#define L2FE_PLE_TRUNK_GRP_CTRL_1_dft            0x00000012

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t trunk_hash_field_sel_mac_sa :  1 ; /* bits 0:0 */
    ca_uint32_t trunk_hash_field_sel_mac_da :  1 ; /* bits 1:1 */
    ca_uint32_t trunk_hash_field_sel_tx_top_vid :  1 ; /* bits 2:2 */
    ca_uint32_t trunk_hash_field_sel_ip_sa :  1 ; /* bits 3:3 */
    ca_uint32_t trunk_hash_field_sel_ip_da :  1 ; /* bits 4:4 */
    ca_uint32_t trunk_hash_field_sel_l4_sp :  1 ; /* bits 5:5 */
    ca_uint32_t trunk_hash_field_sel_l4_dp :  1 ; /* bits 6:6 */
    ca_uint32_t trunk_hash_field_sel_cos :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_GRP_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_GRP_1_MEMBER_0            0xf4301524
#define L2FE_PLE_TRUNK_GRP_1_MEMBER_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_GRP_1_MEMBER_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_GRP_1_MEMBER_1            0xf4301528
#define L2FE_PLE_TRUNK_GRP_1_MEMBER_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_GRP_1_MEMBER_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_HD_FF_CTL_REG                   0xf430152c
#define L2FE_PLE_HD_FF_CTL_REG_dft               0x00000610

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_thr              :  6 ; /* bits 5:0 */
    ca_uint32_t high_thr             :  6 ; /* bits 11:6 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_HD_FF_CTL_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_HD_FF_STS_REG                   0xf4301530
#define L2FE_PLE_HD_FF_STS_REG_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t overflow_ind         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_HD_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_HD_FF_HDR_CNT                   0xf4301534
#define L2FE_PLE_HD_FF_HDR_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_HD_FF_HDR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MC_WELL_KNOWN_IP_CTRL           0xf4301538
#define L2FE_PLE_MC_WELL_KNOWN_IP_CTRL_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipv6_sub_mask        :  8 ; /* bits 7:0 */
    ca_uint32_t ipv6_prog_addr_vld   :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ipv4_sub_mask        :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ipv4_prog_addr_vld   :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd3               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MC_WELL_KNOWN_IP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MC_WELL_KNOWN_IPV4              0xf430153c
#define L2FE_PLE_MC_WELL_KNOWN_IPV4_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MC_WELL_KNOWN_IPV4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MC_WELL_KNOWN_IPV6_3            0xf4301540
#define L2FE_PLE_MC_WELL_KNOWN_IPV6_3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MC_WELL_KNOWN_IPV6_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MC_WELL_KNOWN_IPV6_2            0xf4301544
#define L2FE_PLE_MC_WELL_KNOWN_IPV6_2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MC_WELL_KNOWN_IPV6_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MC_WELL_KNOWN_IPV6_1            0xf4301548
#define L2FE_PLE_MC_WELL_KNOWN_IPV6_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MC_WELL_KNOWN_IPV6_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MC_WELL_KNOWN_IPV6_0            0xf430154c
#define L2FE_PLE_MC_WELL_KNOWN_IPV6_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MC_WELL_KNOWN_IPV6_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_DEBUG_BUS                       0xf4301550
#define L2FE_PLE_DEBUG_BUS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TX_DSCP_MAP_ACCESS              0xf4301554
#define L2FE_PLE_TX_DSCP_MAP_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TX_DSCP_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TX_DSCP_MAP_DATA                0xf4301558
#define L2FE_PLE_TX_DSCP_MAP_DATA_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txdscp_map_mapped_cos :  3 ; /* bits 2:0 */
    ca_uint32_t txdscp_map_mapped_1p :  3 ; /* bits 5:3 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TX_DSCP_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TX_DOT1P_MAP_ACCESS             0xf430155c
#define L2FE_PLE_TX_DOT1P_MAP_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TX_DOT1P_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TX_DOT1P_MAP_DATA               0xf4301560
#define L2FE_PLE_TX_DOT1P_MAP_DATA_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txdot1p_map_mapped_cos :  3 ; /* bits 2:0 */
    ca_uint32_t txdot1p_map_mapped_cos_wan :  3 ; /* bits 5:3 */
    ca_uint32_t gem_id_vld_wan       :  1 ; /* bits 6:6 */
    ca_uint32_t gem_id_wan           :  7 ; /* bits 13:7 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TX_DOT1P_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_DFT_FWD_ACCESS                  0xf4301564
#define L2FE_PLE_DFT_FWD_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_DFT_FWD_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_DFT_FWD_DATA                    0xf4301568
#define L2FE_PLE_DFT_FWD_DATA_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dft_fwd_deny         :  1 ; /* bits 0:0 */
    ca_uint32_t dft_fwd_mc_group_id  : 10 ; /* bits 10:1 */
    ca_uint32_t dft_fwd_redir_en     :  1 ; /* bits 11:11 */
    ca_uint32_t dft_fwd_mc_group_id_valid :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_DFT_FWD_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS         0xf430156c
#define L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_MMSHP_CHK_ID_MAP_DATA           0xf4301570
#define L2FE_PLE_MMSHP_CHK_ID_MAP_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mmshp_chk_id_map_chk_id :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_MMSHP_CHK_ID_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_PORT_MMSHP_CHK_ACCESS           0xf4301574
#define L2FE_PLE_PORT_MMSHP_CHK_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_PORT_MMSHP_CHK_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_PORT_MMSHP_CHK_DATA1            0xf4301578
#define L2FE_PLE_PORT_MMSHP_CHK_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid_bm             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_PORT_MMSHP_CHK_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_PORT_MMSHP_CHK_DATA0            0xf430157c
#define L2FE_PLE_PORT_MMSHP_CHK_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid_bm             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_PORT_MMSHP_CHK_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS       0xf4301580
#define L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA         0xf4301584
#define L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid                :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PLE */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_PLE_CTL_REG_t                       CTL_REG;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_PLE_DEFAULT_REG_t                   DEFAULT_REG;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_PLE_RX_UNKWN_VLAN_DFT_t             RX_UNKWN_VLAN_DFT;             /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_PLE_TX_UNKWN_VLAN_DFT_1_t           TX_UNKWN_VLAN_DFT_1;           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_PLE_TX_UNKWN_VLAN_DFT_2_t           TX_UNKWN_VLAN_DFT_2;           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_PLE_TRUNK_GRP_CTRL_0_t              TRUNK_GRP_CTRL_0;              /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_PLE_TRUNK_GRP_0_MEMBER_0_t          TRUNK_GRP_0_MEMBER_0;          /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_PLE_TRUNK_GRP_0_MEMBER_1_t          TRUNK_GRP_0_MEMBER_1;          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_PLE_TRUNK_GRP_CTRL_1_t              TRUNK_GRP_CTRL_1;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_PLE_TRUNK_GRP_1_MEMBER_0_t          TRUNK_GRP_1_MEMBER_0;          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_PLE_TRUNK_GRP_1_MEMBER_1_t          TRUNK_GRP_1_MEMBER_1;          /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_PLE_HD_FF_CTL_REG_t                 HD_FF_CTL_REG;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_PLE_HD_FF_STS_REG_t                 HD_FF_STS_REG;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_PLE_HD_FF_HDR_CNT_t                 HD_FF_HDR_CNT;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_PLE_MC_WELL_KNOWN_IP_CTRL_t         MC_WELL_KNOWN_IP_CTRL;         /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_PLE_MC_WELL_KNOWN_IPV4_t            MC_WELL_KNOWN_IPV4;            /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_PLE_MC_WELL_KNOWN_IPV6_3_t          MC_WELL_KNOWN_IPV6_3;          /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_PLE_MC_WELL_KNOWN_IPV6_2_t          MC_WELL_KNOWN_IPV6_2;          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_PLE_MC_WELL_KNOWN_IPV6_1_t          MC_WELL_KNOWN_IPV6_1;          /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_PLE_MC_WELL_KNOWN_IPV6_0_t          MC_WELL_KNOWN_IPV6_0;          /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_PLE_DEBUG_BUS_t                     DEBUG_BUS;                     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_PLE_TX_DSCP_MAP_ACCESS_t            TX_DSCP_MAP_ACCESS;            /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_PLE_TX_DSCP_MAP_DATA_t              TX_DSCP_MAP_DATA;              /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2FE_PLE_TX_DOT1P_MAP_ACCESS_t           TX_DOT1P_MAP_ACCESS;           /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L2FE_PLE_TX_DOT1P_MAP_DATA_t             TX_DOT1P_MAP_DATA;             /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L2FE_PLE_DFT_FWD_ACCESS_t                DFT_FWD_ACCESS;                /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L2FE_PLE_DFT_FWD_DATA_t                  DFT_FWD_DATA;                  /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS_t       MMSHP_CHK_ID_MAP_ACCESS;       /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L2FE_PLE_MMSHP_CHK_ID_MAP_DATA_t         MMSHP_CHK_ID_MAP_DATA;         /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L2FE_PLE_PORT_MMSHP_CHK_ACCESS_t         PORT_MMSHP_CHK_ACCESS;         /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L2FE_PLE_PORT_MMSHP_CHK_DATA1_t          PORT_MMSHP_CHK_DATA1;          /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L2FE_PLE_PORT_MMSHP_CHK_DATA0_t          PORT_MMSHP_CHK_DATA0;          /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS_t     TRUNK_DEST_MAP_TBL_ACCESS;     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA_t       TRUNK_DEST_MAP_TBL_DATA;       /* addr: 0x00000084 */
} APB0_L2FE_PLE_t;
#endif /* !__ASSEMBLER__ */


/*
 * ARB
 */

#define L2FE_ARB_ARB_CTRL                        0xf4301600
#define L2FE_ARB_ARB_CTRL_dft                    0x09c71d80

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drop_redir_keep_old  :  1 ; /* bits 0:0 */
    ca_uint32_t dbuf_sel             :  1 ; /* bits 1:1 */
    ca_uint32_t ip_ecn_en            :  1 ; /* bits 2:2 */
    ca_uint32_t mc_idx_copy_en       :  1 ; /* bits 3:3 */
    ca_uint32_t dbuf_dpid            :  4 ; /* bits 7:4 */
    ca_uint32_t use_hdr_a_dbuf_en    :  1 ; /* bits 8:8 */
    ca_uint32_t dst_wan_dync_buf_sel :  1 ; /* bits 9:9 */
    ca_uint32_t wan_lpid             :  6 ; /* bits 15:10 */
    ca_uint32_t wan_ext_lpid         :  6 ; /* bits 21:16 */
    ca_uint32_t tm_wan_dpid          :  4 ; /* bits 25:22 */
    ca_uint32_t tqm_port7_empty_wait_cnt_h :  5 ; /* bits 30:26 */
    ca_uint32_t keep_o_lspid_en_for_mc :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_ARB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_PER_COS_DONT_MARK_CTRL          0xf4301604
#define L2FE_ARB_PER_COS_DONT_MARK_CTRL_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bitmap_dst_lan       :  8 ; /* bits 7:0 */
    ca_uint32_t bitmap_dst_wan       :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_PER_COS_DONT_MARK_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_ARB_TTL_TRAP                    0xf4301608
#define L2FE_ARB_ARB_TTL_TRAP_dft                0x00000280

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos                  :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid                :  6 ; /* bits 8:3 */
    ca_uint32_t keep_old             :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_ARB_TTL_TRAP_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_ARB_CTRL_EXT                    0xf430160c
#define L2FE_ARB_ARB_CTRL_EXT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mc_pkt_port_mmshp_chk_en :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_ARB_CTRL_EXT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_ARB_DEBUG                       0xf4301610
#define L2FE_ARB_ARB_DEBUG_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_ARB_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS   0xf4301614
#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA     0xf4301618
#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_cos_vld         :  1 ; /* bits 0:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 3:1 */
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 9:4 */
    ca_uint32_t rdir_en              :  1 ; /* bits 10:10 */
    ca_uint32_t rdir_wan_dst         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS 0xf430161c
#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA  0xf4301620
#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_cos_vld         :  1 ; /* bits 0:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 3:1 */
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 9:4 */
    ca_uint32_t rdir_en              :  1 ; /* bits 10:10 */
    ca_uint32_t rdir_wan_dst         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS    0xf4301624
#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA      0xf4301628
#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flooding_pol_id      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS         0xf430162c
#define L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_DSCP_TE_MARK_TBL_DATA           0xf4301630
#define L2FE_ARB_DSCP_TE_MARK_TBL_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_value           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_DSCP_TE_MARK_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_MC_FIB_TBL_ACCESS               0xf4301634
#define L2FE_ARB_MC_FIB_TBL_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_MC_FIB_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_MC_FIB_TBL_DATA2                0xf4301638
#define L2FE_ARB_MC_FIB_TBL_DATA2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t permit_spid_en       :  1 ; /* bits 0:0 */
    ca_uint32_t mac_sa_cmd           :  1 ; /* bits 1:1 */
    ca_uint32_t mac_sa_sel           :  3 ; /* bits 4:2 */
    ca_uint32_t cos                  :  3 ; /* bits 7:5 */
    ca_uint32_t ip_ttl_zero_fwd_ctrl :  2 ; /* bits 9:8 */
    ca_uint32_t ip_ttl_dec_cmd       :  1 ; /* bits 10:10 */
    ca_uint32_t keep_o_lspid         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_MC_FIB_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_MC_FIB_TBL_DATA1                0xf430163c
#define L2FE_ARB_MC_FIB_TBL_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s_vlan_cmd           :  2 ; /* bits 1:0 */
    ca_uint32_t s_vid                : 12 ; /* bits 13:2 */
    ca_uint32_t s_tpid_cmd           :  1 ; /* bits 14:14 */
    ca_uint32_t s_tpid_sel           :  2 ; /* bits 16:15 */
    ca_uint32_t dot1p_cmd            :  2 ; /* bits 18:17 */
    ca_uint32_t dot1p                :  3 ; /* bits 21:19 */
    ca_uint32_t dei_cmd              :  1 ; /* bits 22:22 */
    ca_uint32_t dei                  :  1 ; /* bits 23:23 */
    ca_uint32_t ldpid                :  6 ; /* bits 29:24 */
    ca_uint32_t cos_cmd              :  1 ; /* bits 30:30 */
    ca_uint32_t wan_dst              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_MC_FIB_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_MC_FIB_TBL_DATA0                0xf4301640
#define L2FE_ARB_MC_FIB_TBL_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t c_vlan_cmd           :  2 ; /* bits 1:0 */
    ca_uint32_t c_vid                : 12 ; /* bits 13:2 */
    ca_uint32_t c_tpid_cmd           :  1 ; /* bits 14:14 */
    ca_uint32_t c_tpid_sel           :  1 ; /* bits 15:15 */
    ca_uint32_t c_dot1p_cmd          :  2 ; /* bits 17:16 */
    ca_uint32_t c_dot1p              :  3 ; /* bits 20:18 */
    ca_uint32_t c_dei_cmd            :  1 ; /* bits 21:21 */
    ca_uint32_t c_dei                :  1 ; /* bits 22:22 */
    ca_uint32_t pol_id               :  9 ; /* bits 31:23 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_MC_FIB_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_FLOW_DBUF_TBL_ACCESS            0xf4301644
#define L2FE_ARB_FLOW_DBUF_TBL_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_FLOW_DBUF_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_FLOW_DBUF_TBL_DATA              0xf4301648
#define L2FE_ARB_FLOW_DBUF_TBL_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbuf_flg_0           :  1 ; /* bits 0:0 */
    ca_uint32_t dbuf_flg_1           :  1 ; /* bits 1:1 */
    ca_uint32_t dbuf_flg_2           :  1 ; /* bits 2:2 */
    ca_uint32_t dbuf_flg_3           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_FLOW_DBUF_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_PORT_DBUF_TBL_ACCESS            0xf430164c
#define L2FE_ARB_PORT_DBUF_TBL_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_PORT_DBUF_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_PORT_DBUF_TBL_DATA              0xf4301650
#define L2FE_ARB_PORT_DBUF_TBL_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbuf_flg             :  1 ; /* bits 0:0 */
    ca_uint32_t ldpid_vld            :  1 ; /* bits 1:1 */
    ca_uint32_t ldpid                :  6 ; /* bits 7:2 */
    ca_uint32_t lspid_vld            :  1 ; /* bits 8:8 */
    ca_uint32_t lspid                :  6 ; /* bits 14:9 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_PORT_DBUF_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_PDPID_MAP_TBL_ACCESS            0xf4301654
#define L2FE_ARB_PDPID_MAP_TBL_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_PDPID_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_ARB_PDPID_MAP_TBL_DATA              0xf4301658
#define L2FE_ARB_PDPID_MAP_TBL_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pdpid                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_ARB_PDPID_MAP_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ARB */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_ARB_ARB_CTRL_t                      ARB_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_ARB_PER_COS_DONT_MARK_CTRL_t        PER_COS_DONT_MARK_CTRL;        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_ARB_ARB_TTL_TRAP_t                  ARB_TTL_TRAP;                  /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_ARB_ARB_CTRL_EXT_t                  ARB_CTRL_EXT;                  /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_ARB_ARB_DEBUG_t                     ARB_DEBUG;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS_t REDIR_LDPID_CONFIG_TBL_ACCESS; /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA_t   REDIR_LDPID_CONFIG_TBL_DATA;   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS_t REDIR_DROP_SRC_CONFIG_TBL_ACCESS; /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA_t REDIR_DROP_SRC_CONFIG_TBL_DATA; /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS_t  NON_KNOWN_POL_MAP_TBL_ACCESS;  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA_t    NON_KNOWN_POL_MAP_TBL_DATA;    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS_t       DSCP_TE_MARK_TBL_ACCESS;       /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_ARB_DSCP_TE_MARK_TBL_DATA_t         DSCP_TE_MARK_TBL_DATA;         /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_ARB_MC_FIB_TBL_ACCESS_t             MC_FIB_TBL_ACCESS;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_ARB_MC_FIB_TBL_DATA2_t              MC_FIB_TBL_DATA2;              /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_ARB_MC_FIB_TBL_DATA1_t              MC_FIB_TBL_DATA1;              /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_ARB_MC_FIB_TBL_DATA0_t              MC_FIB_TBL_DATA0;              /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_ARB_FLOW_DBUF_TBL_ACCESS_t          FLOW_DBUF_TBL_ACCESS;          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_ARB_FLOW_DBUF_TBL_DATA_t            FLOW_DBUF_TBL_DATA;            /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_ARB_PORT_DBUF_TBL_ACCESS_t          PORT_DBUF_TBL_ACCESS;          /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_ARB_PORT_DBUF_TBL_DATA_t            PORT_DBUF_TBL_DATA;            /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_ARB_PDPID_MAP_TBL_ACCESS_t          PDPID_MAP_TBL_ACCESS;          /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_ARB_PDPID_MAP_TBL_DATA_t            PDPID_MAP_TBL_DATA;            /* addr: 0x00000058 */
} APB0_L2FE_ARB_t;
#endif /* !__ASSEMBLER__ */


/*
 * PE
 */

#define L2FE_PE_CTRL                             0xf4301700
#define L2FE_PE_CTRL_dft                         0x000000f0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2_padding_dis       :  1 ; /* bits 0:0 */
    ca_uint32_t use_rx_bypass        :  1 ; /* bits 1:1 */
    ca_uint32_t mod_orig_tag         :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t wan_top_dei_keep_old :  1 ; /* bits 4:4 */
    ca_uint32_t lan_top_dei_keep_old :  1 ; /* bits 5:5 */
    ca_uint32_t wan_inner_dei_keep_old :  1 ; /* bits 6:6 */
    ca_uint32_t lan_inner_dei_keep_old :  1 ; /* bits 7:7 */
    ca_uint32_t enhance_tpid_mode    :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CFG_VLAN_TPID_A                  0xf4301704
#define L2FE_PE_CFG_VLAN_TPID_A_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CFG_VLAN_TPID_A_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CFG_VLAN_TPID_B                  0xf4301708
#define L2FE_PE_CFG_VLAN_TPID_B_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CFG_VLAN_TPID_B_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CFG_VLAN_TPID_C                  0xf430170c
#define L2FE_PE_CFG_VLAN_TPID_C_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CFG_VLAN_TPID_C_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CFG_VLAN_TPID_D                  0xf4301710
#define L2FE_PE_CFG_VLAN_TPID_D_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CFG_VLAN_TPID_D_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_0                     0xf4301714
#define L2FE_PE_MY_MAC_LOW_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_0                    0xf4301718
#define L2FE_PE_MY_MAC_HIGH_0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_1                     0xf430171c
#define L2FE_PE_MY_MAC_LOW_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_1                    0xf4301720
#define L2FE_PE_MY_MAC_HIGH_1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_2                     0xf4301724
#define L2FE_PE_MY_MAC_LOW_2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_2                    0xf4301728
#define L2FE_PE_MY_MAC_HIGH_2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_3                     0xf430172c
#define L2FE_PE_MY_MAC_LOW_3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_3                    0xf4301730
#define L2FE_PE_MY_MAC_HIGH_3_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_4                     0xf4301734
#define L2FE_PE_MY_MAC_LOW_4_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_4                    0xf4301738
#define L2FE_PE_MY_MAC_HIGH_4_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_5                     0xf430173c
#define L2FE_PE_MY_MAC_LOW_5_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_5_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_5                    0xf4301740
#define L2FE_PE_MY_MAC_HIGH_5_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_5_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_6                     0xf4301744
#define L2FE_PE_MY_MAC_LOW_6_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_6_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_6                    0xf4301748
#define L2FE_PE_MY_MAC_HIGH_6_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_6_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_LOW_7                     0xf430174c
#define L2FE_PE_MY_MAC_LOW_7_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_LOW_7_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_MY_MAC_HIGH_7                    0xf4301750
#define L2FE_PE_MY_MAC_HIGH_7_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_MY_MAC_HIGH_7_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CMD_FF_CTL_REG                   0xf4301754
#define L2FE_PE_CMD_FF_CTL_REG_dft               0x00004343

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_thr_mir          :  4 ; /* bits 3:0 */
    ca_uint32_t high_thr_mir         :  4 ; /* bits 7:4 */
    ca_uint32_t low_thr_ppl          :  4 ; /* bits 11:8 */
    ca_uint32_t high_thr_ppl         :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CMD_FF_CTL_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CMD_FF_STS_REG                   0xf4301758
#define L2FE_PE_CMD_FF_STS_REG_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t overflow_ind_mir     :  1 ; /* bits 0:0 */
    ca_uint32_t overflow_ind_ppl     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CMD_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_CMD_FF_CMD_CNT                   0xf430175c
#define L2FE_PE_CMD_FF_CMD_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num_mir              :  4 ; /* bits 3:0 */
    ca_uint32_t num_ppl              :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_CMD_FF_CMD_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_TM_INTERFACE_PKT_CNT             0xf4301760
#define L2FE_PE_TM_INTERFACE_PKT_CNT_dft         0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_TM_INTERFACE_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_DROP_CNT_TBL_CLR                 0xf4301764
#define L2FE_PE_DROP_CNT_TBL_CLR_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t set                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_DROP_CNT_TBL_CLR_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_HEADER_A_LOW                     0xf4301768
#define L2FE_PE_HEADER_A_LOW_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_HEADER_A_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_HEADER_A_MID                     0xf430176c
#define L2FE_PE_HEADER_A_MID_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_HEADER_A_MID_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_HEADER_A_HI                      0xf4301770
#define L2FE_PE_HEADER_A_HI_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_HEADER_A_HI_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_DROP_CNT_GEAR_FF_CNT             0xf4301774
#define L2FE_PE_DROP_CNT_GEAR_FF_CNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_DROP_CNT_GEAR_FF_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_DROP_CNT_GEAR_FF_STS             0xf4301778
#define L2FE_PE_DROP_CNT_GEAR_FF_STS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_DROP_CNT_GEAR_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_DEBUG                            0xf430177c
#define L2FE_PE_DEBUG_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_sel              :  4 ; /* bits 3:0 */
    ca_uint32_t fe2tm_pkt_cnt_wrap_en :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_DROP_STTS_ACCESS                 0xf4301780
#define L2FE_PE_DROP_STTS_ACCESS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_DROP_STTS_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_DROP_STTS_DATA                   0xf4301784
#define L2FE_PE_DROP_STTS_DATA_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_DROP_STTS_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS       0xf4301788
#define L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PE_TPID_SEL_CONFIG_TBL_DATA         0xf430178c
#define L2FE_PE_TPID_SEL_CONFIG_TBL_DATA_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctag                 :  2 ; /* bits 1:0 */
    ca_uint32_t stag                 :  2 ; /* bits 3:2 */
    ca_uint32_t inner_ctag           :  2 ; /* bits 5:4 */
    ca_uint32_t inner_stag           :  2 ; /* bits 7:6 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PE_TPID_SEL_CONFIG_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_PE_CTRL_t                           CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_PE_CFG_VLAN_TPID_A_t                CFG_VLAN_TPID_A;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_PE_CFG_VLAN_TPID_B_t                CFG_VLAN_TPID_B;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_PE_CFG_VLAN_TPID_C_t                CFG_VLAN_TPID_C;               /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_PE_CFG_VLAN_TPID_D_t                CFG_VLAN_TPID_D;               /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_PE_MY_MAC_LOW_0_t                   MY_MAC_LOW_0;                  /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_PE_MY_MAC_HIGH_0_t                  MY_MAC_HIGH_0;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_PE_MY_MAC_LOW_1_t                   MY_MAC_LOW_1;                  /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_PE_MY_MAC_HIGH_1_t                  MY_MAC_HIGH_1;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_PE_MY_MAC_LOW_2_t                   MY_MAC_LOW_2;                  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_PE_MY_MAC_HIGH_2_t                  MY_MAC_HIGH_2;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_PE_MY_MAC_LOW_3_t                   MY_MAC_LOW_3;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_PE_MY_MAC_HIGH_3_t                  MY_MAC_HIGH_3;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_PE_MY_MAC_LOW_4_t                   MY_MAC_LOW_4;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_PE_MY_MAC_HIGH_4_t                  MY_MAC_HIGH_4;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_PE_MY_MAC_LOW_5_t                   MY_MAC_LOW_5;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_PE_MY_MAC_HIGH_5_t                  MY_MAC_HIGH_5;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_PE_MY_MAC_LOW_6_t                   MY_MAC_LOW_6;                  /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_PE_MY_MAC_HIGH_6_t                  MY_MAC_HIGH_6;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_PE_MY_MAC_LOW_7_t                   MY_MAC_LOW_7;                  /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_PE_MY_MAC_HIGH_7_t                  MY_MAC_HIGH_7;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_PE_CMD_FF_CTL_REG_t                 CMD_FF_CTL_REG;                /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_PE_CMD_FF_STS_REG_t                 CMD_FF_STS_REG;                /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2FE_PE_CMD_FF_CMD_CNT_t                 CMD_FF_CMD_CNT;                /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L2FE_PE_TM_INTERFACE_PKT_CNT_t           TM_INTERFACE_PKT_CNT;          /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L2FE_PE_DROP_CNT_TBL_CLR_t               DROP_CNT_TBL_CLR;              /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L2FE_PE_HEADER_A_LOW_t                   HEADER_A_LOW;                  /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L2FE_PE_HEADER_A_MID_t                   HEADER_A_MID;                  /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L2FE_PE_HEADER_A_HI_t                    HEADER_A_HI;                   /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L2FE_PE_DROP_CNT_GEAR_FF_CNT_t           DROP_CNT_GEAR_FF_CNT;          /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L2FE_PE_DROP_CNT_GEAR_FF_STS_t           DROP_CNT_GEAR_FF_STS;          /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L2FE_PE_DEBUG_t                          DEBUG;                         /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L2FE_PE_DROP_STTS_ACCESS_t               DROP_STTS_ACCESS;              /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L2FE_PE_DROP_STTS_DATA_t                 DROP_STTS_DATA;                /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS_t     TPID_SEL_CONFIG_TBL_ACCESS;    /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L2FE_PE_TPID_SEL_CONFIG_TBL_DATA_t       TPID_SEL_CONFIG_TBL_DATA;      /* addr: 0x0000008c */
} APB0_L2FE_PE_t;
#endif /* !__ASSEMBLER__ */


/*
 * LF
 */

#define L2FE_LF_THRESHOLD                        0xf4301900
#define L2FE_LF_THRESHOLD_dft                    0x0001d8b4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low                  :  9 ; /* bits 8:0 */
    ca_uint32_t high                 :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_LF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_LF_CNT                              0xf4301904
#define L2FE_LF_CNT_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t entry_cnt            :  9 ; /* bits 8:0 */
    ca_uint32_t seg_cnt              :  7 ; /* bits 15:9 */
    ca_uint32_t extra_store_cnt      :  2 ; /* bits 17:16 */
    ca_uint32_t data_ltched          :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_LF_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_LF_STS                              0xf4301908
#define L2FE_LF_STS_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_LF_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_LF_DEBUG                            0xf430190c
#define L2FE_LF_DEBUG_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_LF_DEBUG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LF */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_LF_THRESHOLD_t                      THRESHOLD;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_LF_CNT_t                            CNT;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_LF_STS_t                            STS;                           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_LF_DEBUG_t                          DEBUG;                         /* addr: 0x0000000c */
} APB0_L2FE_LF_t;
#endif /* !__ASSEMBLER__ */


/*
 * VE
 */

#define L2FE_VE_DEBUG_BUS                        0xf4301a00
#define L2FE_VE_DEBUG_BUS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_WAN_SVL_IDX_ACCESS               0xf4301a04
#define L2FE_VE_WAN_SVL_IDX_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_WAN_SVL_IDX_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_WAN_SVL_IDX_DATA                 0xf4301a08
#define L2FE_VE_WAN_SVL_IDX_DATA_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wan_svl_idx_entry_vld :  1 ; /* bits 0:0 */
    ca_uint32_t wan_svl_idx_fib_idx  :  7 ; /* bits 7:1 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_WAN_SVL_IDX_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_VL_FIB_ACCESS                    0xf4301a0c
#define L2FE_VE_VL_FIB_ACCESS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_VL_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_VL_FIB_DATA1                     0xf4301a10
#define L2FE_VE_VL_FIB_DATA1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wan_svl_fib_vl_group_id : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_VL_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_VL_FIB_DATA0                     0xf4301a14
#define L2FE_VE_VL_FIB_DATA0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wan_svl_fib_egress_top_untag_bm : 16 ; /* bits 15:0 */
    ca_uint32_t wan_svl_fib_membership_bm : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_VL_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_WAN_CVL_IDX_ACCESS               0xf4301a18
#define L2FE_VE_WAN_CVL_IDX_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_WAN_CVL_IDX_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_WAN_CVL_IDX_DATA                 0xf4301a1c
#define L2FE_VE_WAN_CVL_IDX_DATA_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wan_cvl_idx_entry_vld :  1 ; /* bits 0:0 */
    ca_uint32_t wan_cvl_idx_fib_idx  :  7 ; /* bits 7:1 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_WAN_CVL_IDX_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_LAN_VL_IDX_ACCESS                0xf4301a20
#define L2FE_VE_LAN_VL_IDX_ACCESS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_LAN_VL_IDX_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_VE_LAN_VL_IDX_DATA                  0xf4301a24
#define L2FE_VE_LAN_VL_IDX_DATA_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lan_vl_idx_entry_vld :  1 ; /* bits 0:0 */
    ca_uint32_t lan_vl_idx_fib_idx   :  7 ; /* bits 7:1 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_VE_LAN_VL_IDX_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* VE */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_VE_DEBUG_BUS_t                      DEBUG_BUS;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_VE_WAN_SVL_IDX_ACCESS_t             WAN_SVL_IDX_ACCESS;            /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_VE_WAN_SVL_IDX_DATA_t               WAN_SVL_IDX_DATA;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_VE_VL_FIB_ACCESS_t                  VL_FIB_ACCESS;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_VE_VL_FIB_DATA1_t                   VL_FIB_DATA1;                  /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_VE_VL_FIB_DATA0_t                   VL_FIB_DATA0;                  /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_VE_WAN_CVL_IDX_ACCESS_t             WAN_CVL_IDX_ACCESS;            /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_VE_WAN_CVL_IDX_DATA_t               WAN_CVL_IDX_DATA;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_VE_LAN_VL_IDX_ACCESS_t              LAN_VL_IDX_ACCESS;             /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_VE_LAN_VL_IDX_DATA_t                LAN_VL_IDX_DATA;               /* addr: 0x00000024 */
} APB0_L2FE_VE_t;
#endif /* !__ASSEMBLER__ */


/*
 * CLE
 */

#define L2FE_CLE_CTRL                            0xf4301b00
#define L2FE_CLE_CTRL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t igr_use_frst_hit     :  1 ; /* bits 0:0 */
    ca_uint32_t egr_use_frst_hit     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_CONFG_STTS1                     0xf4301b04
#define L2FE_CLE_CONFG_STTS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t igr_configured_length_over_size :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_CONFG_STTS1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_DEBUG                           0xf4301b08
#define L2FE_CLE_DEBUG_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t igr_cls_bus_sel      :  2 ; /* bits 1:0 */
    ca_uint32_t egr_cls_bus_sel      :  2 ; /* bits 3:2 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_ACCESS                  0xf4301b0c
#define L2FE_CLE_IGR_KEY_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA12                  0xf4301b10
#define L2FE_CLE_IGR_KEY_DATA12_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_reserved :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_orhr_ipv6_valid :  1 ; /* bits 8:8 */
    ca_uint32_t cl_key_entry_type    :  2 ; /* bits 10:9 */
    ca_uint32_t cl_key_valid         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_l4_ext_flags :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_orhr_ipv6e_tos_mask_l :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_orhr_ipv6e_reserved :  3 ; /* bits 7:5 */
    ca_uint32_t cl_key_orhr_ipv6e_idle_field :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_1_reserved :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_rule_type_1 :  2 ; /* bits 5:4 */
    ca_uint32_t cl_key_tre_rule_type_0 :  2 ; /* bits 7:6 */
    ca_uint32_t cl_key_tre_rule_hinge :  1 ; /* bits 8:8 */
    ca_uint32_t cl_key_tre_rule_idle_field :  3 ; /* bits 11:9 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_1_reserved :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_l2rl3r_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_1_reserved :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_l2rcmr_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_ext_flags :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_reserved :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_tre_l3rl2r_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_ext_flags :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_reserved :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_tre_l3rl3r_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_ext_flags :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_reserved :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_tre_l3rcmr_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_tos_mask_l :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_reserved :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_tre_cmrl2r_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_tos_mask_l :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_reserved :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_tre_cmrl3r_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_tos_mask_l :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_reserved :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_tre_cmrcmr_idle_field :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_rule15_valid :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_stre_rule1_0_ctrl :  1 ; /* bits 1:1 */
    ca_uint32_t cl_key_stre_rule3_2_ctrl :  1 ; /* bits 2:2 */
    ca_uint32_t cl_key_stre_rule5_4_ctrl :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_stre_rule7_6_ctrl :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_stre_rule9_8_ctrl :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_stre_rule11_10_ctrl :  1 ; /* bits 6:6 */
    ca_uint32_t cl_key_stre_rule13_12_ctrl :  1 ; /* bits 7:7 */
    ca_uint32_t cl_key_stre_rule15_14_ctrl :  1 ; /* bits 8:8 */
    ca_uint32_t cl_key_stre_idle_field :  3 ; /* bits 11:9 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA12_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA11                  0xf4301b14
#define L2FE_CLE_IGR_KEY_DATA11_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_mac_da :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_ecn_mask :  1 ; /* bits 8:8 */
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_ecn :  2 ; /* bits 10:9 */
    ca_uint32_t cl_key_orhr_ipv4e_pol_id_abbr_mask :  1 ; /* bits 11:11 */
    ca_uint32_t cl_key_orhr_ipv4e_pol_id_abbr :  9 ; /* bits 20:12 */
    ca_uint32_t cl_key_orhr_ipv4e_inner_dei_mask :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_orhr_ipv4e_inner_dei :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_orhr_ipv4e_top_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_orhr_ipv4e_top_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_flags_op :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_ext_flags :  3 ; /* bits 28:26 */
    ca_uint32_t cl_key_orhr_ipv4e_tos_mask_l :  3 ; /* bits 31:29 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 27 ; /* bits 26:0 */
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_ecn_mask :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_ecn :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_orhr_ipv6e_l4_flags_op :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_orhr_ipv6e_l4_ext_flags :  1 ; /* bits 31:31 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_1_mac_da : 24 ; /* bits 23:0 */
    ca_uint32_t cl_key_tre_l2rl2r_1_pol_id_use_inner_vid :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l2rl2r_1_inner_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l2rl2r_1_inner_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l2rl2r_1_top_dei_mask :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l2rl2r_1_top_dei :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l2rl2r_1_reserved :  3 ; /* bits 31:29 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_1_mac_da : 24 ; /* bits 23:0 */
    ca_uint32_t cl_key_tre_l2rl3r_1_pol_id_use_inner_vid :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l2rl3r_1_inner_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l2rl3r_1_inner_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l2rl3r_1_top_dei_mask :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l2rl3r_1_top_dei :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l2rl3r_1_reserved :  3 ; /* bits 31:29 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_1_mac_da : 24 ; /* bits 23:0 */
    ca_uint32_t cl_key_tre_l2rcmr_1_pol_id_use_inner_vid :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l2rcmr_1_inner_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l2rcmr_1_inner_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l2rcmr_1_top_dei_mask :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l2rcmr_1_top_dei :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l2rcmr_1_reserved :  3 ; /* bits 31:29 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_da : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ecn_mask :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ecn :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_tre_l3rl2r_1_pol_id_use_inner_vid :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l3rl2r_1_inner_dei_mask :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l3rl2r_1_inner_dei :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l3rl2r_1_top_dei_mask :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l3rl2r_1_top_dei :  1 ; /* bits 29:29 */
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_flags_op :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_ext_flags :  1 ; /* bits 31:31 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_da : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ecn_mask :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ecn :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_tre_l3rl3r_1_pol_id_use_inner_vid :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l3rl3r_1_inner_dei_mask :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l3rl3r_1_inner_dei :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l3rl3r_1_top_dei_mask :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l3rl3r_1_top_dei :  1 ; /* bits 29:29 */
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_flags_op :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_ext_flags :  1 ; /* bits 31:31 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_da : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ecn_mask :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ecn :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_tre_l3rcmr_1_pol_id_use_inner_vid :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l3rcmr_1_inner_dei_mask :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l3rcmr_1_inner_dei :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l3rcmr_1_top_dei_mask :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l3rcmr_1_top_dei :  1 ; /* bits 29:29 */
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_flags_op :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_ext_flags :  1 ; /* bits 31:31 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ecn_mask :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ecn :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_tre_cmrl2r_1_top_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_cmrl2r_1_top_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_flags_op :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_ext_flags :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_tos_mask_l :  1 ; /* bits 31:31 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ecn_mask :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ecn :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_tre_cmrl3r_1_top_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_cmrl3r_1_top_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_flags_op :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_ext_flags :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_tos_mask_l :  1 ; /* bits 31:31 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ecn_mask :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ecn :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_tre_cmrcmr_1_top_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_cmrcmr_1_top_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_flags_op :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_ext_flags :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_tos_mask_l :  1 ; /* bits 31:31 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_14_sc_ind :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_stre_vlanid_14 : 12 ; /* bits 12:1 */
    ca_uint32_t cl_key_stre_rule14_valid :  1 ; /* bits 13:13 */
    ca_uint32_t cl_key_stre_mask_15  :  2 ; /* bits 15:14 */
    ca_uint32_t cl_key_stre_dot1p_15 :  3 ; /* bits 18:16 */
    ca_uint32_t cl_key_stre_vlanid_15_sc_ind :  1 ; /* bits 19:19 */
    ca_uint32_t cl_key_stre_vlanid_15 : 12 ; /* bits 31:20 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA11_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA10                  0xf4301b18
#define L2FE_CLE_IGR_KEY_DATA10_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_mac_da : 32 ; /* bits 31:0 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32 ; /* bits 31:0 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_tre_l2rl2r_1_mac_da : 24 ; /* bits 31:8 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_tre_l2rl3r_1_mac_da : 24 ; /* bits 31:8 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_tre_l2rcmr_1_mac_da : 24 ; /* bits 31:8 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_sa : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_da : 10 ; /* bits 31:22 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_sa : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_da : 10 ; /* bits 31:22 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_sa : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_da : 10 ; /* bits 31:22 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr : 26 ; /* bits 31:6 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr : 26 ; /* bits 31:6 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr : 26 ; /* bits 31:6 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_12 :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_stre_rule12_valid :  1 ; /* bits 7:7 */
    ca_uint32_t cl_key_stre_mask_13  :  2 ; /* bits 9:8 */
    ca_uint32_t cl_key_stre_dot1p_13 :  3 ; /* bits 12:10 */
    ca_uint32_t cl_key_stre_vlanid_13_sc_ind :  1 ; /* bits 13:13 */
    ca_uint32_t cl_key_stre_vlanid_13 : 12 ; /* bits 25:14 */
    ca_uint32_t cl_key_stre_rule13_valid :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_stre_mask_14  :  2 ; /* bits 28:27 */
    ca_uint32_t cl_key_stre_dot1p_14 :  3 ; /* bits 31:29 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA10_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA9                   0xf4301b1c
#define L2FE_CLE_IGR_KEY_DATA9_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_mac_sa : 24 ; /* bits 23:0 */
    ca_uint32_t cl_key_orhr_ipv4e_mac_da :  8 ; /* bits 31:24 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32 ; /* bits 31:0 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 32 ; /* bits 31:0 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 32 ; /* bits 31:0 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 32 ; /* bits 31:0 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_1_special_pkt_code :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_flags :  3 ; /* bits 5:3 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_fragment :  1 ; /* bits 6:6 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_option :  1 ; /* bits 7:7 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ip_tos :  6 ; /* bits 13:8 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ip_pt :  8 ; /* bits 21:14 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_sa : 10 ; /* bits 31:22 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_1_special_pkt_code :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_flags :  3 ; /* bits 5:3 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_fragment :  1 ; /* bits 6:6 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_option :  1 ; /* bits 7:7 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ip_tos :  6 ; /* bits 13:8 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ip_pt :  8 ; /* bits 21:14 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_sa : 10 ; /* bits 31:22 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_1_special_pkt_code :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_flags :  3 ; /* bits 5:3 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_fragment :  1 ; /* bits 6:6 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_option :  1 ; /* bits 7:7 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ip_tos :  6 ; /* bits 13:8 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ip_pt :  8 ; /* bits 21:14 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_sa : 10 ; /* bits 31:22 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_1_ip_pt :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr : 26 ; /* bits 31:6 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_1_ip_pt :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr : 26 ; /* bits 31:6 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_1_ip_pt :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr : 26 ; /* bits 31:6 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_10 :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_stre_rule10_valid :  1 ; /* bits 1:1 */
    ca_uint32_t cl_key_stre_mask_11  :  2 ; /* bits 3:2 */
    ca_uint32_t cl_key_stre_dot1p_11 :  3 ; /* bits 6:4 */
    ca_uint32_t cl_key_stre_vlanid_11_sc_ind :  1 ; /* bits 7:7 */
    ca_uint32_t cl_key_stre_vlanid_11 : 12 ; /* bits 19:8 */
    ca_uint32_t cl_key_stre_rule11_valid :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_stre_mask_12  :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_stre_dot1p_12 :  3 ; /* bits 25:23 */
    ca_uint32_t cl_key_stre_vlanid_12_sc_ind :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_stre_vlanid_12 :  5 ; /* bits 31:27 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA9_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA8                   0xf4301b20
#define L2FE_CLE_IGR_KEY_DATA8_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_top_vid :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_orhr_ipv4e_mac_sa : 24 ; /* bits 31:8 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32 ; /* bits 31:0 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_1_inner_vid : 11 ; /* bits 10:0 */
    ca_uint32_t cl_key_tre_l2rl2r_1_top_sc_ind :  1 ; /* bits 11:11 */
    ca_uint32_t cl_key_tre_l2rl2r_1_top_vid : 12 ; /* bits 23:12 */
    ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa :  8 ; /* bits 31:24 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_1_inner_vid : 11 ; /* bits 10:0 */
    ca_uint32_t cl_key_tre_l2rl3r_1_top_sc_ind :  1 ; /* bits 11:11 */
    ca_uint32_t cl_key_tre_l2rl3r_1_top_vid : 12 ; /* bits 23:12 */
    ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa :  8 ; /* bits 31:24 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_1_inner_vid : 11 ; /* bits 10:0 */
    ca_uint32_t cl_key_tre_l2rcmr_1_top_sc_ind :  1 ; /* bits 11:11 */
    ca_uint32_t cl_key_tre_l2rcmr_1_top_vid : 12 ; /* bits 23:12 */
    ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa :  8 ; /* bits 31:24 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_1_inner_802_1p :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_top_802_1p :  3 ; /* bits 3:1 */
    ca_uint32_t cl_key_tre_l3rl2r_1_inner_sc_ind :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_tre_l3rl2r_1_inner_vid : 12 ; /* bits 16:5 */
    ca_uint32_t cl_key_tre_l3rl2r_1_top_sc_ind :  1 ; /* bits 17:17 */
    ca_uint32_t cl_key_tre_l3rl2r_1_top_vid : 12 ; /* bits 29:18 */
    ca_uint32_t cl_key_tre_l3rl2r_1_special_pkt_code :  2 ; /* bits 31:30 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_1_inner_802_1p :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_top_802_1p :  3 ; /* bits 3:1 */
    ca_uint32_t cl_key_tre_l3rl3r_1_inner_sc_ind :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_tre_l3rl3r_1_inner_vid : 12 ; /* bits 16:5 */
    ca_uint32_t cl_key_tre_l3rl3r_1_top_sc_ind :  1 ; /* bits 17:17 */
    ca_uint32_t cl_key_tre_l3rl3r_1_top_vid : 12 ; /* bits 29:18 */
    ca_uint32_t cl_key_tre_l3rl3r_1_special_pkt_code :  2 ; /* bits 31:30 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_1_inner_802_1p :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_top_802_1p :  3 ; /* bits 3:1 */
    ca_uint32_t cl_key_tre_l3rcmr_1_inner_sc_ind :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_tre_l3rcmr_1_inner_vid : 12 ; /* bits 16:5 */
    ca_uint32_t cl_key_tre_l3rcmr_1_top_sc_ind :  1 ; /* bits 17:17 */
    ca_uint32_t cl_key_tre_l3rcmr_1_top_vid : 12 ; /* bits 29:18 */
    ca_uint32_t cl_key_tre_l3rcmr_1_special_pkt_code :  2 ; /* bits 31:30 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_1_top_802_1p :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_top_sc_ind :  1 ; /* bits 1:1 */
    ca_uint32_t cl_key_tre_cmrl2r_1_top_vid : 12 ; /* bits 13:2 */
    ca_uint32_t cl_key_tre_cmrl2r_1_special_pkt_code :  5 ; /* bits 18:14 */
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_flags :  3 ; /* bits 21:19 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_fragment :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_option :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ip_tos :  6 ; /* bits 29:24 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ip_pt :  2 ; /* bits 31:30 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_1_top_802_1p :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_top_sc_ind :  1 ; /* bits 1:1 */
    ca_uint32_t cl_key_tre_cmrl3r_1_top_vid : 12 ; /* bits 13:2 */
    ca_uint32_t cl_key_tre_cmrl3r_1_special_pkt_code :  5 ; /* bits 18:14 */
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_flags :  3 ; /* bits 21:19 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_fragment :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_option :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ip_tos :  6 ; /* bits 29:24 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ip_pt :  2 ; /* bits 31:30 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_1_top_802_1p :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_top_sc_ind :  1 ; /* bits 1:1 */
    ca_uint32_t cl_key_tre_cmrcmr_1_top_vid : 12 ; /* bits 13:2 */
    ca_uint32_t cl_key_tre_cmrcmr_1_special_pkt_code :  5 ; /* bits 18:14 */
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_flags :  3 ; /* bits 21:19 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_fragment :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_option :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ip_tos :  6 ; /* bits 29:24 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ip_pt :  2 ; /* bits 31:30 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_dot1p_9  :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_stre_vlanid_9_sc_ind :  1 ; /* bits 1:1 */
    ca_uint32_t cl_key_stre_vlanid_9 : 12 ; /* bits 13:2 */
    ca_uint32_t cl_key_stre_rule9_valid :  1 ; /* bits 14:14 */
    ca_uint32_t cl_key_stre_mask_10  :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_stre_dot1p_10 :  3 ; /* bits 19:17 */
    ca_uint32_t cl_key_stre_vlanid_10_sc_ind :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_stre_vlanid_10 : 11 ; /* bits 31:21 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA7                   0xf4301b24
#define L2FE_CLE_IGR_KEY_DATA7_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_da :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_orhr_ipv4e_ev2_pt :  5 ; /* bits 5:1 */
    ca_uint32_t cl_key_orhr_ipv4e_tag_num :  2 ; /* bits 7:6 */
    ca_uint32_t cl_key_orhr_ipv4e_inner_802_1p :  3 ; /* bits 10:8 */
    ca_uint32_t cl_key_orhr_ipv4e_top_802_1p :  3 ; /* bits 13:11 */
    ca_uint32_t cl_key_orhr_ipv4e_inner_sc_ind :  1 ; /* bits 14:14 */
    ca_uint32_t cl_key_orhr_ipv4e_inner_vid : 12 ; /* bits 26:15 */
    ca_uint32_t cl_key_orhr_ipv4e_top_sc_ind :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_orhr_ipv4e_top_vid :  4 ; /* bits 31:28 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 27 ; /* bits 26:0 */
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_da :  5 ; /* bits 31:27 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_1_l4_sp :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l2rl2r_1_l4_dp : 16 ; /* bits 16:1 */
    ca_uint32_t cl_key_tre_l2rl2r_1_ev2_pt :  5 ; /* bits 21:17 */
    ca_uint32_t cl_key_tre_l2rl2r_1_tag_num :  2 ; /* bits 23:22 */
    ca_uint32_t cl_key_tre_l2rl2r_1_inner_802_1p :  3 ; /* bits 26:24 */
    ca_uint32_t cl_key_tre_l2rl2r_1_top_802_1p :  3 ; /* bits 29:27 */
    ca_uint32_t cl_key_tre_l2rl2r_1_inner_sc_ind :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_tre_l2rl2r_1_inner_vid :  1 ; /* bits 31:31 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_1_l4_sp :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l2rl3r_1_l4_dp : 16 ; /* bits 16:1 */
    ca_uint32_t cl_key_tre_l2rl3r_1_ev2_pt :  5 ; /* bits 21:17 */
    ca_uint32_t cl_key_tre_l2rl3r_1_tag_num :  2 ; /* bits 23:22 */
    ca_uint32_t cl_key_tre_l2rl3r_1_inner_802_1p :  3 ; /* bits 26:24 */
    ca_uint32_t cl_key_tre_l2rl3r_1_top_802_1p :  3 ; /* bits 29:27 */
    ca_uint32_t cl_key_tre_l2rl3r_1_inner_sc_ind :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_tre_l2rl3r_1_inner_vid :  1 ; /* bits 31:31 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_1_l4_sp :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l2rcmr_1_l4_dp : 16 ; /* bits 16:1 */
    ca_uint32_t cl_key_tre_l2rcmr_1_ev2_pt :  5 ; /* bits 21:17 */
    ca_uint32_t cl_key_tre_l2rcmr_1_tag_num :  2 ; /* bits 23:22 */
    ca_uint32_t cl_key_tre_l2rcmr_1_inner_802_1p :  3 ; /* bits 26:24 */
    ca_uint32_t cl_key_tre_l2rcmr_1_top_802_1p :  3 ; /* bits 29:27 */
    ca_uint32_t cl_key_tre_l2rcmr_1_inner_sc_ind :  1 ; /* bits 30:30 */
    ca_uint32_t cl_key_tre_l2rcmr_1_inner_vid :  1 ; /* bits 31:31 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_sp :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_dp : 16 ; /* bits 22:7 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ev2_pt :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_tre_l3rl2r_1_tag_num :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_tre_l3rl2r_1_inner_802_1p :  2 ; /* bits 31:30 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_sp :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_dp : 16 ; /* bits 22:7 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ev2_pt :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_tre_l3rl3r_1_tag_num :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_tre_l3rl3r_1_inner_802_1p :  2 ; /* bits 31:30 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_sp :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_dp : 16 ; /* bits 22:7 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ev2_pt :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_tre_l3rcmr_1_tag_num :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_tre_l3rcmr_1_inner_802_1p :  2 ; /* bits 31:30 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_sp :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_dp : 16 ; /* bits 22:7 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ev2_pt :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_tre_cmrl2r_1_tag_num :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_tre_cmrl2r_1_top_802_1p :  2 ; /* bits 31:30 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_sp :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_dp : 16 ; /* bits 22:7 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ev2_pt :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_tre_cmrl3r_1_tag_num :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_tre_cmrl3r_1_top_802_1p :  2 ; /* bits 31:30 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_sp :  7 ; /* bits 6:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_dp : 16 ; /* bits 22:7 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ev2_pt :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_tre_cmrcmr_1_tag_num :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_tre_cmrcmr_1_top_802_1p :  2 ; /* bits 31:30 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_7 :  8 ; /* bits 7:0 */
    ca_uint32_t cl_key_stre_rule7_valid :  1 ; /* bits 8:8 */
    ca_uint32_t cl_key_stre_mask_8   :  2 ; /* bits 10:9 */
    ca_uint32_t cl_key_stre_dot1p_8  :  3 ; /* bits 13:11 */
    ca_uint32_t cl_key_stre_vlanid_8_sc_ind :  1 ; /* bits 14:14 */
    ca_uint32_t cl_key_stre_vlanid_8 : 12 ; /* bits 26:15 */
    ca_uint32_t cl_key_stre_rule8_valid :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_stre_mask_9   :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_stre_dot1p_9  :  2 ; /* bits 31:30 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA6                   0xf4301b28
#define L2FE_CLE_IGR_KEY_DATA6_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_sa :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_da : 31 ; /* bits 31:1 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32 ; /* bits 31:0 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l2rl2r_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_l2rl2r_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l2rl2r_1_mask :  2 ; /* bits 7:6 */
    ca_uint32_t cl_key_tre_l2rl2r_1_l4_ctrl :  3 ; /* bits 10:8 */
    ca_uint32_t cl_key_tre_l2rl2r_1_dot1p_ctrl :  2 ; /* bits 12:11 */
    ca_uint32_t cl_key_tre_l2rl2r_1_vid_ctrl :  2 ; /* bits 14:13 */
    ca_uint32_t cl_key_tre_l2rl2r_1_mac_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_tre_l2rl2r_1_l4_sp : 15 ; /* bits 31:17 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l2rl3r_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_l2rl3r_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l2rl3r_1_mask :  2 ; /* bits 7:6 */
    ca_uint32_t cl_key_tre_l2rl3r_1_l4_ctrl :  3 ; /* bits 10:8 */
    ca_uint32_t cl_key_tre_l2rl3r_1_dot1p_ctrl :  2 ; /* bits 12:11 */
    ca_uint32_t cl_key_tre_l2rl3r_1_vid_ctrl :  2 ; /* bits 14:13 */
    ca_uint32_t cl_key_tre_l2rl3r_1_mac_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_tre_l2rl3r_1_l4_sp : 15 ; /* bits 31:17 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l2rcmr_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_l2rcmr_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l2rcmr_1_mask :  2 ; /* bits 7:6 */
    ca_uint32_t cl_key_tre_l2rcmr_1_l4_ctrl :  3 ; /* bits 10:8 */
    ca_uint32_t cl_key_tre_l2rcmr_1_dot1p_ctrl :  2 ; /* bits 12:11 */
    ca_uint32_t cl_key_tre_l2rcmr_1_vid_ctrl :  2 ; /* bits 14:13 */
    ca_uint32_t cl_key_tre_l2rcmr_1_mac_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_tre_l2rcmr_1_l4_sp : 15 ; /* bits 31:17 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rl2r_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_l3rl2r_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l3rl2r_1_mask :  8 ; /* bits 13:6 */
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_ctrl :  3 ; /* bits 16:14 */
    ca_uint32_t cl_key_tre_l3rl2r_1_dot1p_ctrl :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_tre_l3rl2r_1_vid_ctrl :  2 ; /* bits 20:19 */
    ca_uint32_t cl_key_tre_l3rl2r_1_ip_ctrl :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l3rl2r_1_l4_sp :  9 ; /* bits 31:23 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rl3r_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_l3rl3r_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l3rl3r_1_mask :  8 ; /* bits 13:6 */
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_ctrl :  3 ; /* bits 16:14 */
    ca_uint32_t cl_key_tre_l3rl3r_1_dot1p_ctrl :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_tre_l3rl3r_1_vid_ctrl :  2 ; /* bits 20:19 */
    ca_uint32_t cl_key_tre_l3rl3r_1_ip_ctrl :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l3rl3r_1_l4_sp :  9 ; /* bits 31:23 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rcmr_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_l3rcmr_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l3rcmr_1_mask :  8 ; /* bits 13:6 */
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_ctrl :  3 ; /* bits 16:14 */
    ca_uint32_t cl_key_tre_l3rcmr_1_dot1p_ctrl :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_tre_l3rcmr_1_vid_ctrl :  2 ; /* bits 20:19 */
    ca_uint32_t cl_key_tre_l3rcmr_1_ip_ctrl :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l3rcmr_1_l4_sp :  9 ; /* bits 31:23 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrl2r_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_cmrl2r_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_cmrl2r_1_mask : 12 ; /* bits 17:6 */
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_ctrl :  3 ; /* bits 20:18 */
    ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr_sel :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr_sel :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl2r_1_l4_sp :  9 ; /* bits 31:23 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrl3r_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_cmrl3r_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_cmrl3r_1_mask : 12 ; /* bits 17:6 */
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_ctrl :  3 ; /* bits 20:18 */
    ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr_sel :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr_sel :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl3r_1_l4_sp :  9 ; /* bits 31:23 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_reserved :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrcmr_1_prcd :  3 ; /* bits 4:2 */
    ca_uint32_t cl_key_tre_cmrcmr_1_fields_operator :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_cmrcmr_1_mask : 12 ; /* bits 17:6 */
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_ctrl :  3 ; /* bits 20:18 */
    ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr_sel :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr_sel :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrcmr_1_l4_sp :  9 ; /* bits 31:23 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_5 :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_stre_rule5_valid :  1 ; /* bits 2:2 */
    ca_uint32_t cl_key_stre_mask_6   :  2 ; /* bits 4:3 */
    ca_uint32_t cl_key_stre_dot1p_6  :  3 ; /* bits 7:5 */
    ca_uint32_t cl_key_stre_vlanid_6_sc_ind :  1 ; /* bits 8:8 */
    ca_uint32_t cl_key_stre_vlanid_6 : 12 ; /* bits 20:9 */
    ca_uint32_t cl_key_stre_rule6_valid :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_stre_mask_7   :  2 ; /* bits 23:22 */
    ca_uint32_t cl_key_stre_dot1p_7  :  3 ; /* bits 26:24 */
    ca_uint32_t cl_key_stre_vlanid_7_sc_ind :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_stre_vlanid_7 :  4 ; /* bits 31:28 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA5                   0xf4301b2c
#define L2FE_CLE_IGR_KEY_DATA5_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_ip_pt :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_sa : 31 ; /* bits 31:1 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32 ; /* bits 31:0 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_mac_da : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l2rl2r_2_pol_id_use_inner_vid :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_l2rl2r_2_inner_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_l2rl2r_2_inner_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l2rl2r_2_top_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l2rl2r_2_top_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l2rl2r_2_reserved :  5 ; /* bits 31:27 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_da : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ecn_mask :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ecn :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l2rl3r_2_pol_id_use_inner_vid :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_l2rl3r_2_inner_dei_mask :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l2rl3r_2_inner_dei :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l2rl3r_2_top_dei_mask :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l2rl3r_2_top_dei :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_flags_op :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_ext_flags :  3 ; /* bits 31:29 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ecn_mask :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ecn :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l2rcmr_2_top_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_l2rcmr_2_top_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_flags_op :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_ext_flags :  3 ; /* bits 28:26 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_tos_mask_l :  3 ; /* bits 31:29 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_mac_da : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_l3rl2r_2_pol_id_use_inner_vid :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_l3rl2r_2_inner_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_l3rl2r_2_inner_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l3rl2r_2_top_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l3rl2r_2_top_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l3rl2r_2_reserved :  5 ; /* bits 31:27 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_da : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ecn_mask :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ecn :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l3rl3r_2_pol_id_use_inner_vid :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_l3rl3r_2_inner_dei_mask :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l3rl3r_2_inner_dei :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l3rl3r_2_top_dei_mask :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_l3rl3r_2_top_dei :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_flags_op :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_ext_flags :  3 ; /* bits 31:29 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ecn_mask :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ecn :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_l3rcmr_2_top_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_l3rcmr_2_top_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_flags_op :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_ext_flags :  3 ; /* bits 28:26 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_tos_mask_l :  3 ; /* bits 31:29 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_mac_da : 22 ; /* bits 21:0 */
    ca_uint32_t cl_key_tre_cmrl2r_2_pol_id_use_inner_vid :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_tre_cmrl2r_2_inner_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_cmrl2r_2_inner_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_cmrl2r_2_top_dei_mask :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_cmrl2r_2_top_dei :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_cmrl2r_2_reserved :  5 ; /* bits 31:27 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_da : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ecn_mask :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ecn :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_cmrl3r_2_pol_id_use_inner_vid :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_cmrl3r_2_inner_dei_mask :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_cmrl3r_2_inner_dei :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_cmrl3r_2_top_dei_mask :  1 ; /* bits 26:26 */
    ca_uint32_t cl_key_tre_cmrl3r_2_top_dei :  1 ; /* bits 27:27 */
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_flags_op :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_ext_flags :  3 ; /* bits 31:29 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ecn_mask :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ecn :  2 ; /* bits 22:21 */
    ca_uint32_t cl_key_tre_cmrcmr_2_top_dei_mask :  1 ; /* bits 23:23 */
    ca_uint32_t cl_key_tre_cmrcmr_2_top_dei :  1 ; /* bits 24:24 */
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_flags_op :  1 ; /* bits 25:25 */
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_ext_flags :  3 ; /* bits 28:26 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_tos_mask_l :  3 ; /* bits 31:29 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_dot1p_4  :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_stre_vlanid_4_sc_ind :  1 ; /* bits 2:2 */
    ca_uint32_t cl_key_stre_vlanid_4 : 12 ; /* bits 14:3 */
    ca_uint32_t cl_key_stre_rule4_valid :  1 ; /* bits 15:15 */
    ca_uint32_t cl_key_stre_mask_5   :  2 ; /* bits 17:16 */
    ca_uint32_t cl_key_stre_dot1p_5  :  3 ; /* bits 20:18 */
    ca_uint32_t cl_key_stre_vlanid_5_sc_ind :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_stre_vlanid_5 : 10 ; /* bits 31:22 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA4                   0xf4301b30
#define L2FE_CLE_IGR_KEY_DATA4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_l4_dp_low :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_dp_high : 16 ; /* bits 16:1 */
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_fragment :  1 ; /* bits 17:17 */
    ca_uint32_t cl_key_orhr_ipv4e_ipv4_option :  1 ; /* bits 18:18 */
    ca_uint32_t cl_key_orhr_ipv4e_ip_tos :  6 ; /* bits 24:19 */
    ca_uint32_t cl_key_orhr_ipv4e_ip_pt :  7 ; /* bits 31:25 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32 ; /* bits 31:0 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_l2rl2r_2_mac_da : 26 ; /* bits 31:6 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_sa : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_da : 12 ; /* bits 31:20 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr : 28 ; /* bits 31:4 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_l3rl2r_2_mac_da : 26 ; /* bits 31:6 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_sa : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_da : 12 ; /* bits 31:20 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr : 28 ; /* bits 31:4 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa :  6 ; /* bits 5:0 */
    ca_uint32_t cl_key_tre_cmrl2r_2_mac_da : 26 ; /* bits 31:6 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_sa : 20 ; /* bits 19:0 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_da : 12 ; /* bits 31:20 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr : 28 ; /* bits 31:4 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_2 :  9 ; /* bits 8:0 */
    ca_uint32_t cl_key_stre_rule2_valid :  1 ; /* bits 9:9 */
    ca_uint32_t cl_key_stre_mask_3   :  2 ; /* bits 11:10 */
    ca_uint32_t cl_key_stre_dot1p_3  :  3 ; /* bits 14:12 */
    ca_uint32_t cl_key_stre_vlanid_3_sc_ind :  1 ; /* bits 15:15 */
    ca_uint32_t cl_key_stre_vlanid_3 : 12 ; /* bits 27:16 */
    ca_uint32_t cl_key_stre_rule3_valid :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_stre_mask_4   :  2 ; /* bits 30:29 */
    ca_uint32_t cl_key_stre_dot1p_4  :  1 ; /* bits 31:31 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA3                   0xf4301b34
#define L2FE_CLE_IGR_KEY_DATA3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_l4_sp_low :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_sp_high : 16 ; /* bits 16:1 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_dp_low : 15 ; /* bits 31:17 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_ip_tos :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_orhr_ipv6e_ip_pt :  8 ; /* bits 12:5 */
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_mask : 14 ; /* bits 26:13 */
    ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa :  5 ; /* bits 31:27 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 32 ; /* bits 31:0 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_special_pkt_code :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_flags :  3 ; /* bits 3:1 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_fragment :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_option :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ip_tos :  6 ; /* bits 11:6 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ip_pt :  8 ; /* bits 19:12 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_sa : 12 ; /* bits 31:20 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_ip_pt :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr : 28 ; /* bits 31:4 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 32 ; /* bits 31:0 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_special_pkt_code :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_flags :  3 ; /* bits 3:1 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_fragment :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_option :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ip_tos :  6 ; /* bits 11:6 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ip_pt :  8 ; /* bits 19:12 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_sa : 12 ; /* bits 31:20 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_ip_pt :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr : 28 ; /* bits 31:4 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 32 ; /* bits 31:0 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_special_pkt_code :  1 ; /* bits 0:0 */
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_flags :  3 ; /* bits 3:1 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_fragment :  1 ; /* bits 4:4 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_option :  1 ; /* bits 5:5 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ip_tos :  6 ; /* bits 11:6 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ip_pt :  8 ; /* bits 19:12 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_sa : 12 ; /* bits 31:20 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_ip_pt :  4 ; /* bits 3:0 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr : 28 ; /* bits 31:4 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_vlanid_0 :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_stre_rule0_valid :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_stre_mask_1   :  2 ; /* bits 5:4 */
    ca_uint32_t cl_key_stre_dot1p_1  :  3 ; /* bits 8:6 */
    ca_uint32_t cl_key_stre_vlanid_1_sc_ind :  1 ; /* bits 9:9 */
    ca_uint32_t cl_key_stre_vlanid_1 : 12 ; /* bits 21:10 */
    ca_uint32_t cl_key_stre_rule1_valid :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_stre_mask_2   :  2 ; /* bits 24:23 */
    ca_uint32_t cl_key_stre_dot1p_2  :  3 ; /* bits 27:25 */
    ca_uint32_t cl_key_stre_vlanid_2_sc_ind :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_stre_vlanid_2 :  3 ; /* bits 31:29 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA2                   0xf4301b38
#define L2FE_CLE_IGR_KEY_DATA2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_global_key :  9 ; /* bits 8:0 */
    ca_uint32_t cl_key_orhr_ipv4e_special_pkt_code :  5 ; /* bits 13:9 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_flags :  3 ; /* bits 16:14 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_sp_low : 15 ; /* bits 31:17 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_l4_dp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_orhr_ipv6e_tag_num :  2 ; /* bits 6:5 */
    ca_uint32_t cl_key_orhr_ipv6e_top_802_1p :  3 ; /* bits 9:7 */
    ca_uint32_t cl_key_orhr_ipv6e_top_sc_ind :  1 ; /* bits 10:10 */
    ca_uint32_t cl_key_orhr_ipv6e_top_vid : 12 ; /* bits 22:11 */
    ca_uint32_t cl_key_orhr_ipv6e_special_pkt_code :  5 ; /* bits 27:23 */
    ca_uint32_t cl_key_orhr_ipv6e_l4_flags :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_orhr_ipv6e_ip_tos :  1 ; /* bits 31:31 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_inner_vid :  9 ; /* bits 8:0 */
    ca_uint32_t cl_key_tre_l2rl2r_2_top_sc_ind :  1 ; /* bits 9:9 */
    ca_uint32_t cl_key_tre_l2rl2r_2_top_vid : 12 ; /* bits 21:10 */
    ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 10 ; /* bits 31:22 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_top_802_1p :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l2rl3r_2_inner_sc_ind :  1 ; /* bits 2:2 */
    ca_uint32_t cl_key_tre_l2rl3r_2_inner_vid : 12 ; /* bits 14:3 */
    ca_uint32_t cl_key_tre_l2rl3r_2_top_sc_ind :  1 ; /* bits 15:15 */
    ca_uint32_t cl_key_tre_l2rl3r_2_top_vid : 12 ; /* bits 27:16 */
    ca_uint32_t cl_key_tre_l2rl3r_2_special_pkt_code :  4 ; /* bits 31:28 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_top_vid : 12 ; /* bits 11:0 */
    ca_uint32_t cl_key_tre_l2rcmr_2_special_pkt_code :  5 ; /* bits 16:12 */
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_flags :  3 ; /* bits 19:17 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_fragment :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_option :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ip_tos :  6 ; /* bits 27:22 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ip_pt :  4 ; /* bits 31:28 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_inner_vid :  9 ; /* bits 8:0 */
    ca_uint32_t cl_key_tre_l3rl2r_2_top_sc_ind :  1 ; /* bits 9:9 */
    ca_uint32_t cl_key_tre_l3rl2r_2_top_vid : 12 ; /* bits 21:10 */
    ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 10 ; /* bits 31:22 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_top_802_1p :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_l3rl3r_2_inner_sc_ind :  1 ; /* bits 2:2 */
    ca_uint32_t cl_key_tre_l3rl3r_2_inner_vid : 12 ; /* bits 14:3 */
    ca_uint32_t cl_key_tre_l3rl3r_2_top_sc_ind :  1 ; /* bits 15:15 */
    ca_uint32_t cl_key_tre_l3rl3r_2_top_vid : 12 ; /* bits 27:16 */
    ca_uint32_t cl_key_tre_l3rl3r_2_special_pkt_code :  4 ; /* bits 31:28 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_top_vid : 12 ; /* bits 11:0 */
    ca_uint32_t cl_key_tre_l3rcmr_2_special_pkt_code :  5 ; /* bits 16:12 */
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_flags :  3 ; /* bits 19:17 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_fragment :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_option :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ip_tos :  6 ; /* bits 27:22 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ip_pt :  4 ; /* bits 31:28 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_inner_vid :  9 ; /* bits 8:0 */
    ca_uint32_t cl_key_tre_cmrl2r_2_top_sc_ind :  1 ; /* bits 9:9 */
    ca_uint32_t cl_key_tre_cmrl2r_2_top_vid : 12 ; /* bits 21:10 */
    ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 10 ; /* bits 31:22 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_top_802_1p :  2 ; /* bits 1:0 */
    ca_uint32_t cl_key_tre_cmrl3r_2_inner_sc_ind :  1 ; /* bits 2:2 */
    ca_uint32_t cl_key_tre_cmrl3r_2_inner_vid : 12 ; /* bits 14:3 */
    ca_uint32_t cl_key_tre_cmrl3r_2_top_sc_ind :  1 ; /* bits 15:15 */
    ca_uint32_t cl_key_tre_cmrl3r_2_top_vid : 12 ; /* bits 27:16 */
    ca_uint32_t cl_key_tre_cmrl3r_2_special_pkt_code :  4 ; /* bits 31:28 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_top_vid : 12 ; /* bits 11:0 */
    ca_uint32_t cl_key_tre_cmrcmr_2_special_pkt_code :  5 ; /* bits 16:12 */
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_flags :  3 ; /* bits 19:17 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_fragment :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_option :  1 ; /* bits 21:21 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ip_tos :  6 ; /* bits 27:22 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ip_pt :  4 ; /* bits 31:28 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_reserved :  9 ; /* bits 8:0 */
    ca_uint32_t cl_key_stre_grp_1_prcd :  3 ; /* bits 11:9 */
    ca_uint32_t cl_key_stre_grp_0_prcd :  3 ; /* bits 14:12 */
    ca_uint32_t cl_key_stre_grp_1_dscp_mode :  1 ; /* bits 15:15 */
    ca_uint32_t cl_key_stre_grp_0_dscp_mode :  1 ; /* bits 16:16 */
    ca_uint32_t cl_key_stre_mask_0   :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_stre_dot1p_0  :  3 ; /* bits 21:19 */
    ca_uint32_t cl_key_stre_vlanid_0_sc_ind :  1 ; /* bits 22:22 */
    ca_uint32_t cl_key_stre_vlanid_0 :  9 ; /* bits 31:23 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA1                   0xf4301b3c
#define L2FE_CLE_IGR_KEY_DATA1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_ip_ctrl :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_orhr_ipv4e_dot1p_ctrl :  2 ; /* bits 4:3 */
    ca_uint32_t cl_key_orhr_ipv4e_vid_ctrl :  2 ; /* bits 6:5 */
    ca_uint32_t cl_key_orhr_ipv4e_mac_ctrl :  2 ; /* bits 8:7 */
    ca_uint32_t cl_key_orhr_ipv4e_global_key : 23 ; /* bits 31:9 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_flow_label :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_orhr_ipv6e_l4_sp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_orhr_ipv6e_l4_dp : 11 ; /* bits 31:21 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_l4_dp : 15 ; /* bits 14:0 */
    ca_uint32_t cl_key_tre_l2rl2r_2_ev2_pt :  5 ; /* bits 19:15 */
    ca_uint32_t cl_key_tre_l2rl2r_2_tag_num :  2 ; /* bits 21:20 */
    ca_uint32_t cl_key_tre_l2rl2r_2_inner_802_1p :  3 ; /* bits 24:22 */
    ca_uint32_t cl_key_tre_l2rl2r_2_top_802_1p :  3 ; /* bits 27:25 */
    ca_uint32_t cl_key_tre_l2rl2r_2_inner_sc_ind :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l2rl2r_2_inner_vid :  3 ; /* bits 31:29 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_sp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_dp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ev2_pt :  5 ; /* bits 25:21 */
    ca_uint32_t cl_key_tre_l2rl3r_2_tag_num :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_tre_l2rl3r_2_inner_802_1p :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_l2rl3r_2_top_802_1p :  1 ; /* bits 31:31 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_sp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_dp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ev2_pt :  5 ; /* bits 25:21 */
    ca_uint32_t cl_key_tre_l2rcmr_2_tag_num :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_tre_l2rcmr_2_top_802_1p :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_l2rcmr_2_top_sc_ind :  1 ; /* bits 31:31 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_l4_dp : 15 ; /* bits 14:0 */
    ca_uint32_t cl_key_tre_l3rl2r_2_ev2_pt :  5 ; /* bits 19:15 */
    ca_uint32_t cl_key_tre_l3rl2r_2_tag_num :  2 ; /* bits 21:20 */
    ca_uint32_t cl_key_tre_l3rl2r_2_inner_802_1p :  3 ; /* bits 24:22 */
    ca_uint32_t cl_key_tre_l3rl2r_2_top_802_1p :  3 ; /* bits 27:25 */
    ca_uint32_t cl_key_tre_l3rl2r_2_inner_sc_ind :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_l3rl2r_2_inner_vid :  3 ; /* bits 31:29 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_sp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_dp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ev2_pt :  5 ; /* bits 25:21 */
    ca_uint32_t cl_key_tre_l3rl3r_2_tag_num :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_tre_l3rl3r_2_inner_802_1p :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_l3rl3r_2_top_802_1p :  1 ; /* bits 31:31 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_sp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_dp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ev2_pt :  5 ; /* bits 25:21 */
    ca_uint32_t cl_key_tre_l3rcmr_2_tag_num :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_tre_l3rcmr_2_top_802_1p :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_l3rcmr_2_top_sc_ind :  1 ; /* bits 31:31 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_l4_dp : 15 ; /* bits 14:0 */
    ca_uint32_t cl_key_tre_cmrl2r_2_ev2_pt :  5 ; /* bits 19:15 */
    ca_uint32_t cl_key_tre_cmrl2r_2_tag_num :  2 ; /* bits 21:20 */
    ca_uint32_t cl_key_tre_cmrl2r_2_inner_802_1p :  3 ; /* bits 24:22 */
    ca_uint32_t cl_key_tre_cmrl2r_2_top_802_1p :  3 ; /* bits 27:25 */
    ca_uint32_t cl_key_tre_cmrl2r_2_inner_sc_ind :  1 ; /* bits 28:28 */
    ca_uint32_t cl_key_tre_cmrl2r_2_inner_vid :  3 ; /* bits 31:29 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_sp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_dp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ev2_pt :  5 ; /* bits 25:21 */
    ca_uint32_t cl_key_tre_cmrl3r_2_tag_num :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_tre_cmrl3r_2_inner_802_1p :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_cmrl3r_2_top_802_1p :  1 ; /* bits 31:31 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_sp :  5 ; /* bits 4:0 */
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_dp : 16 ; /* bits 20:5 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ev2_pt :  5 ; /* bits 25:21 */
    ca_uint32_t cl_key_tre_cmrcmr_2_tag_num :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_tre_cmrcmr_2_top_802_1p :  3 ; /* bits 30:28 */
    ca_uint32_t cl_key_tre_cmrcmr_2_top_sc_ind :  1 ; /* bits 31:31 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_reserved : 32 ; /* bits 31:0 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_KEY_DATA0                   0xf4301b40
#define L2FE_CLE_IGR_KEY_DATA0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_key_orhr_ipv4e_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_orhr_ipv4e_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_orhr_ipv4e_mask : 22 ; /* bits 25:4 */
    ca_uint32_t cl_key_orhr_ipv4e_l7_ctrl :  2 ; /* bits 27:26 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_sp_ctrl :  2 ; /* bits 29:28 */
    ca_uint32_t cl_key_orhr_ipv4e_l4_dp_ctrl :  2 ; /* bits 31:30 */
  } bf0 ;
  struct {
    ca_uint32_t cl_key_orhr_ipv6e_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_orhr_ipv6e_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_orhr_ipv6e_mask :  8 ; /* bits 11:4 */
    ca_uint32_t cl_key_orhr_ipv6e_l4_ctrl :  3 ; /* bits 14:12 */
    ca_uint32_t cl_key_orhr_ipv6e_ip_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_orhr_ipv6e_flow_label : 15 ; /* bits 31:17 */
  } bf1 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl2r_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l2rl2r_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_l2rl2r_2_mask :  2 ; /* bits 5:4 */
    ca_uint32_t cl_key_tre_l2rl2r_2_l4_ctrl :  3 ; /* bits 8:6 */
    ca_uint32_t cl_key_tre_l2rl2r_2_dot1p_ctrl :  2 ; /* bits 10:9 */
    ca_uint32_t cl_key_tre_l2rl2r_2_vid_ctrl :  2 ; /* bits 12:11 */
    ca_uint32_t cl_key_tre_l2rl2r_2_mac_ctrl :  2 ; /* bits 14:13 */
    ca_uint32_t cl_key_tre_l2rl2r_2_l4_sp : 16 ; /* bits 30:15 */
    ca_uint32_t cl_key_tre_l2rl2r_2_l4_dp :  1 ; /* bits 31:31 */
  } bf2 ;
  struct {
    ca_uint32_t cl_key_tre_l2rl3r_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l2rl3r_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_l2rl3r_2_mask :  8 ; /* bits 11:4 */
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_ctrl :  3 ; /* bits 14:12 */
    ca_uint32_t cl_key_tre_l2rl3r_2_dot1p_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_tre_l2rl3r_2_vid_ctrl :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_tre_l2rl3r_2_ip_ctrl :  2 ; /* bits 20:19 */
    ca_uint32_t cl_key_tre_l2rl3r_2_l4_sp : 11 ; /* bits 31:21 */
  } bf3 ;
  struct {
    ca_uint32_t cl_key_tre_l2rcmr_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l2rcmr_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_l2rcmr_2_mask : 12 ; /* bits 15:4 */
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_ctrl :  3 ; /* bits 18:16 */
    ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr_sel :  1 ; /* bits 19:19 */
    ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr_sel :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l2rcmr_2_l4_sp : 11 ; /* bits 31:21 */
  } bf4 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl2r_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l3rl2r_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_l3rl2r_2_mask :  2 ; /* bits 5:4 */
    ca_uint32_t cl_key_tre_l3rl2r_2_l4_ctrl :  3 ; /* bits 8:6 */
    ca_uint32_t cl_key_tre_l3rl2r_2_dot1p_ctrl :  2 ; /* bits 10:9 */
    ca_uint32_t cl_key_tre_l3rl2r_2_vid_ctrl :  2 ; /* bits 12:11 */
    ca_uint32_t cl_key_tre_l3rl2r_2_mac_ctrl :  2 ; /* bits 14:13 */
    ca_uint32_t cl_key_tre_l3rl2r_2_l4_sp : 16 ; /* bits 30:15 */
    ca_uint32_t cl_key_tre_l3rl2r_2_l4_dp :  1 ; /* bits 31:31 */
  } bf5 ;
  struct {
    ca_uint32_t cl_key_tre_l3rl3r_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l3rl3r_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_l3rl3r_2_mask :  8 ; /* bits 11:4 */
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_ctrl :  3 ; /* bits 14:12 */
    ca_uint32_t cl_key_tre_l3rl3r_2_dot1p_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_tre_l3rl3r_2_vid_ctrl :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_tre_l3rl3r_2_ip_ctrl :  2 ; /* bits 20:19 */
    ca_uint32_t cl_key_tre_l3rl3r_2_l4_sp : 11 ; /* bits 31:21 */
  } bf6 ;
  struct {
    ca_uint32_t cl_key_tre_l3rcmr_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_l3rcmr_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_l3rcmr_2_mask : 12 ; /* bits 15:4 */
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_ctrl :  3 ; /* bits 18:16 */
    ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr_sel :  1 ; /* bits 19:19 */
    ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr_sel :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_l3rcmr_2_l4_sp : 11 ; /* bits 31:21 */
  } bf7 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl2r_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_cmrl2r_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_cmrl2r_2_mask :  2 ; /* bits 5:4 */
    ca_uint32_t cl_key_tre_cmrl2r_2_l4_ctrl :  3 ; /* bits 8:6 */
    ca_uint32_t cl_key_tre_cmrl2r_2_dot1p_ctrl :  2 ; /* bits 10:9 */
    ca_uint32_t cl_key_tre_cmrl2r_2_vid_ctrl :  2 ; /* bits 12:11 */
    ca_uint32_t cl_key_tre_cmrl2r_2_mac_ctrl :  2 ; /* bits 14:13 */
    ca_uint32_t cl_key_tre_cmrl2r_2_l4_sp : 16 ; /* bits 30:15 */
    ca_uint32_t cl_key_tre_cmrl2r_2_l4_dp :  1 ; /* bits 31:31 */
  } bf8 ;
  struct {
    ca_uint32_t cl_key_tre_cmrl3r_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_cmrl3r_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_cmrl3r_2_mask :  8 ; /* bits 11:4 */
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_ctrl :  3 ; /* bits 14:12 */
    ca_uint32_t cl_key_tre_cmrl3r_2_dot1p_ctrl :  2 ; /* bits 16:15 */
    ca_uint32_t cl_key_tre_cmrl3r_2_vid_ctrl :  2 ; /* bits 18:17 */
    ca_uint32_t cl_key_tre_cmrl3r_2_ip_ctrl :  2 ; /* bits 20:19 */
    ca_uint32_t cl_key_tre_cmrl3r_2_l4_sp : 11 ; /* bits 31:21 */
  } bf9 ;
  struct {
    ca_uint32_t cl_key_tre_cmrcmr_2_prcd :  3 ; /* bits 2:0 */
    ca_uint32_t cl_key_tre_cmrcmr_2_fields_operator :  1 ; /* bits 3:3 */
    ca_uint32_t cl_key_tre_cmrcmr_2_mask : 12 ; /* bits 15:4 */
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_ctrl :  3 ; /* bits 18:16 */
    ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr_sel :  1 ; /* bits 19:19 */
    ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr_sel :  1 ; /* bits 20:20 */
    ca_uint32_t cl_key_tre_cmrcmr_2_l4_sp : 11 ; /* bits 31:21 */
  } bf10 ;
  struct {
    ca_uint32_t cl_key_stre_reserved : 32 ; /* bits 31:0 */
  } bf11 ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_KEY_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_FIB_ACCESS                  0xf4301b44
#define L2FE_CLE_IGR_FIB_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_FIB_DATA4                   0xf4301b48
#define L2FE_CLE_IGR_FIB_DATA4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_fib_xr_inner_vid_0 : 10 ; /* bits 9:0 */
    ca_uint32_t cl_fib_xr_top_cmd_valid_0 :  1 ; /* bits 10:10 */
    ca_uint32_t cl_fib_xr_top_vlan_cmd_0 :  2 ; /* bits 12:11 */
    ca_uint32_t cl_fib_xr_top_sc_ind_0 :  1 ; /* bits 13:13 */
    ca_uint32_t cl_fib_xr_top_vid_0  : 12 ; /* bits 25:14 */
    ca_uint32_t cl_fib_xr_pkt_no_drop_0 :  1 ; /* bits 26:26 */
    ca_uint32_t cl_fib_xr_reserved_0 :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_FIB_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_FIB_DATA3                   0xf4301b4c
#define L2FE_CLE_IGR_FIB_DATA3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_fib_xr_flowid_0   :  1 ; /* bits 0:0 */
    ca_uint32_t cl_fib_xr_dp_valid_0 :  1 ; /* bits 1:1 */
    ca_uint32_t cl_fib_xr_ldpid_0    :  9 ; /* bits 10:2 */
    ca_uint32_t cl_fib_xr_cos_valid_0 :  1 ; /* bits 11:11 */
    ca_uint32_t cl_fib_xr_dscp_valid_0 :  1 ; /* bits 12:12 */
    ca_uint32_t cl_fib_xr_802_1p_valid_0 :  1 ; /* bits 13:13 */
    ca_uint32_t cl_fib_xr_cos_0      :  3 ; /* bits 16:14 */
    ca_uint32_t cl_fib_xr_dscp_0     :  6 ; /* bits 22:17 */
    ca_uint32_t cl_fib_xr_802_1p_0   :  3 ; /* bits 25:23 */
    ca_uint32_t cl_fib_xr_inner_cmd_valid_0 :  1 ; /* bits 26:26 */
    ca_uint32_t cl_fib_xr_inner_vlan_cmd_0 :  2 ; /* bits 28:27 */
    ca_uint32_t cl_fib_xr_inner_sc_ind_0 :  1 ; /* bits 29:29 */
    ca_uint32_t cl_fib_xr_inner_vid_0 :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_FIB_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_FIB_DATA2                   0xf4301b50
#define L2FE_CLE_IGR_FIB_DATA2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_fib_xr_top_vid_1  : 12 ; /* bits 11:0 */
    ca_uint32_t cl_fib_xr_pkt_no_drop_1 :  1 ; /* bits 12:12 */
    ca_uint32_t cl_fib_xr_reserved_1 :  1 ; /* bits 13:13 */
    ca_uint32_t cl_fib_xr_stp_mode_0 :  2 ; /* bits 15:14 */
    ca_uint32_t cl_fib_xr_permit_valid_0 :  1 ; /* bits 16:16 */
    ca_uint32_t cl_fib_xr_permit_0   :  1 ; /* bits 17:17 */
    ca_uint32_t cl_fib_xr_premarked_0 :  1 ; /* bits 18:18 */
    ca_uint32_t cl_fib_xr_grpid_vld_0 :  1 ; /* bits 19:19 */
    ca_uint32_t cl_fib_xr_flowid_vld_0 :  1 ; /* bits 20:20 */
    ca_uint32_t cl_fib_xr_flowid_0   : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_FIB_DATA1                   0xf4301b54
#define L2FE_CLE_IGR_FIB_DATA1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_fib_xr_cos_1      :  3 ; /* bits 2:0 */
    ca_uint32_t cl_fib_xr_dscp_1     :  6 ; /* bits 8:3 */
    ca_uint32_t cl_fib_xr_802_1p_1   :  3 ; /* bits 11:9 */
    ca_uint32_t cl_fib_xr_inner_cmd_valid_1 :  1 ; /* bits 12:12 */
    ca_uint32_t cl_fib_xr_inner_vlan_cmd_1 :  2 ; /* bits 14:13 */
    ca_uint32_t cl_fib_xr_inner_sc_ind_1 :  1 ; /* bits 15:15 */
    ca_uint32_t cl_fib_xr_inner_vid_1 : 12 ; /* bits 27:16 */
    ca_uint32_t cl_fib_xr_top_cmd_valid_1 :  1 ; /* bits 28:28 */
    ca_uint32_t cl_fib_xr_top_vlan_cmd_1 :  2 ; /* bits 30:29 */
    ca_uint32_t cl_fib_xr_top_sc_ind_1 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_CLE_IGR_FIB_DATA0                   0xf4301b58
#define L2FE_CLE_IGR_FIB_DATA0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_fib_xr_stp_mode_1 :  2 ; /* bits 1:0 */
    ca_uint32_t cl_fib_xr_permit_valid_1 :  1 ; /* bits 2:2 */
    ca_uint32_t cl_fib_xr_permit_1   :  1 ; /* bits 3:3 */
    ca_uint32_t cl_fib_xr_premarked_1 :  1 ; /* bits 4:4 */
    ca_uint32_t cl_fib_xr_grpid_vld_1 :  1 ; /* bits 5:5 */
    ca_uint32_t cl_fib_xr_flowid_vld_1 :  1 ; /* bits 6:6 */
    ca_uint32_t cl_fib_xr_flowid_1   : 12 ; /* bits 18:7 */
    ca_uint32_t cl_fib_xr_dp_valid_1 :  1 ; /* bits 19:19 */
    ca_uint32_t cl_fib_xr_ldpid_1    :  9 ; /* bits 28:20 */
    ca_uint32_t cl_fib_xr_cos_valid_1 :  1 ; /* bits 29:29 */
    ca_uint32_t cl_fib_xr_dscp_valid_1 :  1 ; /* bits 30:30 */
    ca_uint32_t cl_fib_xr_802_1p_valid_1 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_CLE_IGR_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CLE */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_CLE_CTRL_t                          CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_CLE_CONFG_STTS1_t                   CONFG_STTS1;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_CLE_DEBUG_t                         DEBUG;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_CLE_IGR_KEY_ACCESS_t                IGR_KEY_ACCESS;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_CLE_IGR_KEY_DATA12_t                IGR_KEY_DATA12;                /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_CLE_IGR_KEY_DATA11_t                IGR_KEY_DATA11;                /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_CLE_IGR_KEY_DATA10_t                IGR_KEY_DATA10;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_CLE_IGR_KEY_DATA9_t                 IGR_KEY_DATA9;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_CLE_IGR_KEY_DATA8_t                 IGR_KEY_DATA8;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_CLE_IGR_KEY_DATA7_t                 IGR_KEY_DATA7;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_CLE_IGR_KEY_DATA6_t                 IGR_KEY_DATA6;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_CLE_IGR_KEY_DATA5_t                 IGR_KEY_DATA5;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_CLE_IGR_KEY_DATA4_t                 IGR_KEY_DATA4;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_CLE_IGR_KEY_DATA3_t                 IGR_KEY_DATA3;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_CLE_IGR_KEY_DATA2_t                 IGR_KEY_DATA2;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_CLE_IGR_KEY_DATA1_t                 IGR_KEY_DATA1;                 /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_CLE_IGR_KEY_DATA0_t                 IGR_KEY_DATA0;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_CLE_IGR_FIB_ACCESS_t                IGR_FIB_ACCESS;                /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_CLE_IGR_FIB_DATA4_t                 IGR_FIB_DATA4;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_CLE_IGR_FIB_DATA3_t                 IGR_FIB_DATA3;                 /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_CLE_IGR_FIB_DATA2_t                 IGR_FIB_DATA2;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_CLE_IGR_FIB_DATA1_t                 IGR_FIB_DATA1;                 /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_CLE_IGR_FIB_DATA0_t                 IGR_FIB_DATA0;                 /* addr: 0x00000058 */
} APB0_L2FE_CLE_t;
#endif /* !__ASSEMBLER__ */


/*
 * L2E
 */

#define L2FE_L2E_CTRL                            0xf4301c00
#define L2FE_L2E_CTRL_dft                        0x1ca00ff9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aging_en             :  1 ; /* bits 0:0 */
    ca_uint32_t tmp_entry_aging_dis  :  1 ; /* bits 1:1 */
    ca_uint32_t aging_mode           :  1 ; /* bits 2:2 */
    ca_uint32_t aging_start_val      :  8 ; /* bits 10:3 */
    ca_uint32_t st_move_en           :  1 ; /* bits 11:11 */
    ca_uint32_t sw_age_entry_scan    :  1 ; /* bits 12:12 */
    ca_uint32_t st_mv_window         :  9 ; /* bits 21:13 */
    ca_uint32_t lrn_dis              :  1 ; /* bits 22:22 */
    ca_uint32_t lrn_mode             :  2 ; /* bits 24:23 */
    ca_uint32_t hash_collision_overwrite :  1 ; /* bits 25:25 */
    ca_uint32_t hashing_mode         :  2 ; /* bits 27:26 */
    ca_uint32_t da_deny_dnt_lrn      :  1 ; /* bits 28:28 */
    ca_uint32_t ovfl_entries_rcyc_en :  1 ; /* bits 29:29 */
    ca_uint32_t info_ff_init         :  1 ; /* bits 30:30 */
    ca_uint32_t cpu_opt_mode         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_AGING_CTRL                      0xf4301c04
#define L2FE_L2E_AGING_CTRL_dft                  0x77b0012c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aging_out_time       : 19 ; /* bits 18:0 */
    ca_uint32_t cnt_to_1s            : 13 ; /* bits 31:19 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_AGING_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_SW_AGING_CPT_ENTRY_3            0xf4301c08
#define L2FE_L2E_SW_AGING_CPT_ENTRY_3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_SW_AGING_CPT_ENTRY_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_SW_AGING_CPT_ENTRY_2            0xf4301c0c
#define L2FE_L2E_SW_AGING_CPT_ENTRY_2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_SW_AGING_CPT_ENTRY_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_SW_AGING_CPT_ENTRY_1            0xf4301c10
#define L2FE_L2E_SW_AGING_CPT_ENTRY_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_SW_AGING_CPT_ENTRY_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_SW_AGING_CPT_ENTRY_0            0xf4301c14
#define L2FE_L2E_SW_AGING_CPT_ENTRY_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_SW_AGING_CPT_ENTRY_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_CPU_CMD_WORD4               0xf4301c18
#define L2FE_L2E_FDB_CPU_CMD_WORD4_dft           0x00007fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t word                 : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_CPU_CMD_WORD4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_CPU_CMD_WORD3               0xf4301c1c
#define L2FE_L2E_FDB_CPU_CMD_WORD3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t word                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_CPU_CMD_WORD3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_CPU_CMD_WORD2               0xf4301c20
#define L2FE_L2E_FDB_CPU_CMD_WORD2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t word                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_CPU_CMD_WORD2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_CPU_CMD_WORD1               0xf4301c24
#define L2FE_L2E_FDB_CPU_CMD_WORD1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t word                 : 27 ; /* bits 26:0 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_CPU_CMD_WORD1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_CPU_CMD_WORD0               0xf4301c28
#define L2FE_L2E_FDB_CPU_CMD_WORD0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t word                 : 27 ; /* bits 26:0 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_CPU_CMD_WORD0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_CMD_RETURN                  0xf4301c2c
#define L2FE_L2E_FDB_CMD_RETURN_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               :  4 ; /* bits 3:0 */
    ca_uint32_t ext_status           : 13 ; /* bits 16:4 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_CMD_RETURN_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_CNT_CMD_RETURN                  0xf4301c30
#define L2FE_L2E_CNT_CMD_RETURN_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_CNT_CMD_RETURN_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_PORT_MAC_CNT_STTS_0             0xf4301c34
#define L2FE_L2E_PORT_MAC_CNT_STTS_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t underflow_0          :  1 ; /* bits 0:0 */
    ca_uint32_t underflow_1          :  1 ; /* bits 1:1 */
    ca_uint32_t underflow_2          :  1 ; /* bits 2:2 */
    ca_uint32_t underflow_3          :  1 ; /* bits 3:3 */
    ca_uint32_t underflow_4          :  1 ; /* bits 4:4 */
    ca_uint32_t underflow_5          :  1 ; /* bits 5:5 */
    ca_uint32_t underflow_6          :  1 ; /* bits 6:6 */
    ca_uint32_t underflow_7          :  1 ; /* bits 7:7 */
    ca_uint32_t underflow_8          :  1 ; /* bits 8:8 */
    ca_uint32_t underflow_9          :  1 ; /* bits 9:9 */
    ca_uint32_t underflow_10         :  1 ; /* bits 10:10 */
    ca_uint32_t underflow_11         :  1 ; /* bits 11:11 */
    ca_uint32_t underflow_12         :  1 ; /* bits 12:12 */
    ca_uint32_t underflow_13         :  1 ; /* bits 13:13 */
    ca_uint32_t underflow_14         :  1 ; /* bits 14:14 */
    ca_uint32_t underflow_15         :  1 ; /* bits 15:15 */
    ca_uint32_t underflow_16         :  1 ; /* bits 16:16 */
    ca_uint32_t underflow_17         :  1 ; /* bits 17:17 */
    ca_uint32_t underflow_18         :  1 ; /* bits 18:18 */
    ca_uint32_t underflow_19         :  1 ; /* bits 19:19 */
    ca_uint32_t underflow_20         :  1 ; /* bits 20:20 */
    ca_uint32_t underflow_21         :  1 ; /* bits 21:21 */
    ca_uint32_t underflow_22         :  1 ; /* bits 22:22 */
    ca_uint32_t underflow_23         :  1 ; /* bits 23:23 */
    ca_uint32_t underflow_24         :  1 ; /* bits 24:24 */
    ca_uint32_t underflow_25         :  1 ; /* bits 25:25 */
    ca_uint32_t underflow_26         :  1 ; /* bits 26:26 */
    ca_uint32_t underflow_27         :  1 ; /* bits 27:27 */
    ca_uint32_t underflow_28         :  1 ; /* bits 28:28 */
    ca_uint32_t underflow_29         :  1 ; /* bits 29:29 */
    ca_uint32_t underflow_30         :  1 ; /* bits 30:30 */
    ca_uint32_t underflow_31         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_PORT_MAC_CNT_STTS_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_PORT_MAC_CNT_STTS_1             0xf4301c38
#define L2FE_L2E_PORT_MAC_CNT_STTS_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t underflow_0          :  1 ; /* bits 0:0 */
    ca_uint32_t underflow_1          :  1 ; /* bits 1:1 */
    ca_uint32_t underflow_2          :  1 ; /* bits 2:2 */
    ca_uint32_t underflow_3          :  1 ; /* bits 3:3 */
    ca_uint32_t underflow_4          :  1 ; /* bits 4:4 */
    ca_uint32_t underflow_5          :  1 ; /* bits 5:5 */
    ca_uint32_t underflow_6          :  1 ; /* bits 6:6 */
    ca_uint32_t underflow_7          :  1 ; /* bits 7:7 */
    ca_uint32_t underflow_8          :  1 ; /* bits 8:8 */
    ca_uint32_t underflow_9          :  1 ; /* bits 9:9 */
    ca_uint32_t underflow_10         :  1 ; /* bits 10:10 */
    ca_uint32_t underflow_11         :  1 ; /* bits 11:11 */
    ca_uint32_t underflow_12         :  1 ; /* bits 12:12 */
    ca_uint32_t underflow_13         :  1 ; /* bits 13:13 */
    ca_uint32_t underflow_14         :  1 ; /* bits 14:14 */
    ca_uint32_t underflow_15         :  1 ; /* bits 15:15 */
    ca_uint32_t underflow_16         :  1 ; /* bits 16:16 */
    ca_uint32_t underflow_17         :  1 ; /* bits 17:17 */
    ca_uint32_t underflow_18         :  1 ; /* bits 18:18 */
    ca_uint32_t underflow_19         :  1 ; /* bits 19:19 */
    ca_uint32_t underflow_20         :  1 ; /* bits 20:20 */
    ca_uint32_t underflow_21         :  1 ; /* bits 21:21 */
    ca_uint32_t underflow_22         :  1 ; /* bits 22:22 */
    ca_uint32_t underflow_23         :  1 ; /* bits 23:23 */
    ca_uint32_t underflow_24         :  1 ; /* bits 24:24 */
    ca_uint32_t underflow_25         :  1 ; /* bits 25:25 */
    ca_uint32_t underflow_26         :  1 ; /* bits 26:26 */
    ca_uint32_t underflow_27         :  1 ; /* bits 27:27 */
    ca_uint32_t underflow_28         :  1 ; /* bits 28:28 */
    ca_uint32_t underflow_29         :  1 ; /* bits 29:29 */
    ca_uint32_t underflow_30         :  1 ; /* bits 30:30 */
    ca_uint32_t underflow_31         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_PORT_MAC_CNT_STTS_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0         0xf4301c3c
#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t excd_0               :  1 ; /* bits 0:0 */
    ca_uint32_t excd_1               :  1 ; /* bits 1:1 */
    ca_uint32_t excd_2               :  1 ; /* bits 2:2 */
    ca_uint32_t excd_3               :  1 ; /* bits 3:3 */
    ca_uint32_t excd_4               :  1 ; /* bits 4:4 */
    ca_uint32_t excd_5               :  1 ; /* bits 5:5 */
    ca_uint32_t excd_6               :  1 ; /* bits 6:6 */
    ca_uint32_t excd_7               :  1 ; /* bits 7:7 */
    ca_uint32_t excd_8               :  1 ; /* bits 8:8 */
    ca_uint32_t excd_9               :  1 ; /* bits 9:9 */
    ca_uint32_t excd_10              :  1 ; /* bits 10:10 */
    ca_uint32_t excd_11              :  1 ; /* bits 11:11 */
    ca_uint32_t excd_12              :  1 ; /* bits 12:12 */
    ca_uint32_t excd_13              :  1 ; /* bits 13:13 */
    ca_uint32_t excd_14              :  1 ; /* bits 14:14 */
    ca_uint32_t excd_15              :  1 ; /* bits 15:15 */
    ca_uint32_t excd_16              :  1 ; /* bits 16:16 */
    ca_uint32_t excd_17              :  1 ; /* bits 17:17 */
    ca_uint32_t excd_18              :  1 ; /* bits 18:18 */
    ca_uint32_t excd_19              :  1 ; /* bits 19:19 */
    ca_uint32_t excd_20              :  1 ; /* bits 20:20 */
    ca_uint32_t excd_21              :  1 ; /* bits 21:21 */
    ca_uint32_t excd_22              :  1 ; /* bits 22:22 */
    ca_uint32_t excd_23              :  1 ; /* bits 23:23 */
    ca_uint32_t excd_24              :  1 ; /* bits 24:24 */
    ca_uint32_t excd_25              :  1 ; /* bits 25:25 */
    ca_uint32_t excd_26              :  1 ; /* bits 26:26 */
    ca_uint32_t excd_27              :  1 ; /* bits 27:27 */
    ca_uint32_t excd_28              :  1 ; /* bits 28:28 */
    ca_uint32_t excd_29              :  1 ; /* bits 29:29 */
    ca_uint32_t excd_30              :  1 ; /* bits 30:30 */
    ca_uint32_t excd_31              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1         0xf4301c40
#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t excd_0               :  1 ; /* bits 0:0 */
    ca_uint32_t excd_1               :  1 ; /* bits 1:1 */
    ca_uint32_t excd_2               :  1 ; /* bits 2:2 */
    ca_uint32_t excd_3               :  1 ; /* bits 3:3 */
    ca_uint32_t excd_4               :  1 ; /* bits 4:4 */
    ca_uint32_t excd_5               :  1 ; /* bits 5:5 */
    ca_uint32_t excd_6               :  1 ; /* bits 6:6 */
    ca_uint32_t excd_7               :  1 ; /* bits 7:7 */
    ca_uint32_t excd_8               :  1 ; /* bits 8:8 */
    ca_uint32_t excd_9               :  1 ; /* bits 9:9 */
    ca_uint32_t excd_10              :  1 ; /* bits 10:10 */
    ca_uint32_t excd_11              :  1 ; /* bits 11:11 */
    ca_uint32_t excd_12              :  1 ; /* bits 12:12 */
    ca_uint32_t excd_13              :  1 ; /* bits 13:13 */
    ca_uint32_t excd_14              :  1 ; /* bits 14:14 */
    ca_uint32_t excd_15              :  1 ; /* bits 15:15 */
    ca_uint32_t excd_16              :  1 ; /* bits 16:16 */
    ca_uint32_t excd_17              :  1 ; /* bits 17:17 */
    ca_uint32_t excd_18              :  1 ; /* bits 18:18 */
    ca_uint32_t excd_19              :  1 ; /* bits 19:19 */
    ca_uint32_t excd_20              :  1 ; /* bits 20:20 */
    ca_uint32_t excd_21              :  1 ; /* bits 21:21 */
    ca_uint32_t excd_22              :  1 ; /* bits 22:22 */
    ca_uint32_t excd_23              :  1 ; /* bits 23:23 */
    ca_uint32_t excd_24              :  1 ; /* bits 24:24 */
    ca_uint32_t excd_25              :  1 ; /* bits 25:25 */
    ca_uint32_t excd_26              :  1 ; /* bits 26:26 */
    ca_uint32_t excd_27              :  1 ; /* bits 27:27 */
    ca_uint32_t excd_28              :  1 ; /* bits 28:28 */
    ca_uint32_t excd_29              :  1 ; /* bits 29:29 */
    ca_uint32_t excd_30              :  1 ; /* bits 30:30 */
    ca_uint32_t excd_31              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_HASH_CLLSN_STTS                 0xf4301c44
#define L2FE_L2E_HASH_CLLSN_STTS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cllsn_det            :  1 ; /* bits 0:0 */
    ca_uint32_t cllsn_addr           :  9 ; /* bits 9:1 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_HASH_CLLSN_STTS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_L2E_LRN_STS                     0xf4301c48
#define L2FE_L2E_L2E_LRN_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t loop_det             :  1 ; /* bits 0:0 */
    ca_uint32_t hit_tmp_entry_sm     :  1 ; /* bits 1:1 */
    ca_uint32_t hit_static_entry_sm  :  1 ; /* bits 2:2 */
    ca_uint32_t hit_sm_entry_sm      :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_L2E_LRN_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_SW_AGING_REPORT_FIFO_STTS       0xf4301c4c
#define L2FE_L2E_SW_AGING_REPORT_FIFO_STTS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpt_entry_flg        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t cnt                  :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_SW_AGING_REPORT_FIFO_STTS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_POINTER_FF_STS_REG              0xf4301c50
#define L2FE_L2E_POINTER_FF_STS_REG_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t overflow_ind         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_POINTER_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_POINTER_FF_CNT                  0xf4301c54
#define L2FE_L2E_POINTER_FF_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_POINTER_FF_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_STS_REG                 0xf4301c58
#define L2FE_L2E_INFO_FF_STS_REG_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t overflow_ind         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_0                   0xf4301c5c
#define L2FE_L2E_INFO_FF_CNT_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_1                   0xf4301c60
#define L2FE_L2E_INFO_FF_CNT_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_2                   0xf4301c64
#define L2FE_L2E_INFO_FF_CNT_2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_3                   0xf4301c68
#define L2FE_L2E_INFO_FF_CNT_3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_4                   0xf4301c6c
#define L2FE_L2E_INFO_FF_CNT_4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_4_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_5                   0xf4301c70
#define L2FE_L2E_INFO_FF_CNT_5_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_5_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_6                   0xf4301c74
#define L2FE_L2E_INFO_FF_CNT_6_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_6_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_7                   0xf4301c78
#define L2FE_L2E_INFO_FF_CNT_7_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_7_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_8                   0xf4301c7c
#define L2FE_L2E_INFO_FF_CNT_8_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_8_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_9                   0xf4301c80
#define L2FE_L2E_INFO_FF_CNT_9_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_9_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_10                  0xf4301c84
#define L2FE_L2E_INFO_FF_CNT_10_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_10_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_11                  0xf4301c88
#define L2FE_L2E_INFO_FF_CNT_11_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_11_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_12                  0xf4301c8c
#define L2FE_L2E_INFO_FF_CNT_12_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_12_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_13                  0xf4301c90
#define L2FE_L2E_INFO_FF_CNT_13_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_13_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_14                  0xf4301c94
#define L2FE_L2E_INFO_FF_CNT_14_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_14_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_INFO_FF_CNT_15                  0xf4301c98
#define L2FE_L2E_INFO_FF_CNT_15_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_INFO_FF_CNT_15_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_DEBUG_BUS                       0xf4301c9c
#define L2FE_L2E_DEBUG_BUS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_ACCESS                      0xf4301ca0
#define L2FE_L2E_FDB_ACCESS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_DATA3                       0xf4301ca4
#define L2FE_L2E_FDB_DATA3_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr             :  3 ; /* bits 2:0 */
    ca_uint32_t lrned_untag_vld      :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_DATA2                       0xf4301ca8
#define L2FE_L2E_FDB_DATA2_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_DATA1                       0xf4301cac
#define L2FE_L2E_FDB_DATA1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lrned_vid            :  3 ; /* bits 2:0 */
    ca_uint32_t key_dot1p            :  3 ; /* bits 5:3 */
    ca_uint32_t key_scind            :  1 ; /* bits 6:6 */
    ca_uint32_t key_vid              : 12 ; /* bits 18:7 */
    ca_uint32_t mac_addr             : 13 ; /* bits 31:19 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_FDB_DATA0                       0xf4301cb0
#define L2FE_L2E_FDB_DATA0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mcgid                : 10 ; /* bits 9:0 */
    ca_uint32_t mc_flag              :  1 ; /* bits 10:10 */
    ca_uint32_t aging_sts            :  8 ; /* bits 18:11 */
    ca_uint32_t is_static            :  1 ; /* bits 19:19 */
    ca_uint32_t da_permit            :  1 ; /* bits 20:20 */
    ca_uint32_t sa_permit            :  1 ; /* bits 21:21 */
    ca_uint32_t lrned_scind          :  1 ; /* bits 22:22 */
    ca_uint32_t lrned_vid            :  9 ; /* bits 31:23 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_FDB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS         0xf4301cb4
#define L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_PORT_MAC_CNT_LMT_DATA           0xf4301cb8
#define L2FE_L2E_PORT_MAC_CNT_LMT_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_PORT_MAC_CNT_LMT_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_L2E_AGING_CTRL_EXT                  0xf4301cbc
#define L2FE_L2E_AGING_CTRL_EXT_dft              0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sw_lrn_aging_start_val :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_L2E_AGING_CTRL_EXT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L2E */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_L2E_CTRL_t                          CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_L2E_AGING_CTRL_t                    AGING_CTRL;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_L2E_SW_AGING_CPT_ENTRY_3_t          SW_AGING_CPT_ENTRY_3;          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_L2E_SW_AGING_CPT_ENTRY_2_t          SW_AGING_CPT_ENTRY_2;          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_L2E_SW_AGING_CPT_ENTRY_1_t          SW_AGING_CPT_ENTRY_1;          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_L2E_SW_AGING_CPT_ENTRY_0_t          SW_AGING_CPT_ENTRY_0;          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_L2E_FDB_CPU_CMD_WORD4_t             FDB_CPU_CMD_WORD4;             /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_L2E_FDB_CPU_CMD_WORD3_t             FDB_CPU_CMD_WORD3;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_L2E_FDB_CPU_CMD_WORD2_t             FDB_CPU_CMD_WORD2;             /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_L2E_FDB_CPU_CMD_WORD1_t             FDB_CPU_CMD_WORD1;             /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_L2E_FDB_CPU_CMD_WORD0_t             FDB_CPU_CMD_WORD0;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_L2E_FDB_CMD_RETURN_t                FDB_CMD_RETURN;                /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_L2E_CNT_CMD_RETURN_t                CNT_CMD_RETURN;                /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_L2E_PORT_MAC_CNT_STTS_0_t           PORT_MAC_CNT_STTS_0;           /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_L2E_PORT_MAC_CNT_STTS_1_t           PORT_MAC_CNT_STTS_1;           /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0_t       PORT_MAC_LMT_CHK_STTS_0;       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1_t       PORT_MAC_LMT_CHK_STTS_1;       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_L2E_HASH_CLLSN_STTS_t               HASH_CLLSN_STTS;               /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_L2E_L2E_LRN_STS_t                   L2E_LRN_STS;                   /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_L2E_SW_AGING_REPORT_FIFO_STTS_t     SW_AGING_REPORT_FIFO_STTS;     /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_L2E_POINTER_FF_STS_REG_t            POINTER_FF_STS_REG;            /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2FE_L2E_POINTER_FF_CNT_t                POINTER_FF_CNT;                /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2FE_L2E_INFO_FF_STS_REG_t               INFO_FF_STS_REG;               /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2FE_L2E_INFO_FF_CNT_0_t                 INFO_FF_CNT_0;                 /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L2FE_L2E_INFO_FF_CNT_1_t                 INFO_FF_CNT_1;                 /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L2FE_L2E_INFO_FF_CNT_2_t                 INFO_FF_CNT_2;                 /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L2FE_L2E_INFO_FF_CNT_3_t                 INFO_FF_CNT_3;                 /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L2FE_L2E_INFO_FF_CNT_4_t                 INFO_FF_CNT_4;                 /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L2FE_L2E_INFO_FF_CNT_5_t                 INFO_FF_CNT_5;                 /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L2FE_L2E_INFO_FF_CNT_6_t                 INFO_FF_CNT_6;                 /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L2FE_L2E_INFO_FF_CNT_7_t                 INFO_FF_CNT_7;                 /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L2FE_L2E_INFO_FF_CNT_8_t                 INFO_FF_CNT_8;                 /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L2FE_L2E_INFO_FF_CNT_9_t                 INFO_FF_CNT_9;                 /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L2FE_L2E_INFO_FF_CNT_10_t                INFO_FF_CNT_10;                /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L2FE_L2E_INFO_FF_CNT_11_t                INFO_FF_CNT_11;                /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L2FE_L2E_INFO_FF_CNT_12_t                INFO_FF_CNT_12;                /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  L2FE_L2E_INFO_FF_CNT_13_t                INFO_FF_CNT_13;                /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  L2FE_L2E_INFO_FF_CNT_14_t                INFO_FF_CNT_14;                /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  L2FE_L2E_INFO_FF_CNT_15_t                INFO_FF_CNT_15;                /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  L2FE_L2E_DEBUG_BUS_t                     DEBUG_BUS;                     /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  L2FE_L2E_FDB_ACCESS_t                    FDB_ACCESS;                    /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  L2FE_L2E_FDB_DATA3_t                     FDB_DATA3;                     /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  L2FE_L2E_FDB_DATA2_t                     FDB_DATA2;                     /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  L2FE_L2E_FDB_DATA1_t                     FDB_DATA1;                     /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  L2FE_L2E_FDB_DATA0_t                     FDB_DATA0;                     /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS_t       PORT_MAC_CNT_LMT_ACCESS;       /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  L2FE_L2E_PORT_MAC_CNT_LMT_DATA_t         PORT_MAC_CNT_LMT_DATA;         /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  L2FE_L2E_AGING_CTRL_EXT_t                AGING_CTRL_EXT;                /* addr: 0x000000bc */
} APB0_L2FE_L2E_t;
#endif /* !__ASSEMBLER__ */


/*
 * PONCLE
 */

#define L2FE_PONCLE_TCAM_CTRL                    0xf4301e00
#define L2FE_PONCLE_TCAM_CTRL_dft                0x000021c3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mds0                 :  3 ; /* bits 2:0 */
    ca_uint32_t rds0                 :  4 ; /* bits 6:3 */
    ca_uint32_t mds1                 :  3 ; /* bits 9:7 */
    ca_uint32_t rds1                 :  4 ; /* bits 13:10 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_TCAM_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_KEY_ACCESS                   0xf4301e04
#define L2FE_PONCLE_KEY_ACCESS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_KEY_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_KEY_DATA2                    0xf4301e08
#define L2FE_PONCLE_KEY_DATA2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tos                  :  8 ; /* bits 7:0 */
    ca_uint32_t reserved             :  3 ; /* bits 10:8 */
    ca_uint32_t ether_type           :  5 ; /* bits 15:11 */
    ca_uint32_t valid                :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_KEY_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_KEY_DATA1                    0xf4301e0c
#define L2FE_PONCLE_KEY_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctag                 : 16 ; /* bits 15:0 */
    ca_uint32_t outer_tag            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_KEY_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_KEY_DATA0                    0xf4301e10
#define L2FE_PONCLE_KEY_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid                :  6 ; /* bits 5:0 */
    ca_uint32_t lspid                :  6 ; /* bits 11:6 */
    ca_uint32_t stag_pkt             :  1 ; /* bits 12:12 */
    ca_uint32_t ctag_pkt             :  1 ; /* bits 13:13 */
    ca_uint32_t stag_tpid_code       :  2 ; /* bits 15:14 */
    ca_uint32_t pkt_type             :  3 ; /* bits 18:16 */
    ca_uint32_t ipv4_pkt             :  1 ; /* bits 19:19 */
    ca_uint32_t ipv6_pkt             :  1 ; /* bits 20:20 */
    ca_uint32_t igmp_pkt             :  1 ; /* bits 21:21 */
    ca_uint32_t pol_id               :  9 ; /* bits 30:22 */
    ca_uint32_t stream               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_KEY_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_FIB_ACCESS                   0xf4301e14
#define L2FE_PONCLE_FIB_ACCESS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_FIB_DATA2                    0xf4301e18
#define L2FE_PONCLE_FIB_DATA2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpri                 :  1 ; /* bits 0:0 */
    ca_uint32_t cvid_act             :  2 ; /* bits 2:1 */
    ca_uint32_t cpri_act             :  2 ; /* bits 4:3 */
    ca_uint32_t ccfi_keep            :  1 ; /* bits 5:5 */
    ca_uint32_t cf_cos_act           :  1 ; /* bits 6:6 */
    ca_uint32_t cf_cos               :  3 ; /* bits 9:7 */
    ca_uint32_t rsv                  :  2 ; /* bits 11:10 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_FIB_DATA1                    0xf4301e1c
#define L2FE_PONCLE_FIB_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cf_flowid            :  5 ; /* bits 4:0 */
    ca_uint32_t forward_act          :  3 ; /* bits 7:5 */
    ca_uint32_t cf_fwd_id            :  8 ; /* bits 15:8 */
    ca_uint32_t cact                 :  2 ; /* bits 17:16 */
    ca_uint32_t cvid                 : 12 ; /* bits 29:18 */
    ca_uint32_t cpri                 :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_PONCLE_FIB_DATA0                    0xf4301e20
#define L2FE_PONCLE_FIB_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t csact                :  3 ; /* bits 2:0 */
    ca_uint32_t cs_vid               : 12 ; /* bits 14:3 */
    ca_uint32_t cs_pri               :  3 ; /* bits 17:15 */
    ca_uint32_t cspri_act            :  2 ; /* bits 19:18 */
    ca_uint32_t csvid_act            :  2 ; /* bits 21:20 */
    ca_uint32_t cscfi_keep           :  1 ; /* bits 22:22 */
    ca_uint32_t grpid_act            :  1 ; /* bits 23:23 */
    ca_uint32_t flowid_act           :  1 ; /* bits 24:24 */
    ca_uint32_t cf_flowid            :  7 ; /* bits 31:25 */
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_PONCLE_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PONCLE */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_PONCLE_TCAM_CTRL_t                  TCAM_CTRL;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_PONCLE_KEY_ACCESS_t                 KEY_ACCESS;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_PONCLE_KEY_DATA2_t                  KEY_DATA2;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_PONCLE_KEY_DATA1_t                  KEY_DATA1;                     /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_PONCLE_KEY_DATA0_t                  KEY_DATA0;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_PONCLE_FIB_ACCESS_t                 FIB_ACCESS;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_PONCLE_FIB_DATA2_t                  FIB_DATA2;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_PONCLE_FIB_DATA1_t                  FIB_DATA1;                     /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_PONCLE_FIB_DATA0_t                  FIB_DATA0;                     /* addr: 0x00000020 */
} APB0_L2FE_PONCLE_t;
#endif /* !__ASSEMBLER__ */


/*
 * MIRE
 */

#define L2FE_MIRE_MIR_CTRL                       0xf4301f00
#define L2FE_MIRE_MIR_CTRL_dft                   0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_drop_src_mir_en  :  1 ; /* bits 0:0 */
    ca_uint32_t pkt_keep_old         :  1 ; /* bits 1:1 */
    ca_uint32_t lspid_remap          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_RULE_SSID_0                0xf4301f04
#define L2FE_MIRE_MIR_RULE_SSID_0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flowid               :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t lspid                :  6 ; /* bits 21:16 */
    ca_uint32_t mode                 :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_RULE_SSID_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_RULE_SSID_1                0xf4301f08
#define L2FE_MIRE_MIR_RULE_SSID_1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flowid               :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t lspid                :  6 ; /* bits 21:16 */
    ca_uint32_t mode                 :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_RULE_SSID_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_RULE_SSID_2                0xf4301f0c
#define L2FE_MIRE_MIR_RULE_SSID_2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flowid               :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t lspid                :  6 ; /* bits 21:16 */
    ca_uint32_t mode                 :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_RULE_SSID_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_RULE_SSID_3                0xf4301f10
#define L2FE_MIRE_MIR_RULE_SSID_3_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flowid               :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t lspid                :  6 ; /* bits 21:16 */
    ca_uint32_t mode                 :  3 ; /* bits 24:22 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_RULE_SSID_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_0_SSID_0               0xf4301f14
#define L2FE_MIRE_MIR_ACT_0_SSID_0_dft           0x0000433a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lspid                :  6 ; /* bits 5:0 */
    ca_uint32_t pspid                :  4 ; /* bits 9:6 */
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_0_SSID_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_0_SSID_1               0xf4301f18
#define L2FE_MIRE_MIR_ACT_0_SSID_1_dft           0x0000437b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lspid                :  6 ; /* bits 5:0 */
    ca_uint32_t pspid                :  4 ; /* bits 9:6 */
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_0_SSID_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_0_SSID_2               0xf4301f1c
#define L2FE_MIRE_MIR_ACT_0_SSID_2_dft           0x000043bc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lspid                :  6 ; /* bits 5:0 */
    ca_uint32_t pspid                :  4 ; /* bits 9:6 */
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_0_SSID_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_0_SSID_3               0xf4301f20
#define L2FE_MIRE_MIR_ACT_0_SSID_3_dft           0x000043fd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lspid                :  6 ; /* bits 5:0 */
    ca_uint32_t pspid                :  4 ; /* bits 9:6 */
    ca_uint32_t ldpid                :  6 ; /* bits 15:10 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_0_SSID_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_1_SSID_0               0xf4301f24
#define L2FE_MIRE_MIR_ACT_1_SSID_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dot1p                :  3 ; /* bits 2:0 */
    ca_uint32_t sc_ind               :  1 ; /* bits 3:3 */
    ca_uint32_t vid                  : 12 ; /* bits 15:4 */
    ca_uint32_t vlan_cmd             :  1 ; /* bits 16:16 */
    ca_uint32_t cos_vld              :  1 ; /* bits 17:17 */
    ca_uint32_t cos                  :  3 ; /* bits 20:18 */
    ca_uint32_t sv_tpid_sel          :  2 ; /* bits 22:21 */
    ca_uint32_t cv_tpid_sel          :  2 ; /* bits 24:23 */
    ca_uint32_t rx_mirror            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_1_SSID_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_1_SSID_1               0xf4301f28
#define L2FE_MIRE_MIR_ACT_1_SSID_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dot1p                :  3 ; /* bits 2:0 */
    ca_uint32_t sc_ind               :  1 ; /* bits 3:3 */
    ca_uint32_t vid                  : 12 ; /* bits 15:4 */
    ca_uint32_t vlan_cmd             :  1 ; /* bits 16:16 */
    ca_uint32_t cos_vld              :  1 ; /* bits 17:17 */
    ca_uint32_t cos                  :  3 ; /* bits 20:18 */
    ca_uint32_t sv_tpid_sel          :  2 ; /* bits 22:21 */
    ca_uint32_t cv_tpid_sel          :  2 ; /* bits 24:23 */
    ca_uint32_t rx_mirror            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_1_SSID_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_1_SSID_2               0xf4301f2c
#define L2FE_MIRE_MIR_ACT_1_SSID_2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dot1p                :  3 ; /* bits 2:0 */
    ca_uint32_t sc_ind               :  1 ; /* bits 3:3 */
    ca_uint32_t vid                  : 12 ; /* bits 15:4 */
    ca_uint32_t vlan_cmd             :  1 ; /* bits 16:16 */
    ca_uint32_t cos_vld              :  1 ; /* bits 17:17 */
    ca_uint32_t cos                  :  3 ; /* bits 20:18 */
    ca_uint32_t sv_tpid_sel          :  2 ; /* bits 22:21 */
    ca_uint32_t cv_tpid_sel          :  2 ; /* bits 24:23 */
    ca_uint32_t rx_mirror            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_1_SSID_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_ACT_1_SSID_3               0xf4301f30
#define L2FE_MIRE_MIR_ACT_1_SSID_3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dot1p                :  3 ; /* bits 2:0 */
    ca_uint32_t sc_ind               :  1 ; /* bits 3:3 */
    ca_uint32_t vid                  : 12 ; /* bits 15:4 */
    ca_uint32_t vlan_cmd             :  1 ; /* bits 16:16 */
    ca_uint32_t cos_vld              :  1 ; /* bits 17:17 */
    ca_uint32_t cos                  :  3 ; /* bits 20:18 */
    ca_uint32_t sv_tpid_sel          :  2 ; /* bits 22:21 */
    ca_uint32_t cv_tpid_sel          :  2 ; /* bits 24:23 */
    ca_uint32_t rx_mirror            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_ACT_1_SSID_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_STTS_0                     0xf4301f34
#define L2FE_MIRE_MIR_STTS_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pspid_vld            :  1 ; /* bits 0:0 */
    ca_uint32_t pspid                :  4 ; /* bits 4:1 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_STTS_0_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_STTS_1                     0xf4301f38
#define L2FE_MIRE_MIR_STTS_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pspid_vld            :  1 ; /* bits 0:0 */
    ca_uint32_t pspid                :  4 ; /* bits 4:1 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_STTS_1_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_STTS_2                     0xf4301f3c
#define L2FE_MIRE_MIR_STTS_2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pspid_vld            :  1 ; /* bits 0:0 */
    ca_uint32_t pspid                :  4 ; /* bits 4:1 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_STTS_2_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_MIR_STTS_3                     0xf4301f40
#define L2FE_MIRE_MIR_STTS_3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pspid_vld            :  1 ; /* bits 0:0 */
    ca_uint32_t pspid                :  4 ; /* bits 4:1 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_MIR_STTS_3_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_PINGPONG_STS                   0xf4301f44
#define L2FE_MIRE_PINGPONG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_PINGPONG_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_DATA_FIFO_CNT                  0xf4301f48
#define L2FE_MIRE_DATA_FIFO_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t entry_cnt            :  7 ; /* bits 6:0 */
    ca_uint32_t seg_cnt              :  4 ; /* bits 10:7 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t extra_store_cnt      :  2 ; /* bits 17:16 */
    ca_uint32_t data_ltched          :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_DATA_FIFO_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_DATA_FIFO_STTS                 0xf4301f4c
#define L2FE_MIRE_DATA_FIFO_STTS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_DATA_FIFO_STTS_t;
#endif /* !__ASSEMBLER__ */


#define L2FE_MIRE_DEBUG                          0xf4301f50
#define L2FE_MIRE_DEBUG_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2FE_MIRE_DEBUG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MIRE */
#ifndef __ASSEMBLER__
typedef struct {
  L2FE_MIRE_MIR_CTRL_t                     MIR_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2FE_MIRE_MIR_RULE_SSID_0_t              MIR_RULE_SSID_0;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2FE_MIRE_MIR_RULE_SSID_1_t              MIR_RULE_SSID_1;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2FE_MIRE_MIR_RULE_SSID_2_t              MIR_RULE_SSID_2;               /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2FE_MIRE_MIR_RULE_SSID_3_t              MIR_RULE_SSID_3;               /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2FE_MIRE_MIR_ACT_0_SSID_0_t             MIR_ACT_0_SSID_0;              /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2FE_MIRE_MIR_ACT_0_SSID_1_t             MIR_ACT_0_SSID_1;              /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2FE_MIRE_MIR_ACT_0_SSID_2_t             MIR_ACT_0_SSID_2;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2FE_MIRE_MIR_ACT_0_SSID_3_t             MIR_ACT_0_SSID_3;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2FE_MIRE_MIR_ACT_1_SSID_0_t             MIR_ACT_1_SSID_0;              /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2FE_MIRE_MIR_ACT_1_SSID_1_t             MIR_ACT_1_SSID_1;              /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2FE_MIRE_MIR_ACT_1_SSID_2_t             MIR_ACT_1_SSID_2;              /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2FE_MIRE_MIR_ACT_1_SSID_3_t             MIR_ACT_1_SSID_3;              /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2FE_MIRE_MIR_STTS_0_t                   MIR_STTS_0;                    /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2FE_MIRE_MIR_STTS_1_t                   MIR_STTS_1;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2FE_MIRE_MIR_STTS_2_t                   MIR_STTS_2;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2FE_MIRE_MIR_STTS_3_t                   MIR_STTS_3;                    /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2FE_MIRE_PINGPONG_STS_t                 PINGPONG_STS;                  /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2FE_MIRE_DATA_FIFO_CNT_t                DATA_FIFO_CNT;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2FE_MIRE_DATA_FIFO_STTS_t               DATA_FIFO_STTS;                /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2FE_MIRE_DEBUG_t                        DEBUG;                         /* addr: 0x00000050 */
} APB0_L2FE_MIRE_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L2FE */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_L2FE_GLB_t                   GLB;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[205];
  APB0_L2FE_PP_t                    PP;                            /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[355];
  APB0_L2FE_PLA_t                   PLA;                           /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd3[239];
  APB0_L2FE_PLC_t                   PLC;                           /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd4[235];
  APB0_L2FE_PLE_t                   PLE;                           /* addr: 0x00000500 */
  ca_uint32_t                              rsrvd5[189];
  APB0_L2FE_ARB_t                   ARB;                           /* addr: 0x00000600 */
  ca_uint32_t                              rsrvd6[211];
  APB0_L2FE_PE_t                    PE;                            /* addr: 0x00000700 */
  ca_uint32_t                              rsrvd7[441];
  APB0_L2FE_LF_t                    LF;                            /* addr: 0x00000900 */
  ca_uint32_t                              rsrvd8[249];
  APB0_L2FE_VE_t                    VE;                            /* addr: 0x00000a00 */
  ca_uint32_t                              rsrvd9[237];
  APB0_L2FE_CLE_t                   CLE;                           /* addr: 0x00000b00 */
  ca_uint32_t                              rsrvd10[211];
  APB0_L2FE_L2E_t                   L2E;                           /* addr: 0x00000c00 */
  ca_uint32_t                              rsrvd11[417];
  APB0_L2FE_PONCLE_t                PONCLE;                        /* addr: 0x00000e00 */
  ca_uint32_t                              rsrvd12[239];
  APB0_L2FE_MIRE_t                  MIRE;                          /* addr: 0x00000f00 */
} APB0_L2FE_t;
#endif /* !__ASSEMBLER__ */


/*
 * L2TM
 */

/*
 * l2tm_glb
 */

#define L2TM_L2TM_GLB_REV_ID                     0xf4302000
#define L2TM_L2TM_GLB_REV_ID_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minor                : 16 ; /* bits 15:0 */
    ca_uint32_t major                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_REV_ID_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_INT                        0xf4302004
#define L2TM_L2TM_GLB_INT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bm                   :  1 ; /* bits 0:0 */
    ca_uint32_t qm                   :  1 ; /* bits 1:1 */
    ca_uint32_t bm1                  :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_INT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_INTE                       0xf4302008
#define L2TM_L2TM_GLB_INTE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bmE                  :  1 ; /* bits 0:0 */
    ca_uint32_t qmE                  :  1 ; /* bits 1:1 */
    ca_uint32_t bm1E                 :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_STS                        0xf430200c
#define L2TM_L2TM_GLB_STS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t voqinfo_ram_init_done :  1 ; /* bits 14:14 */
    ca_uint32_t freeq_ram_init_done  :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 14 ;
    ca_uint32_t idle                 :  1 ; /* bits 30:30 */
    ca_uint32_t init_done            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_CTRL                       0xf4302010
#define L2TM_L2TM_GLB_CTRL_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 31 ;
    ca_uint32_t cntrcfg_clear_on_read :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_SPARE_CFG                  0xf4302014
#define L2TM_L2TM_GLB_SPARE_CFG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_SPARE_STS                  0xf4302018
#define L2TM_L2TM_GLB_SPARE_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_SRAM_TEST_CONTROL_0        0xf430201c
#define L2TM_L2TM_GLB_SRAM_TEST_CONTROL_0_dft    0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_SRAM_LS_CONTROL            0xf4302020
#define L2TM_L2TM_GLB_SRAM_LS_CONTROL_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2te1_sramls         :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t l2te2_sramls         :  6 ; /* bits 13:8 */
    ca_uint32_t l2te3_sramls         :  8 ; /* bits 21:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t l2tm2a_sramls        :  1 ; /* bits 23:23 */
    ca_uint32_t l2tm_repair1_sramls  :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd3               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_GLB_FPGA_REV_ID                0xf4302024
#define L2TM_L2TM_GLB_FPGA_REV_ID_dft            0x00000084

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FPGA_ver             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_GLB_FPGA_REV_ID_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_glb */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TM_GLB_REV_ID_t                   REV_ID;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TM_GLB_INT_t                      INT;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TM_GLB_INTE_t                     INTE;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TM_GLB_STS_t                      STS;                           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TM_GLB_CTRL_t                     CTRL;                          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TM_GLB_SPARE_CFG_t                SPARE_CFG;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TM_GLB_SPARE_STS_t                SPARE_STS;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TM_GLB_SRAM_TEST_CONTROL_0_t      SRAM_TEST_CONTROL_0;           /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TM_GLB_SRAM_LS_CONTROL_t          SRAM_LS_CONTROL;               /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TM_GLB_FPGA_REV_ID_t              FPGA_REV_ID;                   /* addr: 0x00000024 */
} APB0_L2TM_L2TM_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2tm_bm
 */

#define L2TM_L2TM_BM_INT                         0xf4302100
#define L2TM_L2TM_BM_INT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sb_drop              :  1 ; /* bits 0:0 */
    ca_uint32_t hdr_drop             :  1 ; /* bits 1:1 */
    ca_uint32_t te_drop              :  1 ; /* bits 2:2 */
    ca_uint32_t wvoqid               :  1 ; /* bits 3:3 */
    ca_uint32_t szerr                :  1 ; /* bits 4:4 */
    ca_uint32_t seglenerr            :  1 ; /* bits 5:5 */
    ca_uint32_t seq_err              :  1 ; /* bits 6:6 */
    ca_uint32_t fc_mirror_drop       :  1 ; /* bits 7:7 */
    ca_uint32_t dq_sb_drop           :  1 ; /* bits 8:8 */
    ca_uint32_t dq_hdr_drop          :  1 ; /* bits 9:9 */
    ca_uint32_t dq_wvoqid            :  1 ; /* bits 10:10 */
    ca_uint32_t dq_szerr             :  1 ; /* bits 11:11 */
    ca_uint32_t dq_seglenerr         :  1 ; /* bits 12:12 */
    ca_uint32_t dq_seq_err           :  1 ; /* bits 13:13 */
    ca_uint32_t dq_ff_undrflo        :  1 ; /* bits 14:14 */
    ca_uint32_t dq_ff_ovrflo         :  1 ; /* bits 15:15 */
    ca_uint32_t dq_pack_ff_undrflo   :  1 ; /* bits 16:16 */
    ca_uint32_t dq_pack_ff_ovrflo    :  1 ; /* bits 17:17 */
    ca_uint32_t fe_ff_undrflo        :  1 ; /* bits 18:18 */
    ca_uint32_t fe_ff_ovrflo         :  1 ; /* bits 19:19 */
    ca_uint32_t pack_ff_undrflo      :  1 ; /* bits 20:20 */
    ca_uint32_t pack_ff_ovrflo       :  1 ; /* bits 21:21 */
    ca_uint32_t wdat_ff_undrflo      :  1 ; /* bits 22:22 */
    ca_uint32_t wdat_ff_ovrflo       :  1 ; /* bits 23:23 */
    ca_uint32_t wcmd_ff_undrflo      :  1 ; /* bits 24:24 */
    ca_uint32_t wcmd_ff_ovrflo       :  1 ; /* bits 25:25 */
    ca_uint32_t rdat_ff_undrflo      :  1 ; /* bits 26:26 */
    ca_uint32_t rdat_ff_ovrflo       :  1 ; /* bits 27:27 */
    ca_uint32_t rcmd_ff_undrflo      :  1 ; /* bits 28:28 */
    ca_uint32_t rcmd_ff_ovrflo       :  1 ; /* bits 29:29 */
    ca_uint32_t rcyc_ff_undrflo      :  1 ; /* bits 30:30 */
    ca_uint32_t rcyc_ff_ovrflo       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_INT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_INTE                        0xf4302104
#define L2TM_L2TM_BM_INTE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sb_dropE             :  1 ; /* bits 0:0 */
    ca_uint32_t hdr_dropE            :  1 ; /* bits 1:1 */
    ca_uint32_t te_dropE             :  1 ; /* bits 2:2 */
    ca_uint32_t wvoqidE              :  1 ; /* bits 3:3 */
    ca_uint32_t szerrE               :  1 ; /* bits 4:4 */
    ca_uint32_t seglenerrE           :  1 ; /* bits 5:5 */
    ca_uint32_t seq_errE             :  1 ; /* bits 6:6 */
    ca_uint32_t fc_mirror_dropE      :  1 ; /* bits 7:7 */
    ca_uint32_t dq_sb_dropE          :  1 ; /* bits 8:8 */
    ca_uint32_t dq_hdr_dropE         :  1 ; /* bits 9:9 */
    ca_uint32_t dq_wvoqidE           :  1 ; /* bits 10:10 */
    ca_uint32_t dq_szerrE            :  1 ; /* bits 11:11 */
    ca_uint32_t dq_seglenerrE        :  1 ; /* bits 12:12 */
    ca_uint32_t dq_seq_errE          :  1 ; /* bits 13:13 */
    ca_uint32_t dq_ff_undrfloE       :  1 ; /* bits 14:14 */
    ca_uint32_t dq_ff_ovrfloE        :  1 ; /* bits 15:15 */
    ca_uint32_t dq_pack_ff_undrfloE  :  1 ; /* bits 16:16 */
    ca_uint32_t dq_pack_ff_ovrfloE   :  1 ; /* bits 17:17 */
    ca_uint32_t fe_ff_undrfloE       :  1 ; /* bits 18:18 */
    ca_uint32_t fe_ff_ovrfloE        :  1 ; /* bits 19:19 */
    ca_uint32_t pack_ff_undrfloE     :  1 ; /* bits 20:20 */
    ca_uint32_t pack_ff_ovrfloE      :  1 ; /* bits 21:21 */
    ca_uint32_t wdat_ff_undrfloE     :  1 ; /* bits 22:22 */
    ca_uint32_t wdat_ff_ovrfloE      :  1 ; /* bits 23:23 */
    ca_uint32_t wcmd_ff_undrfloE     :  1 ; /* bits 24:24 */
    ca_uint32_t wcmd_ff_ovrfloE      :  1 ; /* bits 25:25 */
    ca_uint32_t rdat_ff_undrfloE     :  1 ; /* bits 26:26 */
    ca_uint32_t rdat_ff_ovrfloE      :  1 ; /* bits 27:27 */
    ca_uint32_t rcmd_ff_undrfloE     :  1 ; /* bits 28:28 */
    ca_uint32_t rcmd_ff_ovrfloE      :  1 ; /* bits 29:29 */
    ca_uint32_t rcyc_ff_undrfloE     :  1 ; /* bits 30:30 */
    ca_uint32_t rcyc_ff_ovrfloE      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_INTE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_INT1                        0xf4302108
#define L2TM_L2TM_BM_INT1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t abr_flush_cos0       :  1 ; /* bits 0:0 */
    ca_uint32_t abr_flush_cos1       :  1 ; /* bits 1:1 */
    ca_uint32_t abr_flush_cos2       :  1 ; /* bits 2:2 */
    ca_uint32_t abr_flush_cos3       :  1 ; /* bits 3:3 */
    ca_uint32_t abr_flush_cos4       :  1 ; /* bits 4:4 */
    ca_uint32_t abr_flush_cos5       :  1 ; /* bits 5:5 */
    ca_uint32_t abr_flush_cos6       :  1 ; /* bits 6:6 */
    ca_uint32_t abr_flush_cos7       :  1 ; /* bits 7:7 */
    ca_uint32_t abr_drop_cos0        :  1 ; /* bits 8:8 */
    ca_uint32_t abr_drop_cos1        :  1 ; /* bits 9:9 */
    ca_uint32_t abr_drop_cos2        :  1 ; /* bits 10:10 */
    ca_uint32_t abr_drop_cos3        :  1 ; /* bits 11:11 */
    ca_uint32_t abr_drop_cos4        :  1 ; /* bits 12:12 */
    ca_uint32_t abr_drop_cos5        :  1 ; /* bits 13:13 */
    ca_uint32_t abr_drop_cos6        :  1 ; /* bits 14:14 */
    ca_uint32_t abr_drop_cos7        :  1 ; /* bits 15:15 */
    ca_uint32_t dq_abr_drop_cos0     :  1 ; /* bits 16:16 */
    ca_uint32_t dq_abr_drop_cos1     :  1 ; /* bits 17:17 */
    ca_uint32_t dq_abr_drop_cos2     :  1 ; /* bits 18:18 */
    ca_uint32_t dq_abr_drop_cos3     :  1 ; /* bits 19:19 */
    ca_uint32_t dq_abr_drop_cos4     :  1 ; /* bits 20:20 */
    ca_uint32_t dq_abr_drop_cos5     :  1 ; /* bits 21:21 */
    ca_uint32_t dq_abr_drop_cos6     :  1 ; /* bits 22:22 */
    ca_uint32_t dq_abr_drop_cos7     :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_INT1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_INT1E                       0xf430210c
#define L2TM_L2TM_BM_INT1E_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t abr_flush_cos0E      :  1 ; /* bits 0:0 */
    ca_uint32_t abr_flush_cos1E      :  1 ; /* bits 1:1 */
    ca_uint32_t abr_flush_cos2E      :  1 ; /* bits 2:2 */
    ca_uint32_t abr_flush_cos3E      :  1 ; /* bits 3:3 */
    ca_uint32_t abr_flush_cos4E      :  1 ; /* bits 4:4 */
    ca_uint32_t abr_flush_cos5E      :  1 ; /* bits 5:5 */
    ca_uint32_t abr_flush_cos6E      :  1 ; /* bits 6:6 */
    ca_uint32_t abr_flush_cos7E      :  1 ; /* bits 7:7 */
    ca_uint32_t abr_drop_cos0E       :  1 ; /* bits 8:8 */
    ca_uint32_t abr_drop_cos1E       :  1 ; /* bits 9:9 */
    ca_uint32_t abr_drop_cos2E       :  1 ; /* bits 10:10 */
    ca_uint32_t abr_drop_cos3E       :  1 ; /* bits 11:11 */
    ca_uint32_t abr_drop_cos4E       :  1 ; /* bits 12:12 */
    ca_uint32_t abr_drop_cos5E       :  1 ; /* bits 13:13 */
    ca_uint32_t abr_drop_cos6E       :  1 ; /* bits 14:14 */
    ca_uint32_t abr_drop_cos7E       :  1 ; /* bits 15:15 */
    ca_uint32_t dq_abr_drop_cos0E    :  1 ; /* bits 16:16 */
    ca_uint32_t dq_abr_drop_cos1E    :  1 ; /* bits 17:17 */
    ca_uint32_t dq_abr_drop_cos2E    :  1 ; /* bits 18:18 */
    ca_uint32_t dq_abr_drop_cos3E    :  1 ; /* bits 19:19 */
    ca_uint32_t dq_abr_drop_cos4E    :  1 ; /* bits 20:20 */
    ca_uint32_t dq_abr_drop_cos5E    :  1 ; /* bits 21:21 */
    ca_uint32_t dq_abr_drop_cos6E    :  1 ; /* bits 22:22 */
    ca_uint32_t dq_abr_drop_cos7E    :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_INT1E_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_CTRL                        0xf4302110
#define L2TM_L2TM_BM_CTRL_dft                    0xc0000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_drop_cos          :  3 ; /* bits 2:0 */
    ca_uint32_t rx_drop_pid          :  4 ; /* bits 6:3 */
    ca_uint32_t rx_drop_en           :  2 ; /* bits 8:7 */
    ca_uint32_t sb_drop_dis          :  1 ; /* bits 9:9 */
    ca_uint32_t hdr_drop_code_upd_en :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t min_pktlen           :  7 ; /* bits 30:24 */
    ca_uint32_t rx_en                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP        0xf4302114
#define L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP_dft    0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qsel_0               :  3 ; /* bits 2:0 */
    ca_uint32_t flag_0               :  1 ; /* bits 3:3 */
    ca_uint32_t qsel_1               :  3 ; /* bits 6:4 */
    ca_uint32_t flag_1               :  1 ; /* bits 7:7 */
    ca_uint32_t qsel_2               :  3 ; /* bits 10:8 */
    ca_uint32_t flag_2               :  1 ; /* bits 11:11 */
    ca_uint32_t qsel_3               :  3 ; /* bits 14:12 */
    ca_uint32_t flag_3               :  1 ; /* bits 15:15 */
    ca_uint32_t qsel_4               :  3 ; /* bits 18:16 */
    ca_uint32_t flag_4               :  1 ; /* bits 19:19 */
    ca_uint32_t qsel_5               :  3 ; /* bits 22:20 */
    ca_uint32_t flag_5               :  1 ; /* bits 23:23 */
    ca_uint32_t qsel_6               :  3 ; /* bits 26:24 */
    ca_uint32_t flag_6               :  1 ; /* bits 27:27 */
    ca_uint32_t qsel_7               :  3 ; /* bits 30:28 */
    ca_uint32_t flag_7               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP        0xf4302118
#define L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP_dft    0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qsel_0               :  3 ; /* bits 2:0 */
    ca_uint32_t flag_0               :  1 ; /* bits 3:3 */
    ca_uint32_t qsel_1               :  3 ; /* bits 6:4 */
    ca_uint32_t flag_1               :  1 ; /* bits 7:7 */
    ca_uint32_t qsel_2               :  3 ; /* bits 10:8 */
    ca_uint32_t flag_2               :  1 ; /* bits 11:11 */
    ca_uint32_t qsel_3               :  3 ; /* bits 14:12 */
    ca_uint32_t flag_3               :  1 ; /* bits 15:15 */
    ca_uint32_t qsel_4               :  3 ; /* bits 18:16 */
    ca_uint32_t flag_4               :  1 ; /* bits 19:19 */
    ca_uint32_t qsel_5               :  3 ; /* bits 22:20 */
    ca_uint32_t flag_5               :  1 ; /* bits 23:23 */
    ca_uint32_t qsel_6               :  3 ; /* bits 26:24 */
    ca_uint32_t flag_6               :  1 ; /* bits 27:27 */
    ca_uint32_t qsel_7               :  3 ; /* bits 30:28 */
    ca_uint32_t flag_7               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP     0xf430211c
#define L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP_dft 0x00000076

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qsel_0               :  3 ; /* bits 2:0 */
    ca_uint32_t flag_0               :  1 ; /* bits 3:3 */
    ca_uint32_t qsel_1               :  3 ; /* bits 6:4 */
    ca_uint32_t flag_1               :  1 ; /* bits 7:7 */
    ca_uint32_t rxpfc_0              :  1 ; /* bits 8:8 */
    ca_uint32_t rxpfc_1              :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP          0xf4302120
#define L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP_dft      0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qsel_0               :  3 ; /* bits 2:0 */
    ca_uint32_t flag_0               :  1 ; /* bits 3:3 */
    ca_uint32_t qsel_1               :  3 ; /* bits 6:4 */
    ca_uint32_t flag_1               :  1 ; /* bits 7:7 */
    ca_uint32_t qsel_2               :  3 ; /* bits 10:8 */
    ca_uint32_t flag_2               :  1 ; /* bits 11:11 */
    ca_uint32_t qsel_3               :  3 ; /* bits 14:12 */
    ca_uint32_t flag_3               :  1 ; /* bits 15:15 */
    ca_uint32_t qsel_4               :  3 ; /* bits 18:16 */
    ca_uint32_t flag_4               :  1 ; /* bits 19:19 */
    ca_uint32_t qsel_5               :  3 ; /* bits 22:20 */
    ca_uint32_t flag_5               :  1 ; /* bits 23:23 */
    ca_uint32_t qsel_6               :  3 ; /* bits 26:24 */
    ca_uint32_t flag_6               :  1 ; /* bits 27:27 */
    ca_uint32_t qsel_7               :  3 ; /* bits 30:28 */
    ca_uint32_t flag_7               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TM_TO_LANL3FE_QUEUE_MAP     0xf4302124
#define L2TM_L2TM_BM_TM_TO_LANL3FE_QUEUE_MAP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t flag_0               :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t flag_1               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t flag_2               :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t flag_3               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd5               :  3 ;
    ca_uint32_t flag_4               :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd6               :  3 ;
    ca_uint32_t flag_5               :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd7               :  3 ;
    ca_uint32_t flag_6               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd8               :  3 ;
    ca_uint32_t flag_7               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TM_TO_LANL3FE_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP          0xf4302128
#define L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP_dft      0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qsel_0               :  3 ; /* bits 2:0 */
    ca_uint32_t flag_0               :  1 ; /* bits 3:3 */
    ca_uint32_t qsel_1               :  3 ; /* bits 6:4 */
    ca_uint32_t flag_1               :  1 ; /* bits 7:7 */
    ca_uint32_t qsel_2               :  3 ; /* bits 10:8 */
    ca_uint32_t flag_2               :  1 ; /* bits 11:11 */
    ca_uint32_t qsel_3               :  3 ; /* bits 14:12 */
    ca_uint32_t flag_3               :  1 ; /* bits 15:15 */
    ca_uint32_t qsel_4               :  3 ; /* bits 18:16 */
    ca_uint32_t flag_4               :  1 ; /* bits 19:19 */
    ca_uint32_t qsel_5               :  3 ; /* bits 22:20 */
    ca_uint32_t flag_5               :  1 ; /* bits 23:23 */
    ca_uint32_t qsel_6               :  3 ; /* bits 26:24 */
    ca_uint32_t flag_6               :  1 ; /* bits 27:27 */
    ca_uint32_t qsel_7               :  3 ; /* bits 30:28 */
    ca_uint32_t flag_7               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP           0xf430212c
#define L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP_dft       0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tm_dpid_sel_0        :  4 ; /* bits 3:0 */
    ca_uint32_t tm_dpid_sel_1        :  4 ; /* bits 7:4 */
    ca_uint32_t tm_dpid_sel_2        :  4 ; /* bits 11:8 */
    ca_uint32_t tm_dpid_sel_3        :  4 ; /* bits 15:12 */
    ca_uint32_t tm_dpid_sel_4        :  4 ; /* bits 19:16 */
    ca_uint32_t tm_dpid_sel_5        :  4 ; /* bits 23:20 */
    ca_uint32_t tm_dpid_sel_6        :  4 ; /* bits 27:24 */
    ca_uint32_t tm_dpid_sel_7        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_DQ_PCNT                  0xf4302130
#define L2TM_L2TM_BM_RX_DQ_PCNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_DQ_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_DQ_DPCNT                 0xf4302134
#define L2TM_L2TM_BM_RX_DQ_DPCNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_DQ_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_DQ_ABR_DPCNT             0xf4302138
#define L2TM_L2TM_BM_RX_DQ_ABR_DPCNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_DQ_ABR_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_PCNT                     0xf430213c
#define L2TM_L2TM_BM_RX_PCNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TX_PCNT                     0xf4302140
#define L2TM_L2TM_BM_TX_PCNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TX_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_SB_DPCNT                    0xf4302144
#define L2TM_L2TM_BM_SB_DPCNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_SB_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_HDR_DPCNT                   0xf4302148
#define L2TM_L2TM_BM_HDR_DPCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_HDR_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TE_DPCNT                    0xf430214c
#define L2TM_L2TM_BM_TE_DPCNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TE_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_ERR_DPCNT                   0xf4302150
#define L2TM_L2TM_BM_ERR_DPCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_ERR_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_FC_MIRROR0_DPCNT            0xf4302154
#define L2TM_L2TM_BM_FC_MIRROR0_DPCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_FC_MIRROR0_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_FC_MIRROR1_DPCNT            0xf4302158
#define L2TM_L2TM_BM_FC_MIRROR1_DPCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_FC_MIRROR1_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_FC_MIRROR2_DPCNT            0xf430215c
#define L2TM_L2TM_BM_FC_MIRROR2_DPCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_FC_MIRROR2_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_FC_MIRROR3_DPCNT            0xf4302160
#define L2TM_L2TM_BM_FC_MIRROR3_DPCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_FC_MIRROR3_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_DPCNT                    0xf4302164
#define L2TM_L2TM_BM_RX_DPCNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_ABR_DPCNT                0xf4302168
#define L2TM_L2TM_BM_RX_ABR_DPCNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_ABR_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_NOBUF_DPCNT                 0xf430216c
#define L2TM_L2TM_BM_NOBUF_DPCNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_NOBUF_DPCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_FE_HEADER_31_0           0xf4302170
#define L2TM_L2TM_BM_RX_FE_HEADER_31_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_FE_HEADER_31_0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_FE_HEADER_63_32          0xf4302174
#define L2TM_L2TM_BM_RX_FE_HEADER_63_32_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_FE_HEADER_63_32_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_NI_HEADER_31_0           0xf4302178
#define L2TM_L2TM_BM_RX_NI_HEADER_31_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_NI_HEADER_31_0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_RX_NI_HEADER_63_32          0xf430217c
#define L2TM_L2TM_BM_RX_NI_HEADER_63_32_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_RX_NI_HEADER_63_32_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TX_NI_HEADER_31_0           0xf4302180
#define L2TM_L2TM_BM_TX_NI_HEADER_31_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TX_NI_HEADER_31_0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_TX_NI_HEADER_63_32          0xf4302184
#define L2TM_L2TM_BM_TX_NI_HEADER_63_32_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_TX_NI_HEADER_63_32_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_STS                         0xf4302188
#define L2TM_L2TM_BM_STS_dft                     0xff80000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fe_tm_vld            :  1 ; /* bits 0:0 */
    ca_uint32_t tm_fe_rdy            :  1 ; /* bits 1:1 */
    ca_uint32_t ni_tm_vld            :  1 ; /* bits 2:2 */
    ca_uint32_t tm_ni_rdy            :  1 ; /* bits 3:3 */
    ca_uint32_t tm_ni_vld            :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t dq_ff_empty          :  1 ; /* bits 23:23 */
    ca_uint32_t dq_pack_ff_empty     :  1 ; /* bits 24:24 */
    ca_uint32_t fe_ff_empty          :  1 ; /* bits 25:25 */
    ca_uint32_t pack_ff_empty        :  1 ; /* bits 26:26 */
    ca_uint32_t wdat_ff_empty        :  1 ; /* bits 27:27 */
    ca_uint32_t wcmd_ff_empty        :  1 ; /* bits 28:28 */
    ca_uint32_t rdat_ff_empty        :  1 ; /* bits 29:29 */
    ca_uint32_t rcmd_ff_empty        :  1 ; /* bits 30:30 */
    ca_uint32_t rcyc_ff_empty        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_ACCESS              0xf430218c
#define L2TM_L2TM_BM_PKT_MEM_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA7               0xf4302190
#define L2TM_L2TM_BM_PKT_MEM_DATA7_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA6               0xf4302194
#define L2TM_L2TM_BM_PKT_MEM_DATA6_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA5               0xf4302198
#define L2TM_L2TM_BM_PKT_MEM_DATA5_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA4               0xf430219c
#define L2TM_L2TM_BM_PKT_MEM_DATA4_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA3               0xf43021a0
#define L2TM_L2TM_BM_PKT_MEM_DATA3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA2               0xf43021a4
#define L2TM_L2TM_BM_PKT_MEM_DATA2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA1               0xf43021a8
#define L2TM_L2TM_BM_PKT_MEM_DATA1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_PKT_MEM_DATA0               0xf43021ac
#define L2TM_L2TM_BM_PKT_MEM_DATA0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_PKT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_OD_DBG0                     0xf43021b0
#define L2TM_L2TM_BM_OD_DBG0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t od_dbg0              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_OD_DBG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_BM_OD_DBG1                     0xf43021b4
#define L2TM_L2TM_BM_OD_DBG1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t od_dbg1              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_BM_OD_DBG1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_bm */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TM_BM_INT_t                       INT;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TM_BM_INTE_t                      INTE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TM_BM_INT1_t                      INT1;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TM_BM_INT1E_t                     INT1E;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TM_BM_CTRL_t                      CTRL;                          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP_t      TM_TO_9THQ_QUEUE_MAP;          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP_t      TM_TO_CPUQ_QUEUE_MAP;          /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP_t   TM_TO_CPU256Q_QUEUE_MAP;       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP_t        TM_TO_DQ_QUEUE_MAP;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TM_BM_TM_TO_LANL3FE_QUEUE_MAP_t   TM_TO_LANL3FE_QUEUE_MAP;       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP_t        DQ_TO_TM_QUEUE_MAP;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP_t         DQ_TO_TM_PORT_MAP;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TM_BM_RX_DQ_PCNT_t                RX_DQ_PCNT;                    /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TM_BM_RX_DQ_DPCNT_t               RX_DQ_DPCNT;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TM_BM_RX_DQ_ABR_DPCNT_t           RX_DQ_ABR_DPCNT;               /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2TM_L2TM_BM_RX_PCNT_t                   RX_PCNT;                       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TM_BM_TX_PCNT_t                   TX_PCNT;                       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2TM_L2TM_BM_SB_DPCNT_t                  SB_DPCNT;                      /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TM_BM_HDR_DPCNT_t                 HDR_DPCNT;                     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TM_BM_TE_DPCNT_t                  TE_DPCNT;                      /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2TM_L2TM_BM_ERR_DPCNT_t                 ERR_DPCNT;                     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2TM_L2TM_BM_FC_MIRROR0_DPCNT_t          FC_MIRROR0_DPCNT;              /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2TM_L2TM_BM_FC_MIRROR1_DPCNT_t          FC_MIRROR1_DPCNT;              /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2TM_L2TM_BM_FC_MIRROR2_DPCNT_t          FC_MIRROR2_DPCNT;              /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L2TM_L2TM_BM_FC_MIRROR3_DPCNT_t          FC_MIRROR3_DPCNT;              /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L2TM_L2TM_BM_RX_DPCNT_t                  RX_DPCNT;                      /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L2TM_L2TM_BM_RX_ABR_DPCNT_t              RX_ABR_DPCNT;                  /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L2TM_L2TM_BM_NOBUF_DPCNT_t               NOBUF_DPCNT;                   /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L2TM_L2TM_BM_RX_FE_HEADER_31_0_t         RX_FE_HEADER_31_0;             /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L2TM_L2TM_BM_RX_FE_HEADER_63_32_t        RX_FE_HEADER_63_32;            /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L2TM_L2TM_BM_RX_NI_HEADER_31_0_t         RX_NI_HEADER_31_0;             /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L2TM_L2TM_BM_RX_NI_HEADER_63_32_t        RX_NI_HEADER_63_32;            /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L2TM_L2TM_BM_TX_NI_HEADER_31_0_t         TX_NI_HEADER_31_0;             /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L2TM_L2TM_BM_TX_NI_HEADER_63_32_t        TX_NI_HEADER_63_32;            /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L2TM_L2TM_BM_STS_t                       STS;                           /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L2TM_L2TM_BM_PKT_MEM_ACCESS_t            PKT_MEM_ACCESS;                /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  L2TM_L2TM_BM_PKT_MEM_DATA7_t             PKT_MEM_DATA7;                 /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  L2TM_L2TM_BM_PKT_MEM_DATA6_t             PKT_MEM_DATA6;                 /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  L2TM_L2TM_BM_PKT_MEM_DATA5_t             PKT_MEM_DATA5;                 /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  L2TM_L2TM_BM_PKT_MEM_DATA4_t             PKT_MEM_DATA4;                 /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  L2TM_L2TM_BM_PKT_MEM_DATA3_t             PKT_MEM_DATA3;                 /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  L2TM_L2TM_BM_PKT_MEM_DATA2_t             PKT_MEM_DATA2;                 /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  L2TM_L2TM_BM_PKT_MEM_DATA1_t             PKT_MEM_DATA1;                 /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  L2TM_L2TM_BM_PKT_MEM_DATA0_t             PKT_MEM_DATA0;                 /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  L2TM_L2TM_BM_OD_DBG0_t                   OD_DBG0;                       /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  L2TM_L2TM_BM_OD_DBG1_t                   OD_DBG1;                       /* addr: 0x000000b4 */
} APB0_L2TM_L2TM_BM_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2tm_qm
 */

#define L2TM_L2TM_QM_INT                         0xf4302200
#define L2TM_L2TM_QM_INT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t freeq_ecc_correctederr :  1 ; /* bits 0:0 */
    ca_uint32_t freeq_ecc_err        :  1 ; /* bits 1:1 */
    ca_uint32_t voqinfo_cnt_dec_with_novalid :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t nobuf_drop           :  1 ; /* bits 4:4 */
    ca_uint32_t bid_out_of_range     :  1 ; /* bits 5:5 */
    ca_uint32_t wr_race_err          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t eq0_stack_err        :  1 ; /* bits 16:16 */
    ca_uint32_t eq1_stack_err        :  1 ; /* bits 17:17 */
    ca_uint32_t enq_ff_undrflo       :  1 ; /* bits 18:18 */
    ca_uint32_t enq_ff_ovrflo        :  1 ; /* bits 19:19 */
    ca_uint32_t deq_ff_undrflo       :  1 ; /* bits 20:20 */
    ca_uint32_t deq_ff_ovrflo        :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_INT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_INTE                        0xf4302204
#define L2TM_L2TM_QM_INTE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t freeq_ecc_correctederrE :  1 ; /* bits 0:0 */
    ca_uint32_t freeq_ecc_errE       :  1 ; /* bits 1:1 */
    ca_uint32_t voqinfo_cnt_dec_with_novalidE :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t nobuf_dropE          :  1 ; /* bits 4:4 */
    ca_uint32_t bid_out_of_rangeE    :  1 ; /* bits 5:5 */
    ca_uint32_t wr_race_errE         :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t eq0_stack_errE       :  1 ; /* bits 16:16 */
    ca_uint32_t eq1_stack_errE       :  1 ; /* bits 17:17 */
    ca_uint32_t enq_ff_undrfloE      :  1 ; /* bits 18:18 */
    ca_uint32_t enq_ff_ovrfloE       :  1 ; /* bits 19:19 */
    ca_uint32_t deq_ff_undrfloE      :  1 ; /* bits 20:20 */
    ca_uint32_t deq_ff_ovrfloE       :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_INTE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ_CFG                      0xf4302208
#define L2TM_L2TM_QM_EQ_CFG_dft                  0x00040008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq0_bufnum           :  5 ; /* bits 4:0 */
    ca_uint32_t eq0_prvt             : 11 ; /* bits 15:5 */
    ca_uint32_t eq1_bufnum           :  4 ; /* bits 19:16 */
    ca_uint32_t eq1_prvt             : 10 ; /* bits 29:20 */
    ca_uint32_t eq0_en               :  1 ; /* bits 30:30 */
    ca_uint32_t eq1_en               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ_CFG1                     0xf430220c
#define L2TM_L2TM_QM_EQ_CFG1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq0_buffer_weight    :  1 ; /* bits 0:0 */
    ca_uint32_t eq1_buffer_weight    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_GLOB_BUF_CFG                0xf4302210
#define L2TM_L2TM_QM_GLOB_BUF_CFG_dft            0x90000020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t nodrop               : 15 ; /* bits 14:0 */
    ca_uint32_t drop_en              :  1 ; /* bits 15:15 */
    ca_uint32_t noncong              : 15 ; /* bits 30:16 */
    ca_uint32_t fe_bp_en             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_GLOB_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_GLOB_BUF_CFG1               0xf4302214
#define L2TM_L2TM_QM_GLOB_BUF_CFG1_dft           0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fe_bp_th             : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_GLOB_BUF_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_PROFILE0          0xf4302218
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE0_dft      0x00100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_even             : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cnt_odd              : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_PROFILE1          0xf430221c
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE1_dft      0x00400020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_even             : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cnt_odd              : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_PROFILE2          0xf4302220
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE2_dft      0x00c00080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_even             : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cnt_odd              : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_PROFILE3          0xf4302224
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE3_dft      0x01400100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_even             : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cnt_odd              : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_SELECT0           0xf4302228
#define L2TM_L2TM_QM_PORT_PRVT_SELECT0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0                :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t port1                :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t port2                :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t port3                :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t port4                :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t port5                :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t port6                :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t port7                :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_SELECT0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_SELECT1           0xf430222c
#define L2TM_L2TM_QM_PORT_PRVT_SELECT1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0                :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t port1                :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t port2                :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t port3                :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t port4                :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t port5                :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t port6                :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t port7                :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_SELECT1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_NO_PRVT_STS            0xf4302230
#define L2TM_L2TM_QM_PORT_NO_PRVT_STS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_NO_PRVT_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ_GLB_FREECNT              0xf4302234
#define L2TM_L2TM_QM_EQ_GLB_FREECNT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sum_of_eqcnt         : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ_GLB_FREECNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ_COS0_BUFCNT              0xf4302238
#define L2TM_L2TM_QM_EQ_COS0_BUFCNT_STRIDE       4
#define L2TM_L2TM_QM_EQ_COS0_BUFCNT_COUNT        8
#define L2TM_L2TM_QM_EQ_COS0_BUFCNT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sum_of_eqcnt         : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ_COS0_BUFCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS 0xf4302258
#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA   0xf430225c
#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ_FREECNT                  0xf4302260
#define L2TM_L2TM_QM_EQ_FREECNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq0                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t eq1                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ_FREECNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ_HEAD                     0xf4302264
#define L2TM_L2TM_QM_EQ_HEAD_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq0                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t eq1                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ_HEAD_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ0_STACK_CFG               0xf4302268
#define L2TM_L2TM_QM_EQ0_STACK_CFG_dft           0x00302010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_ths              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mid_ths              :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t high_ths             :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ0_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ0_STACK_CTRL              0xf430226c
#define L2TM_L2TM_QM_EQ0_STACK_CTRL_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stack_unfill         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ0_STACK_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ0_STACK_STS               0xf4302270
#define L2TM_L2TM_QM_EQ0_STACK_STS_dft           0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stack_unfill_done    :  1 ; /* bits 0:0 */
    ca_uint32_t stack_idle           :  1 ; /* bits 1:1 */
    ca_uint32_t stack_empty          :  1 ; /* bits 2:2 */
    ca_uint32_t stack_full           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t stack_cntr           :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ0_STACK_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ1_STACK_CFG               0xf4302274
#define L2TM_L2TM_QM_EQ1_STACK_CFG_dft           0x00302010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_ths              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mid_ths              :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t high_ths             :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ1_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ1_STACK_CTRL              0xf4302278
#define L2TM_L2TM_QM_EQ1_STACK_CTRL_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stack_unfill         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ1_STACK_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_EQ1_STACK_STS               0xf430227c
#define L2TM_L2TM_QM_EQ1_STACK_STS_dft           0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stack_unfill_done    :  1 ; /* bits 0:0 */
    ca_uint32_t stack_idle           :  1 ; /* bits 1:1 */
    ca_uint32_t stack_empty          :  1 ; /* bits 2:2 */
    ca_uint32_t stack_full           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t stack_cntr           :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_EQ1_STACK_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_CTRL                        0xf4302280
#define L2TM_L2TM_QM_CTRL_dft                    0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt_dec_with_novalid_allow :  1 ; /* bits 0:0 */
    ca_uint32_t ack_upd_at_same_time :  1 ; /* bits 1:1 */
    ca_uint32_t l3fe_dpid_delay      :  1 ; /* bits 2:2 */
    ca_uint32_t same_dpid_delay      :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t force_init_done      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_STS                         0xf4302284
#define L2TM_L2TM_QM_STS_dft                     0x000c0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t plm_nempty           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t enq_ff_empty         :  1 ; /* bits 18:18 */
    ca_uint32_t deq_ff_empty         :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_STS1                        0xf4302288
#define L2TM_L2TM_QM_STS1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t init_adr             : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t init_data            :  8 ; /* bits 23:16 */
    ca_uint32_t freeq_cs             :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t sm_reset             :  1 ; /* bits 30:30 */
    ca_uint32_t init_done            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_STS1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_FREEQ_MEM_ACCESS            0xf430228c
#define L2TM_L2TM_QM_FREEQ_MEM_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_FREEQ_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_FREEQ_MEM_DATA1             0xf4302290
#define L2TM_L2TM_QM_FREEQ_MEM_DATA1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ecc                  :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_FREEQ_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_FREEQ_MEM_DATA0             0xf4302294
#define L2TM_L2TM_QM_FREEQ_MEM_DATA0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t blen                 :  7 ; /* bits 6:0 */
    ca_uint32_t eqid                 :  1 ; /* bits 7:7 */
    ca_uint32_t eop                  :  1 ; /* bits 8:8 */
    ca_uint32_t sop                  :  1 ; /* bits 9:9 */
    ca_uint32_t cpu                  :  1 ; /* bits 10:10 */
    ca_uint32_t prvt                 :  1 ; /* bits 11:11 */
    ca_uint32_t nxt_ptr              : 15 ; /* bits 26:12 */
    ca_uint32_t ecc                  :  5 ; /* bits 31:27 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_FREEQ_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_VOQINFO_MEM_ACCESS          0xf4302298
#define L2TM_L2TM_QM_VOQINFO_MEM_ACCESS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_VOQINFO_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_VOQINFO_MEM_DATA1           0xf430229c
#define L2TM_L2TM_QM_VOQINFO_MEM_DATA1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tail_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t vallid               :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_VOQINFO_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_VOQINFO_MEM_DATA0           0xf43022a0
#define L2TM_L2TM_QM_VOQINFO_MEM_DATA0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t blen                 :  7 ; /* bits 6:0 */
    ca_uint32_t eqid                 :  1 ; /* bits 7:7 */
    ca_uint32_t eop                  :  1 ; /* bits 8:8 */
    ca_uint32_t sop                  :  1 ; /* bits 9:9 */
    ca_uint32_t cpu                  :  1 ; /* bits 10:10 */
    ca_uint32_t prvt                 :  1 ; /* bits 11:11 */
    ca_uint32_t head_ptr             : 15 ; /* bits 26:12 */
    ca_uint32_t tail_ptr             :  5 ; /* bits 31:27 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_VOQINFO_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS         0xf43022a4
#define L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA           0xf43022a8
#define L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_qm */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TM_QM_INT_t                       INT;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TM_QM_INTE_t                      INTE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TM_QM_EQ_CFG_t                    EQ_CFG;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TM_QM_EQ_CFG1_t                   EQ_CFG1;                       /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TM_QM_GLOB_BUF_CFG_t              GLOB_BUF_CFG;                  /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TM_QM_GLOB_BUF_CFG1_t             GLOB_BUF_CFG1;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TM_QM_PORT_PRVT_PROFILE0_t        PORT_PRVT_PROFILE0;            /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TM_QM_PORT_PRVT_PROFILE1_t        PORT_PRVT_PROFILE1;            /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TM_QM_PORT_PRVT_PROFILE2_t        PORT_PRVT_PROFILE2;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TM_QM_PORT_PRVT_PROFILE3_t        PORT_PRVT_PROFILE3;            /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TM_QM_PORT_PRVT_SELECT0_t         PORT_PRVT_SELECT0;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TM_QM_PORT_PRVT_SELECT1_t         PORT_PRVT_SELECT1;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TM_QM_PORT_NO_PRVT_STS_t          PORT_NO_PRVT_STS;              /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TM_QM_EQ_GLB_FREECNT_t            EQ_GLB_FREECNT;                /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TM_QM_EQ_COS0_BUFCNT_t            EQ_COS0_BUFCNT;                /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[31];
  L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS_t PORT_PRVT_BUFCNT_MEM_ACCESS;   /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA_t PORT_PRVT_BUFCNT_MEM_DATA;     /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd17[3];
  L2TM_L2TM_QM_EQ_FREECNT_t                EQ_FREECNT;                    /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TM_QM_EQ_HEAD_t                   EQ_HEAD;                       /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TM_QM_EQ0_STACK_CFG_t             EQ0_STACK_CFG;                 /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd20[3];
  L2TM_L2TM_QM_EQ0_STACK_CTRL_t            EQ0_STACK_CTRL;                /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd21[3];
  L2TM_L2TM_QM_EQ0_STACK_STS_t             EQ0_STACK_STS;                 /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd22[3];
  L2TM_L2TM_QM_EQ1_STACK_CFG_t             EQ1_STACK_CFG;                 /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd23[3];
  L2TM_L2TM_QM_EQ1_STACK_CTRL_t            EQ1_STACK_CTRL;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd24[3];
  L2TM_L2TM_QM_EQ1_STACK_STS_t             EQ1_STACK_STS;                 /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd25[3];
  L2TM_L2TM_QM_CTRL_t                      CTRL;                          /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd26[3];
  L2TM_L2TM_QM_STS_t                       STS;                           /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd27[3];
  L2TM_L2TM_QM_STS1_t                      STS1;                          /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd28[3];
  L2TM_L2TM_QM_FREEQ_MEM_ACCESS_t          FREEQ_MEM_ACCESS;              /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd29[3];
  L2TM_L2TM_QM_FREEQ_MEM_DATA1_t           FREEQ_MEM_DATA1;               /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd30[3];
  L2TM_L2TM_QM_FREEQ_MEM_DATA0_t           FREEQ_MEM_DATA0;               /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd31[3];
  L2TM_L2TM_QM_VOQINFO_MEM_ACCESS_t        VOQINFO_MEM_ACCESS;            /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd32[3];
  L2TM_L2TM_QM_VOQINFO_MEM_DATA1_t         VOQINFO_MEM_DATA1;             /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd33[3];
  L2TM_L2TM_QM_VOQINFO_MEM_DATA0_t         VOQINFO_MEM_DATA0;             /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd34[3];
  L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS_t       VOQ_PCNT_MEM_ACCESS;           /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd35[3];
  L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA_t         VOQ_PCNT_MEM_DATA;             /* addr: 0x000000a8 */
} APB0_L2TM_L2TM_QM_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2tm_es
 */

#define L2TM_L2TM_ES_CTRL                        0xf4302300
#define L2TM_L2TM_ES_CTRL_dft                    0x24000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_port0_en          :  1 ; /* bits 0:0 */
    ca_uint32_t tx_port1_en          :  1 ; /* bits 1:1 */
    ca_uint32_t tx_port2_en          :  1 ; /* bits 2:2 */
    ca_uint32_t tx_port3_en          :  1 ; /* bits 3:3 */
    ca_uint32_t tx_port4_en          :  1 ; /* bits 4:4 */
    ca_uint32_t tx_port5_en          :  1 ; /* bits 5:5 */
    ca_uint32_t tx_port6_en          :  1 ; /* bits 6:6 */
    ca_uint32_t tx_port7_en          :  1 ; /* bits 7:7 */
    ca_uint32_t tx_port8_en          :  1 ; /* bits 8:8 */
    ca_uint32_t tx_port9_en          :  1 ; /* bits 9:9 */
    ca_uint32_t tx_port10_en         :  1 ; /* bits 10:10 */
    ca_uint32_t tx_port11_en         :  1 ; /* bits 11:11 */
    ca_uint32_t tx_port12_en         :  1 ; /* bits 12:12 */
    ca_uint32_t tx_port13_en         :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tx_port15_en         :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t ni_port_rdy_10_deglitch :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ni_port_rdy_13_deglitch :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t tx_en                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_SCH_CFG0                    0xf4302304
#define L2TM_L2TM_ES_SCH_CFG0_STRIDE             12
#define L2TM_L2TM_ES_SCH_CFG0_COUNT              15
#define L2TM_L2TM_ES_SCH_CFG0_dft                0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_en               :  8 ; /* bits 7:0 */
    ca_uint32_t flush_voqid          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t flush_en             :  1 ; /* bits 15:15 */
    ca_uint32_t speed                :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_SCH_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0    0xf4302308
#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_STRIDE 12
#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_COUNT 15
#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq0                 :  8 ; /* bits 7:0 */
    ca_uint32_t voq1                 :  8 ; /* bits 15:8 */
    ca_uint32_t voq2                 :  8 ; /* bits 23:16 */
    ca_uint32_t voq3                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0    0xf430230c
#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_STRIDE 12
#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_COUNT 15
#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq4                 :  8 ; /* bits 7:0 */
    ca_uint32_t voq5                 :  8 ; /* bits 15:8 */
    ca_uint32_t voq6                 :  8 ; /* bits 23:16 */
    ca_uint32_t voq7                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG    0xf43023b8
#define L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0                :  8 ; /* bits 7:0 */
    ca_uint32_t port1                :  8 ; /* bits 15:8 */
    ca_uint32_t port2                :  8 ; /* bits 23:16 */
    ca_uint32_t port3                :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG    0xf43023bc
#define L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port4                :  8 ; /* bits 7:0 */
    ca_uint32_t port5                :  8 ; /* bits 15:8 */
    ca_uint32_t port6                :  8 ; /* bits 23:16 */
    ca_uint32_t port7                :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG   0xf43023c0
#define L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port8                :  8 ; /* bits 7:0 */
    ca_uint32_t port9                :  8 ; /* bits 15:8 */
    ca_uint32_t port10               :  8 ; /* bits 23:16 */
    ca_uint32_t port11               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG  0xf43023c4
#define L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG_dft 0x01000101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port12               :  8 ; /* bits 7:0 */
    ca_uint32_t port13               :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t port15               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_DRR_WEIGHT_BASE             0xf43023c8
#define L2TM_L2TM_ES_DRR_WEIGHT_BASE_dft         0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t w_rate               :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t base_select          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t dwrr_unit            :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_DRR_WEIGHT_BASE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_CFG                         0xf43023cc
#define L2TM_L2TM_ES_CFG_dft                     0x00000740

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sch_ack_len          :  8 ; /* bits 7:0 */
    ca_uint32_t sch_sync_upd         :  1 ; /* bits 8:8 */
    ca_uint32_t sch_rr_grant         :  1 ; /* bits 9:9 */
    ca_uint32_t sch_ack_solo         :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_STS                         0xf43023d0
#define L2TM_L2TM_ES_STS_dft                     0x00003fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_port_rdy          : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_STS0                    0xf43023d4
#define L2TM_L2TM_ES_VOQ_STS0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_STS0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_STS1                    0xf43023d8
#define L2TM_L2TM_ES_VOQ_STS1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_STS1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_STS2                    0xf43023dc
#define L2TM_L2TM_ES_VOQ_STS2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_STS2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_STS3                    0xf43023e0
#define L2TM_L2TM_ES_VOQ_STS3_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_STS3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_OK_STS0                 0xf43023e4
#define L2TM_L2TM_ES_VOQ_OK_STS0_dft             0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_OK_STS0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_OK_STS1                 0xf43023e8
#define L2TM_L2TM_ES_VOQ_OK_STS1_dft             0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_OK_STS1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_OK_STS2                 0xf43023ec
#define L2TM_L2TM_ES_VOQ_OK_STS2_dft             0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_OK_STS2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_VOQ_OK_STS3                 0xf43023f0
#define L2TM_L2TM_ES_VOQ_OK_STS3_dft             0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qid                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_VOQ_OK_STS3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_PORT_OK_STS                 0xf43023f4
#define L2TM_L2TM_ES_PORT_OK_STS_dft             0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid                  : 16 ; /* bits 15:0 */
    ca_uint32_t voq_grp              : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_PORT_OK_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_ABR_STS                     0xf43023f8
#define L2TM_L2TM_ES_ABR_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port7_voq_abr_drop_sts :  8 ; /* bits 7:0 */
    ca_uint32_t port7_abr_ovthrsh    :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_ABR_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TM_ES_ABR_FLUSH_PCNT              0xf43023fc
#define L2TM_L2TM_ES_ABR_FLUSH_PCNT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TM_ES_ABR_FLUSH_PCNT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_es */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TM_ES_CTRL_t                      CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TM_ES_SCH_CFG0_t                  SCH_CFG0;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_t  VOQ3_0_WEIGHT_RATIO_CFG0;      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_t  VOQ7_4_WEIGHT_RATIO_CFG0;      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[171];
  L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG_t  PORT3_0_WEIGHT_RATIO_CFG;      /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG_t  PORT7_4_WEIGHT_RATIO_CFG;      /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG_t PORT11_8_WEIGHT_RATIO_CFG;     /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG_t PORT15_12_WEIGHT_RATIO_CFG;    /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TM_ES_DRR_WEIGHT_BASE_t           DRR_WEIGHT_BASE;               /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TM_ES_CFG_t                       CFG;                           /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TM_ES_STS_t                       STS;                           /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TM_ES_VOQ_STS0_t                  VOQ_STS0;                      /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TM_ES_VOQ_STS1_t                  VOQ_STS1;                      /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TM_ES_VOQ_STS2_t                  VOQ_STS2;                      /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TM_ES_VOQ_STS3_t                  VOQ_STS3;                      /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd15[3];
  L2TM_L2TM_ES_VOQ_OK_STS0_t               VOQ_OK_STS0;                   /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TM_ES_VOQ_OK_STS1_t               VOQ_OK_STS1;                   /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd17[3];
  L2TM_L2TM_ES_VOQ_OK_STS2_t               VOQ_OK_STS2;                   /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TM_ES_VOQ_OK_STS3_t               VOQ_OK_STS3;                   /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TM_ES_PORT_OK_STS_t               PORT_OK_STS;                   /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd20[3];
  L2TM_L2TM_ES_ABR_STS_t                   ABR_STS;                       /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd21[3];
  L2TM_L2TM_ES_ABR_FLUSH_PCNT_t            ABR_FLUSH_PCNT;                /* addr: 0x000000fc */
} APB0_L2TM_L2TM_ES_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_glb
 */

#define L2TM_L2TE_GLB_REV_ID                     0xf4302400
#define L2TM_L2TE_GLB_REV_ID_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minor                : 16 ; /* bits 15:0 */
    ca_uint32_t major                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_REV_ID_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_CTRL                       0xf4302404
#define L2TM_L2TE_GLB_CTRL_dft                   0x07000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_en               :  1 ; /* bits 0:0 */
    ca_uint32_t shp_en               :  1 ; /* bits 1:1 */
    ca_uint32_t taildrop_en          :  1 ; /* bits 2:2 */
    ca_uint32_t wred_en              :  1 ; /* bits 3:3 */
    ca_uint32_t mark_ecn_en          :  1 ; /* bits 4:4 */
    ca_uint32_t pol_ecn_en           :  1 ; /* bits 5:5 */
    ca_uint32_t wred_ecn_en          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t port8_empty_sel      :  1 ; /* bits 14:14 */
    ca_uint32_t snoop_l3_voq_taildrop_dis :  1 ; /* bits 15:15 */
    ca_uint32_t glb_deepq_port_rdy_en :  8 ; /* bits 23:16 */
    ca_uint32_t glb_deepq_port_rdy_id :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t puc_tqm_voqbp_7_0_dis :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t force_init_done      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_INT                        0xf4302408
#define L2TM_L2TE_GLB_INT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_mark             :  1 ; /* bits 0:0 */
    ca_uint32_t pol_drop             :  1 ; /* bits 1:1 */
    ca_uint32_t tail_drop            :  1 ; /* bits 2:2 */
    ca_uint32_t wred_y_drop          :  1 ; /* bits 3:3 */
    ca_uint32_t wred_g_drop          :  1 ; /* bits 4:4 */
    ca_uint32_t ecn                  :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t feio                 :  1 ; /* bits 14:14 */
    ca_uint32_t tmio                 :  1 ; /* bits 15:15 */
    ca_uint32_t cb                   :  1 ; /* bits 16:16 */
    ca_uint32_t fc                   :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_INT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_INTE                       0xf430240c
#define L2TM_L2TE_GLB_INTE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_markE            :  1 ; /* bits 0:0 */
    ca_uint32_t pol_dropE            :  1 ; /* bits 1:1 */
    ca_uint32_t tail_dropE           :  1 ; /* bits 2:2 */
    ca_uint32_t wred_y_dropE         :  1 ; /* bits 3:3 */
    ca_uint32_t wred_g_dropE         :  1 ; /* bits 4:4 */
    ca_uint32_t ecnE                 :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t feioE                :  1 ; /* bits 14:14 */
    ca_uint32_t tmioE                :  1 ; /* bits 15:15 */
    ca_uint32_t cbE                  :  1 ; /* bits 16:16 */
    ca_uint32_t fcE                  :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_STS                        0xf4302410
#define L2TM_L2TE_GLB_STS_dft                    0x07000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_fifo_ovrn        :  1 ; /* bits 0:0 */
    ca_uint32_t l2io_fifo_ovrn       :  1 ; /* bits 1:1 */
    ca_uint32_t qmio_enq_ovrn        :  1 ; /* bits 2:2 */
    ca_uint32_t qmio_deq_ovrn        :  1 ; /* bits 3:3 */
    ca_uint32_t qmio_shp_ovrn        :  1 ; /* bits 4:4 */
    ca_uint32_t te_qm_nrdy           :  1 ; /* bits 5:5 */
    ca_uint32_t ptp_fifo_err         :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t pol_init_done        :  1 ; /* bits 12:12 */
    ca_uint32_t shp_init_done        :  1 ; /* bits 13:13 */
    ca_uint32_t cb_init_done         :  1 ; /* bits 14:14 */
    ca_uint32_t wred_init_done       :  1 ; /* bits 15:15 */
    ca_uint32_t feio_sm              :  4 ; /* bits 19:16 */
    ca_uint32_t fe_te_req            :  1 ; /* bits 20:20 */
    ca_uint32_t te_fe_ack            :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t l2io_idle            :  1 ; /* bits 24:24 */
    ca_uint32_t qmio_idle            :  1 ; /* bits 25:25 */
    ca_uint32_t ptp_fifo_idle        :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t init_done            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_PTP_CFG                    0xf4302414
#define L2TM_L2TE_GLB_PTP_CFG_dft                0x000007ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_id               :  8 ; /* bits 7:0 */
    ca_uint32_t pol_grp_id           :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pol_en               :  1 ; /* bits 12:12 */
    ca_uint32_t pol_grp_en           :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_PTP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SPARE_CFG                  0xf4302418
#define L2TM_L2TE_GLB_SPARE_CFG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SPARE_STS                  0xf430241c
#define L2TM_L2TE_GLB_SPARE_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_0        0xf4302420
#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_0_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_1        0xf4302424
#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_1_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SRAM_TEST_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_2        0xf4302428
#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_2_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SRAM_TEST_CONTROL_2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_3        0xf430242c
#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_3_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SRAM_TEST_CONTROL_3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_4        0xf4302430
#define L2TM_L2TE_GLB_SRAM_TEST_CONTROL_4_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_GLB_SRAM_TEST_CONTROL_4_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_glb */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_GLB_REV_ID_t                   REV_ID;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_GLB_CTRL_t                     CTRL;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_GLB_INT_t                      INT;                           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TE_GLB_INTE_t                     INTE;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_GLB_STS_t                      STS;                           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TE_GLB_PTP_CFG_t                  PTP_CFG;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TE_GLB_SPARE_CFG_t                SPARE_CFG;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TE_GLB_SPARE_STS_t                SPARE_STS;                     /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TE_GLB_SRAM_TEST_CONTROL_0_t      SRAM_TEST_CONTROL_0;           /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TE_GLB_SRAM_TEST_CONTROL_1_t      SRAM_TEST_CONTROL_1;           /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TE_GLB_SRAM_TEST_CONTROL_2_t      SRAM_TEST_CONTROL_2;           /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TE_GLB_SRAM_TEST_CONTROL_3_t      SRAM_TEST_CONTROL_3;           /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TE_GLB_SRAM_TEST_CONTROL_4_t      SRAM_TEST_CONTROL_4;           /* addr: 0x00000030 */
} APB0_L2TM_L2TE_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_pol
 */

#define L2TM_L2TE_POL_PKT_TYPE_CTRL0             0xf4302500
#define L2TM_L2TE_POL_PKT_TYPE_CTRL0_STRIDE      4
#define L2TM_L2TE_POL_PKT_TYPE_CTRL0_COUNT       16
#define L2TM_L2TE_POL_PKT_TYPE_CTRL0_dft         0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS 0xf4302540
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2 0xf4302544
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1 0xf4302548
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0 0xf430254c
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS 0xf4302550
#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1 0xf4302554
#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0 0xf4302558
#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_CTRL0                 0xf430255c
#define L2TM_L2TE_POL_PORT_CTRL0_STRIDE          4
#define L2TM_L2TE_POL_PORT_CTRL0_COUNT           16
#define L2TM_L2TE_POL_PORT_CTRL0_dft             0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS    0xf430259c
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2     0xf43025a0
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1     0xf43025a4
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0     0xf43025a8
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS    0xf43025ac
#define L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1     0xf43025b0
#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0     0xf43025b4
#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_CTRL0              0xf43025b8
#define L2TM_L2TE_POL_AGRFLOW_CTRL0_STRIDE       4
#define L2TM_L2TE_POL_AGRFLOW_CTRL0_COUNT        8
#define L2TM_L2TE_POL_AGRFLOW_CTRL0_dft          0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS 0xf43025d8
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2  0xf43025dc
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1  0xf43025e0
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0  0xf43025e4
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS 0xf43025e8
#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1  0xf43025ec
#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0  0xf43025f0
#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_TB_CTRL                    0xf43025f4
#define L2TM_L2TE_POL_TB_CTRL_dft                0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addtok_en            :  1 ; /* bits 0:0 */
    ca_uint32_t subtok_en            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t upd_cnt_lmt          :  4 ; /* bits 7:4 */
    ca_uint32_t cyc_cnt_lmt          : 12 ; /* bits 19:8 */
    ca_uint32_t last_upd_cyc         : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_POL_TB_CTRL1                   0xf43025f8
#define L2TM_L2TE_POL_TB_CTRL1_dft               0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t k_cnt_lmt            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_POL_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_pol */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_POL_PKT_TYPE_CTRL0_t           PKT_TYPE_CTRL0;                /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[63];
  L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t PKT_TYPE_PROFILE_MEM_ACCESS;   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t PKT_TYPE_PROFILE_MEM_DATA2;    /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t PKT_TYPE_PROFILE_MEM_DATA1;    /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t PKT_TYPE_PROFILE_MEM_DATA0;    /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t PKT_TYPE_COUNTER_MEM_ACCESS;   /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t PKT_TYPE_COUNTER_MEM_DATA1;    /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t PKT_TYPE_COUNTER_MEM_DATA0;    /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TE_POL_PORT_CTRL0_t               PORT_CTRL0;                    /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd9[63];
  L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS_t  PORT_PROFILE_MEM_ACCESS;       /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2_t   PORT_PROFILE_MEM_DATA2;        /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1_t   PORT_PROFILE_MEM_DATA1;        /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0_t   PORT_PROFILE_MEM_DATA0;        /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS_t  PORT_COUNTER_MEM_ACCESS;       /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1_t   PORT_COUNTER_MEM_DATA1;        /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd15[3];
  L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0_t   PORT_COUNTER_MEM_DATA0;        /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TE_POL_AGRFLOW_CTRL0_t            AGRFLOW_CTRL0;                 /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd17[31];
  L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t AGRFLOW_PROFILE_MEM_ACCESS;    /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t AGRFLOW_PROFILE_MEM_DATA2;     /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t AGRFLOW_PROFILE_MEM_DATA1;     /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd20[3];
  L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t AGRFLOW_PROFILE_MEM_DATA0;     /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd21[3];
  L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t AGRFLOW_COUNTER_MEM_ACCESS;    /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd22[3];
  L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t AGRFLOW_COUNTER_MEM_DATA1;     /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd23[3];
  L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t AGRFLOW_COUNTER_MEM_DATA0;     /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd24[3];
  L2TM_L2TE_POL_TB_CTRL_t                  TB_CTRL;                       /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd25[3];
  L2TM_L2TE_POL_TB_CTRL1_t                 TB_CTRL1;                      /* addr: 0x000000f8 */
} APB0_L2TM_L2TE_POL_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_shp
 */

#define L2TM_L2TE_SHP_IPG_PROFILE                0xf4302700
#define L2TM_L2TE_SHP_IPG_PROFILE_dft            0x14141414

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipg0                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ipg1                 :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ipg2                 :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t ipg3                 :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_IPG_PROFILE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_PORT_IPG_SELECT0           0xf4302704
#define L2TM_L2TE_SHP_PORT_IPG_SELECT0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid0                 :  2 ; /* bits 1:0 */
    ca_uint32_t pid1                 :  2 ; /* bits 3:2 */
    ca_uint32_t pid2                 :  2 ; /* bits 5:4 */
    ca_uint32_t pid3                 :  2 ; /* bits 7:6 */
    ca_uint32_t pid4                 :  2 ; /* bits 9:8 */
    ca_uint32_t pid5                 :  2 ; /* bits 11:10 */
    ca_uint32_t pid6                 :  2 ; /* bits 13:12 */
    ca_uint32_t pid7                 :  2 ; /* bits 15:14 */
    ca_uint32_t pid8                 :  2 ; /* bits 17:16 */
    ca_uint32_t pid9                 :  2 ; /* bits 19:18 */
    ca_uint32_t pid10                :  2 ; /* bits 21:20 */
    ca_uint32_t pid11                :  2 ; /* bits 23:22 */
    ca_uint32_t pid12                :  2 ; /* bits 25:24 */
    ca_uint32_t pid13                :  2 ; /* bits 27:26 */
    ca_uint32_t pid14                :  2 ; /* bits 29:28 */
    ca_uint32_t pid15                :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_PORT_IPG_SELECT0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_SRP_CONFIG0                0xf4302708
#define L2TM_L2TE_SHP_SRP_CONFIG0_STRIDE         4
#define L2TM_L2TE_SHP_SRP_CONFIG0_COUNT          2
#define L2TM_L2TE_SHP_SRP_CONFIG0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg0_enb             :  1 ; /* bits 0:0 */
    ca_uint32_t cfg0_cos             :  3 ; /* bits 3:1 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t cfg0_class_b         :  1 ; /* bits 15:15 */
    ca_uint32_t cfg1_enb             :  1 ; /* bits 16:16 */
    ca_uint32_t cfg1_cos             :  3 ; /* bits 19:17 */
    ca_uint32_t rsrvd2               : 11 ;
    ca_uint32_t cfg1_class_b         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_SRP_CONFIG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_SRP_CONFIG_EN              0xf4302710
#define L2TM_L2TE_SHP_SRP_CONFIG_EN_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid0                 :  4 ; /* bits 3:0 */
    ca_uint32_t pid1                 :  4 ; /* bits 7:4 */
    ca_uint32_t pid2                 :  4 ; /* bits 11:8 */
    ca_uint32_t pid3                 :  4 ; /* bits 15:12 */
    ca_uint32_t pid4                 :  4 ; /* bits 19:16 */
    ca_uint32_t pid5                 :  4 ; /* bits 23:20 */
    ca_uint32_t pid6                 :  4 ; /* bits 27:24 */
    ca_uint32_t pid7                 :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_SRP_CONFIG_EN_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_CTRL                       0xf4302714
#define L2TM_L2TE_SHP_CTRL_dft                   0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_mode_class0_cnt  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pkt_mode_class1_cnt  :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS        0xf4302718
#define L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1         0xf430271c
#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0         0xf4302720
#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS       0xf4302724
#define L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1        0xf4302728
#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0        0xf430272c
#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS         0xf4302730
#define L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1          0xf4302734
#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0          0xf4302738
#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_AGR_SHP_CFG                0xf430273c
#define L2TM_L2TE_SHP_AGR_SHP_CFG_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_agr_bitmap      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_AGR_SHP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_AGR_SHP_CTRL1              0xf4302740
#define L2TM_L2TE_SHP_AGR_SHP_CTRL1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cbs                  : 10 ; /* bits 9:0 */
    ca_uint32_t enb                  :  2 ; /* bits 11:10 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_AGR_SHP_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_AGR_SHP_CTRL0              0xf4302744
#define L2TM_L2TE_SHP_AGR_SHP_CTRL0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_AGR_SHP_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_AGR_SHP_STS                0xf4302748
#define L2TM_L2TE_SHP_AGR_SHP_STS_dft            0x00100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc                  : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_AGR_SHP_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_TB_CTRL                    0xf430274c
#define L2TM_L2TE_SHP_TB_CTRL_dft                0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addtok_en            :  1 ; /* bits 0:0 */
    ca_uint32_t subtok_en            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t upd_cnt_lmt          :  4 ; /* bits 7:4 */
    ca_uint32_t cyc_cnt_lmt          : 12 ; /* bits 19:8 */
    ca_uint32_t last_upd_cyc         : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_SHP_TB_CTRL1                   0xf4302750
#define L2TM_L2TE_SHP_TB_CTRL1_dft               0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t k_cnt_lmt            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_SHP_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_shp */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_SHP_IPG_PROFILE_t              IPG_PROFILE;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_SHP_PORT_IPG_SELECT0_t         PORT_IPG_SELECT0;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_SHP_SRP_CONFIG0_t              SRP_CONFIG0;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[7];
  L2TM_L2TE_SHP_SRP_CONFIG_EN_t            SRP_CONFIG_EN;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_SHP_CTRL_t                     CTRL;                          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS_t      PORT_TBC_MEM_ACCESS;           /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1_t       PORT_TBC_MEM_DATA1;            /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0_t       PORT_TBC_MEM_DATA0;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS_t     GROUP_TBC_MEM_ACCESS;          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1_t      GROUP_TBC_MEM_DATA1;           /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0_t      GROUP_TBC_MEM_DATA0;           /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS_t       VOQ_TBC_MEM_ACCESS;            /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1_t        VOQ_TBC_MEM_DATA1;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0_t        VOQ_TBC_MEM_DATA0;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TE_SHP_AGR_SHP_CFG_t              AGR_SHP_CFG;                   /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd15[3];
  L2TM_L2TE_SHP_AGR_SHP_CTRL1_t            AGR_SHP_CTRL1;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TE_SHP_AGR_SHP_CTRL0_t            AGR_SHP_CTRL0;                 /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd17[3];
  L2TM_L2TE_SHP_AGR_SHP_STS_t              AGR_SHP_STS;                   /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TE_SHP_TB_CTRL_t                  TB_CTRL;                       /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TE_SHP_TB_CTRL1_t                 TB_CTRL1;                      /* addr: 0x00000050 */
} APB0_L2TM_L2TE_SHP_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_wred
 */

#define L2TM_L2TE_WRED_CTRL                      0xf4302800
#define L2TM_L2TE_WRED_CTRL_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t fast_decay           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t afgs_weight          :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_AFGS_MEM_ACCESS           0xf4302804
#define L2TM_L2TE_WRED_AFGS_MEM_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 29 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_AFGS_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_AFGS_MEM_DATA             0xf4302808
#define L2TM_L2TE_WRED_AFGS_MEM_DATA_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t depth                : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_AFGS_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_ACCESS        0xf430280c
#define L2TM_L2TE_WRED_PROFILE_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA7         0xf4302810
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA7_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data_rsvd            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA6         0xf4302814
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA6_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_idx           :  4 ; /* bits 3:0 */
    ca_uint32_t mark_idx             :  4 ; /* bits 7:4 */
    ca_uint32_t data_rsvd            : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA5         0xf4302818
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA5_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_dps             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA4         0xf430281c
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA4_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_dps             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA3         0xf4302820
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA3_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_dps             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA2         0xf4302824
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_dps           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA1         0xf4302828
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_dps           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_MEM_DATA0         0xf430282c
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_dps           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS 0xf4302830
#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1  0xf4302834
#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel6                 :  3 ; /* bits 2:0 */
    ca_uint32_t sel7                 :  5 ; /* bits 7:3 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0  0xf4302838
#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel0                 :  5 ; /* bits 4:0 */
    ca_uint32_t sel1                 :  5 ; /* bits 9:5 */
    ca_uint32_t sel2                 :  5 ; /* bits 14:10 */
    ca_uint32_t sel3                 :  5 ; /* bits 19:15 */
    ca_uint32_t sel4                 :  5 ; /* bits 24:20 */
    ca_uint32_t sel5                 :  5 ; /* bits 29:25 */
    ca_uint32_t sel6                 :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_wred */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_WRED_CTRL_t                    CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_WRED_AFGS_MEM_ACCESS_t         AFGS_MEM_ACCESS;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_WRED_AFGS_MEM_DATA_t           AFGS_MEM_DATA;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TE_WRED_PROFILE_MEM_ACCESS_t      PROFILE_MEM_ACCESS;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA7_t       PROFILE_MEM_DATA7;             /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA6_t       PROFILE_MEM_DATA6;             /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA5_t       PROFILE_MEM_DATA5;             /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA4_t       PROFILE_MEM_DATA4;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA3_t       PROFILE_MEM_DATA3;             /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA2_t       PROFILE_MEM_DATA2;             /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA1_t       PROFILE_MEM_DATA1;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TE_WRED_PROFILE_MEM_DATA0_t       PROFILE_MEM_DATA0;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS_t PROFILE_SELECT_MEM_ACCESS;     /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1_t PROFILE_SELECT_MEM_DATA1;      /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0_t PROFILE_SELECT_MEM_DATA0;      /* addr: 0x00000038 */
} APB0_L2TM_L2TE_WRED_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_fc_glb
 */

#define L2TM_L2TE_FC_GLB_INT                     0xf4302900
#define L2TM_L2TE_FC_GLB_INT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxflowcntl0          :  1 ; /* bits 0:0 */
    ca_uint32_t rxflowcntl1          :  1 ; /* bits 1:1 */
    ca_uint32_t rxflowcntl2          :  1 ; /* bits 2:2 */
    ca_uint32_t rxflowcntl3          :  1 ; /* bits 3:3 */
    ca_uint32_t rxflowcntl4          :  1 ; /* bits 4:4 */
    ca_uint32_t rxflowcntl5          :  1 ; /* bits 5:5 */
    ca_uint32_t rxflowcntl6          :  1 ; /* bits 6:6 */
    ca_uint32_t rxflowcntl7          :  1 ; /* bits 7:7 */
    ca_uint32_t rxflowcntl8          :  1 ; /* bits 8:8 */
    ca_uint32_t rxflowcntl9          :  1 ; /* bits 9:9 */
    ca_uint32_t rxflowcntl10         :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rxflowcntl13         :  1 ; /* bits 13:13 */
    ca_uint32_t rxflowcntl13_qm      :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t txflowcntl0          :  1 ; /* bits 16:16 */
    ca_uint32_t txflowcntl1          :  1 ; /* bits 17:17 */
    ca_uint32_t txflowcntl2          :  1 ; /* bits 18:18 */
    ca_uint32_t txflowcntl3          :  1 ; /* bits 19:19 */
    ca_uint32_t txflowcntl4          :  1 ; /* bits 20:20 */
    ca_uint32_t txflowcntl5          :  1 ; /* bits 21:21 */
    ca_uint32_t txflowcntl6          :  1 ; /* bits 22:22 */
    ca_uint32_t txflowcntl7          :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t txflowcntl9          :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t txflowcntl11         :  1 ; /* bits 27:27 */
    ca_uint32_t txflowcntl12         :  1 ; /* bits 28:28 */
    ca_uint32_t txflowcntl13         :  1 ; /* bits 29:29 */
    ca_uint32_t txflowcntl14         :  1 ; /* bits 30:30 */
    ca_uint32_t txflowcntl15         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_INT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_INTE                    0xf4302904
#define L2TM_L2TE_FC_GLB_INTE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxflowcntl0E         :  1 ; /* bits 0:0 */
    ca_uint32_t rxflowcntl1E         :  1 ; /* bits 1:1 */
    ca_uint32_t rxflowcntl2E         :  1 ; /* bits 2:2 */
    ca_uint32_t rxflowcntl3E         :  1 ; /* bits 3:3 */
    ca_uint32_t rxflowcntl4E         :  1 ; /* bits 4:4 */
    ca_uint32_t rxflowcntl5E         :  1 ; /* bits 5:5 */
    ca_uint32_t rxflowcntl6E         :  1 ; /* bits 6:6 */
    ca_uint32_t rxflowcntl7E         :  1 ; /* bits 7:7 */
    ca_uint32_t rxflowcntl8E         :  1 ; /* bits 8:8 */
    ca_uint32_t rxflowcntl9E         :  1 ; /* bits 9:9 */
    ca_uint32_t rxflowcntl10E        :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rxflowcntl13E        :  1 ; /* bits 13:13 */
    ca_uint32_t rxflowcntl13_qmE     :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t txflowcntl0E         :  1 ; /* bits 16:16 */
    ca_uint32_t txflowcntl1E         :  1 ; /* bits 17:17 */
    ca_uint32_t txflowcntl2E         :  1 ; /* bits 18:18 */
    ca_uint32_t txflowcntl3E         :  1 ; /* bits 19:19 */
    ca_uint32_t txflowcntl4E         :  1 ; /* bits 20:20 */
    ca_uint32_t txflowcntl5E         :  1 ; /* bits 21:21 */
    ca_uint32_t txflowcntl6E         :  1 ; /* bits 22:22 */
    ca_uint32_t txflowcntl7E         :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t txflowcntl9E         :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t txflowcntl11E        :  1 ; /* bits 27:27 */
    ca_uint32_t txflowcntl12E        :  1 ; /* bits 28:28 */
    ca_uint32_t txflowcntl13E        :  1 ; /* bits 29:29 */
    ca_uint32_t txflowcntl14E        :  1 ; /* bits 30:30 */
    ca_uint32_t txflowcntl15E        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_CTRL                    0xf4302908
#define L2TM_L2TE_FC_GLB_CTRL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t deepq_rxpfc_en       :  8 ; /* bits 7:0 */
    ca_uint32_t cpu_rxpfc_en         :  8 ; /* bits 15:8 */
    ca_uint32_t l3fewan_rxpfc_en     :  8 ; /* bits 23:16 */
    ca_uint32_t l3felan_rxpfc_en     :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_CTRL_LANL3FE            0xf430290c
#define L2TM_L2TE_FC_GLB_CTRL_LANL3FE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lanl3fe_rxpfc_en     :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_CTRL_LANL3FE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_STS                     0xf4302910
#define L2TM_L2TE_FC_GLB_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t deepq_rxpfc          :  8 ; /* bits 7:0 */
    ca_uint32_t cpu_rxpfc            :  8 ; /* bits 15:8 */
    ca_uint32_t lanl3fe_rxpfc        :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd1               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_TIMER                   0xf4302914
#define L2TM_L2TE_FC_GLB_TIMER_dft               0x000073ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num_of_cycles        : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t cycle_unit           :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               : 16 ;
    ca_uint32_t enable               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_TIMER_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_PFC_CTRL0               0xf4302918
#define L2TM_L2TE_FC_GLB_PFC_CTRL0_STRIDE        8
#define L2TM_L2TE_FC_GLB_PFC_CTRL0_COUNT         2
#define L2TM_L2TE_FC_GLB_PFC_CTRL0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos_bmap             :  8 ; /* bits 7:0 */
    ca_uint32_t port_bmap            :  8 ; /* bits 15:8 */
    ca_uint32_t rxpfc_en             :  1 ; /* bits 16:16 */
    ca_uint32_t txpfc_en             :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_PFC_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_GLB_PFC_CNT0                0xf430291c
#define L2TM_L2TE_FC_GLB_PFC_CNT0_STRIDE         8
#define L2TM_L2TE_FC_GLB_PFC_CNT0_COUNT          2
#define L2TM_L2TE_FC_GLB_PFC_CNT0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_GLB_PFC_CNT0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_fc_glb */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_FC_GLB_INT_t                   INT;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_FC_GLB_INTE_t                  INTE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_FC_GLB_CTRL_t                  CTRL;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TE_FC_GLB_CTRL_LANL3FE_t          CTRL_LANL3FE;                  /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_FC_GLB_STS_t                   STS;                           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TE_FC_GLB_TIMER_t                 TIMER;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TE_FC_GLB_PFC_CTRL0_t             PFC_CTRL0;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TE_FC_GLB_PFC_CNT0_t              PFC_CNT0;                      /* addr: 0x0000001c */
} APB0_L2TM_L2TE_FC_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_fc[0..13]
 */

#define L2TM_L2TE_FC_CTRL                        0xf4302980
#define L2TM_L2TE_FC_CTRL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_en                :  1 ; /* bits 0:0 */
    ca_uint32_t tx_en                :  1 ; /* bits 1:1 */
    ca_uint32_t src_rate_enforce     :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t stat_pri_sel         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_STS                         0xf4302984
#define L2TM_L2TE_FC_STS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxpfc                :  8 ; /* bits 7:0 */
    ca_uint32_t txpfc                :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_FC_STAT                        0xf4302988
#define L2TM_L2TE_FC_STAT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag_num             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t voq                  :  7 ; /* bits 10:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t qm_voq               :  9 ; /* bits 20:12 */
    ca_uint32_t rsrvd3               :  9 ;
    ca_uint32_t txpfc                :  1 ; /* bits 30:30 */
    ca_uint32_t rxpfc                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_FC_STAT_t;
#endif /* !__ASSEMBLER__ */


#define APB0_L2TM_L2TE_FC_STRIDE          64
#define APB0_L2TM_L2TE_FC_COUNT           14



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_fc */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_FC_CTRL_t                      CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_FC_STS_t                       STS;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_FC_STAT_t                      STAT;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[55];
} APB0_L2TM_L2TE_FC_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_cb
 */

#define L2TM_L2TE_CB_INT                         0xf4302d00
#define L2TM_L2TE_CB_INT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_bufcnt_udfl      :  1 ; /* bits 0:0 */
    ca_uint32_t voq_bufcnt_ovfl      :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t port_freecnt_udfl    :  1 ; /* bits 4:4 */
    ca_uint32_t port_freecnt_ovfl    :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_INT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_INTE                        0xf4302d04
#define L2TM_L2TE_CB_INTE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_bufcnt_udflE     :  1 ; /* bits 0:0 */
    ca_uint32_t voq_bufcnt_ovflE     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t port_freecnt_udflE   :  1 ; /* bits 4:4 */
    ca_uint32_t port_freecnt_ovflE   :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_ERR_INFO                    0xf4302d08
#define L2TM_L2TE_CB_ERR_INFO_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_of_buferr        :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_ERR_INFO_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_CTRL                        0xf4302d0c
#define L2TM_L2TE_CB_CTRL_dft                    0x0003ff03

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scan_cycle_per_run   :  8 ; /* bits 7:0 */
    ca_uint32_t scan_cycle_unit      : 10 ; /* bits 17:8 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t cnt_udfl_allow       :  1 ; /* bits 30:30 */
    ca_uint32_t scan_enable          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0        0xf4302d10
#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_STRIDE 4
#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_COUNT  2
#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dqid                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0       0xf4302d18
#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_STRIDE 4
#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_COUNT 2
#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dqid                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_TM_TAILDROP_STS0            0xf4302d20
#define L2TM_L2TE_CB_TM_TAILDROP_STS0_STRIDE     4
#define L2TM_L2TE_CB_TM_TAILDROP_STS0_COUNT      4
#define L2TM_L2TE_CB_TM_TAILDROP_STS0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_TM_TAILDROP_STS0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_QM_TAILDROP_STS0            0xf4302d30
#define L2TM_L2TE_CB_QM_TAILDROP_STS0_STRIDE     4
#define L2TM_L2TE_CB_QM_TAILDROP_STS0_COUNT      12
#define L2TM_L2TE_CB_QM_TAILDROP_STS0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_QM_TAILDROP_STS0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_GLOB_TD_STS                 0xf4302d60
#define L2TM_L2TE_CB_GLOB_TD_STS_dft             0x0020ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t per_port_prvt_avl    : 16 ; /* bits 15:0 */
    ca_uint32_t noncong_buf_avl      :  1 ; /* bits 16:16 */
    ca_uint32_t common_buf_avl       :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t fc_buf_usg_l         :  1 ; /* bits 21:21 */
    ca_uint32_t fc_buf_usg_m         :  1 ; /* bits 22:22 */
    ca_uint32_t fc_buf_usg_h         :  1 ; /* bits 23:23 */
    ca_uint32_t pfc                  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_GLOB_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_PORT_TD_STS                 0xf4302d64
#define L2TM_L2TE_CB_PORT_TD_STS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port                 : 16 ; /* bits 15:0 */
    ca_uint32_t src_port             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_PORT_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_TD_STS0                 0xf4302d68
#define L2TM_L2TE_CB_VOQ_TD_STS0_STRIDE          4
#define L2TM_L2TE_CB_VOQ_TD_STS0_COUNT           4
#define L2TM_L2TE_CB_VOQ_TD_STS0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_TD_STS0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PRI_TD_STS              0xf4302d78
#define L2TM_L2TE_CB_SRC_PRI_TD_STS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t src_pri              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PRI_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0         0xf4302d7c
#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0_STRIDE  8
#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0_COUNT   4
#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0_dft     0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0      0xf4302d80
#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_STRIDE 8
#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_dft  0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t grplth               : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t grphth               : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_PORT_THRSH_SELECT           0xf4302d9c
#define L2TM_L2TE_CB_PORT_THRSH_SELECT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel0               :  2 ; /* bits 1:0 */
    ca_uint32_t thsel1               :  2 ; /* bits 3:2 */
    ca_uint32_t thsel2               :  2 ; /* bits 5:4 */
    ca_uint32_t thsel3               :  2 ; /* bits 7:6 */
    ca_uint32_t thsel4               :  2 ; /* bits 9:8 */
    ca_uint32_t thsel5               :  2 ; /* bits 11:10 */
    ca_uint32_t thsel6               :  2 ; /* bits 13:12 */
    ca_uint32_t thsel7               :  2 ; /* bits 15:14 */
    ca_uint32_t thsel8               :  2 ; /* bits 17:16 */
    ca_uint32_t thsel9               :  2 ; /* bits 19:18 */
    ca_uint32_t thsel10              :  2 ; /* bits 21:20 */
    ca_uint32_t thsel11              :  2 ; /* bits 23:22 */
    ca_uint32_t thsel12              :  2 ; /* bits 25:24 */
    ca_uint32_t thsel13              :  2 ; /* bits 27:26 */
    ca_uint32_t thsel14              :  2 ; /* bits 29:28 */
    ca_uint32_t thsel15              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4302da0
#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1 0xf4302da4
#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t grplth               : 13 ; /* bits 12:0 */
    ca_uint32_t grphth               : 15 ; /* bits 27:13 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0 0xf4302da8
#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t hth                  : 15 ; /* bits 29:15 */
    ca_uint32_t grplth               :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS 0xf4302dac
#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA   0xf4302db0
#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS     0xf4302db4
#define L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA       0xf4302db8
#define L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 15 ; /* bits 14:0 */
    ca_uint32_t cnt0_msb             :  1 ; /* bits 15:15 */
    ca_uint32_t cnt1                 : 15 ; /* bits 30:16 */
    ca_uint32_t cnt1_msb             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS       0xf4302dbc
#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA         0xf4302dc0
#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 15 ; /* bits 14:0 */
    ca_uint32_t cnt0_rsvd            :  1 ; /* bits 15:15 */
    ca_uint32_t cnt1                 : 15 ; /* bits 30:16 */
    ca_uint32_t cnt1_rsvd            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS   0xf4302dc4
#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA     0xf4302dc8
#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_GLB_THRSH                   0xf4302dcc
#define L2TM_L2TE_CB_GLB_THRSH_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_GLB_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_GLB_PRI_THRSH0              0xf4302dd0
#define L2TM_L2TE_CB_GLB_PRI_THRSH0_STRIDE       4
#define L2TM_L2TE_CB_GLB_PRI_THRSH0_COUNT        8
#define L2TM_L2TE_CB_GLB_PRI_THRSH0_dft          0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_GLB_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_CTRL                    0xf4302df0
#define L2TM_L2TE_CB_SRC_CTRL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t src0_pri_nspid       :  3 ; /* bits 2:0 */
    ca_uint32_t src0_pri_en          :  1 ; /* bits 3:3 */
    ca_uint32_t src1_pri_nspid       :  3 ; /* bits 6:4 */
    ca_uint32_t src1_pri_en          :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0     0xf4302df4
#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_STRIDE 4
#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT       0xf4302e04
#define L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel0               :  2 ; /* bits 1:0 */
    ca_uint32_t thsel1               :  2 ; /* bits 3:2 */
    ca_uint32_t thsel2               :  2 ; /* bits 5:4 */
    ca_uint32_t thsel3               :  2 ; /* bits 7:6 */
    ca_uint32_t thsel4               :  2 ; /* bits 9:8 */
    ca_uint32_t thsel5               :  2 ; /* bits 11:10 */
    ca_uint32_t thsel6               :  2 ; /* bits 13:12 */
    ca_uint32_t thsel7               :  2 ; /* bits 15:14 */
    ca_uint32_t thsel8               :  2 ; /* bits 17:16 */
    ca_uint32_t thsel9               :  2 ; /* bits 19:18 */
    ca_uint32_t thsel10              :  2 ; /* bits 21:20 */
    ca_uint32_t thsel11              :  2 ; /* bits 23:22 */
    ca_uint32_t thsel12              :  2 ; /* bits 25:24 */
    ca_uint32_t thsel13              :  2 ; /* bits 27:26 */
    ca_uint32_t thsel14              :  2 ; /* bits 29:28 */
    ca_uint32_t thsel15              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC0_PRI_THRSH0             0xf4302e08
#define L2TM_L2TE_CB_SRC0_PRI_THRSH0_STRIDE      4
#define L2TM_L2TE_CB_SRC0_PRI_THRSH0_COUNT       8
#define L2TM_L2TE_CB_SRC0_PRI_THRSH0_dft         0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC0_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC1_PRI_THRSH0             0xf4302e28
#define L2TM_L2TE_CB_SRC1_PRI_THRSH0_STRIDE      4
#define L2TM_L2TE_CB_SRC1_PRI_THRSH0_COUNT       8
#define L2TM_L2TE_CB_SRC1_PRI_THRSH0_dft         0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC1_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS  0xf4302e48
#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA    0xf4302e4c
#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS   0xf4302e50
#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA     0xf4302e54
#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0     0xf4302e58
#define L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0_dft 0x00007fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t th0                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0   0xf4302e5c
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_STRIDE 4
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT     0xf4302e6c
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel0               :  2 ; /* bits 1:0 */
    ca_uint32_t thsel1               :  2 ; /* bits 3:2 */
    ca_uint32_t thsel2               :  2 ; /* bits 5:4 */
    ca_uint32_t thsel3               :  2 ; /* bits 7:6 */
    ca_uint32_t thsel4               :  2 ; /* bits 9:8 */
    ca_uint32_t thsel5               :  2 ; /* bits 11:10 */
    ca_uint32_t thsel6               :  2 ; /* bits 13:12 */
    ca_uint32_t thsel7               :  2 ; /* bits 15:14 */
    ca_uint32_t thsel8               :  2 ; /* bits 17:16 */
    ca_uint32_t thsel9               :  2 ; /* bits 19:18 */
    ca_uint32_t thsel10              :  2 ; /* bits 21:20 */
    ca_uint32_t thsel11              :  2 ; /* bits 23:22 */
    ca_uint32_t thsel12              :  2 ; /* bits 25:24 */
    ca_uint32_t thsel13              :  2 ; /* bits 27:26 */
    ca_uint32_t thsel14              :  2 ; /* bits 29:28 */
    ca_uint32_t thsel15              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4302e70
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA 0xf4302e74
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t hth                  : 15 ; /* bits 29:15 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS 0xf4302e78
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA 0xf4302e7c
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_WIFI_CTRL                   0xf4302e80
#define L2TM_L2TE_CB_WIFI_CTRL_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wred_taildrop_dis    :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t backpressure_en      : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t febypass_msk         :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_WIFI_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_WIFI_STS                    0xf4302e84
#define L2TM_L2TE_CB_WIFI_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq_profile_ov_threshold :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t buffer_ov_threshold  : 12 ; /* bits 19:8 */
    ca_uint32_t wifi_backpressure_on : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_WIFI_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_WIFI_VP0_BUFCNT             0xf4302e88
#define L2TM_L2TE_CB_WIFI_VP0_BUFCNT_STRIDE      4
#define L2TM_L2TE_CB_WIFI_VP0_BUFCNT_COUNT       12
#define L2TM_L2TE_CB_WIFI_VP0_BUFCNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_WIFI_VP0_BUFCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_WIFI_VP0_BUF_THRSH          0xf4302eb8
#define L2TM_L2TE_CB_WIFI_VP0_BUF_THRSH_STRIDE   4
#define L2TM_L2TE_CB_WIFI_VP0_BUF_THRSH_COUNT    12
#define L2TM_L2TE_CB_WIFI_VP0_BUF_THRSH_dft      0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_WIFI_VP0_BUF_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_WIFI_EQ_PROFILE_THRSH       0xf4302ee8
#define L2TM_L2TE_CB_WIFI_EQ_PROFILE_THRSH_dft   0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_WIFI_EQ_PROFILE_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_CB_ABR_CTRL                    0xf4302eec
#define L2TM_L2TE_CB_ABR_CTRL_dft                0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hth                  : 15 ; /* bits 30:16 */
    ca_uint32_t drop_en              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_CB_ABR_CTRL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_cb */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_CB_INT_t                       INT;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_CB_INTE_t                      INTE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_CB_ERR_INFO_t                  ERR_INFO;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TE_CB_CTRL_t                      CTRL;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_t      TM_DQSCH_HI_BUF_USG0;          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[7];
  L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_t     TM_DQSCH_MID_BUF_USG0;         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd6[7];
  L2TM_L2TE_CB_TM_TAILDROP_STS0_t          TM_TAILDROP_STS0;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd7[15];
  L2TM_L2TE_CB_QM_TAILDROP_STS0_t          QM_TAILDROP_STS0;              /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd8[47];
  L2TM_L2TE_CB_GLOB_TD_STS_t               GLOB_TD_STS;                   /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TE_CB_PORT_TD_STS_t               PORT_TD_STS;                   /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TE_CB_VOQ_TD_STS0_t               VOQ_TD_STS0;                   /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd11[15];
  L2TM_L2TE_CB_SRC_PRI_TD_STS_t            SRC_PRI_TD_STS;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TE_CB_PORT_THRSH_PROFILE0_t       PORT_THRSH_PROFILE0;           /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_t    PORT_GRPTHRSH_PROFILE0;        /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd14[27];
  L2TM_L2TE_CB_PORT_THRSH_SELECT_t         PORT_THRSH_SELECT;             /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd15[3];
  L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t VOQ_THRSH_PROFILE_MEM_ACCESS;  /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t VOQ_THRSH_PROFILE_MEM_DATA1;   /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd17[3];
  L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t VOQ_THRSH_PROFILE_MEM_DATA0;   /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t VOQ_THRSH_SELECT_MEM_ACCESS;   /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t VOQ_THRSH_SELECT_MEM_DATA;     /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd20[3];
  L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS_t   PORT_FREECNT_MEM_ACCESS;       /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd21[3];
  L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA_t     PORT_FREECNT_MEM_DATA;         /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd22[3];
  L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS_t     VOQ_BUFCNT_MEM_ACCESS;         /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd23[3];
  L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA_t       VOQ_BUFCNT_MEM_DATA;           /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd24[3];
  L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t VOQ_MAX_BUFCNT_MEM_ACCESS;     /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd25[3];
  L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t   VOQ_MAX_BUFCNT_MEM_DATA;       /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd26[3];
  L2TM_L2TE_CB_GLB_THRSH_t                 GLB_THRSH;                     /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd27[3];
  L2TM_L2TE_CB_GLB_PRI_THRSH0_t            GLB_PRI_THRSH0;                /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd28[31];
  L2TM_L2TE_CB_SRC_CTRL_t                  SRC_CTRL;                      /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd29[3];
  L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_t   SRC_PORT_THRSH_PROFILE0;       /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd30[15];
  L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT_t     SRC_PORT_THRSH_SELECT;         /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd31[3];
  L2TM_L2TE_CB_SRC0_PRI_THRSH0_t           SRC0_PRI_THRSH0;               /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd32[31];
  L2TM_L2TE_CB_SRC1_PRI_THRSH0_t           SRC1_PRI_THRSH0;               /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd33[31];
  L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t SRC_PORT_BUFCNT_MEM_ACCESS;    /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd34[3];
  L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t  SRC_PORT_BUFCNT_MEM_DATA;      /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd35[3];
  L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t SRC_PRI_BUFCNT_MEM_ACCESS;     /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd36[3];
  L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t   SRC_PRI_BUFCNT_MEM_DATA;       /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd37[3];
  L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0_t   DQSCH_EQ_PROFILE_THRSH0;       /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd38[3];
  L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_t DQSCH_PORT_THRSH_PROFILE0;     /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd39[15];
  L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT_t   DQSCH_PORT_THRSH_SELECT;       /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd40[3];
  L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS; /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd41[3];
  L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t DQSCH_VOQ_THRSH_PROFILE_MEM_DATA; /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd42[3];
  L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS; /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd43[3];
  L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t DQSCH_VOQ_THRSH_SELECT_MEM_DATA; /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd44[3];
  L2TM_L2TE_CB_WIFI_CTRL_t                 WIFI_CTRL;                     /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd45[3];
  L2TM_L2TE_CB_WIFI_STS_t                  WIFI_STS;                      /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd46[3];
  L2TM_L2TE_CB_WIFI_VP0_BUFCNT_t           WIFI_VP0_BUFCNT;               /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd47[47];
  L2TM_L2TE_CB_WIFI_VP0_BUF_THRSH_t        WIFI_VP0_BUF_THRSH;            /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd48[47];
  L2TM_L2TE_CB_WIFI_EQ_PROFILE_THRSH_t     WIFI_EQ_PROFILE_THRSH;         /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd49[3];
  L2TM_L2TE_CB_ABR_CTRL_t                  ABR_CTRL;                      /* addr: 0x000001ec */
} APB0_L2TM_L2TE_CB_t;
#endif /* !__ASSEMBLER__ */


/*
 * l2te_pm
 */

#define L2TM_L2TE_PM_CTRL                        0xf4302f00
#define L2TM_L2TE_PM_CTRL_dft                    0x000000a0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_saturate         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t mem_saturate         :  1 ; /* bits 4:4 */
    ca_uint32_t mem_auto_clr_on_read :  1 ; /* bits 5:5 */
    ca_uint32_t mem_init             :  1 ; /* bits 6:6 */
    ca_uint32_t mem_disable          :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_EVENT_CFG_0                 0xf4302f04
#define L2TM_L2TE_PM_EVENT_CFG_0_dft             0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0_lo              :  4 ; /* bits 3:0 */
    ca_uint32_t cnt0_hi              :  4 ; /* bits 7:4 */
    ca_uint32_t cnt1_lo              :  4 ; /* bits 11:8 */
    ca_uint32_t cnt1_hi              :  4 ; /* bits 15:12 */
    ca_uint32_t cnt2_lo              :  4 ; /* bits 19:16 */
    ca_uint32_t cnt2_hi              :  4 ; /* bits 23:20 */
    ca_uint32_t cnt3_lo              :  4 ; /* bits 27:24 */
    ca_uint32_t cnt3_hi              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_EVENT_CFG_0_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_STS                         0xf4302f08
#define L2TM_L2TE_PM_STS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt0_init_done      :  1 ; /* bits 0:0 */
    ca_uint32_t pcnt1_init_done      :  1 ; /* bits 1:1 */
    ca_uint32_t bcnt0_init_done      :  1 ; /* bits 2:2 */
    ca_uint32_t bcnt1_init_done      :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_STS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_PCNT                        0xf4302f0c
#define L2TM_L2TE_PM_PCNT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_PRE_MARK_PCNT               0xf4302f10
#define L2TM_L2TE_PM_PRE_MARK_PCNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_PRE_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_POL_DROP_PCNT               0xf4302f14
#define L2TM_L2TE_PM_POL_DROP_PCNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_POL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_TAIL_DROP_PCNT              0xf4302f18
#define L2TM_L2TE_PM_TAIL_DROP_PCNT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_TAIL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_WRED_Y_DROP_PCNT            0xf4302f1c
#define L2TM_L2TE_PM_WRED_Y_DROP_PCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_WRED_Y_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_WRED_G_DROP_PCNT            0xf4302f20
#define L2TM_L2TE_PM_WRED_G_DROP_PCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_WRED_G_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_MARK_PCNT                   0xf4302f24
#define L2TM_L2TE_PM_MARK_PCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_POL_MARK_PCNT               0xf4302f28
#define L2TM_L2TE_PM_POL_MARK_PCNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_POL_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_BYPASS_PCNT                 0xf4302f2c
#define L2TM_L2TE_PM_BYPASS_PCNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_BYPASS_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_BYPASS_FLOW_PCNT            0xf4302f30
#define L2TM_L2TE_PM_BYPASS_FLOW_PCNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_BYPASS_FLOW_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CE_PCNT                     0xf4302f34
#define L2TM_L2TE_PM_CE_PCNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CE_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_ACCESS              0xf4302f38
#define L2TM_L2TE_PM_CNT_MEM_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA8               0xf4302f3c
#define L2TM_L2TE_PM_CNT_MEM_DATA8_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt7                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA7               0xf4302f40
#define L2TM_L2TE_PM_CNT_MEM_DATA7_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt6                 : 12 ; /* bits 11:0 */
    ca_uint32_t cnt7                 : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA6               0xf4302f44
#define L2TM_L2TE_PM_CNT_MEM_DATA6_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt5                 :  8 ; /* bits 7:0 */
    ca_uint32_t cnt6                 : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA5               0xf4302f48
#define L2TM_L2TE_PM_CNT_MEM_DATA5_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt4                 :  4 ; /* bits 3:0 */
    ca_uint32_t cnt5                 : 28 ; /* bits 31:4 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA4               0xf4302f4c
#define L2TM_L2TE_PM_CNT_MEM_DATA4_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt4                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA3               0xf4302f50
#define L2TM_L2TE_PM_CNT_MEM_DATA3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA2               0xf4302f54
#define L2TM_L2TE_PM_CNT_MEM_DATA2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA1               0xf4302f58
#define L2TM_L2TE_PM_CNT_MEM_DATA1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L2TM_L2TE_PM_CNT_MEM_DATA0               0xf4302f5c
#define L2TM_L2TE_PM_CNT_MEM_DATA0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L2TM_L2TE_PM_CNT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_pm */
#ifndef __ASSEMBLER__
typedef struct {
  L2TM_L2TE_PM_CTRL_t                      CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L2TM_L2TE_PM_EVENT_CFG_0_t               EVENT_CFG_0;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L2TM_L2TE_PM_STS_t                       STS;                           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L2TM_L2TE_PM_PCNT_t                      PCNT;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L2TM_L2TE_PM_PRE_MARK_PCNT_t             PRE_MARK_PCNT;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L2TM_L2TE_PM_POL_DROP_PCNT_t             POL_DROP_PCNT;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L2TM_L2TE_PM_TAIL_DROP_PCNT_t            TAIL_DROP_PCNT;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L2TM_L2TE_PM_WRED_Y_DROP_PCNT_t          WRED_Y_DROP_PCNT;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L2TM_L2TE_PM_WRED_G_DROP_PCNT_t          WRED_G_DROP_PCNT;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L2TM_L2TE_PM_MARK_PCNT_t                 MARK_PCNT;                     /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L2TM_L2TE_PM_POL_MARK_PCNT_t             POL_MARK_PCNT;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L2TM_L2TE_PM_BYPASS_PCNT_t               BYPASS_PCNT;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L2TM_L2TE_PM_BYPASS_FLOW_PCNT_t          BYPASS_FLOW_PCNT;              /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L2TM_L2TE_PM_CE_PCNT_t                   CE_PCNT;                       /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L2TM_L2TE_PM_CNT_MEM_ACCESS_t            CNT_MEM_ACCESS;                /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L2TM_L2TE_PM_CNT_MEM_DATA8_t             CNT_MEM_DATA8;                 /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L2TM_L2TE_PM_CNT_MEM_DATA7_t             CNT_MEM_DATA7;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L2TM_L2TE_PM_CNT_MEM_DATA6_t             CNT_MEM_DATA6;                 /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L2TM_L2TE_PM_CNT_MEM_DATA5_t             CNT_MEM_DATA5;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L2TM_L2TE_PM_CNT_MEM_DATA4_t             CNT_MEM_DATA4;                 /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L2TM_L2TE_PM_CNT_MEM_DATA3_t             CNT_MEM_DATA3;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L2TM_L2TE_PM_CNT_MEM_DATA2_t             CNT_MEM_DATA2;                 /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L2TM_L2TE_PM_CNT_MEM_DATA1_t             CNT_MEM_DATA1;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L2TM_L2TE_PM_CNT_MEM_DATA0_t             CNT_MEM_DATA0;                 /* addr: 0x0000005c */
} APB0_L2TM_L2TE_PM_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L2TM */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_L2TM_L2TM_GLB_t              l2tm_glb;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[237];
  APB0_L2TM_L2TM_BM_t               l2tm_bm;                       /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[165];
  APB0_L2TM_L2TM_QM_t               l2tm_qm;                       /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd3[171];
  APB0_L2TM_L2TM_ES_t               l2tm_es;                       /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd4[129];
  APB0_L2TM_L2TE_GLB_t              l2te_glb;                      /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd5[231];
  APB0_L2TM_L2TE_POL_t              l2te_pol;                      /* addr: 0x00000500 */
  ca_uint32_t                              rsrvd6[387];
  APB0_L2TM_L2TE_SHP_t              l2te_shp;                      /* addr: 0x00000700 */
  ca_uint32_t                              rsrvd7[215];
  APB0_L2TM_L2TE_WRED_t             l2te_wred;                     /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd8[227];
  APB0_L2TM_L2TE_FC_GLB_t           l2te_fc_glb;                   /* addr: 0x00000900 */
  ca_uint32_t                              rsrvd9[109];
  APB0_L2TM_L2TE_FC_t               l2te_fc[14];                   /* addr: 0x00000980 */
  APB0_L2TM_L2TE_CB_t               l2te_cb;                       /* addr: 0x00000d00 */
  ca_uint32_t                              rsrvd10[265];
  APB0_L2TM_L2TE_PM_t               l2te_pm;                       /* addr: 0x00000f00 */
} APB0_L2TM_t;
#endif /* !__ASSEMBLER__ */


/*
 * L3FE
 */

/*
 * GLB
 */

#define L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS         0xf4303000
#define L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA           0xf4303004
#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PPPOE_SET            :  1 ; /* bits 0:0 */
    ca_uint32_t PPPOE_VLD            :  1 ; /* bits 1:1 */
    ca_uint32_t PPPOE_SESSION_ID     : 16 ; /* bits 17:2 */
    ca_uint32_t MAC_SA_VLD           :  1 ; /* bits 18:18 */
    ca_uint32_t MAC_SA_AN_SEL        :  4 ; /* bits 22:19 */
    ca_uint32_t PAD_CTRL             :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_EGRESS_L3_IF_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DSCP_MAP_TBL_ACCESS             0xf4303008
#define L3FE_GLB_DSCP_MAP_TBL_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DSCP_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DSCP_MAP_TBL_DATA1              0xf430300c
#define L3FE_GLB_DSCP_MAP_TBL_DATA1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dscp_2_pf1_dscp      :  2 ; /* bits 1:0 */
    ca_uint32_t dscp_2_pf1_cos       :  4 ; /* bits 5:2 */
    ca_uint32_t dscp_2_pf1_pol_id    :  9 ; /* bits 14:6 */
    ca_uint32_t dscp_2_pf1_pol_grp_id :  3 ; /* bits 17:15 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DSCP_MAP_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DSCP_MAP_TBL_DATA0              0xf4303010
#define L3FE_GLB_DSCP_MAP_TBL_DATA0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dscp_2_pf0_dot1p     :  3 ; /* bits 2:0 */
    ca_uint32_t dscp_2_pf0_dscp      :  6 ; /* bits 8:3 */
    ca_uint32_t dscp_2_pf0_cos       :  4 ; /* bits 12:9 */
    ca_uint32_t dscp_2_pf0_pol_id    :  9 ; /* bits 21:13 */
    ca_uint32_t dscp_2_pf0_pol_grp_id :  3 ; /* bits 24:22 */
    ca_uint32_t dscp_2_pf1_dot1p     :  3 ; /* bits 27:25 */
    ca_uint32_t dscp_2_pf1_dscp      :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DSCP_MAP_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_0               0xf4303014
#define L3FE_GLB_DOT1P_MAPPING_0_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_0               0xf4303018
#define L3FE_GLB_DOT1P_MAPPING_1_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_1               0xf430301c
#define L3FE_GLB_DOT1P_MAPPING_0_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_1               0xf4303020
#define L3FE_GLB_DOT1P_MAPPING_1_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_2               0xf4303024
#define L3FE_GLB_DOT1P_MAPPING_0_2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_2               0xf4303028
#define L3FE_GLB_DOT1P_MAPPING_1_2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_3               0xf430302c
#define L3FE_GLB_DOT1P_MAPPING_0_3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_3               0xf4303030
#define L3FE_GLB_DOT1P_MAPPING_1_3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_4               0xf4303034
#define L3FE_GLB_DOT1P_MAPPING_0_4_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_4               0xf4303038
#define L3FE_GLB_DOT1P_MAPPING_1_4_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_5               0xf430303c
#define L3FE_GLB_DOT1P_MAPPING_0_5_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_5               0xf4303040
#define L3FE_GLB_DOT1P_MAPPING_1_5_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_6               0xf4303044
#define L3FE_GLB_DOT1P_MAPPING_0_6_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_6               0xf4303048
#define L3FE_GLB_DOT1P_MAPPING_1_6_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_0_7               0xf430304c
#define L3FE_GLB_DOT1P_MAPPING_0_7_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_0_7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DOT1P_MAPPING_1_7               0xf4303050
#define L3FE_GLB_DOT1P_MAPPING_1_7_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DOT1P_MAPPING_1_7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_0                 0xf4303054
#define L3FE_GLB_COS_MAPPING_0_0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_0                 0xf4303058
#define L3FE_GLB_COS_MAPPING_1_0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_1                 0xf430305c
#define L3FE_GLB_COS_MAPPING_0_1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_1                 0xf4303060
#define L3FE_GLB_COS_MAPPING_1_1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_2                 0xf4303064
#define L3FE_GLB_COS_MAPPING_0_2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_2                 0xf4303068
#define L3FE_GLB_COS_MAPPING_1_2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_3                 0xf430306c
#define L3FE_GLB_COS_MAPPING_0_3_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_3                 0xf4303070
#define L3FE_GLB_COS_MAPPING_1_3_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_4                 0xf4303074
#define L3FE_GLB_COS_MAPPING_0_4_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_4                 0xf4303078
#define L3FE_GLB_COS_MAPPING_1_4_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_5                 0xf430307c
#define L3FE_GLB_COS_MAPPING_0_5_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_5                 0xf4303080
#define L3FE_GLB_COS_MAPPING_1_5_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_6                 0xf4303084
#define L3FE_GLB_COS_MAPPING_0_6_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_6                 0xf4303088
#define L3FE_GLB_COS_MAPPING_1_6_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_0_7                 0xf430308c
#define L3FE_GLB_COS_MAPPING_0_7_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_0_7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_COS_MAPPING_1_7                 0xf4303090
#define L3FE_GLB_COS_MAPPING_1_7_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_COS_MAPPING_1_7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_FWD_CTRL_0                      0xf4303094
#define L3FE_GLB_FWD_CTRL_0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t change_to_llc        :  1 ; /* bits 0:0 */
    ca_uint32_t ipv4_change_ipv6     :  1 ; /* bits 1:1 */
    ca_uint32_t llc_raw8023_change   :  1 ; /* bits 2:2 */
    ca_uint32_t nonip_change_ip      :  1 ; /* bits 3:3 */
    ca_uint32_t nonip_add_pppoe      :  1 ; /* bits 4:4 */
    ca_uint32_t nonl4_change_l4      :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_FWD_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_FWD_CTRL_1                      0xf4303098
#define L3FE_GLB_FWD_CTRL_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t change_to_llc        :  1 ; /* bits 0:0 */
    ca_uint32_t ipv4_change_ipv6     :  1 ; /* bits 1:1 */
    ca_uint32_t llc_raw8023_change   :  1 ; /* bits 2:2 */
    ca_uint32_t nonip_change_ip      :  1 ; /* bits 3:3 */
    ca_uint32_t nonip_add_pppoe      :  1 ; /* bits 4:4 */
    ca_uint32_t nonl4_change_l4      :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_FWD_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_FWD_CTRL_2                      0xf430309c
#define L3FE_GLB_FWD_CTRL_2_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t change_to_llc        :  1 ; /* bits 0:0 */
    ca_uint32_t ipv4_change_ipv6     :  1 ; /* bits 1:1 */
    ca_uint32_t llc_raw8023_change   :  1 ; /* bits 2:2 */
    ca_uint32_t nonip_change_ip      :  1 ; /* bits 3:3 */
    ca_uint32_t nonip_add_pppoe      :  1 ; /* bits 4:4 */
    ca_uint32_t nonl4_change_l4      :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_FWD_CTRL_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_FWD_CTRL_3                      0xf43030a0
#define L3FE_GLB_FWD_CTRL_3_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t change_to_llc        :  1 ; /* bits 0:0 */
    ca_uint32_t ipv4_change_ipv6     :  1 ; /* bits 1:1 */
    ca_uint32_t llc_raw8023_change   :  1 ; /* bits 2:2 */
    ca_uint32_t nonip_change_ip      :  1 ; /* bits 3:3 */
    ca_uint32_t nonip_add_pppoe      :  1 ; /* bits 4:4 */
    ca_uint32_t nonl4_change_l4      :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_FWD_CTRL_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_GLB_CFG                         0xf43030a4
#define L3FE_GLB_GLB_CFG_dft                     0x0001b000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3fe_port_mmship_chk_en :  1 ; /* bits 0:0 */
    ca_uint32_t use_o_lspid_for_mmshp_chk :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t mc_port              :  6 ; /* bits 17:12 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ni_fe_12_bv          :  1 ; /* bits 21:21 */
    ca_uint32_t pl_mode              :  2 ; /* bits 23:22 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t l3fe_pon_mode        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_GLB_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LF_CFG                          0xf43030a8
#define L3FE_GLB_LF_CFG_dft                      0x004641f4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hi_threshold         : 10 ; /* bits 9:0 */
    ca_uint32_t low_threshold        : 10 ; /* bits 19:10 */
    ca_uint32_t wr_fifo_threshold    :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LF_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_TE_OPTION                       0xf43030ac
#define L3FE_GLB_TE_OPTION_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bits                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_TE_OPTION_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_CLS_STG_MONITOR_CTRL            0xf43030b0
#define L3FE_GLB_CLS_STG_MONITOR_CTRL_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_sel              :  8 ; /* bits 7:0 */
    ca_uint32_t enable               :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_CLS_STG_MONITOR_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_CLS_STG_MONITOR_RETURN          0xf43030b4
#define L3FE_GLB_CLS_STG_MONITOR_RETURN_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_CLS_STG_MONITOR_RETURN_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DBG_IDX                         0xf43030b8
#define L3FE_GLB_DBG_IDX_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t idx                  : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DBG_IDX_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_DBG_DAT                         0xf43030bc
#define L3FE_GLB_DBG_DAT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dat                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_DBG_DAT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_L3FE_MONITOR_TRIG               0xf43030c0
#define L3FE_GLB_L3FE_MONITOR_TRIG_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   :  1 ; /* bits 0:0 */
    ca_uint32_t mode                 :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_L3FE_MONITOR_TRIG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_L3FE_MONITOR_CTRL               0xf43030c4
#define L3FE_GLB_L3FE_MONITOR_CTRL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_sel              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_L3FE_MONITOR_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_L3FE_MONITOR_RETURN             0xf43030c8
#define L3FE_GLB_L3FE_MONITOR_RETURN_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_L3FE_MONITOR_RETURN_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_RES_CTRL                        0xf43030cc
#define L3FE_GLB_RES_CTRL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ttl_0_cpu_en         :  1 ; /* bits 0:0 */
    ca_uint32_t ttl_0_cpu_ldpid      :  6 ; /* bits 6:1 */
    ca_uint32_t ttl_0_cpu_deepq      :  1 ; /* bits 7:7 */
    ca_uint32_t ttl_0_cpu_deepq_vld  :  1 ; /* bits 8:8 */
    ca_uint32_t ttl_0_cpu_keep_org_pkt :  1 ; /* bits 9:9 */
    ca_uint32_t ttl_0_cpu_keep_org_pkt_vld :  1 ; /* bits 10:10 */
    ca_uint32_t ttl_0_cpu_ctrl_bypass :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_RES_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty15          0xf43030d0
#define L3FE_GLB_SRAM_TEST_l3fe_empty15_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest15           :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty15_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty14          0xf43030d4
#define L3FE_GLB_SRAM_TEST_l3fe_empty14_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest14           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty14_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty13          0xf43030d8
#define L3FE_GLB_SRAM_TEST_l3fe_empty13_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest13           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty13_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty12          0xf43030dc
#define L3FE_GLB_SRAM_TEST_l3fe_empty12_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest12           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty12_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty11          0xf43030e0
#define L3FE_GLB_SRAM_TEST_l3fe_empty11_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest11           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty11_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty10          0xf43030e4
#define L3FE_GLB_SRAM_TEST_l3fe_empty10_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest10           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty10_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty9           0xf43030e8
#define L3FE_GLB_SRAM_TEST_l3fe_empty9_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest9            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty9_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty8           0xf43030ec
#define L3FE_GLB_SRAM_TEST_l3fe_empty8_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest8            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty8_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty7           0xf43030f0
#define L3FE_GLB_SRAM_TEST_l3fe_empty7_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest7            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty6           0xf43030f4
#define L3FE_GLB_SRAM_TEST_l3fe_empty6_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest6            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty5           0xf43030f8
#define L3FE_GLB_SRAM_TEST_l3fe_empty5_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest5            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty4           0xf43030fc
#define L3FE_GLB_SRAM_TEST_l3fe_empty4_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest4            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty3           0xf4303100
#define L3FE_GLB_SRAM_TEST_l3fe_empty3_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest3            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty2           0xf4303104
#define L3FE_GLB_SRAM_TEST_l3fe_empty2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest2            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty1           0xf4303108
#define L3FE_GLB_SRAM_TEST_l3fe_empty1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest1            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_empty0           0xf430310c
#define L3FE_GLB_SRAM_TEST_l3fe_empty0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_empty0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_LS_l3fe_empty1             0xf4303110
#define L3FE_GLB_SRAM_LS_l3fe_empty1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramls1              : 29 ; /* bits 28:0 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_LS_l3fe_empty1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_LS_l3fe_empty0             0xf4303114
#define L3FE_GLB_SRAM_LS_l3fe_empty0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramls0              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_LS_l3fe_empty0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_mem3             0xf4303118
#define L3FE_GLB_SRAM_TEST_l3fe_mem3_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest3            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_mem3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_mem2             0xf430311c
#define L3FE_GLB_SRAM_TEST_l3fe_mem2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest2            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_mem2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_mem1             0xf4303120
#define L3FE_GLB_SRAM_TEST_l3fe_mem1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest1            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_mem1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_TEST_l3fe_mem0             0xf4303124
#define L3FE_GLB_SRAM_TEST_l3fe_mem0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramtest0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_TEST_l3fe_mem0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_SRAM_LS_l3fe_mem                0xf4303128
#define L3FE_GLB_SRAM_LS_l3fe_mem_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramls               : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_SRAM_LS_l3fe_mem_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_TCP_COS_MOD_0                   0xf430312c
#define L3FE_GLB_TCP_COS_MOD_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag_val             :  6 ; /* bits 5:0 */
    ca_uint32_t cls_hit_en           :  1 ; /* bits 6:6 */
    ca_uint32_t cls_mis_en           :  1 ; /* bits 7:7 */
    ca_uint32_t flag_msk             :  6 ; /* bits 13:8 */
    ca_uint32_t flw_hit_en           :  1 ; /* bits 14:14 */
    ca_uint32_t flw_mis_en           :  1 ; /* bits 15:15 */
    ca_uint32_t pkt_len              : 10 ; /* bits 25:16 */
    ca_uint32_t hit_cos_val          :  3 ; /* bits 28:26 */
    ca_uint32_t mis_cos_val          :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_TCP_COS_MOD_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_TCP_COS_MOD_1                   0xf4303130
#define L3FE_GLB_TCP_COS_MOD_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag_val             :  6 ; /* bits 5:0 */
    ca_uint32_t cls_hit_en           :  1 ; /* bits 6:6 */
    ca_uint32_t cls_mis_en           :  1 ; /* bits 7:7 */
    ca_uint32_t flag_msk             :  6 ; /* bits 13:8 */
    ca_uint32_t flw_hit_en           :  1 ; /* bits 14:14 */
    ca_uint32_t flw_mis_en           :  1 ; /* bits 15:15 */
    ca_uint32_t pkt_len              : 10 ; /* bits 25:16 */
    ca_uint32_t hit_cos_val          :  3 ; /* bits 28:26 */
    ca_uint32_t mis_cos_val          :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_TCP_COS_MOD_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_TCP_COS_MOD_2                   0xf4303134
#define L3FE_GLB_TCP_COS_MOD_2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag_val             :  6 ; /* bits 5:0 */
    ca_uint32_t cls_hit_en           :  1 ; /* bits 6:6 */
    ca_uint32_t cls_mis_en           :  1 ; /* bits 7:7 */
    ca_uint32_t flag_msk             :  6 ; /* bits 13:8 */
    ca_uint32_t flw_hit_en           :  1 ; /* bits 14:14 */
    ca_uint32_t flw_mis_en           :  1 ; /* bits 15:15 */
    ca_uint32_t pkt_len              : 10 ; /* bits 25:16 */
    ca_uint32_t hit_cos_val          :  3 ; /* bits 28:26 */
    ca_uint32_t mis_cos_val          :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_TCP_COS_MOD_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_TCP_COS_MOD_3                   0xf4303138
#define L3FE_GLB_TCP_COS_MOD_3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag_val             :  6 ; /* bits 5:0 */
    ca_uint32_t cls_hit_en           :  1 ; /* bits 6:6 */
    ca_uint32_t cls_mis_en           :  1 ; /* bits 7:7 */
    ca_uint32_t flag_msk             :  6 ; /* bits 13:8 */
    ca_uint32_t flw_hit_en           :  1 ; /* bits 14:14 */
    ca_uint32_t flw_mis_en           :  1 ; /* bits 15:15 */
    ca_uint32_t pkt_len              : 10 ; /* bits 25:16 */
    ca_uint32_t hit_cos_val          :  3 ; /* bits 28:26 */
    ca_uint32_t mis_cos_val          :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_TCP_COS_MOD_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_CTRL                0xf430313c
#define L3FE_GLB_LDPID_REMAP_CTRL_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid_mask           :  8 ; /* bits 7:0 */
    ca_uint32_t ldpid_tuple_mask     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cls_hit_en           :  1 ; /* bits 16:16 */
    ca_uint32_t cls_mis_en           :  1 ; /* bits 17:17 */
    ca_uint32_t flw_hit_en           :  1 ; /* bits 18:18 */
    ca_uint32_t flw_mis_en           :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_SMAC_PRO            0xf4303140
#define L3FE_GLB_LDPID_REMAP_SMAC_PRO_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_SMAC_PRO_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_DMAC_PRO            0xf4303144
#define L3FE_GLB_LDPID_REMAP_DMAC_PRO_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_DMAC_PRO_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_SIP_PRO             0xf4303148
#define L3FE_GLB_LDPID_REMAP_SIP_PRO_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_SIP_PRO_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_DIP_PRO             0xf430314c
#define L3FE_GLB_LDPID_REMAP_DIP_PRO_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_DIP_PRO_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_SPORT_PRO           0xf4303150
#define L3FE_GLB_LDPID_REMAP_SPORT_PRO_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_SPORT_PRO_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_DPORT_PRO           0xf4303154
#define L3FE_GLB_LDPID_REMAP_DPORT_PRO_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_DPORT_PRO_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_VAL0                0xf4303158
#define L3FE_GLB_LDPID_REMAP_VAL0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid_idx0           :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid_idx1           :  3 ; /* bits 5:3 */
    ca_uint32_t ldpid_idx2           :  3 ; /* bits 8:6 */
    ca_uint32_t ldpid_idx3           :  3 ; /* bits 11:9 */
    ca_uint32_t ldpid_idx4           :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ldpid_idx5           :  3 ; /* bits 18:16 */
    ca_uint32_t ldpid_idx6           :  3 ; /* bits 21:19 */
    ca_uint32_t ldpid_idx7           :  3 ; /* bits 24:22 */
    ca_uint32_t ldpid_idx8           :  3 ; /* bits 27:25 */
    ca_uint32_t ldpid_idx9           :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_VAL0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_GLB_LDPID_REMAP_VAL1                0xf430315c
#define L3FE_GLB_LDPID_REMAP_VAL1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid_idx10          :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid_idx11          :  3 ; /* bits 5:3 */
    ca_uint32_t ldpid_idx12          :  3 ; /* bits 8:6 */
    ca_uint32_t ldpid_idx13          :  3 ; /* bits 11:9 */
    ca_uint32_t ldpid_idx14          :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ldpid_idx15          :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_GLB_LDPID_REMAP_VAL1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS_t       EGRESS_L3_IF_TBL_ACCESS;       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_GLB_EGRESS_L3_IF_TBL_DATA_t         EGRESS_L3_IF_TBL_DATA;         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_GLB_DSCP_MAP_TBL_ACCESS_t           DSCP_MAP_TBL_ACCESS;           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L3FE_GLB_DSCP_MAP_TBL_DATA1_t            DSCP_MAP_TBL_DATA1;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L3FE_GLB_DSCP_MAP_TBL_DATA0_t            DSCP_MAP_TBL_DATA0;            /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L3FE_GLB_DOT1P_MAPPING_0_0_t             DOT1P_MAPPING_0_0;             /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L3FE_GLB_DOT1P_MAPPING_1_0_t             DOT1P_MAPPING_1_0;             /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L3FE_GLB_DOT1P_MAPPING_0_1_t             DOT1P_MAPPING_0_1;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L3FE_GLB_DOT1P_MAPPING_1_1_t             DOT1P_MAPPING_1_1;             /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L3FE_GLB_DOT1P_MAPPING_0_2_t             DOT1P_MAPPING_0_2;             /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L3FE_GLB_DOT1P_MAPPING_1_2_t             DOT1P_MAPPING_1_2;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L3FE_GLB_DOT1P_MAPPING_0_3_t             DOT1P_MAPPING_0_3;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L3FE_GLB_DOT1P_MAPPING_1_3_t             DOT1P_MAPPING_1_3;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L3FE_GLB_DOT1P_MAPPING_0_4_t             DOT1P_MAPPING_0_4;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L3FE_GLB_DOT1P_MAPPING_1_4_t             DOT1P_MAPPING_1_4;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L3FE_GLB_DOT1P_MAPPING_0_5_t             DOT1P_MAPPING_0_5;             /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L3FE_GLB_DOT1P_MAPPING_1_5_t             DOT1P_MAPPING_1_5;             /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L3FE_GLB_DOT1P_MAPPING_0_6_t             DOT1P_MAPPING_0_6;             /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L3FE_GLB_DOT1P_MAPPING_1_6_t             DOT1P_MAPPING_1_6;             /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L3FE_GLB_DOT1P_MAPPING_0_7_t             DOT1P_MAPPING_0_7;             /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L3FE_GLB_DOT1P_MAPPING_1_7_t             DOT1P_MAPPING_1_7;             /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L3FE_GLB_COS_MAPPING_0_0_t               COS_MAPPING_0_0;               /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L3FE_GLB_COS_MAPPING_1_0_t               COS_MAPPING_1_0;               /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L3FE_GLB_COS_MAPPING_0_1_t               COS_MAPPING_0_1;               /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L3FE_GLB_COS_MAPPING_1_1_t               COS_MAPPING_1_1;               /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L3FE_GLB_COS_MAPPING_0_2_t               COS_MAPPING_0_2;               /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L3FE_GLB_COS_MAPPING_1_2_t               COS_MAPPING_1_2;               /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L3FE_GLB_COS_MAPPING_0_3_t               COS_MAPPING_0_3;               /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L3FE_GLB_COS_MAPPING_1_3_t               COS_MAPPING_1_3;               /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L3FE_GLB_COS_MAPPING_0_4_t               COS_MAPPING_0_4;               /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L3FE_GLB_COS_MAPPING_1_4_t               COS_MAPPING_1_4;               /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L3FE_GLB_COS_MAPPING_0_5_t               COS_MAPPING_0_5;               /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L3FE_GLB_COS_MAPPING_1_5_t               COS_MAPPING_1_5;               /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L3FE_GLB_COS_MAPPING_0_6_t               COS_MAPPING_0_6;               /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L3FE_GLB_COS_MAPPING_1_6_t               COS_MAPPING_1_6;               /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L3FE_GLB_COS_MAPPING_0_7_t               COS_MAPPING_0_7;               /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  L3FE_GLB_COS_MAPPING_1_7_t               COS_MAPPING_1_7;               /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  L3FE_GLB_FWD_CTRL_0_t                    FWD_CTRL_0;                    /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  L3FE_GLB_FWD_CTRL_1_t                    FWD_CTRL_1;                    /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  L3FE_GLB_FWD_CTRL_2_t                    FWD_CTRL_2;                    /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  L3FE_GLB_FWD_CTRL_3_t                    FWD_CTRL_3;                    /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  L3FE_GLB_GLB_CFG_t                       GLB_CFG;                       /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  L3FE_GLB_LF_CFG_t                        LF_CFG;                        /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  L3FE_GLB_TE_OPTION_t                     TE_OPTION;                     /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  L3FE_GLB_CLS_STG_MONITOR_CTRL_t          CLS_STG_MONITOR_CTRL;          /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  L3FE_GLB_CLS_STG_MONITOR_RETURN_t        CLS_STG_MONITOR_RETURN;        /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  L3FE_GLB_DBG_IDX_t                       DBG_IDX;                       /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  L3FE_GLB_DBG_DAT_t                       DBG_DAT;                       /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  L3FE_GLB_L3FE_MONITOR_TRIG_t             L3FE_MONITOR_TRIG;             /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  L3FE_GLB_L3FE_MONITOR_CTRL_t             L3FE_MONITOR_CTRL;             /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  L3FE_GLB_L3FE_MONITOR_RETURN_t           L3FE_MONITOR_RETURN;           /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  L3FE_GLB_RES_CTRL_t                      RES_CTRL;                      /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty15_t        SRAM_TEST_l3fe_empty15;        /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty14_t        SRAM_TEST_l3fe_empty14;        /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty13_t        SRAM_TEST_l3fe_empty13;        /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty12_t        SRAM_TEST_l3fe_empty12;        /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty11_t        SRAM_TEST_l3fe_empty11;        /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty10_t        SRAM_TEST_l3fe_empty10;        /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty9_t         SRAM_TEST_l3fe_empty9;         /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty8_t         SRAM_TEST_l3fe_empty8;         /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty7_t         SRAM_TEST_l3fe_empty7;         /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty6_t         SRAM_TEST_l3fe_empty6;         /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty5_t         SRAM_TEST_l3fe_empty5;         /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty4_t         SRAM_TEST_l3fe_empty4;         /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty3_t         SRAM_TEST_l3fe_empty3;         /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty2_t         SRAM_TEST_l3fe_empty2;         /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty1_t         SRAM_TEST_l3fe_empty1;         /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  L3FE_GLB_SRAM_TEST_l3fe_empty0_t         SRAM_TEST_l3fe_empty0;         /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  L3FE_GLB_SRAM_LS_l3fe_empty1_t           SRAM_LS_l3fe_empty1;           /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  L3FE_GLB_SRAM_LS_l3fe_empty0_t           SRAM_LS_l3fe_empty0;           /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  L3FE_GLB_SRAM_TEST_l3fe_mem3_t           SRAM_TEST_l3fe_mem3;           /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  L3FE_GLB_SRAM_TEST_l3fe_mem2_t           SRAM_TEST_l3fe_mem2;           /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  L3FE_GLB_SRAM_TEST_l3fe_mem1_t           SRAM_TEST_l3fe_mem1;           /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  L3FE_GLB_SRAM_TEST_l3fe_mem0_t           SRAM_TEST_l3fe_mem0;           /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  L3FE_GLB_SRAM_LS_l3fe_mem_t              SRAM_LS_l3fe_mem;              /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  L3FE_GLB_TCP_COS_MOD_0_t                 TCP_COS_MOD_0;                 /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  L3FE_GLB_TCP_COS_MOD_1_t                 TCP_COS_MOD_1;                 /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  L3FE_GLB_TCP_COS_MOD_2_t                 TCP_COS_MOD_2;                 /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  L3FE_GLB_TCP_COS_MOD_3_t                 TCP_COS_MOD_3;                 /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  L3FE_GLB_LDPID_REMAP_CTRL_t              LDPID_REMAP_CTRL;              /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  L3FE_GLB_LDPID_REMAP_SMAC_PRO_t          LDPID_REMAP_SMAC_PRO;          /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  L3FE_GLB_LDPID_REMAP_DMAC_PRO_t          LDPID_REMAP_DMAC_PRO;          /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  L3FE_GLB_LDPID_REMAP_SIP_PRO_t           LDPID_REMAP_SIP_PRO;           /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  L3FE_GLB_LDPID_REMAP_DIP_PRO_t           LDPID_REMAP_DIP_PRO;           /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  L3FE_GLB_LDPID_REMAP_SPORT_PRO_t         LDPID_REMAP_SPORT_PRO;         /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  L3FE_GLB_LDPID_REMAP_DPORT_PRO_t         LDPID_REMAP_DPORT_PRO;         /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  L3FE_GLB_LDPID_REMAP_VAL0_t              LDPID_REMAP_VAL0;              /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  L3FE_GLB_LDPID_REMAP_VAL1_t              LDPID_REMAP_VAL1;              /* addr: 0x0000015c */
} APB0_L3FE_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * PP
 */

#define L3FE_PP_FIELD_CAM_ACCESS                 0xf4303200
#define L3FE_PP_FIELD_CAM_ACCESS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_FIELD_CAM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_FIELD_CAM_DATA4                  0xf4303204
#define L3FE_PP_FIELD_CAM_DATA4_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_FIELD_CAM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_FIELD_CAM_DATA3                  0xf4303208
#define L3FE_PP_FIELD_CAM_DATA3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_FIELD_CAM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_FIELD_CAM_DATA2                  0xf430320c
#define L3FE_PP_FIELD_CAM_DATA2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_FIELD_CAM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_FIELD_CAM_DATA1                  0xf4303210
#define L3FE_PP_FIELD_CAM_DATA1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_FIELD_CAM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_FIELD_CAM_DATA0                  0xf4303214
#define L3FE_PP_FIELD_CAM_DATA0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_FIELD_CAM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_SPCL_PKT_DETECTION_CFG           0xf4303218
#define L3FE_PP_SPCL_PKT_DETECTION_CFG_dft       0x0739dc24

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t check_arp_target_ip  :  1 ; /* bits 0:0 */
    ca_uint32_t mpcp_opcode_en       :  1 ; /* bits 1:1 */
    ca_uint32_t my_mac_enable        :  1 ; /* bits 2:2 */
    ca_uint32_t type_0_en            :  1 ; /* bits 3:3 */
    ca_uint32_t type_1_en            :  1 ; /* bits 4:4 */
    ca_uint32_t udp_lite_enable      :  1 ; /* bits 5:5 */
    ca_uint32_t user_def_spcl_0_en   :  1 ; /* bits 6:6 */
    ca_uint32_t user_def_spcl_1_en   :  1 ; /* bits 7:7 */
    ca_uint32_t user_def_spcl_2_en   :  1 ; /* bits 8:8 */
    ca_uint32_t user_def_spcl_3_en   :  1 ; /* bits 9:9 */
    ca_uint32_t l2_spcl_hdr_en       :  1 ; /* bits 10:10 */
    ca_uint32_t l3_spcl_hdr_en       :  1 ; /* bits 11:11 */
    ca_uint32_t l4_spcl_hdr_en       :  1 ; /* bits 12:12 */
    ca_uint32_t user_define_hi_pri   :  1 ; /* bits 13:13 */
    ca_uint32_t rdp_v1_detection_en  :  1 ; /* bits 14:14 */
    ca_uint32_t ipv4_chksum_chk_enable :  1 ; /* bits 15:15 */
    ca_uint32_t l4_chksum_chk_enable :  1 ; /* bits 16:16 */
    ca_uint32_t l4_chksum_rh_chk_enable :  1 ; /* bits 17:17 */
    ca_uint32_t chksum_err_drop      :  6 ; /* bits 23:18 */
    ca_uint32_t bpdu_mac_08_en       :  1 ; /* bits 24:24 */
    ca_uint32_t subtype_en           :  1 ; /* bits 25:25 */
    ca_uint32_t rdp_l4_msgs_det_en   :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t drop_udp_ov_ip6_cs_zero_en :  1 ; /* bits 28:28 */
    ca_uint32_t ni2fe_pkt_cnt_wrap_en :  1 ; /* bits 29:29 */
    ca_uint32_t use_mdata_high_6bits_as_spcl_enc :  1 ; /* bits 30:30 */
    ca_uint32_t arp_ipv6_en          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_SPCL_PKT_DETECTION_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_IPNIP_SPCL_PKT_DET_EN            0xf430321c
#define L3FE_PP_IPNIP_SPCL_PKT_DET_EN_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dhcpv4               :  1 ; /* bits 0:0 */
    ca_uint32_t dhcpv6               :  1 ; /* bits 1:1 */
    ca_uint32_t l4ptp                :  1 ; /* bits 2:2 */
    ca_uint32_t dns                  :  1 ; /* bits 3:3 */
    ca_uint32_t rip                  :  1 ; /* bits 4:4 */
    ca_uint32_t ssdp                 :  1 ; /* bits 5:5 */
    ca_uint32_t l4_msgs              :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_IPNIP_SPCL_PKT_DET_EN_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_OFFSET_HDR                       0xf4303220
#define L3FE_PP_OFFSET_HDR_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t offset               :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t l3_prog_offset       :  9 ; /* bits 24:16 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_OFFSET_HDR_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_L7_PROG_OFFSET_HDR_0             0xf4303224
#define L3FE_PP_L7_PROG_OFFSET_HDR_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l7_prog_offset       :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_L7_PROG_OFFSET_HDR_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_L7_PROG_OFFSET_HDR_1             0xf4303228
#define L3FE_PP_L7_PROG_OFFSET_HDR_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l7_prog_offset       :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_L7_PROG_OFFSET_HDR_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_L7_PROG_OFFSET_HDR_2             0xf430322c
#define L3FE_PP_L7_PROG_OFFSET_HDR_2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l7_prog_offset       :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_L7_PROG_OFFSET_HDR_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_L7_PROG_OFFSET_HDR_3             0xf4303230
#define L3FE_PP_L7_PROG_OFFSET_HDR_3_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l7_prog_offset       :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_L7_PROG_OFFSET_HDR_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_LMT                      0xf4303234
#define L3FE_PP_PARSING_LMT_dft                  0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t offset               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_LMT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_STTS_0                   0xf4303238
#define L3FE_PP_PARSING_STTS_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t parsing_err          :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_STTS_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_STTS_1                   0xf430323c
#define L3FE_PP_PARSING_STTS_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t parsing_err          : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_STTS_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_ERR_FWD_0                0xf4303240
#define L3FE_PP_PARSING_ERR_FWD_0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t ipv4_hdr_cs_err      :  2 ; /* bits 11:10 */
    ca_uint32_t pkt_l2_size_err      :  2 ; /* bits 13:12 */
    ca_uint32_t pkt_l3_total_len_err :  2 ; /* bits 15:14 */
    ca_uint32_t ip_hdr_err           :  2 ; /* bits 17:16 */
    ca_uint32_t ipv4_total_len_err   :  2 ; /* bits 19:18 */
    ca_uint32_t tcp_data_offset_err  :  2 ; /* bits 21:20 */
    ca_uint32_t udp_total_len_err    :  2 ; /* bits 23:22 */
    ca_uint32_t udp_lite_cs_cvrg_err :  2 ; /* bits 25:24 */
    ca_uint32_t rdp_hdr_len_err      :  2 ; /* bits 27:26 */
    ca_uint32_t offset_l3_excd_255_err :  2 ; /* bits 29:28 */
    ca_uint32_t offset_l4_excd_255_err :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_ERR_FWD_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_ERR_FWD_1                0xf4303244
#define L3FE_PP_PARSING_ERR_FWD_1_dft            0x00005000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dsl_inner_ip_hdr_cs_err :  2 ; /* bits 1:0 */
    ca_uint32_t pkt_inner_l3_total_len_err :  2 ; /* bits 3:2 */
    ca_uint32_t inner_ip_hdr_err     :  2 ; /* bits 5:4 */
    ca_uint32_t dsl_inner_ipv4_total_len_err :  2 ; /* bits 7:6 */
    ca_uint32_t offset_l3_inner_excd_255_err :  2 ; /* bits 9:8 */
    ca_uint32_t udp_zero_chksum_err  :  2 ; /* bits 11:10 */
    ca_uint32_t more_than_2_vlan_tags_flg :  2 ; /* bits 13:12 */
    ca_uint32_t l2tp_hdr_err         :  2 ; /* bits 15:14 */
    ca_uint32_t rdp_ver_err          :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t parsing_err_trap_pol_id :  9 ; /* bits 27:19 */
    ca_uint32_t parsing_err_trap_pol_grp_id :  3 ; /* bits 30:28 */
    ca_uint32_t parsing_err_trap_pol_en :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_ERR_FWD_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_ERR_TRAP                 0xf4303248
#define L3FE_PP_PARSING_ERR_TRAP_dft             0xfffffa10

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 5:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 8:6 */
    ca_uint32_t keep_orig_pkt        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t t0_ctrl              :  1 ; /* bits 11:11 */
    ca_uint32_t t1_ctrl              :  4 ; /* bits 15:12 */
    ca_uint32_t t2_ctrl              :  4 ; /* bits 19:16 */
    ca_uint32_t t3_ctrl              :  4 ; /* bits 23:20 */
    ca_uint32_t t4_ctrl              :  4 ; /* bits 27:24 */
    ca_uint32_t t5_ctrl              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_ERR_TRAP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PARSING_OVER_VLAN_FWD_CTL        0xf430324c
#define L3FE_PP_PARSING_OVER_VLAN_FWD_CTL_dft    0xfffffa10

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 5:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 8:6 */
    ca_uint32_t keep_orig_pkt        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t t0_ctrl              :  1 ; /* bits 11:11 */
    ca_uint32_t t1_ctrl              :  4 ; /* bits 15:12 */
    ca_uint32_t t2_ctrl              :  4 ; /* bits 19:16 */
    ca_uint32_t t3_ctrl              :  4 ; /* bits 23:20 */
    ca_uint32_t t4_ctrl              :  4 ; /* bits 27:24 */
    ca_uint32_t t5_ctrl              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PARSING_OVER_VLAN_FWD_CTL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_TYPE_0                      0xf4303250
#define L3FE_PP_USER_TYPE_0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_type_0          : 16 ; /* bits 15:0 */
    ca_uint32_t user_type_1          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_TYPE_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_TYPE_1                      0xf4303254
#define L3FE_PP_USER_TYPE_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_type_2          : 16 ; /* bits 15:0 */
    ca_uint32_t user_type_3          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_TYPE_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_0_LOW                   0xf4303258
#define L3FE_PP_USER_MAC_0_LOW_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_0_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_0_HI                    0xf430325c
#define L3FE_PP_USER_MAC_0_HI_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_0           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_0_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_1_LOW                   0xf4303260
#define L3FE_PP_USER_MAC_1_LOW_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_1_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_1_HI                    0xf4303264
#define L3FE_PP_USER_MAC_1_HI_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_1           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_1_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_0_MASK_LOW              0xf4303268
#define L3FE_PP_USER_MAC_0_MASK_LOW_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_mask_0      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_0_MASK_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_0_MASK_HI               0xf430326c
#define L3FE_PP_USER_MAC_0_MASK_HI_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_mask_0      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_0_MASK_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_1_MASK_LOW              0xf4303270
#define L3FE_PP_USER_MAC_1_MASK_LOW_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_mask_1      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_1_MASK_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_USER_MAC_1_MASK_HI               0xf4303274
#define L3FE_PP_USER_MAC_1_MASK_HI_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_mac_mask_1      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_USER_MAC_1_MASK_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_TPID_0                           0xf4303278
#define L3FE_PP_TPID_0_dft                       0x88a88100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid_0               : 16 ; /* bits 15:0 */
    ca_uint32_t tpid_1               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_TPID_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_TPID_1                           0xf430327c
#define L3FE_PP_TPID_1_dft                       0x92009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid_2               : 16 ; /* bits 15:0 */
    ca_uint32_t tpid_3               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_TPID_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_TPID_CTRL                        0xf4303280
#define L3FE_PP_TPID_CTRL_dft                    0x00000077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t top_vlan_en          :  4 ; /* bits 3:0 */
    ca_uint32_t inner_vlan_en        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_TPID_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_ARP_TARGET_IP                    0xf4303284
#define L3FE_PP_ARP_TARGET_IP_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t target_ip            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_ARP_TARGET_IP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_OAM                              0xf4303288
#define L3FE_PP_OAM_dft                          0x00000803

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t subtype              :  8 ; /* bits 7:0 */
    ca_uint32_t mymdlvl              :  3 ; /* bits 10:8 */
    ca_uint32_t mymdlvl_det_en       :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_OAM_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HELLO_MAC_LOW                    0xf430328c
#define L3FE_PP_HELLO_MAC_LOW_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HELLO_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HELLO_MAC_HI                     0xf4303290
#define L3FE_PP_HELLO_MAC_HI_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HELLO_MAC_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_MY_MAC_LOW                       0xf4303294
#define L3FE_PP_MY_MAC_LOW_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mymac                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_MY_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_MY_MAC_HI                        0xf4303298
#define L3FE_PP_MY_MAC_HI_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mymac                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_MY_MAC_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_MC_MAC_HI_RNG                    0xf430329c
#define L3FE_PP_MC_MAC_HI_RNG_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hi_rng_mac_low       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_MC_MAC_HI_RNG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_MC_MAC_LOW_RNG                   0xf43032a0
#define L3FE_PP_MC_MAC_LOW_RNG_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_rng_mac_low      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_MC_MAC_LOW_RNG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_MC_MAC_RNG                       0xf43032a4
#define L3FE_PP_MC_MAC_RNG_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_rng_mac_hi       : 16 ; /* bits 15:0 */
    ca_uint32_t hi_rng_mac_hi        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_MC_MAC_RNG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HTTP_LINK_0                      0xf43032a8
#define L3FE_PP_HTTP_LINK_0_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  3 ; /* bits 19:17 */
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HTTP_LINK_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HTTP_LINK_1                      0xf43032ac
#define L3FE_PP_HTTP_LINK_1_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  3 ; /* bits 19:17 */
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HTTP_LINK_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HTTP_LINK_2                      0xf43032b0
#define L3FE_PP_HTTP_LINK_2_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  3 ; /* bits 19:17 */
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HTTP_LINK_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HTTP_LINK_3                      0xf43032b4
#define L3FE_PP_HTTP_LINK_3_dft                  0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_l4_pid          : 16 ; /* bits 15:0 */
    ca_uint32_t rule_l4_pid_sel      :  1 ; /* bits 16:16 */
    ca_uint32_t rule_l4_type         :  3 ; /* bits 19:17 */
    ca_uint32_t rule_lspid           :  6 ; /* bits 25:20 */
    ca_uint32_t rule_lspid_msk       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rule_vld             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HTTP_LINK_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PINGPONG_STS                     0xf43032b8
#define L3FE_PP_PINGPONG_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PINGPONG_STS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_NI_INTF_ERR_STTS_0               0xf43032bc
#define L3FE_PP_NI_INTF_ERR_STTS_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sop_eop_mismatch     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_NI_INTF_ERR_STTS_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_NI_INTF_ERR_STTS_1               0xf43032c0
#define L3FE_PP_NI_INTF_ERR_STTS_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t runt_l2_pkt          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_NI_INTF_ERR_STTS_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_NI_INTF_STS                      0xf43032c4
#define L3FE_PP_NI_INTF_STS_dft                  0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdy                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_NI_INTF_STS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_NI_INTF_PKT_CNT0                 0xf43032c8
#define L3FE_PP_NI_INTF_PKT_CNT0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sop                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_NI_INTF_PKT_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_NI_INTF_PKT_CNT1                 0xf43032cc
#define L3FE_PP_NI_INTF_PKT_CNT1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eop                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_NI_INTF_PKT_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_L4_CS_ERR                        0xf43032d0
#define L3FE_PP_L4_CS_ERR_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_L4_CS_ERR_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HEADER_A_LOW                     0xf43032d4
#define L3FE_PP_HEADER_A_LOW_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HEADER_A_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HEADER_A_HI                      0xf43032d8
#define L3FE_PP_HEADER_A_HI_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HEADER_A_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HEADER_CPU_LOW                   0xf43032dc
#define L3FE_PP_HEADER_CPU_LOW_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HEADER_CPU_LOW_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_HEADER_CPU_HI                    0xf43032e0
#define L3FE_PP_HEADER_CPU_HI_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_HEADER_CPU_HI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_NI2FE_INTF_FF_STS                0xf43032e4
#define L3FE_PP_NI2FE_INTF_FF_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_NI2FE_INTF_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_ARP_FILTER_MSK                   0xf43032e8
#define L3FE_PP_ARP_FILTER_MSK_dft               0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_ARP_FILTER_MSK_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_0                        0xf43032ec
#define L3FE_PP_DOS_ATK_0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_1                        0xf43032f0
#define L3FE_PP_DOS_ATK_1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_2                        0xf43032f4
#define L3FE_PP_DOS_ATK_2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_3                        0xf43032f8
#define L3FE_PP_DOS_ATK_3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_4                        0xf43032fc
#define L3FE_PP_DOS_ATK_4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_5                        0xf4303300
#define L3FE_PP_DOS_ATK_5_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_6                        0xf4303304
#define L3FE_PP_DOS_ATK_6_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_7                        0xf4303308
#define L3FE_PP_DOS_ATK_7_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_8                        0xf430330c
#define L3FE_PP_DOS_ATK_8_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_8_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_FLOOD_CNT                0xf4303310
#define L3FE_PP_DOS_ATK_FLOOD_CNT_dft            0x000003fa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_FLOOD_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_EVENT_TRAP               0xf4303314
#define L3FE_PP_DOS_ATK_EVENT_TRAP_dft           0xfffffa10

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 5:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 8:6 */
    ca_uint32_t keep_orig_pkt        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t t0_ctrl              :  1 ; /* bits 11:11 */
    ca_uint32_t t1_ctrl              :  4 ; /* bits 15:12 */
    ca_uint32_t t2_ctrl              :  4 ; /* bits 19:16 */
    ca_uint32_t t3_ctrl              :  4 ; /* bits 23:20 */
    ca_uint32_t t4_ctrl              :  4 ; /* bits 27:24 */
    ca_uint32_t t5_ctrl              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_EVENT_TRAP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_DOS_ATK_EVENT_DROP               0xf4303318
#define L3FE_PP_DOS_ATK_EVENT_DROP_dft           0xfffffa1f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdir_ldpid           :  6 ; /* bits 5:0 */
    ca_uint32_t rdir_cos             :  3 ; /* bits 8:6 */
    ca_uint32_t keep_orig_pkt        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t t0_ctrl              :  1 ; /* bits 11:11 */
    ca_uint32_t t1_ctrl              :  4 ; /* bits 15:12 */
    ca_uint32_t t2_ctrl              :  4 ; /* bits 19:16 */
    ca_uint32_t t3_ctrl              :  4 ; /* bits 23:20 */
    ca_uint32_t t4_ctrl              :  4 ; /* bits 27:24 */
    ca_uint32_t t5_ctrl              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_DOS_ATK_EVENT_DROP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_vxlan_dport_01                   0xf430331c
#define L3FE_PP_vxlan_dport_01_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pat0                 : 16 ; /* bits 15:0 */
    ca_uint32_t pat1                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_vxlan_dport_01_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_vxlan_dport_23                   0xf4303320
#define L3FE_PP_vxlan_dport_23_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pat2                 : 16 ; /* bits 15:0 */
    ca_uint32_t pat3                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_vxlan_dport_23_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_vxlan_dport_45                   0xf4303324
#define L3FE_PP_vxlan_dport_45_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pat4                 : 16 ; /* bits 15:0 */
    ca_uint32_t pat5                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_vxlan_dport_45_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_vxlan_dport_67                   0xf4303328
#define L3FE_PP_vxlan_dport_67_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pat6                 : 16 ; /* bits 15:0 */
    ca_uint32_t pat7                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_vxlan_dport_67_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_vxlan_dport_89                   0xf430332c
#define L3FE_PP_vxlan_dport_89_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pat8                 : 16 ; /* bits 15:0 */
    ca_uint32_t pat9                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_vxlan_dport_89_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_l2tp_sport                       0xf4303330
#define L3FE_PP_l2tp_sport_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pat0                 : 16 ; /* bits 15:0 */
    ca_uint32_t pat1                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_l2tp_sport_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_fpga_debug_sel                   0xf4303334
#define L3FE_PP_fpga_debug_sel_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_fpga_debug_sel_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_fpga_debug_data                  0xf4303338
#define L3FE_PP_fpga_debug_data_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_fpga_debug_data_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_SPKTP_ACCESS                     0xf430333c
#define L3FE_PP_SPKTP_ACCESS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_SPKTP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_SPKTP_DATA                       0xf4303340
#define L3FE_PP_SPKTP_DATA_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t encode               :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_SPKTP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_PADDING_ERR_CNT                  0xf4303344
#define L3FE_PP_PADDING_ERR_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t outer_cnt            : 16 ; /* bits 15:0 */
    ca_uint32_t inner_cnt            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_PADDING_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PP_dual_dos_en                      0xf4303348
#define L3FE_PP_dual_dos_en_dft                  0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PP_dual_dos_en_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PP */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_PP_FIELD_CAM_ACCESS_t               FIELD_CAM_ACCESS;              /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_PP_FIELD_CAM_DATA4_t                FIELD_CAM_DATA4;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_PP_FIELD_CAM_DATA3_t                FIELD_CAM_DATA3;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L3FE_PP_FIELD_CAM_DATA2_t                FIELD_CAM_DATA2;               /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L3FE_PP_FIELD_CAM_DATA1_t                FIELD_CAM_DATA1;               /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L3FE_PP_FIELD_CAM_DATA0_t                FIELD_CAM_DATA0;               /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L3FE_PP_SPCL_PKT_DETECTION_CFG_t         SPCL_PKT_DETECTION_CFG;        /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L3FE_PP_IPNIP_SPCL_PKT_DET_EN_t          IPNIP_SPCL_PKT_DET_EN;         /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L3FE_PP_OFFSET_HDR_t                     OFFSET_HDR;                    /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L3FE_PP_L7_PROG_OFFSET_HDR_0_t           L7_PROG_OFFSET_HDR_0;          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L3FE_PP_L7_PROG_OFFSET_HDR_1_t           L7_PROG_OFFSET_HDR_1;          /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L3FE_PP_L7_PROG_OFFSET_HDR_2_t           L7_PROG_OFFSET_HDR_2;          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L3FE_PP_L7_PROG_OFFSET_HDR_3_t           L7_PROG_OFFSET_HDR_3;          /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L3FE_PP_PARSING_LMT_t                    PARSING_LMT;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L3FE_PP_PARSING_STTS_0_t                 PARSING_STTS_0;                /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L3FE_PP_PARSING_STTS_1_t                 PARSING_STTS_1;                /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L3FE_PP_PARSING_ERR_FWD_0_t              PARSING_ERR_FWD_0;             /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L3FE_PP_PARSING_ERR_FWD_1_t              PARSING_ERR_FWD_1;             /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L3FE_PP_PARSING_ERR_TRAP_t               PARSING_ERR_TRAP;              /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L3FE_PP_PARSING_OVER_VLAN_FWD_CTL_t      PARSING_OVER_VLAN_FWD_CTL;     /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L3FE_PP_USER_TYPE_0_t                    USER_TYPE_0;                   /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L3FE_PP_USER_TYPE_1_t                    USER_TYPE_1;                   /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L3FE_PP_USER_MAC_0_LOW_t                 USER_MAC_0_LOW;                /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L3FE_PP_USER_MAC_0_HI_t                  USER_MAC_0_HI;                 /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L3FE_PP_USER_MAC_1_LOW_t                 USER_MAC_1_LOW;                /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L3FE_PP_USER_MAC_1_HI_t                  USER_MAC_1_HI;                 /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L3FE_PP_USER_MAC_0_MASK_LOW_t            USER_MAC_0_MASK_LOW;           /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L3FE_PP_USER_MAC_0_MASK_HI_t             USER_MAC_0_MASK_HI;            /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L3FE_PP_USER_MAC_1_MASK_LOW_t            USER_MAC_1_MASK_LOW;           /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L3FE_PP_USER_MAC_1_MASK_HI_t             USER_MAC_1_MASK_HI;            /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L3FE_PP_TPID_0_t                         TPID_0;                        /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L3FE_PP_TPID_1_t                         TPID_1;                        /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L3FE_PP_TPID_CTRL_t                      TPID_CTRL;                     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L3FE_PP_ARP_TARGET_IP_t                  ARP_TARGET_IP;                 /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L3FE_PP_OAM_t                            OAM;                           /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L3FE_PP_HELLO_MAC_LOW_t                  HELLO_MAC_LOW;                 /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  L3FE_PP_HELLO_MAC_HI_t                   HELLO_MAC_HI;                  /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  L3FE_PP_MY_MAC_LOW_t                     MY_MAC_LOW;                    /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  L3FE_PP_MY_MAC_HI_t                      MY_MAC_HI;                     /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  L3FE_PP_MC_MAC_HI_RNG_t                  MC_MAC_HI_RNG;                 /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  L3FE_PP_MC_MAC_LOW_RNG_t                 MC_MAC_LOW_RNG;                /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  L3FE_PP_MC_MAC_RNG_t                     MC_MAC_RNG;                    /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  L3FE_PP_HTTP_LINK_0_t                    HTTP_LINK_0;                   /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  L3FE_PP_HTTP_LINK_1_t                    HTTP_LINK_1;                   /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  L3FE_PP_HTTP_LINK_2_t                    HTTP_LINK_2;                   /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  L3FE_PP_HTTP_LINK_3_t                    HTTP_LINK_3;                   /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  L3FE_PP_PINGPONG_STS_t                   PINGPONG_STS;                  /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  L3FE_PP_NI_INTF_ERR_STTS_0_t             NI_INTF_ERR_STTS_0;            /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  L3FE_PP_NI_INTF_ERR_STTS_1_t             NI_INTF_ERR_STTS_1;            /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  L3FE_PP_NI_INTF_STS_t                    NI_INTF_STS;                   /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  L3FE_PP_NI_INTF_PKT_CNT0_t               NI_INTF_PKT_CNT0;              /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  L3FE_PP_NI_INTF_PKT_CNT1_t               NI_INTF_PKT_CNT1;              /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  L3FE_PP_L4_CS_ERR_t                      L4_CS_ERR;                     /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  L3FE_PP_HEADER_A_LOW_t                   HEADER_A_LOW;                  /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  L3FE_PP_HEADER_A_HI_t                    HEADER_A_HI;                   /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  L3FE_PP_HEADER_CPU_LOW_t                 HEADER_CPU_LOW;                /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  L3FE_PP_HEADER_CPU_HI_t                  HEADER_CPU_HI;                 /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  L3FE_PP_NI2FE_INTF_FF_STS_t              NI2FE_INTF_FF_STS;             /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  L3FE_PP_ARP_FILTER_MSK_t                 ARP_FILTER_MSK;                /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  L3FE_PP_DOS_ATK_0_t                      DOS_ATK_0;                     /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  L3FE_PP_DOS_ATK_1_t                      DOS_ATK_1;                     /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  L3FE_PP_DOS_ATK_2_t                      DOS_ATK_2;                     /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  L3FE_PP_DOS_ATK_3_t                      DOS_ATK_3;                     /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  L3FE_PP_DOS_ATK_4_t                      DOS_ATK_4;                     /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  L3FE_PP_DOS_ATK_5_t                      DOS_ATK_5;                     /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  L3FE_PP_DOS_ATK_6_t                      DOS_ATK_6;                     /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  L3FE_PP_DOS_ATK_7_t                      DOS_ATK_7;                     /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  L3FE_PP_DOS_ATK_8_t                      DOS_ATK_8;                     /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  L3FE_PP_DOS_ATK_FLOOD_CNT_t              DOS_ATK_FLOOD_CNT;             /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  L3FE_PP_DOS_ATK_EVENT_TRAP_t             DOS_ATK_EVENT_TRAP;            /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  L3FE_PP_DOS_ATK_EVENT_DROP_t             DOS_ATK_EVENT_DROP;            /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  L3FE_PP_vxlan_dport_01_t                 vxlan_dport_01;                /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  L3FE_PP_vxlan_dport_23_t                 vxlan_dport_23;                /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  L3FE_PP_vxlan_dport_45_t                 vxlan_dport_45;                /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  L3FE_PP_vxlan_dport_67_t                 vxlan_dport_67;                /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  L3FE_PP_vxlan_dport_89_t                 vxlan_dport_89;                /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  L3FE_PP_l2tp_sport_t                     l2tp_sport;                    /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  L3FE_PP_fpga_debug_sel_t                 fpga_debug_sel;                /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  L3FE_PP_fpga_debug_data_t                fpga_debug_data;               /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  L3FE_PP_SPKTP_ACCESS_t                   SPKTP_ACCESS;                  /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  L3FE_PP_SPKTP_DATA_t                     SPKTP_DATA;                    /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  L3FE_PP_PADDING_ERR_CNT_t                PADDING_ERR_CNT;               /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  L3FE_PP_dual_dos_en_t                    dual_dos_en;                   /* addr: 0x00000148 */
} APB0_L3FE_PP_t;
#endif /* !__ASSEMBLER__ */


/*
 * CLS
 */

#define L3FE_CLS_KEY_TBL_ACCESS                  0xf4303380
#define L3FE_CLS_KEY_TBL_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA10                  0xf4303384
#define L3FE_CLS_KEY_TBL_DATA10_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 17 ; /* bits 16:0 */
    ca_uint32_t cl_entry_mode        :  1 ; /* bits 17:17 */
    ca_uint32_t cl_pri               :  4 ; /* bits 21:18 */
    ca_uint32_t cl_rslt_type         :  2 ; /* bits 23:22 */
    ca_uint32_t cl_key_type          :  3 ; /* bits 26:24 */
    ca_uint32_t cl_key_valid         :  4 ; /* bits 30:27 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA10_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA9                   0xf4303388
#define L3FE_CLS_KEY_TBL_DATA9_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA9_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA8                   0xf430338c
#define L3FE_CLS_KEY_TBL_DATA8_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA7                   0xf4303390
#define L3FE_CLS_KEY_TBL_DATA7_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA6                   0xf4303394
#define L3FE_CLS_KEY_TBL_DATA6_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA5                   0xf4303398
#define L3FE_CLS_KEY_TBL_DATA5_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA4                   0xf430339c
#define L3FE_CLS_KEY_TBL_DATA4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA3                   0xf43033a0
#define L3FE_CLS_KEY_TBL_DATA3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA2                   0xf43033a4
#define L3FE_CLS_KEY_TBL_DATA2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA1                   0xf43033a8
#define L3FE_CLS_KEY_TBL_DATA1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_KEY_TBL_DATA0                   0xf43033ac
#define L3FE_CLS_KEY_TBL_DATA0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_KEY_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_ACCESS                  0xf43033b0
#define L3FE_CLS_FIB_TBL_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA6                   0xf43033b4
#define L3FE_CLS_FIB_TBL_DATA6_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA5                   0xf43033b8
#define L3FE_CLS_FIB_TBL_DATA5_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA4                   0xf43033bc
#define L3FE_CLS_FIB_TBL_DATA4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA3                   0xf43033c0
#define L3FE_CLS_FIB_TBL_DATA3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA2                   0xf43033c4
#define L3FE_CLS_FIB_TBL_DATA2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA1                   0xf43033c8
#define L3FE_CLS_FIB_TBL_DATA1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_CLS_FIB_TBL_DATA0                   0xf43033cc
#define L3FE_CLS_FIB_TBL_DATA0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cl_entry             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_CLS_FIB_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CLS */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_CLS_KEY_TBL_ACCESS_t                KEY_TBL_ACCESS;                /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_CLS_KEY_TBL_DATA10_t                KEY_TBL_DATA10;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_CLS_KEY_TBL_DATA9_t                 KEY_TBL_DATA9;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L3FE_CLS_KEY_TBL_DATA8_t                 KEY_TBL_DATA8;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L3FE_CLS_KEY_TBL_DATA7_t                 KEY_TBL_DATA7;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L3FE_CLS_KEY_TBL_DATA6_t                 KEY_TBL_DATA6;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L3FE_CLS_KEY_TBL_DATA5_t                 KEY_TBL_DATA5;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L3FE_CLS_KEY_TBL_DATA4_t                 KEY_TBL_DATA4;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L3FE_CLS_KEY_TBL_DATA3_t                 KEY_TBL_DATA3;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L3FE_CLS_KEY_TBL_DATA2_t                 KEY_TBL_DATA2;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L3FE_CLS_KEY_TBL_DATA1_t                 KEY_TBL_DATA1;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L3FE_CLS_KEY_TBL_DATA0_t                 KEY_TBL_DATA0;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L3FE_CLS_FIB_TBL_ACCESS_t                FIB_TBL_ACCESS;                /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L3FE_CLS_FIB_TBL_DATA6_t                 FIB_TBL_DATA6;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L3FE_CLS_FIB_TBL_DATA5_t                 FIB_TBL_DATA5;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L3FE_CLS_FIB_TBL_DATA4_t                 FIB_TBL_DATA4;                 /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L3FE_CLS_FIB_TBL_DATA3_t                 FIB_TBL_DATA3;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L3FE_CLS_FIB_TBL_DATA2_t                 FIB_TBL_DATA2;                 /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L3FE_CLS_FIB_TBL_DATA1_t                 FIB_TBL_DATA1;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L3FE_CLS_FIB_TBL_DATA0_t                 FIB_TBL_DATA0;                 /* addr: 0x0000004c */
} APB0_L3FE_CLS_t;
#endif /* !__ASSEMBLER__ */


/*
 * STG0
 */

#define L3FE_STG0_CTRL                           0xf4303400
#define L3FE_STG0_CTRL_dft                       0x00147c7e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lpb_idx_mode         :  1 ; /* bits 0:0 */
    ca_uint32_t mac_fltr_fail_pkt_mru_chk_en :  1 ; /* bits 1:1 */
    ca_uint32_t mru_chk_fail_pkt_l2_lkup_dis :  1 ; /* bits 2:2 */
    ca_uint32_t other_mac_pkt_keep_lspid_en :  1 ; /* bits 3:3 */
    ca_uint32_t wan_lspid            :  6 ; /* bits 9:4 */
    ca_uint32_t use_lspid_ovwr_o_lspid :  1 ; /* bits 10:10 */
    ca_uint32_t spcl_pkt_keep_old    :  1 ; /* bits 11:11 */
    ca_uint32_t wan_lspid_1          :  6 ; /* bits 17:12 */
    ca_uint32_t msk_my_mac_match_en_for_lspid_upd :  1 ; /* bits 18:18 */
    ca_uint32_t keep_lspid_unchange  :  1 ; /* bits 19:19 */
    ca_uint32_t my_mac_fail_pkt_bypass_cls :  1 ; /* bits 20:20 */
    ca_uint32_t chk_mymac_for_lan    :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LDPID_MAP                      0xf4303404
#define L3FE_STG0_LDPID_MAP_dft                  0x03591807

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rule_0               :  6 ; /* bits 5:0 */
    ca_uint32_t lpb_idx_0            :  2 ; /* bits 7:6 */
    ca_uint32_t rule_1               :  6 ; /* bits 13:8 */
    ca_uint32_t lpb_idx_1            :  2 ; /* bits 15:14 */
    ca_uint32_t rule_2               :  6 ; /* bits 21:16 */
    ca_uint32_t lpb_idx_2            :  2 ; /* bits 23:22 */
    ca_uint32_t lpb_idx_3            :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LDPID_MAP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_LOW_0                  0xf4303408
#define L3FE_STG0_LPB_TBL_LOW_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_LOW_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_MID_0                  0xf430340c
#define L3FE_STG0_LPB_TBL_MID_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_MID_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_HIGH_0                 0xf4303410
#define L3FE_STG0_LPB_TBL_HIGH_0_dft             0x18000190

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_HIGH_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_LOW_1                  0xf4303414
#define L3FE_STG0_LPB_TBL_LOW_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_LOW_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_MID_1                  0xf4303418
#define L3FE_STG0_LPB_TBL_MID_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_MID_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_HIGH_1                 0xf430341c
#define L3FE_STG0_LPB_TBL_HIGH_1_dft             0x19000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_HIGH_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_LOW_2                  0xf4303420
#define L3FE_STG0_LPB_TBL_LOW_2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_LOW_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_MID_2                  0xf4303424
#define L3FE_STG0_LPB_TBL_MID_2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_MID_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_HIGH_2                 0xf4303428
#define L3FE_STG0_LPB_TBL_HIGH_2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_HIGH_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_LOW_3                  0xf430342c
#define L3FE_STG0_LPB_TBL_LOW_3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_LOW_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_MID_3                  0xf4303430
#define L3FE_STG0_LPB_TBL_MID_3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_MID_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_TBL_HIGH_3                 0xf4303434
#define L3FE_STG0_LPB_TBL_HIGH_3_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_TBL_HIGH_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_IDX_TBL_ACCESS             0xf4303438
#define L3FE_STG0_LPB_IDX_TBL_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_IDX_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_LPB_IDX_TBL_DATA               0xf430343c
#define L3FE_STG0_LPB_IDX_TBL_DATA_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t idx                  :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_LPB_IDX_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_SPB_TBL_ACCESS                 0xf4303440
#define L3FE_STG0_SPB_TBL_ACCESS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_SPB_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG0_SPB_TBL_DATA                   0xf4303444
#define L3FE_STG0_SPB_TBL_DATA_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vct                  : 28 ; /* bits 27:0 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG0_SPB_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* STG0 */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_STG0_CTRL_t                         CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_STG0_LDPID_MAP_t                    LDPID_MAP;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_STG0_LPB_TBL_LOW_0_t                LPB_TBL_LOW_0;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L3FE_STG0_LPB_TBL_MID_0_t                LPB_TBL_MID_0;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L3FE_STG0_LPB_TBL_HIGH_0_t               LPB_TBL_HIGH_0;                /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L3FE_STG0_LPB_TBL_LOW_1_t                LPB_TBL_LOW_1;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L3FE_STG0_LPB_TBL_MID_1_t                LPB_TBL_MID_1;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L3FE_STG0_LPB_TBL_HIGH_1_t               LPB_TBL_HIGH_1;                /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L3FE_STG0_LPB_TBL_LOW_2_t                LPB_TBL_LOW_2;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L3FE_STG0_LPB_TBL_MID_2_t                LPB_TBL_MID_2;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L3FE_STG0_LPB_TBL_HIGH_2_t               LPB_TBL_HIGH_2;                /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L3FE_STG0_LPB_TBL_LOW_3_t                LPB_TBL_LOW_3;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L3FE_STG0_LPB_TBL_MID_3_t                LPB_TBL_MID_3;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L3FE_STG0_LPB_TBL_HIGH_3_t               LPB_TBL_HIGH_3;                /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L3FE_STG0_LPB_IDX_TBL_ACCESS_t           LPB_IDX_TBL_ACCESS;            /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L3FE_STG0_LPB_IDX_TBL_DATA_t             LPB_IDX_TBL_DATA;              /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L3FE_STG0_SPB_TBL_ACCESS_t               SPB_TBL_ACCESS;                /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L3FE_STG0_SPB_TBL_DATA_t                 SPB_TBL_DATA;                  /* addr: 0x00000044 */
} APB0_L3FE_STG0_t;
#endif /* !__ASSEMBLER__ */


/*
 * STG1
 */

#define L3FE_STG1_INTF_FF_CTL_REG                0xf4303480
#define L3FE_STG1_INTF_FF_CTL_REG_dft            0x00000032

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_thr              :  4 ; /* bits 3:0 */
    ca_uint32_t high_thr             :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG1_INTF_FF_CTL_REG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG1_INTF_FF_STS_REG                0xf4303484
#define L3FE_STG1_INTF_FF_STS_REG_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl_ind             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG1_INTF_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_STG1_INTF_FF_HDR_CNT                0xf4303488
#define L3FE_STG1_INTF_FF_HDR_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_STG1_INTF_FF_HDR_CNT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* STG1 */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_STG1_INTF_FF_CTL_REG_t              INTF_FF_CTL_REG;               /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_STG1_INTF_FF_STS_REG_t              INTF_FF_STS_REG;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_STG1_INTF_FF_HDR_CNT_t              INTF_FF_HDR_CNT;               /* addr: 0x00000008 */
} APB0_L3FE_STG1_t;
#endif /* !__ASSEMBLER__ */


/*
 * PE
 */

#define L3FE_PE_PPPOE_CFG                        0xf4303500
#define L3FE_PE_PPPOE_CFG_dft                    0x00000011

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sess_ver_type        :  8 ; /* bits 7:0 */
    ca_uint32_t pppoe_code           :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_PPPOE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_PPPOE_PROT_CFG                   0xf4303504
#define L3FE_PE_PPPOE_PROT_CFG_dft               0x00570021

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipv4_protocol        : 16 ; /* bits 15:0 */
    ca_uint32_t ipv6_protocol        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_PPPOE_PROT_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MIB_CFG                          0xf4303508
#define L3FE_PE_MIB_CFG_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter_wrap_around  : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MIB_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_PKT_CLR                 0xf430350c
#define L3FE_PE_DROP_SRC_PKT_CLR_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clear                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_PKT_CLR_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_BYTE_CLR                0xf4303510
#define L3FE_PE_DROP_SRC_BYTE_CLR_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clear                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_BYTE_CLR_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CLR                      0xf4303514
#define L3FE_PE_RX_IFID_CLR_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clear                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CLR_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CLR                      0xf4303518
#define L3FE_PE_TX_IFID_CLR_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clear                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CLR_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_PE_CFG                           0xf430351c
#define L3FE_PE_PE_CFG_dft                       0x80100202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stomp_crc            :  1 ; /* bits 0:0 */
    ca_uint32_t bypass_crc_update    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ignore_tqm_fe_rdy    :  1 ; /* bits 3:3 */
    ca_uint32_t ldpid_base           :  6 ; /* bits 9:4 */
    ca_uint32_t gemid_map            :  1 ; /* bits 10:10 */
    ca_uint32_t dis_rd_add1          :  1 ; /* bits 11:11 */
    ca_uint32_t pad_ctrl             :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t mtu_fail_ldpid       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t mtu_fail_cos         :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t mtu_chk_en           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_PE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_0                       0xf4303520
#define L3FE_PE_MTU_SIZE_0_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_0                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_1                : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_1                       0xf4303524
#define L3FE_PE_MTU_SIZE_1_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_2                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_3                : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_2                       0xf4303528
#define L3FE_PE_MTU_SIZE_2_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_4                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_5                : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_3                       0xf430352c
#define L3FE_PE_MTU_SIZE_3_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_6                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_7                : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_4                       0xf4303530
#define L3FE_PE_MTU_SIZE_4_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_8                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_9                : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_5                       0xf4303534
#define L3FE_PE_MTU_SIZE_5_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_10               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_11               : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_6                       0xf4303538
#define L3FE_PE_MTU_SIZE_6_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_12               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_13               : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MTU_SIZE_7                       0xf430353c
#define L3FE_PE_MTU_SIZE_7_dft                   0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mtu_14               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mtu_15               : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MTU_SIZE_7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MIRROR_CFG                       0xf4303540
#define L3FE_PE_MIRROR_CFG_dft                   0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mirr_fifo_high_threshold :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t mirr_cos             :  3 ; /* bits 18:16 */
    ca_uint32_t mirr_ldpid           :  6 ; /* bits 24:19 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MIRROR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_MIRROR_LEN_CFG                   0xf4303544
#define L3FE_PE_MIRROR_LEN_CFG_dft               0x00000080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mirr_len             : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_MIRROR_LEN_CFG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_ACCESS                  0xf4303548
#define L3FE_PE_DUAL_TBL_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA15                  0xf430354c
#define L3FE_PE_DUAL_TBL_DATA15_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA15_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA14                  0xf4303550
#define L3FE_PE_DUAL_TBL_DATA14_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA14_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA13                  0xf4303554
#define L3FE_PE_DUAL_TBL_DATA13_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA13_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA12                  0xf4303558
#define L3FE_PE_DUAL_TBL_DATA12_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA12_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA11                  0xf430355c
#define L3FE_PE_DUAL_TBL_DATA11_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA11_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA10                  0xf4303560
#define L3FE_PE_DUAL_TBL_DATA10_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA10_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA9                   0xf4303564
#define L3FE_PE_DUAL_TBL_DATA9_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA9_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA8                   0xf4303568
#define L3FE_PE_DUAL_TBL_DATA8_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA7                   0xf430356c
#define L3FE_PE_DUAL_TBL_DATA7_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA6                   0xf4303570
#define L3FE_PE_DUAL_TBL_DATA6_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA5                   0xf4303574
#define L3FE_PE_DUAL_TBL_DATA5_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA4                   0xf4303578
#define L3FE_PE_DUAL_TBL_DATA4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA3                   0xf430357c
#define L3FE_PE_DUAL_TBL_DATA3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA2                   0xf4303580
#define L3FE_PE_DUAL_TBL_DATA2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA1                   0xf4303584
#define L3FE_PE_DUAL_TBL_DATA1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DUAL_TBL_DATA0                   0xf4303588
#define L3FE_PE_DUAL_TBL_DATA0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DUAL_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS      0xf430358c
#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1       0xf4303590
#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0       0xf4303594
#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS     0xf4303598
#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1      0xf430359c
#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0      0xf43035a0
#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_ACCESS           0xf43035a4
#define L3FE_PE_RX_IFID_CNT_TBL_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA7            0xf43035a8
#define L3FE_PE_RX_IFID_CNT_TBL_DATA7_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA6            0xf43035ac
#define L3FE_PE_RX_IFID_CNT_TBL_DATA6_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA5            0xf43035b0
#define L3FE_PE_RX_IFID_CNT_TBL_DATA5_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA4            0xf43035b4
#define L3FE_PE_RX_IFID_CNT_TBL_DATA4_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA3            0xf43035b8
#define L3FE_PE_RX_IFID_CNT_TBL_DATA3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA2            0xf43035bc
#define L3FE_PE_RX_IFID_CNT_TBL_DATA2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA1            0xf43035c0
#define L3FE_PE_RX_IFID_CNT_TBL_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_RX_IFID_CNT_TBL_DATA0            0xf43035c4
#define L3FE_PE_RX_IFID_CNT_TBL_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_RX_IFID_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_ACCESS           0xf43035c8
#define L3FE_PE_TX_IFID_CNT_TBL_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA6            0xf43035cc
#define L3FE_PE_TX_IFID_CNT_TBL_DATA6_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA5            0xf43035d0
#define L3FE_PE_TX_IFID_CNT_TBL_DATA5_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA4            0xf43035d4
#define L3FE_PE_TX_IFID_CNT_TBL_DATA4_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA3            0xf43035d8
#define L3FE_PE_TX_IFID_CNT_TBL_DATA3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA2            0xf43035dc
#define L3FE_PE_TX_IFID_CNT_TBL_DATA2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA1            0xf43035e0
#define L3FE_PE_TX_IFID_CNT_TBL_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_TX_IFID_CNT_TBL_DATA0            0xf43035e4
#define L3FE_PE_TX_IFID_CNT_TBL_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_TX_IFID_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_VXLAN_HASH1                      0xf43035e8
#define L3FE_PE_VXLAN_HASH1_dft                  0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t min_sport            : 16 ; /* bits 15:0 */
    ca_uint32_t max_sport            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_VXLAN_HASH1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_VXLAN_HASH2_SPORT                0xf43035ec
#define L3FE_PE_VXLAN_HASH2_SPORT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptn                  : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_VXLAN_HASH2_SPORT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_VXLAN_HASH2_DPORT                0xf43035f0
#define L3FE_PE_VXLAN_HASH2_DPORT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptn                  : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_VXLAN_HASH2_DPORT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_VXLAN_HASH2_SIP                  0xf43035f4
#define L3FE_PE_VXLAN_HASH2_SIP_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptn                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_VXLAN_HASH2_SIP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_VXLAN_HASH2_DIP                  0xf43035f8
#define L3FE_PE_VXLAN_HASH2_DIP_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptn                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_VXLAN_HASH2_DIP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK0_                        0xf43035fc
#define L3FE_PE_GRE_ACK0__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK0__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK1_                        0xf4303600
#define L3FE_PE_GRE_ACK1__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK1__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK2_                        0xf4303604
#define L3FE_PE_GRE_ACK2__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK2__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK3_                        0xf4303608
#define L3FE_PE_GRE_ACK3__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK3__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK4_                        0xf430360c
#define L3FE_PE_GRE_ACK4__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK4__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK5_                        0xf4303610
#define L3FE_PE_GRE_ACK5__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK5__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK6_                        0xf4303614
#define L3FE_PE_GRE_ACK6__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK6__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK7_                        0xf4303618
#define L3FE_PE_GRE_ACK7__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK7__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK8_                        0xf430361c
#define L3FE_PE_GRE_ACK8__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK8__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK9_                        0xf4303620
#define L3FE_PE_GRE_ACK9__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK9__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK10_                       0xf4303624
#define L3FE_PE_GRE_ACK10__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK10__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK11_                       0xf4303628
#define L3FE_PE_GRE_ACK11__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK11__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK12_                       0xf430362c
#define L3FE_PE_GRE_ACK12__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK12__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK13_                       0xf4303630
#define L3FE_PE_GRE_ACK13__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK13__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK14_                       0xf4303634
#define L3FE_PE_GRE_ACK14__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK14__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_ACK15_                       0xf4303638
#define L3FE_PE_GRE_ACK15__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_ACK15__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ0_                        0xf430363c
#define L3FE_PE_GRE_SEQ0__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ0__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ1_                        0xf4303640
#define L3FE_PE_GRE_SEQ1__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ1__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ2_                        0xf4303644
#define L3FE_PE_GRE_SEQ2__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ2__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ3_                        0xf4303648
#define L3FE_PE_GRE_SEQ3__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ3__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ4_                        0xf430364c
#define L3FE_PE_GRE_SEQ4__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ4__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ5_                        0xf4303650
#define L3FE_PE_GRE_SEQ5__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ5__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ6_                        0xf4303654
#define L3FE_PE_GRE_SEQ6__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ6__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ7_                        0xf4303658
#define L3FE_PE_GRE_SEQ7__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ7__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ8_                        0xf430365c
#define L3FE_PE_GRE_SEQ8__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ8__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ9_                        0xf4303660
#define L3FE_PE_GRE_SEQ9__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ9__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ10_                       0xf4303664
#define L3FE_PE_GRE_SEQ10__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ10__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ11_                       0xf4303668
#define L3FE_PE_GRE_SEQ11__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ11__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ12_                       0xf430366c
#define L3FE_PE_GRE_SEQ12__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ12__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ13_                       0xf4303670
#define L3FE_PE_GRE_SEQ13__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ13__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ14_                       0xf4303674
#define L3FE_PE_GRE_SEQ14__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ14__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_GRE_SEQ15_                       0xf4303678
#define L3FE_PE_GRE_SEQ15__dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_GRE_SEQ15__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID0_                         0xf430367c
#define L3FE_PE_IP4_ID0__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID0__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID1_                         0xf4303680
#define L3FE_PE_IP4_ID1__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID1__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID2_                         0xf4303684
#define L3FE_PE_IP4_ID2__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID2__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID3_                         0xf4303688
#define L3FE_PE_IP4_ID3__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID3__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID4_                         0xf430368c
#define L3FE_PE_IP4_ID4__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID4__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID5_                         0xf4303690
#define L3FE_PE_IP4_ID5__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID5__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID6_                         0xf4303694
#define L3FE_PE_IP4_ID6__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID6__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID7_                         0xf4303698
#define L3FE_PE_IP4_ID7__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID7__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID8_                         0xf430369c
#define L3FE_PE_IP4_ID8__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID8__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID9_                         0xf43036a0
#define L3FE_PE_IP4_ID9__dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID9__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID10_                        0xf43036a4
#define L3FE_PE_IP4_ID10__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID10__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID11_                        0xf43036a8
#define L3FE_PE_IP4_ID11__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID11__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID12_                        0xf43036ac
#define L3FE_PE_IP4_ID12__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID12__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID13_                        0xf43036b0
#define L3FE_PE_IP4_ID13__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID13__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID14_                        0xf43036b4
#define L3FE_PE_IP4_ID14__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID14__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_IP4_ID15_                        0xf43036b8
#define L3FE_PE_IP4_ID15__dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_IP4_ID15__t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_SOP_CNT                          0xf43036bc
#define L3FE_PE_SOP_CNT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_SOP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_EOP_CNT                          0xf43036c0
#define L3FE_PE_EOP_CNT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_EOP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_BYTE_CNT1                        0xf43036c4
#define L3FE_PE_BYTE_CNT1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_BYTE_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_BYTE_CNT0                        0xf43036c8
#define L3FE_PE_BYTE_CNT0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_BYTE_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_PE_ERR_CNT                          0xf43036cc
#define L3FE_PE_ERR_CNT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t len_err              :  8 ; /* bits 7:0 */
    ca_uint32_t sop_eop_err          :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_PE_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_PE_PPPOE_CFG_t                      PPPOE_CFG;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_PE_PPPOE_PROT_CFG_t                 PPPOE_PROT_CFG;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_PE_MIB_CFG_t                        MIB_CFG;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L3FE_PE_DROP_SRC_PKT_CLR_t               DROP_SRC_PKT_CLR;              /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  L3FE_PE_DROP_SRC_BYTE_CLR_t              DROP_SRC_BYTE_CLR;             /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  L3FE_PE_RX_IFID_CLR_t                    RX_IFID_CLR;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  L3FE_PE_TX_IFID_CLR_t                    TX_IFID_CLR;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  L3FE_PE_PE_CFG_t                         PE_CFG;                        /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  L3FE_PE_MTU_SIZE_0_t                     MTU_SIZE_0;                    /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  L3FE_PE_MTU_SIZE_1_t                     MTU_SIZE_1;                    /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  L3FE_PE_MTU_SIZE_2_t                     MTU_SIZE_2;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  L3FE_PE_MTU_SIZE_3_t                     MTU_SIZE_3;                    /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  L3FE_PE_MTU_SIZE_4_t                     MTU_SIZE_4;                    /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  L3FE_PE_MTU_SIZE_5_t                     MTU_SIZE_5;                    /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  L3FE_PE_MTU_SIZE_6_t                     MTU_SIZE_6;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  L3FE_PE_MTU_SIZE_7_t                     MTU_SIZE_7;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  L3FE_PE_MIRROR_CFG_t                     MIRROR_CFG;                    /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  L3FE_PE_MIRROR_LEN_CFG_t                 MIRROR_LEN_CFG;                /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  L3FE_PE_DUAL_TBL_ACCESS_t                DUAL_TBL_ACCESS;               /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  L3FE_PE_DUAL_TBL_DATA15_t                DUAL_TBL_DATA15;               /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  L3FE_PE_DUAL_TBL_DATA14_t                DUAL_TBL_DATA14;               /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  L3FE_PE_DUAL_TBL_DATA13_t                DUAL_TBL_DATA13;               /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  L3FE_PE_DUAL_TBL_DATA12_t                DUAL_TBL_DATA12;               /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  L3FE_PE_DUAL_TBL_DATA11_t                DUAL_TBL_DATA11;               /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  L3FE_PE_DUAL_TBL_DATA10_t                DUAL_TBL_DATA10;               /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  L3FE_PE_DUAL_TBL_DATA9_t                 DUAL_TBL_DATA9;                /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  L3FE_PE_DUAL_TBL_DATA8_t                 DUAL_TBL_DATA8;                /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  L3FE_PE_DUAL_TBL_DATA7_t                 DUAL_TBL_DATA7;                /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  L3FE_PE_DUAL_TBL_DATA6_t                 DUAL_TBL_DATA6;                /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  L3FE_PE_DUAL_TBL_DATA5_t                 DUAL_TBL_DATA5;                /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  L3FE_PE_DUAL_TBL_DATA4_t                 DUAL_TBL_DATA4;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  L3FE_PE_DUAL_TBL_DATA3_t                 DUAL_TBL_DATA3;                /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  L3FE_PE_DUAL_TBL_DATA2_t                 DUAL_TBL_DATA2;                /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  L3FE_PE_DUAL_TBL_DATA1_t                 DUAL_TBL_DATA1;                /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  L3FE_PE_DUAL_TBL_DATA0_t                 DUAL_TBL_DATA0;                /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS_t    DROP_SRC_PKT_CNT_TBL_ACCESS;   /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1_t     DROP_SRC_PKT_CNT_TBL_DATA1;    /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0_t     DROP_SRC_PKT_CNT_TBL_DATA0;    /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS_t   DROP_SRC_BYTE_CNT_TBL_ACCESS;  /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1_t    DROP_SRC_BYTE_CNT_TBL_DATA1;   /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0_t    DROP_SRC_BYTE_CNT_TBL_DATA0;   /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  L3FE_PE_RX_IFID_CNT_TBL_ACCESS_t         RX_IFID_CNT_TBL_ACCESS;        /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA7_t          RX_IFID_CNT_TBL_DATA7;         /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA6_t          RX_IFID_CNT_TBL_DATA6;         /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA5_t          RX_IFID_CNT_TBL_DATA5;         /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA4_t          RX_IFID_CNT_TBL_DATA4;         /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA3_t          RX_IFID_CNT_TBL_DATA3;         /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA2_t          RX_IFID_CNT_TBL_DATA2;         /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA1_t          RX_IFID_CNT_TBL_DATA1;         /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  L3FE_PE_RX_IFID_CNT_TBL_DATA0_t          RX_IFID_CNT_TBL_DATA0;         /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  L3FE_PE_TX_IFID_CNT_TBL_ACCESS_t         TX_IFID_CNT_TBL_ACCESS;        /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA6_t          TX_IFID_CNT_TBL_DATA6;         /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA5_t          TX_IFID_CNT_TBL_DATA5;         /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA4_t          TX_IFID_CNT_TBL_DATA4;         /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA3_t          TX_IFID_CNT_TBL_DATA3;         /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA2_t          TX_IFID_CNT_TBL_DATA2;         /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA1_t          TX_IFID_CNT_TBL_DATA1;         /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  L3FE_PE_TX_IFID_CNT_TBL_DATA0_t          TX_IFID_CNT_TBL_DATA0;         /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  L3FE_PE_VXLAN_HASH1_t                    VXLAN_HASH1;                   /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  L3FE_PE_VXLAN_HASH2_SPORT_t              VXLAN_HASH2_SPORT;             /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  L3FE_PE_VXLAN_HASH2_DPORT_t              VXLAN_HASH2_DPORT;             /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  L3FE_PE_VXLAN_HASH2_SIP_t                VXLAN_HASH2_SIP;               /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  L3FE_PE_VXLAN_HASH2_DIP_t                VXLAN_HASH2_DIP;               /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  L3FE_PE_GRE_ACK0__t                      GRE_ACK0_;                     /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  L3FE_PE_GRE_ACK1__t                      GRE_ACK1_;                     /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  L3FE_PE_GRE_ACK2__t                      GRE_ACK2_;                     /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  L3FE_PE_GRE_ACK3__t                      GRE_ACK3_;                     /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  L3FE_PE_GRE_ACK4__t                      GRE_ACK4_;                     /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  L3FE_PE_GRE_ACK5__t                      GRE_ACK5_;                     /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  L3FE_PE_GRE_ACK6__t                      GRE_ACK6_;                     /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  L3FE_PE_GRE_ACK7__t                      GRE_ACK7_;                     /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  L3FE_PE_GRE_ACK8__t                      GRE_ACK8_;                     /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  L3FE_PE_GRE_ACK9__t                      GRE_ACK9_;                     /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  L3FE_PE_GRE_ACK10__t                     GRE_ACK10_;                    /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  L3FE_PE_GRE_ACK11__t                     GRE_ACK11_;                    /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  L3FE_PE_GRE_ACK12__t                     GRE_ACK12_;                    /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  L3FE_PE_GRE_ACK13__t                     GRE_ACK13_;                    /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  L3FE_PE_GRE_ACK14__t                     GRE_ACK14_;                    /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  L3FE_PE_GRE_ACK15__t                     GRE_ACK15_;                    /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  L3FE_PE_GRE_SEQ0__t                      GRE_SEQ0_;                     /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  L3FE_PE_GRE_SEQ1__t                      GRE_SEQ1_;                     /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  L3FE_PE_GRE_SEQ2__t                      GRE_SEQ2_;                     /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  L3FE_PE_GRE_SEQ3__t                      GRE_SEQ3_;                     /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  L3FE_PE_GRE_SEQ4__t                      GRE_SEQ4_;                     /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  L3FE_PE_GRE_SEQ5__t                      GRE_SEQ5_;                     /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  L3FE_PE_GRE_SEQ6__t                      GRE_SEQ6_;                     /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  L3FE_PE_GRE_SEQ7__t                      GRE_SEQ7_;                     /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  L3FE_PE_GRE_SEQ8__t                      GRE_SEQ8_;                     /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  L3FE_PE_GRE_SEQ9__t                      GRE_SEQ9_;                     /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  L3FE_PE_GRE_SEQ10__t                     GRE_SEQ10_;                    /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  L3FE_PE_GRE_SEQ11__t                     GRE_SEQ11_;                    /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  L3FE_PE_GRE_SEQ12__t                     GRE_SEQ12_;                    /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  L3FE_PE_GRE_SEQ13__t                     GRE_SEQ13_;                    /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  L3FE_PE_GRE_SEQ14__t                     GRE_SEQ14_;                    /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  L3FE_PE_GRE_SEQ15__t                     GRE_SEQ15_;                    /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  L3FE_PE_IP4_ID0__t                       IP4_ID0_;                      /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  L3FE_PE_IP4_ID1__t                       IP4_ID1_;                      /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  L3FE_PE_IP4_ID2__t                       IP4_ID2_;                      /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  L3FE_PE_IP4_ID3__t                       IP4_ID3_;                      /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  L3FE_PE_IP4_ID4__t                       IP4_ID4_;                      /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  L3FE_PE_IP4_ID5__t                       IP4_ID5_;                      /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  L3FE_PE_IP4_ID6__t                       IP4_ID6_;                      /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  L3FE_PE_IP4_ID7__t                       IP4_ID7_;                      /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  L3FE_PE_IP4_ID8__t                       IP4_ID8_;                      /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  L3FE_PE_IP4_ID9__t                       IP4_ID9_;                      /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  L3FE_PE_IP4_ID10__t                      IP4_ID10_;                     /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  L3FE_PE_IP4_ID11__t                      IP4_ID11_;                     /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  L3FE_PE_IP4_ID12__t                      IP4_ID12_;                     /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  L3FE_PE_IP4_ID13__t                      IP4_ID13_;                     /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  L3FE_PE_IP4_ID14__t                      IP4_ID14_;                     /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  L3FE_PE_IP4_ID15__t                      IP4_ID15_;                     /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  L3FE_PE_SOP_CNT_t                        SOP_CNT;                       /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  L3FE_PE_EOP_CNT_t                        EOP_CNT;                       /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  L3FE_PE_BYTE_CNT1_t                      BYTE_CNT1;                     /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  L3FE_PE_BYTE_CNT0_t                      BYTE_CNT0;                     /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  L3FE_PE_ERR_CNT_t                        ERR_CNT;                       /* addr: 0x000001cc */
} APB0_L3FE_PE_t;
#endif /* !__ASSEMBLER__ */


/*
 * FE_L3E_HS
 */

#define L3FE_FE_L3E_HS_PROFILE0_INI              0xf4303700
#define L3FE_FE_L3E_HS_PROFILE0_INI_STRIDE       44
#define L3FE_FE_L3E_HS_PROFILE0_INI_COUNT        7
#define L3FE_FE_L3E_HS_PROFILE0_INI_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpl_num              :  4 ; /* bits 3:0 */
    ca_uint32_t default_sel_0e       :  5 ; /* bits 8:4 */
    ca_uint32_t default_sel_0a       :  5 ; /* bits 13:9 */
    ca_uint32_t default_sel_1e       :  5 ; /* bits 18:14 */
    ca_uint32_t default_sel_1a       :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PROFILE0_INI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0           0xf4303704
#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0_STRIDE    44
#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0_COUNT     7
#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t maskptr              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t pri                  :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t type                 :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PROFILE0_TUPLE0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION     0xf4303724
#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_STRIDE 44
#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_COUNT 7
#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t a_mask               : 25 ; /* bits 24:0 */
    ca_uint32_t fetch_sz             :  3 ; /* bits 27:25 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_HASH_INI                  0xf4303834
#define L3FE_FE_L3E_HS_HASH_INI_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hb_size              :  2 ; /* bits 1:0 */
    ca_uint32_t ht_size              :  3 ; /* bits 4:2 */
    ca_uint32_t ha_width             :  3 ; /* bits 7:5 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t def_reg              :  1 ; /* bits 16:16 */
    ca_uint32_t crc_ntfy_en          :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_HASH_INI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_MH1                    0xf4303838
#define L3FE_FE_L3E_HS_BA_MH1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba1                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_MH1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_MH0                    0xf430383c
#define L3FE_FE_L3E_HS_BA_MH0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ba0                  : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_MH0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_MA1                    0xf4303840
#define L3FE_FE_L3E_HS_BA_MA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba1                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_MA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_MA0                    0xf4303844
#define L3FE_FE_L3E_HS_BA_MA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ba0                  : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_MA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_OVERFLOW_INI              0xf4303848
#define L3FE_FE_L3E_HS_OVERFLOW_INI_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t oa_width             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_OVERFLOW_INI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_OA1                    0xf430384c
#define L3FE_FE_L3E_HS_BA_OA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba1                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_OA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_OA0                    0xf4303850
#define L3FE_FE_L3E_HS_BA_OA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ba0                  : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_OA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEFAULT_INI               0xf4303854
#define L3FE_FE_L3E_HS_DEFAULT_INI_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t da_width             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEFAULT_INI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_DA1                    0xf4303858
#define L3FE_FE_L3E_HS_BA_DA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba1                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_DA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_DA0                    0xf430385c
#define L3FE_FE_L3E_HS_BA_DA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ba0                  : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_DA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0          0xf4303860
#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0_STRIDE   4
#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0_COUNT    16
#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t a_mask               : 25 ; /* bits 24:0 */
    ca_uint32_t fetch_sz             :  3 ; /* bits 27:25 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEFAULT_ACTION_0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_INI                 0xf43038a0
#define L3FE_FE_L3E_HS_CACHE_INI_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ct_size              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t ca_width             :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t fib_sram             :  1 ; /* bits 16:16 */
    ca_uint32_t cache_half           :  1 ; /* bits 17:17 */
    ca_uint32_t cache_age0_hit       :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_INI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_CA1                    0xf43038a4
#define L3FE_FE_L3E_HS_BA_CA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba1                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_CA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_BA_CA0                    0xf43038a8
#define L3FE_FE_L3E_HS_BA_CA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ba0                  : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_BA_CA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_CTRL                0xf43038ac
#define L3FE_FE_L3E_HS_CACHE_CTRL_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slot                 :  5 ; /* bits 4:0 */
    ca_uint32_t crc16                : 16 ; /* bits 20:5 */
    ca_uint32_t aqm_prot             :  2 ; /* bits 22:21 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t loc                  :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t age                  :  2 ; /* bits 27:26 */
    ca_uint32_t pri                  :  2 ; /* bits 29:28 */
    ca_uint32_t cmd                  :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_CTRL_REQ            0xf43038b0
#define L3FE_FE_L3E_HS_CACHE_CTRL_REQ_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req_sts              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_CTRL_REQ_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_CTRL_STS            0xf43038b4
#define L3FE_FE_L3E_HS_CACHE_CTRL_STS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bsy                  :  1 ; /* bits 0:0 */
    ca_uint32_t err_hash             :  1 ; /* bits 1:1 */
    ca_uint32_t err_free             :  1 ; /* bits 2:2 */
    ca_uint32_t err_nch              :  1 ; /* bits 3:3 */
    ca_uint32_t sts_match            :  1 ; /* bits 4:4 */
    ca_uint32_t sts_match_loc        :  1 ; /* bits 5:5 */
    ca_uint32_t sts_evict            :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_CTRL_STS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_AGE10               0xf43038b8
#define L3FE_FE_L3E_HS_CACHE_AGE10_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ut_t0                : 16 ; /* bits 15:0 */
    ca_uint32_t ut_t1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_AGE10_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_AGE32               0xf43038bc
#define L3FE_FE_L3E_HS_CACHE_AGE32_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ut_t2                : 16 ; /* bits 15:0 */
    ca_uint32_t ut_t3                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_AGE32_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_CNT                 0xf43038c0
#define L3FE_FE_L3E_HS_CACHE_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ut_cnt               : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_CNT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_MISC                0xf43038c4
#define L3FE_FE_L3E_HS_CACHE_MISC_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t s2_ra_en             :  1 ; /* bits 26:26 */
    ca_uint32_t s2_ra_pri            :  2 ; /* bits 28:27 */
    ca_uint32_t crep_en              :  1 ; /* bits 29:29 */
    ca_uint32_t s3_loc_n             :  1 ; /* bits 30:30 */
    ca_uint32_t s3_ra_en             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_MISC_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_AXI_CTRL_1                0xf43038c8
#define L3FE_FE_L3E_HS_AXI_CTRL_1_STRIDE         4
#define L3FE_FE_L3E_HS_AXI_CTRL_1_COUNT          4
#define L3FE_FE_L3E_HS_AXI_CTRL_1_dft            0x02000f00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user                 : 25 ; /* bits 24:0 */
    ca_uint32_t id                   :  4 ; /* bits 28:25 */
    ca_uint32_t ace                  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_AXI_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_SWO_IDX                   0xf43038d8
#define L3FE_FE_L3E_HS_SWO_IDX_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t idx                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_SWO_IDX_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_SWO_DAT                   0xf43038dc
#define L3FE_FE_L3E_HS_SWO_DAT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dat                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_SWO_DAT_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_SWO_CTRL                  0xf43038e0
#define L3FE_FE_L3E_HS_SWO_CTRL_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cmd_sts              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_SWO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_ACCESS         0xf43038e4
#define L3FE_FE_L3E_HS_CACHE_HASH_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 17 ;
    ca_uint32_t r0w1                 :  1 ; /* bits 30:30 */
    ca_uint32_t status               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA6          0xf43038e8
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA6_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA5          0xf43038ec
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA5_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA4          0xf43038f0
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA4_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA3          0xf43038f4
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA3_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA2          0xf43038f8
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA1          0xf43038fc
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crc16                : 13 ; /* bits 12:0 */
    ca_uint32_t slot                 :  5 ; /* bits 17:13 */
    ca_uint32_t location             :  1 ; /* bits 18:18 */
    ca_uint32_t pri                  :  2 ; /* bits 20:19 */
    ca_uint32_t age                  :  2 ; /* bits 22:21 */
    ca_uint32_t fib                  :  9 ; /* bits 31:23 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CACHE_HASH_DATA0          0xf4303900
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crc32                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS      0xf4303904
#define L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t r0w1                 :  1 ; /* bits 30:30 */
    ca_uint32_t status               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1       0xf4303908
#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crc16                : 16 ; /* bits 15:0 */
    ca_uint32_t profile              :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0       0xf430390c
#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crc32                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_MASK_MEM_ACCESS           0xf4303910
#define L3FE_FE_L3E_HS_MASK_MEM_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t r0w1                 :  1 ; /* bits 30:30 */
    ca_uint32_t status               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_MASK_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_MASK_MEM_MASK3            0xf4303914
#define L3FE_FE_L3E_HS_MASK_MEM_MASK3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_MASK_MEM_MASK3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_MASK_MEM_MASK2            0xf4303918
#define L3FE_FE_L3E_HS_MASK_MEM_MASK2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_MASK_MEM_MASK2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_MASK_MEM_MASK1            0xf430391c
#define L3FE_FE_L3E_HS_MASK_MEM_MASK1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_MASK_MEM_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_MASK_MEM_MASK0            0xf4303920
#define L3FE_FE_L3E_HS_MASK_MEM_MASK0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_MASK_MEM_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_AGING_GRANULARITY         0xf4303924
#define L3FE_FE_L3E_HS_AGING_GRANULARITY_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timer                : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_AGING_GRANULARITY_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS       0xf4303928
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t r0w1                 :  1 ; /* bits 30:30 */
    ca_uint32_t age                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3        0xf430392c
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2        0xf4303930
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1        0xf4303934
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0        0xf4303938
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_MEM_INI                   0xf430393c
#define L3FE_FE_L3E_HS_MEM_INI_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req_sts              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_MEM_INI_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_CHK_FAIL_CTRL             0xf4303940
#define L3FE_FE_L3E_HS_CHK_FAIL_CTRL_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type0                :  8 ; /* bits 7:0 */
    ca_uint32_t type1                :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_CHK_FAIL_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_RSV0                      0xf4303944
#define L3FE_FE_L3E_HS_RSV0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsv                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_RSV0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_RSV1                      0xf4303948
#define L3FE_FE_L3E_HS_RSV1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsv                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_RSV1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PF_0_KEY                  0xf430394c
#define L3FE_FE_L3E_HS_PF_0_KEY_STRIDE           20
#define L3FE_FE_L3E_HS_PF_0_KEY_COUNT            7
#define L3FE_FE_L3E_HS_PF_0_KEY_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  6 ; /* bits 5:0 */
    ca_uint32_t crc32_sel            :  2 ; /* bits 7:6 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PF_0_KEY_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PF_0_TPL_SP               0xf4303950
#define L3FE_FE_L3E_HS_PF_0_TPL_SP_STRIDE        20
#define L3FE_FE_L3E_HS_PF_0_TPL_SP_COUNT         7
#define L3FE_FE_L3E_HS_PF_0_TPL_SP_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PF_0_TPL_SP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PF_0_TPL_DP               0xf4303954
#define L3FE_FE_L3E_HS_PF_0_TPL_DP_STRIDE        20
#define L3FE_FE_L3E_HS_PF_0_TPL_DP_COUNT         7
#define L3FE_FE_L3E_HS_PF_0_TPL_DP_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PF_0_TPL_DP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PF_0_TPL_SIP              0xf4303958
#define L3FE_FE_L3E_HS_PF_0_TPL_SIP_STRIDE       20
#define L3FE_FE_L3E_HS_PF_0_TPL_SIP_COUNT        7
#define L3FE_FE_L3E_HS_PF_0_TPL_SIP_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PF_0_TPL_SIP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_PF_0_TPL_DIP              0xf430395c
#define L3FE_FE_L3E_HS_PF_0_TPL_DIP_STRIDE       20
#define L3FE_FE_L3E_HS_PF_0_TPL_DIP_COUNT        7
#define L3FE_FE_L3E_HS_PF_0_TPL_DIP_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_PF_0_TPL_DIP_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_INV_MAC                   0xf43039d8
#define L3FE_FE_L3E_HS_INV_MAC_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ldpid                :  6 ; /* bits 5:0 */
    ca_uint32_t deepq                :  1 ; /* bits 6:6 */
    ca_uint32_t deepq_vld            :  1 ; /* bits 7:7 */
    ca_uint32_t keep_ori             :  1 ; /* bits 8:8 */
    ca_uint32_t keep_ori_vld         :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_INV_MAC_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG0_ETY0             0xf43039dc
#define L3FE_FE_L3E_HS_DEF_REG0_ETY0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG0_ETY0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG1_ETY0             0xf43039e0
#define L3FE_FE_L3E_HS_DEF_REG1_ETY0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG1_ETY0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG2_ETY0             0xf43039e4
#define L3FE_FE_L3E_HS_DEF_REG2_ETY0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG2_ETY0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG0_ETY1             0xf43039e8
#define L3FE_FE_L3E_HS_DEF_REG0_ETY1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG0_ETY1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG1_ETY1             0xf43039ec
#define L3FE_FE_L3E_HS_DEF_REG1_ETY1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG1_ETY1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG2_ETY1             0xf43039f0
#define L3FE_FE_L3E_HS_DEF_REG2_ETY1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG2_ETY1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG0_ETY2             0xf43039f4
#define L3FE_FE_L3E_HS_DEF_REG0_ETY2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG0_ETY2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG1_ETY2             0xf43039f8
#define L3FE_FE_L3E_HS_DEF_REG1_ETY2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG1_ETY2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG2_ETY2             0xf43039fc
#define L3FE_FE_L3E_HS_DEF_REG2_ETY2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG2_ETY2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG0_ETY3             0xf4303a00
#define L3FE_FE_L3E_HS_DEF_REG0_ETY3_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG0_ETY3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG1_ETY3             0xf4303a04
#define L3FE_FE_L3E_HS_DEF_REG1_ETY3_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG1_ETY3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG2_ETY3             0xf4303a08
#define L3FE_FE_L3E_HS_DEF_REG2_ETY3_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG2_ETY3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG0_ETY4             0xf4303a0c
#define L3FE_FE_L3E_HS_DEF_REG0_ETY4_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG0_ETY4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG1_ETY4             0xf4303a10
#define L3FE_FE_L3E_HS_DEF_REG1_ETY4_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG1_ETY4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG2_ETY4             0xf4303a14
#define L3FE_FE_L3E_HS_DEF_REG2_ETY4_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG2_ETY4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG0_ETY5             0xf4303a18
#define L3FE_FE_L3E_HS_DEF_REG0_ETY5_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG0_ETY5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG1_ETY5             0xf4303a1c
#define L3FE_FE_L3E_HS_DEF_REG1_ETY5_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG1_ETY5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_DEF_REG2_ETY5             0xf4303a20
#define L3FE_FE_L3E_HS_DEF_REG2_ETY5_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fib2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_DEF_REG2_ETY5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY0            0xf4303a24
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY0            0xf4303a28
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY0_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY1            0xf4303a2c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY1            0xf4303a30
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY1_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY2            0xf4303a34
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY2            0xf4303a38
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY2_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY3            0xf4303a3c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY3            0xf4303a40
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY3_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY4            0xf4303a44
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY4_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY4            0xf4303a48
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY4_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY4_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY5            0xf4303a4c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY5_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY5            0xf4303a50
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY5_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY5_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY6            0xf4303a54
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY6_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY6            0xf4303a58
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY6_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY6_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY7            0xf4303a5c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY7_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY7            0xf4303a60
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY7_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY7_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY8            0xf4303a64
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY8_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY8_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY8            0xf4303a68
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY8_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY8_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY9            0xf4303a6c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY9_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY9_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY9            0xf4303a70
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY9_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY9_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY10           0xf4303a74
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY10_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY10_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY10           0xf4303a78
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY10_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY10_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY11           0xf4303a7c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY11_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY11_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY11           0xf4303a80
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY11_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY11_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY12           0xf4303a84
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY12_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY12_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY12           0xf4303a88
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY12_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY12_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY13           0xf4303a8c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY13_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY13_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY13           0xf4303a90
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY13_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY13_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY14           0xf4303a94
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY14_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY14_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY14           0xf4303a98
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY14_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY14_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG0_ETY15           0xf4303a9c
#define L3FE_FE_L3E_HS_NPT6_REG0_ETY15_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG0_ETY15_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_NPT6_REG1_ETY15           0xf4303aa0
#define L3FE_FE_L3E_HS_NPT6_REG1_ETY15_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_NPT6_REG1_ETY15_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_AQM_SET                   0xf4303aa4
#define L3FE_FE_L3E_HS_AQM_SET_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   :  1 ; /* bits 0:0 */
    ca_uint32_t cnt_md               :  1 ; /* bits 1:1 */
    ca_uint32_t act_tp               :  1 ; /* bits 2:2 */
    ca_uint32_t cos_en               :  3 ; /* bits 5:3 */
    ca_uint32_t sml_cos              :  3 ; /* bits 8:6 */
    ca_uint32_t mid_cos              :  3 ; /* bits 11:9 */
    ca_uint32_t big_cos              :  3 ; /* bits 14:12 */
    ca_uint32_t mid_on_prot          :  3 ; /* bits 17:15 */
    ca_uint32_t big_on_prot          :  3 ; /* bits 20:18 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_AQM_SET_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_AQM_INTER                 0xf4303aa8
#define L3FE_FE_L3E_HS_AQM_INTER_dft             0x9000a2d0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_sft              :  5 ; /* bits 4:0 */
    ca_uint32_t entry                : 23 ; /* bits 27:5 */
    ca_uint32_t bcnt_sft             :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_AQM_INTER_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_AQM_MID                   0xf4303aac
#define L3FE_FE_L3E_HS_AQM_MID_dft               0x00001fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t on_thr               : 13 ; /* bits 12:0 */
    ca_uint32_t off_thr              : 13 ; /* bits 25:13 */
    ca_uint32_t on_thr_size          :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_AQM_MID_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_FE_L3E_HS_AQM_BIG                   0xf4303ab0
#define L3FE_FE_L3E_HS_AQM_BIG_dft               0x00001fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t on_thr               : 13 ; /* bits 12:0 */
    ca_uint32_t off_thr              : 13 ; /* bits 25:13 */
    ca_uint32_t on_thr_size          :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_FE_L3E_HS_AQM_BIG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FE_L3E_HS */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_FE_L3E_HS_PROFILE0_INI_t            PROFILE0_INI;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_FE_L3E_HS_PROFILE0_TUPLE0_t         PROFILE0_TUPLE0;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[31];
  L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_t   PROFILE0_TYPE0_ACTION;         /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd3[271];
  L3FE_FE_L3E_HS_HASH_INI_t                HASH_INI;                      /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd4[3];
  L3FE_FE_L3E_HS_BA_MH1_t                  BA_MH1;                        /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd5[3];
  L3FE_FE_L3E_HS_BA_MH0_t                  BA_MH0;                        /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd6[3];
  L3FE_FE_L3E_HS_BA_MA1_t                  BA_MA1;                        /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd7[3];
  L3FE_FE_L3E_HS_BA_MA0_t                  BA_MA0;                        /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd8[3];
  L3FE_FE_L3E_HS_OVERFLOW_INI_t            OVERFLOW_INI;                  /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd9[3];
  L3FE_FE_L3E_HS_BA_OA1_t                  BA_OA1;                        /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd10[3];
  L3FE_FE_L3E_HS_BA_OA0_t                  BA_OA0;                        /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd11[3];
  L3FE_FE_L3E_HS_DEFAULT_INI_t             DEFAULT_INI;                   /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd12[3];
  L3FE_FE_L3E_HS_BA_DA1_t                  BA_DA1;                        /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd13[3];
  L3FE_FE_L3E_HS_BA_DA0_t                  BA_DA0;                        /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd14[3];
  L3FE_FE_L3E_HS_DEFAULT_ACTION_0_t        DEFAULT_ACTION_0;              /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd15[63];
  L3FE_FE_L3E_HS_CACHE_INI_t               CACHE_INI;                     /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd16[3];
  L3FE_FE_L3E_HS_BA_CA1_t                  BA_CA1;                        /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd17[3];
  L3FE_FE_L3E_HS_BA_CA0_t                  BA_CA0;                        /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd18[3];
  L3FE_FE_L3E_HS_CACHE_CTRL_t              CACHE_CTRL;                    /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd19[3];
  L3FE_FE_L3E_HS_CACHE_CTRL_REQ_t          CACHE_CTRL_REQ;                /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd20[3];
  L3FE_FE_L3E_HS_CACHE_CTRL_STS_t          CACHE_CTRL_STS;                /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd21[3];
  L3FE_FE_L3E_HS_CACHE_AGE10_t             CACHE_AGE10;                   /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd22[3];
  L3FE_FE_L3E_HS_CACHE_AGE32_t             CACHE_AGE32;                   /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd23[3];
  L3FE_FE_L3E_HS_CACHE_CNT_t               CACHE_CNT;                     /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd24[3];
  L3FE_FE_L3E_HS_CACHE_MISC_t              CACHE_MISC;                    /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd25[3];
  L3FE_FE_L3E_HS_AXI_CTRL_1_t              AXI_CTRL_1;                    /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd26[15];
  L3FE_FE_L3E_HS_SWO_IDX_t                 SWO_IDX;                       /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd27[3];
  L3FE_FE_L3E_HS_SWO_DAT_t                 SWO_DAT;                       /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd28[3];
  L3FE_FE_L3E_HS_SWO_CTRL_t                SWO_CTRL;                      /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd29[3];
  L3FE_FE_L3E_HS_CACHE_HASH_ACCESS_t       CACHE_HASH_ACCESS;             /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd30[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA6_t        CACHE_HASH_DATA6;              /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd31[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA5_t        CACHE_HASH_DATA5;              /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd32[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA4_t        CACHE_HASH_DATA4;              /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd33[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA3_t        CACHE_HASH_DATA3;              /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd34[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA2_t        CACHE_HASH_DATA2;              /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd35[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA1_t        CACHE_HASH_DATA1;              /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd36[3];
  L3FE_FE_L3E_HS_CACHE_HASH_DATA0_t        CACHE_HASH_DATA0;              /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd37[3];
  L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS_t    OVERFLOW_HASH_ACCESS;          /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd38[3];
  L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1_t     OVERFLOW_HASH_DATA1;           /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd39[3];
  L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0_t     OVERFLOW_HASH_DATA0;           /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd40[3];
  L3FE_FE_L3E_HS_MASK_MEM_ACCESS_t         MASK_MEM_ACCESS;               /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd41[3];
  L3FE_FE_L3E_HS_MASK_MEM_MASK3_t          MASK_MEM_MASK3;                /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd42[3];
  L3FE_FE_L3E_HS_MASK_MEM_MASK2_t          MASK_MEM_MASK2;                /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd43[3];
  L3FE_FE_L3E_HS_MASK_MEM_MASK1_t          MASK_MEM_MASK1;                /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd44[3];
  L3FE_FE_L3E_HS_MASK_MEM_MASK0_t          MASK_MEM_MASK0;                /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd45[3];
  L3FE_FE_L3E_HS_AGING_GRANULARITY_t       AGING_GRANULARITY;             /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd46[3];
  L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS_t     HASH_AGE_MEM_ACCESS;           /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd47[3];
  L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3_t      HASH_AGE_MEM_DATA3;            /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd48[3];
  L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2_t      HASH_AGE_MEM_DATA2;            /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd49[3];
  L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1_t      HASH_AGE_MEM_DATA1;            /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd50[3];
  L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0_t      HASH_AGE_MEM_DATA0;            /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd51[3];
  L3FE_FE_L3E_HS_MEM_INI_t                 MEM_INI;                       /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd52[3];
  L3FE_FE_L3E_HS_CHK_FAIL_CTRL_t           CHK_FAIL_CTRL;                 /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd53[3];
  L3FE_FE_L3E_HS_RSV0_t                    RSV0;                          /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd54[3];
  L3FE_FE_L3E_HS_RSV1_t                    RSV1;                          /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd55[3];
  L3FE_FE_L3E_HS_PF_0_KEY_t                PF_0_KEY;                      /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd56[3];
  L3FE_FE_L3E_HS_PF_0_TPL_SP_t             PF_0_TPL_SP;                   /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd57[3];
  L3FE_FE_L3E_HS_PF_0_TPL_DP_t             PF_0_TPL_DP;                   /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd58[3];
  L3FE_FE_L3E_HS_PF_0_TPL_SIP_t            PF_0_TPL_SIP;                  /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd59[3];
  L3FE_FE_L3E_HS_PF_0_TPL_DIP_t            PF_0_TPL_DIP;                  /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd60[123];
  L3FE_FE_L3E_HS_INV_MAC_t                 INV_MAC;                       /* addr: 0x000002d8 */
  ca_uint32_t                              rsrvd61[3];
  L3FE_FE_L3E_HS_DEF_REG0_ETY0_t           DEF_REG0_ETY0;                 /* addr: 0x000002dc */
  ca_uint32_t                              rsrvd62[3];
  L3FE_FE_L3E_HS_DEF_REG1_ETY0_t           DEF_REG1_ETY0;                 /* addr: 0x000002e0 */
  ca_uint32_t                              rsrvd63[3];
  L3FE_FE_L3E_HS_DEF_REG2_ETY0_t           DEF_REG2_ETY0;                 /* addr: 0x000002e4 */
  ca_uint32_t                              rsrvd64[3];
  L3FE_FE_L3E_HS_DEF_REG0_ETY1_t           DEF_REG0_ETY1;                 /* addr: 0x000002e8 */
  ca_uint32_t                              rsrvd65[3];
  L3FE_FE_L3E_HS_DEF_REG1_ETY1_t           DEF_REG1_ETY1;                 /* addr: 0x000002ec */
  ca_uint32_t                              rsrvd66[3];
  L3FE_FE_L3E_HS_DEF_REG2_ETY1_t           DEF_REG2_ETY1;                 /* addr: 0x000002f0 */
  ca_uint32_t                              rsrvd67[3];
  L3FE_FE_L3E_HS_DEF_REG0_ETY2_t           DEF_REG0_ETY2;                 /* addr: 0x000002f4 */
  ca_uint32_t                              rsrvd68[3];
  L3FE_FE_L3E_HS_DEF_REG1_ETY2_t           DEF_REG1_ETY2;                 /* addr: 0x000002f8 */
  ca_uint32_t                              rsrvd69[3];
  L3FE_FE_L3E_HS_DEF_REG2_ETY2_t           DEF_REG2_ETY2;                 /* addr: 0x000002fc */
  ca_uint32_t                              rsrvd70[3];
  L3FE_FE_L3E_HS_DEF_REG0_ETY3_t           DEF_REG0_ETY3;                 /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd71[3];
  L3FE_FE_L3E_HS_DEF_REG1_ETY3_t           DEF_REG1_ETY3;                 /* addr: 0x00000304 */
  ca_uint32_t                              rsrvd72[3];
  L3FE_FE_L3E_HS_DEF_REG2_ETY3_t           DEF_REG2_ETY3;                 /* addr: 0x00000308 */
  ca_uint32_t                              rsrvd73[3];
  L3FE_FE_L3E_HS_DEF_REG0_ETY4_t           DEF_REG0_ETY4;                 /* addr: 0x0000030c */
  ca_uint32_t                              rsrvd74[3];
  L3FE_FE_L3E_HS_DEF_REG1_ETY4_t           DEF_REG1_ETY4;                 /* addr: 0x00000310 */
  ca_uint32_t                              rsrvd75[3];
  L3FE_FE_L3E_HS_DEF_REG2_ETY4_t           DEF_REG2_ETY4;                 /* addr: 0x00000314 */
  ca_uint32_t                              rsrvd76[3];
  L3FE_FE_L3E_HS_DEF_REG0_ETY5_t           DEF_REG0_ETY5;                 /* addr: 0x00000318 */
  ca_uint32_t                              rsrvd77[3];
  L3FE_FE_L3E_HS_DEF_REG1_ETY5_t           DEF_REG1_ETY5;                 /* addr: 0x0000031c */
  ca_uint32_t                              rsrvd78[3];
  L3FE_FE_L3E_HS_DEF_REG2_ETY5_t           DEF_REG2_ETY5;                 /* addr: 0x00000320 */
  ca_uint32_t                              rsrvd79[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY0_t          NPT6_REG0_ETY0;                /* addr: 0x00000324 */
  ca_uint32_t                              rsrvd80[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY0_t          NPT6_REG1_ETY0;                /* addr: 0x00000328 */
  ca_uint32_t                              rsrvd81[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY1_t          NPT6_REG0_ETY1;                /* addr: 0x0000032c */
  ca_uint32_t                              rsrvd82[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY1_t          NPT6_REG1_ETY1;                /* addr: 0x00000330 */
  ca_uint32_t                              rsrvd83[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY2_t          NPT6_REG0_ETY2;                /* addr: 0x00000334 */
  ca_uint32_t                              rsrvd84[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY2_t          NPT6_REG1_ETY2;                /* addr: 0x00000338 */
  ca_uint32_t                              rsrvd85[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY3_t          NPT6_REG0_ETY3;                /* addr: 0x0000033c */
  ca_uint32_t                              rsrvd86[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY3_t          NPT6_REG1_ETY3;                /* addr: 0x00000340 */
  ca_uint32_t                              rsrvd87[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY4_t          NPT6_REG0_ETY4;                /* addr: 0x00000344 */
  ca_uint32_t                              rsrvd88[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY4_t          NPT6_REG1_ETY4;                /* addr: 0x00000348 */
  ca_uint32_t                              rsrvd89[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY5_t          NPT6_REG0_ETY5;                /* addr: 0x0000034c */
  ca_uint32_t                              rsrvd90[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY5_t          NPT6_REG1_ETY5;                /* addr: 0x00000350 */
  ca_uint32_t                              rsrvd91[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY6_t          NPT6_REG0_ETY6;                /* addr: 0x00000354 */
  ca_uint32_t                              rsrvd92[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY6_t          NPT6_REG1_ETY6;                /* addr: 0x00000358 */
  ca_uint32_t                              rsrvd93[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY7_t          NPT6_REG0_ETY7;                /* addr: 0x0000035c */
  ca_uint32_t                              rsrvd94[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY7_t          NPT6_REG1_ETY7;                /* addr: 0x00000360 */
  ca_uint32_t                              rsrvd95[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY8_t          NPT6_REG0_ETY8;                /* addr: 0x00000364 */
  ca_uint32_t                              rsrvd96[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY8_t          NPT6_REG1_ETY8;                /* addr: 0x00000368 */
  ca_uint32_t                              rsrvd97[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY9_t          NPT6_REG0_ETY9;                /* addr: 0x0000036c */
  ca_uint32_t                              rsrvd98[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY9_t          NPT6_REG1_ETY9;                /* addr: 0x00000370 */
  ca_uint32_t                              rsrvd99[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY10_t         NPT6_REG0_ETY10;               /* addr: 0x00000374 */
  ca_uint32_t                              rsrvd100[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY10_t         NPT6_REG1_ETY10;               /* addr: 0x00000378 */
  ca_uint32_t                              rsrvd101[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY11_t         NPT6_REG0_ETY11;               /* addr: 0x0000037c */
  ca_uint32_t                              rsrvd102[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY11_t         NPT6_REG1_ETY11;               /* addr: 0x00000380 */
  ca_uint32_t                              rsrvd103[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY12_t         NPT6_REG0_ETY12;               /* addr: 0x00000384 */
  ca_uint32_t                              rsrvd104[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY12_t         NPT6_REG1_ETY12;               /* addr: 0x00000388 */
  ca_uint32_t                              rsrvd105[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY13_t         NPT6_REG0_ETY13;               /* addr: 0x0000038c */
  ca_uint32_t                              rsrvd106[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY13_t         NPT6_REG1_ETY13;               /* addr: 0x00000390 */
  ca_uint32_t                              rsrvd107[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY14_t         NPT6_REG0_ETY14;               /* addr: 0x00000394 */
  ca_uint32_t                              rsrvd108[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY14_t         NPT6_REG1_ETY14;               /* addr: 0x00000398 */
  ca_uint32_t                              rsrvd109[3];
  L3FE_FE_L3E_HS_NPT6_REG0_ETY15_t         NPT6_REG0_ETY15;               /* addr: 0x0000039c */
  ca_uint32_t                              rsrvd110[3];
  L3FE_FE_L3E_HS_NPT6_REG1_ETY15_t         NPT6_REG1_ETY15;               /* addr: 0x000003a0 */
  ca_uint32_t                              rsrvd111[3];
  L3FE_FE_L3E_HS_AQM_SET_t                 AQM_SET;                       /* addr: 0x000003a4 */
  ca_uint32_t                              rsrvd112[3];
  L3FE_FE_L3E_HS_AQM_INTER_t               AQM_INTER;                     /* addr: 0x000003a8 */
  ca_uint32_t                              rsrvd113[3];
  L3FE_FE_L3E_HS_AQM_MID_t                 AQM_MID;                       /* addr: 0x000003ac */
  ca_uint32_t                              rsrvd114[3];
  L3FE_FE_L3E_HS_AQM_BIG_t                 AQM_BIG;                       /* addr: 0x000003b0 */
} APB0_L3FE_FE_L3E_HS_t;
#endif /* !__ASSEMBLER__ */


/*
 * AXIM2
 */

#define L3FE_AXIM2_CONFIG                        0xf4303c80
#define L3FE_AXIM2_CONFIG_dft                    0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_write_outtrans_num :  4 ; /* bits 3:0 */
    ca_uint32_t axi_read_outtrans_num :  4 ; /* bits 7:4 */
    ca_uint32_t axi_xbus_len         :  3 ; /* bits 10:8 */
    ca_uint32_t write_cacheline_trans_en :  1 ; /* bits 11:11 */
    ca_uint32_t write_cacheline_trans_size :  1 ; /* bits 12:12 */
    ca_uint32_t read_cacheline_trans_en :  1 ; /* bits 13:13 */
    ca_uint32_t read_cacheline_trans_size :  1 ; /* bits 14:14 */
    ca_uint32_t arcache_eos_en       :  1 ; /* bits 15:15 */
    ca_uint32_t awcache_eos_en       :  1 ; /* bits 16:16 */
    ca_uint32_t reserved             : 15 ; /* bits 31:17 */
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_AXIM2_TIMEOUT_THRESHOLD             0xf4303c84
#define L3FE_AXIM2_TIMEOUT_THRESHOLD_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_channel_threshold :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t write_channel_threshold :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_AXIM2_INTERRUPT_STATUS              0xf4303c88
#define L3FE_AXIM2_INTERRUPT_STATUS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define L3FE_AXIM2_INTERRUPT_ENABLE              0xf4303c8c
#define L3FE_AXIM2_INTERRUPT_ENABLE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int_en :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int_en :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int_en :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int_en :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int_en :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} L3FE_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
  L3FE_AXIM2_CONFIG_t                      CONFIG;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  L3FE_AXIM2_TIMEOUT_THRESHOLD_t           TIMEOUT_THRESHOLD;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  L3FE_AXIM2_INTERRUPT_STATUS_t            INTERRUPT_STATUS;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  L3FE_AXIM2_INTERRUPT_ENABLE_t            INTERRUPT_ENABLE;              /* addr: 0x0000000c */
} APB0_L3FE_AXIM2_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L3FE */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_L3FE_GLB_t                   GLB;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[337];
  APB0_L3FE_PP_t                    PP;                            /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd2[219];
  APB0_L3FE_CLS_t                   CLS;                           /* addr: 0x00000380 */
  ca_uint32_t                              rsrvd3[89];
  APB0_L3FE_STG0_t                  STG0;                          /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd4[93];
  APB0_L3FE_STG1_t                  STG1;                          /* addr: 0x00000480 */
  ca_uint32_t                              rsrvd5[123];
  APB0_L3FE_PE_t                    PE;                            /* addr: 0x00000500 */
  ca_uint32_t                              rsrvd6[281];
  APB0_L3FE_FE_L3E_HS_t             FE_L3E_HS;                     /* addr: 0x00000700 */
  ca_uint32_t                              rsrvd7[935];
  APB0_L3FE_AXIM2_t                 AXIM2;                         /* addr: 0x00000c80 */
} APB0_L3FE_t;
#endif /* !__ASSEMBLER__ */


/*
 * QM
 */

/*
 * AXIM2
 */

#define QM_AXIM2_CONFIG                          0xf4306000
#define QM_AXIM2_CONFIG_dft                      0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_write_outtrans_num :  4 ; /* bits 3:0 */
    ca_uint32_t axi_read_outtrans_num :  4 ; /* bits 7:4 */
    ca_uint32_t axi_xbus_len         :  3 ; /* bits 10:8 */
    ca_uint32_t write_cacheline_trans_en :  1 ; /* bits 11:11 */
    ca_uint32_t write_cacheline_trans_size :  1 ; /* bits 12:12 */
    ca_uint32_t read_cacheline_trans_en :  1 ; /* bits 13:13 */
    ca_uint32_t read_cacheline_trans_size :  1 ; /* bits 14:14 */
    ca_uint32_t arcache_eos_en       :  1 ; /* bits 15:15 */
    ca_uint32_t awcache_eos_en       :  1 ; /* bits 16:16 */
    ca_uint32_t reserved             : 15 ; /* bits 31:17 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXIM2_TIMEOUT_THRESHOLD               0xf4306004
#define QM_AXIM2_TIMEOUT_THRESHOLD_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_channel_threshold :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t write_channel_threshold :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXIM2_INTERRUPT_STATUS                0xf4306008
#define QM_AXIM2_INTERRUPT_STATUS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXIM2_INTERRUPT_ENABLE                0xf430600c
#define QM_AXIM2_INTERRUPT_ENABLE_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int_en :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int_en :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int_en :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int_en :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int_en :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
  QM_AXIM2_CONFIG_t                        CONFIG;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  QM_AXIM2_TIMEOUT_THRESHOLD_t             TIMEOUT_THRESHOLD;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  QM_AXIM2_INTERRUPT_STATUS_t              INTERRUPT_STATUS;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  QM_AXIM2_INTERRUPT_ENABLE_t              INTERRUPT_ENABLE;              /* addr: 0x0000000c */
} APB0_QM_AXIM2_t;
#endif /* !__ASSEMBLER__ */


/*
 * qm
 */

#define QM_QM_REVISION                           0xf4306100
#define QM_QM_REVISION_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minor                : 16 ; /* bits 15:0 */
    ca_uint32_t major                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_REVISION_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_CTRL                          0xf4306104
#define QM_QM_RMU0_CTRL_dft                      0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_drop_voqid       :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t voq_drop_en          :  2 ; /* bits 11:10 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t no_buf_drop_prevention_ths :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t no_buf_drop_prevention_en :  1 ; /* bits 19:19 */
    ca_uint32_t rx_performance_tuning_timeout_ths :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t febypass_msk         :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  3 ;
    ca_uint32_t rx_performance_tuning_en :  1 ; /* bits 29:29 */
    ca_uint32_t stop_rx_en           :  1 ; /* bits 30:30 */
    ca_uint32_t rx_en                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_ES_CTRL                            0xf4306108
#define QM_QM_ES_CTRL_dft                        0x0664ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_en               :  8 ; /* bits 7:0 */
    ca_uint32_t ni_en                :  8 ; /* bits 15:8 */
    ca_uint32_t inccfg_for_pkt_cntrs :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t inccfg_for_err_cntrs :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t crc_err_bypass       :  1 ; /* bits 24:24 */
    ca_uint32_t crc_en               :  1 ; /* bits 25:25 */
    ca_uint32_t cpuepp_wait_timer_max :  2 ; /* bits 27:26 */
    ca_uint32_t bw_relocation_en     :  1 ; /* bits 28:28 */
    ca_uint32_t bw_relocation_cpu_en :  1 ; /* bits 29:29 */
    ca_uint32_t tx_performance_tuning_en :  1 ; /* bits 30:30 */
    ca_uint32_t tx_en                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_ES_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_ES_CTRL1                           0xf430610c
#define QM_QM_ES_CTRL1_dft                       0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc_en               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_ES_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EPP64_P3_0_INTERRUPT_EN            0xf4306110
#define QM_QM_EPP64_P3_0_INTERRUPT_EN_dft        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_int_en            :  8 ; /* bits 7:0 */
    ca_uint32_t p1_int_en            :  8 ; /* bits 15:8 */
    ca_uint32_t p2_int_en            :  8 ; /* bits 23:16 */
    ca_uint32_t p3_int_en            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EPP64_P3_0_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EPP64_P7_4_INTERRUPT_EN            0xf4306114
#define QM_QM_EPP64_P7_4_INTERRUPT_EN_dft        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p4_int_en            :  8 ; /* bits 7:0 */
    ca_uint32_t p5_int_en            :  8 ; /* bits 15:8 */
    ca_uint32_t p6_int_en            :  8 ; /* bits 23:16 */
    ca_uint32_t p7_int_en            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EPP64_P7_4_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_REFILL_INTERRUPT_EN             0xf4306118
#define QM_QM_EQ_REFILL_INTERRUPT_EN_dft         0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq_refill_en         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_REFILL_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_INT_SRC                            0xf430611c
#define QM_QM_INT_SRC_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header_ecc_error_int_src :  2 ; /* bits 1:0 */
    ca_uint32_t voqinfo_ecc_error_int_src :  2 ; /* bits 3:2 */
    ca_uint32_t mmu_ecc_error_int_src :  2 ; /* bits 5:4 */
    ca_uint32_t sop_eop_error_int_src :  1 ; /* bits 6:6 */
    ca_uint32_t pkt_lenght_error_int_src :  1 ; /* bits 7:7 */
    ca_uint32_t rmu0_no_buffer_drop_int_src :  1 ; /* bits 8:8 */
    ca_uint32_t rmu0_check_error_int_src :  1 ; /* bits 9:9 */
    ca_uint32_t rmu0_fifo_error_int_src :  1 ; /* bits 10:10 */
    ca_uint32_t axiarb_fifo_error_int_src :  1 ; /* bits 11:11 */
    ca_uint32_t dqm_no_buffer_drop_int_src :  1 ; /* bits 12:12 */
    ca_uint32_t dqm_fe_drop_int_src  :  1 ; /* bits 13:13 */
    ca_uint32_t dqm_fifo_error_int_src :  1 ; /* bits 14:14 */
    ca_uint32_t eq_load_error_int_src :  1 ; /* bits 15:15 */
    ca_uint32_t eqm_fifo_error_int_src :  1 ; /* bits 16:16 */
    ca_uint32_t eqm_stack_error_int_src :  1 ; /* bits 17:17 */
    ca_uint32_t tmu_fifo_error_int_src :  1 ; /* bits 18:18 */
    ca_uint32_t tmu_header_error_int_src :  1 ; /* bits 19:19 */
    ca_uint32_t cpuepp_fifo_error_int_src :  1 ; /* bits 20:20 */
    ca_uint32_t eqm_buf_size_error_int_src :  1 ; /* bits 21:21 */
    ca_uint32_t eqm_cfg_error_int_src :  1 ; /* bits 22:22 */
    ca_uint32_t ni_bridge_fifo_error_int_src :  1 ; /* bits 23:23 */
    ca_uint32_t tmu_cfg_error_int_src :  1 ; /* bits 24:24 */
    ca_uint32_t mmu_lkup_bid_out_of_range_int_src :  1 ; /* bits 25:25 */
    ca_uint32_t eq_overflow_int_src  :  1 ; /* bits 26:26 */
    ca_uint32_t cpu_push_invalid_eq_int_src :  1 ; /* bits 27:27 */
    ca_uint32_t fbm_returns_no_buffer_int_src :  1 ; /* bits 28:28 */
    ca_uint32_t axim_rmu0_resp_error_int_src :  1 ; /* bits 29:29 */
    ca_uint32_t axim_cpuepp_resp_error_int_src :  1 ; /* bits 30:30 */
    ca_uint32_t axim_qm_int_src      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_INT_SRC_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_INT_SRCE                           0xf4306120
#define QM_QM_INT_SRCE_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header_ecc_error_int_srcE :  2 ; /* bits 1:0 */
    ca_uint32_t voqinfo_ecc_error_int_srcE :  2 ; /* bits 3:2 */
    ca_uint32_t mmu_ecc_error_int_srcE :  2 ; /* bits 5:4 */
    ca_uint32_t sop_eop_error_int_srcE :  1 ; /* bits 6:6 */
    ca_uint32_t pkt_lenght_error_int_srcE :  1 ; /* bits 7:7 */
    ca_uint32_t rmu0_no_buffer_drop_int_srcE :  1 ; /* bits 8:8 */
    ca_uint32_t rmu0_check_error_int_srcE :  1 ; /* bits 9:9 */
    ca_uint32_t rmu0_fifo_error_int_srcE :  1 ; /* bits 10:10 */
    ca_uint32_t axiarb_fifo_error_int_srcE :  1 ; /* bits 11:11 */
    ca_uint32_t dqm_no_buffer_drop_int_srcE :  1 ; /* bits 12:12 */
    ca_uint32_t dqm_fe_drop_int_srcE :  1 ; /* bits 13:13 */
    ca_uint32_t dqm_fifo_error_int_srcE :  1 ; /* bits 14:14 */
    ca_uint32_t eq_load_error_int_srcE :  1 ; /* bits 15:15 */
    ca_uint32_t eqm_fifo_error_int_srcE :  1 ; /* bits 16:16 */
    ca_uint32_t eqm_stack_error_int_srcE :  1 ; /* bits 17:17 */
    ca_uint32_t tmu_fifo_error_int_srcE :  1 ; /* bits 18:18 */
    ca_uint32_t tmu_header_error_int_srcE :  1 ; /* bits 19:19 */
    ca_uint32_t cpuepp_fifo_error_int_srcE :  1 ; /* bits 20:20 */
    ca_uint32_t eqm_buf_size_error_int_srcE :  1 ; /* bits 21:21 */
    ca_uint32_t eqm_cfg_error_int_srcE :  1 ; /* bits 22:22 */
    ca_uint32_t ni_bridge_fifo_error_int_srcE :  1 ; /* bits 23:23 */
    ca_uint32_t tmu_cfg_error_int_srcE :  1 ; /* bits 24:24 */
    ca_uint32_t mmu_lkup_bid_out_of_range_int_srcE :  1 ; /* bits 25:25 */
    ca_uint32_t eq_overflow_int_srcE :  1 ; /* bits 26:26 */
    ca_uint32_t cpu_push_invalid_eq_int_srcE :  1 ; /* bits 27:27 */
    ca_uint32_t fbm_returns_no_buffer_int_srcE :  1 ; /* bits 28:28 */
    ca_uint32_t axim_rmu0_resp_error_int_srcE :  1 ; /* bits 29:29 */
    ca_uint32_t axim_cpuepp_resp_error_int_srcE :  1 ; /* bits 30:30 */
    ca_uint32_t axim_qm_int_srcE     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_INT_SRCE_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_AXI_QOS_CFG                        0xf4306124
#define QM_QM_AXI_QOS_CFG_dft                    0x0f240000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t axi_id_rmu           :  4 ; /* bits 19:16 */
    ca_uint32_t axi_id_cpuepp        :  4 ; /* bits 23:20 */
    ca_uint32_t axi_id_tmu           :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_AXI_QOS_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_PROFILE0                        0xf4306128
#define QM_QM_EQ_PROFILE0_STRIDE                 4
#define QM_QM_EQ_PROFILE0_COUNT                  8
#define QM_QM_EQ_PROFILE0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eqp0                 :  4 ; /* bits 3:0 */
    ca_uint32_t eqp1                 :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rule                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEST_PORT0_EQ_CFG                  0xf4306148
#define QM_QM_DEST_PORT0_EQ_CFG_STRIDE           4
#define QM_QM_DEST_PORT0_EQ_CFG_COUNT            32
#define QM_QM_DEST_PORT0_EQ_CFG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t profile_sel          :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEST_PORT0_EQ_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEST_PORT0_PKT_BUF_CFG             0xf43061c8
#define QM_QM_DEST_PORT0_PKT_BUF_CFG_STRIDE      4
#define QM_QM_DEST_PORT0_PKT_BUF_CFG_COUNT       8
#define QM_QM_DEST_PORT0_PKT_BUF_CFG_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t head_room_first      :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t tail_room_first      :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t head_room_rest       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t tail_room_rest       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEST_PORT0_PKT_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CFG0_EQ0                           0xf43061e8
#define QM_QM_CFG0_EQ0_STRIDE                    20
#define QM_QM_CFG0_EQ0_COUNT                     16
#define QM_QM_CFG0_EQ0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq_en                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t phy_addr_start       : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CFG0_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CFG1_EQ0                           0xf43061ec
#define QM_QM_CFG1_EQ0_STRIDE                    20
#define QM_QM_CFG1_EQ0_COUNT                     16
#define QM_QM_CFG1_EQ0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bid_start            : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t total_buffer_num     : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CFG1_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CFG2_EQ0                           0xf43061f0
#define QM_QM_CFG2_EQ0_STRIDE                    20
#define QM_QM_CFG2_EQ0_COUNT                     16
#define QM_QM_CFG2_EQ0_dft                       0x0000ff01

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buffer_size          :  3 ; /* bits 2:0 */
    ca_uint32_t cpu_eq               :  1 ; /* bits 3:3 */
    ca_uint32_t refill_fbm_eqid      :  3 ; /* bits 6:4 */
    ca_uint32_t refill_en            :  1 ; /* bits 7:7 */
    ca_uint32_t refill_ths           :  8 ; /* bits 15:8 */
    ca_uint32_t buffer_weight        :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CFG2_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CFG3_EQ0                           0xf43061f4
#define QM_QM_CFG3_EQ0_STRIDE                    20
#define QM_QM_CFG3_EQ0_COUNT                     16
#define QM_QM_CFG3_EQ0_dft                       0x10000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qos                  :  4 ; /* bits 3:0 */
    ca_uint32_t cache                :  4 ; /* bits 7:4 */
    ca_uint32_t snoop                :  4 ; /* bits 11:8 */
    ca_uint32_t bar                  :  2 ; /* bits 13:12 */
    ca_uint32_t domain               :  2 ; /* bits 15:14 */
    ca_uint32_t user                 :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t acd_cmd              :  1 ; /* bits 24:24 */
    ca_uint32_t cache_line_split     :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t cache_eos            :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CFG3_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CFG4_EQ0                           0xf43061f8
#define QM_QM_CFG4_EQ0_STRIDE                    20
#define QM_QM_CFG4_EQ0_COUNT                     16
#define QM_QM_CFG4_EQ0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_top_bit          :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CFG4_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQM_PA_REQ0                        0xf4306328
#define QM_QM_EQM_PA_REQ0_STRIDE                 4
#define QM_QM_EQM_PA_REQ0_COUNT                  16
#define QM_QM_EQM_PA_REQ0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inactive_bid_cntr    : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 17 ;
    ca_uint32_t req                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQM_PA_REQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_PUSH_RDY0                      0xf4306368
#define QM_QM_CPU_PUSH_RDY0_STRIDE               8
#define QM_QM_CPU_PUSH_RDY0_COUNT                8
#define QM_QM_CPU_PUSH_RDY0_dft                  0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 31 ;
    ca_uint32_t rdy                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_PUSH_RDY0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_PUSH_PADDR0                    0xf430636c
#define QM_QM_CPU_PUSH_PADDR0_STRIDE             8
#define QM_QM_CPU_PUSH_PADDR0_COUNT              8
#define QM_QM_CPU_PUSH_PADDR0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eqid                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t addr                 : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_PUSH_PADDR0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_CFG_LOAD                        0xf43063a8
#define QM_QM_EQ_CFG_LOAD_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t load                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_CFG_LOAD_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_PHY_ADDR_RETURN_CTRL            0xf43063ac
#define QM_QM_EQ_PHY_ADDR_RETURN_CTRL_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq_id                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t phy_addr_retrieval_en :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_PHY_ADDR_RETURN_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_RETURN_PHY_ADDR                 0xf43063b0
#define QM_QM_EQ_RETURN_PHY_ADDR_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq_id                :  4 ; /* bits 3:0 */
    ca_uint32_t valid                :  1 ; /* bits 4:4 */
    ca_uint32_t retrieval_done       :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t phy_addr             : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_RETURN_PHY_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_ACTIVE_STACK_CFG                   0xf43063b4
#define QM_QM_ACTIVE_STACK_CFG_dft               0x001a1410

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_ths              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t mid_ths              :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t high_ths             :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_ACTIVE_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_INACTIVE_STACK_CFG                 0xf43063b8
#define QM_QM_INACTIVE_STACK_CFG_dft             0x001a1410

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_ths              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t mid_ths              :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t high_ths             :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_INACTIVE_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_STACK_CTRL                      0xf43063bc
#define QM_QM_EQ_STACK_CTRL_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stack_unfill         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_STACK_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_STACK_UNFILL_STS                0xf43063c0
#define QM_QM_EQ_STACK_UNFILL_STS_dft            0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t done                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_STACK_UNFILL_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SCH_CFG0                           0xf43063c4
#define QM_QM_SCH_CFG0_STRIDE                    4
#define QM_QM_SCH_CFG0_COUNT                     32
#define QM_QM_SCH_CFG0_dft                       0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_en               :  8 ; /* bits 7:0 */
    ca_uint32_t flush_voqid          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t flush_en             :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SCH_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0           0xf4306444
#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_STRIDE    8
#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_COUNT     32
#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq0                 :  8 ; /* bits 7:0 */
    ca_uint32_t voq1                 :  8 ; /* bits 15:8 */
    ca_uint32_t voq2                 :  8 ; /* bits 23:16 */
    ca_uint32_t voq3                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0           0xf4306448
#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_STRIDE    8
#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_COUNT     32
#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq4                 :  8 ; /* bits 7:0 */
    ca_uint32_t voq5                 :  8 ; /* bits 15:8 */
    ca_uint32_t voq6                 :  8 ; /* bits 23:16 */
    ca_uint32_t voq7                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_PORT7_0_WEIGHT_RATIO_CFG           0xf4306544
#define QM_QM_PORT7_0_WEIGHT_RATIO_CFG_dft       0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0                :  4 ; /* bits 3:0 */
    ca_uint32_t port1                :  4 ; /* bits 7:4 */
    ca_uint32_t port2                :  4 ; /* bits 11:8 */
    ca_uint32_t port3                :  4 ; /* bits 15:12 */
    ca_uint32_t port4                :  4 ; /* bits 19:16 */
    ca_uint32_t port5                :  4 ; /* bits 23:20 */
    ca_uint32_t port6                :  4 ; /* bits 27:24 */
    ca_uint32_t port7                :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_PORT7_0_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_PORT15_8_WEIGHT_RATIO_CFG          0xf4306548
#define QM_QM_PORT15_8_WEIGHT_RATIO_CFG_dft      0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port8                :  4 ; /* bits 3:0 */
    ca_uint32_t port9                :  4 ; /* bits 7:4 */
    ca_uint32_t port10               :  4 ; /* bits 11:8 */
    ca_uint32_t port11               :  4 ; /* bits 15:12 */
    ca_uint32_t port12               :  4 ; /* bits 19:16 */
    ca_uint32_t port13               :  4 ; /* bits 23:20 */
    ca_uint32_t port14               :  4 ; /* bits 27:24 */
    ca_uint32_t port15               :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_PORT15_8_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_PORT23_16_WEIGHT_RATIO_CFG         0xf430654c
#define QM_QM_PORT23_16_WEIGHT_RATIO_CFG_dft     0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port16               :  4 ; /* bits 3:0 */
    ca_uint32_t port17               :  4 ; /* bits 7:4 */
    ca_uint32_t port18               :  4 ; /* bits 11:8 */
    ca_uint32_t port19               :  4 ; /* bits 15:12 */
    ca_uint32_t port20               :  4 ; /* bits 19:16 */
    ca_uint32_t port21               :  4 ; /* bits 23:20 */
    ca_uint32_t port22               :  4 ; /* bits 27:24 */
    ca_uint32_t port23               :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_PORT23_16_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_PORT31_24_WEIGHT_RATIO_CFG         0xf4306550
#define QM_QM_PORT31_24_WEIGHT_RATIO_CFG_dft     0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port24               :  4 ; /* bits 3:0 */
    ca_uint32_t port25               :  4 ; /* bits 7:4 */
    ca_uint32_t port26               :  4 ; /* bits 11:8 */
    ca_uint32_t port27               :  4 ; /* bits 15:12 */
    ca_uint32_t port28               :  4 ; /* bits 19:16 */
    ca_uint32_t port29               :  4 ; /* bits 23:20 */
    ca_uint32_t port30               :  4 ; /* bits 27:24 */
    ca_uint32_t port31               :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_PORT31_24_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DRR_WEIGHT_BASE                    0xf4306554
#define QM_QM_DRR_WEIGHT_BASE_dft                0x00040114

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t w_rate               :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t base_select          :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t cpu_dwrr_unit        :  1 ; /* bits 16:16 */
    ca_uint32_t ni_dwrr_unit         :  1 ; /* bits 17:17 */
    ca_uint32_t cpu_epp256_dwrr_unit :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DRR_WEIGHT_BASE_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_EPP0_CFG                       0xf4306558
#define QM_QM_CPU_EPP0_CFG_STRIDE                4
#define QM_QM_CPU_EPP0_CFG_COUNT                 8
#define QM_QM_CPU_EPP0_CFG_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t map_mode             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_EPP0_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_EPP_CT_CFG                     0xf4306578
#define QM_QM_CPU_EPP_CT_CFG_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timer_base           :  2 ; /* bits 1:0 */
    ca_uint32_t timer_base_256       :  2 ; /* bits 3:2 */
    ca_uint32_t axi_req_accu         :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_EPP_CT_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_EPP_FIFO_CFG_profile0          0xf430657c
#define QM_QM_CPU_EPP_FIFO_CFG_profile0_STRIDE   4
#define QM_QM_CPU_EPP_FIFO_CFG_profile0_COUNT    8
#define QM_QM_CPU_EPP_FIFO_CFG_profile0_dft      0xe0008001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t high_ths             :  4 ; /* bits 3:0 */
    ca_uint32_t timer_ths            :  4 ; /* bits 7:4 */
    ca_uint32_t size                 : 21 ; /* bits 28:8 */
    ca_uint32_t max_buf_cnt_per_pkt  :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_EPP_FIFO_CFG_profile0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_EPP_STATUS0                    0xf430659c
#define QM_QM_CPU_EPP_STATUS0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_EPP_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_EPP_STATUS1                    0xf43065a0
#define QM_QM_CPU_EPP_STATUS1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_EPP_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPU_EPP_FIFO0_0_CFG                0xf43065a4
#define QM_QM_CPU_EPP_FIFO0_0_CFG_STRIDE         32
#define QM_QM_CPU_EPP_FIFO0_0_CFG_COUNT          8
#define QM_QM_CPU_EPP_FIFO0_0_CFG_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t profile_sel          :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPU_EPP_FIFO0_0_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_AXI_ATTRIBUTE_ACCESS               0xf43066a4
#define QM_QM_AXI_ATTRIBUTE_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_AXI_ATTRIBUTE_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_AXI_ATTRIBUTE_DATA1                0xf43066a8
#define QM_QM_AXI_ATTRIBUTE_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_top_bit          :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_AXI_ATTRIBUTE_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_AXI_ATTRIBUTE_DATA0                0xf43066ac
#define QM_QM_AXI_ATTRIBUTE_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qos                  :  4 ; /* bits 3:0 */
    ca_uint32_t cache                :  4 ; /* bits 7:4 */
    ca_uint32_t snoop                :  4 ; /* bits 11:8 */
    ca_uint32_t bar                  :  2 ; /* bits 13:12 */
    ca_uint32_t domain               :  2 ; /* bits 15:14 */
    ca_uint32_t user                 :  6 ; /* bits 21:16 */
    ca_uint32_t prot                 :  3 ; /* bits 24:22 */
    ca_uint32_t ace_cmd              :  1 ; /* bits 25:25 */
    ca_uint32_t axi_top_bit          :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_AXI_ATTRIBUTE_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BID_PADDR_LKUP_ACCESS              0xf43066b0
#define QM_QM_BID_PADDR_LKUP_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 17 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BID_PADDR_LKUP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BID_PADDR_LKUP_DATA                0xf43066b4
#define QM_QM_BID_PADDR_LKUP_DATA_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ecc                  :  6 ; /* bits 5:0 */
    ca_uint32_t Reserved             :  1 ; /* bits 6:6 */
    ca_uint32_t phy_addr             : 25 ; /* bits 31:7 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BID_PADDR_LKUP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_INFO_MEMORY_ACCESS             0xf43066b8
#define QM_QM_VOQ_INFO_MEMORY_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_INFO_MEMORY_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_INFO_MEMORY_DATA2              0xf43066bc
#define QM_QM_VOQ_INFO_MEMORY_DATA2_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcntr                : 11 ; /* bits 10:0 */
    ca_uint32_t ecc                  :  9 ; /* bits 19:11 */
    ca_uint32_t sw_id                :  6 ; /* bits 25:20 */
    ca_uint32_t lspid_bp             :  3 ; /* bits 28:26 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_INFO_MEMORY_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_INFO_MEMORY_DATA1              0xf43066c0
#define QM_QM_VOQ_INFO_MEMORY_DATA1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_header           :  1 ; /* bits 0:0 */
    ca_uint32_t voq_tail             : 14 ; /* bits 14:1 */
    ca_uint32_t voq_head             : 14 ; /* bits 28:15 */
    ca_uint32_t bcntr                :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_INFO_MEMORY_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_INFO_MEMORY_DATA0              0xf43066c4
#define QM_QM_VOQ_INFO_MEMORY_DATA0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_header           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_INFO_MEMORY_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_HEADER_MEMORY_ACCESS               0xf43066c8
#define QM_QM_HEADER_MEMORY_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_HEADER_MEMORY_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_HEADER_MEMORY_DATA1                0xf43066cc
#define QM_QM_HEADER_MEMORY_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_type_ptp         :  1 ; /* bits 0:0 */
    ca_uint32_t sw_id                :  6 ; /* bits 6:1 */
    ca_uint32_t lspid_sp             :  3 ; /* bits 9:7 */
    ca_uint32_t ecc                  :  7 ; /* bits 16:10 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_HEADER_MEMORY_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_HEADER_MEMORY_DATA0                0xf43066d0
#define QM_QM_HEADER_MEMORY_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_length           : 14 ; /* bits 13:0 */
    ca_uint32_t eop                  :  1 ; /* bits 14:14 */
    ca_uint32_t sop                  :  1 ; /* bits 15:15 */
    ca_uint32_t next_buffer_ptr      : 14 ; /* bits 29:16 */
    ca_uint32_t l4err                :  1 ; /* bits 30:30 */
    ca_uint32_t pkt_type_cpu         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_HEADER_MEMORY_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_HDM_WRITE_PROTECTION               0xf43066d4
#define QM_QM_HDM_WRITE_PROTECTION_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t passwd               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_HDM_WRITE_PROTECTION_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_MONITOR0_EQ0                       0xf43066d8
#define QM_QM_MONITOR0_EQ0_STRIDE                16
#define QM_QM_MONITOR0_EQ0_COUNT                 16
#define QM_QM_MONITOR0_EQ0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tail                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t head                 : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_MONITOR0_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_MONITOR1_EQ0                       0xf43066dc
#define QM_QM_MONITOR1_EQ0_STRIDE                16
#define QM_QM_MONITOR1_EQ0_COUNT                 16
#define QM_QM_MONITOR1_EQ0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t inactive_head        : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_MONITOR1_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_MONITOR2_EQ0                       0xf43066e0
#define QM_QM_MONITOR2_EQ0_STRIDE                16
#define QM_QM_MONITOR2_EQ0_COUNT                 16
#define QM_QM_MONITOR2_EQ0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inactive_cntr        : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t inactive_tail        : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_MONITOR2_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_MONITOR3_EQ0                       0xf43066e4
#define QM_QM_MONITOR3_EQ0_STRIDE                16
#define QM_QM_MONITOR3_EQ0_COUNT                 16
#define QM_QM_MONITOR3_EQ0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inactive_stack_cntr  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t stack_cntr           :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd2               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_MONITOR3_EQ0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_RX_PKT_CNTR                   0xf43067d8
#define QM_QM_RMU0_RX_PKT_CNTR_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_RX_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_RX_PACKET_HEADER_INFO1        0xf43067dc
#define QM_QM_RMU0_RX_PACKET_HEADER_INFO1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t info1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_RX_PACKET_HEADER_INFO1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_RX_PACKET_HEADER_INFO0        0xf43067e0
#define QM_QM_RMU0_RX_PACKET_HEADER_INFO0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t info0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_RX_PACKET_HEADER_INFO0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TX_PKT_CNTR                        0xf43067e4
#define QM_QM_TX_PKT_CNTR_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TX_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TX_PKT_CNTR_ALL_NI                 0xf43067e8
#define QM_QM_TX_PKT_CNTR_ALL_NI_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TX_PKT_CNTR_ALL_NI_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TX_PKT_CNTR_CPU0                   0xf43067ec
#define QM_QM_TX_PKT_CNTR_CPU0_STRIDE            4
#define QM_QM_TX_PKT_CNTR_CPU0_COUNT             8
#define QM_QM_TX_PKT_CNTR_CPU0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TX_PKT_CNTR_CPU0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TX_PACKET_HEADER_INFO1             0xf430680c
#define QM_QM_TX_PACKET_HEADER_INFO1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t info1                : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TX_PACKET_HEADER_INFO1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TX_PACKET_HEADER_INFO0             0xf4306810
#define QM_QM_TX_PACKET_HEADER_INFO0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t info0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TX_PACKET_HEADER_INFO0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_NO_BUF_DROP_PKT_INFO          0xf4306814
#define QM_QM_RMU0_NO_BUF_DROP_PKT_INFO_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eqid                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t voqid                :  9 ; /* bits 24:16 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_NO_BUF_DROP_PKT_INFO_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR          0xf4306818
#define QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_FE_DROP_PKT_CNTR              0xf430681c
#define QM_QM_RMU0_FE_DROP_PKT_CNTR_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_FE_DROP_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RX_EOP_DROP_CNTR                   0xf4306820
#define QM_QM_RX_EOP_DROP_CNTR_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RX_EOP_DROP_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RX_LEN_CHK_ERROR_CNTR              0xf4306824
#define QM_QM_RX_LEN_CHK_ERROR_CNTR_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RX_LEN_CHK_ERROR_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RX_L2TE_TAIL_DROP_CNTR             0xf4306828
#define QM_QM_RX_L2TE_TAIL_DROP_CNTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RX_L2TE_TAIL_DROP_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TX_CRC_ERROR_NI_CNTR               0xf430682c
#define QM_QM_TX_CRC_ERROR_NI_CNTR_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TX_CRC_ERROR_NI_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS0                        0xf4306830
#define QM_QM_VOQ_STATUS0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS1                        0xf4306834
#define QM_QM_VOQ_STATUS1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS2                        0xf4306838
#define QM_QM_VOQ_STATUS2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS3                        0xf430683c
#define QM_QM_VOQ_STATUS3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS3_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS4                        0xf4306840
#define QM_QM_VOQ_STATUS4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS4_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS5                        0xf4306844
#define QM_QM_VOQ_STATUS5_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS5_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS6                        0xf4306848
#define QM_QM_VOQ_STATUS6_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS6_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_STATUS7                        0xf430684c
#define QM_QM_VOQ_STATUS7_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_STATUS7_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_PHY_PORT_STS                       0xf4306850
#define QM_QM_PHY_PORT_STS_dft                   0xa5ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t nirx_qm_port_rdy     :  8 ; /* bits 7:0 */
    ca_uint32_t te_qm_es_ni_ok       :  8 ; /* bits 15:8 */
    ca_uint32_t te_qm_es_cpu_ok      :  8 ; /* bits 23:16 */
    ca_uint32_t qm_nitx_rdy          :  1 ; /* bits 24:24 */
    ca_uint32_t nitx_qm_vld          :  1 ; /* bits 25:25 */
    ca_uint32_t nirx_qm_rdy          :  1 ; /* bits 26:26 */
    ca_uint32_t qm_nirx_vld          :  1 ; /* bits 27:27 */
    ca_uint32_t axi_write_rdy        :  1 ; /* bits 28:28 */
    ca_uint32_t axi_read_rdy         :  1 ; /* bits 29:29 */
    ca_uint32_t qm_init_done         :  1 ; /* bits 30:30 */
    ca_uint32_t qm_idle              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_PHY_PORT_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SUB_MODULE_STS                     0xf4306854
#define QM_QM_SUB_MODULE_STS_dft                 0x00f0bfff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm_axi_att_idle      :  1 ; /* bits 0:0 */
    ca_uint32_t qm_intf_idle         :  1 ; /* bits 1:1 */
    ca_uint32_t qm_eqm_idle          :  1 ; /* bits 2:2 */
    ca_uint32_t qm_rmu_idle          :  1 ; /* bits 3:3 */
    ca_uint32_t qm_tmu_idle          :  1 ; /* bits 4:4 */
    ca_uint32_t qm_cpuepp_idle       :  1 ; /* bits 5:5 */
    ca_uint32_t qm_dqm_idle          :  1 ; /* bits 6:6 */
    ca_uint32_t qm_hdm_idle          :  1 ; /* bits 7:7 */
    ca_uint32_t qm_mmu_idle          :  1 ; /* bits 8:8 */
    ca_uint32_t qm_ni_bridge_idle    :  1 ; /* bits 9:9 */
    ca_uint32_t tmu_sch_rdy          :  1 ; /* bits 10:10 */
    ca_uint32_t epp_sch_rdy          :  1 ; /* bits 11:11 */
    ca_uint32_t eqm_rmu_rdy          :  1 ; /* bits 12:12 */
    ca_uint32_t dqm_rmu_rdy          :  1 ; /* bits 13:13 */
    ca_uint32_t sch_dqm_outstd_req   :  1 ; /* bits 14:14 */
    ca_uint32_t sch_idle             :  1 ; /* bits 15:15 */
    ca_uint32_t fsm_dqm_hdm          :  4 ; /* bits 19:16 */
    ca_uint32_t fsm_dqm_voq_info     :  4 ; /* bits 23:20 */
    ca_uint32_t qm_tmu_fsm_axi_rd    :  4 ; /* bits 27:24 */
    ca_uint32_t qm_rmu_fsm_axi_wr    :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SUB_MODULE_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_FIFO_STS                      0xf4306858
#define QM_QM_RMU0_FIFO_STS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data_fifo_depth      :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t cmd_fifo_depth       :  4 ; /* bits 15:12 */
    ca_uint32_t cmd_resp_fifo_depth  :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t axi_fifo_depth       :  3 ; /* bits 26:24 */
    ca_uint32_t header_fifo_depth    :  5 ; /* bits 31:27 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPUEPP_STS                         0xf430685c
#define QM_QM_CPUEPP_STS_dft                     0x80082020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t epp_ptr_resp_fifo_depth :  5 ; /* bits 4:0 */
    ca_uint32_t epp_ptr_resp_fifo_empty :  1 ; /* bits 5:5 */
    ca_uint32_t epp_ptr_resp_fifo_full :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t eppresp_fifo_depth   :  5 ; /* bits 12:8 */
    ca_uint32_t eppresp_fifo_empty   :  1 ; /* bits 13:13 */
    ca_uint32_t eppresp_fifo_full    :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t eppcmd_fifo_depth    :  3 ; /* bits 18:16 */
    ca_uint32_t eppcmd_fifo_empty    :  1 ; /* bits 19:19 */
    ca_uint32_t eppcmd_fifo_full     :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t axi_write_state      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t axi_write_req_wait   :  1 ; /* bits 29:29 */
    ca_uint32_t axi_write_req        :  1 ; /* bits 30:30 */
    ca_uint32_t epp_sch_rdy          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPUEPP_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPUEPP_SM_STS                      0xf4306860
#define QM_QM_CPUEPP_SM_STS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t paddr_mem_ctrl_state :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t rwptr_mem_ctrl_state :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPUEPP_SM_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPUEPP_AXI_CNT_STS                 0xf4306864
#define QM_QM_CPUEPP_AXI_CNT_STS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gnt_cnt              : 16 ; /* bits 15:0 */
    ca_uint32_t resp_cnt             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPUEPP_AXI_CNT_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DQM_FIFO_STS                       0xf4306868
#define QM_QM_DQM_FIFO_STS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dqm_rmureq_fifo_depth :  4 ; /* bits 3:0 */
    ca_uint32_t dqm_nbrcy_fifo_depth :  4 ; /* bits 7:4 */
    ca_uint32_t dqmreq_fifo_depth    :  5 ; /* bits 12:8 */
    ca_uint32_t dqm_fercy_fifo_depth :  3 ; /* bits 15:13 */
    ca_uint32_t dqmlnk_fifo_depth    :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t dqmresp_fifo_depth   :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DQM_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_TMU_FIFO_STS                       0xf430686c
#define QM_QM_TMU_FIFO_STS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmu_rcy_fifo_depth   :  4 ; /* bits 3:0 */
    ca_uint32_t txcmd_fifo_depth     :  5 ; /* bits 8:4 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t tmu_axi_beat_add     : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_TMU_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_NI_BRIDGE_FIFO_STS                 0xf4306870
#define QM_QM_NI_BRIDGE_FIFO_STS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t beat                 :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ni_eop_fifo_depth    :  3 ; /* bits 14:12 */
    ca_uint32_t ni_wr_pkt            :  1 ; /* bits 15:15 */
    ca_uint32_t entry                :  8 ; /* bits 23:16 */
    ca_uint32_t pkt                  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_NI_BRIDGE_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SPARE_CFG                          0xf4306874
#define QM_QM_SPARE_CFG_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SPARE_STS                          0xf4306878
#define QM_QM_SPARE_STS_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_DATA1                        0xf430687c
#define QM_QM_DEBUG_DATA1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_DATA0                        0xf4306880
#define QM_QM_DEBUG_DATA0_dft                    0x80000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS0                         0xf4306884
#define QM_QM_DEBUG_STS0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rmu_eqm_ack_cntr     :  8 ; /* bits 7:0 */
    ca_uint32_t rmu_lkup_ack_cntr    :  8 ; /* bits 15:8 */
    ca_uint32_t rmu_hdr_fifo_rd_cntr :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rmu_axi_fifo_wr_cntr :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS1                         0xf4306888
#define QM_QM_DEBUG_STS1_dft                     0x00112300

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fsm_rmu_eqm_req      :  4 ; /* bits 3:0 */
    ca_uint32_t fsm_axi_wr           :  4 ; /* bits 7:4 */
    ca_uint32_t eqm_rmu_rdy          :  1 ; /* bits 8:8 */
    ca_uint32_t dqm_rmu_rdy          :  1 ; /* bits 9:9 */
    ca_uint32_t rmuhdr_fifo_dout_vld :  1 ; /* bits 10:10 */
    ca_uint32_t rmuhdr_fifo_rd       :  1 ; /* bits 11:11 */
    ca_uint32_t rmudata_fifo_dout_vld :  1 ; /* bits 12:12 */
    ca_uint32_t rmu_fifo_data_rdy    :  1 ; /* bits 13:13 */
    ca_uint32_t rx_axi_fifo_almost_full :  1 ; /* bits 14:14 */
    ca_uint32_t rmu_lkup_flag        :  1 ; /* bits 15:15 */
    ca_uint32_t rx_axi_fifo_empty    :  1 ; /* bits 16:16 */
    ca_uint32_t lkup_axi_start       :  1 ; /* bits 17:17 */
    ca_uint32_t rmu_axi_write_rdy    :  1 ; /* bits 18:18 */
    ca_uint32_t rmu_lkup_pending     :  1 ; /* bits 19:19 */
    ca_uint32_t qm_fe_rdy            :  1 ; /* bits 20:20 */
    ca_uint32_t rmudata_fifo_almost_full :  1 ; /* bits 21:21 */
    ca_uint32_t rmuhdr_fifo_almost_full :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t outstd_axi_cmd_cntr  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS2                         0xf430688c
#define QM_QM_DEBUG_STS2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rmu_lkup_bid         : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ncpu_rmu_rd          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS3                         0xf4306890
#define QM_QM_DEBUG_STS3_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rmu_lkup_cur_bid     : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t cpu_rmu_rd           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS3_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS4                         0xf4306894
#define QM_QM_DEBUG_STS4_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rmu_lkup_paddr       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS4_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS5                         0xf4306898
#define QM_QM_DEBUG_STS5_dft                     0x08000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_bridge_eop_cntr   : 16 ; /* bits 15:0 */
    ca_uint32_t eqm_stack15_cntr     :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t axiatt_tmu_lkup_ack  :  1 ; /* bits 24:24 */
    ca_uint32_t tmu_axiatt_lkup_req  :  1 ; /* bits 25:25 */
    ca_uint32_t tmu_axi_strt         :  1 ; /* bits 26:26 */
    ca_uint32_t qm_ni_bridge_fifo_wr_rdy :  1 ; /* bits 27:27 */
    ca_uint32_t sch_dqm_req          :  1 ; /* bits 28:28 */
    ca_uint32_t tmu_tx_vld           :  1 ; /* bits 29:29 */
    ca_uint32_t axi_att_lkup_ack_flag :  1 ; /* bits 30:30 */
    ca_uint32_t tmu_eqm_done         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS5_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS6                         0xf430689c
#define QM_QM_DEBUG_STS6_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmu_axi_gnt_cntr     : 16 ; /* bits 15:0 */
    ca_uint32_t dqm_tmu_ack_cntr     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS6_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS7                         0xf43068a0
#define QM_QM_DEBUG_STS7_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmu_axi_eof_cntr     : 16 ; /* bits 15:0 */
    ca_uint32_t ni_fifo_eop_cntr     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS7_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS8                         0xf43068a4
#define QM_QM_DEBUG_STS8_dft                     0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmu_axi_wr_ths       : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t ni_bridge_drain_pid  :  3 ; /* bits 30:28 */
    ca_uint32_t ni_bridge_drain_en   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS8_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS9                         0xf43068a8
#define QM_QM_DEBUG_STS9_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmu_axi_beat_add_max : 16 ; /* bits 15:0 */
    ca_uint32_t tmu_axi_beat_add     : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS9_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_STS10                        0xf43068ac
#define QM_QM_DEBUG_STS10_dft                    0xdead0419

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rmu_test             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_STS10_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BUFFER_CNTL                        0xf43068b0
#define QM_QM_BUFFER_CNTL_dft                    0x1034b2ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_speed_select    :  8 ; /* bits 7:0 */
    ca_uint32_t occupied_buffer_ths  :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t minimum_bytes        :  3 ; /* bits 14:12 */
    ca_uint32_t low_latency_en       :  1 ; /* bits 15:15 */
    ca_uint32_t eq_profile_rule0_eqp0_limit :  4 ; /* bits 19:16 */
    ca_uint32_t timer_divider_constant :  6 ; /* bits 25:20 */
    ca_uint32_t multi_axi_wr_id_en   :  1 ; /* bits 26:26 */
    ca_uint32_t alternate_eq_en      :  1 ; /* bits 27:27 */
    ca_uint32_t tmu_burst_size       :  2 ; /* bits 29:28 */
    ca_uint32_t jumbo_buffer_en      :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BUFFER_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_LATENCY_TIMER_CFG                  0xf43068b4
#define QM_QM_LATENCY_TIMER_CFG_dft              0x3f3f0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timer_profile_sel_ni0 :  1 ; /* bits 0:0 */
    ca_uint32_t timer_profile_sel_ni1 :  1 ; /* bits 1:1 */
    ca_uint32_t timer_profile_sel_ni2 :  1 ; /* bits 2:2 */
    ca_uint32_t timer_profile_sel_ni3 :  1 ; /* bits 3:3 */
    ca_uint32_t timer_profile_sel_ni4 :  1 ; /* bits 4:4 */
    ca_uint32_t timer_profile_sel_ni5 :  1 ; /* bits 5:5 */
    ca_uint32_t timer_profile_sel_ni6 :  1 ; /* bits 6:6 */
    ca_uint32_t timer_profile_sel_ni7 :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t ths0                 :  8 ; /* bits 23:16 */
    ca_uint32_t ths1                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_LATENCY_TIMER_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BUFFER_INT_SRC                     0xf43068b8
#define QM_QM_BUFFER_INT_SRC_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_fifo_error_int_src :  1 ; /* bits 0:0 */
    ca_uint32_t ni_pp_pkt_error_int_src :  1 ; /* bits 1:1 */
    ca_uint32_t sta_fifo_error_int_src :  1 ; /* bits 2:2 */
    ca_uint32_t qm_rmu_buf_error_int_src :  1 ; /* bits 3:3 */
    ca_uint32_t qm_te_rmu_error_int_src :  1 ; /* bits 4:4 */
    ca_uint32_t qm_te_tmu_error_int_src :  1 ; /* bits 5:5 */
    ca_uint32_t qm_te_es_error_int_src :  1 ; /* bits 6:6 */
    ca_uint32_t axi_id_cfg_error_int_src :  1 ; /* bits 7:7 */
    ca_uint32_t axi_wr_reorder_resp_error_int_src :  1 ; /* bits 8:8 */
    ca_uint32_t axi_wr_reorder_fifo_error_int_src :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 17 ;
    ca_uint32_t qm_eqm_eq_load_cfg_error_int_src :  1 ; /* bits 27:27 */
    ca_uint32_t qm_eqm_no_buf_error_int_src :  1 ; /* bits 28:28 */
    ca_uint32_t qm_configuration_error_int_src :  1 ; /* bits 29:29 */
    ca_uint32_t qm_bb_wptr_empty_int_src :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BUFFER_INT_SRC_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BUFFER_INT_SRCE                    0xf43068bc
#define QM_QM_BUFFER_INT_SRCE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_fifo_error_int_srcE :  1 ; /* bits 0:0 */
    ca_uint32_t ni_pp_pkt_error_int_srcE :  1 ; /* bits 1:1 */
    ca_uint32_t sta_fifo_error_int_srcE :  1 ; /* bits 2:2 */
    ca_uint32_t qm_rmu_buf_error_int_srcE :  1 ; /* bits 3:3 */
    ca_uint32_t qm_te_rmu_error_int_srcE :  1 ; /* bits 4:4 */
    ca_uint32_t qm_te_tmu_error_int_srcE :  1 ; /* bits 5:5 */
    ca_uint32_t qm_te_es_error_int_srcE :  1 ; /* bits 6:6 */
    ca_uint32_t axi_id_cfg_error_int_srcE :  1 ; /* bits 7:7 */
    ca_uint32_t axi_wr_reorder_resp_error_int_srcE :  1 ; /* bits 8:8 */
    ca_uint32_t axi_wr_reorder_fifo_error_int_srcE :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 17 ;
    ca_uint32_t qm_eqm_eq_load_cfg_error_int_srcE :  1 ; /* bits 27:27 */
    ca_uint32_t qm_eqm_no_buf_error_int_srcE :  1 ; /* bits 28:28 */
    ca_uint32_t qm_configuration_error_int_srcE :  1 ; /* bits 29:29 */
    ca_uint32_t qm_bb_wptr_empty_int_srcE :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BUFFER_INT_SRCE_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_OVER_THS_STATUS2               0xf43068c0
#define QM_QM_VOQ_OVER_THS_STATUS2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_OVER_THS_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_OVER_THS_STATUS3               0xf43068c4
#define QM_QM_VOQ_OVER_THS_STATUS3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_OVER_THS_STATUS3_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_OVER_THS_STATUS4               0xf43068c8
#define QM_QM_VOQ_OVER_THS_STATUS4_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_OVER_THS_STATUS4_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_OVER_THS_STATUS5               0xf43068cc
#define QM_QM_VOQ_OVER_THS_STATUS5_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_OVER_THS_STATUS5_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_OVER_THS_STATUS6               0xf43068d0
#define QM_QM_VOQ_OVER_THS_STATUS6_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_OVER_THS_STATUS6_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_VOQ_OVER_THS_STATUS7               0xf43068d4
#define QM_QM_VOQ_OVER_THS_STATUS7_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_VOQ_OVER_THS_STATUS7_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BURST_BUF_DEBUG_STATUS             0xf43068d8
#define QM_QM_BURST_BUF_DEBUG_STATUS_dft         0x0000ff7f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fifo_empty           :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rmu_fifo_empty       :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BURST_BUF_DEBUG_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BURST_BUF_V_FIFO_STATUS0           0xf43068dc
#define QM_QM_BURST_BUF_V_FIFO_STATUS0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BURST_BUF_V_FIFO_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BURST_BUF_V_FIFO_STATUS1           0xf43068e0
#define QM_QM_BURST_BUF_V_FIFO_STATUS1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BURST_BUF_V_FIFO_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BURST_BUF_DEBUG_CNTR               0xf43068e4
#define QM_QM_BURST_BUF_DEBUG_CNTR_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t close_buf_cmd_cntr   : 16 ; /* bits 15:0 */
    ca_uint32_t close_buf_cmd_proc_cntr : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BURST_BUF_DEBUG_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BURST_BUF_DEBUG_SEG_ID             0xf43068e8
#define QM_QM_BURST_BUF_DEBUG_SEG_ID_dft         0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seg_id               :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BURST_BUF_DEBUG_SEG_ID_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BURST_BUF_SEG_ID_MONITOR           0xf43068ec
#define QM_QM_BURST_BUF_SEG_ID_MONITOR_dft       0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rptr_fifo_cntr       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t wptr_fifo_cntr       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BURST_BUF_SEG_ID_MONITOR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DEBUG_CFG                          0xf43068f0
#define QM_QM_DEBUG_CFG_dft                      0x000000bb

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t te_report            :  1 ; /* bits 0:0 */
    ca_uint32_t te_report_1          :  1 ; /* bits 1:1 */
    ca_uint32_t eq_sel               :  1 ; /* bits 2:2 */
    ca_uint32_t bug_51590_fix_en     :  1 ; /* bits 3:3 */
    ca_uint32_t te_report_fifo_en    :  1 ; /* bits 4:4 */
    ca_uint32_t te_report_timer_constant :  3 ; /* bits 7:5 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DEBUG_CFG_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EPP                                0xf43068f4
#define QM_QM_EPP_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t map                  :  1 ; /* bits 0:0 */
    ca_uint32_t aggr_mode            :  1 ; /* bits 1:1 */
    ca_uint32_t cmd_mode             :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EPP_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_UPPER_LDPID_MAP                    0xf43068f8
#define QM_QM_UPPER_LDPID_MAP_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pon_offset           :  3 ; /* bits 2:0 */
    ca_uint32_t pon_en               :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_UPPER_LDPID_MAP_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_TEST_CONTROL_l3qm_bb          0xf43068fc
#define QM_QM_SRAM_TEST_CONTROL_l3qm_bb_dft      0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_TEST_CONTROL_l3qm_bb_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_TEST_CONTROL_l3qm2_0          0xf4306900
#define QM_QM_SRAM_TEST_CONTROL_l3qm2_0_dft      0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_TEST_CONTROL_l3qm2_0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_TEST_CONTROL_l3qm2_1          0xf4306904
#define QM_QM_SRAM_TEST_CONTROL_l3qm2_1_dft      0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_TEST_CONTROL_l3qm2_1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_TEST_CONTROL_l3qm2_2          0xf4306908
#define QM_QM_SRAM_TEST_CONTROL_l3qm2_2_dft      0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_TEST_CONTROL_l3qm2_2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_TEST_CONTROL_l3qm_repair      0xf430690c
#define QM_QM_SRAM_TEST_CONTROL_l3qm_repair_dft  0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_TEST_CONTROL_l3qm_repair_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_TEST_CONTROL_l3qm_repair2     0xf4306910
#define QM_QM_SRAM_TEST_CONTROL_l3qm_repair2_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_TEST_CONTROL_l3qm_repair2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_LS_CONTROL_0                  0xf4306914
#define QM_QM_SRAM_LS_CONTROL_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3qm2_sramls         : 10 ; /* bits 9:0 */
    ca_uint32_t l3qm_bb_sramls       :  2 ; /* bits 11:10 */
    ca_uint32_t l3qm_repair2_sramls  :  1 ; /* bits 12:12 */
    ca_uint32_t l3qm_sramls          :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_LS_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_SRAM_LS_CONTROL_1                  0xf4306918
#define QM_QM_SRAM_LS_CONTROL_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3te1_sramls         :  9 ; /* bits 8:0 */
    ca_uint32_t l3te2_sramls         :  6 ; /* bits 14:9 */
    ca_uint32_t l3te3_sramls         : 10 ; /* bits 24:15 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_SRAM_LS_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_BACK_PRES_CTRL                     0xf430691c
#define QM_QM_BACK_PRES_CTRL_dft                 0x0000007f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm_bp_ctrl           : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_BACK_PRES_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_USG_CTRL0                       0xf4306920
#define QM_QM_EQ_USG_CTRL0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_en               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_USG_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ_USG_CTRL1                       0xf4306924
#define QM_QM_EQ_USG_CTRL1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_clr              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ_USG_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ0_BUF_USG_STS                    0xf4306928
#define QM_QM_EQ0_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ0_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ1_BUF_USG_STS                    0xf430692c
#define QM_QM_EQ1_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ1_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ2_BUF_USG_STS                    0xf4306930
#define QM_QM_EQ2_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ2_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ3_BUF_USG_STS                    0xf4306934
#define QM_QM_EQ3_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ3_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ4_BUF_USG_STS                    0xf4306938
#define QM_QM_EQ4_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ4_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ5_BUF_USG_STS                    0xf430693c
#define QM_QM_EQ5_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ5_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ6_BUF_USG_STS                    0xf4306940
#define QM_QM_EQ6_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ6_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ7_BUF_USG_STS                    0xf4306944
#define QM_QM_EQ7_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ7_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ8_BUF_USG_STS                    0xf4306948
#define QM_QM_EQ8_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ8_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ9_BUF_USG_STS                    0xf430694c
#define QM_QM_EQ9_BUF_USG_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ9_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ10_BUF_USG_STS                   0xf4306950
#define QM_QM_EQ10_BUF_USG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ10_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ11_BUF_USG_STS                   0xf4306954
#define QM_QM_EQ11_BUF_USG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ11_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ12_BUF_USG_STS                   0xf4306958
#define QM_QM_EQ12_BUF_USG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ12_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ13_BUF_USG_STS                   0xf430695c
#define QM_QM_EQ13_BUF_USG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ13_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ14_BUF_USG_STS                   0xf4306960
#define QM_QM_EQ14_BUF_USG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ14_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_EQ15_BUF_USG_STS                   0xf4306964
#define QM_QM_EQ15_BUF_USG_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_EQ15_BUF_USG_STS_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_ES_CTRL2                           0xf4306968
#define QM_QM_ES_CTRL2_dft                       0x00040300

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm_ni_es_pkt_ctrl    :  1 ; /* bits 0:0 */
    ca_uint32_t ni_qm_hol_pkt_ctrl   :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t qm_ni_bridge_fifo_rd_thr :  7 ; /* bits 10:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t qm_ni_bridge_fifo_wr_thr :  8 ; /* bits 19:12 */
    ca_uint32_t rsrvd3               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_ES_CTRL2_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_RMU0_CTRL1                         0xf430696c
#define QM_QM_RMU0_CTRL1_dft                     0x0322d380

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rmudata_fifo_bp_ctrl :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t qm_bb_bp_thr_on      :  7 ; /* bits 10:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t qm_bb_bp_thr_off     :  7 ; /* bits 18:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t rmudata_almost_full_thr :  7 ; /* bits 26:20 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_RMU0_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DBG_CTRL                           0xf4306970
#define QM_QM_DBG_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm_dbg_en            :  1 ; /* bits 0:0 */
    ca_uint32_t qm_dbg_clr           :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t qm_dbg_sel           :  4 ; /* bits 11:8 */
    ca_uint32_t force_qm_nitx_rdy    :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DBG_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_DBG_STATUS                         0xf4306974
#define QM_QM_DBG_STATUS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_DBG_STATUS_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* qm */
#ifndef __ASSEMBLER__
typedef struct {
  QM_QM_REVISION_t                         REVISION;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  QM_QM_RMU0_CTRL_t                        RMU0_CTRL;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  QM_QM_ES_CTRL_t                          ES_CTRL;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  QM_QM_ES_CTRL1_t                         ES_CTRL1;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  QM_QM_EPP64_P3_0_INTERRUPT_EN_t          EPP64_P3_0_INTERRUPT_EN;       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  QM_QM_EPP64_P7_4_INTERRUPT_EN_t          EPP64_P7_4_INTERRUPT_EN;       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  QM_QM_EQ_REFILL_INTERRUPT_EN_t           EQ_REFILL_INTERRUPT_EN;        /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  QM_QM_INT_SRC_t                          INT_SRC;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  QM_QM_INT_SRCE_t                         INT_SRCE;                      /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  QM_QM_AXI_QOS_CFG_t                      AXI_QOS_CFG;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  QM_QM_EQ_PROFILE0_t                      EQ_PROFILE0;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[31];
  QM_QM_DEST_PORT0_EQ_CFG_t                DEST_PORT0_EQ_CFG;             /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd12[127];
  QM_QM_DEST_PORT0_PKT_BUF_CFG_t           DEST_PORT0_PKT_BUF_CFG;        /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd13[31];
  QM_QM_CFG0_EQ0_t                         CFG0_EQ0;                      /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd14[3];
  QM_QM_CFG1_EQ0_t                         CFG1_EQ0;                      /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd15[3];
  QM_QM_CFG2_EQ0_t                         CFG2_EQ0;                      /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd16[3];
  QM_QM_CFG3_EQ0_t                         CFG3_EQ0;                      /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd17[3];
  QM_QM_CFG4_EQ0_t                         CFG4_EQ0;                      /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd18[303];
  QM_QM_EQM_PA_REQ0_t                      EQM_PA_REQ0;                   /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd19[63];
  QM_QM_CPU_PUSH_RDY0_t                    CPU_PUSH_RDY0;                 /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd20[3];
  QM_QM_CPU_PUSH_PADDR0_t                  CPU_PUSH_PADDR0;               /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd21[59];
  QM_QM_EQ_CFG_LOAD_t                      EQ_CFG_LOAD;                   /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd22[3];
  QM_QM_EQ_PHY_ADDR_RETURN_CTRL_t          EQ_PHY_ADDR_RETURN_CTRL;       /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd23[3];
  QM_QM_EQ_RETURN_PHY_ADDR_t               EQ_RETURN_PHY_ADDR;            /* addr: 0x000002b0 */
  ca_uint32_t                              rsrvd24[3];
  QM_QM_ACTIVE_STACK_CFG_t                 ACTIVE_STACK_CFG;              /* addr: 0x000002b4 */
  ca_uint32_t                              rsrvd25[3];
  QM_QM_INACTIVE_STACK_CFG_t               INACTIVE_STACK_CFG;            /* addr: 0x000002b8 */
  ca_uint32_t                              rsrvd26[3];
  QM_QM_EQ_STACK_CTRL_t                    EQ_STACK_CTRL;                 /* addr: 0x000002bc */
  ca_uint32_t                              rsrvd27[3];
  QM_QM_EQ_STACK_UNFILL_STS_t              EQ_STACK_UNFILL_STS;           /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd28[3];
  QM_QM_SCH_CFG0_t                         SCH_CFG0;                      /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd29[127];
  QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_t         VOQ3_0_WEIGHT_RATIO_CFG0;      /* addr: 0x00000344 */
  ca_uint32_t                              rsrvd30[3];
  QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_t         VOQ7_4_WEIGHT_RATIO_CFG0;      /* addr: 0x00000348 */
  ca_uint32_t                              rsrvd31[251];
  QM_QM_PORT7_0_WEIGHT_RATIO_CFG_t         PORT7_0_WEIGHT_RATIO_CFG;      /* addr: 0x00000444 */
  ca_uint32_t                              rsrvd32[3];
  QM_QM_PORT15_8_WEIGHT_RATIO_CFG_t        PORT15_8_WEIGHT_RATIO_CFG;     /* addr: 0x00000448 */
  ca_uint32_t                              rsrvd33[3];
  QM_QM_PORT23_16_WEIGHT_RATIO_CFG_t       PORT23_16_WEIGHT_RATIO_CFG;    /* addr: 0x0000044c */
  ca_uint32_t                              rsrvd34[3];
  QM_QM_PORT31_24_WEIGHT_RATIO_CFG_t       PORT31_24_WEIGHT_RATIO_CFG;    /* addr: 0x00000450 */
  ca_uint32_t                              rsrvd35[3];
  QM_QM_DRR_WEIGHT_BASE_t                  DRR_WEIGHT_BASE;               /* addr: 0x00000454 */
  ca_uint32_t                              rsrvd36[3];
  QM_QM_CPU_EPP0_CFG_t                     CPU_EPP0_CFG;                  /* addr: 0x00000458 */
  ca_uint32_t                              rsrvd37[31];
  QM_QM_CPU_EPP_CT_CFG_t                   CPU_EPP_CT_CFG;                /* addr: 0x00000478 */
  ca_uint32_t                              rsrvd38[3];
  QM_QM_CPU_EPP_FIFO_CFG_profile0_t        CPU_EPP_FIFO_CFG_profile0;     /* addr: 0x0000047c */
  ca_uint32_t                              rsrvd39[31];
  QM_QM_CPU_EPP_STATUS0_t                  CPU_EPP_STATUS0;               /* addr: 0x0000049c */
  ca_uint32_t                              rsrvd40[3];
  QM_QM_CPU_EPP_STATUS1_t                  CPU_EPP_STATUS1;               /* addr: 0x000004a0 */
  ca_uint32_t                              rsrvd41[3];
  QM_QM_CPU_EPP_FIFO0_0_CFG_t              CPU_EPP_FIFO0_0_CFG;           /* addr: 0x000004a4 */
  ca_uint32_t                              rsrvd42[255];
  QM_QM_AXI_ATTRIBUTE_ACCESS_t             AXI_ATTRIBUTE_ACCESS;          /* addr: 0x000005a4 */
  ca_uint32_t                              rsrvd43[3];
  QM_QM_AXI_ATTRIBUTE_DATA1_t              AXI_ATTRIBUTE_DATA1;           /* addr: 0x000005a8 */
  ca_uint32_t                              rsrvd44[3];
  QM_QM_AXI_ATTRIBUTE_DATA0_t              AXI_ATTRIBUTE_DATA0;           /* addr: 0x000005ac */
  ca_uint32_t                              rsrvd45[3];
  QM_QM_BID_PADDR_LKUP_ACCESS_t            BID_PADDR_LKUP_ACCESS;         /* addr: 0x000005b0 */
  ca_uint32_t                              rsrvd46[3];
  QM_QM_BID_PADDR_LKUP_DATA_t              BID_PADDR_LKUP_DATA;           /* addr: 0x000005b4 */
  ca_uint32_t                              rsrvd47[3];
  QM_QM_VOQ_INFO_MEMORY_ACCESS_t           VOQ_INFO_MEMORY_ACCESS;        /* addr: 0x000005b8 */
  ca_uint32_t                              rsrvd48[3];
  QM_QM_VOQ_INFO_MEMORY_DATA2_t            VOQ_INFO_MEMORY_DATA2;         /* addr: 0x000005bc */
  ca_uint32_t                              rsrvd49[3];
  QM_QM_VOQ_INFO_MEMORY_DATA1_t            VOQ_INFO_MEMORY_DATA1;         /* addr: 0x000005c0 */
  ca_uint32_t                              rsrvd50[3];
  QM_QM_VOQ_INFO_MEMORY_DATA0_t            VOQ_INFO_MEMORY_DATA0;         /* addr: 0x000005c4 */
  ca_uint32_t                              rsrvd51[3];
  QM_QM_HEADER_MEMORY_ACCESS_t             HEADER_MEMORY_ACCESS;          /* addr: 0x000005c8 */
  ca_uint32_t                              rsrvd52[3];
  QM_QM_HEADER_MEMORY_DATA1_t              HEADER_MEMORY_DATA1;           /* addr: 0x000005cc */
  ca_uint32_t                              rsrvd53[3];
  QM_QM_HEADER_MEMORY_DATA0_t              HEADER_MEMORY_DATA0;           /* addr: 0x000005d0 */
  ca_uint32_t                              rsrvd54[3];
  QM_QM_HDM_WRITE_PROTECTION_t             HDM_WRITE_PROTECTION;          /* addr: 0x000005d4 */
  ca_uint32_t                              rsrvd55[3];
  QM_QM_MONITOR0_EQ0_t                     MONITOR0_EQ0;                  /* addr: 0x000005d8 */
  ca_uint32_t                              rsrvd56[3];
  QM_QM_MONITOR1_EQ0_t                     MONITOR1_EQ0;                  /* addr: 0x000005dc */
  ca_uint32_t                              rsrvd57[3];
  QM_QM_MONITOR2_EQ0_t                     MONITOR2_EQ0;                  /* addr: 0x000005e0 */
  ca_uint32_t                              rsrvd58[3];
  QM_QM_MONITOR3_EQ0_t                     MONITOR3_EQ0;                  /* addr: 0x000005e4 */
  ca_uint32_t                              rsrvd59[243];
  QM_QM_RMU0_RX_PKT_CNTR_t                 RMU0_RX_PKT_CNTR;              /* addr: 0x000006d8 */
  ca_uint32_t                              rsrvd60[3];
  QM_QM_RMU0_RX_PACKET_HEADER_INFO1_t      RMU0_RX_PACKET_HEADER_INFO1;   /* addr: 0x000006dc */
  ca_uint32_t                              rsrvd61[3];
  QM_QM_RMU0_RX_PACKET_HEADER_INFO0_t      RMU0_RX_PACKET_HEADER_INFO0;   /* addr: 0x000006e0 */
  ca_uint32_t                              rsrvd62[3];
  QM_QM_TX_PKT_CNTR_t                      TX_PKT_CNTR;                   /* addr: 0x000006e4 */
  ca_uint32_t                              rsrvd63[3];
  QM_QM_TX_PKT_CNTR_ALL_NI_t               TX_PKT_CNTR_ALL_NI;            /* addr: 0x000006e8 */
  ca_uint32_t                              rsrvd64[3];
  QM_QM_TX_PKT_CNTR_CPU0_t                 TX_PKT_CNTR_CPU0;              /* addr: 0x000006ec */
  ca_uint32_t                              rsrvd65[31];
  QM_QM_TX_PACKET_HEADER_INFO1_t           TX_PACKET_HEADER_INFO1;        /* addr: 0x0000070c */
  ca_uint32_t                              rsrvd66[3];
  QM_QM_TX_PACKET_HEADER_INFO0_t           TX_PACKET_HEADER_INFO0;        /* addr: 0x00000710 */
  ca_uint32_t                              rsrvd67[3];
  QM_QM_RMU0_NO_BUF_DROP_PKT_INFO_t        RMU0_NO_BUF_DROP_PKT_INFO;     /* addr: 0x00000714 */
  ca_uint32_t                              rsrvd68[3];
  QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR_t        RMU0_NO_BUF_DROP_PKT_CNTR;     /* addr: 0x00000718 */
  ca_uint32_t                              rsrvd69[3];
  QM_QM_RMU0_FE_DROP_PKT_CNTR_t            RMU0_FE_DROP_PKT_CNTR;         /* addr: 0x0000071c */
  ca_uint32_t                              rsrvd70[3];
  QM_QM_RX_EOP_DROP_CNTR_t                 RX_EOP_DROP_CNTR;              /* addr: 0x00000720 */
  ca_uint32_t                              rsrvd71[3];
  QM_QM_RX_LEN_CHK_ERROR_CNTR_t            RX_LEN_CHK_ERROR_CNTR;         /* addr: 0x00000724 */
  ca_uint32_t                              rsrvd72[3];
  QM_QM_RX_L2TE_TAIL_DROP_CNTR_t           RX_L2TE_TAIL_DROP_CNTR;        /* addr: 0x00000728 */
  ca_uint32_t                              rsrvd73[3];
  QM_QM_TX_CRC_ERROR_NI_CNTR_t             TX_CRC_ERROR_NI_CNTR;          /* addr: 0x0000072c */
  ca_uint32_t                              rsrvd74[3];
  QM_QM_VOQ_STATUS0_t                      VOQ_STATUS0;                   /* addr: 0x00000730 */
  ca_uint32_t                              rsrvd75[3];
  QM_QM_VOQ_STATUS1_t                      VOQ_STATUS1;                   /* addr: 0x00000734 */
  ca_uint32_t                              rsrvd76[3];
  QM_QM_VOQ_STATUS2_t                      VOQ_STATUS2;                   /* addr: 0x00000738 */
  ca_uint32_t                              rsrvd77[3];
  QM_QM_VOQ_STATUS3_t                      VOQ_STATUS3;                   /* addr: 0x0000073c */
  ca_uint32_t                              rsrvd78[3];
  QM_QM_VOQ_STATUS4_t                      VOQ_STATUS4;                   /* addr: 0x00000740 */
  ca_uint32_t                              rsrvd79[3];
  QM_QM_VOQ_STATUS5_t                      VOQ_STATUS5;                   /* addr: 0x00000744 */
  ca_uint32_t                              rsrvd80[3];
  QM_QM_VOQ_STATUS6_t                      VOQ_STATUS6;                   /* addr: 0x00000748 */
  ca_uint32_t                              rsrvd81[3];
  QM_QM_VOQ_STATUS7_t                      VOQ_STATUS7;                   /* addr: 0x0000074c */
  ca_uint32_t                              rsrvd82[3];
  QM_QM_PHY_PORT_STS_t                     PHY_PORT_STS;                  /* addr: 0x00000750 */
  ca_uint32_t                              rsrvd83[3];
  QM_QM_SUB_MODULE_STS_t                   SUB_MODULE_STS;                /* addr: 0x00000754 */
  ca_uint32_t                              rsrvd84[3];
  QM_QM_RMU0_FIFO_STS_t                    RMU0_FIFO_STS;                 /* addr: 0x00000758 */
  ca_uint32_t                              rsrvd85[3];
  QM_QM_CPUEPP_STS_t                       CPUEPP_STS;                    /* addr: 0x0000075c */
  ca_uint32_t                              rsrvd86[3];
  QM_QM_CPUEPP_SM_STS_t                    CPUEPP_SM_STS;                 /* addr: 0x00000760 */
  ca_uint32_t                              rsrvd87[3];
  QM_QM_CPUEPP_AXI_CNT_STS_t               CPUEPP_AXI_CNT_STS;            /* addr: 0x00000764 */
  ca_uint32_t                              rsrvd88[3];
  QM_QM_DQM_FIFO_STS_t                     DQM_FIFO_STS;                  /* addr: 0x00000768 */
  ca_uint32_t                              rsrvd89[3];
  QM_QM_TMU_FIFO_STS_t                     TMU_FIFO_STS;                  /* addr: 0x0000076c */
  ca_uint32_t                              rsrvd90[3];
  QM_QM_NI_BRIDGE_FIFO_STS_t               NI_BRIDGE_FIFO_STS;            /* addr: 0x00000770 */
  ca_uint32_t                              rsrvd91[3];
  QM_QM_SPARE_CFG_t                        SPARE_CFG;                     /* addr: 0x00000774 */
  ca_uint32_t                              rsrvd92[3];
  QM_QM_SPARE_STS_t                        SPARE_STS;                     /* addr: 0x00000778 */
  ca_uint32_t                              rsrvd93[3];
  QM_QM_DEBUG_DATA1_t                      DEBUG_DATA1;                   /* addr: 0x0000077c */
  ca_uint32_t                              rsrvd94[3];
  QM_QM_DEBUG_DATA0_t                      DEBUG_DATA0;                   /* addr: 0x00000780 */
  ca_uint32_t                              rsrvd95[3];
  QM_QM_DEBUG_STS0_t                       DEBUG_STS0;                    /* addr: 0x00000784 */
  ca_uint32_t                              rsrvd96[3];
  QM_QM_DEBUG_STS1_t                       DEBUG_STS1;                    /* addr: 0x00000788 */
  ca_uint32_t                              rsrvd97[3];
  QM_QM_DEBUG_STS2_t                       DEBUG_STS2;                    /* addr: 0x0000078c */
  ca_uint32_t                              rsrvd98[3];
  QM_QM_DEBUG_STS3_t                       DEBUG_STS3;                    /* addr: 0x00000790 */
  ca_uint32_t                              rsrvd99[3];
  QM_QM_DEBUG_STS4_t                       DEBUG_STS4;                    /* addr: 0x00000794 */
  ca_uint32_t                              rsrvd100[3];
  QM_QM_DEBUG_STS5_t                       DEBUG_STS5;                    /* addr: 0x00000798 */
  ca_uint32_t                              rsrvd101[3];
  QM_QM_DEBUG_STS6_t                       DEBUG_STS6;                    /* addr: 0x0000079c */
  ca_uint32_t                              rsrvd102[3];
  QM_QM_DEBUG_STS7_t                       DEBUG_STS7;                    /* addr: 0x000007a0 */
  ca_uint32_t                              rsrvd103[3];
  QM_QM_DEBUG_STS8_t                       DEBUG_STS8;                    /* addr: 0x000007a4 */
  ca_uint32_t                              rsrvd104[3];
  QM_QM_DEBUG_STS9_t                       DEBUG_STS9;                    /* addr: 0x000007a8 */
  ca_uint32_t                              rsrvd105[3];
  QM_QM_DEBUG_STS10_t                      DEBUG_STS10;                   /* addr: 0x000007ac */
  ca_uint32_t                              rsrvd106[3];
  QM_QM_BUFFER_CNTL_t                      BUFFER_CNTL;                   /* addr: 0x000007b0 */
  ca_uint32_t                              rsrvd107[3];
  QM_QM_LATENCY_TIMER_CFG_t                LATENCY_TIMER_CFG;             /* addr: 0x000007b4 */
  ca_uint32_t                              rsrvd108[3];
  QM_QM_BUFFER_INT_SRC_t                   BUFFER_INT_SRC;                /* addr: 0x000007b8 */
  ca_uint32_t                              rsrvd109[3];
  QM_QM_BUFFER_INT_SRCE_t                  BUFFER_INT_SRCE;               /* addr: 0x000007bc */
  ca_uint32_t                              rsrvd110[3];
  QM_QM_VOQ_OVER_THS_STATUS2_t             VOQ_OVER_THS_STATUS2;          /* addr: 0x000007c0 */
  ca_uint32_t                              rsrvd111[3];
  QM_QM_VOQ_OVER_THS_STATUS3_t             VOQ_OVER_THS_STATUS3;          /* addr: 0x000007c4 */
  ca_uint32_t                              rsrvd112[3];
  QM_QM_VOQ_OVER_THS_STATUS4_t             VOQ_OVER_THS_STATUS4;          /* addr: 0x000007c8 */
  ca_uint32_t                              rsrvd113[3];
  QM_QM_VOQ_OVER_THS_STATUS5_t             VOQ_OVER_THS_STATUS5;          /* addr: 0x000007cc */
  ca_uint32_t                              rsrvd114[3];
  QM_QM_VOQ_OVER_THS_STATUS6_t             VOQ_OVER_THS_STATUS6;          /* addr: 0x000007d0 */
  ca_uint32_t                              rsrvd115[3];
  QM_QM_VOQ_OVER_THS_STATUS7_t             VOQ_OVER_THS_STATUS7;          /* addr: 0x000007d4 */
  ca_uint32_t                              rsrvd116[3];
  QM_QM_BURST_BUF_DEBUG_STATUS_t           BURST_BUF_DEBUG_STATUS;        /* addr: 0x000007d8 */
  ca_uint32_t                              rsrvd117[3];
  QM_QM_BURST_BUF_V_FIFO_STATUS0_t         BURST_BUF_V_FIFO_STATUS0;      /* addr: 0x000007dc */
  ca_uint32_t                              rsrvd118[3];
  QM_QM_BURST_BUF_V_FIFO_STATUS1_t         BURST_BUF_V_FIFO_STATUS1;      /* addr: 0x000007e0 */
  ca_uint32_t                              rsrvd119[3];
  QM_QM_BURST_BUF_DEBUG_CNTR_t             BURST_BUF_DEBUG_CNTR;          /* addr: 0x000007e4 */
  ca_uint32_t                              rsrvd120[3];
  QM_QM_BURST_BUF_DEBUG_SEG_ID_t           BURST_BUF_DEBUG_SEG_ID;        /* addr: 0x000007e8 */
  ca_uint32_t                              rsrvd121[3];
  QM_QM_BURST_BUF_SEG_ID_MONITOR_t         BURST_BUF_SEG_ID_MONITOR;      /* addr: 0x000007ec */
  ca_uint32_t                              rsrvd122[3];
  QM_QM_DEBUG_CFG_t                        DEBUG_CFG;                     /* addr: 0x000007f0 */
  ca_uint32_t                              rsrvd123[3];
  QM_QM_EPP_t                              EPP;                           /* addr: 0x000007f4 */
  ca_uint32_t                              rsrvd124[3];
  QM_QM_UPPER_LDPID_MAP_t                  UPPER_LDPID_MAP;               /* addr: 0x000007f8 */
  ca_uint32_t                              rsrvd125[3];
  QM_QM_SRAM_TEST_CONTROL_l3qm_bb_t        SRAM_TEST_CONTROL_l3qm_bb;     /* addr: 0x000007fc */
  ca_uint32_t                              rsrvd126[3];
  QM_QM_SRAM_TEST_CONTROL_l3qm2_0_t        SRAM_TEST_CONTROL_l3qm2_0;     /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd127[3];
  QM_QM_SRAM_TEST_CONTROL_l3qm2_1_t        SRAM_TEST_CONTROL_l3qm2_1;     /* addr: 0x00000804 */
  ca_uint32_t                              rsrvd128[3];
  QM_QM_SRAM_TEST_CONTROL_l3qm2_2_t        SRAM_TEST_CONTROL_l3qm2_2;     /* addr: 0x00000808 */
  ca_uint32_t                              rsrvd129[3];
  QM_QM_SRAM_TEST_CONTROL_l3qm_repair_t    SRAM_TEST_CONTROL_l3qm_repair; /* addr: 0x0000080c */
  ca_uint32_t                              rsrvd130[3];
  QM_QM_SRAM_TEST_CONTROL_l3qm_repair2_t   SRAM_TEST_CONTROL_l3qm_repair2; /* addr: 0x00000810 */
  ca_uint32_t                              rsrvd131[3];
  QM_QM_SRAM_LS_CONTROL_0_t                SRAM_LS_CONTROL_0;             /* addr: 0x00000814 */
  ca_uint32_t                              rsrvd132[3];
  QM_QM_SRAM_LS_CONTROL_1_t                SRAM_LS_CONTROL_1;             /* addr: 0x00000818 */
  ca_uint32_t                              rsrvd133[3];
  QM_QM_BACK_PRES_CTRL_t                   BACK_PRES_CTRL;                /* addr: 0x0000081c */
  ca_uint32_t                              rsrvd134[3];
  QM_QM_EQ_USG_CTRL0_t                     EQ_USG_CTRL0;                  /* addr: 0x00000820 */
  ca_uint32_t                              rsrvd135[3];
  QM_QM_EQ_USG_CTRL1_t                     EQ_USG_CTRL1;                  /* addr: 0x00000824 */
  ca_uint32_t                              rsrvd136[3];
  QM_QM_EQ0_BUF_USG_STS_t                  EQ0_BUF_USG_STS;               /* addr: 0x00000828 */
  ca_uint32_t                              rsrvd137[3];
  QM_QM_EQ1_BUF_USG_STS_t                  EQ1_BUF_USG_STS;               /* addr: 0x0000082c */
  ca_uint32_t                              rsrvd138[3];
  QM_QM_EQ2_BUF_USG_STS_t                  EQ2_BUF_USG_STS;               /* addr: 0x00000830 */
  ca_uint32_t                              rsrvd139[3];
  QM_QM_EQ3_BUF_USG_STS_t                  EQ3_BUF_USG_STS;               /* addr: 0x00000834 */
  ca_uint32_t                              rsrvd140[3];
  QM_QM_EQ4_BUF_USG_STS_t                  EQ4_BUF_USG_STS;               /* addr: 0x00000838 */
  ca_uint32_t                              rsrvd141[3];
  QM_QM_EQ5_BUF_USG_STS_t                  EQ5_BUF_USG_STS;               /* addr: 0x0000083c */
  ca_uint32_t                              rsrvd142[3];
  QM_QM_EQ6_BUF_USG_STS_t                  EQ6_BUF_USG_STS;               /* addr: 0x00000840 */
  ca_uint32_t                              rsrvd143[3];
  QM_QM_EQ7_BUF_USG_STS_t                  EQ7_BUF_USG_STS;               /* addr: 0x00000844 */
  ca_uint32_t                              rsrvd144[3];
  QM_QM_EQ8_BUF_USG_STS_t                  EQ8_BUF_USG_STS;               /* addr: 0x00000848 */
  ca_uint32_t                              rsrvd145[3];
  QM_QM_EQ9_BUF_USG_STS_t                  EQ9_BUF_USG_STS;               /* addr: 0x0000084c */
  ca_uint32_t                              rsrvd146[3];
  QM_QM_EQ10_BUF_USG_STS_t                 EQ10_BUF_USG_STS;              /* addr: 0x00000850 */
  ca_uint32_t                              rsrvd147[3];
  QM_QM_EQ11_BUF_USG_STS_t                 EQ11_BUF_USG_STS;              /* addr: 0x00000854 */
  ca_uint32_t                              rsrvd148[3];
  QM_QM_EQ12_BUF_USG_STS_t                 EQ12_BUF_USG_STS;              /* addr: 0x00000858 */
  ca_uint32_t                              rsrvd149[3];
  QM_QM_EQ13_BUF_USG_STS_t                 EQ13_BUF_USG_STS;              /* addr: 0x0000085c */
  ca_uint32_t                              rsrvd150[3];
  QM_QM_EQ14_BUF_USG_STS_t                 EQ14_BUF_USG_STS;              /* addr: 0x00000860 */
  ca_uint32_t                              rsrvd151[3];
  QM_QM_EQ15_BUF_USG_STS_t                 EQ15_BUF_USG_STS;              /* addr: 0x00000864 */
  ca_uint32_t                              rsrvd152[3];
  QM_QM_ES_CTRL2_t                         ES_CTRL2;                      /* addr: 0x00000868 */
  ca_uint32_t                              rsrvd153[3];
  QM_QM_RMU0_CTRL1_t                       RMU0_CTRL1;                    /* addr: 0x0000086c */
  ca_uint32_t                              rsrvd154[3];
  QM_QM_DBG_CTRL_t                         DBG_CTRL;                      /* addr: 0x00000870 */
  ca_uint32_t                              rsrvd155[3];
  QM_QM_DBG_STATUS_t                       DBG_STATUS;                    /* addr: 0x00000874 */
} APB0_QM_QM_t;
#endif /* !__ASSEMBLER__ */


/*
 * QM_CPUEPP_POINTER
 */

#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR 0xf4307000
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_COUNT 64
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wptr                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR 0xf4307100
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_COUNT 64
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rptr                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_t;
#endif /* !__ASSEMBLER__ */


#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START 0xf4307200
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_COUNT 64
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t phy_addr             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* QM_CPUEPP_POINTER */
#ifndef __ASSEMBLER__
typedef struct {
  QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_t CPUEPP64_FIFO_WRPTR[64];       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[192];
  QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_t CPUEPP64_FIFO_RDPTR[64];       /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[192];
  QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_t CPUEPP64_FIFO_PADDR_START[64]; /* addr: 0x00000200 */
} APB0_QM_QM_CPUEPP_POINTER_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* QM */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_QM_AXIM2_t                   AXIM2;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[249];
  APB0_QM_QM_t                      qm;                            /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[2757];
  APB0_QM_QM_CPUEPP_POINTER_t       QM_CPUEPP_POINTER;             /* addr: 0x00001000 */
} APB0_QM_t;
#endif /* !__ASSEMBLER__ */


/*
 * TE
 */

/*
 * te_glb
 */

#define TE_TE_GLB_REV_ID                         0xf4309000
#define TE_TE_GLB_REV_ID_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minor                : 16 ; /* bits 15:0 */
    ca_uint32_t major                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_REV_ID_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_CTRL                           0xf4309004
#define TE_TE_GLB_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_en               :  1 ; /* bits 0:0 */
    ca_uint32_t shp_en               :  1 ; /* bits 1:1 */
    ca_uint32_t taildrop_en          :  1 ; /* bits 2:2 */
    ca_uint32_t wred_en              :  1 ; /* bits 3:3 */
    ca_uint32_t mark_ecn_en          :  1 ; /* bits 4:4 */
    ca_uint32_t pol_ecn_en           :  1 ; /* bits 5:5 */
    ca_uint32_t wred_ecn_en          :  1 ; /* bits 6:6 */
    ca_uint32_t l2taildrop_en        :  1 ; /* bits 7:7 */
    ca_uint32_t glb_deepq_voq_rdy_en :  8 ; /* bits 15:8 */
    ca_uint32_t glb_deepq_port_rdy_en :  8 ; /* bits 23:16 */
    ca_uint32_t cm_selection         :  1 ; /* bits 24:24 */
    ca_uint32_t sel3flows            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t puc_tqm_voqbp_dis    :  1 ; /* bits 29:29 */
    ca_uint32_t cntrcfg_clear_on_read :  1 ; /* bits 30:30 */
    ca_uint32_t force_init_done      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_INT                            0xf4309008
#define TE_TE_GLB_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_mark             :  1 ; /* bits 0:0 */
    ca_uint32_t pol_drop             :  1 ; /* bits 1:1 */
    ca_uint32_t taildrop             :  1 ; /* bits 2:2 */
    ca_uint32_t wred_y_drop          :  1 ; /* bits 3:3 */
    ca_uint32_t wred_g_drop          :  1 ; /* bits 4:4 */
    ca_uint32_t ecn                  :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t qm_tail_drop         :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t l2io                 :  1 ; /* bits 13:13 */
    ca_uint32_t feio                 :  1 ; /* bits 14:14 */
    ca_uint32_t qmio                 :  1 ; /* bits 15:15 */
    ca_uint32_t cb                   :  1 ; /* bits 16:16 */
    ca_uint32_t fc                   :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd3               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_INT_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_INTE                           0xf430900c
#define TE_TE_GLB_INTE_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_markE            :  1 ; /* bits 0:0 */
    ca_uint32_t pol_dropE            :  1 ; /* bits 1:1 */
    ca_uint32_t taildropE            :  1 ; /* bits 2:2 */
    ca_uint32_t wred_y_dropE         :  1 ; /* bits 3:3 */
    ca_uint32_t wred_g_dropE         :  1 ; /* bits 4:4 */
    ca_uint32_t ecnE                 :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t qm_tail_dropE        :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t l2ioE                :  1 ; /* bits 13:13 */
    ca_uint32_t feioE                :  1 ; /* bits 14:14 */
    ca_uint32_t qmioE                :  1 ; /* bits 15:15 */
    ca_uint32_t cbE                  :  1 ; /* bits 16:16 */
    ca_uint32_t fcE                  :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd3               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_STS                            0xf4309010
#define TE_TE_GLB_STS_dft                        0x02000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t qmio_enq_ovrn        :  1 ; /* bits 1:1 */
    ca_uint32_t qmio_deq_ovrn        :  1 ; /* bits 2:2 */
    ca_uint32_t qmio_enp_ovrn        :  1 ; /* bits 3:3 */
    ca_uint32_t qmio_dep_ovrn        :  1 ; /* bits 4:4 */
    ca_uint32_t qmio_shp_ovrn        :  1 ; /* bits 5:5 */
    ca_uint32_t te_qm_nrdy           :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t pol_init_done        :  1 ; /* bits 12:12 */
    ca_uint32_t shp_init_done        :  1 ; /* bits 13:13 */
    ca_uint32_t cb_init_done         :  1 ; /* bits 14:14 */
    ca_uint32_t wred_init_done       :  1 ; /* bits 15:15 */
    ca_uint32_t feio_sm              :  4 ; /* bits 19:16 */
    ca_uint32_t fe_te_req            :  1 ; /* bits 20:20 */
    ca_uint32_t te_fe_ack            :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t qmio_idle            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd4               :  5 ;
    ca_uint32_t init_done            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_PTP_CFG                        0xf4309014
#define TE_TE_GLB_PTP_CFG_dft                    0x00000eff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_id               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pol_grp_id           :  3 ; /* bits 11:9 */
    ca_uint32_t pol_en               :  1 ; /* bits 12:12 */
    ca_uint32_t pol_grp_en           :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t debug_sel            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_PTP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SPARE_CFG                      0xf4309018
#define TE_TE_GLB_SPARE_CFG_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SPARE_STS                      0xf430901c
#define TE_TE_GLB_SPARE_STS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_MATCH0                         0xf4309020
#define TE_TE_GLB_MATCH0_STRIDE                  4
#define TE_TE_GLB_MATCH0_COUNT                   16
#define TE_TE_GLB_MATCH0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos_voq_match        :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid_voq_match      :  6 ; /* bits 8:3 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t cos_voq_mask         :  3 ; /* bits 14:12 */
    ca_uint32_t ldpid_voq_mask       :  6 ; /* bits 20:15 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t enable_voq_match     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_MATCH0_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_0      0xf4309060
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_0_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_1      0xf4309064
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_1_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_1_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_2      0xf4309068
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_2_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_2_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_0      0xf430906c
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_0_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_1      0xf4309070
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_1_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_1_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_0      0xf4309074
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_0_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_1      0xf4309078
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_1_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_1_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_2      0xf430907c
#define TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_2_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_2_t;
#endif /* !__ASSEMBLER__ */


#define TE_TE_GLB_TE_PIE_WRED_PORT_ENABLE0       0xf4309080
#define TE_TE_GLB_TE_PIE_WRED_PORT_ENABLE0_STRIDE 4
#define TE_TE_GLB_TE_PIE_WRED_PORT_ENABLE0_COUNT 4
#define TE_TE_GLB_TE_PIE_WRED_PORT_ENABLE0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_TE_GLB_TE_PIE_WRED_PORT_ENABLE0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* te_glb */
#ifndef __ASSEMBLER__
typedef struct {
  TE_TE_GLB_REV_ID_t                       REV_ID;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_TE_GLB_CTRL_t                         CTRL;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_TE_GLB_INT_t                          INT;                           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_TE_GLB_INTE_t                         INTE;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_TE_GLB_STS_t                          STS;                           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_TE_GLB_PTP_CFG_t                      PTP_CFG;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TE_TE_GLB_SPARE_CFG_t                    SPARE_CFG;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TE_TE_GLB_SPARE_STS_t                    SPARE_STS;                     /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  TE_TE_GLB_MATCH0_t                       MATCH0;                        /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[63];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_0_t    SRAM_TEST_CONTROL_l3te1_0;     /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd10[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_1_t    SRAM_TEST_CONTROL_l3te1_1;     /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd11[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te1_2_t    SRAM_TEST_CONTROL_l3te1_2;     /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd12[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_0_t    SRAM_TEST_CONTROL_l3te2_0;     /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd13[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te2_1_t    SRAM_TEST_CONTROL_l3te2_1;     /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd14[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_0_t    SRAM_TEST_CONTROL_l3te3_0;     /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd15[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_1_t    SRAM_TEST_CONTROL_l3te3_1;     /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd16[3];
  TE_TE_GLB_SRAM_TEST_CONTROL_l3te3_2_t    SRAM_TEST_CONTROL_l3te3_2;     /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd17[3];
  TE_TE_GLB_TE_PIE_WRED_PORT_ENABLE0_t     TE_PIE_WRED_PORT_ENABLE0;      /* addr: 0x00000080 */
} APB0_TE_TE_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * pol
 */

#define TE_POL_PKT_TYPE_CTRL0                    0xf4309090
#define TE_POL_PKT_TYPE_CTRL0_STRIDE             4
#define TE_POL_PKT_TYPE_CTRL0_COUNT              8
#define TE_POL_PKT_TYPE_CTRL0_dft                0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS       0xf43090b0
#define TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA2        0xf43090b4
#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA1        0xf43090b8
#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA0        0xf43090bc
#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS       0xf43090c0
#define TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA1        0xf43090c4
#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA0        0xf43090c8
#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_CTRL0                        0xf43090cc
#define TE_POL_PORT_CTRL0_STRIDE                 4
#define TE_POL_PORT_CTRL0_COUNT                  8
#define TE_POL_PORT_CTRL0_dft                    0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_PROFILE_MEM_ACCESS           0xf43090ec
#define TE_POL_PORT_PROFILE_MEM_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_PROFILE_MEM_DATA2            0xf43090f0
#define TE_POL_PORT_PROFILE_MEM_DATA2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_PROFILE_MEM_DATA1            0xf43090f4
#define TE_POL_PORT_PROFILE_MEM_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_PROFILE_MEM_DATA0            0xf43090f8
#define TE_POL_PORT_PROFILE_MEM_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_COUNTER_MEM_ACCESS           0xf43090fc
#define TE_POL_PORT_COUNTER_MEM_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_COUNTER_MEM_DATA1            0xf4309100
#define TE_POL_PORT_COUNTER_MEM_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_PORT_COUNTER_MEM_DATA0            0xf4309104
#define TE_POL_PORT_COUNTER_MEM_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_PORT_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_GRP_CTRL0                    0xf4309108
#define TE_POL_FLOW_GRP_CTRL0_STRIDE             4
#define TE_POL_FLOW_GRP_CTRL0_COUNT              8
#define TE_POL_FLOW_GRP_CTRL0_dft                0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_GRP_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_PROFILE_MEM_ACCESS           0xf4309128
#define TE_POL_FLOW_PROFILE_MEM_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_PROFILE_MEM_DATA2            0xf430912c
#define TE_POL_FLOW_PROFILE_MEM_DATA2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_PROFILE_MEM_DATA1            0xf4309130
#define TE_POL_FLOW_PROFILE_MEM_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_PROFILE_MEM_DATA0            0xf4309134
#define TE_POL_FLOW_PROFILE_MEM_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_COUNTER_MEM_ACCESS           0xf4309138
#define TE_POL_FLOW_COUNTER_MEM_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_COUNTER_MEM_DATA1            0xf430913c
#define TE_POL_FLOW_COUNTER_MEM_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_COUNTER_MEM_DATA0            0xf4309140
#define TE_POL_FLOW_COUNTER_MEM_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_CTRL0                     0xf4309144
#define TE_POL_AGRFLOW_CTRL0_STRIDE              4
#define TE_POL_AGRFLOW_CTRL0_COUNT               8
#define TE_POL_AGRFLOW_CTRL0_dft                 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_PROFILE_MEM_ACCESS        0xf4309164
#define TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_PROFILE_MEM_DATA2         0xf4309168
#define TE_POL_AGRFLOW_PROFILE_MEM_DATA2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_PROFILE_MEM_DATA1         0xf430916c
#define TE_POL_AGRFLOW_PROFILE_MEM_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_PROFILE_MEM_DATA0         0xf4309170
#define TE_POL_AGRFLOW_PROFILE_MEM_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_COUNTER_MEM_ACCESS        0xf4309174
#define TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_COUNTER_MEM_DATA1         0xf4309178
#define TE_POL_AGRFLOW_COUNTER_MEM_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_AGRFLOW_COUNTER_MEM_DATA0         0xf430917c
#define TE_POL_AGRFLOW_COUNTER_MEM_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW_CFG                          0xf4309180
#define TE_POL_FLOW_CFG_dft                      0x00003f3f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t watermark_flow2      :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t watermark_flow3      :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW_CFG_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_CTRL0                       0xf4309184
#define TE_POL_FLOW3_CTRL0_STRIDE                4
#define TE_POL_FLOW3_CTRL0_COUNT                 2
#define TE_POL_FLOW3_CTRL0_dft                   0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  3 ; /* bits 2:0 */
    ca_uint32_t color_blind          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t egr_len_sel          :  1 ; /* bits 5:5 */
    ca_uint32_t ipg                  :  5 ; /* bits 10:6 */
    ca_uint32_t bypass_yellow        :  1 ; /* bits 11:11 */
    ca_uint32_t bypass_red           :  1 ; /* bits 12:12 */
    ca_uint32_t update_mode          :  1 ; /* bits 13:13 */
    ca_uint32_t nest_level           :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_PROFILE_MEM_ACCESS          0xf430918c
#define TE_POL_FLOW3_PROFILE_MEM_ACCESS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_PROFILE_MEM_DATA2           0xf4309190
#define TE_POL_FLOW3_PROFILE_MEM_DATA2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_bs              : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_PROFILE_MEM_DATA1           0xf4309194
#define TE_POL_FLOW3_PROFILE_MEM_DATA1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_bs         :  6 ; /* bits 5:0 */
    ca_uint32_t peak_rate_k          : 10 ; /* bits 15:6 */
    ca_uint32_t peak_rate_m          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_PROFILE_MEM_DATA0           0xf4309198
#define TE_POL_FLOW3_PROFILE_MEM_DATA0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_rate_k     : 10 ; /* bits 9:0 */
    ca_uint32_t committed_rate_m     : 16 ; /* bits 25:10 */
    ca_uint32_t committed_bs         :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_COUNTER_MEM_ACCESS          0xf430919c
#define TE_POL_FLOW3_COUNTER_MEM_ACCESS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_COUNTER_MEM_DATA1           0xf43091a0
#define TE_POL_FLOW3_COUNTER_MEM_DATA1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_tbc             : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_FLOW3_COUNTER_MEM_DATA0           0xf43091a4
#define TE_POL_FLOW3_COUNTER_MEM_DATA0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t committed_tbc        : 21 ; /* bits 20:0 */
    ca_uint32_t peak_tbc             : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_FLOW3_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_TB_CTRL                           0xf43091a8
#define TE_POL_TB_CTRL_dft                       0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addtok_en            :  1 ; /* bits 0:0 */
    ca_uint32_t subtok_en            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t upd_cnt_lmt          :  4 ; /* bits 7:4 */
    ca_uint32_t cyc_cnt_lmt          : 12 ; /* bits 19:8 */
    ca_uint32_t last_upd_cyc         : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_POL_TB_CTRL1                          0xf43091ac
#define TE_POL_TB_CTRL1_dft                      0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t k_cnt_lmt            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_POL_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pol */
#ifndef __ASSEMBLER__
typedef struct {
  TE_POL_PKT_TYPE_CTRL0_t                  PKT_TYPE_CTRL0;                /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[31];
  TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t     PKT_TYPE_PROFILE_MEM_ACCESS;   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd2[3];
  TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t      PKT_TYPE_PROFILE_MEM_DATA2;    /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd3[3];
  TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t      PKT_TYPE_PROFILE_MEM_DATA1;    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd4[3];
  TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t      PKT_TYPE_PROFILE_MEM_DATA0;    /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd5[3];
  TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t     PKT_TYPE_COUNTER_MEM_ACCESS;   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd6[3];
  TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t      PKT_TYPE_COUNTER_MEM_DATA1;    /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd7[3];
  TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t      PKT_TYPE_COUNTER_MEM_DATA0;    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd8[3];
  TE_POL_PORT_CTRL0_t                      PORT_CTRL0;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd9[31];
  TE_POL_PORT_PROFILE_MEM_ACCESS_t         PORT_PROFILE_MEM_ACCESS;       /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd10[3];
  TE_POL_PORT_PROFILE_MEM_DATA2_t          PORT_PROFILE_MEM_DATA2;        /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd11[3];
  TE_POL_PORT_PROFILE_MEM_DATA1_t          PORT_PROFILE_MEM_DATA1;        /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd12[3];
  TE_POL_PORT_PROFILE_MEM_DATA0_t          PORT_PROFILE_MEM_DATA0;        /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd13[3];
  TE_POL_PORT_COUNTER_MEM_ACCESS_t         PORT_COUNTER_MEM_ACCESS;       /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd14[3];
  TE_POL_PORT_COUNTER_MEM_DATA1_t          PORT_COUNTER_MEM_DATA1;        /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd15[3];
  TE_POL_PORT_COUNTER_MEM_DATA0_t          PORT_COUNTER_MEM_DATA0;        /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd16[3];
  TE_POL_FLOW_GRP_CTRL0_t                  FLOW_GRP_CTRL0;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd17[31];
  TE_POL_FLOW_PROFILE_MEM_ACCESS_t         FLOW_PROFILE_MEM_ACCESS;       /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd18[3];
  TE_POL_FLOW_PROFILE_MEM_DATA2_t          FLOW_PROFILE_MEM_DATA2;        /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd19[3];
  TE_POL_FLOW_PROFILE_MEM_DATA1_t          FLOW_PROFILE_MEM_DATA1;        /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd20[3];
  TE_POL_FLOW_PROFILE_MEM_DATA0_t          FLOW_PROFILE_MEM_DATA0;        /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd21[3];
  TE_POL_FLOW_COUNTER_MEM_ACCESS_t         FLOW_COUNTER_MEM_ACCESS;       /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd22[3];
  TE_POL_FLOW_COUNTER_MEM_DATA1_t          FLOW_COUNTER_MEM_DATA1;        /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd23[3];
  TE_POL_FLOW_COUNTER_MEM_DATA0_t          FLOW_COUNTER_MEM_DATA0;        /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd24[3];
  TE_POL_AGRFLOW_CTRL0_t                   AGRFLOW_CTRL0;                 /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd25[31];
  TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t      AGRFLOW_PROFILE_MEM_ACCESS;    /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd26[3];
  TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t       AGRFLOW_PROFILE_MEM_DATA2;     /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd27[3];
  TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t       AGRFLOW_PROFILE_MEM_DATA1;     /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd28[3];
  TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t       AGRFLOW_PROFILE_MEM_DATA0;     /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd29[3];
  TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t      AGRFLOW_COUNTER_MEM_ACCESS;    /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd30[3];
  TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t       AGRFLOW_COUNTER_MEM_DATA1;     /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd31[3];
  TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t       AGRFLOW_COUNTER_MEM_DATA0;     /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd32[3];
  TE_POL_FLOW_CFG_t                        FLOW_CFG;                      /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd33[3];
  TE_POL_FLOW3_CTRL0_t                     FLOW3_CTRL0;                   /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd34[7];
  TE_POL_FLOW3_PROFILE_MEM_ACCESS_t        FLOW3_PROFILE_MEM_ACCESS;      /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd35[3];
  TE_POL_FLOW3_PROFILE_MEM_DATA2_t         FLOW3_PROFILE_MEM_DATA2;       /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd36[3];
  TE_POL_FLOW3_PROFILE_MEM_DATA1_t         FLOW3_PROFILE_MEM_DATA1;       /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd37[3];
  TE_POL_FLOW3_PROFILE_MEM_DATA0_t         FLOW3_PROFILE_MEM_DATA0;       /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd38[3];
  TE_POL_FLOW3_COUNTER_MEM_ACCESS_t        FLOW3_COUNTER_MEM_ACCESS;      /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd39[3];
  TE_POL_FLOW3_COUNTER_MEM_DATA1_t         FLOW3_COUNTER_MEM_DATA1;       /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd40[3];
  TE_POL_FLOW3_COUNTER_MEM_DATA0_t         FLOW3_COUNTER_MEM_DATA0;       /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd41[3];
  TE_POL_TB_CTRL_t                         TB_CTRL;                       /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd42[3];
  TE_POL_TB_CTRL1_t                        TB_CTRL1;                      /* addr: 0x0000011c */
} APB0_TE_POL_t;
#endif /* !__ASSEMBLER__ */


/*
 * shp
 */

#define TE_SHP_IPG_PROFILE                       0xf4309300
#define TE_SHP_IPG_PROFILE_dft                   0x14141414

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipg0                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ipg1                 :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ipg2                 :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t ipg3                 :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_IPG_PROFILE_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_PORT_IPG_SELECT0                  0xf4309304
#define TE_SHP_PORT_IPG_SELECT0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid0                 :  2 ; /* bits 1:0 */
    ca_uint32_t pid1                 :  2 ; /* bits 3:2 */
    ca_uint32_t pid2                 :  2 ; /* bits 5:4 */
    ca_uint32_t pid3                 :  2 ; /* bits 7:6 */
    ca_uint32_t pid4                 :  2 ; /* bits 9:8 */
    ca_uint32_t pid5                 :  2 ; /* bits 11:10 */
    ca_uint32_t pid6                 :  2 ; /* bits 13:12 */
    ca_uint32_t pid7                 :  2 ; /* bits 15:14 */
    ca_uint32_t pid8                 :  2 ; /* bits 17:16 */
    ca_uint32_t pid9                 :  2 ; /* bits 19:18 */
    ca_uint32_t pid10                :  2 ; /* bits 21:20 */
    ca_uint32_t pid11                :  2 ; /* bits 23:22 */
    ca_uint32_t pid12                :  2 ; /* bits 25:24 */
    ca_uint32_t pid13                :  2 ; /* bits 27:26 */
    ca_uint32_t pid14                :  2 ; /* bits 29:28 */
    ca_uint32_t pid15                :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_PORT_IPG_SELECT0_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_PORT_IPG_SELECT1                  0xf4309308
#define TE_SHP_PORT_IPG_SELECT1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid16                :  2 ; /* bits 1:0 */
    ca_uint32_t pid17                :  2 ; /* bits 3:2 */
    ca_uint32_t pid18                :  2 ; /* bits 5:4 */
    ca_uint32_t pid19                :  2 ; /* bits 7:6 */
    ca_uint32_t pid20                :  2 ; /* bits 9:8 */
    ca_uint32_t pid21                :  2 ; /* bits 11:10 */
    ca_uint32_t pid22                :  2 ; /* bits 13:12 */
    ca_uint32_t pid23                :  2 ; /* bits 15:14 */
    ca_uint32_t pid24                :  2 ; /* bits 17:16 */
    ca_uint32_t pid25                :  2 ; /* bits 19:18 */
    ca_uint32_t pid26                :  2 ; /* bits 21:20 */
    ca_uint32_t pid27                :  2 ; /* bits 23:22 */
    ca_uint32_t pid28                :  2 ; /* bits 25:24 */
    ca_uint32_t pid29                :  2 ; /* bits 27:26 */
    ca_uint32_t pid30                :  2 ; /* bits 29:28 */
    ca_uint32_t pid31                :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_PORT_IPG_SELECT1_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_CTRL                              0xf430930c
#define TE_SHP_CTRL_dft                          0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_mode_class0_cnt  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pkt_mode_class1_cnt  :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t cpu_port_grp_en      :  1 ; /* bits 30:30 */
    ca_uint32_t ni_port_grp_en       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_PORT_TBC_MEM_ACCESS               0xf4309310
#define TE_SHP_PORT_TBC_MEM_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_PORT_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_PORT_TBC_MEM_DATA1                0xf4309314
#define TE_SHP_PORT_TBC_MEM_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_PORT_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_PORT_TBC_MEM_DATA0                0xf4309318
#define TE_SHP_PORT_TBC_MEM_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_PORT_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_GROUP_TBC_MEM_ACCESS              0xf430931c
#define TE_SHP_GROUP_TBC_MEM_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_GROUP_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_GROUP_TBC_MEM_DATA1               0xf4309320
#define TE_SHP_GROUP_TBC_MEM_DATA1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_GROUP_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_GROUP_TBC_MEM_DATA0               0xf4309324
#define TE_SHP_GROUP_TBC_MEM_DATA0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_GROUP_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_VOQ_TBC_MEM_ACCESS                0xf4309328
#define TE_SHP_VOQ_TBC_MEM_ACCESS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_VOQ_TBC_MEM_DATA1                 0xf430932c
#define TE_SHP_VOQ_TBC_MEM_DATA1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_VOQ_TBC_MEM_DATA0                 0xf4309330
#define TE_SHP_VOQ_TBC_MEM_DATA0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_TB_CTRL                           0xf4309334
#define TE_SHP_TB_CTRL_dft                       0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addtok_en            :  1 ; /* bits 0:0 */
    ca_uint32_t subtok_en            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t upd_cnt_lmt          :  4 ; /* bits 7:4 */
    ca_uint32_t cyc_cnt_lmt          : 12 ; /* bits 19:8 */
    ca_uint32_t last_upd_cyc         : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_TB_CTRL1                          0xf4309338
#define TE_SHP_TB_CTRL1_dft                      0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t k_cnt_lmt            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_SHP_DBG_SEL                       0xf430933c
#define TE_SHP_SHP_DBG_SEL_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel0                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t sel1                 :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t sel_port             :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd3               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_SHP_DBG_SEL_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_SHP_DBG_DATA0                     0xf4309340
#define TE_SHP_SHP_DBG_DATA0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_SHP_DBG_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_SHP_SHP_DBG_DATA1                     0xf4309344
#define TE_SHP_SHP_DBG_DATA1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_SHP_SHP_DBG_DATA1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* shp */
#ifndef __ASSEMBLER__
typedef struct {
  TE_SHP_IPG_PROFILE_t                     IPG_PROFILE;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_SHP_PORT_IPG_SELECT0_t                PORT_IPG_SELECT0;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_SHP_PORT_IPG_SELECT1_t                PORT_IPG_SELECT1;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_SHP_CTRL_t                            CTRL;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_SHP_PORT_TBC_MEM_ACCESS_t             PORT_TBC_MEM_ACCESS;           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_SHP_PORT_TBC_MEM_DATA1_t              PORT_TBC_MEM_DATA1;            /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TE_SHP_PORT_TBC_MEM_DATA0_t              PORT_TBC_MEM_DATA0;            /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TE_SHP_GROUP_TBC_MEM_ACCESS_t            GROUP_TBC_MEM_ACCESS;          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  TE_SHP_GROUP_TBC_MEM_DATA1_t             GROUP_TBC_MEM_DATA1;           /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  TE_SHP_GROUP_TBC_MEM_DATA0_t             GROUP_TBC_MEM_DATA0;           /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  TE_SHP_VOQ_TBC_MEM_ACCESS_t              VOQ_TBC_MEM_ACCESS;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  TE_SHP_VOQ_TBC_MEM_DATA1_t               VOQ_TBC_MEM_DATA1;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  TE_SHP_VOQ_TBC_MEM_DATA0_t               VOQ_TBC_MEM_DATA0;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  TE_SHP_TB_CTRL_t                         TB_CTRL;                       /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  TE_SHP_TB_CTRL1_t                        TB_CTRL1;                      /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  TE_SHP_SHP_DBG_SEL_t                     SHP_DBG_SEL;                   /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  TE_SHP_SHP_DBG_DATA0_t                   SHP_DBG_DATA0;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  TE_SHP_SHP_DBG_DATA1_t                   SHP_DBG_DATA1;                 /* addr: 0x00000044 */
} APB0_TE_SHP_t;
#endif /* !__ASSEMBLER__ */


/*
 * wred
 */

#define TE_WRED_CTRL                             0xf4309380
#define TE_WRED_CTRL_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t fast_decay           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t afgs_weight          :  4 ; /* bits 7:4 */
    ca_uint32_t afgs_sel_worst       :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_AFGS_MEM_ACCESS                  0xf4309384
#define TE_WRED_AFGS_MEM_ACCESS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_AFGS_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_AFGS_MEM_DATA                    0xf4309388
#define TE_WRED_AFGS_MEM_DATA_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t depth                : 14 ; /* bits 13:0 */
    ca_uint32_t depth_eq1            : 14 ; /* bits 27:14 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_AFGS_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_ACCESS               0xf430938c
#define TE_WRED_PROFILE_MEM_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA7                0xf4309390
#define TE_WRED_PROFILE_MEM_DATA7_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data_rsvd            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA6                0xf4309394
#define TE_WRED_PROFILE_MEM_DATA6_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_idx           :  4 ; /* bits 3:0 */
    ca_uint32_t mark_idx             :  4 ; /* bits 7:4 */
    ca_uint32_t data_rsvd            : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA5                0xf4309398
#define TE_WRED_PROFILE_MEM_DATA5_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_dps             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA4                0xf430939c
#define TE_WRED_PROFILE_MEM_DATA4_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_dps             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA3                0xf43093a0
#define TE_WRED_PROFILE_MEM_DATA3_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mark_dps             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA2                0xf43093a4
#define TE_WRED_PROFILE_MEM_DATA2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_dps           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA1                0xf43093a8
#define TE_WRED_PROFILE_MEM_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_dps           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_MEM_DATA0                0xf43093ac
#define TE_WRED_PROFILE_MEM_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t unmark_dps           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_SELECT_MEM_ACCESS        0xf43093b0
#define TE_WRED_PROFILE_SELECT_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_SELECT_MEM_DATA1         0xf43093b4
#define TE_WRED_PROFILE_SELECT_MEM_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel6                 :  3 ; /* bits 2:0 */
    ca_uint32_t sel7                 :  5 ; /* bits 7:3 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_SELECT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_WRED_PROFILE_SELECT_MEM_DATA0         0xf43093b8
#define TE_WRED_PROFILE_SELECT_MEM_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel0                 :  5 ; /* bits 4:0 */
    ca_uint32_t sel1                 :  5 ; /* bits 9:5 */
    ca_uint32_t sel2                 :  5 ; /* bits 14:10 */
    ca_uint32_t sel3                 :  5 ; /* bits 19:15 */
    ca_uint32_t sel4                 :  5 ; /* bits 24:20 */
    ca_uint32_t sel5                 :  5 ; /* bits 29:25 */
    ca_uint32_t sel6                 :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_WRED_PROFILE_SELECT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* wred */
#ifndef __ASSEMBLER__
typedef struct {
  TE_WRED_CTRL_t                           CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_WRED_AFGS_MEM_ACCESS_t                AFGS_MEM_ACCESS;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_WRED_AFGS_MEM_DATA_t                  AFGS_MEM_DATA;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_WRED_PROFILE_MEM_ACCESS_t             PROFILE_MEM_ACCESS;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_WRED_PROFILE_MEM_DATA7_t              PROFILE_MEM_DATA7;             /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_WRED_PROFILE_MEM_DATA6_t              PROFILE_MEM_DATA6;             /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TE_WRED_PROFILE_MEM_DATA5_t              PROFILE_MEM_DATA5;             /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TE_WRED_PROFILE_MEM_DATA4_t              PROFILE_MEM_DATA4;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  TE_WRED_PROFILE_MEM_DATA3_t              PROFILE_MEM_DATA3;             /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  TE_WRED_PROFILE_MEM_DATA2_t              PROFILE_MEM_DATA2;             /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  TE_WRED_PROFILE_MEM_DATA1_t              PROFILE_MEM_DATA1;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  TE_WRED_PROFILE_MEM_DATA0_t              PROFILE_MEM_DATA0;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  TE_WRED_PROFILE_SELECT_MEM_ACCESS_t      PROFILE_SELECT_MEM_ACCESS;     /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  TE_WRED_PROFILE_SELECT_MEM_DATA1_t       PROFILE_SELECT_MEM_DATA1;      /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  TE_WRED_PROFILE_SELECT_MEM_DATA0_t       PROFILE_SELECT_MEM_DATA0;      /* addr: 0x00000038 */
} APB0_TE_WRED_t;
#endif /* !__ASSEMBLER__ */


/*
 * fc_glb
 */

#define TE_FC_GLB_INT                            0xf4309400
#define TE_FC_GLB_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t rxflowcntl_wan       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t txflowcntl_wan       :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t txflowcntl_cpu       :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd4               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_INT_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_GLB_INTE                           0xf4309404
#define TE_FC_GLB_INTE_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t rxflowcntl_wanE      :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t txflowcntl_wanE      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t txflowcntl_cpuE      :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd4               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_GLB_CTRL                           0xf4309408
#define TE_FC_GLB_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t l3fewan_tx_en        :  1 ; /* bits 4:4 */
    ca_uint32_t l3felan_tx_en        :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_GLB_STS                            0xf430940c
#define TE_FC_GLB_STS_dft                        0x00030000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t te_ni_l3fewan_port_rdy :  1 ; /* bits 16:16 */
    ca_uint32_t te_ni_l3felan_port_rdy :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_GLB_PFC_CTRL0                      0xf4309410
#define TE_FC_GLB_PFC_CTRL0_STRIDE               8
#define TE_FC_GLB_PFC_CTRL0_COUNT                2
#define TE_FC_GLB_PFC_CTRL0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos_bmap             :  8 ; /* bits 7:0 */
    ca_uint32_t port_bmap            :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t rxpfc_en             :  1 ; /* bits 16:16 */
    ca_uint32_t txpfc_en             :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_PFC_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_GLB_PFC_CNT0                       0xf4309414
#define TE_FC_GLB_PFC_CNT0_STRIDE                8
#define TE_FC_GLB_PFC_CNT0_COUNT                 2
#define TE_FC_GLB_PFC_CNT0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_PFC_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_GLB_TIMER                          0xf4309420
#define TE_FC_GLB_TIMER_dft                      0x000073ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num_of_cycles        : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t cycle_unit           :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               : 16 ;
    ca_uint32_t enable               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_GLB_TIMER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* fc_glb */
#ifndef __ASSEMBLER__
typedef struct {
  TE_FC_GLB_INT_t                          INT;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_FC_GLB_INTE_t                         INTE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_FC_GLB_CTRL_t                         CTRL;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_FC_GLB_STS_t                          STS;                           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_FC_GLB_PFC_CTRL0_t                    PFC_CTRL0;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_FC_GLB_PFC_CNT0_t                     PFC_CNT0;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[11];
  TE_FC_GLB_TIMER_t                        TIMER;                         /* addr: 0x00000020 */
} APB0_TE_FC_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * fc[0..1]
 */

#define TE_FC_CTRL                               0xf4309480
#define TE_FC_CTRL_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_en                :  1 ; /* bits 0:0 */
    ca_uint32_t tx_en                :  1 ; /* bits 1:1 */
    ca_uint32_t src_rate_enforce     :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t stat_pri_sel         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_STS                                0xf4309484
#define TE_FC_STS_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxpfc                :  8 ; /* bits 7:0 */
    ca_uint32_t txpfc                :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_STAT                               0xf4309488
#define TE_FC_STAT_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag_num             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t voq                  :  8 ; /* bits 11:4 */
    ca_uint32_t rsrvd2               : 18 ;
    ca_uint32_t txpfc                :  1 ; /* bits 30:30 */
    ca_uint32_t rxpfc                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_STAT_t;
#endif /* !__ASSEMBLER__ */


#define TE_FC_DBG_FLAG_NUM                       0xf430948c
#define TE_FC_DBG_FLAG_NUM_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_FC_DBG_FLAG_NUM_t;
#endif /* !__ASSEMBLER__ */


#define APB0_TE_FC_STRIDE                 64
#define APB0_TE_FC_COUNT                  2



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* fc */
#ifndef __ASSEMBLER__
typedef struct {
  TE_FC_CTRL_t                             CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_FC_STS_t                              STS;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_FC_STAT_t                             STAT;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_FC_DBG_FLAG_NUM_t                     DBG_FLAG_NUM;                  /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[51];
} APB0_TE_FC_t;
#endif /* !__ASSEMBLER__ */


/*
 * cb
 */

#define TE_CB_INT                                0xf4309500
#define TE_CB_INT_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_bufcnt_udfl      :  1 ; /* bits 0:0 */
    ca_uint32_t voq_bufcnt_ovfl      :  1 ; /* bits 1:1 */
    ca_uint32_t voq_pcnt_udfl        :  1 ; /* bits 2:2 */
    ca_uint32_t voq_pcnt_ovfl        :  1 ; /* bits 3:3 */
    ca_uint32_t port_freecnt_udfl    :  1 ; /* bits 4:4 */
    ca_uint32_t port_freecnt_ovfl    :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_INT_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_INTE                               0xf4309504
#define TE_CB_INTE_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_bufcnt_udflE     :  1 ; /* bits 0:0 */
    ca_uint32_t voq_bufcnt_ovflE     :  1 ; /* bits 1:1 */
    ca_uint32_t voq_pcnt_udflE       :  1 ; /* bits 2:2 */
    ca_uint32_t voq_pcnt_ovflE       :  1 ; /* bits 3:3 */
    ca_uint32_t port_freecnt_udflE   :  1 ; /* bits 4:4 */
    ca_uint32_t port_freecnt_ovflE   :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_INTE_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_ERR_INFO                           0xf4309508
#define TE_CB_ERR_INFO_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq_of_buferr        :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t voq_of_pkterr        :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_ERR_INFO_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_CTRL                               0xf430950c
#define TE_CB_CTRL_dft                           0x0803ff03

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scan_cycle_per_run   :  8 ; /* bits 7:0 */
    ca_uint32_t scan_cycle_unit      : 10 ; /* bits 17:8 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t dync_dq_port_to_pon_sel :  8 ; /* bits 27:20 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t cnt_udfl_allow       :  1 ; /* bits 30:30 */
    ca_uint32_t scan_enable          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_GLOB_TD_STS                        0xf4309510
#define TE_CB_GLOB_TD_STS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pool                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_GLOB_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_TD_STS                        0xf4309514
#define TE_CB_PORT_TD_STS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PORT_TD_STS                    0xf4309518
#define TE_CB_SRC_PORT_TD_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t src_port             :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PORT_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_TD_STS0                        0xf430951c
#define TE_CB_VOQ_TD_STS0_STRIDE                 4
#define TE_CB_VOQ_TD_STS0_COUNT                  8
#define TE_CB_VOQ_TD_STS0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_TD_STS0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PRI_TD_STS                     0xf430953c
#define TE_CB_SRC_PRI_TD_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t src_pri              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PRI_TD_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_NO_PRVT_STS0                   0xf4309540
#define TE_CB_VOQ_NO_PRVT_STS0_STRIDE            4
#define TE_CB_VOQ_NO_PRVT_STS0_COUNT             8
#define TE_CB_VOQ_NO_PRVT_STS0_dft               0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_NO_PRVT_STS0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_EQ_PROFILE_THRSH0                  0xf4309560
#define TE_CB_EQ_PROFILE_THRSH0_STRIDE           4
#define TE_CB_EQ_PROFILE_THRSH0_COUNT            8
#define TE_CB_EQ_PROFILE_THRSH0_dft              0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t th0                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t th1                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_EQ_PROFILE_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_THRSH_PROFILE0                0xf4309580
#define TE_CB_PORT_THRSH_PROFILE0_STRIDE         4
#define TE_CB_PORT_THRSH_PROFILE0_COUNT          4
#define TE_CB_PORT_THRSH_PROFILE0_dft            0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_GRPTHRSH_PROFILE0             0xf4309590
#define TE_CB_PORT_GRPTHRSH_PROFILE0_STRIDE      4
#define TE_CB_PORT_GRPTHRSH_PROFILE0_COUNT       4
#define TE_CB_PORT_GRPTHRSH_PROFILE0_dft         0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t grplth               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t grphth               : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_GRPTHRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_THRSH_SELECT0                 0xf43095a0
#define TE_CB_PORT_THRSH_SELECT0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel0               :  2 ; /* bits 1:0 */
    ca_uint32_t thsel1               :  2 ; /* bits 3:2 */
    ca_uint32_t thsel2               :  2 ; /* bits 5:4 */
    ca_uint32_t thsel3               :  2 ; /* bits 7:6 */
    ca_uint32_t thsel4               :  2 ; /* bits 9:8 */
    ca_uint32_t thsel5               :  2 ; /* bits 11:10 */
    ca_uint32_t thsel6               :  2 ; /* bits 13:12 */
    ca_uint32_t thsel7               :  2 ; /* bits 15:14 */
    ca_uint32_t thsel8               :  2 ; /* bits 17:16 */
    ca_uint32_t thsel9               :  2 ; /* bits 19:18 */
    ca_uint32_t thsel10              :  2 ; /* bits 21:20 */
    ca_uint32_t thsel11              :  2 ; /* bits 23:22 */
    ca_uint32_t thsel12              :  2 ; /* bits 25:24 */
    ca_uint32_t thsel13              :  2 ; /* bits 27:26 */
    ca_uint32_t thsel14              :  2 ; /* bits 29:28 */
    ca_uint32_t thsel15              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_THRSH_SELECT0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_THRSH_SELECT1                 0xf43095a4
#define TE_CB_PORT_THRSH_SELECT1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel16              :  2 ; /* bits 1:0 */
    ca_uint32_t thsel17              :  2 ; /* bits 3:2 */
    ca_uint32_t thsel18              :  2 ; /* bits 5:4 */
    ca_uint32_t thsel19              :  2 ; /* bits 7:6 */
    ca_uint32_t thsel20              :  2 ; /* bits 9:8 */
    ca_uint32_t thsel21              :  2 ; /* bits 11:10 */
    ca_uint32_t thsel22              :  2 ; /* bits 13:12 */
    ca_uint32_t thsel23              :  2 ; /* bits 15:14 */
    ca_uint32_t thsel24              :  2 ; /* bits 17:16 */
    ca_uint32_t thsel25              :  2 ; /* bits 19:18 */
    ca_uint32_t thsel26              :  2 ; /* bits 21:20 */
    ca_uint32_t thsel27              :  2 ; /* bits 23:22 */
    ca_uint32_t thsel28              :  2 ; /* bits 25:24 */
    ca_uint32_t thsel29              :  2 ; /* bits 27:26 */
    ca_uint32_t thsel30              :  2 ; /* bits 29:28 */
    ca_uint32_t thsel31              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_THRSH_SELECT1_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_FREECNT_MEM_ACCESS            0xf43095a8
#define TE_CB_PORT_FREECNT_MEM_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_FREECNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_FREECNT_MEM_DATA              0xf43095ac
#define TE_CB_PORT_FREECNT_MEM_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 14 ; /* bits 13:0 */
    ca_uint32_t cnt0_msb             :  1 ; /* bits 14:14 */
    ca_uint32_t cnt0_rsvd            :  1 ; /* bits 15:15 */
    ca_uint32_t cnt1                 : 14 ; /* bits 29:16 */
    ca_uint32_t cnt1_msb             :  1 ; /* bits 30:30 */
    ca_uint32_t cnt1_rsvd            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_FREECNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS       0xf43095b0
#define TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2        0xf43095b4
#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prvt                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1        0xf43095b8
#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t grplth               : 10 ; /* bits 9:0 */
    ca_uint32_t grphth               : 14 ; /* bits 23:10 */
    ca_uint32_t prvt                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0        0xf43095bc
#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t hth                  : 14 ; /* bits 27:14 */
    ca_uint32_t grplth               :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS        0xf43095c0
#define TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_THRSH_SELECT_MEM_DATA          0xf43095c4
#define TE_CB_VOQ_THRSH_SELECT_MEM_DATA_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_BUFCNT_MEM_ACCESS              0xf43095c8
#define TE_CB_VOQ_BUFCNT_MEM_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_BUFCNT_MEM_DATA                0xf43095cc
#define TE_CB_VOQ_BUFCNT_MEM_DATA_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 14 ; /* bits 13:0 */
    ca_uint32_t cnt0_rsvd            :  2 ; /* bits 15:14 */
    ca_uint32_t cnt1                 : 14 ; /* bits 29:16 */
    ca_uint32_t cnt1_rsvd            :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS          0xf43095d0
#define TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_MAX_BUFCNT_MEM_DATA            0xf43095d4
#define TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_PCNT_MEM_ACCESS                0xf43095d8
#define TE_CB_VOQ_PCNT_MEM_ACCESS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_PCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_PCNT_MEM_DATA                  0xf43095dc
#define TE_CB_VOQ_PCNT_MEM_DATA_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_PCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_GLB0_THRSH                         0xf43095e0
#define TE_CB_GLB0_THRSH_STRIDE                  4
#define TE_CB_GLB0_THRSH_COUNT                   8
#define TE_CB_GLB0_THRSH_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_GLB0_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_CTRL                           0xf4309600
#define TE_CB_SRC_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t src_pri_en           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PORT_THRSH0                    0xf4309604
#define TE_CB_SRC_PORT_THRSH0_STRIDE             4
#define TE_CB_SRC_PORT_THRSH0_COUNT              2
#define TE_CB_SRC_PORT_THRSH0_dft                0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PORT_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PRI_THRSH0                     0xf430960c
#define TE_CB_SRC_PRI_THRSH0_STRIDE              4
#define TE_CB_SRC_PRI_THRSH0_COUNT               8
#define TE_CB_SRC_PRI_THRSH0_dft                 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS         0xf430962c
#define TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 29 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PORT_BUFCNT_MEM_DATA           0xf4309630
#define TE_CB_SRC_PORT_BUFCNT_MEM_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS          0xf4309634
#define TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_PRI_BUFCNT_MEM_DATA            0xf4309638
#define TE_CB_SRC_PRI_BUFCNT_MEM_DATA_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_PORT_THRSH_PROFILE0          0xf430963c
#define TE_CB_DQSCH_PORT_THRSH_PROFILE0_STRIDE   4
#define TE_CB_DQSCH_PORT_THRSH_PROFILE0_COUNT    4
#define TE_CB_DQSCH_PORT_THRSH_PROFILE0_dft      0x3fff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_PORT_THRSH_SELECT0           0xf430964c
#define TE_CB_DQSCH_PORT_THRSH_SELECT0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel0               :  2 ; /* bits 1:0 */
    ca_uint32_t thsel1               :  2 ; /* bits 3:2 */
    ca_uint32_t thsel2               :  2 ; /* bits 5:4 */
    ca_uint32_t thsel3               :  2 ; /* bits 7:6 */
    ca_uint32_t thsel4               :  2 ; /* bits 9:8 */
    ca_uint32_t thsel5               :  2 ; /* bits 11:10 */
    ca_uint32_t thsel6               :  2 ; /* bits 13:12 */
    ca_uint32_t thsel7               :  2 ; /* bits 15:14 */
    ca_uint32_t thsel8               :  2 ; /* bits 17:16 */
    ca_uint32_t thsel9               :  2 ; /* bits 19:18 */
    ca_uint32_t thsel10              :  2 ; /* bits 21:20 */
    ca_uint32_t thsel11              :  2 ; /* bits 23:22 */
    ca_uint32_t thsel12              :  2 ; /* bits 25:24 */
    ca_uint32_t thsel13              :  2 ; /* bits 27:26 */
    ca_uint32_t thsel14              :  2 ; /* bits 29:28 */
    ca_uint32_t thsel15              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_PORT_THRSH_SELECT0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_PORT_THRSH_SELECT1           0xf4309650
#define TE_CB_DQSCH_PORT_THRSH_SELECT1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thsel16              :  2 ; /* bits 1:0 */
    ca_uint32_t thsel17              :  2 ; /* bits 3:2 */
    ca_uint32_t thsel18              :  2 ; /* bits 5:4 */
    ca_uint32_t thsel19              :  2 ; /* bits 7:6 */
    ca_uint32_t thsel20              :  2 ; /* bits 9:8 */
    ca_uint32_t thsel21              :  2 ; /* bits 11:10 */
    ca_uint32_t thsel22              :  2 ; /* bits 13:12 */
    ca_uint32_t thsel23              :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_PORT_THRSH_SELECT1_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4309654
#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA   0xf4309658
#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS  0xf430965c
#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA    0xf4309660
#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_WIFI_SSID_MAP                      0xf4309664
#define TE_CB_WIFI_SSID_MAP_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_WIFI_SSID_MAP_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_WIFI_CTRL                          0xf4309668
#define TE_CB_WIFI_CTRL_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t backpressure_en      :  1 ; /* bits 0:0 */
    ca_uint32_t wred_taildrop_dis    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_WIFI_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_WIFI_STS                           0xf430966c
#define TE_CB_WIFI_STS_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eq_profile_ov_threshold :  8 ; /* bits 7:0 */
    ca_uint32_t buffer_ov_threshold  :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t wifi_backpressure_on :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_WIFI_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_WIFI_BUFCNT                        0xf4309670
#define TE_CB_WIFI_BUFCNT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_WIFI_BUFCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_WIFI_BUF_THRSH                     0xf4309674
#define TE_CB_WIFI_BUF_THRSH_dft                 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_WIFI_BUF_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_WIFI_EQ_PROFILE0_THRSH             0xf4309678
#define TE_CB_WIFI_EQ_PROFILE0_THRSH_STRIDE      4
#define TE_CB_WIFI_EQ_PROFILE0_THRSH_COUNT       8
#define TE_CB_WIFI_EQ_PROFILE0_THRSH_dft         0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_WIFI_EQ_PROFILE0_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SP_BASE_BP_LPID_CNT_EN_P0          0xf4309698
#define TE_CB_SP_BASE_BP_LPID_CNT_EN_P0_STRIDE   4
#define TE_CB_SP_BASE_BP_LPID_CNT_EN_P0_COUNT    7
#define TE_CB_SP_BASE_BP_LPID_CNT_EN_P0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lpid_en              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SP_BASE_BP_LPID_CNT_EN_P0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SP_BASE_BP_THRSH_P0                0xf43096b4
#define TE_CB_SP_BASE_BP_THRSH_P0_STRIDE         4
#define TE_CB_SP_BASE_BP_THRSH_P0_COUNT          7
#define TE_CB_SP_BASE_BP_THRSH_P0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lth                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hth                  : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t en                   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SP_BASE_BP_THRSH_P0_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_PORT_TD_MASK                       0xf43096d0
#define TE_CB_PORT_TD_MASK_dft                   0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0                   :  1 ; /* bits 0:0 */
    ca_uint32_t p1                   :  1 ; /* bits 1:1 */
    ca_uint32_t p2                   :  1 ; /* bits 2:2 */
    ca_uint32_t p3                   :  1 ; /* bits 3:3 */
    ca_uint32_t p4                   :  1 ; /* bits 4:4 */
    ca_uint32_t p5                   :  1 ; /* bits 5:5 */
    ca_uint32_t p6                   :  1 ; /* bits 6:6 */
    ca_uint32_t p7                   :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_PORT_TD_MASK_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_VOQ_REPOR_THRSH                    0xf43096d4
#define TE_CB_VOQ_REPOR_THRSH_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lv1                  : 14 ; /* bits 13:0 */
    ca_uint32_t lv2                  : 14 ; /* bits 27:14 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_VOQ_REPOR_THRSH_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_USED_BUF_CNT01                 0xf43096d8
#define TE_CB_SRC_USED_BUF_CNT01_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sid0                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t sid1                 : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_USED_BUF_CNT01_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_USED_BUF_CNT23                 0xf43096dc
#define TE_CB_SRC_USED_BUF_CNT23_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sid2                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t sid3                 : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_USED_BUF_CNT23_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_USED_BUF_CNT45                 0xf43096e0
#define TE_CB_SRC_USED_BUF_CNT45_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sid4                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t sid5                 : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_USED_BUF_CNT45_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_SRC_USED_BUF_CNT6                  0xf43096e4
#define TE_CB_SRC_USED_BUF_CNT6_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sid6                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_SRC_USED_BUF_CNT6_t;
#endif /* !__ASSEMBLER__ */


#define TE_CB_DBG_REG                            0xf43096e8
#define TE_CB_DBG_REG_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_CB_DBG_REG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* cb */
#ifndef __ASSEMBLER__
typedef struct {
  TE_CB_INT_t                              INT;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_CB_INTE_t                             INTE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_CB_ERR_INFO_t                         ERR_INFO;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_CB_CTRL_t                             CTRL;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_CB_GLOB_TD_STS_t                      GLOB_TD_STS;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_CB_PORT_TD_STS_t                      PORT_TD_STS;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TE_CB_SRC_PORT_TD_STS_t                  SRC_PORT_TD_STS;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TE_CB_VOQ_TD_STS0_t                      VOQ_TD_STS0;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[31];
  TE_CB_SRC_PRI_TD_STS_t                   SRC_PRI_TD_STS;                /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd9[3];
  TE_CB_VOQ_NO_PRVT_STS0_t                 VOQ_NO_PRVT_STS0;              /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd10[31];
  TE_CB_EQ_PROFILE_THRSH0_t                EQ_PROFILE_THRSH0;             /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd11[31];
  TE_CB_PORT_THRSH_PROFILE0_t              PORT_THRSH_PROFILE0;           /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd12[15];
  TE_CB_PORT_GRPTHRSH_PROFILE0_t           PORT_GRPTHRSH_PROFILE0;        /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd13[15];
  TE_CB_PORT_THRSH_SELECT0_t               PORT_THRSH_SELECT0;            /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd14[3];
  TE_CB_PORT_THRSH_SELECT1_t               PORT_THRSH_SELECT1;            /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd15[3];
  TE_CB_PORT_FREECNT_MEM_ACCESS_t          PORT_FREECNT_MEM_ACCESS;       /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd16[3];
  TE_CB_PORT_FREECNT_MEM_DATA_t            PORT_FREECNT_MEM_DATA;         /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd17[3];
  TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t     VOQ_THRSH_PROFILE_MEM_ACCESS;  /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd18[3];
  TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2_t      VOQ_THRSH_PROFILE_MEM_DATA2;   /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd19[3];
  TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t      VOQ_THRSH_PROFILE_MEM_DATA1;   /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd20[3];
  TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t      VOQ_THRSH_PROFILE_MEM_DATA0;   /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd21[3];
  TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t      VOQ_THRSH_SELECT_MEM_ACCESS;   /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd22[3];
  TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t        VOQ_THRSH_SELECT_MEM_DATA;     /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd23[3];
  TE_CB_VOQ_BUFCNT_MEM_ACCESS_t            VOQ_BUFCNT_MEM_ACCESS;         /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd24[3];
  TE_CB_VOQ_BUFCNT_MEM_DATA_t              VOQ_BUFCNT_MEM_DATA;           /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd25[3];
  TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t        VOQ_MAX_BUFCNT_MEM_ACCESS;     /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd26[3];
  TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t          VOQ_MAX_BUFCNT_MEM_DATA;       /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd27[3];
  TE_CB_VOQ_PCNT_MEM_ACCESS_t              VOQ_PCNT_MEM_ACCESS;           /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd28[3];
  TE_CB_VOQ_PCNT_MEM_DATA_t                VOQ_PCNT_MEM_DATA;             /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd29[3];
  TE_CB_GLB0_THRSH_t                       GLB0_THRSH;                    /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd30[31];
  TE_CB_SRC_CTRL_t                         SRC_CTRL;                      /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd31[3];
  TE_CB_SRC_PORT_THRSH0_t                  SRC_PORT_THRSH0;               /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd32[7];
  TE_CB_SRC_PRI_THRSH0_t                   SRC_PRI_THRSH0;                /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd33[31];
  TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t       SRC_PORT_BUFCNT_MEM_ACCESS;    /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd34[3];
  TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t         SRC_PORT_BUFCNT_MEM_DATA;      /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd35[3];
  TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t        SRC_PRI_BUFCNT_MEM_ACCESS;     /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd36[3];
  TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t          SRC_PRI_BUFCNT_MEM_DATA;       /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd37[3];
  TE_CB_DQSCH_PORT_THRSH_PROFILE0_t        DQSCH_PORT_THRSH_PROFILE0;     /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd38[15];
  TE_CB_DQSCH_PORT_THRSH_SELECT0_t         DQSCH_PORT_THRSH_SELECT0;      /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd39[3];
  TE_CB_DQSCH_PORT_THRSH_SELECT1_t         DQSCH_PORT_THRSH_SELECT1;      /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd40[3];
  TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS; /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd41[3];
  TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t DQSCH_VOQ_THRSH_PROFILE_MEM_DATA; /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd42[3];
  TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS; /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd43[3];
  TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t  DQSCH_VOQ_THRSH_SELECT_MEM_DATA; /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd44[3];
  TE_CB_WIFI_SSID_MAP_t                    WIFI_SSID_MAP;                 /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd45[3];
  TE_CB_WIFI_CTRL_t                        WIFI_CTRL;                     /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd46[3];
  TE_CB_WIFI_STS_t                         WIFI_STS;                      /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd47[3];
  TE_CB_WIFI_BUFCNT_t                      WIFI_BUFCNT;                   /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd48[3];
  TE_CB_WIFI_BUF_THRSH_t                   WIFI_BUF_THRSH;                /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd49[3];
  TE_CB_WIFI_EQ_PROFILE0_THRSH_t           WIFI_EQ_PROFILE0_THRSH;        /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd50[31];
  TE_CB_SP_BASE_BP_LPID_CNT_EN_P0_t        SP_BASE_BP_LPID_CNT_EN_P0;     /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd51[27];
  TE_CB_SP_BASE_BP_THRSH_P0_t              SP_BASE_BP_THRSH_P0;           /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd52[27];
  TE_CB_PORT_TD_MASK_t                     PORT_TD_MASK;                  /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd53[3];
  TE_CB_VOQ_REPOR_THRSH_t                  VOQ_REPOR_THRSH;               /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd54[3];
  TE_CB_SRC_USED_BUF_CNT01_t               SRC_USED_BUF_CNT01;            /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd55[3];
  TE_CB_SRC_USED_BUF_CNT23_t               SRC_USED_BUF_CNT23;            /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd56[3];
  TE_CB_SRC_USED_BUF_CNT45_t               SRC_USED_BUF_CNT45;            /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd57[3];
  TE_CB_SRC_USED_BUF_CNT6_t                SRC_USED_BUF_CNT6;             /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd58[3];
  TE_CB_DBG_REG_t                          DBG_REG;                       /* addr: 0x000001e8 */
} APB0_TE_CB_t;
#endif /* !__ASSEMBLER__ */


/*
 * pm
 */

#define TE_PM_CTRL                               0xf4309700
#define TE_PM_CTRL_dft                           0x00001ca0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_saturate         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t mem_saturate         :  1 ; /* bits 4:4 */
    ca_uint32_t mem_auto_clr_on_read :  1 ; /* bits 5:5 */
    ca_uint32_t mem_init             :  1 ; /* bits 6:6 */
    ca_uint32_t mem_disable          :  1 ; /* bits 7:7 */
    ca_uint32_t cnt0_mem_event_sel   :  1 ; /* bits 8:8 */
    ca_uint32_t cnt0_mem_id_sel      :  1 ; /* bits 9:9 */
    ca_uint32_t cnt1_mem_event_sel   :  1 ; /* bits 10:10 */
    ca_uint32_t cnt1_mem_id_sel      :  1 ; /* bits 11:11 */
    ca_uint32_t cnt0_l3fe_intf_sel   :  1 ; /* bits 12:12 */
    ca_uint32_t cnt1_l3fe_intf_sel   :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_EVENT_CFG_0                        0xf4309704
#define TE_PM_EVENT_CFG_0_dft                    0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0_lo              :  4 ; /* bits 3:0 */
    ca_uint32_t cnt0_hi              :  4 ; /* bits 7:4 */
    ca_uint32_t cnt1_lo              :  4 ; /* bits 11:8 */
    ca_uint32_t cnt1_hi              :  4 ; /* bits 15:12 */
    ca_uint32_t cnt2_lo              :  4 ; /* bits 19:16 */
    ca_uint32_t cnt2_hi              :  4 ; /* bits 23:20 */
    ca_uint32_t cnt3_lo              :  4 ; /* bits 27:24 */
    ca_uint32_t cnt3_hi              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_EVENT_CFG_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_EVENT_CFG_1                        0xf4309708
#define TE_PM_EVENT_CFG_1_dft                    0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0_lo              :  4 ; /* bits 3:0 */
    ca_uint32_t cnt0_hi              :  4 ; /* bits 7:4 */
    ca_uint32_t cnt1_lo              :  4 ; /* bits 11:8 */
    ca_uint32_t cnt1_hi              :  4 ; /* bits 15:12 */
    ca_uint32_t cnt2_lo              :  4 ; /* bits 19:16 */
    ca_uint32_t cnt2_hi              :  4 ; /* bits 23:20 */
    ca_uint32_t cnt3_lo              :  4 ; /* bits 27:24 */
    ca_uint32_t cnt3_hi              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_EVENT_CFG_1_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_STS                                0xf430970c
#define TE_PM_STS_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt0_init_done      :  1 ; /* bits 0:0 */
    ca_uint32_t pcnt1_init_done      :  1 ; /* bits 1:1 */
    ca_uint32_t bcnt0_init_done      :  1 ; /* bits 2:2 */
    ca_uint32_t bcnt1_init_done      :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_STS_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_PCNT                               0xf4309710
#define TE_PM_PCNT_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_PRE_MARK_PCNT                      0xf4309714
#define TE_PM_PRE_MARK_PCNT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_PRE_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_POL_DROP_PCNT                      0xf4309718
#define TE_PM_POL_DROP_PCNT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_POL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_TAIL_DROP_PCNT                     0xf430971c
#define TE_PM_TAIL_DROP_PCNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_TAIL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_WRED_Y_DROP_PCNT                   0xf4309720
#define TE_PM_WRED_Y_DROP_PCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_WRED_Y_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_WRED_G_DROP_PCNT                   0xf4309724
#define TE_PM_WRED_G_DROP_PCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_WRED_G_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_MARK_PCNT                          0xf4309728
#define TE_PM_MARK_PCNT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_POL_MARK_PCNT                      0xf430972c
#define TE_PM_POL_MARK_PCNT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_POL_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_BYPASS_PCNT                        0xf4309730
#define TE_PM_BYPASS_PCNT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_BYPASS_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_BYPASS_FLOW_PCNT                   0xf4309734
#define TE_PM_BYPASS_FLOW_PCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_BYPASS_FLOW_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CE_PCNT                            0xf4309738
#define TE_PM_CE_PCNT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CE_PCNT_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_ACCESS                     0xf430973c
#define TE_PM_CNT_MEM_ACCESS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA8                      0xf4309740
#define TE_PM_CNT_MEM_DATA8_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt7                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA7                      0xf4309744
#define TE_PM_CNT_MEM_DATA7_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt6                 : 12 ; /* bits 11:0 */
    ca_uint32_t cnt7                 : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA6                      0xf4309748
#define TE_PM_CNT_MEM_DATA6_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt5                 :  8 ; /* bits 7:0 */
    ca_uint32_t cnt6                 : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA5                      0xf430974c
#define TE_PM_CNT_MEM_DATA5_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt4                 :  4 ; /* bits 3:0 */
    ca_uint32_t cnt5                 : 28 ; /* bits 31:4 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA4                      0xf4309750
#define TE_PM_CNT_MEM_DATA4_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt4                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA3                      0xf4309754
#define TE_PM_CNT_MEM_DATA3_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA2                      0xf4309758
#define TE_PM_CNT_MEM_DATA2_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA1                      0xf430975c
#define TE_PM_CNT_MEM_DATA1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TE_PM_CNT_MEM_DATA0                      0xf4309760
#define TE_PM_CNT_MEM_DATA0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PM_CNT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pm */
#ifndef __ASSEMBLER__
typedef struct {
  TE_PM_CTRL_t                             CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_PM_EVENT_CFG_0_t                      EVENT_CFG_0;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_PM_EVENT_CFG_1_t                      EVENT_CFG_1;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_PM_STS_t                              STS;                           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_PM_PCNT_t                             PCNT;                          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_PM_PRE_MARK_PCNT_t                    PRE_MARK_PCNT;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TE_PM_POL_DROP_PCNT_t                    POL_DROP_PCNT;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TE_PM_TAIL_DROP_PCNT_t                   TAIL_DROP_PCNT;                /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  TE_PM_WRED_Y_DROP_PCNT_t                 WRED_Y_DROP_PCNT;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  TE_PM_WRED_G_DROP_PCNT_t                 WRED_G_DROP_PCNT;              /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  TE_PM_MARK_PCNT_t                        MARK_PCNT;                     /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  TE_PM_POL_MARK_PCNT_t                    POL_MARK_PCNT;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  TE_PM_BYPASS_PCNT_t                      BYPASS_PCNT;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  TE_PM_BYPASS_FLOW_PCNT_t                 BYPASS_FLOW_PCNT;              /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  TE_PM_CE_PCNT_t                          CE_PCNT;                       /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  TE_PM_CNT_MEM_ACCESS_t                   CNT_MEM_ACCESS;                /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  TE_PM_CNT_MEM_DATA8_t                    CNT_MEM_DATA8;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  TE_PM_CNT_MEM_DATA7_t                    CNT_MEM_DATA7;                 /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  TE_PM_CNT_MEM_DATA6_t                    CNT_MEM_DATA6;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  TE_PM_CNT_MEM_DATA5_t                    CNT_MEM_DATA5;                 /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  TE_PM_CNT_MEM_DATA4_t                    CNT_MEM_DATA4;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  TE_PM_CNT_MEM_DATA3_t                    CNT_MEM_DATA3;                 /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  TE_PM_CNT_MEM_DATA2_t                    CNT_MEM_DATA2;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  TE_PM_CNT_MEM_DATA1_t                    CNT_MEM_DATA1;                 /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  TE_PM_CNT_MEM_DATA0_t                    CNT_MEM_DATA0;                 /* addr: 0x00000060 */
} APB0_TE_PM_t;
#endif /* !__ASSEMBLER__ */


/*
 * pie
 */

#define TE_PIE_buf                               0xf4309800
#define TE_PIE_buf_dft                           0x0000aaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t one_third            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_buf_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_buf_mid                           0xf4309804
#define TE_PIE_buf_mid_dft                       0x0000aaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t one_third            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_buf_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_buf_big                           0xf4309808
#define TE_PIE_buf_big_dft                       0x0000aaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t one_third            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_buf_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp0                               0xf430980c
#define TE_PIE_dp0_dft                           0x00000442

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t A                    :  6 ; /* bits 5:0 */
    ca_uint32_t B                    : 10 ; /* bits 15:6 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp0_mid                           0xf4309810
#define TE_PIE_dp0_mid_dft                       0x00000442

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t A                    :  6 ; /* bits 5:0 */
    ca_uint32_t B                    : 10 ; /* bits 15:6 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp0_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp0_big                           0xf4309814
#define TE_PIE_dp0_big_dft                       0x00000442

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t A                    :  6 ; /* bits 5:0 */
    ca_uint32_t B                    : 10 ; /* bits 15:6 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp0_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp1                               0xf4309818
#define TE_PIE_dp1_dft                           0x00020000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ceiling              : 28 ; /* bits 27:0 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp1_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp1_mid                           0xf430981c
#define TE_PIE_dp1_mid_dft                       0x00020000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ceiling              : 28 ; /* bits 27:0 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp1_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp1_big                           0xf4309820
#define TE_PIE_dp1_big_dft                       0x00020000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ceiling              : 28 ; /* bits 27:0 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp1_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp2_0                             0xf4309824
#define TE_PIE_dp2_0_STRIDE                      12
#define TE_PIE_dp2_0_COUNT                       16
#define TE_PIE_dp2_0_dft                         0x000f4240

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_reset_timeout  : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp2_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp2_0_mid                         0xf4309828
#define TE_PIE_dp2_0_mid_STRIDE                  12
#define TE_PIE_dp2_0_mid_COUNT                   16
#define TE_PIE_dp2_0_mid_dft                     0x000f4240

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_reset_timeout  : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp2_0_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp2_0_big                         0xf430982c
#define TE_PIE_dp2_0_big_STRIDE                  12
#define TE_PIE_dp2_0_big_COUNT                   16
#define TE_PIE_dp2_0_big_dft                     0x000f4240

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_reset_timeout  : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp2_0_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp3_0                             0xf43098e4
#define TE_PIE_dp3_0_STRIDE                      12
#define TE_PIE_dp3_0_COUNT                       16
#define TE_PIE_dp3_0_dft                         0x00030d40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_high         : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp3_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp3_0_mid                         0xf43098e8
#define TE_PIE_dp3_0_mid_STRIDE                  12
#define TE_PIE_dp3_0_mid_COUNT                   16
#define TE_PIE_dp3_0_mid_dft                     0x00030d40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_high         : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp3_0_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp3_0_big                         0xf43098ec
#define TE_PIE_dp3_0_big_STRIDE                  12
#define TE_PIE_dp3_0_big_COUNT                   16
#define TE_PIE_dp3_0_big_dft                     0x00030d40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_high         : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp3_0_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp4_0                             0xf43099a4
#define TE_PIE_dp4_0_STRIDE                      12
#define TE_PIE_dp4_0_COUNT                       16
#define TE_PIE_dp4_0_dft                         0x00001388

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_low          : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp4_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp4_0_mid                         0xf43099a8
#define TE_PIE_dp4_0_mid_STRIDE                  12
#define TE_PIE_dp4_0_mid_COUNT                   16
#define TE_PIE_dp4_0_mid_dft                     0x00001388

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_low          : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp4_0_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp4_0_big                         0xf43099ac
#define TE_PIE_dp4_0_big_STRIDE                  12
#define TE_PIE_dp4_0_big_COUNT                   16
#define TE_PIE_dp4_0_big_dft                     0x00001388

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_low          : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp4_0_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp5_0                             0xf4309a64
#define TE_PIE_dp5_0_STRIDE                      12
#define TE_PIE_dp5_0_COUNT                       16
#define TE_PIE_dp5_0_dft                         0x000003e8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_target       : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp5_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp5_0_mid                         0xf4309a68
#define TE_PIE_dp5_0_mid_STRIDE                  12
#define TE_PIE_dp5_0_mid_COUNT                   16
#define TE_PIE_dp5_0_mid_dft                     0x000003e8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_target       : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp5_0_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp5_0_big                         0xf4309a6c
#define TE_PIE_dp5_0_big_STRIDE                  12
#define TE_PIE_dp5_0_big_COUNT                   16
#define TE_PIE_dp5_0_big_dft                     0x000003e8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latency_target       : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp5_0_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp6_0                             0xf4309b24
#define TE_PIE_dp6_0_STRIDE                      4
#define TE_PIE_dp6_0_COUNT                       16
#define TE_PIE_dp6_0_dft                         0x07735940

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msr                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp6_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dp8_0                             0xf4309b64
#define TE_PIE_dp8_0_STRIDE                      4
#define TE_PIE_dp8_0_COUNT                       16
#define TE_PIE_dp8_0_dft                         0x07735940

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t peak_rate            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dp8_0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en0                               0xf4309ba4
#define TE_PIE_en0_dft                           0x01000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t high                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en0_mid                           0xf4309ba8
#define TE_PIE_en0_mid_dft                       0x01000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t high                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en0_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en0_big                           0xf4309bac
#define TE_PIE_en0_big_dft                       0x01000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t high                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en0_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en1                               0xf4309bb0
#define TE_PIE_en1_dft                           0x00004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en1_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en1_mid                           0xf4309bb4
#define TE_PIE_en1_mid_dft                       0x00004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en1_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en1_big                           0xf4309bb8
#define TE_PIE_en1_big_dft                       0x00004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en1_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en2                               0xf4309bbc
#define TE_PIE_en2_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t random_disable       :  1 ; /* bits 0:0 */
    ca_uint32_t drop_prob_scale      :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en2_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en3                               0xf4309bc0
#define TE_PIE_en3_dft                           0x00000800

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en3_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en4                               0xf4309bc4
#define TE_PIE_en4_dft                           0x00000064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst                : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en4_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en4_mid                           0xf4309bc8
#define TE_PIE_en4_mid_dft                       0x00000064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst                : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en4_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_en4_big                           0xf4309bcc
#define TE_PIE_en4_big_dft                       0x00000064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst                : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_en4_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_mean                              0xf4309bd0
#define TE_PIE_mean_dft                          0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t size                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_mean_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_mean_mid                          0xf4309bd4
#define TE_PIE_mean_mid_dft                      0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t size                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_mean_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_mean_big                          0xf4309bd8
#define TE_PIE_mean_big_dft                      0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t size                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_mean_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_pie                               0xf4309bdc
#define TE_PIE_pie_dft                           0x0001e000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t q_full               : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_pie_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_pie_mid                           0xf4309be0
#define TE_PIE_pie_mid_dft                       0x0001e000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t q_full               : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_pie_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_pie_big                           0xf4309be4
#define TE_PIE_pie_big_dft                       0x0001e000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t q_full               : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_pie_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_te                                0xf4309be8
#define TE_PIE_te_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t schif_tbc_mode       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_te_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_timer0                            0xf4309bec
#define TE_PIE_timer0_dft                        0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scalar               :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_timer0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_timer1                            0xf4309bf0
#define TE_PIE_timer1_dft                        0x00000096

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t interval             : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_timer1_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_timer2                            0xf4309bf4
#define TE_PIE_timer2_dft                        0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_decrement      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_timer2_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_timer2_mid                        0xf4309bf8
#define TE_PIE_timer2_mid_dft                    0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_decrement      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_timer2_mid_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_timer2_big                        0xf4309bfc
#define TE_PIE_timer2_big_dft                    0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t burst_decrement      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_timer2_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_LPID_QOS_VOQ_ACCESS               0xf4309c00
#define TE_PIE_LPID_QOS_VOQ_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_LPID_QOS_VOQ_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_LPID_QOS_VOQ_DATA                 0xf4309c04
#define TE_PIE_LPID_QOS_VOQ_DATA_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_LPID_QOS_VOQ_DATA_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg0                              0xf4309c08
#define TE_PIE_dbg0_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ivoq0                :  2 ; /* bits 1:0 */
    ca_uint32_t ivoq1                :  2 ; /* bits 3:2 */
    ca_uint32_t ivoq2                :  2 ; /* bits 5:4 */
    ca_uint32_t ivoq3                :  2 ; /* bits 7:6 */
    ca_uint32_t ivoq4                :  2 ; /* bits 9:8 */
    ca_uint32_t ivoq5                :  2 ; /* bits 11:10 */
    ca_uint32_t ivoq6                :  2 ; /* bits 13:12 */
    ca_uint32_t ivoq7                :  2 ; /* bits 15:14 */
    ca_uint32_t ivoq8                :  2 ; /* bits 17:16 */
    ca_uint32_t ivoq9                :  2 ; /* bits 19:18 */
    ca_uint32_t ivoq10               :  2 ; /* bits 21:20 */
    ca_uint32_t ivoq11               :  2 ; /* bits 23:22 */
    ca_uint32_t ivoq12               :  2 ; /* bits 25:24 */
    ca_uint32_t ivoq13               :  2 ; /* bits 27:26 */
    ca_uint32_t ivoq14               :  2 ; /* bits 29:28 */
    ca_uint32_t ivoq15               :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg0_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg1                              0xf4309c0c
#define TE_PIE_dbg1_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp_voq0              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg1_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg2                              0xf4309c10
#define TE_PIE_dbg2_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp_voq1              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg2_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg3                              0xf4309c14
#define TE_PIE_dbg3_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp_voq2              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg3_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg4                              0xf4309c18
#define TE_PIE_dbg4_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp_voq3              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg4_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg5                              0xf4309c1c
#define TE_PIE_dbg5_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba_voq0              : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg5_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg6                              0xf4309c20
#define TE_PIE_dbg6_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba_voq1              : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg6_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg7                              0xf4309c24
#define TE_PIE_dbg7_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba_voq2              : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg7_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg8                              0xf4309c28
#define TE_PIE_dbg8_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ba_voq3              : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg8_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg9                              0xf4309c2c
#define TE_PIE_dbg9_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timer_tdm            :  4 ; /* bits 3:0 */
    ca_uint32_t wfd_completion       :  1 ; /* bits 4:4 */
    ca_uint32_t divides_started      :  1 ; /* bits 5:5 */
    ca_uint32_t wf_divide_completion :  1 ; /* bits 6:6 */
    ca_uint32_t kick_calculation     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg9_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg10                             0xf4309c30
#define TE_PIE_dbg10_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bc_ivoq0             : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg10_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg11                             0xf4309c34
#define TE_PIE_dbg11_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bc_ivoq1             : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg11_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg12                             0xf4309c38
#define TE_PIE_dbg12_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bc_ivoq2             : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg12_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg13                             0xf4309c3c
#define TE_PIE_dbg13_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bc_ivoq3             : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg13_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg14                             0xf4309c40
#define TE_PIE_dbg14_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc_ivoq0            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg14_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg15                             0xf4309c44
#define TE_PIE_dbg15_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc_ivoq1            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg15_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg16                             0xf4309c48
#define TE_PIE_dbg16_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc_ivoq2            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg16_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg17                             0xf4309c4c
#define TE_PIE_dbg17_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc_ivoq3            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg17_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg18                             0xf4309c50
#define TE_PIE_dbg18_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ivoq_write_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg18_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg_sel                           0xf4309c54
#define TE_PIE_dbg_sel_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t qdelay_sel           :  5 ; /* bits 8:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t accu_byte_sel        :  5 ; /* bits 16:12 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t tdm                  :  4 ; /* bits 23:20 */
    ca_uint32_t dbg_signal_tdm_sel   :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg_sel_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg_qdelay                        0xf4309c58
#define TE_PIE_dbg_qdelay_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t delay                : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg_qdelay_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg_accu_byte                     0xf4309c5c
#define TE_PIE_dbg_accu_byte_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg_accu_byte_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg_flow_type_big_cnt             0xf4309c60
#define TE_PIE_dbg_flow_type_big_cnt_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg_flow_type_big_cnt_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg_aqm_state_big                 0xf4309c64
#define TE_PIE_dbg_aqm_state_big_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t state                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg_aqm_state_big_t;
#endif /* !__ASSEMBLER__ */


#define TE_PIE_dbg_signal_tdm                    0xf4309c68
#define TE_PIE_dbg_signal_tdm_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TE_PIE_dbg_signal_tdm_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pie */
#ifndef __ASSEMBLER__
typedef struct {
  TE_PIE_buf_t                             buf;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TE_PIE_buf_mid_t                         buf_mid;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TE_PIE_buf_big_t                         buf_big;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TE_PIE_dp0_t                             dp0;                           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TE_PIE_dp0_mid_t                         dp0_mid;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TE_PIE_dp0_big_t                         dp0_big;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TE_PIE_dp1_t                             dp1;                           /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TE_PIE_dp1_mid_t                         dp1_mid;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  TE_PIE_dp1_big_t                         dp1_big;                       /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  TE_PIE_dp2_0_t                           dp2_0;                         /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  TE_PIE_dp2_0_mid_t                       dp2_0_mid;                     /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  TE_PIE_dp2_0_big_t                       dp2_0_big;                     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[183];
  TE_PIE_dp3_0_t                           dp3_0;                         /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd13[3];
  TE_PIE_dp3_0_mid_t                       dp3_0_mid;                     /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd14[3];
  TE_PIE_dp3_0_big_t                       dp3_0_big;                     /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd15[183];
  TE_PIE_dp4_0_t                           dp4_0;                         /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd16[3];
  TE_PIE_dp4_0_mid_t                       dp4_0_mid;                     /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd17[3];
  TE_PIE_dp4_0_big_t                       dp4_0_big;                     /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd18[183];
  TE_PIE_dp5_0_t                           dp5_0;                         /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd19[3];
  TE_PIE_dp5_0_mid_t                       dp5_0_mid;                     /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd20[3];
  TE_PIE_dp5_0_big_t                       dp5_0_big;                     /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd21[183];
  TE_PIE_dp6_0_t                           dp6_0;                         /* addr: 0x00000324 */
  ca_uint32_t                              rsrvd22[63];
  TE_PIE_dp8_0_t                           dp8_0;                         /* addr: 0x00000364 */
  ca_uint32_t                              rsrvd23[63];
  TE_PIE_en0_t                             en0;                           /* addr: 0x000003a4 */
  ca_uint32_t                              rsrvd24[3];
  TE_PIE_en0_mid_t                         en0_mid;                       /* addr: 0x000003a8 */
  ca_uint32_t                              rsrvd25[3];
  TE_PIE_en0_big_t                         en0_big;                       /* addr: 0x000003ac */
  ca_uint32_t                              rsrvd26[3];
  TE_PIE_en1_t                             en1;                           /* addr: 0x000003b0 */
  ca_uint32_t                              rsrvd27[3];
  TE_PIE_en1_mid_t                         en1_mid;                       /* addr: 0x000003b4 */
  ca_uint32_t                              rsrvd28[3];
  TE_PIE_en1_big_t                         en1_big;                       /* addr: 0x000003b8 */
  ca_uint32_t                              rsrvd29[3];
  TE_PIE_en2_t                             en2;                           /* addr: 0x000003bc */
  ca_uint32_t                              rsrvd30[3];
  TE_PIE_en3_t                             en3;                           /* addr: 0x000003c0 */
  ca_uint32_t                              rsrvd31[3];
  TE_PIE_en4_t                             en4;                           /* addr: 0x000003c4 */
  ca_uint32_t                              rsrvd32[3];
  TE_PIE_en4_mid_t                         en4_mid;                       /* addr: 0x000003c8 */
  ca_uint32_t                              rsrvd33[3];
  TE_PIE_en4_big_t                         en4_big;                       /* addr: 0x000003cc */
  ca_uint32_t                              rsrvd34[3];
  TE_PIE_mean_t                            mean;                          /* addr: 0x000003d0 */
  ca_uint32_t                              rsrvd35[3];
  TE_PIE_mean_mid_t                        mean_mid;                      /* addr: 0x000003d4 */
  ca_uint32_t                              rsrvd36[3];
  TE_PIE_mean_big_t                        mean_big;                      /* addr: 0x000003d8 */
  ca_uint32_t                              rsrvd37[3];
  TE_PIE_pie_t                             pie;                           /* addr: 0x000003dc */
  ca_uint32_t                              rsrvd38[3];
  TE_PIE_pie_mid_t                         pie_mid;                       /* addr: 0x000003e0 */
  ca_uint32_t                              rsrvd39[3];
  TE_PIE_pie_big_t                         pie_big;                       /* addr: 0x000003e4 */
  ca_uint32_t                              rsrvd40[3];
  TE_PIE_te_t                              te;                            /* addr: 0x000003e8 */
  ca_uint32_t                              rsrvd41[3];
  TE_PIE_timer0_t                          timer0;                        /* addr: 0x000003ec */
  ca_uint32_t                              rsrvd42[3];
  TE_PIE_timer1_t                          timer1;                        /* addr: 0x000003f0 */
  ca_uint32_t                              rsrvd43[3];
  TE_PIE_timer2_t                          timer2;                        /* addr: 0x000003f4 */
  ca_uint32_t                              rsrvd44[3];
  TE_PIE_timer2_mid_t                      timer2_mid;                    /* addr: 0x000003f8 */
  ca_uint32_t                              rsrvd45[3];
  TE_PIE_timer2_big_t                      timer2_big;                    /* addr: 0x000003fc */
  ca_uint32_t                              rsrvd46[3];
  TE_PIE_LPID_QOS_VOQ_ACCESS_t             LPID_QOS_VOQ_ACCESS;           /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd47[3];
  TE_PIE_LPID_QOS_VOQ_DATA_t               LPID_QOS_VOQ_DATA;             /* addr: 0x00000404 */
  ca_uint32_t                              rsrvd48[3];
  TE_PIE_dbg0_t                            dbg0;                          /* addr: 0x00000408 */
  ca_uint32_t                              rsrvd49[3];
  TE_PIE_dbg1_t                            dbg1;                          /* addr: 0x0000040c */
  ca_uint32_t                              rsrvd50[3];
  TE_PIE_dbg2_t                            dbg2;                          /* addr: 0x00000410 */
  ca_uint32_t                              rsrvd51[3];
  TE_PIE_dbg3_t                            dbg3;                          /* addr: 0x00000414 */
  ca_uint32_t                              rsrvd52[3];
  TE_PIE_dbg4_t                            dbg4;                          /* addr: 0x00000418 */
  ca_uint32_t                              rsrvd53[3];
  TE_PIE_dbg5_t                            dbg5;                          /* addr: 0x0000041c */
  ca_uint32_t                              rsrvd54[3];
  TE_PIE_dbg6_t                            dbg6;                          /* addr: 0x00000420 */
  ca_uint32_t                              rsrvd55[3];
  TE_PIE_dbg7_t                            dbg7;                          /* addr: 0x00000424 */
  ca_uint32_t                              rsrvd56[3];
  TE_PIE_dbg8_t                            dbg8;                          /* addr: 0x00000428 */
  ca_uint32_t                              rsrvd57[3];
  TE_PIE_dbg9_t                            dbg9;                          /* addr: 0x0000042c */
  ca_uint32_t                              rsrvd58[3];
  TE_PIE_dbg10_t                           dbg10;                         /* addr: 0x00000430 */
  ca_uint32_t                              rsrvd59[3];
  TE_PIE_dbg11_t                           dbg11;                         /* addr: 0x00000434 */
  ca_uint32_t                              rsrvd60[3];
  TE_PIE_dbg12_t                           dbg12;                         /* addr: 0x00000438 */
  ca_uint32_t                              rsrvd61[3];
  TE_PIE_dbg13_t                           dbg13;                         /* addr: 0x0000043c */
  ca_uint32_t                              rsrvd62[3];
  TE_PIE_dbg14_t                           dbg14;                         /* addr: 0x00000440 */
  ca_uint32_t                              rsrvd63[3];
  TE_PIE_dbg15_t                           dbg15;                         /* addr: 0x00000444 */
  ca_uint32_t                              rsrvd64[3];
  TE_PIE_dbg16_t                           dbg16;                         /* addr: 0x00000448 */
  ca_uint32_t                              rsrvd65[3];
  TE_PIE_dbg17_t                           dbg17;                         /* addr: 0x0000044c */
  ca_uint32_t                              rsrvd66[3];
  TE_PIE_dbg18_t                           dbg18;                         /* addr: 0x00000450 */
  ca_uint32_t                              rsrvd67[3];
  TE_PIE_dbg_sel_t                         dbg_sel;                       /* addr: 0x00000454 */
  ca_uint32_t                              rsrvd68[3];
  TE_PIE_dbg_qdelay_t                      dbg_qdelay;                    /* addr: 0x00000458 */
  ca_uint32_t                              rsrvd69[3];
  TE_PIE_dbg_accu_byte_t                   dbg_accu_byte;                 /* addr: 0x0000045c */
  ca_uint32_t                              rsrvd70[3];
  TE_PIE_dbg_flow_type_big_cnt_t           dbg_flow_type_big_cnt;         /* addr: 0x00000460 */
  ca_uint32_t                              rsrvd71[3];
  TE_PIE_dbg_aqm_state_big_t               dbg_aqm_state_big;             /* addr: 0x00000464 */
  ca_uint32_t                              rsrvd72[3];
  TE_PIE_dbg_signal_tdm_t                  dbg_signal_tdm;                /* addr: 0x00000468 */
} APB0_TE_PIE_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* TE */

#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              rsrvd1[4096];
  APB0_TE_TE_GLB_t                  te_glb;                        /* addr: 0x00001000 */
  ca_uint32_t                              rsrvd2[73];
  APB0_TE_POL_t                     pol;                           /* addr: 0x00001090 */
  ca_uint32_t                              rsrvd3[481];
  APB0_TE_SHP_t                     shp;                           /* addr: 0x00001300 */
  ca_uint32_t                              rsrvd4[93];
  APB0_TE_WRED_t                    wred;                          /* addr: 0x00001380 */
  ca_uint32_t                              rsrvd5[99];
  APB0_TE_FC_GLB_t                  fc_glb;                        /* addr: 0x00001400 */
  ca_uint32_t                              rsrvd6[111];
  APB0_TE_FC_t                      fc[2];                         /* addr: 0x00001480 */
  APB0_TE_CB_t                      cb;                            /* addr: 0x00001500 */
  ca_uint32_t                              rsrvd7[267];
  APB0_TE_PM_t                      pm;                            /* addr: 0x00001700 */
  ca_uint32_t                              rsrvd8[207];
  APB0_TE_PIE_t                     pie;                           /* addr: 0x00001800 */
} APB0_TE_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* NE_L23 */

#ifndef __ASSEMBLER__
#endif /* !__ASSEMBLER__ */


/*
 * NI_HV
 */

/*
 * GLB
 */

#define NI_HV_GLB_REVISION                       0xf430a000
#define NI_HV_GLB_REVISION_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minor                : 16 ; /* bits 15:0 */
    ca_uint32_t major                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_REVISION_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_INIT_DONE                      0xf430a004
#define NI_HV_GLB_INIT_DONE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ni_init_done         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_INIT_DONE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_INTF_RST_CONFIG                0xf430a008
#define NI_HV_GLB_INTF_RST_CONFIG_dft            0x0077ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intf_rst_p0          :  1 ; /* bits 0:0 */
    ca_uint32_t intf_rst_p1          :  1 ; /* bits 1:1 */
    ca_uint32_t intf_rst_p2          :  1 ; /* bits 2:2 */
    ca_uint32_t intf_rst_p3          :  1 ; /* bits 3:3 */
    ca_uint32_t intf_rst_p4          :  1 ; /* bits 4:4 */
    ca_uint32_t intf_rst_p5          :  1 ; /* bits 5:5 */
    ca_uint32_t mac_rx_rst_p0        :  1 ; /* bits 6:6 */
    ca_uint32_t mac_rx_rst_p1        :  1 ; /* bits 7:7 */
    ca_uint32_t mac_rx_rst_p2        :  1 ; /* bits 8:8 */
    ca_uint32_t mac_rx_rst_p3        :  1 ; /* bits 9:9 */
    ca_uint32_t mac_rx_rst_p4        :  1 ; /* bits 10:10 */
    ca_uint32_t mac_rx_rst_p5        :  1 ; /* bits 11:11 */
    ca_uint32_t mac_tx_rst_p0        :  1 ; /* bits 12:12 */
    ca_uint32_t mac_tx_rst_p1        :  1 ; /* bits 13:13 */
    ca_uint32_t mac_tx_rst_p2        :  1 ; /* bits 14:14 */
    ca_uint32_t mac_tx_rst_p3        :  1 ; /* bits 15:15 */
    ca_uint32_t mac_tx_rst_p4        :  1 ; /* bits 16:16 */
    ca_uint32_t mac_tx_rst_p5        :  1 ; /* bits 17:17 */
    ca_uint32_t port_rst_p5          :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pcs_rst_p5           :  1 ; /* bits 20:20 */
    ca_uint32_t mac_rst_p6           :  1 ; /* bits 21:21 */
    ca_uint32_t mac_rst_p5           :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd2               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_INTF_RST_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_IPG_CMPS_CFG                   0xf430a00c
#define NI_HV_GLB_IPG_CMPS_CFG_dft               0x00005555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_cmps_ipg_cfg      :  2 ; /* bits 1:0 */
    ca_uint32_t p1_cmps_ipg_cfg      :  2 ; /* bits 3:2 */
    ca_uint32_t p2_cmps_ipg_cfg      :  2 ; /* bits 5:4 */
    ca_uint32_t p3_cmps_ipg_cfg      :  2 ; /* bits 7:6 */
    ca_uint32_t p4_cmps_ipg_cfg      :  2 ; /* bits 9:8 */
    ca_uint32_t p5_cmps_ipg_cfg      :  2 ; /* bits 11:10 */
    ca_uint32_t p6_cmps_ipg_cfg      :  2 ; /* bits 13:12 */
    ca_uint32_t p7_cmps_ipg_cfg      :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_IPG_CMPS_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GPHY_STS_AUTOSYNC_CFG          0xf430a010
#define NI_HV_GLB_GPHY_STS_AUTOSYNC_CFG_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_en_physts_autosync :  1 ; /* bits 0:0 */
    ca_uint32_t p1_en_physts_autosync :  1 ; /* bits 1:1 */
    ca_uint32_t p2_en_physts_autosync :  1 ; /* bits 2:2 */
    ca_uint32_t p3_en_physts_autosync :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t p0_en_fc_autosync    :  1 ; /* bits 8:8 */
    ca_uint32_t p1_en_fc_autosync    :  1 ; /* bits 9:9 */
    ca_uint32_t p2_en_fc_autosync    :  1 ; /* bits 10:10 */
    ca_uint32_t p3_en_fc_autosync    :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GPHY_STS_AUTOSYNC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PCS_STATUS_1                   0xf430a014
#define NI_HV_GLB_PCS_STATUS_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p2_pcs_ablty         : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t p3_pcs_ablty         : 13 ; /* bits 28:16 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PCS_STATUS_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PCS_STATUS_0                   0xf430a018
#define NI_HV_GLB_PCS_STATUS_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_pcs_ablty         : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t p1_pcs_ablty         : 13 ; /* bits 28:16 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PCS_STATUS_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_STATIC_CFG                     0xf430a01c
#define NI_HV_GLB_STATIC_CFG_dft                 0x3ae4012f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_to_cpu          :  4 ; /* bits 3:0 */
    ca_uint32_t mgmt_pt_to_fe_also   :  1 ; /* bits 4:4 */
    ca_uint32_t txcrc_chk_en         :  1 ; /* bits 5:5 */
    ca_uint32_t p5_rgmii_tx_clk_phase :  2 ; /* bits 7:6 */
    ca_uint32_t p5_rgmii_tx_data_order :  1 ; /* bits 8:8 */
    ca_uint32_t p5_ge_sel            :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t port0_qxgmii_sel     :  1 ; /* bits 12:12 */
    ca_uint32_t port1_qxgmii_sel     :  1 ; /* bits 13:13 */
    ca_uint32_t port2_qxgmii_sel     :  1 ; /* bits 14:14 */
    ca_uint32_t port3_qxgmii_sel     :  1 ; /* bits 15:15 */
    ca_uint32_t rxmib_mode           :  1 ; /* bits 16:16 */
    ca_uint32_t txmib_mode           :  1 ; /* bits 17:17 */
    ca_uint32_t rt_mib_en            :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rxaui_mode           :  2 ; /* bits 21:20 */
    ca_uint32_t rxaui_sigdet         :  2 ; /* bits 23:22 */
    ca_uint32_t cnt_op_mode          :  3 ; /* bits 26:24 */
    ca_uint32_t saturn_p7_tx_crc32_add :  1 ; /* bits 27:27 */
    ca_uint32_t venus_p6_tx_crc32_add :  1 ; /* bits 28:28 */
    ca_uint32_t venus_p5_tx_crc32_add :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_STATIC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VENUS_CORESEC10_CFG            0xf430a020
#define NI_HV_GLB_VENUS_CORESEC10_CFG_dft        0x40000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t xgmii_rx_macsec_on   :  1 ; /* bits 9:9 */
    ca_uint32_t xgmii_tx_macsec_on   :  1 ; /* bits 10:10 */
    ca_uint32_t p6_txmac_in_sel      :  1 ; /* bits 11:11 */
    ca_uint32_t p7_xfi_in_sel        :  1 ; /* bits 12:12 */
    ca_uint32_t macsec_enc_in_sel    :  1 ; /* bits 13:13 */
    ca_uint32_t macsec_dec_in_sel    :  1 ; /* bits 14:14 */
    ca_uint32_t p6_nirx_in_sel       :  1 ; /* bits 15:15 */
    ca_uint32_t p7_nirx_in_sel       :  1 ; /* bits 16:16 */
    ca_uint32_t macsec_decrypt_en    :  1 ; /* bits 17:17 */
    ca_uint32_t macsec_encrypt_en    :  1 ; /* bits 18:18 */
    ca_uint32_t enc_all              :  1 ; /* bits 19:19 */
    ca_uint32_t macsec_sectag_type   :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t macsec_enc_fifo_threshold :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VENUS_CORESEC10_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MAC_ADDR_CFG0                  0xf430a024
#define NI_HV_GLB_MAC_ADDR_CFG0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MAC_ADDR_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MAC_ADDR_CFG1                  0xf430a028
#define NI_HV_GLB_MAC_ADDR_CFG1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr1            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MAC_ADDR_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_WOL_PASSWD_0                   0xf430a02c
#define NI_HV_GLB_WOL_PASSWD_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wol_passwd0          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_WOL_PASSWD_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_WOL_PASSWD_1                   0xf430a030
#define NI_HV_GLB_WOL_PASSWD_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wol_passwd1          :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_WOL_PASSWD_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PKT_LEN_CFG                    0xf430a034
#define NI_HV_GLB_PKT_LEN_CFG_dft                0x004023f1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_pkt_size         : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t min_pkt_size         : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PKT_LEN_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PKT_STOR_LEN_CFG               0xf430a038
#define NI_HV_GLB_PKT_STOR_LEN_CFG_dft           0x00002454

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_stor_pkt_len     : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PKT_STOR_LEN_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P5_BYPASS_CFG                  0xf430a03c
#define NI_HV_GLB_P5_BYPASS_CFG_dft              0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t byp_cos              :  3 ; /* bits 2:0 */
    ca_uint32_t byp_dpq              :  1 ; /* bits 3:3 */
    ca_uint32_t byp_dpid             :  6 ; /* bits 9:4 */
    ca_uint32_t byp_mir              :  1 ; /* bits 10:10 */
    ca_uint32_t byp_ndrp             :  1 ; /* bits 11:11 */
    ca_uint32_t byp_en               :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P5_BYPASS_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_BYPASS_CFG                 0xf430a040
#define NI_HV_GLB_XGE_BYPASS_CFG_dft             0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p6_byp_cos           :  3 ; /* bits 2:0 */
    ca_uint32_t p6_byp_dpq           :  1 ; /* bits 3:3 */
    ca_uint32_t p6_byp_dpid          :  6 ; /* bits 9:4 */
    ca_uint32_t p6_byp_mir           :  1 ; /* bits 10:10 */
    ca_uint32_t p6_byp_ndrp          :  1 ; /* bits 11:11 */
    ca_uint32_t p6_byp_en            :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t p6_ts_fifo_rst       :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_BYPASS_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_RXPAUSE_CFG               0xf430a044
#define NI_HV_GLB_XGE6_RXPAUSE_CFG_dft           0x0004b064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thre_lo              : 10 ; /* bits 9:0 */
    ca_uint32_t thre_hi              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_RXPAUSE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE7_RXFIFO_THRESHOLD          0xf430a048
#define NI_HV_GLB_XGE7_RXFIFO_THRESHOLD_dft      0x00032014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t free_buf_thre_lo     :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t free_buf_thre_hi     :  9 ; /* bits 18:10 */
    ca_uint32_t rsrvd2               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE7_RXFIFO_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_MAC_CFG1                  0xf430a04c
#define NI_HV_GLB_XGE6_MAC_CFG1_dft              0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac1                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_MAC_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_MAC_CFG0                  0xf430a050
#define NI_HV_GLB_XGE6_MAC_CFG0_dft              0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_MAC_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_FLOW_CONTROL_CFG          0xf430a054
#define NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_dft      0xc5ff011c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qbb_tx_en            :  1 ; /* bits 0:0 */
    ca_uint32_t qbb_rx_en            :  1 ; /* bits 1:1 */
    ca_uint32_t pau_tx_en            :  1 ; /* bits 2:2 */
    ca_uint32_t pau_rx_en            :  1 ; /* bits 3:3 */
    ca_uint32_t adjust_pause_cnt     : 12 ; /* bits 15:4 */
    ca_uint32_t qbb_qen              :  8 ; /* bits 23:16 */
    ca_uint32_t txpfc_keep           :  1 ; /* bits 24:24 */
    ca_uint32_t tx_sw_pause_en       :  1 ; /* bits 25:25 */
    ca_uint32_t rx_drp_pau_en        :  1 ; /* bits 26:26 */
    ca_uint32_t tx_sw_pausereq       :  1 ; /* bits 27:27 */
    ca_uint32_t internal_txstop_sel  :  1 ; /* bits 28:28 */
    ca_uint32_t tx_remheader_dis     :  1 ; /* bits 29:29 */
    ca_uint32_t rx_pausereq_sel      :  1 ; /* bits 30:30 */
    ca_uint32_t te_pausereq_sel      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_TX_REPEAT_CNT             0xf430a058
#define NI_HV_GLB_XGE6_TX_REPEAT_CNT_dft         0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t repeat_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_TX_REPEAT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_TX_QUANTA0                0xf430a05c
#define NI_HV_GLB_XGE6_TX_QUANTA0_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta0        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta1        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_TX_QUANTA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_TX_QUANTA1                0xf430a060
#define NI_HV_GLB_XGE6_TX_QUANTA1_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta2        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta3        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_TX_QUANTA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_TX_QUANTA2                0xf430a064
#define NI_HV_GLB_XGE6_TX_QUANTA2_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta4        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta5        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_TX_QUANTA2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_TX_QUANTA3                0xf430a068
#define NI_HV_GLB_XGE6_TX_QUANTA3_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta6        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta7        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_TX_QUANTA3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_QBB_WAIT_TIME             0xf430a06c
#define NI_HV_GLB_XGE6_QBB_WAIT_TIME_dft         0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wait_cnt             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_QBB_WAIT_TIME_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT      0xf430a070
#define NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_pkt_cnt        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT      0xf430a074
#define NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_paus_pkt_cnt     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT      0xf430a078
#define NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_pkt_cnt        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1      0xf430a07c
#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1_dft  0xe4e4e4e4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_cal1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0      0xf430a080
#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0_dft  0xe4e4e4e4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_cal0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_CTRL_CFG                 0xf430a084
#define NI_HV_GLB_RXMUX_CTRL_CFG_dft             0x100a09ba

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3fe_pspid           :  4 ; /* bits 3:0 */
    ca_uint32_t mce_pspid            :  4 ; /* bits 7:4 */
    ca_uint32_t dma_pspid            :  4 ; /* bits 11:8 */
    ca_uint32_t err_pkt_ok           :  1 ; /* bits 12:12 */
    ca_uint32_t calendar_en          :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t next_sop_delay       : 12 ; /* bits 27:16 */
    ca_uint32_t dbg_sel              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_CTRL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_LAST_HDR_A2              0xf430a088
#define NI_HV_GLB_RXMUX_LAST_HDR_A2_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdra2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_LAST_HDR_A2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_LAST_HDR_A1              0xf430a08c
#define NI_HV_GLB_RXMUX_LAST_HDR_A1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdra1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_LAST_HDR_A1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_LAST_HDR_A0              0xf430a090
#define NI_HV_GLB_RXMUX_LAST_HDR_A0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdra0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_LAST_HDR_A0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_PKTCNT                   0xf430a094
#define NI_HV_GLB_RXMUX_PKTCNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_pkt_cnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_PKTCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG   0xf430a098
#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_STRIDE 4
#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_COUNT 12
#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_dft 0x0000a014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thre_lo              : 10 ; /* bits 9:0 */
    ca_uint32_t thre_hi              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0c8
#define NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000fffc0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0cc
#define NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000eff80

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0d0
#define NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000dff40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0d4
#define NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000cff00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0d8
#define NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000bfe00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0dc
#define NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0007fd80

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0e0
#define NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0005fd40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0e4
#define NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0004fd00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0e8
#define NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0003fcc0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0ec
#define NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0002fc80

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0f0
#define NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0001fc40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430a0f4
#define NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0000fc00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_ptr             : 10 ; /* bits 9:0 */
    ca_uint32_t top_ptr              : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE          0xf430a0f8
#define NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t load                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG     0xf430a0fc
#define NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_vlan_tag_num      :  2 ; /* bits 1:0 */
    ca_uint32_t p1_vlan_tag_num      :  2 ; /* bits 3:2 */
    ca_uint32_t p2_vlan_tag_num      :  2 ; /* bits 5:4 */
    ca_uint32_t p3_vlan_tag_num      :  2 ; /* bits 7:6 */
    ca_uint32_t p4_vlan_tag_num      :  2 ; /* bits 9:8 */
    ca_uint32_t p5_vlan_tag_num      :  2 ; /* bits 11:10 */
    ca_uint32_t p6_vlan_tag_num      :  2 ; /* bits 13:12 */
    ca_uint32_t p7_vlan_tag_num      :  2 ; /* bits 15:14 */
    ca_uint32_t p8_vlan_tag_num      :  2 ; /* bits 17:16 */
    ca_uint32_t p9_vlan_tag_num      :  2 ; /* bits 19:18 */
    ca_uint32_t p10_vlan_tag_num     :  2 ; /* bits 21:20 */
    ca_uint32_t p11_vlan_tag_num     :  2 ; /* bits 23:22 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_HDR_BUF_STATUS           0xf430a100
#define NI_HV_GLB_RXMUX_HDR_BUF_STATUS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_buf_empty        : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_HDR_BUF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_DATA_BUF_STATUS          0xf430a104
#define NI_HV_GLB_RXMUX_DATA_BUF_STATUS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seg_buf_empty        : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t seg_buf_full         : 12 ; /* bits 27:16 */
    ca_uint32_t l2fe_ni_rdy          :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_DATA_BUF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_DBG_CFG                  0xf430a108
#define NI_HV_GLB_RXMUX_DBG_CFG_dft              0x00000021

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0_sel             :  4 ; /* bits 3:0 */
    ca_uint32_t cnt1_sel             :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_DBG_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_OUT_CNT0                 0xf430a10c
#define NI_HV_GLB_RXMUX_OUT_CNT0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_OUT_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_OUT_CNT1                 0xf430a110
#define NI_HV_GLB_RXMUX_OUT_CNT1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_OUT_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_OUT_DRPCNT0              0xf430a114
#define NI_HV_GLB_RXMUX_OUT_DRPCNT0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_OUT_DRPCNT0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMUX_OUT_DRPCNT1              0xf430a118
#define NI_HV_GLB_RXMUX_OUT_DRPCNT1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMUX_OUT_DRPCNT1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_XRAM_STS                  0xf430a11c
#define NI_HV_GLB_NIRX_XRAM_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sts                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_XRAM_STS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3QM_STS                  0xf430a120
#define NI_HV_GLB_NIRX_L3QM_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sts                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3QM_STS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_STS                  0xf430a124
#define NI_HV_GLB_NIRX_L3FE_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sts                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_STS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P0_RX_DROPCNT                  0xf430a128
#define NI_HV_GLB_P0_RX_DROPCNT_STRIDE           4
#define NI_HV_GLB_P0_RX_DROPCNT_COUNT            7
#define NI_HV_GLB_P0_RX_DROPCNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CNT                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P0_RX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG      0xf430a144
#define NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG_dft  0x007f0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t max                  : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG      0xf430a148
#define NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG_dft  0x007f0080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t max                  : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG      0xf430a14c
#define NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG_dft  0x007f0100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t max                  : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG      0xf430a150
#define NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG_dft  0x007f0180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t max                  : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG      0xf430a154
#define NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG_dft  0x007f0200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t max                  : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG     0xf430a158
#define NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0280

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t max                  : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_DA_CFG0                     0xf430a15c
#define NI_HV_GLB_PG_DA_CFG0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_DA_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_DA_CFG1                     0xf430a160
#define NI_HV_GLB_PG_DA_CFG1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr1            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_DA_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_SA_CFG0                     0xf430a164
#define NI_HV_GLB_PG_SA_CFG0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_SA_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_SA_CFG1                     0xf430a168
#define NI_HV_GLB_PG_SA_CFG1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_addr1            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_SA_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_CFG0                        0xf430a16c
#define NI_HV_GLB_PG_CFG0_dft                    0x00648064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pg_len               : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t pg_len_data          :  1 ; /* bits 15:15 */
    ca_uint32_t pg_frm_cnt           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_CFG1                        0xf430a170
#define NI_HV_GLB_PG_CFG1_dft                    0x81008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pg_vlan1_tpid        : 16 ; /* bits 15:0 */
    ca_uint32_t pg_vlan2_tpid        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PG_FXPT_CFG                    0xf430a174
#define NI_HV_GLB_PG_FXPT_CFG_dft                0xaaaa5555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pg_fxpat             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PG_FXPT_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_DA1                         0xf430a178
#define NI_HV_GLB_PC_DA1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_da4               :  8 ; /* bits 7:0 */
    ca_uint32_t pc_da3               :  8 ; /* bits 15:8 */
    ca_uint32_t pc_da2               :  8 ; /* bits 23:16 */
    ca_uint32_t pc_da1               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_DA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_DA2                         0xf430a17c
#define NI_HV_GLB_PC_DA2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_da5               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_DA2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_SA1                         0xf430a180
#define NI_HV_GLB_PC_SA1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_sa4               :  8 ; /* bits 7:0 */
    ca_uint32_t pc_sa3               :  8 ; /* bits 15:8 */
    ca_uint32_t pc_sa2               :  8 ; /* bits 23:16 */
    ca_uint32_t pc_sa1               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_SA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_SA2                         0xf430a184
#define NI_HV_GLB_PC_SA2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_sa5               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_SA2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_CFG0                        0xf430a188
#define NI_HV_GLB_PC_CFG0_dft                    0x00000064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_len               : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_CFG1                        0xf430a18c
#define NI_HV_GLB_PC_CFG1_dft                    0x81008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_vlan1_tpid        : 16 ; /* bits 15:0 */
    ca_uint32_t pc_vlan2_tpid        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC_FXPT                        0xf430a190
#define NI_HV_GLB_PC_FXPT_dft                    0xaaaa5555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_fxpat             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC_FXPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RM_CFG                         0xf430a194
#define NI_HV_GLB_RM_CFG_dft                     0x2100000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm_en                :  1 ; /* bits 0:0 */
    ca_uint32_t rm_pid               :  4 ; /* bits 4:1 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rm_cntpkts           :  1 ; /* bits 8:8 */
    ca_uint32_t rm_clrcnt            :  1 ; /* bits 9:9 */
    ca_uint32_t rm_clrtb             :  1 ; /* bits 10:10 */
    ca_uint32_t debug_mode           :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 12 ;
    ca_uint32_t rm_tbinc             :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RM_TBMAX                       0xf430a198
#define NI_HV_GLB_RM_TBMAX_dft                   0x00ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm_tbmax             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RM_TBMAX_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RM_CNTR                        0xf430a19c
#define NI_HV_GLB_RM_CNTR_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm_cnt               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RM_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RM_LASTCNTR                    0xf430a1a0
#define NI_HV_GLB_RM_LASTCNTR_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm_lastcnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RM_LASTCNTR_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMIB_ACCESS                   0xf430a1a4
#define NI_HV_GLB_RXMIB_ACCESS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter_id           :  5 ; /* bits 4:0 */
    ca_uint32_t port_id              :  3 ; /* bits 7:5 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t debug_mode           :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 11 ;
    ca_uint32_t op_code              :  2 ; /* bits 29:28 */
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define     counter_id_RxUCPktCnt                         0x0
#define     counter_id_RxMCFrmCnt                         0x1
#define     counter_id_RxBCFrmCnt                         0x2
#define     counter_id_RxOAMFrmCnt                        0x3
#define     counter_id_RxJumboFrmCnt                      0x4
#define     counter_id_RxPauseFrmCnt                      0x5
#define     counter_id_RxPFCFrmCnt                        0x6
#define     counter_id_RxUnKnownOCFrmCnt                  0x7
#define     counter_id_RxCrcErrFrmCnt                     0x8
#define     counter_id_RxUndersizeFrmCnt                  0x9
#define     counter_id_RxRuntFrmCnt                       0xa
#define     counter_id_RxOvSizeFrmCnt                     0xb
#define     counter_id_RxJabberFrmCnt                     0xc
#define     counter_id_RxInvalidFrmCnt                    0xd
#define     counter_id_RxInvalidFlowFrmCnt                0xe
#define     counter_id_RxStatsFrm64Oct                    0xf
#define     counter_id_RxStatsFrm65to127Oct               0x10
#define     counter_id_RxStatsFrm128to255Oct              0x11
#define     counter_id_RxStatsFrm256to511Oct              0x12
#define     counter_id_RxStatsFrm512to1023Oct             0x13
#define     counter_id_RxStatsFrm1024to1518Oct            0x14
#define     counter_id_RxStatsFrm1519to2100Oct            0x15
#define     counter_id_RxStatsFrm2101to9200Oct            0x16
#define     counter_id_RxStatsFrm9201toMaxOct             0x17
#define     counter_id_RxByteCount                        0x18
#define     counter_id_RxALLByteCount                     0x19

#define NI_HV_GLB_RXMIB_DATA1                    0xf430a1a8
#define NI_HV_GLB_RXMIB_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_val_hi           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXMIB_DATA0                    0xf430a1ac
#define NI_HV_GLB_RXMIB_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_val_lo           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXMIB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXMIB_ACCESS                   0xf430a1b0
#define NI_HV_GLB_TXMIB_ACCESS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter_id           :  5 ; /* bits 4:0 */
    ca_uint32_t port_id              :  3 ; /* bits 7:5 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t debug_mode           :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 11 ;
    ca_uint32_t op_code              :  2 ; /* bits 29:28 */
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXMIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define     counter_id_TxUCPktCnt                         0x0
#define     counter_id_TxMCFrmCnt                         0x1
#define     counter_id_TxBCFrmCnt                         0x2
#define     counter_id_TxOAMFrmCnt                        0x3
#define     counter_id_TxJumboFrmCnt                      0x4
#define     counter_id_TxPauseFrmCnt                      0x5
#define     counter_id_TxPFCFrmCnt                        0x6
#define     counter_id_TxCrcErrFrmCnt                     0x7
#define     counter_id_TxOvSizeFrmCnt                     0x8
#define     counter_id_TxSingleColFrm                     0x9
#define     counter_id_TxMultiColFrm                      0xa
#define     counter_id_TxLateColFrm                       0xb
#define     counter_id_TxExessColFrm                      0xd
#define     counter_id_TxStatsFrm64Oct                    0xe
#define     counter_id_TxStatsFrm65to127Oct               0xf
#define     counter_id_TxStatsFrm128to255Oct              0x10
#define     counter_id_TxStatsFrm256to511Oct              0x11
#define     counter_id_TxStatsFrm512to1023Oct             0x12
#define     counter_id_TxStatsFrm1024to1518Oct            0x13
#define     counter_id_TxStatsFrm1519to2100Oct            0x14
#define     counter_id_TxStatsFrm2101to9200Oct            0x15
#define     counter_id_TxStatsFrm9201toMaxOct             0x16
#define     counter_id_TxByteCount                        0x18
#define     counter_id_TxAllByteCount                     0x19

#define NI_HV_GLB_TXMIB_DATA1                    0xf430a1b4
#define NI_HV_GLB_TXMIB_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_val_hi           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXMIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXMIB_DATA0                    0xf430a1b8
#define NI_HV_GLB_TXMIB_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_val_lo           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXMIB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_INTERNAL_PORT_ID_CFG           0xf430a1bc
#define NI_HV_GLB_INTERNAL_PORT_ID_CFG_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3qmrx_demux_sel     :  8 ; /* bits 7:0 */
    ca_uint32_t mrr_dsel             :  2 ; /* bits 9:8 */
    ca_uint32_t mrr_ldpid            :  6 ; /* bits 15:10 */
    ca_uint32_t mrr_cos              :  3 ; /* bits 18:16 */
    ca_uint32_t mrr_fe_bypass        :  1 ; /* bits 19:19 */
    ca_uint32_t l3qmrx_to_lan        :  1 ; /* bits 20:20 */
    ca_uint32_t egr_mrr_sel          :  1 ; /* bits 21:21 */
    ca_uint32_t wan_rxsel            :  2 ; /* bits 23:22 */
    ca_uint32_t dma_to_l3fe          :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_INTERNAL_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_INTERNAL_PORT_ID_CFG2          0xf430a1c0
#define NI_HV_GLB_INTERNAL_PORT_ID_CFG2_dft      0x0024009b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mce_lspid            :  6 ; /* bits 5:0 */
    ca_uint32_t mce_dpq              :  1 ; /* bits 6:6 */
    ca_uint32_t mce_fe_bypass        :  1 ; /* bits 7:7 */
    ca_uint32_t mrr_pol_id           :  8 ; /* bits 15:8 */
    ca_uint32_t mrr_dpq              :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rx_cpu               :  6 ; /* bits 23:18 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_INTERNAL_PORT_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_L3QMRX_DEMUX_CFG1              0xf430a1c4
#define NI_HV_GLB_L3QMRX_DEMUX_CFG1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3qmrx_demux_sel_enhanced1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_L3QMRX_DEMUX_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_L3QMRX_DEMUX_CFG0              0xf430a1c8
#define NI_HV_GLB_L3QMRX_DEMUX_CFG0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3qmrx_demux_sel_enhanced0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_L3QMRX_DEMUX_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_PORT_ID_CFG                 0xf430a1cc
#define NI_HV_GLB_RX_PORT_ID_CFG_dft             0x040c2040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0_id             :  6 ; /* bits 5:0 */
    ca_uint32_t port1_id             :  6 ; /* bits 11:6 */
    ca_uint32_t port2_id             :  6 ; /* bits 17:12 */
    ca_uint32_t port3_id             :  6 ; /* bits 23:18 */
    ca_uint32_t port4_id             :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RX_PORT_ID_CFG2                0xf430a1d0
#define NI_HV_GLB_RX_PORT_ID_CFG2_dft            0x00007185

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port5_id             :  6 ; /* bits 5:0 */
    ca_uint32_t port6_id             :  6 ; /* bits 11:6 */
    ca_uint32_t port7_id             :  6 ; /* bits 17:12 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RX_PORT_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3           0xf430a1d4
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3_dft       0xaaaaaaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id3            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2           0xf430a1d8
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2_dft       0xaaaaaaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id2            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1           0xf430a1dc
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1_dft       0xaaaaaaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id1            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0           0xf430a1e0
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0_dft       0xaaaaaaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3       0xf430a1e4
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id3            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2       0xf430a1e8
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id2            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1       0xf430a1ec
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id1            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0       0xf430a1f0
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t demux_id0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_MISC_CFG                  0xf430a1f4
#define NI_HV_GLB_NITX_MISC_CFG_dft              0x00084ffc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xge6_hdrA_tx_en      :  1 ; /* bits 0:0 */
    ca_uint32_t xge7_hdrA_tx_en      :  1 ; /* bits 1:1 */
    ca_uint32_t xge6_tx_rd_thre_en   :  1 ; /* bits 2:2 */
    ca_uint32_t xge7_tx_rd_thre_en   :  1 ; /* bits 3:3 */
    ca_uint32_t xaui_tx_rd_thre_en   :  1 ; /* bits 4:4 */
    ca_uint32_t l3qm_tx_rd_thre_en0  :  1 ; /* bits 5:5 */
    ca_uint32_t l3qm_tx_rd_thre_en1  :  1 ; /* bits 6:6 */
    ca_uint32_t l3qm_tx_rd_thre_en3  :  1 ; /* bits 7:7 */
    ca_uint32_t l3fe_tx_rd_thre_en0  :  1 ; /* bits 8:8 */
    ca_uint32_t l3fe_tx_rd_thre_en1  :  1 ; /* bits 9:9 */
    ca_uint32_t l3fe_tx_rd_thre_en2  :  1 ; /* bits 10:10 */
    ca_uint32_t l3fe_tx_rd_thre_en3  :  1 ; /* bits 11:11 */
    ca_uint32_t xge6_link_fault_halt_tx_en :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t time_base_cnt        :  6 ; /* bits 19:14 */
    ca_uint32_t xge6_tx_drain        :  1 ; /* bits 20:20 */
    ca_uint32_t xge7_tx_drain        :  1 ; /* bits 21:21 */
    ca_uint32_t xaui5_tx_drain       :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd2               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_MISC_CFG                  0xf430a1f8
#define NI_HV_GLB_NIRX_MISC_CFG_dft              0x00010080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3fe_to_l2fe_deepq_csr0 :  1 ; /* bits 0:0 */
    ca_uint32_t l3fe_to_l2fe_deepq_csr1 :  1 ; /* bits 1:1 */
    ca_uint32_t l3fe_to_l2fe_deepq_csr2 :  1 ; /* bits 2:2 */
    ca_uint32_t l3fe_to_l3qm_l4cs_err_en :  1 ; /* bits 3:3 */
    ca_uint32_t l3fe_to_l2tm_l4cs_err_en :  1 ; /* bits 4:4 */
    ca_uint32_t l3fe_l3qm_to_l2tm_sel :  1 ; /* bits 5:5 */
    ca_uint32_t l3fe_l3qm_to_l2tm_bp_en :  1 ; /* bits 6:6 */
    ca_uint32_t l3fe_l3qm_to_l2tm_arb_en :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t l2te_ni_mc_rdy_en    :  1 ; /* bits 9:9 */
    ca_uint32_t l2te_ni_l3fewan_port_rdy_en :  1 ; /* bits 10:10 */
    ca_uint32_t l2te_ni_l3felan_port_rdy_en :  1 ; /* bits 11:11 */
    ca_uint32_t l2te_ni_txdma_l2fe_rdy_en :  1 ; /* bits 12:12 */
    ca_uint32_t l2te_ni_txdma_l3fe_rdy_en :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t xge6_rx_errpkt_drp_en :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t l3fe_to_wan_l4cs_err_en :  1 ; /* bits 18:18 */
    ca_uint32_t l3fe_to_l2fe_l4cs_err_en :  1 ; /* bits 19:19 */
    ca_uint32_t use_p0_as_wan_port_en :  1 ; /* bits 20:20 */
    ca_uint32_t p0_as_wan_encap_decap_en :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd4               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TX_PORT_ID_CFG                 0xf430a1fc
#define NI_HV_GLB_TX_PORT_ID_CFG_dft             0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0_id             :  4 ; /* bits 3:0 */
    ca_uint32_t port1_id             :  4 ; /* bits 7:4 */
    ca_uint32_t port2_id             :  4 ; /* bits 11:8 */
    ca_uint32_t port3_id             :  4 ; /* bits 15:12 */
    ca_uint32_t port4_id             :  4 ; /* bits 19:16 */
    ca_uint32_t port5_id             :  4 ; /* bits 23:20 */
    ca_uint32_t port6_id             :  4 ; /* bits 27:24 */
    ca_uint32_t port7_id             :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TX_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG        0xf430a200
#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG_dft    0x00cbda98

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3qm_tx_dpid0        :  4 ; /* bits 3:0 */
    ca_uint32_t l3qm_tx_dpid1        :  4 ; /* bits 7:4 */
    ca_uint32_t l3fe_tx_dpid0        :  4 ; /* bits 11:8 */
    ca_uint32_t l3fe_tx_dpid1        :  4 ; /* bits 15:12 */
    ca_uint32_t mce_tx_dpid          :  4 ; /* bits 19:16 */
    ca_uint32_t oam_tx_dpid          :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2       0xf430a204
#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2_dft   0x7000da98

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3qm_tx_spid0        :  4 ; /* bits 3:0 */
    ca_uint32_t l3qm_tx_spid1        :  4 ; /* bits 7:4 */
    ca_uint32_t l3fe_tx_spid0        :  4 ; /* bits 11:8 */
    ca_uint32_t l3fe_tx_spid1        :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t l3fe_tx_spid2        :  4 ; /* bits 27:24 */
    ca_uint32_t l3fe_tx_spid3        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_CRCE_CNT                  0xf430a208
#define NI_HV_GLB_NITX_CRCE_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crce_cnt             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_CRCE_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_P5_DRAINCNT               0xf430a20c
#define NI_HV_GLB_NITX_P5_DRAINCNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drain_cnt            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_P5_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_P6_DRAINCNT               0xf430a210
#define NI_HV_GLB_NITX_P6_DRAINCNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drain_cnt            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_P6_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_P7_DRAINCNT               0xf430a214
#define NI_HV_GLB_NITX_P7_DRAINCNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drain_cnt            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_P7_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_OAMERR_CNT                0xf430a218
#define NI_HV_GLB_NITX_OAMERR_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t oame_cnt             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_OAMERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_READ_THRESHOLD          0xf430a21c
#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_dft      0x64503c28

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxaui_txfifo_lo      :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxaui_txfifo_hi      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t xge6_txfifo_lo       :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t xge6_txfifo_hi       :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_READ_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_2        0xf430a220
#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_2_dft    0x71507150

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxaui_txfifo_lo_2    :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxaui_txfifo_hi_2    :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t xge6_txfifo_lo_2     :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t xge6_txfifo_hi_2     :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_READ_THRESHOLD_2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_3        0xf430a224
#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_3_dft    0x71507150

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p1_txfifo_lo         :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t p1_txfifo_hi         :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p0_txfifo_lo         :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t p0_txfifo_hi         :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_READ_THRESHOLD_3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_4        0xf430a228
#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_4_dft    0x71507150

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p3_txfifo_lo         :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t p3_txfifo_hi         :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p2_txfifo_lo         :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t p2_txfifo_hi         :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_READ_THRESHOLD_4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_5        0xf430a22c
#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_5_dft    0x71500000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t p4_txfifo_lo         :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p4_txfifo_hi         :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_READ_THRESHOLD_5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_0           0xf430a230
#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_0_dft       0x0d090640

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm2lan_max_len       : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t p0_txfifo_tff_lo     :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p0_txfifo_tff_hi     :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_QM2LAN_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_1           0xf430a234
#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_1_dft       0x0d090d09

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p1_txfifo_tff_lo     :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t p1_txfifo_tff_hi     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p2_txfifo_tff_lo     :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t p2_txfifo_tff_hi     :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_QM2LAN_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_2           0xf430a238
#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_2_dft       0x0d090d09

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p3_txfifo_tff_lo     :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t p3_txfifo_tff_hi     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p4_txfifo_tff_lo     :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t p4_txfifo_tff_hi     :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_QM2LAN_CTRL_2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_3           0xf430a23c
#define NI_HV_GLB_TXFIFO_QM2LAN_CTRL_3_dft       0x0d090d09

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p5_txfifo_tff_lo     :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t p5_txfifo_tff_hi     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t p6_txfifo_tff_lo     :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t p6_txfifo_tff_hi     :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_QM2LAN_CTRL_3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1     0xf430a240
#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1_dft 0x780c7864

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t from_l3fe_txfifo_lo  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t from_l3fe_txfifo_hi  :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t from_l3qm_txfifo_lo  :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t from_l3qm_txfifo_hi  :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2     0xf430a244
#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2_dft 0x78a3e8c8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rd_thre_txfifo_lo    :  9 ; /* bits 8:0 */
    ca_uint32_t rd_thre_txfifo_hi    :  9 ; /* bits 17:9 */
    ca_uint32_t from_tm_txfifo_lo    :  7 ; /* bits 24:18 */
    ca_uint32_t from_tm_txfifo_hi    :  7 ; /* bits 31:25 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1     0xf430a248
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1_dft 0x60506050

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t from_tm9_txfifo_lo   :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t from_tm9_txfifo_hi   :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t from_tm8_txfifo_lo   :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t from_tm8_txfifo_hi   :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2     0xf430a24c
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2_dft 0x00006050

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t from_l3fe_txfifo_lo  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t from_l3fe_txfifo_hi  :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1     0xf430a250
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1_dft 0xaa6c6b6a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t from_wan_txfifo_lo   :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t from_wan_txfifo_hi   :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t from_tm_txfifo_lo    :  8 ; /* bits 23:16 */
    ca_uint32_t from_tm_txfifo_hi    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2     0xf430a254
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2_dft 0x0400f06e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t from_dma_txfifo_lo   :  8 ; /* bits 7:0 */
    ca_uint32_t from_dma_txfifo_hi   :  8 ; /* bits 15:8 */
    ca_uint32_t tm2_shared_fifo_lo   :  6 ; /* bits 21:16 */
    ca_uint32_t tm2_shared_fifo_hi   :  6 ; /* bits 27:22 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG      0xf430a258
#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG_dft  0x3c280000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t oam_from_tm_txfifo_lo :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t oam_from_tm_txfifo_hi :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2     0xf430a25c
#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2_dft 0x50285028

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txfifo_l3qm_path0_lo :  8 ; /* bits 7:0 */
    ca_uint32_t txfifo_l3qm_path0_hi :  8 ; /* bits 15:8 */
    ca_uint32_t txfifo_l3qm_path1_lo :  8 ; /* bits 23:16 */
    ca_uint32_t txfifo_l3qm_path1_hi :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3     0xf430a260
#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3_dft 0x00005028

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txfifo_l3qm_path2_lo :  8 ; /* bits 7:0 */
    ca_uint32_t txfifo_l3qm_path2_hi :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG       0xf430a264
#define NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG_dft   0x00019028

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mce_from_tm_txfifo_lo : 10 ; /* bits 9:0 */
    ca_uint32_t mce_from_tm_txfifo_hi : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG      0xf430a268
#define NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG_dft  0x780a780a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l3fe_rxfifo_lo       :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t l3fe_rxfifo_hi       :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t l3qm_rxfifo_lo       :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t l3qm_rxfifo_hi       :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG      0xf430a26c
#define NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG_dft  0x0003c00a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thre_lo              :  9 ; /* bits 8:0 */
    ca_uint32_t thre_hi              :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG        0xf430a270
#define NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG_dft    0x00008080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2tm_fifo_thre       :  8 ; /* bits 7:0 */
    ca_uint32_t wan_fifo_thre        :  8 ; /* bits 15:8 */
    ca_uint32_t dis_fifo_thre        :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PTP_TX_CFG                     0xf430a274
#define NI_HV_GLB_PTP_TX_CFG_dft                 0x0000007f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_ptp_tx_en         :  1 ; /* bits 0:0 */
    ca_uint32_t p1_ptp_tx_en         :  1 ; /* bits 1:1 */
    ca_uint32_t p2_ptp_tx_en         :  1 ; /* bits 2:2 */
    ca_uint32_t p3_ptp_tx_en         :  1 ; /* bits 3:3 */
    ca_uint32_t p4_ptp_tx_en         :  1 ; /* bits 4:4 */
    ca_uint32_t p5_ptp_tx_en         :  1 ; /* bits 5:5 */
    ca_uint32_t p6_ptp_tx_en         :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t p0_ptp_tx_bypass     :  1 ; /* bits 8:8 */
    ca_uint32_t p1_ptp_tx_bypass     :  1 ; /* bits 9:9 */
    ca_uint32_t p2_ptp_tx_bypass     :  1 ; /* bits 10:10 */
    ca_uint32_t p3_ptp_tx_bypass     :  1 ; /* bits 11:11 */
    ca_uint32_t p4_ptp_tx_bypass     :  1 ; /* bits 12:12 */
    ca_uint32_t p5_ptp_tx_bypass     :  1 ; /* bits 13:13 */
    ca_uint32_t p6_ptp_tx_bypass     :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PTP_TX_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_01             0xf430a278
#define NI_HV_GLB_GE_PTP_ASYM_CFG_01_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_01          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_01_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_00             0xf430a27c
#define NI_HV_GLB_GE_PTP_ASYM_CFG_00_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_00          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_00_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_11             0xf430a280
#define NI_HV_GLB_GE_PTP_ASYM_CFG_11_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_11          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_11_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_10             0xf430a284
#define NI_HV_GLB_GE_PTP_ASYM_CFG_10_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_10          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_10_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_21             0xf430a288
#define NI_HV_GLB_GE_PTP_ASYM_CFG_21_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_21          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_21_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_20             0xf430a28c
#define NI_HV_GLB_GE_PTP_ASYM_CFG_20_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_20          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_20_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_31             0xf430a290
#define NI_HV_GLB_GE_PTP_ASYM_CFG_31_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_31          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_31_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_GE_PTP_ASYM_CFG_30             0xf430a294
#define NI_HV_GLB_GE_PTP_ASYM_CFG_30_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_30          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_GE_PTP_ASYM_CFG_30_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_01           0xf430a298
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_01_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_01          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_01_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_00           0xf430a29c
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_00_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_00          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_00_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_11           0xf430a2a0
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_11_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_11          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_11_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_10           0xf430a2a4
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_10_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_10          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_10_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_21           0xf430a2a8
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_21_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_21          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_21_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_20           0xf430a2ac
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_20_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_20          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_20_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_31           0xf430a2b0
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_31_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_31          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_31_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_30           0xf430a2b4
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_30_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_30          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_30_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_01            0xf430a2b8
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_01_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_01          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_01_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_00            0xf430a2bc
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_00_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_00          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_00_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_11            0xf430a2c0
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_11_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_11          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_11_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_10            0xf430a2c4
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_10_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_10          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_10_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_21            0xf430a2c8
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_21_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_21          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_21_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_20            0xf430a2cc
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_20_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_20          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_20_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_31            0xf430a2d0
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_31_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_31          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_31_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_XGE_PTP_ASYM_CFG_30            0xf430a2d4
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_30_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asym_cfg_30          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_30_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC1       0xf430a2d8
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC1_STRIDE 12
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC1_COUNT 7
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_ts_sec1           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC0       0xf430a2dc
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC0_STRIDE 12
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC0_COUNT 7
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_ts_sec0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP            0xf430a2e0
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_STRIDE     12
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_COUNT      7
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_ts                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_P0_PTP_TX_TIMESTAMP_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NITX_STS                       0xf430a32c
#define NI_HV_GLB_NITX_STS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sts                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NITX_STS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SPARE                          0xf430a330
#define NI_HV_GLB_SPARE_dft                      0x0000ff33

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VALUE                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MISC_STS                       0xf430a334
#define NI_HV_GLB_MISC_STS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xge6_link_fault      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MISC_STS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SPARESAMPLE                    0xf430a338
#define NI_HV_GLB_SPARESAMPLE_dft                0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VALUE                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SPARESAMPLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_0_INTERRUPT               0xf430a33c
#define NI_HV_GLB_PORT_0_INTERRUPT_STRIDE        8
#define NI_HV_GLB_PORT_0_INTERRUPT_COUNT         6
#define NI_HV_GLB_PORT_0_INTERRUPT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t link_stat_chgI       :  1 ; /* bits 0:0 */
    ca_uint32_t txfifo_underrunI     :  1 ; /* bits 1:1 */
    ca_uint32_t txfifo_overrunI      :  1 ; /* bits 2:2 */
    ca_uint32_t rxcntrl_overrunI     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxmib_cntmsb_setI    :  1 ; /* bits 5:5 */
    ca_uint32_t txmib_cntmsb_setI    :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t lpi_assert_stat_chgI :  1 ; /* bits 9:9 */
    ca_uint32_t rx_lpi_stat_chgI     :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ni_wol_int           :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd4               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_0_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_0_INTERRUPTE              0xf430a340
#define NI_HV_GLB_PORT_0_INTERRUPTE_STRIDE       8
#define NI_HV_GLB_PORT_0_INTERRUPTE_COUNT        6
#define NI_HV_GLB_PORT_0_INTERRUPTE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t link_stat_chgIE      :  1 ; /* bits 0:0 */
    ca_uint32_t txfifo_underrunIE    :  1 ; /* bits 1:1 */
    ca_uint32_t txfifo_overrunIE     :  1 ; /* bits 2:2 */
    ca_uint32_t rxcntrl_overrunIE    :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxmib_cntmsb_setIE   :  1 ; /* bits 5:5 */
    ca_uint32_t txmib_cntmsb_setIE   :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t lpi_assert_stat_chgIE :  1 ; /* bits 9:9 */
    ca_uint32_t rx_lpi_stat_chgIE    :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ni_wol_intE          :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd4               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_0_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_6_INTERRUPT               0xf430a36c
#define NI_HV_GLB_PORT_6_INTERRUPT_STRIDE        8
#define NI_HV_GLB_PORT_6_INTERRUPT_COUNT         2
#define NI_HV_GLB_PORT_6_INTERRUPT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rxcntrl_overrunI     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rxmib_cntmsb_setI    :  1 ; /* bits 5:5 */
    ca_uint32_t txmib_cntmsb_setI    :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_6_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_6_INTERRUPTE              0xf430a370
#define NI_HV_GLB_PORT_6_INTERRUPTE_STRIDE       8
#define NI_HV_GLB_PORT_6_INTERRUPTE_COUNT        2
#define NI_HV_GLB_PORT_6_INTERRUPTE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rxcntrl_overrunIE    :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rxmib_cntmsb_setIE   :  1 ; /* bits 5:5 */
    ca_uint32_t txmib_cntmsb_setIE   :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_6_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_8_INTERRUPT               0xf430a37c
#define NI_HV_GLB_PORT_8_INTERRUPT_STRIDE        8
#define NI_HV_GLB_PORT_8_INTERRUPT_COUNT         4
#define NI_HV_GLB_PORT_8_INTERRUPT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rxcntrl_overrunI     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rxmib_cntmsb_setI    :  1 ; /* bits 5:5 */
    ca_uint32_t txmib_cntmsb_setI    :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_8_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_8_INTERRUPTE              0xf430a380
#define NI_HV_GLB_PORT_8_INTERRUPTE_STRIDE       8
#define NI_HV_GLB_PORT_8_INTERRUPTE_COUNT        4
#define NI_HV_GLB_PORT_8_INTERRUPTE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rxcntrl_overrunIE    :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rxmib_cntmsb_setIE   :  1 ; /* bits 5:5 */
    ca_uint32_t txmib_cntmsb_setIE   :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_8_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIFIFO_INTERRUPT               0xf430a39c
#define NI_HV_GLB_NIFIFO_INTERRUPT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_nitx_fifo_under_run_setI :  1 ; /* bits 0:0 */
    ca_uint32_t p0_nitx_fifo_over_run_setI :  1 ; /* bits 1:1 */
    ca_uint32_t p1_nitx_fifo_under_run_setI :  1 ; /* bits 2:2 */
    ca_uint32_t p1_nitx_fifo_over_run_setI :  1 ; /* bits 3:3 */
    ca_uint32_t p2_nitx_fifo_under_run_setI :  1 ; /* bits 4:4 */
    ca_uint32_t p2_nitx_fifo_over_run_setI :  1 ; /* bits 5:5 */
    ca_uint32_t p3_nitx_fifo_under_run_setI :  1 ; /* bits 6:6 */
    ca_uint32_t p3_nitx_fifo_over_run_setI :  1 ; /* bits 7:7 */
    ca_uint32_t p4_nitx_fifo_under_run_setI :  1 ; /* bits 8:8 */
    ca_uint32_t p4_nitx_fifo_over_run_setI :  1 ; /* bits 9:9 */
    ca_uint32_t p5_nitx_fifo_under_run_setI :  1 ; /* bits 10:10 */
    ca_uint32_t p5_nitx_fifo_over_run_setI :  1 ; /* bits 11:11 */
    ca_uint32_t p6_nitx_fifo_under_run_setI :  1 ; /* bits 12:12 */
    ca_uint32_t p6_nitx_fifo_over_run_setI :  1 ; /* bits 13:13 */
    ca_uint32_t p7_nitx_fifo_under_run_setI :  1 ; /* bits 14:14 */
    ca_uint32_t p7_nitx_fifo_over_run_setI :  1 ; /* bits 15:15 */
    ca_uint32_t p8_nitx_fifo_under_run_setI :  1 ; /* bits 16:16 */
    ca_uint32_t p8_nitx_fifo_over_run_setI :  1 ; /* bits 17:17 */
    ca_uint32_t p9_nitx_fifo_under_run_setI :  1 ; /* bits 18:18 */
    ca_uint32_t p9_nitx_fifo_over_run_setI :  1 ; /* bits 19:19 */
    ca_uint32_t p10_nitx_fifo_under_run_setI :  1 ; /* bits 20:20 */
    ca_uint32_t p10_nitx_fifo_over_run_setI :  1 ; /* bits 21:21 */
    ca_uint32_t p11_nitx_fifo_under_run_setI :  1 ; /* bits 22:22 */
    ca_uint32_t p11_nitx_fifo_over_run_setI :  1 ; /* bits 23:23 */
    ca_uint32_t p12_nitx_fifo_under_run_setI :  1 ; /* bits 24:24 */
    ca_uint32_t p12_nitx_fifo_over_run_setI :  1 ; /* bits 25:25 */
    ca_uint32_t p13_nitx_fifo_under_run_setI :  1 ; /* bits 26:26 */
    ca_uint32_t p13_nitx_fifo_over_run_setI :  1 ; /* bits 27:27 */
    ca_uint32_t l3qm_nirx_fifo_under_run_setI :  1 ; /* bits 28:28 */
    ca_uint32_t l3qm_nirx_fifo_over_run_setI :  1 ; /* bits 29:29 */
    ca_uint32_t l3fe_nirx_fifo_under_run_setI :  1 ; /* bits 30:30 */
    ca_uint32_t l3fe_nirx_fifo_over_run_setI :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIFIFO_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_NIFIFO_INTERRUPTE              0xf430a3a0
#define NI_HV_GLB_NIFIFO_INTERRUPTE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_nitx_fifo_under_run_setIE :  1 ; /* bits 0:0 */
    ca_uint32_t p0_nitx_fifo_over_run_setIE :  1 ; /* bits 1:1 */
    ca_uint32_t p1_nitx_fifo_under_run_setIE :  1 ; /* bits 2:2 */
    ca_uint32_t p1_nitx_fifo_over_run_setIE :  1 ; /* bits 3:3 */
    ca_uint32_t p2_nitx_fifo_under_run_setIE :  1 ; /* bits 4:4 */
    ca_uint32_t p2_nitx_fifo_over_run_setIE :  1 ; /* bits 5:5 */
    ca_uint32_t p3_nitx_fifo_under_run_setIE :  1 ; /* bits 6:6 */
    ca_uint32_t p3_nitx_fifo_over_run_setIE :  1 ; /* bits 7:7 */
    ca_uint32_t p4_nitx_fifo_under_run_setIE :  1 ; /* bits 8:8 */
    ca_uint32_t p4_nitx_fifo_over_run_setIE :  1 ; /* bits 9:9 */
    ca_uint32_t p5_nitx_fifo_under_run_setIE :  1 ; /* bits 10:10 */
    ca_uint32_t p5_nitx_fifo_over_run_setIE :  1 ; /* bits 11:11 */
    ca_uint32_t p6_nitx_fifo_under_run_setIE :  1 ; /* bits 12:12 */
    ca_uint32_t p6_nitx_fifo_over_run_setIE :  1 ; /* bits 13:13 */
    ca_uint32_t p7_nitx_fifo_under_run_setIE :  1 ; /* bits 14:14 */
    ca_uint32_t p7_nitx_fifo_over_run_setIE :  1 ; /* bits 15:15 */
    ca_uint32_t p8_nitx_fifo_under_run_setIE :  1 ; /* bits 16:16 */
    ca_uint32_t p8_nitx_fifo_over_run_setIE :  1 ; /* bits 17:17 */
    ca_uint32_t p9_nitx_fifo_under_run_setIE :  1 ; /* bits 18:18 */
    ca_uint32_t p9_nitx_fifo_over_run_setIE :  1 ; /* bits 19:19 */
    ca_uint32_t p10_nitx_fifo_under_run_setIE :  1 ; /* bits 20:20 */
    ca_uint32_t p10_nitx_fifo_over_run_setIE :  1 ; /* bits 21:21 */
    ca_uint32_t p11_nitx_fifo_under_run_setIE :  1 ; /* bits 22:22 */
    ca_uint32_t p11_nitx_fifo_over_run_setIE :  1 ; /* bits 23:23 */
    ca_uint32_t p12_nitx_fifo_under_run_setIE :  1 ; /* bits 24:24 */
    ca_uint32_t p12_nitx_fifo_over_run_setIE :  1 ; /* bits 25:25 */
    ca_uint32_t p13_nitx_fifo_under_run_setIE :  1 ; /* bits 26:26 */
    ca_uint32_t p13_nitx_fifo_over_run_setIE :  1 ; /* bits 27:27 */
    ca_uint32_t l3qm_nirx_fifo_under_run_setIE :  1 ; /* bits 28:28 */
    ca_uint32_t l3qm_nirx_fifo_over_run_setIE :  1 ; /* bits 29:29 */
    ca_uint32_t l3fe_nirx_fifo_under_run_setIE :  1 ; /* bits 30:30 */
    ca_uint32_t l3fe_nirx_fifo_over_run_setIE :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_NIFIFO_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MISC_INTERRUPT                 0xf430a3a4
#define NI_HV_GLB_MISC_INTERRUPT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xge6_link_faultI     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t l2tm_nitx_overrunI   :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t c10_dec_asm_fifo_overflowI :  1 ; /* bits 4:4 */
    ca_uint32_t c10_dec_sep_fifo_overflowI :  1 ; /* bits 5:5 */
    ca_uint32_t c10_dec_hdr_fifo_overflowI :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MISC_INTERRUPTE                0xf430a3a8
#define NI_HV_GLB_MISC_INTERRUPTE_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xge6_link_faultIE    :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t l2tm_nitx_overrunIE  :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t c10_dec_asm_fifo_overflowIE :  1 ; /* bits 4:4 */
    ca_uint32_t c10_dec_sep_fifo_overflowIE :  1 ; /* bits 5:5 */
    ca_uint32_t c10_dec_hdr_fifo_overflowIE :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MISC_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXEM_INTERRUPT                 0xf430a3ac
#define NI_HV_GLB_TXEM_INTERRUPT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txem_ififo_ovfI      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t txrm_cntovfI         :  1 ; /* bits 2:2 */
    ca_uint32_t txmib_fifo_ovfI      :  1 ; /* bits 3:3 */
    ca_uint32_t rxmib_fifo_ovfI      :  1 ; /* bits 4:4 */
    ca_uint32_t txem_ptp_voqchg_errI :  1 ; /* bits 5:5 */
    ca_uint32_t txem_ptp_cachevoq_errI :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t txem_ptp_v6csum0_errI :  1 ; /* bits 9:9 */
    ca_uint32_t txrm_timerexpI       :  1 ; /* bits 10:10 */
    ca_uint32_t nitx_crc_errI        :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd3               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXEM_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_TXEM_INTERRUPTE                0xf430a3b0
#define NI_HV_GLB_TXEM_INTERRUPTE_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txem_ififo_ovfIE     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t txrm_cntovfIE        :  1 ; /* bits 2:2 */
    ca_uint32_t txmib_fifo_ovfIE     :  1 ; /* bits 3:3 */
    ca_uint32_t rxmib_fifo_ovfIE     :  1 ; /* bits 4:4 */
    ca_uint32_t txem_ptp_voqchg_errIE :  1 ; /* bits 5:5 */
    ca_uint32_t txem_ptp_cachevoq_errIE :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t txem_ptp_v6csum0_errIE :  1 ; /* bits 9:9 */
    ca_uint32_t txrm_timerexpIE      :  1 ; /* bits 10:10 */
    ca_uint32_t nitx_crc_errIE       :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd3               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_TXEM_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC0_INTERRUPT                  0xf430a3b4
#define NI_HV_GLB_PC0_INTERRUPT_STRIDE           8
#define NI_HV_GLB_PC0_INTERRUPT_COUNT            6
#define NI_HV_GLB_PC0_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dchkoutofsyncI       :  1 ; /* bits 0:0 */
    ca_uint32_t dstaddrmismatchI     :  1 ; /* bits 1:1 */
    ca_uint32_t srcaddrmismatchI     :  1 ; /* bits 2:2 */
    ca_uint32_t vlan1fieldmismatchI  :  1 ; /* bits 3:3 */
    ca_uint32_t vlan2fieldmismatchI  :  1 ; /* bits 4:4 */
    ca_uint32_t typefieldmismatchI   :  1 ; /* bits 5:5 */
    ca_uint32_t seqnummismatchI      :  1 ; /* bits 6:6 */
    ca_uint32_t datamismatchI        :  1 ; /* bits 7:7 */
    ca_uint32_t framelenmismatchI    :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC0_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PC0_INTERRUPTE                 0xf430a3b8
#define NI_HV_GLB_PC0_INTERRUPTE_STRIDE          8
#define NI_HV_GLB_PC0_INTERRUPTE_COUNT           6
#define NI_HV_GLB_PC0_INTERRUPTE_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dchkoutofsyncIE      :  1 ; /* bits 0:0 */
    ca_uint32_t dstaddrmismatchIE    :  1 ; /* bits 1:1 */
    ca_uint32_t srcaddrmismatchIE    :  1 ; /* bits 2:2 */
    ca_uint32_t vlan1fieldmismatchIE :  1 ; /* bits 3:3 */
    ca_uint32_t vlan2fieldmismatchIE :  1 ; /* bits 4:4 */
    ca_uint32_t typefieldmismatchIE  :  1 ; /* bits 5:5 */
    ca_uint32_t seqnummismatchIE     :  1 ; /* bits 6:6 */
    ca_uint32_t datamismatchIE       :  1 ; /* bits 7:7 */
    ca_uint32_t framelenmismatchIE   :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PC0_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT         0xf430a3e4
#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_drop_err_0_cntmsb_setI :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t pkt_to_xram_0_cntmsb_setI :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t byt_to_xram_0_cntmsb_setI :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  8 ;
    ca_uint32_t dma_pkt_to_cpu_cntmsb_setI :  1 ; /* bits 29:29 */
    ca_uint32_t dma_byte_to_cpu_cntmsb_setI :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE        0xf430a3e8
#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_drop_err_0_cntmsb_setIE :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t pkt_to_xram_0_cntmsb_setIE :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t byt_to_xram_0_cntmsb_setIE :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  8 ;
    ca_uint32_t dma_pkt_to_cpu_cntmsb_setIE :  1 ; /* bits 29:29 */
    ca_uint32_t dma_byte_to_cpu_cntmsb_setIE :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPT          0xf430a3ec
#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPT_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xram_rx_0_ptrbkupI   :  1 ; /* bits 0:0 */
    ca_uint32_t xram_rx_no_hdrAI     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t xram_rx_mgmtfifo_overrunI :  1 ; /* bits 22:22 */
    ca_uint32_t dma_fifo_overrunI    :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_ERR_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE         0xf430a3f0
#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xram_rx_0_ptrbkupIE  :  1 ; /* bits 0:0 */
    ca_uint32_t xram_rx_no_hdrAIE    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t xram_rx_mgmtfifo_overrunIE :  1 ; /* bits 22:22 */
    ca_uint32_t dma_fifo_overrunIE   :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PTP_INTERRUPT                  0xf430a3f4
#define NI_HV_GLB_PTP_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0_tx_timestamp_rdy_intI :  1 ; /* bits 0:0 */
    ca_uint32_t port1_tx_timestamp_rdy_intI :  1 ; /* bits 1:1 */
    ca_uint32_t port2_tx_timestamp_rdy_intI :  1 ; /* bits 2:2 */
    ca_uint32_t port3_tx_timestamp_rdy_intI :  1 ; /* bits 3:3 */
    ca_uint32_t port4_tx_timestamp_rdy_intI :  1 ; /* bits 4:4 */
    ca_uint32_t port5_tx_timestamp_rdy_intI :  1 ; /* bits 5:5 */
    ca_uint32_t port6_tx_timestamp_rdy_intI :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t port0_tx_ptpfifo_overflow_intI :  1 ; /* bits 8:8 */
    ca_uint32_t port1_tx_ptpfifo_overflow_intI :  1 ; /* bits 9:9 */
    ca_uint32_t port2_tx_ptpfifo_overflow_intI :  1 ; /* bits 10:10 */
    ca_uint32_t port3_tx_ptpfifo_overflow_intI :  1 ; /* bits 11:11 */
    ca_uint32_t port4_tx_ptpfifo_overflow_intI :  1 ; /* bits 12:12 */
    ca_uint32_t port5_tx_ptpfifo_overflow_intI :  1 ; /* bits 13:13 */
    ca_uint32_t port6_tx_ptpfifo_overflow_intI :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t port0_tx_ptpfifo_underflow_intI :  1 ; /* bits 16:16 */
    ca_uint32_t port1_tx_ptpfifo_underflow_intI :  1 ; /* bits 17:17 */
    ca_uint32_t port2_tx_ptpfifo_underflow_intI :  1 ; /* bits 18:18 */
    ca_uint32_t port3_tx_ptpfifo_underflow_intI :  1 ; /* bits 19:19 */
    ca_uint32_t port4_tx_ptpfifo_underflow_intI :  1 ; /* bits 20:20 */
    ca_uint32_t port5_tx_ptpfifo_underflow_intI :  1 ; /* bits 21:21 */
    ca_uint32_t port6_tx_ptpfifo_underflow_intI :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t timer_rollover_intI  :  1 ; /* bits 29:29 */
    ca_uint32_t pps_event_intI       :  1 ; /* bits 30:30 */
    ca_uint32_t pps_out_falledge_intI :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PTP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PTP_INTERRUPTE                 0xf430a3f8
#define NI_HV_GLB_PTP_INTERRUPTE_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0_tx_timestamp_rdy_intIE :  1 ; /* bits 0:0 */
    ca_uint32_t port1_tx_timestamp_rdy_intIE :  1 ; /* bits 1:1 */
    ca_uint32_t port2_tx_timestamp_rdy_intIE :  1 ; /* bits 2:2 */
    ca_uint32_t port3_tx_timestamp_rdy_intIE :  1 ; /* bits 3:3 */
    ca_uint32_t port4_tx_timestamp_rdy_intIE :  1 ; /* bits 4:4 */
    ca_uint32_t port5_tx_timestamp_rdy_intIE :  1 ; /* bits 5:5 */
    ca_uint32_t port6_tx_timestamp_rdy_intIE :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t port0_tx_ptpfifo_overflow_intIE :  1 ; /* bits 8:8 */
    ca_uint32_t port1_tx_ptpfifo_overflow_intIE :  1 ; /* bits 9:9 */
    ca_uint32_t port2_tx_ptpfifo_overflow_intIE :  1 ; /* bits 10:10 */
    ca_uint32_t port3_tx_ptpfifo_overflow_intIE :  1 ; /* bits 11:11 */
    ca_uint32_t port4_tx_ptpfifo_overflow_intIE :  1 ; /* bits 12:12 */
    ca_uint32_t port5_tx_ptpfifo_overflow_intIE :  1 ; /* bits 13:13 */
    ca_uint32_t port6_tx_ptpfifo_overflow_intIE :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t port0_tx_ptpfifo_underflow_intIE :  1 ; /* bits 16:16 */
    ca_uint32_t port1_tx_ptpfifo_underflow_intIE :  1 ; /* bits 17:17 */
    ca_uint32_t port2_tx_ptpfifo_underflow_intIE :  1 ; /* bits 18:18 */
    ca_uint32_t port3_tx_ptpfifo_underflow_intIE :  1 ; /* bits 19:19 */
    ca_uint32_t port4_tx_ptpfifo_underflow_intIE :  1 ; /* bits 20:20 */
    ca_uint32_t port5_tx_ptpfifo_underflow_intIE :  1 ; /* bits 21:21 */
    ca_uint32_t port6_tx_ptpfifo_underflow_intIE :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t timer_rollover_intIE :  1 ; /* bits 29:29 */
    ca_uint32_t pps_event_intIE      :  1 ; /* bits 30:30 */
    ca_uint32_t pps_out_falledge_intIE :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PTP_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT        0xf430a3fc
#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xram_rx_doneI        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE       0xf430a400
#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xram_rx_doneIE       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT        0xf430a404
#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xram_tx_0_doneI      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE       0xf430a408
#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xram_tx_0_doneIE     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MC_INTERRUPT                   0xf430a40c
#define NI_HV_GLB_MC_INTERRUPT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t mc_ff_full_drop_intI :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t bitmap_zero_drop_intI :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd3               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_MC_INTERRUPTE                  0xf430a410
#define NI_HV_GLB_MC_INTERRUPTE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t mc_ff_full_drop_intIE :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t bitmap_zero_drop_intIE :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd3               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_MC_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_INTERRUPT                      0xf430a414
#define NI_HV_GLB_INTERRUPT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_stat_pspid_0     :  1 ; /* bits 0:0 */
    ca_uint32_t int_stat_pspid_1     :  1 ; /* bits 1:1 */
    ca_uint32_t int_stat_pspid_2     :  1 ; /* bits 2:2 */
    ca_uint32_t int_stat_pspid_3     :  1 ; /* bits 3:3 */
    ca_uint32_t int_stat_pspid_4     :  1 ; /* bits 4:4 */
    ca_uint32_t int_stat_pspid_5     :  1 ; /* bits 5:5 */
    ca_uint32_t int_stat_pspid_6     :  1 ; /* bits 6:6 */
    ca_uint32_t int_stat_pspid_7     :  1 ; /* bits 7:7 */
    ca_uint32_t int_stat_pspid_8     :  1 ; /* bits 8:8 */
    ca_uint32_t int_stat_pspid_9     :  1 ; /* bits 9:9 */
    ca_uint32_t int_stat_pspid_10    :  1 ; /* bits 10:10 */
    ca_uint32_t int_stat_pspid_11    :  1 ; /* bits 11:11 */
    ca_uint32_t macsec_de_int        :  1 ; /* bits 12:12 */
    ca_uint32_t xge6_int             :  1 ; /* bits 13:13 */
    ca_uint32_t xaui_int             :  1 ; /* bits 14:14 */
    ca_uint32_t macsec_en_int        :  1 ; /* bits 15:15 */
    ca_uint32_t int_stat_txem        :  1 ; /* bits 16:16 */
    ca_uint32_t int_stat_pc0         :  1 ; /* bits 17:17 */
    ca_uint32_t int_stat_pc1         :  1 ; /* bits 18:18 */
    ca_uint32_t int_stat_pc2         :  1 ; /* bits 19:19 */
    ca_uint32_t int_stat_pc3         :  1 ; /* bits 20:20 */
    ca_uint32_t int_stat_pc4         :  1 ; /* bits 21:21 */
    ca_uint32_t int_stat_pc5         :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t misc                 :  1 ; /* bits 24:24 */
    ca_uint32_t cpuxram_int_stat_cntr :  1 ; /* bits 25:25 */
    ca_uint32_t cpuxram_int_stat_err :  1 ; /* bits 26:26 */
    ca_uint32_t int_stat_ptp         :  1 ; /* bits 27:27 */
    ca_uint32_t int_stat_mceng       :  1 ; /* bits 28:28 */
    ca_uint32_t cpuxram_rxpkt        :  1 ; /* bits 29:29 */
    ca_uint32_t cpuxram_txpkt        :  1 ; /* bits 30:30 */
    ca_uint32_t ni_fifo              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_INTERRUPTE                     0xf430a418
#define NI_HV_GLB_INTERRUPTE_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_stat_pspid_0E    :  1 ; /* bits 0:0 */
    ca_uint32_t int_stat_pspid_1E    :  1 ; /* bits 1:1 */
    ca_uint32_t int_stat_pspid_2E    :  1 ; /* bits 2:2 */
    ca_uint32_t int_stat_pspid_3E    :  1 ; /* bits 3:3 */
    ca_uint32_t int_stat_pspid_4E    :  1 ; /* bits 4:4 */
    ca_uint32_t int_stat_pspid_5E    :  1 ; /* bits 5:5 */
    ca_uint32_t int_stat_pspid_6E    :  1 ; /* bits 6:6 */
    ca_uint32_t int_stat_pspid_7E    :  1 ; /* bits 7:7 */
    ca_uint32_t int_stat_pspid_8E    :  1 ; /* bits 8:8 */
    ca_uint32_t int_stat_pspid_9E    :  1 ; /* bits 9:9 */
    ca_uint32_t int_stat_pspid_10E   :  1 ; /* bits 10:10 */
    ca_uint32_t int_stat_pspid_11E   :  1 ; /* bits 11:11 */
    ca_uint32_t macsec_de_intE       :  1 ; /* bits 12:12 */
    ca_uint32_t xge6_intE            :  1 ; /* bits 13:13 */
    ca_uint32_t xaui_intE            :  1 ; /* bits 14:14 */
    ca_uint32_t macsec_en_intE       :  1 ; /* bits 15:15 */
    ca_uint32_t int_stat_txemE       :  1 ; /* bits 16:16 */
    ca_uint32_t int_stat_pc0E        :  1 ; /* bits 17:17 */
    ca_uint32_t int_stat_pc1E        :  1 ; /* bits 18:18 */
    ca_uint32_t int_stat_pc2E        :  1 ; /* bits 19:19 */
    ca_uint32_t int_stat_pc3E        :  1 ; /* bits 20:20 */
    ca_uint32_t int_stat_pc4E        :  1 ; /* bits 21:21 */
    ca_uint32_t int_stat_pc5E        :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t miscE                :  1 ; /* bits 24:24 */
    ca_uint32_t cpuxram_int_stat_cntrE :  1 ; /* bits 25:25 */
    ca_uint32_t cpuxram_int_stat_errE :  1 ; /* bits 26:26 */
    ca_uint32_t int_stat_ptpE        :  1 ; /* bits 27:27 */
    ca_uint32_t int_stat_mcengE      :  1 ; /* bits 28:28 */
    ca_uint32_t cpuxram_rxpktE       :  1 ; /* bits 29:29 */
    ca_uint32_t cpuxram_txpktE       :  1 ; /* bits 30:30 */
    ca_uint32_t ni_fifoE             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_ETH_TX_MISC_CFG                0xf430a41c
#define NI_HV_GLB_ETH_TX_MISC_CFG_dft            0x00002020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdy_low_thld_ge      :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rdy_high_thld_ge     :  9 ; /* bits 18:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rdy_low_thld_fe      :  5 ; /* bits 24:20 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rdy_high_thld_fe     :  5 ; /* bits 31:27 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_ETH_TX_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_DEBUG_2                        0xf430a420
#define NI_HV_GLB_DEBUG_2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_ptp_hw_cnt       : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ptp_hw_cnt_dbg       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_DEBUG_2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_DEBUG_3                        0xf430a424
#define NI_HV_GLB_DEBUG_3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_DEBUG_3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VENUS_MISC_CFG                 0xf430a428
#define NI_HV_GLB_VENUS_MISC_CFG_dft             0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xge7_rxfifo_almost_full_thre :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t xge7_cpu_tag_tx_en   :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t xge7_cpu_tag_cfg_sel :  1 ; /* bits 12:12 */
    ca_uint32_t xge6_cpu_tag_tx_en   :  1 ; /* bits 13:13 */
    ca_uint32_t xge6_cpu_tag_rx_en   :  1 ; /* bits 14:14 */
    ca_uint32_t xge6_cpu_tag_cfg_sel :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t top_dbg_sel          :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VENUS_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG_CFG                    0xf430a42c
#define NI_HV_GLB_CPU_TAG_CFG_dft                0x00048899

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rtk_tag              : 16 ; /* bits 15:0 */
    ca_uint32_t protocol             :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_PORT_ID1              0xf430a430
#define NI_HV_GLB_CPU_TAG0_PORT_ID1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid1                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_PORT_ID1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_PORT_ID0              0xf430a434
#define NI_HV_GLB_CPU_TAG0_PORT_ID0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_PORT_ID0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_PORT_MASK1            0xf430a438
#define NI_HV_GLB_CPU_TAG0_PORT_MASK1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_msk1            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_PORT_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_PORT_MASK0            0xf430a43c
#define NI_HV_GLB_CPU_TAG0_PORT_MASK0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_msk0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_PORT_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A15               0xf430a440
#define NI_HV_GLB_CPU_TAG0_HDR_A15_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a15              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A15_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A14               0xf430a444
#define NI_HV_GLB_CPU_TAG0_HDR_A14_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a14              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A14_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A13               0xf430a448
#define NI_HV_GLB_CPU_TAG0_HDR_A13_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a13              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A13_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A12               0xf430a44c
#define NI_HV_GLB_CPU_TAG0_HDR_A12_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a12              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A12_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A11               0xf430a450
#define NI_HV_GLB_CPU_TAG0_HDR_A11_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a11              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A11_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A10               0xf430a454
#define NI_HV_GLB_CPU_TAG0_HDR_A10_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a10              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A10_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A9                0xf430a458
#define NI_HV_GLB_CPU_TAG0_HDR_A9_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a9               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A9_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A8                0xf430a45c
#define NI_HV_GLB_CPU_TAG0_HDR_A8_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a8               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A8_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A7                0xf430a460
#define NI_HV_GLB_CPU_TAG0_HDR_A7_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a7               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A7_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A6                0xf430a464
#define NI_HV_GLB_CPU_TAG0_HDR_A6_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a6               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A6_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A5                0xf430a468
#define NI_HV_GLB_CPU_TAG0_HDR_A5_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a5               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A4                0xf430a46c
#define NI_HV_GLB_CPU_TAG0_HDR_A4_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a4               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A3                0xf430a470
#define NI_HV_GLB_CPU_TAG0_HDR_A3_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a3               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A2                0xf430a474
#define NI_HV_GLB_CPU_TAG0_HDR_A2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a2               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A1                0xf430a478
#define NI_HV_GLB_CPU_TAG0_HDR_A1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG0_HDR_A0                0xf430a47c
#define NI_HV_GLB_CPU_TAG0_HDR_A0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG0_HDR_A0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_PORT_ID1              0xf430a480
#define NI_HV_GLB_CPU_TAG1_PORT_ID1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid1                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_PORT_ID1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_PORT_ID0              0xf430a484
#define NI_HV_GLB_CPU_TAG1_PORT_ID0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pid0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_PORT_ID0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_PORT_MASK1            0xf430a488
#define NI_HV_GLB_CPU_TAG1_PORT_MASK1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_msk1            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_PORT_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_PORT_MASK0            0xf430a48c
#define NI_HV_GLB_CPU_TAG1_PORT_MASK0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_msk0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_PORT_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A15               0xf430a490
#define NI_HV_GLB_CPU_TAG1_HDR_A15_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a15              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A15_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A14               0xf430a494
#define NI_HV_GLB_CPU_TAG1_HDR_A14_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a14              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A14_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A13               0xf430a498
#define NI_HV_GLB_CPU_TAG1_HDR_A13_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a13              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A13_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A12               0xf430a49c
#define NI_HV_GLB_CPU_TAG1_HDR_A12_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a12              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A12_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A11               0xf430a4a0
#define NI_HV_GLB_CPU_TAG1_HDR_A11_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a11              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A11_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A10               0xf430a4a4
#define NI_HV_GLB_CPU_TAG1_HDR_A10_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a10              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A10_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A9                0xf430a4a8
#define NI_HV_GLB_CPU_TAG1_HDR_A9_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a9               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A9_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A8                0xf430a4ac
#define NI_HV_GLB_CPU_TAG1_HDR_A8_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a8               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A8_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A7                0xf430a4b0
#define NI_HV_GLB_CPU_TAG1_HDR_A7_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a7               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A7_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A6                0xf430a4b4
#define NI_HV_GLB_CPU_TAG1_HDR_A6_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a6               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A6_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A5                0xf430a4b8
#define NI_HV_GLB_CPU_TAG1_HDR_A5_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a5               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A4                0xf430a4bc
#define NI_HV_GLB_CPU_TAG1_HDR_A4_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a4               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A3                0xf430a4c0
#define NI_HV_GLB_CPU_TAG1_HDR_A3_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a3               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A2                0xf430a4c4
#define NI_HV_GLB_CPU_TAG1_HDR_A2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a2               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A1                0xf430a4c8
#define NI_HV_GLB_CPU_TAG1_HDR_A1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG1_HDR_A0                0xf430a4cc
#define NI_HV_GLB_CPU_TAG1_HDR_A0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG1_HDR_A0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG1 0xf430a4d0
#define NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t default_hdr_a1       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG0 0xf430a4d4
#define NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t default_hdr_a0       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG1 0xf430a4d8
#define NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t default_hdr_a1       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG0 0xf430a4dc
#define NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t default_hdr_a0       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG11                 0xf430a4e0
#define NI_HV_GLB_SRAMTEST_CFG11_dft             0x00020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni1_ctl1             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG11_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG10                 0xf430a4e4
#define NI_HV_GLB_SRAMTEST_CFG10_dft             0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni1_ctl0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG10_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG22                 0xf430a4e8
#define NI_HV_GLB_SRAMTEST_CFG22_dft             0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni2_ctl2             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG22_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG21                 0xf430a4ec
#define NI_HV_GLB_SRAMTEST_CFG21_dft             0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni2_ctl1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG21_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG20                 0xf430a4f0
#define NI_HV_GLB_SRAMTEST_CFG20_dft             0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni2_ctl0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG20_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG32                 0xf430a4f4
#define NI_HV_GLB_SRAMTEST_CFG32_dft             0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni3_ctl2             :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG32_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG31                 0xf430a4f8
#define NI_HV_GLB_SRAMTEST_CFG31_dft             0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni3_ctl1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG31_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG30                 0xf430a4fc
#define NI_HV_GLB_SRAMTEST_CFG30_dft             0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni3_ctl0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG30_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG4                  0xf430a500
#define NI_HV_GLB_SRAMTEST_CFG4_dft              0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni4_ctl              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG5                  0xf430a504
#define NI_HV_GLB_SRAMTEST_CFG5_dft              0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni5_ctl              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG61                 0xf430a508
#define NI_HV_GLB_SRAMTEST_CFG61_dft             0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni6_ctl1             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG61_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG60                 0xf430a50c
#define NI_HV_GLB_SRAMTEST_CFG60_dft             0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni6_ctl0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG60_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG7                  0xf430a510
#define NI_HV_GLB_SRAMTEST_CFG7_dft              0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_xaui1_ctl         : 24 ; /* bits 23:0 */
    ca_uint32_t ni_xram_ctl          :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG7_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMTEST_CFG8                  0xf430a514
#define NI_HV_GLB_SRAMTEST_CFG8_dft              0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_xaui2_ctl         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMTEST_CFG8_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMLS_CFG0                    0xf430a518
#define NI_HV_GLB_SRAMLS_CFG0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni1_sramls           :  7 ; /* bits 6:0 */
    ca_uint32_t ni2_sramls           : 10 ; /* bits 16:7 */
    ca_uint32_t ni3_sramls           :  9 ; /* bits 25:17 */
    ca_uint32_t ni4_sramls           :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMLS_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_SRAMLS_CFG1                    0xf430a51c
#define NI_HV_GLB_SRAMLS_CFG1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni5_sramls           :  4 ; /* bits 3:0 */
    ca_uint32_t ni6_sramls           :  6 ; /* bits 9:4 */
    ca_uint32_t ni_xaui1_sramls      :  3 ; /* bits 12:10 */
    ca_uint32_t ni_xaui2_sramls      :  4 ; /* bits 16:13 */
    ca_uint32_t ni_xram_sramls       :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_SRAMLS_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_THROTTLE_CNTL              0xf430a520
#define NI_HV_GLB_CLK_THROTTLE_CNTL_dft          0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_period           :  5 ; /* bits 4:0 */
    ca_uint32_t lpf_mode             :  2 ; /* bits 6:5 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sw_thresh            : 21 ; /* bits 31:11 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_THROTTLE_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_0                      0xf430a524
#define NI_HV_GLB_CLK_LUT_0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_0            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_1                      0xf430a528
#define NI_HV_GLB_CLK_LUT_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_1            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_2                      0xf430a52c
#define NI_HV_GLB_CLK_LUT_2_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_2            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_3                      0xf430a530
#define NI_HV_GLB_CLK_LUT_3_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_3            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_4                      0xf430a534
#define NI_HV_GLB_CLK_LUT_4_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_4            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_5                      0xf430a538
#define NI_HV_GLB_CLK_LUT_5_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_5            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_LUT_6                      0xf430a53c
#define NI_HV_GLB_CLK_LUT_6_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lut_vec_6            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_LUT_6_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_DIV_0                      0xf430a540
#define NI_HV_GLB_CLK_DIV_0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t div_setting_0        :  7 ; /* bits 6:0 */
    ca_uint32_t div_setting_1        :  7 ; /* bits 13:7 */
    ca_uint32_t div_setting_2        :  7 ; /* bits 20:14 */
    ca_uint32_t div_setting_3        :  7 ; /* bits 27:21 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_DIV_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_DIV_1                      0xf430a544
#define NI_HV_GLB_CLK_DIV_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t div_setting_4        :  7 ; /* bits 6:0 */
    ca_uint32_t div_setting_5        :  7 ; /* bits 13:7 */
    ca_uint32_t div_setting_6        :  7 ; /* bits 20:14 */
    ca_uint32_t div_setting_7        :  7 ; /* bits 27:21 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_DIV_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_CLK_MAX_TRAP                   0xf430a548
#define NI_HV_GLB_CLK_MAX_TRAP_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_trap             : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_CLK_MAX_TRAP_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_C10_DEC_IN_RATE_CFG            0xf430a54c
#define NI_HV_GLB_C10_DEC_IN_RATE_CFG_dft        0xa8aa8aa8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_C10_DEC_IN_RATE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_CTRL                      0xf430a550
#define NI_HV_GLB_VMAC_CTRL_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vmac_en              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_RX_CTRL                   0xf430a554
#define NI_HV_GLB_VMAC_RX_CTRL_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t send                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_RX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_RX_IF                     0xf430a558
#define NI_HV_GLB_VMAC_RX_IF_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid                :  1 ; /* bits 0:0 */
    ca_uint32_t drop                 :  1 ; /* bits 1:1 */
    ca_uint32_t sop                  :  1 ; /* bits 2:2 */
    ca_uint32_t eop                  :  1 ; /* bits 3:3 */
    ca_uint32_t sob                  :  1 ; /* bits 4:4 */
    ca_uint32_t eob                  :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t pspid                :  4 ; /* bits 11:8 */
    ca_uint32_t bv                   :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_RX_IF_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_RX_DATA2                  0xf430a55c
#define NI_HV_GLB_VMAC_RX_DATA2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_RX_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_RX_DATA1                  0xf430a560
#define NI_HV_GLB_VMAC_RX_DATA1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_RX_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_RX_DATA0                  0xf430a564
#define NI_HV_GLB_VMAC_RX_DATA0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_RX_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_TX_CTRL                   0xf430a568
#define NI_HV_GLB_VMAC_TX_CTRL_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t capture              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_TX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_TX_IF                     0xf430a56c
#define NI_HV_GLB_VMAC_TX_IF_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid                :  1 ; /* bits 0:0 */
    ca_uint32_t drop                 :  1 ; /* bits 1:1 */
    ca_uint32_t sop                  :  1 ; /* bits 2:2 */
    ca_uint32_t eop                  :  1 ; /* bits 3:3 */
    ca_uint32_t vmactx_src           :  2 ; /* bits 5:4 */
    ca_uint32_t sob                  :  1 ; /* bits 6:6 */
    ca_uint32_t eob                  :  1 ; /* bits 7:7 */
    ca_uint32_t dpid                 :  4 ; /* bits 11:8 */
    ca_uint32_t bv                   :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t non_empty            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_TX_IF_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_TX_DATA3                  0xf430a570
#define NI_HV_GLB_VMAC_TX_DATA3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data3                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_TX_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_TX_DATA2                  0xf430a574
#define NI_HV_GLB_VMAC_TX_DATA2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_TX_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_TX_DATA1                  0xf430a578
#define NI_HV_GLB_VMAC_TX_DATA1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_TX_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_VMAC_TX_DATA0                  0xf430a57c
#define NI_HV_GLB_VMAC_TX_DATA0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_VMAC_TX_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_FNL_STS_1                 0xf430a580
#define NI_HV_GLB_PORT_FNL_STS_1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p2_int_cfg           :  4 ; /* bits 3:0 */
    ca_uint32_t p2_link_status       :  1 ; /* bits 4:4 */
    ca_uint32_t p2_duplex            :  1 ; /* bits 5:5 */
    ca_uint32_t p2_speed             :  1 ; /* bits 6:6 */
    ca_uint32_t p2_rx_flow_to_tx_en  :  1 ; /* bits 7:7 */
    ca_uint32_t p2_rx_pfc_disable    :  1 ; /* bits 8:8 */
    ca_uint32_t p2_rx_flow_disable   :  1 ; /* bits 9:9 */
    ca_uint32_t p2_tx_pfc_disable    :  1 ; /* bits 10:10 */
    ca_uint32_t p2_tx_flow_disable   :  1 ; /* bits 11:11 */
    ca_uint32_t p2_giga_lite         :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t p3_int_cfg           :  4 ; /* bits 19:16 */
    ca_uint32_t p3_link_status       :  1 ; /* bits 20:20 */
    ca_uint32_t p3_duplex            :  1 ; /* bits 21:21 */
    ca_uint32_t p3_speed             :  1 ; /* bits 22:22 */
    ca_uint32_t p3_rx_flow_to_tx_en  :  1 ; /* bits 23:23 */
    ca_uint32_t p3_rx_pfc_disable    :  1 ; /* bits 24:24 */
    ca_uint32_t p3_rx_flow_disable   :  1 ; /* bits 25:25 */
    ca_uint32_t p3_tx_pfc_disable    :  1 ; /* bits 26:26 */
    ca_uint32_t p3_tx_flow_disable   :  1 ; /* bits 27:27 */
    ca_uint32_t p3_giga_lite         :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_FNL_STS_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_PORT_FNL_STS_0                 0xf430a584
#define NI_HV_GLB_PORT_FNL_STS_0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_int_cfg           :  4 ; /* bits 3:0 */
    ca_uint32_t p0_link_status       :  1 ; /* bits 4:4 */
    ca_uint32_t p0_duplex            :  1 ; /* bits 5:5 */
    ca_uint32_t p0_speed             :  1 ; /* bits 6:6 */
    ca_uint32_t p0_rx_flow_to_tx_en  :  1 ; /* bits 7:7 */
    ca_uint32_t p0_rx_pfc_disable    :  1 ; /* bits 8:8 */
    ca_uint32_t p0_rx_flow_disable   :  1 ; /* bits 9:9 */
    ca_uint32_t p0_tx_pfc_disable    :  1 ; /* bits 10:10 */
    ca_uint32_t p0_tx_flow_disable   :  1 ; /* bits 11:11 */
    ca_uint32_t p0_giga_lite         :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t p1_int_cfg           :  4 ; /* bits 19:16 */
    ca_uint32_t p1_link_status       :  1 ; /* bits 20:20 */
    ca_uint32_t p1_duplex            :  1 ; /* bits 21:21 */
    ca_uint32_t p1_speed             :  1 ; /* bits 22:22 */
    ca_uint32_t p1_rx_flow_to_tx_en  :  1 ; /* bits 23:23 */
    ca_uint32_t p1_rx_pfc_disable    :  1 ; /* bits 24:24 */
    ca_uint32_t p1_rx_flow_disable   :  1 ; /* bits 25:25 */
    ca_uint32_t p1_tx_pfc_disable    :  1 ; /* bits 26:26 */
    ca_uint32_t p1_tx_flow_disable   :  1 ; /* bits 27:27 */
    ca_uint32_t p1_giga_lite         :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_PORT_FNL_STS_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_DBG_CTL                        0xf430a588
#define NI_HV_GLB_DBG_CTL_dft                    0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_dbg_sel           :  4 ; /* bits 3:0 */
    ca_uint32_t ni_dbg_sel_2         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t ni_dbg_clr           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_DBG_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_GLB_DBG_DATA                       0xf430a58c
#define NI_HV_GLB_DBG_DATA_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_dbg_sig           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_GLB_DBG_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_GLB_REVISION_t                     REVISION;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_GLB_INIT_DONE_t                    INIT_DONE;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_GLB_INTF_RST_CONFIG_t              INTF_RST_CONFIG;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_GLB_IPG_CMPS_CFG_t                 IPG_CMPS_CFG;                  /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_GLB_GPHY_STS_AUTOSYNC_CFG_t        GPHY_STS_AUTOSYNC_CFG;         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_GLB_PCS_STATUS_1_t                 PCS_STATUS_1;                  /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_GLB_PCS_STATUS_0_t                 PCS_STATUS_0;                  /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_GLB_STATIC_CFG_t                   STATIC_CFG;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_GLB_VENUS_CORESEC10_CFG_t          VENUS_CORESEC10_CFG;           /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_GLB_MAC_ADDR_CFG0_t                MAC_ADDR_CFG0;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_GLB_MAC_ADDR_CFG1_t                MAC_ADDR_CFG1;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_GLB_WOL_PASSWD_0_t                 WOL_PASSWD_0;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_GLB_WOL_PASSWD_1_t                 WOL_PASSWD_1;                  /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  NI_HV_GLB_PKT_LEN_CFG_t                  PKT_LEN_CFG;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  NI_HV_GLB_PKT_STOR_LEN_CFG_t             PKT_STOR_LEN_CFG;              /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  NI_HV_GLB_P5_BYPASS_CFG_t                P5_BYPASS_CFG;                 /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  NI_HV_GLB_XGE_BYPASS_CFG_t               XGE_BYPASS_CFG;                /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  NI_HV_GLB_XGE6_RXPAUSE_CFG_t             XGE6_RXPAUSE_CFG;              /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  NI_HV_GLB_XGE7_RXFIFO_THRESHOLD_t        XGE7_RXFIFO_THRESHOLD;         /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  NI_HV_GLB_XGE6_MAC_CFG1_t                XGE6_MAC_CFG1;                 /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  NI_HV_GLB_XGE6_MAC_CFG0_t                XGE6_MAC_CFG0;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_t        XGE6_FLOW_CONTROL_CFG;         /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  NI_HV_GLB_XGE6_TX_REPEAT_CNT_t           XGE6_TX_REPEAT_CNT;            /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  NI_HV_GLB_XGE6_TX_QUANTA0_t              XGE6_TX_QUANTA0;               /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  NI_HV_GLB_XGE6_TX_QUANTA1_t              XGE6_TX_QUANTA1;               /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  NI_HV_GLB_XGE6_TX_QUANTA2_t              XGE6_TX_QUANTA2;               /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  NI_HV_GLB_XGE6_TX_QUANTA3_t              XGE6_TX_QUANTA3;               /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  NI_HV_GLB_XGE6_QBB_WAIT_TIME_t           XGE6_QBB_WAIT_TIME;            /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_t    XGE6_RX_FLOW_CTRL_PKT_CNT;     /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_t    XGE6_RX_FAKE_PAUS_PKT_CNT;     /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_t    XGE6_TX_FLOW_CTRL_PKT_CNT;     /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1_t    RXMUX_INTPT_CALENDAR_CFG1;     /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0_t    RXMUX_INTPT_CALENDAR_CFG0;     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  NI_HV_GLB_RXMUX_CTRL_CFG_t               RXMUX_CTRL_CFG;                /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  NI_HV_GLB_RXMUX_LAST_HDR_A2_t            RXMUX_LAST_HDR_A2;             /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  NI_HV_GLB_RXMUX_LAST_HDR_A1_t            RXMUX_LAST_HDR_A1;             /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  NI_HV_GLB_RXMUX_LAST_HDR_A0_t            RXMUX_LAST_HDR_A0;             /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  NI_HV_GLB_RXMUX_PKTCNT_t                 RXMUX_PKTCNT;                  /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_t RXMUX_PORT0_FC_THRESHOLD_CFG;  /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[47];
  NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd40[3];
  NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd41[3];
  NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd42[3];
  NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd43[3];
  NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd44[3];
  NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd45[3];
  NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd46[3];
  NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd47[3];
  NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd48[3];
  NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd49[3];
  NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd50[3];
  NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd51[3];
  NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE_t        RX_SEG_BUFSIZE_UPDATE;         /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd52[3];
  NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG_t   RX_SEG_VLAN_TAG_INSERT_CFG;    /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd53[3];
  NI_HV_GLB_RXMUX_HDR_BUF_STATUS_t         RXMUX_HDR_BUF_STATUS;          /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd54[3];
  NI_HV_GLB_RXMUX_DATA_BUF_STATUS_t        RXMUX_DATA_BUF_STATUS;         /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd55[3];
  NI_HV_GLB_RXMUX_DBG_CFG_t                RXMUX_DBG_CFG;                 /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd56[3];
  NI_HV_GLB_RXMUX_OUT_CNT0_t               RXMUX_OUT_CNT0;                /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd57[3];
  NI_HV_GLB_RXMUX_OUT_CNT1_t               RXMUX_OUT_CNT1;                /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd58[3];
  NI_HV_GLB_RXMUX_OUT_DRPCNT0_t            RXMUX_OUT_DRPCNT0;             /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd59[3];
  NI_HV_GLB_RXMUX_OUT_DRPCNT1_t            RXMUX_OUT_DRPCNT1;             /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd60[3];
  NI_HV_GLB_NIRX_XRAM_STS_t                NIRX_XRAM_STS;                 /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd61[3];
  NI_HV_GLB_NIRX_L3QM_STS_t                NIRX_L3QM_STS;                 /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd62[3];
  NI_HV_GLB_NIRX_L3FE_STS_t                NIRX_L3FE_STS;                 /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd63[3];
  NI_HV_GLB_P0_RX_DROPCNT_t                P0_RX_DROPCNT;                 /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd64[27];
  NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG_t    P0_TX_SHARE_FIFO_BASE_CFG;     /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd65[3];
  NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG_t    P1_TX_SHARE_FIFO_BASE_CFG;     /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd66[3];
  NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG_t    P2_TX_SHARE_FIFO_BASE_CFG;     /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd67[3];
  NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG_t    P3_TX_SHARE_FIFO_BASE_CFG;     /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd68[3];
  NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG_t    P4_TX_SHARE_FIFO_BASE_CFG;     /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd69[3];
  NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG_t   MCE_TX_SHARE_FIFO_BASE_CFG;    /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd70[3];
  NI_HV_GLB_PG_DA_CFG0_t                   PG_DA_CFG0;                    /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd71[3];
  NI_HV_GLB_PG_DA_CFG1_t                   PG_DA_CFG1;                    /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd72[3];
  NI_HV_GLB_PG_SA_CFG0_t                   PG_SA_CFG0;                    /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd73[3];
  NI_HV_GLB_PG_SA_CFG1_t                   PG_SA_CFG1;                    /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd74[3];
  NI_HV_GLB_PG_CFG0_t                      PG_CFG0;                       /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd75[3];
  NI_HV_GLB_PG_CFG1_t                      PG_CFG1;                       /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd76[3];
  NI_HV_GLB_PG_FXPT_CFG_t                  PG_FXPT_CFG;                   /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd77[3];
  NI_HV_GLB_PC_DA1_t                       PC_DA1;                        /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd78[3];
  NI_HV_GLB_PC_DA2_t                       PC_DA2;                        /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd79[3];
  NI_HV_GLB_PC_SA1_t                       PC_SA1;                        /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd80[3];
  NI_HV_GLB_PC_SA2_t                       PC_SA2;                        /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd81[3];
  NI_HV_GLB_PC_CFG0_t                      PC_CFG0;                       /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd82[3];
  NI_HV_GLB_PC_CFG1_t                      PC_CFG1;                       /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd83[3];
  NI_HV_GLB_PC_FXPT_t                      PC_FXPT;                       /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd84[3];
  NI_HV_GLB_RM_CFG_t                       RM_CFG;                        /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd85[3];
  NI_HV_GLB_RM_TBMAX_t                     RM_TBMAX;                      /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd86[3];
  NI_HV_GLB_RM_CNTR_t                      RM_CNTR;                       /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd87[3];
  NI_HV_GLB_RM_LASTCNTR_t                  RM_LASTCNTR;                   /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd88[3];
  NI_HV_GLB_RXMIB_ACCESS_t                 RXMIB_ACCESS;                  /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd89[3];
  NI_HV_GLB_RXMIB_DATA1_t                  RXMIB_DATA1;                   /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd90[3];
  NI_HV_GLB_RXMIB_DATA0_t                  RXMIB_DATA0;                   /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd91[3];
  NI_HV_GLB_TXMIB_ACCESS_t                 TXMIB_ACCESS;                  /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd92[3];
  NI_HV_GLB_TXMIB_DATA1_t                  TXMIB_DATA1;                   /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd93[3];
  NI_HV_GLB_TXMIB_DATA0_t                  TXMIB_DATA0;                   /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd94[3];
  NI_HV_GLB_INTERNAL_PORT_ID_CFG_t         INTERNAL_PORT_ID_CFG;          /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd95[3];
  NI_HV_GLB_INTERNAL_PORT_ID_CFG2_t        INTERNAL_PORT_ID_CFG2;         /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd96[3];
  NI_HV_GLB_L3QMRX_DEMUX_CFG1_t            L3QMRX_DEMUX_CFG1;             /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd97[3];
  NI_HV_GLB_L3QMRX_DEMUX_CFG0_t            L3QMRX_DEMUX_CFG0;             /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd98[3];
  NI_HV_GLB_RX_PORT_ID_CFG_t               RX_PORT_ID_CFG;                /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd99[3];
  NI_HV_GLB_RX_PORT_ID_CFG2_t              RX_PORT_ID_CFG2;               /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd100[3];
  NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3_t         NIRX_L3FE_DEMUX_CFG3;          /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd101[3];
  NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2_t         NIRX_L3FE_DEMUX_CFG2;          /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd102[3];
  NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1_t         NIRX_L3FE_DEMUX_CFG1;          /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd103[3];
  NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0_t         NIRX_L3FE_DEMUX_CFG0;          /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd104[3];
  NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3_t     NIRX_L3FE_DPQ_DEMUX_CFG3;      /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd105[3];
  NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2_t     NIRX_L3FE_DPQ_DEMUX_CFG2;      /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd106[3];
  NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1_t     NIRX_L3FE_DPQ_DEMUX_CFG1;      /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd107[3];
  NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0_t     NIRX_L3FE_DPQ_DEMUX_CFG0;      /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd108[3];
  NI_HV_GLB_NITX_MISC_CFG_t                NITX_MISC_CFG;                 /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd109[3];
  NI_HV_GLB_NIRX_MISC_CFG_t                NIRX_MISC_CFG;                 /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd110[3];
  NI_HV_GLB_TX_PORT_ID_CFG_t               TX_PORT_ID_CFG;                /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd111[3];
  NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG_t      TX_INTERNAL_PORT_ID_CFG;       /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd112[3];
  NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2_t     TX_INTERNAL_PORT_ID_CFG2;      /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd113[3];
  NI_HV_GLB_NITX_CRCE_CNT_t                NITX_CRCE_CNT;                 /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd114[3];
  NI_HV_GLB_NITX_P5_DRAINCNT_t             NITX_P5_DRAINCNT;              /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd115[3];
  NI_HV_GLB_NITX_P6_DRAINCNT_t             NITX_P6_DRAINCNT;              /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd116[3];
  NI_HV_GLB_NITX_P7_DRAINCNT_t             NITX_P7_DRAINCNT;              /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd117[3];
  NI_HV_GLB_NITX_OAMERR_CNT_t              NITX_OAMERR_CNT;               /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd118[3];
  NI_HV_GLB_TXFIFO_READ_THRESHOLD_t        TXFIFO_READ_THRESHOLD;         /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd119[3];
  NI_HV_GLB_TXFIFO_READ_THRESHOLD_2_t      TXFIFO_READ_THRESHOLD_2;       /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd120[3];
  NI_HV_GLB_TXFIFO_READ_THRESHOLD_3_t      TXFIFO_READ_THRESHOLD_3;       /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd121[3];
  NI_HV_GLB_TXFIFO_READ_THRESHOLD_4_t      TXFIFO_READ_THRESHOLD_4;       /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd122[3];
  NI_HV_GLB_TXFIFO_READ_THRESHOLD_5_t      TXFIFO_READ_THRESHOLD_5;       /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd123[3];
  NI_HV_GLB_TXFIFO_QM2LAN_CTRL_0_t         TXFIFO_QM2LAN_CTRL_0;          /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd124[3];
  NI_HV_GLB_TXFIFO_QM2LAN_CTRL_1_t         TXFIFO_QM2LAN_CTRL_1;          /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd125[3];
  NI_HV_GLB_TXFIFO_QM2LAN_CTRL_2_t         TXFIFO_QM2LAN_CTRL_2;          /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd126[3];
  NI_HV_GLB_TXFIFO_QM2LAN_CTRL_3_t         TXFIFO_QM2LAN_CTRL_3;          /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd127[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1_t   TXFIFO_THRESHOLD_XGE7_CFG1;    /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd128[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2_t   TXFIFO_THRESHOLD_XGE7_CFG2;    /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd129[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1_t   TXFIFO_THRESHOLD_L3QM_CFG1;    /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd130[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2_t   TXFIFO_THRESHOLD_L3QM_CFG2;    /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd131[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1_t   TXFIFO_THRESHOLD_L3FE_CFG1;    /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd132[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2_t   TXFIFO_THRESHOLD_L3FE_CFG2;    /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd133[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG_t    TXFIFO_THRESHOLD_MISC_CFG;     /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd134[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2_t   TXFIFO_THRESHOLD_MISC_CFG2;    /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd135[3];
  NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3_t   TXFIFO_THRESHOLD_MISC_CFG3;    /* addr: 0x00000260 */
  ca_uint32_t                              rsrvd136[3];
  NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG_t     TXFIFO_MCE_THRESHOLD_CFG;      /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd137[3];
  NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG_t    RXFIFO_THRESHOLD_MISC_CFG;     /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd138[3];
  NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG_t    RXFIFO_XGE6_THRESHOLD_CFG;     /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd139[3];
  NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG_t      NIRX_L3QM_THRESHOLD_CFG;       /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd140[3];
  NI_HV_GLB_PTP_TX_CFG_t                   PTP_TX_CFG;                    /* addr: 0x00000274 */
  ca_uint32_t                              rsrvd141[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_01_t           GE_PTP_ASYM_CFG_01;            /* addr: 0x00000278 */
  ca_uint32_t                              rsrvd142[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_00_t           GE_PTP_ASYM_CFG_00;            /* addr: 0x0000027c */
  ca_uint32_t                              rsrvd143[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_11_t           GE_PTP_ASYM_CFG_11;            /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd144[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_10_t           GE_PTP_ASYM_CFG_10;            /* addr: 0x00000284 */
  ca_uint32_t                              rsrvd145[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_21_t           GE_PTP_ASYM_CFG_21;            /* addr: 0x00000288 */
  ca_uint32_t                              rsrvd146[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_20_t           GE_PTP_ASYM_CFG_20;            /* addr: 0x0000028c */
  ca_uint32_t                              rsrvd147[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_31_t           GE_PTP_ASYM_CFG_31;            /* addr: 0x00000290 */
  ca_uint32_t                              rsrvd148[3];
  NI_HV_GLB_GE_PTP_ASYM_CFG_30_t           GE_PTP_ASYM_CFG_30;            /* addr: 0x00000294 */
  ca_uint32_t                              rsrvd149[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_01_t         XAUI_PTP_ASYM_CFG_01;          /* addr: 0x00000298 */
  ca_uint32_t                              rsrvd150[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_00_t         XAUI_PTP_ASYM_CFG_00;          /* addr: 0x0000029c */
  ca_uint32_t                              rsrvd151[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_11_t         XAUI_PTP_ASYM_CFG_11;          /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd152[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_10_t         XAUI_PTP_ASYM_CFG_10;          /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd153[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_21_t         XAUI_PTP_ASYM_CFG_21;          /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd154[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_20_t         XAUI_PTP_ASYM_CFG_20;          /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd155[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_31_t         XAUI_PTP_ASYM_CFG_31;          /* addr: 0x000002b0 */
  ca_uint32_t                              rsrvd156[3];
  NI_HV_GLB_XAUI_PTP_ASYM_CFG_30_t         XAUI_PTP_ASYM_CFG_30;          /* addr: 0x000002b4 */
  ca_uint32_t                              rsrvd157[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_01_t          XGE_PTP_ASYM_CFG_01;           /* addr: 0x000002b8 */
  ca_uint32_t                              rsrvd158[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_00_t          XGE_PTP_ASYM_CFG_00;           /* addr: 0x000002bc */
  ca_uint32_t                              rsrvd159[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_11_t          XGE_PTP_ASYM_CFG_11;           /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd160[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_10_t          XGE_PTP_ASYM_CFG_10;           /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd161[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_21_t          XGE_PTP_ASYM_CFG_21;           /* addr: 0x000002c8 */
  ca_uint32_t                              rsrvd162[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_20_t          XGE_PTP_ASYM_CFG_20;           /* addr: 0x000002cc */
  ca_uint32_t                              rsrvd163[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_31_t          XGE_PTP_ASYM_CFG_31;           /* addr: 0x000002d0 */
  ca_uint32_t                              rsrvd164[3];
  NI_HV_GLB_XGE_PTP_ASYM_CFG_30_t          XGE_PTP_ASYM_CFG_30;           /* addr: 0x000002d4 */
  ca_uint32_t                              rsrvd165[3];
  NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC1_t     P0_PTP_TX_TIMESTAMP_SEC1;      /* addr: 0x000002d8 */
  ca_uint32_t                              rsrvd166[3];
  NI_HV_GLB_P0_PTP_TX_TIMESTAMP_SEC0_t     P0_PTP_TX_TIMESTAMP_SEC0;      /* addr: 0x000002dc */
  ca_uint32_t                              rsrvd167[3];
  NI_HV_GLB_P0_PTP_TX_TIMESTAMP_t          P0_PTP_TX_TIMESTAMP;           /* addr: 0x000002e0 */
  ca_uint32_t                              rsrvd168[75];
  NI_HV_GLB_NITX_STS_t                     NITX_STS;                      /* addr: 0x0000032c */
  ca_uint32_t                              rsrvd169[3];
  NI_HV_GLB_SPARE_t                        SPARE;                         /* addr: 0x00000330 */
  ca_uint32_t                              rsrvd170[3];
  NI_HV_GLB_MISC_STS_t                     MISC_STS;                      /* addr: 0x00000334 */
  ca_uint32_t                              rsrvd171[3];
  NI_HV_GLB_SPARESAMPLE_t                  SPARESAMPLE;                   /* addr: 0x00000338 */
  ca_uint32_t                              rsrvd172[3];
  NI_HV_GLB_PORT_0_INTERRUPT_t             PORT_0_INTERRUPT;              /* addr: 0x0000033c */
  ca_uint32_t                              rsrvd173[3];
  NI_HV_GLB_PORT_0_INTERRUPTE_t            PORT_0_INTERRUPTE;             /* addr: 0x00000340 */
  ca_uint32_t                              rsrvd174[43];
  NI_HV_GLB_PORT_6_INTERRUPT_t             PORT_6_INTERRUPT;              /* addr: 0x0000036c */
  ca_uint32_t                              rsrvd175[3];
  NI_HV_GLB_PORT_6_INTERRUPTE_t            PORT_6_INTERRUPTE;             /* addr: 0x00000370 */
  ca_uint32_t                              rsrvd176[11];
  NI_HV_GLB_PORT_8_INTERRUPT_t             PORT_8_INTERRUPT;              /* addr: 0x0000037c */
  ca_uint32_t                              rsrvd177[3];
  NI_HV_GLB_PORT_8_INTERRUPTE_t            PORT_8_INTERRUPTE;             /* addr: 0x00000380 */
  ca_uint32_t                              rsrvd178[27];
  NI_HV_GLB_NIFIFO_INTERRUPT_t             NIFIFO_INTERRUPT;              /* addr: 0x0000039c */
  ca_uint32_t                              rsrvd179[3];
  NI_HV_GLB_NIFIFO_INTERRUPTE_t            NIFIFO_INTERRUPTE;             /* addr: 0x000003a0 */
  ca_uint32_t                              rsrvd180[3];
  NI_HV_GLB_MISC_INTERRUPT_t               MISC_INTERRUPT;                /* addr: 0x000003a4 */
  ca_uint32_t                              rsrvd181[3];
  NI_HV_GLB_MISC_INTERRUPTE_t              MISC_INTERRUPTE;               /* addr: 0x000003a8 */
  ca_uint32_t                              rsrvd182[3];
  NI_HV_GLB_TXEM_INTERRUPT_t               TXEM_INTERRUPT;                /* addr: 0x000003ac */
  ca_uint32_t                              rsrvd183[3];
  NI_HV_GLB_TXEM_INTERRUPTE_t              TXEM_INTERRUPTE;               /* addr: 0x000003b0 */
  ca_uint32_t                              rsrvd184[3];
  NI_HV_GLB_PC0_INTERRUPT_t                PC0_INTERRUPT;                 /* addr: 0x000003b4 */
  ca_uint32_t                              rsrvd185[3];
  NI_HV_GLB_PC0_INTERRUPTE_t               PC0_INTERRUPTE;                /* addr: 0x000003b8 */
  ca_uint32_t                              rsrvd186[43];
  NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT_t       CPUXRAM_CNTR_INTERRUPT;        /* addr: 0x000003e4 */
  ca_uint32_t                              rsrvd187[3];
  NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE_t      CPUXRAM_CNTR_INTERRUPTE;       /* addr: 0x000003e8 */
  ca_uint32_t                              rsrvd188[3];
  NI_HV_GLB_CPUXRAM_ERR_INTERRUPT_t        CPUXRAM_ERR_INTERRUPT;         /* addr: 0x000003ec */
  ca_uint32_t                              rsrvd189[3];
  NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE_t       CPUXRAM_ERR_INTERRUPTE;        /* addr: 0x000003f0 */
  ca_uint32_t                              rsrvd190[3];
  NI_HV_GLB_PTP_INTERRUPT_t                PTP_INTERRUPT;                 /* addr: 0x000003f4 */
  ca_uint32_t                              rsrvd191[3];
  NI_HV_GLB_PTP_INTERRUPTE_t               PTP_INTERRUPTE;                /* addr: 0x000003f8 */
  ca_uint32_t                              rsrvd192[3];
  NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT_t      CPUXRAM_RXPKT_INTERRUPT;       /* addr: 0x000003fc */
  ca_uint32_t                              rsrvd193[3];
  NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE_t     CPUXRAM_RXPKT_INTERRUPTE;      /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd194[3];
  NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT_t      CPUXRAM_TXPKT_INTERRUPT;       /* addr: 0x00000404 */
  ca_uint32_t                              rsrvd195[3];
  NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE_t     CPUXRAM_TXPKT_INTERRUPTE;      /* addr: 0x00000408 */
  ca_uint32_t                              rsrvd196[3];
  NI_HV_GLB_MC_INTERRUPT_t                 MC_INTERRUPT;                  /* addr: 0x0000040c */
  ca_uint32_t                              rsrvd197[3];
  NI_HV_GLB_MC_INTERRUPTE_t                MC_INTERRUPTE;                 /* addr: 0x00000410 */
  ca_uint32_t                              rsrvd198[3];
  NI_HV_GLB_INTERRUPT_t                    INTERRUPT;                     /* addr: 0x00000414 */
  ca_uint32_t                              rsrvd199[3];
  NI_HV_GLB_INTERRUPTE_t                   INTERRUPTE;                    /* addr: 0x00000418 */
  ca_uint32_t                              rsrvd200[3];
  NI_HV_GLB_ETH_TX_MISC_CFG_t              ETH_TX_MISC_CFG;               /* addr: 0x0000041c */
  ca_uint32_t                              rsrvd201[3];
  NI_HV_GLB_DEBUG_2_t                      DEBUG_2;                       /* addr: 0x00000420 */
  ca_uint32_t                              rsrvd202[3];
  NI_HV_GLB_DEBUG_3_t                      DEBUG_3;                       /* addr: 0x00000424 */
  ca_uint32_t                              rsrvd203[3];
  NI_HV_GLB_VENUS_MISC_CFG_t               VENUS_MISC_CFG;                /* addr: 0x00000428 */
  ca_uint32_t                              rsrvd204[3];
  NI_HV_GLB_CPU_TAG_CFG_t                  CPU_TAG_CFG;                   /* addr: 0x0000042c */
  ca_uint32_t                              rsrvd205[3];
  NI_HV_GLB_CPU_TAG0_PORT_ID1_t            CPU_TAG0_PORT_ID1;             /* addr: 0x00000430 */
  ca_uint32_t                              rsrvd206[3];
  NI_HV_GLB_CPU_TAG0_PORT_ID0_t            CPU_TAG0_PORT_ID0;             /* addr: 0x00000434 */
  ca_uint32_t                              rsrvd207[3];
  NI_HV_GLB_CPU_TAG0_PORT_MASK1_t          CPU_TAG0_PORT_MASK1;           /* addr: 0x00000438 */
  ca_uint32_t                              rsrvd208[3];
  NI_HV_GLB_CPU_TAG0_PORT_MASK0_t          CPU_TAG0_PORT_MASK0;           /* addr: 0x0000043c */
  ca_uint32_t                              rsrvd209[3];
  NI_HV_GLB_CPU_TAG0_HDR_A15_t             CPU_TAG0_HDR_A15;              /* addr: 0x00000440 */
  ca_uint32_t                              rsrvd210[3];
  NI_HV_GLB_CPU_TAG0_HDR_A14_t             CPU_TAG0_HDR_A14;              /* addr: 0x00000444 */
  ca_uint32_t                              rsrvd211[3];
  NI_HV_GLB_CPU_TAG0_HDR_A13_t             CPU_TAG0_HDR_A13;              /* addr: 0x00000448 */
  ca_uint32_t                              rsrvd212[3];
  NI_HV_GLB_CPU_TAG0_HDR_A12_t             CPU_TAG0_HDR_A12;              /* addr: 0x0000044c */
  ca_uint32_t                              rsrvd213[3];
  NI_HV_GLB_CPU_TAG0_HDR_A11_t             CPU_TAG0_HDR_A11;              /* addr: 0x00000450 */
  ca_uint32_t                              rsrvd214[3];
  NI_HV_GLB_CPU_TAG0_HDR_A10_t             CPU_TAG0_HDR_A10;              /* addr: 0x00000454 */
  ca_uint32_t                              rsrvd215[3];
  NI_HV_GLB_CPU_TAG0_HDR_A9_t              CPU_TAG0_HDR_A9;               /* addr: 0x00000458 */
  ca_uint32_t                              rsrvd216[3];
  NI_HV_GLB_CPU_TAG0_HDR_A8_t              CPU_TAG0_HDR_A8;               /* addr: 0x0000045c */
  ca_uint32_t                              rsrvd217[3];
  NI_HV_GLB_CPU_TAG0_HDR_A7_t              CPU_TAG0_HDR_A7;               /* addr: 0x00000460 */
  ca_uint32_t                              rsrvd218[3];
  NI_HV_GLB_CPU_TAG0_HDR_A6_t              CPU_TAG0_HDR_A6;               /* addr: 0x00000464 */
  ca_uint32_t                              rsrvd219[3];
  NI_HV_GLB_CPU_TAG0_HDR_A5_t              CPU_TAG0_HDR_A5;               /* addr: 0x00000468 */
  ca_uint32_t                              rsrvd220[3];
  NI_HV_GLB_CPU_TAG0_HDR_A4_t              CPU_TAG0_HDR_A4;               /* addr: 0x0000046c */
  ca_uint32_t                              rsrvd221[3];
  NI_HV_GLB_CPU_TAG0_HDR_A3_t              CPU_TAG0_HDR_A3;               /* addr: 0x00000470 */
  ca_uint32_t                              rsrvd222[3];
  NI_HV_GLB_CPU_TAG0_HDR_A2_t              CPU_TAG0_HDR_A2;               /* addr: 0x00000474 */
  ca_uint32_t                              rsrvd223[3];
  NI_HV_GLB_CPU_TAG0_HDR_A1_t              CPU_TAG0_HDR_A1;               /* addr: 0x00000478 */
  ca_uint32_t                              rsrvd224[3];
  NI_HV_GLB_CPU_TAG0_HDR_A0_t              CPU_TAG0_HDR_A0;               /* addr: 0x0000047c */
  ca_uint32_t                              rsrvd225[3];
  NI_HV_GLB_CPU_TAG1_PORT_ID1_t            CPU_TAG1_PORT_ID1;             /* addr: 0x00000480 */
  ca_uint32_t                              rsrvd226[3];
  NI_HV_GLB_CPU_TAG1_PORT_ID0_t            CPU_TAG1_PORT_ID0;             /* addr: 0x00000484 */
  ca_uint32_t                              rsrvd227[3];
  NI_HV_GLB_CPU_TAG1_PORT_MASK1_t          CPU_TAG1_PORT_MASK1;           /* addr: 0x00000488 */
  ca_uint32_t                              rsrvd228[3];
  NI_HV_GLB_CPU_TAG1_PORT_MASK0_t          CPU_TAG1_PORT_MASK0;           /* addr: 0x0000048c */
  ca_uint32_t                              rsrvd229[3];
  NI_HV_GLB_CPU_TAG1_HDR_A15_t             CPU_TAG1_HDR_A15;              /* addr: 0x00000490 */
  ca_uint32_t                              rsrvd230[3];
  NI_HV_GLB_CPU_TAG1_HDR_A14_t             CPU_TAG1_HDR_A14;              /* addr: 0x00000494 */
  ca_uint32_t                              rsrvd231[3];
  NI_HV_GLB_CPU_TAG1_HDR_A13_t             CPU_TAG1_HDR_A13;              /* addr: 0x00000498 */
  ca_uint32_t                              rsrvd232[3];
  NI_HV_GLB_CPU_TAG1_HDR_A12_t             CPU_TAG1_HDR_A12;              /* addr: 0x0000049c */
  ca_uint32_t                              rsrvd233[3];
  NI_HV_GLB_CPU_TAG1_HDR_A11_t             CPU_TAG1_HDR_A11;              /* addr: 0x000004a0 */
  ca_uint32_t                              rsrvd234[3];
  NI_HV_GLB_CPU_TAG1_HDR_A10_t             CPU_TAG1_HDR_A10;              /* addr: 0x000004a4 */
  ca_uint32_t                              rsrvd235[3];
  NI_HV_GLB_CPU_TAG1_HDR_A9_t              CPU_TAG1_HDR_A9;               /* addr: 0x000004a8 */
  ca_uint32_t                              rsrvd236[3];
  NI_HV_GLB_CPU_TAG1_HDR_A8_t              CPU_TAG1_HDR_A8;               /* addr: 0x000004ac */
  ca_uint32_t                              rsrvd237[3];
  NI_HV_GLB_CPU_TAG1_HDR_A7_t              CPU_TAG1_HDR_A7;               /* addr: 0x000004b0 */
  ca_uint32_t                              rsrvd238[3];
  NI_HV_GLB_CPU_TAG1_HDR_A6_t              CPU_TAG1_HDR_A6;               /* addr: 0x000004b4 */
  ca_uint32_t                              rsrvd239[3];
  NI_HV_GLB_CPU_TAG1_HDR_A5_t              CPU_TAG1_HDR_A5;               /* addr: 0x000004b8 */
  ca_uint32_t                              rsrvd240[3];
  NI_HV_GLB_CPU_TAG1_HDR_A4_t              CPU_TAG1_HDR_A4;               /* addr: 0x000004bc */
  ca_uint32_t                              rsrvd241[3];
  NI_HV_GLB_CPU_TAG1_HDR_A3_t              CPU_TAG1_HDR_A3;               /* addr: 0x000004c0 */
  ca_uint32_t                              rsrvd242[3];
  NI_HV_GLB_CPU_TAG1_HDR_A2_t              CPU_TAG1_HDR_A2;               /* addr: 0x000004c4 */
  ca_uint32_t                              rsrvd243[3];
  NI_HV_GLB_CPU_TAG1_HDR_A1_t              CPU_TAG1_HDR_A1;               /* addr: 0x000004c8 */
  ca_uint32_t                              rsrvd244[3];
  NI_HV_GLB_CPU_TAG1_HDR_A0_t              CPU_TAG1_HDR_A0;               /* addr: 0x000004cc */
  ca_uint32_t                              rsrvd245[3];
  NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG1_t CPU_TAG_P5_DEFAULT_HEADER_CFG1; /* addr: 0x000004d0 */
  ca_uint32_t                              rsrvd246[3];
  NI_HV_GLB_CPU_TAG_P5_DEFAULT_HEADER_CFG0_t CPU_TAG_P5_DEFAULT_HEADER_CFG0; /* addr: 0x000004d4 */
  ca_uint32_t                              rsrvd247[3];
  NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG1_t CPU_TAG_P6_DEFAULT_HEADER_CFG1; /* addr: 0x000004d8 */
  ca_uint32_t                              rsrvd248[3];
  NI_HV_GLB_CPU_TAG_P6_DEFAULT_HEADER_CFG0_t CPU_TAG_P6_DEFAULT_HEADER_CFG0; /* addr: 0x000004dc */
  ca_uint32_t                              rsrvd249[3];
  NI_HV_GLB_SRAMTEST_CFG11_t               SRAMTEST_CFG11;                /* addr: 0x000004e0 */
  ca_uint32_t                              rsrvd250[3];
  NI_HV_GLB_SRAMTEST_CFG10_t               SRAMTEST_CFG10;                /* addr: 0x000004e4 */
  ca_uint32_t                              rsrvd251[3];
  NI_HV_GLB_SRAMTEST_CFG22_t               SRAMTEST_CFG22;                /* addr: 0x000004e8 */
  ca_uint32_t                              rsrvd252[3];
  NI_HV_GLB_SRAMTEST_CFG21_t               SRAMTEST_CFG21;                /* addr: 0x000004ec */
  ca_uint32_t                              rsrvd253[3];
  NI_HV_GLB_SRAMTEST_CFG20_t               SRAMTEST_CFG20;                /* addr: 0x000004f0 */
  ca_uint32_t                              rsrvd254[3];
  NI_HV_GLB_SRAMTEST_CFG32_t               SRAMTEST_CFG32;                /* addr: 0x000004f4 */
  ca_uint32_t                              rsrvd255[3];
  NI_HV_GLB_SRAMTEST_CFG31_t               SRAMTEST_CFG31;                /* addr: 0x000004f8 */
  ca_uint32_t                              rsrvd256[3];
  NI_HV_GLB_SRAMTEST_CFG30_t               SRAMTEST_CFG30;                /* addr: 0x000004fc */
  ca_uint32_t                              rsrvd257[3];
  NI_HV_GLB_SRAMTEST_CFG4_t                SRAMTEST_CFG4;                 /* addr: 0x00000500 */
  ca_uint32_t                              rsrvd258[3];
  NI_HV_GLB_SRAMTEST_CFG5_t                SRAMTEST_CFG5;                 /* addr: 0x00000504 */
  ca_uint32_t                              rsrvd259[3];
  NI_HV_GLB_SRAMTEST_CFG61_t               SRAMTEST_CFG61;                /* addr: 0x00000508 */
  ca_uint32_t                              rsrvd260[3];
  NI_HV_GLB_SRAMTEST_CFG60_t               SRAMTEST_CFG60;                /* addr: 0x0000050c */
  ca_uint32_t                              rsrvd261[3];
  NI_HV_GLB_SRAMTEST_CFG7_t                SRAMTEST_CFG7;                 /* addr: 0x00000510 */
  ca_uint32_t                              rsrvd262[3];
  NI_HV_GLB_SRAMTEST_CFG8_t                SRAMTEST_CFG8;                 /* addr: 0x00000514 */
  ca_uint32_t                              rsrvd263[3];
  NI_HV_GLB_SRAMLS_CFG0_t                  SRAMLS_CFG0;                   /* addr: 0x00000518 */
  ca_uint32_t                              rsrvd264[3];
  NI_HV_GLB_SRAMLS_CFG1_t                  SRAMLS_CFG1;                   /* addr: 0x0000051c */
  ca_uint32_t                              rsrvd265[3];
  NI_HV_GLB_CLK_THROTTLE_CNTL_t            CLK_THROTTLE_CNTL;             /* addr: 0x00000520 */
  ca_uint32_t                              rsrvd266[3];
  NI_HV_GLB_CLK_LUT_0_t                    CLK_LUT_0;                     /* addr: 0x00000524 */
  ca_uint32_t                              rsrvd267[3];
  NI_HV_GLB_CLK_LUT_1_t                    CLK_LUT_1;                     /* addr: 0x00000528 */
  ca_uint32_t                              rsrvd268[3];
  NI_HV_GLB_CLK_LUT_2_t                    CLK_LUT_2;                     /* addr: 0x0000052c */
  ca_uint32_t                              rsrvd269[3];
  NI_HV_GLB_CLK_LUT_3_t                    CLK_LUT_3;                     /* addr: 0x00000530 */
  ca_uint32_t                              rsrvd270[3];
  NI_HV_GLB_CLK_LUT_4_t                    CLK_LUT_4;                     /* addr: 0x00000534 */
  ca_uint32_t                              rsrvd271[3];
  NI_HV_GLB_CLK_LUT_5_t                    CLK_LUT_5;                     /* addr: 0x00000538 */
  ca_uint32_t                              rsrvd272[3];
  NI_HV_GLB_CLK_LUT_6_t                    CLK_LUT_6;                     /* addr: 0x0000053c */
  ca_uint32_t                              rsrvd273[3];
  NI_HV_GLB_CLK_DIV_0_t                    CLK_DIV_0;                     /* addr: 0x00000540 */
  ca_uint32_t                              rsrvd274[3];
  NI_HV_GLB_CLK_DIV_1_t                    CLK_DIV_1;                     /* addr: 0x00000544 */
  ca_uint32_t                              rsrvd275[3];
  NI_HV_GLB_CLK_MAX_TRAP_t                 CLK_MAX_TRAP;                  /* addr: 0x00000548 */
  ca_uint32_t                              rsrvd276[3];
  NI_HV_GLB_C10_DEC_IN_RATE_CFG_t          C10_DEC_IN_RATE_CFG;           /* addr: 0x0000054c */
  ca_uint32_t                              rsrvd277[3];
  NI_HV_GLB_VMAC_CTRL_t                    VMAC_CTRL;                     /* addr: 0x00000550 */
  ca_uint32_t                              rsrvd278[3];
  NI_HV_GLB_VMAC_RX_CTRL_t                 VMAC_RX_CTRL;                  /* addr: 0x00000554 */
  ca_uint32_t                              rsrvd279[3];
  NI_HV_GLB_VMAC_RX_IF_t                   VMAC_RX_IF;                    /* addr: 0x00000558 */
  ca_uint32_t                              rsrvd280[3];
  NI_HV_GLB_VMAC_RX_DATA2_t                VMAC_RX_DATA2;                 /* addr: 0x0000055c */
  ca_uint32_t                              rsrvd281[3];
  NI_HV_GLB_VMAC_RX_DATA1_t                VMAC_RX_DATA1;                 /* addr: 0x00000560 */
  ca_uint32_t                              rsrvd282[3];
  NI_HV_GLB_VMAC_RX_DATA0_t                VMAC_RX_DATA0;                 /* addr: 0x00000564 */
  ca_uint32_t                              rsrvd283[3];
  NI_HV_GLB_VMAC_TX_CTRL_t                 VMAC_TX_CTRL;                  /* addr: 0x00000568 */
  ca_uint32_t                              rsrvd284[3];
  NI_HV_GLB_VMAC_TX_IF_t                   VMAC_TX_IF;                    /* addr: 0x0000056c */
  ca_uint32_t                              rsrvd285[3];
  NI_HV_GLB_VMAC_TX_DATA3_t                VMAC_TX_DATA3;                 /* addr: 0x00000570 */
  ca_uint32_t                              rsrvd286[3];
  NI_HV_GLB_VMAC_TX_DATA2_t                VMAC_TX_DATA2;                 /* addr: 0x00000574 */
  ca_uint32_t                              rsrvd287[3];
  NI_HV_GLB_VMAC_TX_DATA1_t                VMAC_TX_DATA1;                 /* addr: 0x00000578 */
  ca_uint32_t                              rsrvd288[3];
  NI_HV_GLB_VMAC_TX_DATA0_t                VMAC_TX_DATA0;                 /* addr: 0x0000057c */
  ca_uint32_t                              rsrvd289[3];
  NI_HV_GLB_PORT_FNL_STS_1_t               PORT_FNL_STS_1;                /* addr: 0x00000580 */
  ca_uint32_t                              rsrvd290[3];
  NI_HV_GLB_PORT_FNL_STS_0_t               PORT_FNL_STS_0;                /* addr: 0x00000584 */
  ca_uint32_t                              rsrvd291[3];
  NI_HV_GLB_DBG_CTL_t                      DBG_CTL;                       /* addr: 0x00000588 */
  ca_uint32_t                              rsrvd292[3];
  NI_HV_GLB_DBG_DATA_t                     DBG_DATA;                      /* addr: 0x0000058c */
} APB0_NI_HV_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * PT[0..5]
 */

#define NI_HV_PT_PORT_STATIC_CFG                 0xf430a5c0
#define NI_HV_PT_PORT_STATIC_CFG_dft             0x00000203

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_cfg              :  4 ; /* bits 3:0 */
    ca_uint32_t phy_mode             :  1 ; /* bits 4:4 */
    ca_uint32_t rmii_clksrc          :  1 ; /* bits 5:5 */
    ca_uint32_t inv_clk_in           :  1 ; /* bits 6:6 */
    ca_uint32_t inv_clk_out          :  1 ; /* bits 7:7 */
    ca_uint32_t inv_rxclk_out        :  1 ; /* bits 8:8 */
    ca_uint32_t tx_use_gefifo        :  1 ; /* bits 9:9 */
    ca_uint32_t smii_tx_stat         :  1 ; /* bits 10:10 */
    ca_uint32_t crs_polarity         :  1 ; /* bits 11:11 */
    ca_uint32_t lpbk_mode            :  2 ; /* bits 13:12 */
    ca_uint32_t gmii_like_half_duplex_en :  1 ; /* bits 14:14 */
    ca_uint32_t sup_tx_to_rx_lpbk_data :  1 ; /* bits 15:15 */
    ca_uint32_t cpu_tag_rx_en        :  1 ; /* bits 16:16 */
    ca_uint32_t cpu_tag_tx_en        :  1 ; /* bits 17:17 */
    ca_uint32_t cpu_tag_cfg_sel      :  1 ; /* bits 18:18 */
    ca_uint32_t giga_lite            :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t mac_addr6            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PORT_STATIC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     int_cfg_GMII_GE                               0x0
#define     int_cfg_MII                                   0x1
#define     int_cfg_RGMII_GE                              0x2
#define     int_cfg_RGMII_FE                              0x3

#define NI_HV_PT_PORT_GLB_CFG                    0xf430a5c4
#define NI_HV_PT_PORT_GLB_CFG_dft                0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t speed                :  1 ; /* bits 0:0 */
    ca_uint32_t duplex               :  1 ; /* bits 1:1 */
    ca_uint32_t link_status          :  1 ; /* bits 2:2 */
    ca_uint32_t link_stat_mask       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t power_dwn_rx         :  1 ; /* bits 11:11 */
    ca_uint32_t power_dwn_tx         :  1 ; /* bits 12:12 */
    ca_uint32_t tx_intf_lp_time      :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PORT_GLB_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_RXMAC_CFG                       0xf430a5c8
#define NI_HV_PT_RXMAC_CFG_dft                   0x00001101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_en                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t rx_flow_disable      :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t rx_flow_to_tx_en     :  1 ; /* bits 12:12 */
    ca_uint32_t rx_pfc_disable       :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd3               : 15 ;
    ca_uint32_t send_pg_data         :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_RXMAC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_RXMAC_WOL_CFG                   0xf430a5cc
#define NI_HV_PT_RXMAC_WOL_CFG_dft               0x00000f00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wol_pkt_det_en       :  1 ; /* bits 0:0 */
    ca_uint32_t wol_chk_da           :  2 ; /* bits 2:1 */
    ca_uint32_t wol_ign_err          :  1 ; /* bits 3:3 */
    ca_uint32_t wol_secure_on        :  1 ; /* bits 4:4 */
    ca_uint32_t wol_passwd_cnt       :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t wol_mac_adr_cnt      :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t wol_passwd6          :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t wol_wake_on_any_pkt  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_RXMAC_WOL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_MAC_STATUS                      0xf430a5d0
#define NI_HV_PT_MAC_STATUS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rcv_speed            :  2 ; /* bits 1:0 */
    ca_uint32_t rcv_duplex           :  1 ; /* bits 2:2 */
    ca_uint32_t rcv_lnk_stat         :  1 ; /* bits 3:3 */
    ca_uint32_t rx_lpi_detect        :  1 ; /* bits 4:4 */
    ca_uint32_t lpi_assert           :  1 ; /* bits 5:5 */
    ca_uint32_t lpi_mac_dis          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_MAC_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_TXMAC_CFG                       0xf430a5d4
#define NI_HV_PT_TXMAC_CFG_dft                   0x04059901

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_en                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t mac_crc_calc_en      :  1 ; /* bits 8:8 */
    ca_uint32_t tx_ipg_sel           :  3 ; /* bits 11:9 */
    ca_uint32_t tx_flow_disable      :  1 ; /* bits 12:12 */
    ca_uint32_t tx_drain             :  1 ; /* bits 13:13 */
    ca_uint32_t tx_pfc_disable       :  1 ; /* bits 14:14 */
    ca_uint32_t tx_pau_sel           :  2 ; /* bits 16:15 */
    ca_uint32_t force_xon_stream     :  1 ; /* bits 17:17 */
    ca_uint32_t tx_bkprs_en          :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               :  7 ;
    ca_uint32_t tx_auto_xon          :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t pass_thru_hdr        :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_TXMAC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0      0xf430a5d8
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0_dft  0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txpfc_time_0         : 16 ; /* bits 15:0 */
    ca_uint32_t txpfc_time_1         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1      0xf430a5dc
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1_dft  0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txpfc_time_2         : 16 ; /* bits 15:0 */
    ca_uint32_t txpfc_time_3         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2      0xf430a5e0
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2_dft  0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txpfc_time_4         : 16 ; /* bits 15:0 */
    ca_uint32_t txpfc_time_5         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3      0xf430a5e4
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3_dft  0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txpfc_time_6         : 16 ; /* bits 15:0 */
    ca_uint32_t txpfc_time_7         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_EEE_LPI_CFG0                    0xf430a5e8
#define NI_HV_PT_EEE_LPI_CFG0_dft                0x01387000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_eee_enable        :  1 ; /* bits 0:0 */
    ca_uint32_t cpu_lpi_deassert     :  1 ; /* bits 1:1 */
    ca_uint32_t stop_txclk_on_lpi    :  1 ; /* bits 2:2 */
    ca_uint32_t lpi_data_mode        :  1 ; /* bits 3:3 */
    ca_uint32_t lpi_mode_te          :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t txfifo_empty_cnt     : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_EEE_LPI_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_EEE_LPI_CFG1                    0xf430a5ec
#define NI_HV_PT_EEE_LPI_CFG1_dft                0x0000071b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lpi_min_assert_cnt   : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_EEE_LPI_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_EEE_LPI_CFG2                    0xf430a5f0
#define NI_HV_PT_EEE_LPI_CFG2_dft                0x000000a4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lpi_min_wakeup_cnt   : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_EEE_LPI_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_EEE_LPI_CFG3                    0xf430a5f4
#define NI_HV_PT_EEE_LPI_CFG3_dft                0x0f000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lpi_mac_dis_wait_cnt : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t stop_txclk_en_cnt    : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_EEE_LPI_CFG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_RX_CNTRL_CFG                    0xf430a5f8
#define NI_HV_PT_RX_CNTRL_CFG_dft                0x08000400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ff_overrun_drop_dis  :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t crc_drop_dis         :  1 ; /* bits 4:4 */
    ca_uint32_t ovr_drop_dis         :  1 ; /* bits 5:5 */
    ca_uint32_t runt_drop_dis        :  1 ; /* bits 6:6 */
    ca_uint32_t flow_drop_dis        :  1 ; /* bits 7:7 */
    ca_uint32_t ukopcode_drop_dis    :  1 ; /* bits 8:8 */
    ca_uint32_t oam_drop_dis         :  1 ; /* bits 9:9 */
    ca_uint32_t linkstat_drop_dis    :  1 ; /* bits 10:10 */
    ca_uint32_t pfc_drop_dis         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t rxctrl_byp_dpid      :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t rxctrl_byp_cos       :  3 ; /* bits 26:24 */
    ca_uint32_t rxctrl_byp_dpq       :  1 ; /* bits 27:27 */
    ca_uint32_t rxctrl_byp_en        :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t rxctrl_byp_mir       :  1 ; /* bits 30:30 */
    ca_uint32_t rxctrl_byp_ndrp      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_RX_CNTRL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_TXFIFO_THLD_CFG                 0xf430a5fc
#define NI_HV_PT_TXFIFO_THLD_CFG_dft             0x00280064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t high_thld            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t low_thld             : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_TXFIFO_THLD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PG_CFG0                         0xf430a600
#define NI_HV_PT_PG_CFG0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pg_da6               :  8 ; /* bits 7:0 */
    ca_uint32_t pg_sa6               :  8 ; /* bits 15:8 */
    ca_uint32_t pg_type              : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PG_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PG_CFG1                         0xf430a604
#define NI_HV_PT_PG_CFG1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pg_vlan1             : 16 ; /* bits 15:0 */
    ca_uint32_t pg_vlan2             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PG_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PG_CNTRL_CFG                    0xf430a608
#define NI_HV_PT_PG_CNTRL_CFG_dft                0x08018000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pg_en                :  1 ; /* bits 0:0 */
    ca_uint32_t pg_fixedcount        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t pg_fixedlen          :  1 ; /* bits 4:4 */
    ca_uint32_t pg_insvlan2          :  1 ; /* bits 5:5 */
    ca_uint32_t pg_insvlan1          :  1 ; /* bits 6:6 */
    ca_uint32_t pg_instype           :  1 ; /* bits 7:7 */
    ca_uint32_t pg_insseqnum         :  1 ; /* bits 8:8 */
    ca_uint32_t pg_invpat            :  1 ; /* bits 9:9 */
    ca_uint32_t pg_insfixpattern     :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t pg_linerate          :  9 ; /* bits 23:15 */
    ca_uint32_t pg_ipg               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PG_CNTRL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PC_CFG1                         0xf430a60c
#define NI_HV_PT_PC_CFG1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_da6               :  8 ; /* bits 7:0 */
    ca_uint32_t pc_sa6               :  8 ; /* bits 15:8 */
    ca_uint32_t pc_type              : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PC_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PC_CFG2                         0xf430a610
#define NI_HV_PT_PC_CFG2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_vlan1             : 16 ; /* bits 15:0 */
    ca_uint32_t pc_vlan2             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PC_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PC_CNTRL                        0xf430a614
#define NI_HV_PT_PC_CNTRL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_en                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t pc_fixedlen          :  1 ; /* bits 4:4 */
    ca_uint32_t pc_expvlan2          :  1 ; /* bits 5:5 */
    ca_uint32_t pc_expvlan1          :  1 ; /* bits 6:6 */
    ca_uint32_t pc_exptype           :  1 ; /* bits 7:7 */
    ca_uint32_t pc_expseqnum         :  1 ; /* bits 8:8 */
    ca_uint32_t pc_invpat            :  1 ; /* bits 9:9 */
    ca_uint32_t pc_expfixpattern     :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PC_CNTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_PC_STAT                         0xf430a618
#define NI_HV_PT_PC_STAT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pc_dchkstatus        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_PC_STAT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_DEBUG_1                         0xf430a61c
#define NI_HV_PT_DEBUG_1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hd_backoff_cnt       : 10 ; /* bits 9:0 */
    ca_uint32_t hd_backoff_dbg       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_DEBUG_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_TX_DRAINCNT                     0xf430a620
#define NI_HV_PT_TX_DRAINCNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CNT                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_TX_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG1     0xf430a624
#define NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG1_dft 0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t default_hdr_a1       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG0     0xf430a628
#define NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG0_dft 0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t default_hdr_a0       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_SPARE                           0xf430a62c
#define NI_HV_PT_SPARE_dft                       0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VALUE                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_PT_SPARESAMPLE                     0xf430a630
#define NI_HV_PT_SPARESAMPLE_dft                 0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VALUE                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_PT_SPARESAMPLE_t;
#endif /* !__ASSEMBLER__ */


#define APB0_NI_HV_PT_STRIDE                     144
#define APB0_NI_HV_PT_COUNT                      6



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PT */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_PT_PORT_STATIC_CFG_t               PORT_STATIC_CFG;               /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_PT_PORT_GLB_CFG_t                  PORT_GLB_CFG;                  /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_PT_RXMAC_CFG_t                     RXMAC_CFG;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_PT_RXMAC_WOL_CFG_t                 RXMAC_WOL_CFG;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_PT_MAC_STATUS_t                    MAC_STATUS;                    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_PT_TXMAC_CFG_t                     TXMAC_CFG;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0_t    ETH_TXMAC_PAUSE_TIMER_CFG0;    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1_t    ETH_TXMAC_PAUSE_TIMER_CFG1;    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2_t    ETH_TXMAC_PAUSE_TIMER_CFG2;    /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3_t    ETH_TXMAC_PAUSE_TIMER_CFG3;    /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_PT_EEE_LPI_CFG0_t                  EEE_LPI_CFG0;                  /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_PT_EEE_LPI_CFG1_t                  EEE_LPI_CFG1;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_PT_EEE_LPI_CFG2_t                  EEE_LPI_CFG2;                  /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  NI_HV_PT_EEE_LPI_CFG3_t                  EEE_LPI_CFG3;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  NI_HV_PT_RX_CNTRL_CFG_t                  RX_CNTRL_CFG;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  NI_HV_PT_TXFIFO_THLD_CFG_t               TXFIFO_THLD_CFG;               /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  NI_HV_PT_PG_CFG0_t                       PG_CFG0;                       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  NI_HV_PT_PG_CFG1_t                       PG_CFG1;                       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  NI_HV_PT_PG_CNTRL_CFG_t                  PG_CNTRL_CFG;                  /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  NI_HV_PT_PC_CFG1_t                       PC_CFG1;                       /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  NI_HV_PT_PC_CFG2_t                       PC_CFG2;                       /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  NI_HV_PT_PC_CNTRL_t                      PC_CNTRL;                      /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  NI_HV_PT_PC_STAT_t                       PC_STAT;                       /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  NI_HV_PT_DEBUG_1_t                       DEBUG_1;                       /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  NI_HV_PT_TX_DRAINCNT_t                   TX_DRAINCNT;                   /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG1_t   CPU_TAG_DEFAULT_HEADER_CFG1;   /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  NI_HV_PT_CPU_TAG_DEFAULT_HEADER_CFG0_t   CPU_TAG_DEFAULT_HEADER_CFG0;   /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  NI_HV_PT_SPARE_t                         SPARE;                         /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  NI_HV_PT_SPARESAMPLE_t                   SPARESAMPLE;                   /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[31];
} APB0_NI_HV_PT_t;
#endif /* !__ASSEMBLER__ */


/*
 * INTPT[0..3]
 */

#define NI_HV_INTPT_RX_CNTRL_CFG                 0xf430a920
#define NI_HV_INTPT_RX_CNTRL_CFG_dft             0x00028000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t rx_rate              :  8 ; /* bits 21:14 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_RX_CNTRL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT       0xf430a924
#define NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_missing_eop_pkt_cnt : 16 ; /* bits 15:0 */
    ca_uint32_t rx_missing_sop_pkt_cnt : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_RX_SHORT_ERR_CNT             0xf430a928
#define NI_HV_INTPT_RX_SHORT_ERR_CNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_err_pkt_cnt       : 16 ; /* bits 15:0 */
    ca_uint32_t rx_short_pkt_cnt     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_RX_SHORT_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_RX_PKT_CNT                   0xf430a92c
#define NI_HV_INTPT_RX_PKT_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_pkt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_RX_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_RX_PKT_BYTE_HI_CNT           0xf430a930
#define NI_HV_INTPT_RX_PKT_BYTE_HI_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_pkt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_RX_PKT_BYTE_HI_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_RX_PKT_BYTE_LO_CNT           0xf430a934
#define NI_HV_INTPT_RX_PKT_BYTE_LO_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_pkt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_RX_PKT_BYTE_LO_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT       0xf430a938
#define NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_missing_eop_pkt_cnt : 16 ; /* bits 15:0 */
    ca_uint32_t tx_missing_sop_pkt_cnt : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_TX_SHORT_ERR_CNT             0xf430a93c
#define NI_HV_INTPT_TX_SHORT_ERR_CNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_err_pkt_cnt       : 16 ; /* bits 15:0 */
    ca_uint32_t tx_short_pkt_cnt     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_TX_SHORT_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_TX_PKT_CNT                   0xf430a940
#define NI_HV_INTPT_TX_PKT_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pkt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_TX_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_TX_PKT_BYTE_HI_CNT           0xf430a944
#define NI_HV_INTPT_TX_PKT_BYTE_HI_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pkt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_TX_PKT_BYTE_HI_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_INTPT_TX_PKT_BYTE_LO_CNT           0xf430a948
#define NI_HV_INTPT_TX_PKT_BYTE_LO_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pkt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_INTPT_TX_PKT_BYTE_LO_CNT_t;
#endif /* !__ASSEMBLER__ */


#define APB0_NI_HV_INTPT_STRIDE                  64
#define APB0_NI_HV_INTPT_COUNT                   4



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* INTPT */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_INTPT_RX_CNTRL_CFG_t               RX_CNTRL_CFG;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT_t     RX_MISSING_SOP_EOP_CNT;        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_INTPT_RX_SHORT_ERR_CNT_t           RX_SHORT_ERR_CNT;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_INTPT_RX_PKT_CNT_t                 RX_PKT_CNT;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_INTPT_RX_PKT_BYTE_HI_CNT_t         RX_PKT_BYTE_HI_CNT;            /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_INTPT_RX_PKT_BYTE_LO_CNT_t         RX_PKT_BYTE_LO_CNT;            /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT_t     TX_MISSING_SOP_EOP_CNT;        /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_INTPT_TX_SHORT_ERR_CNT_t           TX_SHORT_ERR_CNT;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_INTPT_TX_PKT_CNT_t                 TX_PKT_CNT;                    /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_INTPT_TX_PKT_BYTE_HI_CNT_t         TX_PKT_BYTE_HI_CNT;            /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_INTPT_TX_PKT_BYTE_LO_CNT_t         TX_PKT_BYTE_LO_CNT;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[23];
} APB0_NI_HV_INTPT_t;
#endif /* !__ASSEMBLER__ */


/*
 * XRAM
 */

#define NI_HV_XRAM_CPUXRAM_ADRCFG_RX             0xf430aa20
#define NI_HV_XRAM_CPUXRAM_ADRCFG_RX_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_base_addr         : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t rx_top_addr          : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_ADRCFG_RX_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0           0xf430aa24
#define NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_base_addr         : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t tx_top_addr          : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_CFG                   0xf430aa28
#define NI_HV_XRAM_CPUXRAM_CFG_dft               0x0000c001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_0_cpu_pkt_dis     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t tx_0_cpu_pkt_dis     :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rx_x_drop_err_pkt    :  1 ; /* bits 11:11 */
    ca_uint32_t xram_mgmt_dis_drop_ovsz_pkt :  1 ; /* bits 12:12 */
    ca_uint32_t xram_mgmt_term_large_pkt :  1 ; /* bits 13:13 */
    ca_uint32_t xram_mgmt_promisc_mode :  2 ; /* bits 15:14 */
    ca_uint32_t xram_cntr_debug_mode :  1 ; /* bits 16:16 */
    ca_uint32_t xram_cntr_op_code    :  2 ; /* bits 18:17 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t xram_rx_mgmtfifo_srst :  1 ; /* bits 21:21 */
    ca_uint32_t xram_dma_fifo_srst   :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd4               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0          0xf430aa2c
#define NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_rd_ptr           : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0          0xf430aa30
#define NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_wr_ptr           : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t int_colsc_thresh_reached :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0       0xf430aa34
#define NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_colsc_dly_time   : 20 ; /* bits 19:0 */
    ca_uint32_t int_colsc_pkt        : 10 ; /* bits 29:20 */
    ca_uint32_t int_colsc_first_en   :  1 ; /* bits 30:30 */
    ca_uint32_t int_colsc_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_PKT_CNT_0             0xf430aa38
#define NI_HV_XRAM_CPUXRAM_PKT_CNT_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_to_xram          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_PKT_CNT_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_BYT_CNT_0             0xf430aa3c
#define NI_HV_XRAM_CPUXRAM_BYT_CNT_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t byt_to_xram          : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_BYT_CNT_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0         0xf430aa40
#define NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_drop_err         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0          0xf430aa44
#define NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_wr_ptr           : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0         0xf430aa48
#define NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_rd_ptr           : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_DMA_PKT_CNT                   0xf430aa4c
#define NI_HV_XRAM_DMA_PKT_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_pkt_to_cpu       : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_DMA_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XRAM_DMA_BYTE_CNT                  0xf430aa50
#define NI_HV_XRAM_DMA_BYTE_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_byte_to_cpu      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XRAM_DMA_BYTE_CNT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XRAM */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XRAM_CPUXRAM_ADRCFG_RX_t           CPUXRAM_ADRCFG_RX;             /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0_t         CPUXRAM_ADRCFG_TX_0;           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XRAM_CPUXRAM_CFG_t                 CPUXRAM_CFG;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0_t        CPUXRAM_CPU_CFG_RX_0;          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0_t        CPUXRAM_CPU_STA_RX_0;          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0_t     CPUXRAM_INT_COLSC_CFG_0;       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XRAM_CPUXRAM_PKT_CNT_0_t           CPUXRAM_PKT_CNT_0;             /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_XRAM_CPUXRAM_BYT_CNT_0_t           CPUXRAM_BYT_CNT_0;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0_t       CPUXRAM_PKT_ERR_DRP_0;         /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0_t        CPUXRAM_CPU_CFG_TX_0;          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0_t       CPUXRAM_CPU_STAT_TX_0;         /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_XRAM_DMA_PKT_CNT_t                 DMA_PKT_CNT;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_XRAM_DMA_BYTE_CNT_t                DMA_BYTE_CNT;                  /* addr: 0x00000030 */
} APB0_NI_HV_XRAM_t;
#endif /* !__ASSEMBLER__ */


/*
 * MCE
 */

#define NI_HV_MCE_CTL_REG                        0xf430aa60
#define NI_HV_MCE_CTL_REG_dft                    0x0002f0ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ff_thrshd            : 10 ; /* bits 9:0 */
    ca_uint32_t min_pktsize          :  6 ; /* bits 15:10 */
    ca_uint32_t crc_err_drop_en      :  1 ; /* bits 16:16 */
    ca_uint32_t cp_lspid_to_pol_id_en :  1 ; /* bits 17:17 */
    ca_uint32_t buf_flush_en         :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_CTL_REG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_INDX_LKUP_ACCESS               0xf430aa64
#define NI_HV_MCE_INDX_LKUP_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_INDX_LKUP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_INDX_LKUP_DATA1                0xf430aa68
#define NI_HV_MCE_INDX_LKUP_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mc_vec               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_INDX_LKUP_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_INDX_LKUP_DATA0                0xf430aa6c
#define NI_HV_MCE_INDX_LKUP_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mc_vec               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_INDX_LKUP_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_ZERO_BITMAP_DROP_CNT           0xf430aa70
#define NI_HV_MCE_ZERO_BITMAP_DROP_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_ZERO_BITMAP_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_INGRESS_CNT                    0xf430aa74
#define NI_HV_MCE_INGRESS_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_INGRESS_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_EGRESS_CNT                     0xf430aa78
#define NI_HV_MCE_EGRESS_CNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_EGRESS_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_LAST_IN_HDR2                   0xf430aa7c
#define NI_HV_MCE_LAST_IN_HDR2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_LAST_IN_HDR2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_LAST_IN_HDR1                   0xf430aa80
#define NI_HV_MCE_LAST_IN_HDR1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_LAST_IN_HDR1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_LAST_IN_HDR0                   0xf430aa84
#define NI_HV_MCE_LAST_IN_HDR0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_LAST_IN_HDR0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_LAST_OUT_HDR2                  0xf430aa88
#define NI_HV_MCE_LAST_OUT_HDR2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_LAST_OUT_HDR2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_LAST_OUT_HDR1                  0xf430aa8c
#define NI_HV_MCE_LAST_OUT_HDR1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_LAST_OUT_HDR1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_LAST_OUT_HDR0                  0xf430aa90
#define NI_HV_MCE_LAST_OUT_HDR0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_LAST_OUT_HDR0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_ERROR_STS                      0xf430aa94
#define NI_HV_MCE_ERROR_STS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_ERROR_STS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_ERROR_STS1                     0xf430aa98
#define NI_HV_MCE_ERROR_STS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_ERROR_STS1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_MCE_ERROR_STS2                     0xf430aa9c
#define NI_HV_MCE_ERROR_STS2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flag                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_MCE_ERROR_STS2_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MCE */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_MCE_CTL_REG_t                      CTL_REG;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_MCE_INDX_LKUP_ACCESS_t             INDX_LKUP_ACCESS;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_MCE_INDX_LKUP_DATA1_t              INDX_LKUP_DATA1;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_MCE_INDX_LKUP_DATA0_t              INDX_LKUP_DATA0;               /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_MCE_ZERO_BITMAP_DROP_CNT_t         ZERO_BITMAP_DROP_CNT;          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_MCE_INGRESS_CNT_t                  INGRESS_CNT;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_MCE_EGRESS_CNT_t                   EGRESS_CNT;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_MCE_LAST_IN_HDR2_t                 LAST_IN_HDR2;                  /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_MCE_LAST_IN_HDR1_t                 LAST_IN_HDR1;                  /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_MCE_LAST_IN_HDR0_t                 LAST_IN_HDR0;                  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_MCE_LAST_OUT_HDR2_t                LAST_OUT_HDR2;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_MCE_LAST_OUT_HDR1_t                LAST_OUT_HDR1;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_MCE_LAST_OUT_HDR0_t                LAST_OUT_HDR0;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  NI_HV_MCE_ERROR_STS_t                    ERROR_STS;                     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  NI_HV_MCE_ERROR_STS1_t                   ERROR_STS1;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  NI_HV_MCE_ERROR_STS2_t                   ERROR_STS2;                    /* addr: 0x0000003c */
} APB0_NI_HV_MCE_t;
#endif /* !__ASSEMBLER__ */


/*
 * XAUI
 */

/*
 * XGXS_TOP
 */

/*
 * xgxs_rx
 */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0     0xf430af00
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_rx_mode         :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t xgxs_rx_random_6     :  1 ; /* bits 3:3 */
    ca_uint32_t xgxs_rx_err_inj      :  4 ; /* bits 7:4 */
    ca_uint32_t xgxs_fpat_sel        :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0_t;
#endif /* !__ASSEMBLER__ */

#define     xgxs_fpat_sel_Register                        0x0
#define     xgxs_fpat_sel_High                            0x1
#define     xgxs_fpat_sel_Low                             0x2
#define     xgxs_fpat_sel_Mixed                           0x3
#define     xgxs_rx_mode_Data                             0x0
#define     xgxs_rx_mode_Frequency                        0x1
#define     xgxs_rx_mode_Random                           0x2
#define     xgxs_rx_mode_Jitter                           0x3

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1     0xf430af04
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_0          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2     0xf430af08
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_1          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3     0xf430af0c
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_2          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4     0xf430af10
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_3          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5     0xf430af14
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_rx_phase        :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t xgxs_rx_fzero        :  4 ; /* bits 11:8 */
    ca_uint32_t xgxs_rx_fone         :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT   0xf430af18
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ErrorPktSat          :  1 ; /* bits 1:1 */
    ca_uint32_t GoodPktSat           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT 0xf430af1c
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ErrorPktI            :  1 ; /* bits 0:0 */
    ca_uint32_t ErrorPktSatI         :  1 ; /* bits 1:1 */
    ca_uint32_t GoodPktSatI          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE 0xf430af20
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ErrorPkte            :  1 ; /* bits 0:0 */
    ca_uint32_t ErrorPktSate         :  1 ; /* bits 1:1 */
    ca_uint32_t GoodPktSate          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt      0xf430af24
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t good_pkt_rx          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt       0xf430af28
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_pkt_rx           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH      0xf430af2c
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scratch              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgxs_rx */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0_t   RxCntrl0;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1_t   RxCntrl1;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2_t   RxCntrl2;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3_t   RxCntrl3;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4_t   RxCntrl4;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5_t   RxCntrl5;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT_t RX_INTSTAT;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT_t RX_INTERRUPT;                  /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE_t RX_INTENABLE;                  /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt_t    GoodPkt;                       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt_t     ErrPkt;                        /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH_t    SCRATCH;                       /* addr: 0x0000002c */
} APB0_NI_HV_XAUI_XGXS_TOP_XGXS_RX_t;
#endif /* !__ASSEMBLER__ */


/*
 * xgxs_tx
 */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0     0xf430af40
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_tx_mode         :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t xgxs_lf_enable       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t xgxs_ddsa_enable     :  1 ; /* bits 7:7 */
    ca_uint32_t xgxs_fpat_sel        :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd3               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0_t;
#endif /* !__ASSEMBLER__ */

#define     xgxs_tx_mode_Data                             0x0
#define     xgxs_tx_mode_Frequency                        0x1
#define     xgxs_tx_mode_Random                           0x2
#define     xgxs_tx_mode_Jitter                           0x3

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1     0xf430af44
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_0          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2     0xf430af48
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_1          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3     0xf430af4c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_2          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4     0xf430af50
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_fpat_3          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5     0xf430af54
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5_dft 0x00000a00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxaui_cgalign_ena_mode :  2 ; /* bits 1:0 */
    ca_uint32_t rxaui_a_column_ena_mode :  2 ; /* bits 3:2 */
    ca_uint32_t rxaui_a_column_verify_mode :  1 ; /* bits 4:4 */
    ca_uint32_t rxaui_lane_swap_01   :  1 ; /* bits 5:5 */
    ca_uint32_t rxaui_lane_swap_23   :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxaui_comma_thresh   :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT   0xf430af58
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ErrorPktSat          :  1 ; /* bits 1:1 */
    ca_uint32_t GoodPktSat           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t InvCodeSat           :  1 ; /* bits 4:4 */
    ca_uint32_t xgxs_comma_found_0   :  1 ; /* bits 5:5 */
    ca_uint32_t PatErrSat            :  1 ; /* bits 6:6 */
    ca_uint32_t xgxs_comma_found_1   :  1 ; /* bits 7:7 */
    ca_uint32_t SyncDet0             :  1 ; /* bits 8:8 */
    ca_uint32_t SyncDet1             :  1 ; /* bits 9:9 */
    ca_uint32_t SyncDet2             :  1 ; /* bits 10:10 */
    ca_uint32_t SyncDet3             :  1 ; /* bits 11:11 */
    ca_uint32_t xgxs_align_det       :  1 ; /* bits 12:12 */
    ca_uint32_t xgxs_cpat_lock       :  1 ; /* bits 13:13 */
    ca_uint32_t xgxs_A_column_found_0 :  1 ; /* bits 14:14 */
    ca_uint32_t xgxs_A_column_found_1 :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd3               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT 0xf430af5c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ErrorPktI            :  1 ; /* bits 0:0 */
    ca_uint32_t ErrorPktSatI         :  1 ; /* bits 1:1 */
    ca_uint32_t GoodPktSatI          :  1 ; /* bits 2:2 */
    ca_uint32_t InvCodeI             :  1 ; /* bits 3:3 */
    ca_uint32_t InvCodeSatI          :  1 ; /* bits 4:4 */
    ca_uint32_t PatErrI              :  1 ; /* bits 5:5 */
    ca_uint32_t PatErrSatI           :  1 ; /* bits 6:6 */
    ca_uint32_t comma_foundI         :  1 ; /* bits 7:7 */
    ca_uint32_t SyncDet0I            :  1 ; /* bits 8:8 */
    ca_uint32_t SyncDet1I            :  1 ; /* bits 9:9 */
    ca_uint32_t SyncDet2I            :  1 ; /* bits 10:10 */
    ca_uint32_t SyncDet3I            :  1 ; /* bits 11:11 */
    ca_uint32_t AlignDetI            :  1 ; /* bits 12:12 */
    ca_uint32_t PatLockDetI          :  1 ; /* bits 13:13 */
    ca_uint32_t A_column_found0I     :  1 ; /* bits 14:14 */
    ca_uint32_t A_column_found1I     :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE 0xf430af60
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ErrorPkte            :  1 ; /* bits 0:0 */
    ca_uint32_t ErrorPktSate         :  1 ; /* bits 1:1 */
    ca_uint32_t GoodPktSate          :  1 ; /* bits 2:2 */
    ca_uint32_t InvCodee             :  1 ; /* bits 3:3 */
    ca_uint32_t InvCodeSate          :  1 ; /* bits 4:4 */
    ca_uint32_t PatErre              :  1 ; /* bits 5:5 */
    ca_uint32_t PatErrSate           :  1 ; /* bits 6:6 */
    ca_uint32_t CommaFounde          :  1 ; /* bits 7:7 */
    ca_uint32_t SyncDet0e            :  1 ; /* bits 8:8 */
    ca_uint32_t SyncDet1e            :  1 ; /* bits 9:9 */
    ca_uint32_t SyncDet2e            :  1 ; /* bits 10:10 */
    ca_uint32_t SyncDet3e            :  1 ; /* bits 11:11 */
    ca_uint32_t AlignDete            :  1 ; /* bits 12:12 */
    ca_uint32_t PatLockDete          :  1 ; /* bits 13:13 */
    ca_uint32_t A_column_found0e     :  1 ; /* bits 14:14 */
    ca_uint32_t A_column_found1e     :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt      0xf430af64
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t good_pkt_tx          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt       0xf430af68
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_pkt_tx           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0         0xf430af6c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_icc_0           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1         0xf430af70
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_icc_1           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2         0xf430af74
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_icc_2           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3         0xf430af78
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_icc_3           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0         0xf430af7c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_pec_0           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1         0xf430af80
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_pec_1           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2         0xf430af84
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_pec_2           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3         0xf430af88
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgxs_pec_3           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH      0xf430af8c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scratch              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgxs_tx */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0_t   TxCntrl0;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1_t   TxCntrl1;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2_t   TxCntrl2;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3_t   TxCntrl3;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4_t   TxCntrl4;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5_t   TxCntrl5;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT_t TX_INTSTAT;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT_t TX_INTERRUPT;                  /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE_t TX_INTENABLE;                  /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt_t    GoodPkt;                       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt_t     ErrPkt;                        /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0_t       ICC0;                          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1_t       ICC1;                          /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2_t       ICC2;                          /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3_t       ICC3;                          /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0_t       PEC0;                          /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1_t       PEC1;                          /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2_t       PEC2;                          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3_t       PEC3;                          /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH_t    SCRATCH;                       /* addr: 0x0000004c */
} APB0_NI_HV_XAUI_XGXS_TOP_XGXS_TX_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGXS_TOP */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_NI_HV_XAUI_XGXS_TOP_XGXS_RX_t       xgxs_rx;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[41];
  APB0_NI_HV_XAUI_XGXS_TOP_XGXS_TX_t       xgxs_tx;                       /* addr: 0x00000040 */
} APB0_NI_HV_XAUI_XGXS_TOP_t;
#endif /* !__ASSEMBLER__ */


/*
 * xaui_mac
 */

/*
 * ctrl
 */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT  0xf430afa0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_ffoverrun_intI    :  1 ; /* bits 0:0 */
    ca_uint32_t tc_espkterr_intI     :  1 ; /* bits 1:1 */
    ca_uint32_t rxestore0_intI       :  1 ; /* bits 2:2 */
    ca_uint32_t rxestore1_intI       :  1 ; /* bits 3:3 */
    ca_uint32_t rxestore2_intI       :  1 ; /* bits 4:4 */
    ca_uint32_t rxestore3_intI       :  1 ; /* bits 5:5 */
    ca_uint32_t txestore0_intI       :  1 ; /* bits 6:6 */
    ca_uint32_t txestore1_intI       :  1 ; /* bits 7:7 */
    ca_uint32_t txestore2_intI       :  1 ; /* bits 8:8 */
    ca_uint32_t txestore3_intI       :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t rc_ptp_pkt_intI      :  1 ; /* bits 16:16 */
    ca_uint32_t tc_ptp_pkt_intI      :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t tc_ffoverrun_intI    :  1 ; /* bits 24:24 */
    ca_uint32_t tx_asyncff_underrun_intI :  1 ; /* bits 25:25 */
    ca_uint32_t tx_asyncff_overrun_intI :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE 0xf430afa4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_ffoverrun_intIE   :  1 ; /* bits 0:0 */
    ca_uint32_t tc_espkterr_intIE    :  1 ; /* bits 1:1 */
    ca_uint32_t rxestore0_intIE      :  1 ; /* bits 2:2 */
    ca_uint32_t rxestore1_intIE      :  1 ; /* bits 3:3 */
    ca_uint32_t rxestore2_intIE      :  1 ; /* bits 4:4 */
    ca_uint32_t rxestore3_intIE      :  1 ; /* bits 5:5 */
    ca_uint32_t txestore0_intIE      :  1 ; /* bits 6:6 */
    ca_uint32_t txestore1_intIE      :  1 ; /* bits 7:7 */
    ca_uint32_t txestore2_intIE      :  1 ; /* bits 8:8 */
    ca_uint32_t txestore3_intIE      :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t rc_ptp_pkt_intIE     :  1 ; /* bits 16:16 */
    ca_uint32_t tc_ptp_pkt_intIE     :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t tc_ffoverrun_intIE   :  1 ; /* bits 24:24 */
    ca_uint32_t tx_asyncff_underrun_intIE :  1 ; /* bits 25:25 */
    ca_uint32_t tx_asyncff_overrun_intIE :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG        0xf430afa8
#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx2tx_lpbk_en        :  1 ; /* bits 0:0 */
    ca_uint32_t tx2rx_lpbk_en        :  1 ; /* bits 1:1 */
    ca_uint32_t rs_locfault_en       :  1 ; /* bits 2:2 */
    ca_uint32_t rs_rmtfault_en       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL      0xf430afac
#define NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL_dft  0xe4e40000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flip_sds_xgxs_rx_en  :  1 ; /* bits 0:0 */
    ca_uint32_t flip_sds_xgxs_tx_en  :  1 ; /* bits 1:1 */
    ca_uint32_t pcs_line_swap_txd_en :  1 ; /* bits 2:2 */
    ca_uint32_t pcs_line_swap_rxd_en :  1 ; /* bits 3:3 */
    ca_uint32_t rx_invert_ctl        :  1 ; /* bits 4:4 */
    ca_uint32_t tx_invert_ctl        :  1 ; /* bits 5:5 */
    ca_uint32_t rx_data_resync0      :  1 ; /* bits 6:6 */
    ca_uint32_t rx_data_resync1      :  1 ; /* bits 7:7 */
    ca_uint32_t rx_data_resync2      :  1 ; /* bits 8:8 */
    ca_uint32_t rx_data_resync3      :  1 ; /* bits 9:9 */
    ca_uint32_t tx_data_resync0      :  1 ; /* bits 10:10 */
    ca_uint32_t tx_data_resync1      :  1 ; /* bits 11:11 */
    ca_uint32_t tx_data_resync2      :  1 ; /* bits 12:12 */
    ca_uint32_t tx_data_resync3      :  1 ; /* bits 13:13 */
    ca_uint32_t tx_scramble          :  1 ; /* bits 14:14 */
    ca_uint32_t rx_scramble          :  1 ; /* bits 15:15 */
    ca_uint32_t rxswap0              :  2 ; /* bits 17:16 */
    ca_uint32_t rxswap1              :  2 ; /* bits 19:18 */
    ca_uint32_t rxswap2              :  2 ; /* bits 21:20 */
    ca_uint32_t rxswap3              :  2 ; /* bits 23:22 */
    ca_uint32_t txswap0              :  2 ; /* bits 25:24 */
    ca_uint32_t txswap1              :  2 ; /* bits 27:26 */
    ca_uint32_t txswap2              :  2 ; /* bits 29:28 */
    ca_uint32_t txswap3              :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H       0xf430afb0
#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L       0xf430afb4
#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE       0xf430afb8
#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE_dft   0x40003601

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ctrl_mode_en         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t flush_pkt_en         :  5 ; /* bits 8:4 */
    ca_uint32_t flush_pkt_en1        :  1 ; /* bits 9:9 */
    ca_uint32_t flush_pkt_sdid       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t pkt_tocsport_en      :  1 ; /* bits 12:12 */
    ca_uint32_t pkt_toupport_en      :  1 ; /* bits 13:13 */
    ca_uint32_t pkt_tocsport_toup    :  1 ; /* bits 14:14 */
    ca_uint32_t pkt_toupport_tocs    :  1 ; /* bits 15:15 */
    ca_uint32_t flush_touplink_pkt   :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               : 13 ;
    ca_uint32_t mask_nop_en          :  1 ; /* bits 30:30 */
    ca_uint32_t mask_ddbm_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL     0xf430afbc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL_dft 0x0007b800

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t clr_rcffoverrun      :  1 ; /* bits 0:0 */
    ca_uint32_t drop_ptp_pkt_type    : 10 ; /* bits 10:1 */
    ca_uint32_t qbb_pause_drop_en    :  1 ; /* bits 11:11 */
    ca_uint32_t frame_error_drop_en  :  1 ; /* bits 12:12 */
    ca_uint32_t frame_fcs_error_drop_en :  1 ; /* bits 13:13 */
    ca_uint32_t frame_bytecnt_drop_en :  1 ; /* bits 14:14 */
    ca_uint32_t frame_pause_drop_en  :  1 ; /* bits 15:15 */
    ca_uint32_t frame_runt_drop_en   :  1 ; /* bits 16:16 */
    ca_uint32_t frame_oversize_drop_en :  1 ; /* bits 17:17 */
    ca_uint32_t frame_ffoverflow_drop_en :  1 ; /* bits 18:18 */
    ca_uint32_t frame_management_drop_en :  1 ; /* bits 19:19 */
    ca_uint32_t frame_nomanagement_drop_en :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t qbb_pause_det_en     :  1 ; /* bits 23:23 */
    ca_uint32_t bypass               :  1 ; /* bits 24:24 */
    ca_uint32_t ptp_ing_ts_cmp       :  5 ; /* bits 29:25 */
    ca_uint32_t rx_pkt_clr           :  1 ; /* bits 30:30 */
    ca_uint32_t ptp_da_en            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI 0xf430afc0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI_dft 0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_da        : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO 0xf430afc4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO_dft 0xc2000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_da        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0 0xf430afc8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0_dft 0x00008809

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type0     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type0_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1 0xf430afcc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1_dft 0x00008808

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type1     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type1_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2 0xf430afd0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2_dft 0x00008863

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type2     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type2_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3 0xf430afd4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3_dft 0x00008864

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type3     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type3_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4 0xf430afd8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4_dft 0x0000888e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type4     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type4_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5 0xf430afdc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5_dft 0x00000806

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type5     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type5_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6 0xf430afe0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6_dft 0x0000814c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type6     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type6_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7 0xf430afe4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t management_type7     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t det_type7_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL 0xf430afe8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL_dft 0x000001ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xon_threshold        : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL 0xf430afec
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL_dft 0x000002ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xoff_threshold       : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL     0xf430aff0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL_dft 0x00ff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pau_flow_en          :  1 ; /* bits 0:0 */
    ca_uint32_t tx_remheader_dis     :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pkt_clr           :  1 ; /* bits 2:2 */
    ca_uint32_t tx_pad_en            :  1 ; /* bits 3:3 */
    ca_uint32_t loopback             :  1 ; /* bits 4:4 */
    ca_uint32_t ptp_eg_ts_comp       :  5 ; /* bits 9:5 */
    ca_uint32_t external_pausereq_pol :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t qbb_flow_en          :  1 ; /* bits 15:15 */
    ca_uint32_t qbb_qen              :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t external_txstop_sel  :  1 ; /* bits 27:27 */
    ca_uint32_t internal_txstop_sel  :  1 ; /* bits 28:28 */
    ca_uint32_t external_pausereq_sel :  1 ; /* bits 29:29 */
    ca_uint32_t rx_pausereq_sel      :  1 ; /* bits 30:30 */
    ca_uint32_t te_pfcreq_sel        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA  0xf430aff4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA_dft 0x7f0dffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t adjust_qbb_cnt       :  8 ; /* bits 23:16 */
    ca_uint32_t adjust_1g_qbb_cnt    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1 0xf430aff8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2 0xf430affc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3 0xf430b000
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4 0xf430b004
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5 0xf430b008
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6 0xf430b00c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7 0xf430b010
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD 0xf430b014
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD_dft 0x803f01fa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txff_wrff_threshold  :  6 ; /* bits 5:0 */
    ca_uint32_t txff_rdff_threshold  :  6 ; /* bits 11:6 */
    ca_uint32_t txctl_wrff_threshold :  9 ; /* bits 20:12 */
    ca_uint32_t rd_thre_en           :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t txctl_rdff_threshold :  9 ; /* bits 31:23 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0 0xf430b018
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rcdrop_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1 0xf430b01c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rcff_pktnum          : 11 ; /* bits 10:0 */
    ca_uint32_t rs_locfault          :  1 ; /* bits 11:11 */
    ca_uint32_t rs_rmtfault          :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2 0xf430b020
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_torxmux_cnt      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3 0xf430b024
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_tocstxmux_cnt    : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4 0xf430b028
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_touptxmux_cnt    : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5 0xf430b02c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_tocstxmux_errcnt :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6 0xf430b030
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_cs_flushcnt      :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0 0xf430b034
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tcdrop_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1 0xf430b038
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tcff_pktnum          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3 0xf430b03c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t length_mismatch      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4 0xf430b040
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t es_runt_pkt          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS  0xf430b044
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_ffempty           :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fffull            :  1 ; /* bits 1:1 */
    ca_uint32_t rx_ffempty           :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fffull            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL    0xf430b048
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL_dft 0x00ffd200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cascade_bp_en        :  1 ; /* bits 0:0 */
    ca_uint32_t external_stoptx_en   :  1 ; /* bits 1:1 */
    ca_uint32_t external_pausereq_en :  1 ; /* bits 2:2 */
    ca_uint32_t external_pausereq_pol :  1 ; /* bits 3:3 */
    ca_uint32_t cascade_ff_threshold : 10 ; /* bits 13:4 */
    ca_uint32_t external_pausereq_oen_sel :  1 ; /* bits 14:14 */
    ca_uint32_t external_pausereq_oen :  1 ; /* bits 15:15 */
    ca_uint32_t xaui_die_tx_threshold :  9 ; /* bits 24:16 */
    ca_uint32_t external_stop_lcl_en :  1 ; /* bits 25:25 */
    ca_uint32_t uplink_lcl_pol       :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t dbg_sel              :  3 ; /* bits 30:28 */
    ca_uint32_t die_cascade_bp_en    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT 0xf430b04c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sld_crc8_err_cnt     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG 0xf430b050
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_initdone         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL         0xf430b054
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL_dft     0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_clr_en           :  1 ; /* bits 0:0 */
    ca_uint32_t ram_sw_initial       :  1 ; /* bits 1:1 */
    ca_uint32_t dbg_sel              :  1 ; /* bits 2:2 */
    ca_uint32_t term_dbg_en          :  1 ; /* bits 3:3 */
    ca_uint32_t rt_mib_en            :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS 0xf430b058
#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA 0xf430b05c
#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS 0xf430b060
#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA 0xf430b064
#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT  0xf430b068
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_drop_cnt         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT  0xf430b06c
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_drop_cnt         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB      0xf430b070
#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB      0xf430b074
#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI 0xf430b078
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI 0xf430b07c
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU     0xf430b080
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU_dft 0x80000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wait_cnt             : 16 ; /* bits 15:0 */
    ca_uint32_t repeat_cnt           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0    0xf430b084
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1    0xf430b088
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2    0xf430b08c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3    0xf430b090
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK  0xf430b094
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM  0xf430b098
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO 0xf430b09c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI 0xf430b0a0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE 0xf430b0a4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_type             :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID 0xf430b0a8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sq_id                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM  0xf430b0ac
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO 0xf430b0b0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI 0xf430b0b4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE 0xf430b0b8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_type             :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID 0xf430b0bc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sq_id                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL     0xf430b0c0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL_dft 0x81000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_ct_mode_en        :  1 ; /* bits 0:0 */
    ca_uint32_t drop_ct_en           :  1 ; /* bits 1:1 */
    ca_uint32_t tx_ct_mode_en        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t ct_tpid              : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL 0xf430b0c4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pon_llid             : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t xgpon_llid           : 13 ; /* bits 28:16 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0  0xf430b0c8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0_dft 0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan0                : 16 ; /* bits 15:0 */
    ca_uint32_t vlan1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1  0xf430b0cc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1_dft 0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan0                : 16 ; /* bits 15:0 */
    ca_uint32_t vlan1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG0            0xf430b0d0
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG1            0xf430b0d4
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG2            0xf430b0d8
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG3            0xf430b0dc
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT   0xf430b0e0
#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT   0xf430b0e4
#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW 0xf430b0e8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID 0xf430b0ec
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT 0xf430b0f0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asyncff_dropcnt      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD 0xf430b0f4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD_dft 0x30000090

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_wrff_threshold    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t rx_rdff_ipg          :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD 0xf430b0f8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD_dft 0x004000f0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_wrff_threshold    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t tx_rdff_threshold    :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0 0xf430b0fc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_sop_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rc_eop_cnt           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE           0xf430b100
#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1          0xf430b104
#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_0 0xf430b108
#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbsEnabled          :  1 ; /* bits 0:0 */
    ca_uint32_t loadPrbsState        :  1 ; /* bits 1:1 */
    ca_uint32_t clrCnt               :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t prbs_mode            :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t insertError          :  1 ; /* bits 8:8 */
    ca_uint32_t insertErrorOnce      :  1 ; /* bits 9:9 */
    ca_uint32_t insertOneBitError    :  1 ; /* bits 10:10 */
    ca_uint32_t insertOneBitErrorOnce :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd3               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_0 0xf430b10c
#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbsErrCnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_0 0xf430b110
#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t syncState            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_1 0xf430b114
#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbsEnabled          :  1 ; /* bits 0:0 */
    ca_uint32_t loadPrbsState        :  1 ; /* bits 1:1 */
    ca_uint32_t clrCnt               :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t prbs_mode            :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t insertError          :  1 ; /* bits 8:8 */
    ca_uint32_t insertErrorOnce      :  1 ; /* bits 9:9 */
    ca_uint32_t insertOneBitError    :  1 ; /* bits 10:10 */
    ca_uint32_t insertOneBitErrorOnce :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd3               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_1 0xf430b118
#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbsErrCnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_1 0xf430b11c
#define NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t syncState            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ctrl */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT_t XAUI_INTERRUPT;                /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE_t XAUI_INTERRUPTE;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG_t      CTRL_CFG;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL_t    BRIGE_CTRL;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H_t     ADDRESS_H;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L_t     ADDRESS_L;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE_t     CTRL_MODE;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL_t   XAUI_RX_CTL;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI_t XAUI_MANAGEMENT_DA_HI;         /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO_t XAUI_MANAGEMENT_DA_LO;         /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0_t XAUI_MANAGEMENT_TYPE0;         /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1_t XAUI_MANAGEMENT_TYPE1;         /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2_t XAUI_MANAGEMENT_TYPE2;         /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3_t XAUI_MANAGEMENT_TYPE3;         /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4_t XAUI_MANAGEMENT_TYPE4;         /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5_t XAUI_MANAGEMENT_TYPE5;         /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6_t XAUI_MANAGEMENT_TYPE6;         /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7_t XAUI_MANAGEMENT_TYPE7;         /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL_t XAUI_FLOWON_CTL;               /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL_t XAUI_FLOWOFF_CTL;              /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL_t   XAUI_TX_CTL;                   /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA_t XAUI_TX_QUANTA;                /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1_t XAUI_TX_QUANTA1;               /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2_t XAUI_TX_QUANTA2;               /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3_t XAUI_TX_QUANTA3;               /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4_t XAUI_TX_QUANTA4;               /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5_t XAUI_TX_QUANTA5;               /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6_t XAUI_TX_QUANTA6;               /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7_t XAUI_TX_QUANTA7;               /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD_t XAUI_TX_FF_THRESHOLD;          /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0_t XAUI_RX_STATUS0;               /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1_t XAUI_RX_STATUS1;               /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2_t XAUI_RX_STATUS2;               /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3_t XAUI_RX_STATUS3;               /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4_t XAUI_RX_STATUS4;               /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5_t XAUI_RX_STATUS5;               /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6_t XAUI_RX_STATUS6;               /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0_t XAUI_TX_STATUS0;               /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1_t XAUI_TX_STATUS1;               /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3_t XAUI_TX_STATUS3;               /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4_t XAUI_TX_STATUS4;               /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS_t XAUI_FF_STATUS;                /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL_t  XAUI_BP_CTRL;                  /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT_t XAUI_SLD_ERRCNT;               /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG_t MIB_RAM_STATUS_REG;            /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL_t       MIB_CTL;                       /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS_t RX_MIB_ACC_ACCESS;             /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA_t RX_MIB_ACC_DATA;               /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS_t TX_MIB_ACC_ACCESS;             /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA_t TX_MIB_ACC_DATA;               /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT_t MIB_RX_DROPCNT;                /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT_t MIB_TX_DROPCNT;                /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB_t    TX_PKT_MIB;                    /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB_t    RX_PKT_MIB;                    /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI_t MIB_RX_BYTECNT_HI;             /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI_t MIB_TX_BYTECNT_HI;             /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU_t   XAUI_TX_PAU;                   /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0_t  XAUI_RX_DIE0;                  /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1_t  XAUI_RX_DIE1;                  /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2_t  XAUI_RX_DIE2;                  /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3_t  XAUI_RX_DIE3;                  /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK_t XAUI_RX_UPLINK;                /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_t XAUI_RX_PTP_TM;                /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO_t XAUI_RX_PTP_TM_S_LO;           /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI_t XAUI_RX_PTP_TM_S_HI;           /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE_t XAUI_RX_PTP_TYPE;              /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID_t XAUI_RX_PTP_SQID;              /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_t XAUI_TX_PTP_TM;                /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO_t XAUI_TX_PTP_TM_S_LO;           /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI_t XAUI_TX_PTP_TM_S_HI;           /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE_t XAUI_TX_PTP_TYPE;              /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID_t XAUI_TX_PTP_SQID;              /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL_t   XAUI_CT_CTL;                   /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL_t XAUI_CT_LLID_CTL;              /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0_t XAUI_PTP_VLAN0;                /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1_t XAUI_PTP_VLAN1;                /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_DBG0_t          DBG0;                          /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_DBG1_t          DBG1;                          /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_DBG2_t          DBG2;                          /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_DBG3_t          DBG3;                          /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT_t GE_DBG_RX_CNT;                 /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT_t GE_DBG_TX_CNT;                 /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW_t XAUI_RX_FLUSH_KNOW;            /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID_t XAUI_RX_FLUSH_SDID;            /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT_t XAUI_RXFPGA_DROPCNT;           /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD_t XAUI_RXFPGA_FF_THRESHOLD;      /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD_t XAUI_TXFPGA_FF_THRESHOLD;      /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0_t XAUI_RX_DBGCNT0;               /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_SPARE_t         SPARE;                         /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1_t        SPARE1;                        /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_0_t RXAUI_PRBS_CONTROL_0;          /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_0_t RXAUI_PRBS_ERRCNT_0;           /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_0_t RXAUI_PRBS_SYNC_0;             /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_CONTROL_1_t RXAUI_PRBS_CONTROL_1;          /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_ERRCNT_1_t RXAUI_PRBS_ERRCNT_1;           /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  NI_HV_XAUI_XAUI_MAC_CTRL_RXAUI_PRBS_SYNC_1_t RXAUI_PRBS_SYNC_1;             /* addr: 0x0000017c */
} APB0_NI_HV_XAUI_XAUI_MAC_CTRL_t;
#endif /* !__ASSEMBLER__ */


/*
 * txmac
 */

#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG      0xf430b120
#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG_dft  0x40000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t insert_cshead        :  1 ; /* bits 0:0 */
    ca_uint32_t reset                :  1 ; /* bits 1:1 */
    ca_uint32_t flow_en              :  1 ; /* bits 2:2 */
    ca_uint32_t mac_en               :  1 ; /* bits 3:3 */
    ca_uint32_t crc_recaculate_en    :  1 ; /* bits 4:4 */
    ca_uint32_t swap_crc8_en         :  1 ; /* bits 5:5 */
    ca_uint32_t swap_datain_en       :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t dic_mode             :  2 ; /* bits 14:13 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t link_fault_en        :  1 ; /* bits 30:30 */
    ca_uint32_t insert_nop           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS 0xf430b124
#define NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t empty                :  1 ; /* bits 0:0 */
    ca_uint32_t full                 :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0        0xf430b128
#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1        0xf430b12c
#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* txmac */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG_t    TX_CONFIG;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS_t ASYNC_FF_STATUS;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0_t      TX_DBG0;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1_t      TX_DBG1;                       /* addr: 0x0000000c */
} APB0_NI_HV_XAUI_XAUI_MAC_TXMAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * rxmac
 */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG      0xf430b140
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG_dft  0x23f10230

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reset                :  1 ; /* bits 1:1 */
    ca_uint32_t dxaui_quanta_mode    :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t swap_crc8_en         :  1 ; /* bits 4:4 */
    ca_uint32_t swap_datain_en       :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t mac_en               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t pause_en             :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd5               :  6 ;
    ca_uint32_t max_size             : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET     0xf430b144
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET_dft 0x00000066

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t check_idle           :  1 ; /* bits 0:0 */
    ca_uint32_t check_start          :  1 ; /* bits 1:1 */
    ca_uint32_t check_sld            :  1 ; /* bits 2:2 */
    ca_uint32_t check_preamble       :  1 ; /* bits 3:3 */
    ca_uint32_t check_bf_start       :  1 ; /* bits 4:4 */
    ca_uint32_t check_crc8           :  1 ; /* bits 5:5 */
    ca_uint32_t check_terminate      :  1 ; /* bits 6:6 */
    ca_uint32_t rx_revcs             :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD  0xf430b148
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD_dft 0x10000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cascade_hd           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD 0xf430b14c
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD_dft 0x10000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cascade_hd           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW 0xf430b150
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_asyncff_overflow  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0        0xf430b154
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1        0xf430b158
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rxmac */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG_t    RX_CONFIG;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET_t   RX_PKT_DET;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD_t RX_CASCADE_HD;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD_t RX_INIT_CASCADE_HD;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW_t RX_ASYNC_FF_OVERFLOW;          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0_t      RX_DBG0;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1_t      RX_DBG1;                       /* addr: 0x00000018 */
} APB0_NI_HV_XAUI_XAUI_MAC_RXMAC_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xaui_mac */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_NI_HV_XAUI_XAUI_MAC_CTRL_t          ctrl;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[193];
  APB0_NI_HV_XAUI_XAUI_MAC_TXMAC_t         txmac;                         /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd2[25];
  APB0_NI_HV_XAUI_XAUI_MAC_RXMAC_t         rxmac;                         /* addr: 0x000001a0 */
} APB0_NI_HV_XAUI_XAUI_MAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * xaui_xgrs
 */

/*
 * tx
 */

#define NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL          0xf430b160
#define NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL_dft      0x00000013

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_localOrdEn        :  1 ; /* bits 0:0 */
    ca_uint32_t tx_remoteOrdEn       :  1 ; /* bits 1:1 */
    ca_uint32_t tx_userOrdEn         :  1 ; /* bits 2:2 */
    ca_uint32_t tx_dataTruncEn       :  1 ; /* bits 3:3 */
    ca_uint32_t tx_pcs6_line_txd_en  :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t tx_logicReset        :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1       0xf430b164
#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_userOrdL1         :  8 ; /* bits 7:0 */
    ca_uint32_t tx_userOrdL2         :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2       0xf430b168
#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_userOrdL3         :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_TX_TXINT            0xf430b16c
#define NI_HV_XAUI_XAUI_XGRS_TX_TXINT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t truncPktI            :  1 ; /* bits 0:0 */
    ca_uint32_t truncPktSatI         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_TXINT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE      0xf430b170
#define NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t truncPktE            :  1 ; /* bits 0:0 */
    ca_uint32_t truncPktSatE         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT         0xf430b174
#define NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t trunc_pkt_tx         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT       0xf430b178
#define NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT_dft   0x00000006

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t oidle_pkt_tx         :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* tx */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL_t        TXCNTRL;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1_t     TXUSERORD1;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2_t     TXUSERORD2;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XAUI_XGRS_TX_TXINT_t          TXINT;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE_t    TXINTENABLE;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT_t       TRUNCPKT;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT_t     OIDLECOUNT;                    /* addr: 0x00000018 */
} APB0_NI_HV_XAUI_XAUI_XGRS_TX_t;
#endif /* !__ASSEMBLER__ */


/*
 * rx
 */

#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1         0xf430b180
#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1_dft     0x0000028f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_dataLosEn         :  1 ; /* bits 0:0 */
    ca_uint32_t rx_lockLosEn         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_sigLosEn          :  1 ; /* bits 2:2 */
    ca_uint32_t rx_phyRLFEn          :  1 ; /* bits 3:3 */
    ca_uint32_t rx_losPolarity       :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rx_noIpg             :  1 ; /* bits 7:7 */
    ca_uint32_t rx_ofsmUNHEn         :  1 ; /* bits 8:8 */
    ca_uint32_t rx_pcs6_line_rxd_en  :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t rx_logicReset        :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd3               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1_t;
#endif /* !__ASSEMBLER__ */

#define     rx_losPolarity_HIGH_LOS_POL                   0x0
#define     rx_losPolarity_LOW_LOS_POL                    0x1

#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2         0xf430b184
#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2_dft     0x0000037f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_col_thr           :  8 ; /* bits 7:0 */
    ca_uint32_t rx_seq_thr           :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS         0xf430b188
#define NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t localordS            :  1 ; /* bits 0:0 */
    ca_uint32_t remoteordS           :  1 ; /* bits 1:1 */
    ca_uint32_t unknownordS          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_RX_RXINT            0xf430b18c
#define NI_HV_XAUI_XAUI_XGRS_RX_RXINT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t localordI            :  1 ; /* bits 0:0 */
    ca_uint32_t remoteordI           :  1 ; /* bits 1:1 */
    ca_uint32_t unknownordI          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_RXINT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE      0xf430b190
#define NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t localordE            :  1 ; /* bits 0:0 */
    ca_uint32_t remoteordE           :  1 ; /* bits 1:1 */
    ca_uint32_t unknownordE          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1      0xf430b194
#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_unknownOrd_l1     :  8 ; /* bits 7:0 */
    ca_uint32_t rx_unknownOrd_l2     :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2      0xf430b198
#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_unknownOrd_l3     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL        0xf430b19c
#define NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t loc_fault_sel        :  1 ; /* bits 0:0 */
    ca_uint32_t rmt_fault_sel        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rx */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1_t       RXCNTRL1;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2_t       RXCNTRL2;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS_t       RXSTATUS;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XAUI_XAUI_XGRS_RX_RXINT_t          RXINT;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE_t    RXINTENABLE;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1_t    UNKNOWNORD1;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2_t    UNKNOWNORD2;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL_t      FAULT_SEL;                     /* addr: 0x0000001c */
} APB0_NI_HV_XAUI_XAUI_XGRS_RX_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xaui_xgrs */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_NI_HV_XAUI_XAUI_XGRS_TX_t           tx;                            /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[19];
  APB0_NI_HV_XAUI_XAUI_XGRS_RX_t           rx;                            /* addr: 0x00000020 */
} APB0_NI_HV_XAUI_XAUI_XGRS_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XAUI */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_NI_HV_XAUI_XGXS_TOP_t               XGXS_TOP;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[57];
  APB0_NI_HV_XAUI_XAUI_MAC_t               xaui_mac;                      /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd2[19];
  APB0_NI_HV_XAUI_XAUI_XGRS_t              xaui_xgrs;                     /* addr: 0x00000260 */
} APB0_NI_HV_XAUI_t;
#endif /* !__ASSEMBLER__ */


/*
 * XGE
 */

/*
 * MAC
 */

#define NI_HV_XGE_MAC_CFG_COM                    0xf430b200
#define NI_HV_XGE_MAC_CFG_COM_dft                0x0000e018

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rpr_mode             :  1 ; /* bits 0:0 */
    ca_uint32_t stack_en             :  1 ; /* bits 1:1 */
    ca_uint32_t clronread            :  1 ; /* bits 2:2 */
    ca_uint32_t rt_mib_en            :  1 ; /* bits 3:3 */
    ca_uint32_t stats_err_order      :  3 ; /* bits 6:4 */
    ca_uint32_t stats_drop_en        :  1 ; /* bits 7:7 */
    ca_uint32_t core_tx2rx_lb        :  1 ; /* bits 8:8 */
    ca_uint32_t core_rx2tx_lb        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t cntr_rst             :  1 ; /* bits 13:13 */
    ca_uint32_t rx_rst               :  1 ; /* bits 14:14 */
    ca_uint32_t tx_rst               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_CFG_COM_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_CFG_RX                     0xf430b204
#define NI_HV_XGE_MAC_CFG_RX_dft                 0x00000bc1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t promis_mode          :  1 ; /* bits 0:0 */
    ca_uint32_t drop_short           :  1 ; /* bits 1:1 */
    ca_uint32_t strip                :  2 ; /* bits 3:2 */
    ca_uint32_t pause_term           :  1 ; /* bits 4:4 */
    ca_uint32_t pause_extract        :  1 ; /* bits 5:5 */
    ca_uint32_t len_chk_en           :  1 ; /* bits 6:6 */
    ca_uint32_t len_chk_en_pause     :  1 ; /* bits 7:7 */
    ca_uint32_t len_chk_en_pad       :  1 ; /* bits 8:8 */
    ca_uint32_t fcs_chk_en           :  1 ; /* bits 9:9 */
    ca_uint32_t IFG_mode_rx          :  1 ; /* bits 10:10 */
    ca_uint32_t crc_err_fatal        :  1 ; /* bits 11:11 */
    ca_uint32_t maxlen_mode          :  1 ; /* bits 12:12 */
    ca_uint32_t prmbl_sfd_gmii_err   :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_CFG_RX_t;
#endif /* !__ASSEMBLER__ */

#define     maxlen_mode_FIX                               0x0
#define     maxlen_mode_AUTO                              0x1
#define     IFG_mode_rx_STD                               0x0
#define     IFG_mode_rx_BEST                              0x1
#define     strip_NONE                                    0x0
#define     strip_FCS                                     0x1
#define     strip_PADFCS                                  0x2

#define NI_HV_XGE_MAC_CFG_TX                     0xf430b208
#define NI_HV_XGE_MAC_CFG_TX_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IFG_mode_tx          :  2 ; /* bits 1:0 */
    ca_uint32_t halt                 :  1 ; /* bits 2:2 */
    ca_uint32_t insSA                :  1 ; /* bits 3:3 */
    ca_uint32_t pause_req_en         :  1 ; /* bits 4:4 */
    ca_uint32_t pause_req_auto_xon   :  1 ; /* bits 5:5 */
    ca_uint32_t lf_auto_flush_en     :  1 ; /* bits 6:6 */
    ca_uint32_t vlan_pad_mode        :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_CFG_TX_t;
#endif /* !__ASSEMBLER__ */

#define     vlan_pad_mode_MD_64B                          0x0
#define     vlan_pad_mode_MD_VAR                          0x1
#define     IFG_mode_tx_STD                               0x0
#define     IFG_mode_tx_DIC12                             0x1
#define     IFG_mode_tx_DIC8                              0x2
#define     IFG_mode_tx_RSVD                              0x3

#define NI_HV_XGE_MAC_CFG_TX_2                   0xf430b20c
#define NI_HV_XGE_MAC_CFG_TX_2_dft               0x0000060e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fifo1_thr_afull      :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t fifo1_read_thr       :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_CFG_TX_2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_CFG_TX_IFG                 0xf430b210
#define NI_HV_XGE_MAC_CFG_TX_IFG_dft             0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ifg                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_CFG_TX_IFG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAC_ADDR_A                 0xf430b214
#define NI_HV_XGE_MAC_MAC_ADDR_A_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAC_ADDR_A_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAC_ADDR_B                 0xf430b218
#define NI_HV_XGE_MAC_MAC_ADDR_B_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAC_ADDR_B_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAC_ADDR_C                 0xf430b21c
#define NI_HV_XGE_MAC_MAC_ADDR_C_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAC_ADDR_C_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_VLAN_TAG1                  0xf430b220
#define NI_HV_XGE_MAC_VLAN_TAG1_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_VLAN_TAG1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_VLAN_TAG2                  0xf430b224
#define NI_HV_XGE_MAC_VLAN_TAG2_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_VLAN_TAG2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_VLAN_TAG3                  0xf430b228
#define NI_HV_XGE_MAC_VLAN_TAG3_dft              0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_VLAN_TAG3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MINLEN                     0xf430b22c
#define NI_HV_XGE_MAC_MINLEN_dft                 0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minlen               :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MINLEN_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAXLEN                     0xf430b230
#define NI_HV_XGE_MAC_MAXLEN_dft                 0x000023f1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t maxlen               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAXLEN_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_PAUSE_ADDR_A               0xf430b234
#define NI_HV_XGE_MAC_PAUSE_ADDR_A_dft           0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_PAUSE_ADDR_A_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_PAUSE_ADDR_B               0xf430b238
#define NI_HV_XGE_MAC_PAUSE_ADDR_B_dft           0x0000c200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_PAUSE_ADDR_B_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_PAUSE_ADDR_C               0xf430b23c
#define NI_HV_XGE_MAC_PAUSE_ADDR_C_dft           0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_PAUSE_ADDR_C_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_PQUANTA                    0xf430b240
#define NI_HV_XGE_MAC_PQUANTA_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pq                   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_PQUANTA_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_PAUSE_TX_CMD               0xf430b244
#define NI_HV_XGE_MAC_PAUSE_TX_CMD_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t X_GEN                :  1 ; /* bits 0:0 */
    ca_uint32_t XON_XOFF             :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_PAUSE_TX_CMD_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_INTERRUPT                  0xf430b248
#define NI_HV_XGE_MAC_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t miscI                :  1 ; /* bits 0:0 */
    ca_uint32_t stats1I              :  1 ; /* bits 1:1 */
    ca_uint32_t stats2I              :  1 ; /* bits 2:2 */
    ca_uint32_t stats3I              :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_INTENABLE                  0xf430b24c
#define NI_HV_XGE_MAC_INTENABLE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t miscE                :  1 ; /* bits 0:0 */
    ca_uint32_t stats1E              :  1 ; /* bits 1:1 */
    ca_uint32_t stats2E              :  1 ; /* bits 2:2 */
    ca_uint32_t stats3E              :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MISC_INTERRUPT             0xf430b250
#define NI_HV_XGE_MAC_MISC_INTERRUPT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo1_uflwI       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fifo1_oflwI       :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_doneI       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t rx_no_sfdI           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MISC_INTENABLE             0xf430b254
#define NI_HV_XGE_MAC_MISC_INTENABLE_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo1_uflwE       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fifo1_oflwE       :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_doneE       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t rx_no_sfdE           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_INTERRUPT1           0xf430b258
#define NI_HV_XGE_MAC_STATS_INTERRUPT1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_good_framesI      :  1 ; /* bits 0:0 */
    ca_uint32_t tx_good_octetsI      :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_framesI     :  1 ; /* bits 2:2 */
    ca_uint32_t rx_good_framesI      :  1 ; /* bits 3:3 */
    ca_uint32_t rx_good_octetsI      :  1 ; /* bits 4:4 */
    ca_uint32_t rx_pause_framesI     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_crcerr_framesI    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_alignerr_framesI  :  1 ; /* bits 7:7 */
    ca_uint32_t tx_ucast_framesI     :  1 ; /* bits 8:8 */
    ca_uint32_t tx_mcast_framesI     :  1 ; /* bits 9:9 */
    ca_uint32_t tx_bcast_framesI     :  1 ; /* bits 10:10 */
    ca_uint32_t tx_err_framesI       :  1 ; /* bits 11:11 */
    ca_uint32_t rx_ucast_framesI     :  1 ; /* bits 12:12 */
    ca_uint32_t rx_mcast_framesI     :  1 ; /* bits 13:13 */
    ca_uint32_t rx_bcast_framesI     :  1 ; /* bits 14:14 */
    ca_uint32_t rx_err_framesI       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_INTERRUPT1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_INTENABLE1           0xf430b25c
#define NI_HV_XGE_MAC_STATS_INTENABLE1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_good_framesE      :  1 ; /* bits 0:0 */
    ca_uint32_t tx_good_octetsE      :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_framesE     :  1 ; /* bits 2:2 */
    ca_uint32_t rx_good_framesE      :  1 ; /* bits 3:3 */
    ca_uint32_t rx_good_octetsE      :  1 ; /* bits 4:4 */
    ca_uint32_t rx_pause_framesE     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_crcerr_framesE    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_alignerr_framesE  :  1 ; /* bits 7:7 */
    ca_uint32_t tx_ucast_framesE     :  1 ; /* bits 8:8 */
    ca_uint32_t tx_mcast_framesE     :  1 ; /* bits 9:9 */
    ca_uint32_t tx_bcast_framesE     :  1 ; /* bits 10:10 */
    ca_uint32_t tx_err_framesE       :  1 ; /* bits 11:11 */
    ca_uint32_t rx_ucast_framesE     :  1 ; /* bits 12:12 */
    ca_uint32_t rx_mcast_framesE     :  1 ; /* bits 13:13 */
    ca_uint32_t rx_bcast_framesE     :  1 ; /* bits 14:14 */
    ca_uint32_t rx_err_framesE       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_INTENABLE1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_INTERRUPT2           0xf430b260
#define NI_HV_XGE_MAC_STATS_INTERRUPT2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_octetsI           :  1 ; /* bits 0:0 */
    ca_uint32_t rx_framesI           :  1 ; /* bits 1:1 */
    ca_uint32_t rx_runt_framesI      :  1 ; /* bits 2:2 */
    ca_uint32_t rx_short_framesI     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_undersize_framesI :  1 ; /* bits 4:4 */
    ca_uint32_t rx_giant_framesI     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_jabber_framesI    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_64b_framesI       :  1 ; /* bits 7:7 */
    ca_uint32_t rx_65b_to_127b_framesI :  1 ; /* bits 8:8 */
    ca_uint32_t rx_128b_to_255b_framesI :  1 ; /* bits 9:9 */
    ca_uint32_t rx_256b_to_511b_framesI :  1 ; /* bits 10:10 */
    ca_uint32_t rx_512b_to_1023b_framesI :  1 ; /* bits 11:11 */
    ca_uint32_t rx_1024b_to_1518b_framesI :  1 ; /* bits 12:12 */
    ca_uint32_t rx_1519b_to_maxb_framesI :  1 ; /* bits 13:13 */
    ca_uint32_t tx_octetsI           :  1 ; /* bits 14:14 */
    ca_uint32_t tx_framesI           :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_INTERRUPT2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_INTENABLE2           0xf430b264
#define NI_HV_XGE_MAC_STATS_INTENABLE2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_octetsE           :  1 ; /* bits 0:0 */
    ca_uint32_t rx_framesE           :  1 ; /* bits 1:1 */
    ca_uint32_t rx_runt_framesE      :  1 ; /* bits 2:2 */
    ca_uint32_t rx_short_framesE     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_undersize_framesE :  1 ; /* bits 4:4 */
    ca_uint32_t rx_giant_framesE     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_jabber_framesE    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_64b_framesE       :  1 ; /* bits 7:7 */
    ca_uint32_t rx_65b_to_127b_framesE :  1 ; /* bits 8:8 */
    ca_uint32_t rx_128b_to_255b_framesE :  1 ; /* bits 9:9 */
    ca_uint32_t rx_256b_to_511b_framesE :  1 ; /* bits 10:10 */
    ca_uint32_t rx_512b_to_1023b_framesE :  1 ; /* bits 11:11 */
    ca_uint32_t rx_1024b_to_1518b_framesE :  1 ; /* bits 12:12 */
    ca_uint32_t rx_1519b_to_maxb_framesE :  1 ; /* bits 13:13 */
    ca_uint32_t tx_octetsE           :  1 ; /* bits 14:14 */
    ca_uint32_t tx_framesE           :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_INTENABLE2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_INTERRUPT3           0xf430b268
#define NI_HV_XGE_MAC_STATS_INTERRUPT3_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_64b_framesI       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_65b_to_127b_framesI :  1 ; /* bits 1:1 */
    ca_uint32_t tx_128b_to_255b_framesI :  1 ; /* bits 2:2 */
    ca_uint32_t tx_256b_to_511b_framesI :  1 ; /* bits 3:3 */
    ca_uint32_t tx_512b_to_1023b_framesI :  1 ; /* bits 4:4 */
    ca_uint32_t tx_1024b_to_1518b_framesI :  1 ; /* bits 5:5 */
    ca_uint32_t tx_1519b_framesI     :  1 ; /* bits 6:6 */
    ca_uint32_t drop_rx_crcerr_framesI :  1 ; /* bits 7:7 */
    ca_uint32_t drop_rx_alignerr_framesI :  1 ; /* bits 8:8 */
    ca_uint32_t rx_pfc_framesI       :  1 ; /* bits 9:9 */
    ca_uint32_t tx_pfc_framesI       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_INTERRUPT3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_INTENABLE3           0xf430b26c
#define NI_HV_XGE_MAC_STATS_INTENABLE3_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_64b_framesE       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_65b_to_127b_framesE :  1 ; /* bits 1:1 */
    ca_uint32_t tx_128b_to_255b_framesE :  1 ; /* bits 2:2 */
    ca_uint32_t tx_256b_to_511b_framesE :  1 ; /* bits 3:3 */
    ca_uint32_t tx_512b_to_1023b_framesE :  1 ; /* bits 4:4 */
    ca_uint32_t tx_1024b_to_1518b_framesE :  1 ; /* bits 5:5 */
    ca_uint32_t tx_1519b_framesE     :  1 ; /* bits 6:6 */
    ca_uint32_t drop_rx_crcerr_framesE :  1 ; /* bits 7:7 */
    ca_uint32_t drop_rx_alignerr_framesE :  1 ; /* bits 8:8 */
    ca_uint32_t rx_pfc_framesE       :  1 ; /* bits 9:9 */
    ca_uint32_t tx_pfc_framesE       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_INTENABLE3_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_ACCESS               0xf430b270
#define NI_HV_XGE_MAC_STATS_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_id               :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t dbg_write            :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define     cnt_id_TX_GOOD_FRAMES                         0x0
#define     cnt_id_TX_GOOD_OCTETS                         0x1
#define     cnt_id_TX_PAUSE_FRAMES                        0x2
#define     cnt_id_RX_GOOD_FRAMES                         0x3
#define     cnt_id_RX_GOOD_OCTETS                         0x4
#define     cnt_id_RX_PAUSE_FRAMES                        0x5
#define     cnt_id_RX_CRC_ERR_FRAMES                      0x6
#define     cnt_id_RX_ALIGN_ERR_FRAMES                    0x7
#define     cnt_id_TX_UCAST_FRAMES                        0x8
#define     cnt_id_TX_MCAST_FRAMES                        0x9
#define     cnt_id_TX_BCAST_FRAMES                        0xa
#define     cnt_id_TX_ERR_FRAMES                          0xb
#define     cnt_id_RX_UCAST_FRAMES                        0xc
#define     cnt_id_RX_MCAST_FRAMES                        0xd
#define     cnt_id_RX_BCAST_FRAMES                        0xe
#define     cnt_id_RX_ERR_FRAMES                          0xf
#define     cnt_id_RX_OCTETS                              0x10
#define     cnt_id_RX_FRAMES                              0x11
#define     cnt_id_RX_RUNT_FRAMES                         0x12
#define     cnt_id_RX_SHORT_FRAMES                        0x13
#define     cnt_id_RX_UNDERSIZE_FRAMES                    0x14
#define     cnt_id_RX_GIANT_FRAMES                        0x15
#define     cnt_id_RX_JABBER_FRAMES                       0x16
#define     cnt_id_RX_64B_FRAMES                          0x17
#define     cnt_id_RX_65B_TO_127B_FRAMES                  0x18
#define     cnt_id_RX_128B_TO_255B_FRAMES                 0x19
#define     cnt_id_RX_256B_TO_511B_FRAMES                 0x1a
#define     cnt_id_RX_512B_TO_1023B_FRAMES                0x1b
#define     cnt_id_RX_1024B_TO_1518B_FRAMES               0x1c
#define     cnt_id_RX_1519B_TO_MAXB_FRAMES                0x1d
#define     cnt_id_TX_OCTETS                              0x1e
#define     cnt_id_TX_FRAMES                              0x1f
#define     cnt_id_TX_64B_FRAMES                          0x20
#define     cnt_id_TX_65B_TO_127B_FRAMES                  0x21
#define     cnt_id_TX_128B_TO_255B_FRAMES                 0x22
#define     cnt_id_TX_256B_TO_511B_FRAMES                 0x23
#define     cnt_id_TX_512B_TO_1023B_FRAMES                0x24
#define     cnt_id_TX_1024B_TO_1518B_FRAMES               0x25
#define     cnt_id_TX_1519B_FRAMES                        0x26
#define     cnt_id_DROP_RX_CRC_ERR_FRAMES                 0x27
#define     cnt_id_DROP_RX_ALIGN_ERR_FRAMES               0x28
#define     cnt_id_RX_PFC_FRAMES                          0x29
#define     cnt_id_TX_PFC_FRAMES                          0x2a

#define NI_HV_XGE_MAC_STATS_DATA1                0xf430b274
#define NI_HV_XGE_MAC_STATS_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_STATS_DATA0                0xf430b278
#define NI_HV_XGE_MAC_STATS_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_STATS_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY2           0xf430b27c
#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAC_ADDR_RDONLY2_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY1           0xf430b280
#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAC_ADDR_RDONLY1_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY0           0xf430b284
#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_MAC_ADDR_RDONLY0_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_TL_BOUNDARY                0xf430b288
#define NI_HV_XGE_MAC_TL_BOUNDARY_dft            0x00000600

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t boundary             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_TL_BOUNDARY_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MAC_FMRO                       0xf430b28c
#define NI_HV_XGE_MAC_FMRO_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data_sel             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t clk_sel              :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MAC_FMRO_t;
#endif /* !__ASSEMBLER__ */

#define     clk_sel_DISABLE                               0x0
#define     clk_sel_MAC                                   0x1
#define     clk_sel_322RX                                 0x2
#define     clk_sel_322TX                                 0x3
#define     data_sel_DISABLE                              0x0
#define     data_sel_322RX_1                              0x1
#define     data_sel_322RX_2                              0x2
#define     data_sel_322RX_3                              0x3
#define     data_sel_322RX_4                              0x4
#define     data_sel_322RX_5                              0x5
#define     data_sel_322RX_6                              0x6
#define     data_sel_322RX_7                              0x7
#define     data_sel_322RX_8                              0x8
#define     data_sel_322RX_9                              0x9
#define     data_sel_322RX_10                             0xa
#define     data_sel_322RX_11                             0xb
#define     data_sel_322RX_12                             0xc
#define     data_sel_322RX_13                             0xd
#define     data_sel_322TX_0                              0x10
#define     data_sel_322TX_1                              0x11
#define     data_sel_322TX_2                              0x12
#define     data_sel_322TX_3                              0x13
#define     data_sel_322TX_4                              0x14
#define     data_sel_322TX_5                              0x15
#define     data_sel_322TX_6                              0x16
#define     data_sel_322TX_7                              0x17
#define     data_sel_322TX_8                              0x18
#define     data_sel_322TX_9                              0x19
#define     data_sel_322TX_10                             0x1a
#define     data_sel_322TX_11                             0x1b
#define     data_sel_322TX_12                             0x1c
#define     data_sel_322TX_13                             0x1d
#define     data_sel_322TX_14                             0x1e
#define     data_sel_322TX_15                             0x1f
#define     data_sel_322TX_16                             0x20
#define     data_sel_322TX_17                             0x21
#define     data_sel_322TX_18                             0x22
#define     data_sel_322TX_19                             0x23
#define     data_sel_322TX_20                             0x24
#define     data_sel_322TX_21                             0x25
#define     data_sel_322TX_22                             0x26
#define     data_sel_322TX_23                             0x27
#define     data_sel_322TX_24                             0x28
#define     data_sel_322TX_25                             0x29
#define     data_sel_322TX_26                             0x2a
#define     data_sel_322TX_27                             0x2b
#define     data_sel_322TX_28                             0x2c
#define     data_sel_322TX_29                             0x2d
#define     data_sel_322TX_30                             0x2e
#define     data_sel_322TX_31                             0x2f
#define     data_sel_322TX_32                             0x30
#define     data_sel_322TX_33                             0x31
#define     data_sel_322TX_34                             0x32
#define     data_sel_322TX_35                             0x33
#define     data_sel_322TX_36                             0x34
#define     data_sel_322TX_37                             0x35
#define     data_sel_322TX_38                             0x36
#define     data_sel_322TX_39                             0x37
#define     data_sel_322TX_40                             0x38
#define     data_sel_322TX_41                             0x39
#define     data_sel_MAC_0                                0x40
#define     data_sel_MAC_1                                0x41
#define     data_sel_MAC_2                                0x42
#define     data_sel_MAC_3                                0x43
#define     data_sel_MAC_4                                0x44
#define     data_sel_MAC_5                                0x45
#define     data_sel_MAC_6                                0x46
#define     data_sel_MAC_7                                0x47
#define     data_sel_MAC_8                                0x48
#define     data_sel_MAC_9                                0x49
#define     data_sel_MAC_10                               0x4a
#define     data_sel_MAC_11                               0x4b
#define     data_sel_MAC_12                               0x4c
#define     data_sel_MAC_13                               0x4d
#define     data_sel_MAC_14                               0x4e
#define     data_sel_MAC_15                               0x4f
#define     data_sel_MAC_16                               0x50
#define     data_sel_MAC_17                               0x51
#define     data_sel_MAC_18                               0x52
#define     data_sel_MAC_19                               0x53
#define     data_sel_MAC_20                               0x54
#define     data_sel_MAC_21                               0x55
#define     data_sel_MAC_22                               0x56
#define     data_sel_MAC_23                               0x57
#define     data_sel_MAC_24                               0x58
#define     data_sel_MAC_25                               0x59
#define     data_sel_MAC_26                               0x5a
#define     data_sel_MAC_27                               0x5b
#define     data_sel_MAC_28                               0x5c
#define     data_sel_MAC_29                               0x5d
#define     data_sel_MAC_30                               0x5e
#define     data_sel_MAC_31                               0x5f
#define     data_sel_MAC_32                               0x60
#define     data_sel_MAC_33                               0x61
#define     data_sel_MAC_34                               0x62
#define     data_sel_MAC_35                               0x63
#define     data_sel_MAC_36                               0x64
#define     data_sel_MAC_37                               0x65
#define     data_sel_MAC_38                               0x66
#define     data_sel_MAC_39                               0x67
#define     data_sel_MAC_40                               0x68
#define     data_sel_MAC_41                               0x69
#define     data_sel_MAC_42                               0x6a
#define     data_sel_MAC_43                               0x6b
#define     data_sel_MAC_44                               0x6c
#define     data_sel_MAC_45                               0x6d
#define     data_sel_MAC_46                               0x6e
#define     data_sel_MAC_47                               0x6f
#define     data_sel_MAC_48                               0x70
#define     data_sel_MAC_49                               0x71
#define     data_sel_MAC_50                               0x72
#define     data_sel_MAC_51                               0x73
#define     data_sel_MAC_52                               0x74
#define     data_sel_MAC_53                               0x75
#define     data_sel_MAC_54                               0x76
#define     data_sel_MAC_55                               0x77
#define     data_sel_MAC_56                               0x78




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MAC */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XGE_MAC_CFG_COM_t                  CFG_COM;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XGE_MAC_CFG_RX_t                   CFG_RX;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XGE_MAC_CFG_TX_t                   CFG_TX;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XGE_MAC_CFG_TX_2_t                 CFG_TX_2;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  NI_HV_XGE_MAC_CFG_TX_IFG_t               CFG_TX_IFG;                    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  NI_HV_XGE_MAC_MAC_ADDR_A_t               MAC_ADDR_A;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  NI_HV_XGE_MAC_MAC_ADDR_B_t               MAC_ADDR_B;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  NI_HV_XGE_MAC_MAC_ADDR_C_t               MAC_ADDR_C;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  NI_HV_XGE_MAC_VLAN_TAG1_t                VLAN_TAG1;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  NI_HV_XGE_MAC_VLAN_TAG2_t                VLAN_TAG2;                     /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  NI_HV_XGE_MAC_VLAN_TAG3_t                VLAN_TAG3;                     /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  NI_HV_XGE_MAC_MINLEN_t                   MINLEN;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  NI_HV_XGE_MAC_MAXLEN_t                   MAXLEN;                        /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  NI_HV_XGE_MAC_PAUSE_ADDR_A_t             PAUSE_ADDR_A;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  NI_HV_XGE_MAC_PAUSE_ADDR_B_t             PAUSE_ADDR_B;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  NI_HV_XGE_MAC_PAUSE_ADDR_C_t             PAUSE_ADDR_C;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  NI_HV_XGE_MAC_PQUANTA_t                  PQUANTA;                       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  NI_HV_XGE_MAC_PAUSE_TX_CMD_t             PAUSE_TX_CMD;                  /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  NI_HV_XGE_MAC_INTERRUPT_t                INTERRUPT;                     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  NI_HV_XGE_MAC_INTENABLE_t                INTENABLE;                     /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  NI_HV_XGE_MAC_MISC_INTERRUPT_t           MISC_INTERRUPT;                /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  NI_HV_XGE_MAC_MISC_INTENABLE_t           MISC_INTENABLE;                /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  NI_HV_XGE_MAC_STATS_INTERRUPT1_t         STATS_INTERRUPT1;              /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  NI_HV_XGE_MAC_STATS_INTENABLE1_t         STATS_INTENABLE1;              /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  NI_HV_XGE_MAC_STATS_INTERRUPT2_t         STATS_INTERRUPT2;              /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  NI_HV_XGE_MAC_STATS_INTENABLE2_t         STATS_INTENABLE2;              /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  NI_HV_XGE_MAC_STATS_INTERRUPT3_t         STATS_INTERRUPT3;              /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  NI_HV_XGE_MAC_STATS_INTENABLE3_t         STATS_INTENABLE3;              /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  NI_HV_XGE_MAC_STATS_ACCESS_t             STATS_ACCESS;                  /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  NI_HV_XGE_MAC_STATS_DATA1_t              STATS_DATA1;                   /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  NI_HV_XGE_MAC_STATS_DATA0_t              STATS_DATA0;                   /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  NI_HV_XGE_MAC_MAC_ADDR_RDONLY2_t         MAC_ADDR_RDONLY2;              /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  NI_HV_XGE_MAC_MAC_ADDR_RDONLY1_t         MAC_ADDR_RDONLY1;              /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  NI_HV_XGE_MAC_MAC_ADDR_RDONLY0_t         MAC_ADDR_RDONLY0;              /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  NI_HV_XGE_MAC_TL_BOUNDARY_t              TL_BOUNDARY;                   /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  NI_HV_XGE_MAC_FMRO_t                     FMRO;                          /* addr: 0x0000008c */
} APB0_NI_HV_XGE_MAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * misc
 */

#define NI_HV_XGE_MISC_INTERRUPT                 0xf430b2a0
#define NI_HV_XGE_MISC_INTERRUPT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macI                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MISC_INTENABLE                 0xf430b2a4
#define NI_HV_XGE_MISC_INTENABLE_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macE                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MISC_CONFIG                    0xf430b2a8
#define NI_HV_XGE_MISC_CONFIG_dft                0x300000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t inf_sel              :  2 ; /* bits 29:28 */
    ca_uint32_t mode322              :  1 ; /* bits 30:30 */
    ca_uint32_t gige_mode            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MISC_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define NI_HV_XGE_MISC_FMRO                      0xf430b2ac
#define NI_HV_XGE_MISC_FMRO_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} NI_HV_XGE_MISC_FMRO_t;
#endif /* !__ASSEMBLER__ */

#define     sel_MAC                                       0x0
#define     sel_PCS                                       0x1
#define     sel_WISRX                                     0x2
#define     sel_WISTX                                     0x3
#define     sel_PCS1GERX                                  0x4
#define     sel_PCS1GETX                                  0x5




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* misc */
#ifndef __ASSEMBLER__
typedef struct {
  NI_HV_XGE_MISC_INTERRUPT_t               INTERRUPT;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  NI_HV_XGE_MISC_INTENABLE_t               INTENABLE;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  NI_HV_XGE_MISC_CONFIG_t                  CONFIG;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  NI_HV_XGE_MISC_FMRO_t                    FMRO;                          /* addr: 0x0000000c */
} APB0_NI_HV_XGE_MISC_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGE */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_NI_HV_XGE_MAC_t                     MAC;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[89];
  APB0_NI_HV_XGE_MISC_t                    misc;                          /* addr: 0x000000a0 */
} APB0_NI_HV_XGE_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* NI_HV */

#ifndef __ASSEMBLER__
typedef struct {
  APB0_NI_HV_GLB_t                         GLB;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[761];
  APB0_NI_HV_PT_t                          PT[6];                         /* addr: 0x000005c0 */
  APB0_NI_HV_INTPT_t                       INTPT[4];                      /* addr: 0x00000920 */
  APB0_NI_HV_XRAM_t                        XRAM;                          /* addr: 0x00000a20 */
  ca_uint32_t                              rsrvd2[39];
  APB0_NI_HV_MCE_t                         MCE;                           /* addr: 0x00000a60 */
  ca_uint32_t                              rsrvd3[1153];
  APB0_NI_HV_XAUI_t                        XAUI;                          /* addr: 0x00000f00 */
  ca_uint32_t                              rsrvd4[113];
  APB0_NI_HV_XGE_t                         XGE;                           /* addr: 0x00001200 */
} APB0_NI_HV_t;
#endif /* !__ASSEMBLER__ */


/*
 * PTP
 */

#define PTP_PPS_CFG_0                            0xf430e000
#define PTP_PPS_CFG_0_dft                        0x60000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_en               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pps_in_en            :  1 ; /* bits 2:2 */
    ca_uint32_t pps_edge_sel_sample  :  1 ; /* bits 3:3 */
    ca_uint32_t pps_edge_sel_load    :  1 ; /* bits 4:4 */
    ca_uint32_t pps_load_en          :  1 ; /* bits 5:5 */
    ca_uint32_t pps_out_en           :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t pps_width            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_PPS_CFG_0_t;
#endif /* !__ASSEMBLER__ */


#define PTP_PPS_CFG_1                            0xf430e004
#define PTP_PPS_CFG_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s_pps                : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_PPS_CFG_1_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TOD_CFG                              0xf430e008
#define PTP_TOD_CFG_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s_tod                : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TOD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_CFG_0                          0xf430e00c
#define PTP_TIMER_CFG_0_dft                      0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_clk_period       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_CFG_0_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_CFG_1                          0xf430e010
#define PTP_TIMER_CFG_1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tmr_load_val     : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_CFG_1_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_CFG_2                          0xf430e014
#define PTP_TIMER_CFG_2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tmr_match_val    : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_CFG_2_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_CFG_3                          0xf430e018
#define PTP_TIMER_CFG_3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 30 ;
    ca_uint32_t pon_tmr_match_load   :  1 ; /* bits 30:30 */
    ca_uint32_t ptp_tmr_match_load   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_CFG_3_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER                                0xf430e01c
#define PTP_TIMER_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_hw_ts            : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TS_ON_PPS                            0xf430e020
#define PTP_TS_ON_PPS_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pps_timestamp_sample : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TS_ON_PPS_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LOCAL_TIMER_CFG_0                    0xf430e024
#define PTP_LOCAL_TIMER_CFG_0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_tmr_match_val  : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LOCAL_TIMER_CFG_0_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LOCAL_TIMER_CFG_1                    0xf430e028
#define PTP_LOCAL_TIMER_CFG_1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_tmr_load_val   : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t local_tmr_en         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LOCAL_TIMER_CFG_1_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LOCAL_TIMER_CFG_2                    0xf430e02c
#define PTP_LOCAL_TIMER_CFG_2_dft                0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_period         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LOCAL_TIMER_CFG_2_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LOCAL_TIMER_CFG_3                    0xf430e030
#define PTP_LOCAL_TIMER_CFG_3_dft                0x017d7840

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_ts_subcnt      : 27 ; /* bits 26:0 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LOCAL_TIMER_CFG_3_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LOCAL_TIMER_CFG_4                    0xf430e034
#define PTP_LOCAL_TIMER_CFG_4_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 31 ;
    ca_uint32_t local_tmr_match_load :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LOCAL_TIMER_CFG_4_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LOCAL_TIMER                          0xf430e038
#define PTP_LOCAL_TIMER_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_hw_ts          : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LOCAL_TIMER_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TS_ON_LOCAL_REQ                      0xf430e03c
#define PTP_TS_ON_LOCAL_REQ_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_timestamp      : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TS_ON_LOCAL_REQ_t;
#endif /* !__ASSEMBLER__ */


#define PTP_INTERRUPT                            0xf430e040
#define PTP_INTERRUPT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timer_rollover_intI  :  1 ; /* bits 0:0 */
    ca_uint32_t local_timer_rollover_intI :  1 ; /* bits 1:1 */
    ca_uint32_t local_timestamp_intI :  1 ; /* bits 2:2 */
    ca_uint32_t pps_event_intI       :  1 ; /* bits 3:3 */
    ca_uint32_t pps_out_falledge_intI :  1 ; /* bits 4:4 */
    ca_uint32_t timer_spec_latch_intI :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PTP_INTENABLE                            0xf430e044
#define PTP_INTENABLE_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timer_rollover_IE    :  1 ; /* bits 0:0 */
    ca_uint32_t local_timer_rollover_IE :  1 ; /* bits 1:1 */
    ca_uint32_t local_timestamp_IE   :  1 ; /* bits 2:2 */
    ca_uint32_t pps_event_IE         :  1 ; /* bits 3:3 */
    ca_uint32_t pps_out_falledge_IE  :  1 ; /* bits 4:4 */
    ca_uint32_t timer_spec_latch_IE  :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_SECH                           0xf430e048
#define PTP_TIMER_SECH_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_hw_ts_sech       : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_SECH_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_SECL                           0xf430e04c
#define PTP_TIMER_SECL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_hw_ts_secl       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_SECL_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_SEC_LOADH                      0xf430e050
#define PTP_TIMER_SEC_LOADH_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sec_loadh            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_SEC_LOADH_t;
#endif /* !__ASSEMBLER__ */


#define PTP_TIMER_SEC_LOADL                      0xf430e054
#define PTP_TIMER_SEC_LOADL_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sec_loadl            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_TIMER_SEC_LOADL_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LATCH_TIMER_SECH_P0                  0xf430e058
#define PTP_LATCH_TIMER_SECH_P0_STRIDE           12
#define PTP_LATCH_TIMER_SECH_P0_COUNT            8
#define PTP_LATCH_TIMER_SECH_P0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_hw_ts_sech      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LATCH_TIMER_SECH_P0_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LATCH_TIMER_SECL_P0                  0xf430e05c
#define PTP_LATCH_TIMER_SECL_P0_STRIDE           12
#define PTP_LATCH_TIMER_SECL_P0_COUNT            8
#define PTP_LATCH_TIMER_SECL_P0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_hw_ts_secl      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LATCH_TIMER_SECL_P0_t;
#endif /* !__ASSEMBLER__ */


#define PTP_LATCH_TIMER_P0                       0xf430e060
#define PTP_LATCH_TIMER_P0_STRIDE                12
#define PTP_LATCH_TIMER_P0_COUNT                 8
#define PTP_LATCH_TIMER_P0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port_hw_ts           : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PTP_LATCH_TIMER_P0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PTP */
#ifndef __ASSEMBLER__
typedef struct {
  PTP_PPS_CFG_0_t                          PPS_CFG_0;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PTP_PPS_CFG_1_t                          PPS_CFG_1;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PTP_TOD_CFG_t                            TOD_CFG;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PTP_TIMER_CFG_0_t                        TIMER_CFG_0;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PTP_TIMER_CFG_1_t                        TIMER_CFG_1;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PTP_TIMER_CFG_2_t                        TIMER_CFG_2;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PTP_TIMER_CFG_3_t                        TIMER_CFG_3;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PTP_TIMER_t                              TIMER;                         /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PTP_TS_ON_PPS_t                          TS_ON_PPS;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PTP_LOCAL_TIMER_CFG_0_t                  LOCAL_TIMER_CFG_0;             /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PTP_LOCAL_TIMER_CFG_1_t                  LOCAL_TIMER_CFG_1;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PTP_LOCAL_TIMER_CFG_2_t                  LOCAL_TIMER_CFG_2;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PTP_LOCAL_TIMER_CFG_3_t                  LOCAL_TIMER_CFG_3;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PTP_LOCAL_TIMER_CFG_4_t                  LOCAL_TIMER_CFG_4;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PTP_LOCAL_TIMER_t                        LOCAL_TIMER;                   /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PTP_TS_ON_LOCAL_REQ_t                    TS_ON_LOCAL_REQ;               /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PTP_INTERRUPT_t                          INTERRUPT;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PTP_INTENABLE_t                          INTENABLE;                     /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PTP_TIMER_SECH_t                         TIMER_SECH;                    /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PTP_TIMER_SECL_t                         TIMER_SECL;                    /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PTP_TIMER_SEC_LOADH_t                    TIMER_SEC_LOADH;               /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PTP_TIMER_SEC_LOADL_t                    TIMER_SEC_LOADL;               /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PTP_LATCH_TIMER_SECH_P0_t                LATCH_TIMER_SECH_P0;           /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PTP_LATCH_TIMER_SECL_P0_t                LATCH_TIMER_SECL_P0;           /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PTP_LATCH_TIMER_P0_t                     LATCH_TIMER_P0;                /* addr: 0x00000060 */
} APB0_PTP_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB0 */

#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              APB0_rsrvd1[4096];
  APB0_L2FE_t                       L2FE;                          /* addr: 0x00001000 */
  ca_uint32_t                              APB0_rsrvd2[215];
  APB0_L2TM_t                       L2TM;                          /* addr: 0x00002000 */
  ca_uint32_t                              APB0_rsrvd3[209];
  APB0_L3FE_t                       L3FE;                          /* addr: 0x00003000 */
  ca_uint32_t                              APB0_rsrvd4[9081];
  APB0_QM_t                         QM;                            /* addr: 0x00006000 */
  ca_uint32_t                              APB0_rsrvd5[3776];
  APB0_TE_t                         TE;                            /* addr: 0x00008000 */
  ca_uint32_t                              rsrvd1[1483];
  APB0_NI_HV_t                             NI_HV;                         /* addr: 0x0000a000 */
  ca_uint32_t                              rsrvd2[11609];
  APB0_PTP_t                               PTP;                           /* addr: 0x0000e000 */
} APB0_t;
#endif /* !__ASSEMBLER__ */


/*
 * DDR_CTRL
 */

/*
 * RXI316
 */

/*
 * RXI316_BACKEND
 */

#define DDR_CTRL_RXI316_BACKEND_CCR              0xf4310000
#define DDR_CTRL_RXI316_BACKEND_CCR_dft          0x0000013e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INIT                 :  1 ; /* bits 0:0 */
    ca_uint32_t TM                   :  1 ; /* bits 1:1 */
    ca_uint32_t BSTC                 :  1 ; /* bits 2:2 */
    ca_uint32_t DPIT                 :  1 ; /* bits 3:3 */
    ca_uint32_t SRXT                 :  1 ; /* bits 4:4 */
    ca_uint32_t FRQC                 :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t FLUSH_FIFO           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 22 ;
    ca_uint32_t CR_UPDATE            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CCR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DCR              0xf4310004
#define DDR_CTRL_RXI316_BACKEND_DCR_dft          0x02000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SDR__DDR             :  4 ; /* bits 3:0 */
    ca_uint32_t DQ_32                :  1 ; /* bits 4:4 */
    ca_uint32_t HALF_DQ              :  1 ; /* bits 5:5 */
    ca_uint32_t HYBR_DQ              :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DFI_RATE             :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RANK2                :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t WR_DBI               :  1 ; /* bits 16:16 */
    ca_uint32_t RD_DBI               :  1 ; /* bits 17:17 */
    ca_uint32_t PAR                  :  1 ; /* bits 18:18 */
    ca_uint32_t GEAR_DOWN            :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t BG2                  :  1 ; /* bits 21:21 */
    ca_uint32_t BG_UNMAP             :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t RMW_GRA              :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t FullWr               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd7               :  2 ;
    ca_uint32_t ZQC                  :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DCR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_IOCR             0xf4310008
#define DDR_CTRL_RXI316_BACKEND_IOCR_dft         0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_2PIN             :  1 ; /* bits 0:0 */
    ca_uint32_t CKE_NOP              :  1 ; /* bits 1:1 */
    ca_uint32_t STC_CKE              :  1 ; /* bits 2:2 */
    ca_uint32_t STC_ODT              :  1 ; /* bits 3:3 */
    ca_uint32_t _2N_PRE_CMD          :  1 ; /* bits 4:4 */
    ca_uint32_t tRTW_2T_DIS          :  1 ; /* bits 5:5 */
    ca_uint32_t HALF_CS_N            :  1 ; /* bits 6:6 */
    ca_uint32_t DYN_SRE              :  1 ; /* bits 7:7 */
    ca_uint32_t RD_PIPE              :  4 ; /* bits 11:8 */
    ca_uint32_t TPHY_WDATA           :  5 ; /* bits 16:12 */
    ca_uint32_t TPHY_WLAT            :  3 ; /* bits 19:17 */
    ca_uint32_t TPHY_RDATA_EN        :  5 ; /* bits 24:20 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t DC_CH1               :  1 ; /* bits 27:27 */
    ca_uint32_t ADDR_SHARE           :  1 ; /* bits 28:28 */
    ca_uint32_t AC_SHARE             :  1 ; /* bits 29:29 */
    ca_uint32_t FPGA_LP              :  1 ; /* bits 30:30 */
    ca_uint32_t FPGA_DFI             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_IOCR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CSR              0xf431000c
#define DDR_CTRL_RXI316_BACKEND_CSR_dft          0x00000700

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPIN_CMD_INFO        :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SRE_ST               :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t MEM_IDLE             :  1 ; /* bits 8:8 */
    ca_uint32_t TM_IDLE              :  1 ; /* bits 9:9 */
    ca_uint32_t BSTC_IDLE            :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t DPIN_MOD             :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               : 11 ;
    ca_uint32_t CUR_GP               :  1 ; /* bits 30:30 */
    ca_uint32_t CR_GP                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CSR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DRR              0xf4310010
#define DDR_CTRL_RXI316_BACKEND_DRR_dft          0x080f0072

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tRFC                 :  8 ; /* bits 7:0 */
    ca_uint32_t tREF                 : 16 ; /* bits 23:8 */
    ca_uint32_t REF_NUM              :  4 ; /* bits 27:24 */
    ca_uint32_t REF_DIS              :  1 ; /* bits 28:28 */
    ca_uint32_t ZQCL_INV             :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DRR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TPR0             0xf4310014
#define DDR_CTRL_RXI316_BACKEND_TPR0_dft         0x00006856

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tRP                  :  4 ; /* bits 3:0 */
    ca_uint32_t tRAS                 :  5 ; /* bits 8:4 */
    ca_uint32_t tWR                  :  4 ; /* bits 12:9 */
    ca_uint32_t tRTP                 :  4 ; /* bits 16:13 */
    ca_uint32_t tCKE                 :  6 ; /* bits 22:17 */
    ca_uint32_t tPD_EN               :  1 ; /* bits 23:23 */
    ca_uint32_t tZQCS                :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TPR0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TPR1             0xf4310018
#define DDR_CTRL_RXI316_BACKEND_TPR1_dft         0x00067c82

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tRRD                 :  4 ; /* bits 3:0 */
    ca_uint32_t tRC                  :  6 ; /* bits 9:4 */
    ca_uint32_t tRCD                 :  4 ; /* bits 13:10 */
    ca_uint32_t tCCD                 :  3 ; /* bits 16:14 */
    ca_uint32_t tWTR                 :  3 ; /* bits 19:17 */
    ca_uint32_t tRTW                 :  4 ; /* bits 23:20 */
    ca_uint32_t tFAW                 :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TPR1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TPR2             0xf431001c
#define DDR_CTRL_RXI316_BACKEND_TPR2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INIT_REF_NUM__or__ZQC_INV :  4 ; /* bits 3:0 */
    ca_uint32_t tMRD__or__INIT_MRR   :  4 ; /* bits 7:4 */
    ca_uint32_t tNS                  :  4 ; /* bits 11:8 */
    ca_uint32_t tUS                  : 10 ; /* bits 21:12 */
    ca_uint32_t RST_tUS              : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TPR2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TPR3             0xf4310020
#define DDR_CTRL_RXI316_BACKEND_TPR3_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tRPAB_PB             :  2 ; /* bits 1:0 */
    ca_uint32_t tRAS_MSB             :  1 ; /* bits 2:2 */
    ca_uint32_t tFAW_MSB             :  1 ; /* bits 3:3 */
    ca_uint32_t DPIN_CMD_LAT         :  3 ; /* bits 6:4 */
    ca_uint32_t tRCD_MSB             :  1 ; /* bits 7:7 */
    ca_uint32_t tWTR_MSB             :  1 ; /* bits 8:8 */
    ca_uint32_t tRTW_MSB             :  1 ; /* bits 9:9 */
    ca_uint32_t tRFC_MSB             :  1 ; /* bits 10:10 */
    ca_uint32_t tWR_MSB              :  1 ; /* bits 11:11 */
    ca_uint32_t tPPD                 :  2 ; /* bits 13:12 */
    ca_uint32_t tCCD_S               :  3 ; /* bits 16:14 */
    ca_uint32_t tWTR_S               :  3 ; /* bits 19:17 */
    ca_uint32_t tRRD_S               :  4 ; /* bits 23:20 */
    ca_uint32_t tCCD_KW              :  4 ; /* bits 27:24 */
    ca_uint32_t tCCD_K               :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TPR3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CMD_DPIN_NDGE    0xf4310024
#define DDR_CTRL_RXI316_BACKEND_CMD_DPIN_NDGE_dft 0x83e00000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 : 17 ; /* bits 16:0 */
    ca_uint32_t BA                   :  4 ; /* bits 20:17 */
    ca_uint32_t WE_N                 :  1 ; /* bits 21:21 */
    ca_uint32_t CAS_N                :  1 ; /* bits 22:22 */
    ca_uint32_t RAS_N                :  1 ; /* bits 23:23 */
    ca_uint32_t CS_N                 :  1 ; /* bits 24:24 */
    ca_uint32_t ACT_N                :  1 ; /* bits 25:25 */
    ca_uint32_t PARITY               :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t CS_N_1               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CMD_DPIN_NDGE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CMD_DPIN         0xf4310028
#define DDR_CTRL_RXI316_BACKEND_CMD_DPIN_dft     0x83e00000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 : 17 ; /* bits 16:0 */
    ca_uint32_t BA                   :  4 ; /* bits 20:17 */
    ca_uint32_t WE_N                 :  1 ; /* bits 21:21 */
    ca_uint32_t CAS_N                :  1 ; /* bits 22:22 */
    ca_uint32_t RAS_N                :  1 ; /* bits 23:23 */
    ca_uint32_t CS_N                 :  1 ; /* bits 24:24 */
    ca_uint32_t ACT_N                :  1 ; /* bits 25:25 */
    ca_uint32_t PARITY               :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t CS_N_1               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CMD_DPIN_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TIE_DPIN         0xf431002c
#define DDR_CTRL_RXI316_BACKEND_TIE_DPIN_dft     0x60000013

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RST_N                :  1 ; /* bits 0:0 */
    ca_uint32_t CKE                  :  1 ; /* bits 1:1 */
    ca_uint32_t ODT                  :  1 ; /* bits 2:2 */
    ca_uint32_t TEN                  :  1 ; /* bits 3:3 */
    ca_uint32_t ALERT_N              :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t RST_N_1              :  1 ; /* bits 29:29 */
    ca_uint32_t CKE_1                :  1 ; /* bits 30:30 */
    ca_uint32_t ODT_1                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TIE_DPIN_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR_INFO          0xf4310030
#define DDR_CTRL_RXI316_BACKEND_MR_INFO_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_LAT               :  5 ; /* bits 4:0 */
    ca_uint32_t RD_LAT               :  5 ; /* bits 9:5 */
    ca_uint32_t ADD_LAT              :  5 ; /* bits 14:10 */
    ca_uint32_t t_DQSCK_MAX          :  5 ; /* bits 19:15 */
    ca_uint32_t nWR                  :  5 ; /* bits 24:20 */
    ca_uint32_t RTP                  :  5 ; /* bits 29:25 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR_INFO_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR0              0xf4310034
#define DDR_CTRL_RXI316_BACKEND_MR0_dft          0x00000aa2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR0                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR1              0xf4310038
#define DDR_CTRL_RXI316_BACKEND_MR1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR1                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR2              0xf431003c
#define DDR_CTRL_RXI316_BACKEND_MR2_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR2                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR3              0xf4310040
#define DDR_CTRL_RXI316_BACKEND_MR3_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR3                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR4              0xf4310044
#define DDR_CTRL_RXI316_BACKEND_MR4_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR4                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR5              0xf4310048
#define DDR_CTRL_RXI316_BACKEND_MR5_dft          0x00000400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR5                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR6              0xf431004c
#define DDR_CTRL_RXI316_BACKEND_MR6_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR6                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR11             0xf4310050
#define DDR_CTRL_RXI316_BACKEND_MR11_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR11                 : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR11_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR12             0xf4310054
#define DDR_CTRL_RXI316_BACKEND_MR12_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR12                 : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR12_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR13             0xf4310058
#define DDR_CTRL_RXI316_BACKEND_MR13_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR13                 : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR13_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR14             0xf431005c
#define DDR_CTRL_RXI316_BACKEND_MR14_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR14                 : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR14_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MR22             0xf4310060
#define DDR_CTRL_RXI316_BACKEND_MR22_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MR22                 : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MR22_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TPR4             0xf4310090
#define DDR_CTRL_RXI316_BACKEND_TPR4_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tRP_MSB              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t tRFCpb               :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TPR4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_TPR5             0xf4310094
#define DDR_CTRL_RXI316_BACKEND_TPR5_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_HOLD             :  8 ; /* bits 7:0 */
    ca_uint32_t ODT_DLY              :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_TPR5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DPDRI            0xf43100c0
#define DDR_CTRL_RXI316_BACKEND_DPDRI_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPDRI                :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DPDRI_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DPDR             0xf43100c4
#define DDR_CTRL_RXI316_BACKEND_DPDR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPDR                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DPDR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_ISR              0xf43100c8
#define DDR_CTRL_RXI316_BACKEND_ISR_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ALERT                :  1 ; /* bits 0:0 */
    ca_uint32_t ADDR_OVER_SIZE       :  1 ; /* bits 1:1 */
    ca_uint32_t WAR_HZD              :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t INTR_ID              :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_ISR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_IMR              0xf43100cc
#define DDR_CTRL_RXI316_BACKEND_IMR_dft          0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INTR_MASK            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_IMR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BCR              0xf43100d0
#define DDR_CTRL_RXI316_BACKEND_BCR_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t STOP                 :  1 ; /* bits 0:0 */
    ca_uint32_t CMP                  :  1 ; /* bits 1:1 */
    ca_uint32_t LOOP                 :  1 ; /* bits 2:2 */
    ca_uint32_t DIS_MSK              :  1 ; /* bits 3:3 */
    ca_uint32_t AT_ERR_STOP          :  1 ; /* bits 4:4 */
    ca_uint32_t CRR                  :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t HW_PAT               :  1 ; /* bits 7:7 */
    ca_uint32_t FUS_CMD              :  1 ; /* bits 8:8 */
    ca_uint32_t FUS_WD               :  1 ; /* bits 9:9 */
    ca_uint32_t FUS_RG               :  1 ; /* bits 10:10 */
    ca_uint32_t FUS_RD               :  1 ; /* bits 11:11 */
    ca_uint32_t RELOAD_SRAM          :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t LOOP_CNT             :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd3               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BCR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BECC             0xf43100d4
#define DDR_CTRL_RXI316_BACKEND_BECC_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMP_MBIT             :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t ERR_BIT              :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BECC_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BCM              0xf43100d8
#define DDR_CTRL_RXI316_BACKEND_BCM_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMP_MBIT             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BCM_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BST              0xf43100dc
#define DDR_CTRL_RXI316_BACKEND_BST_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ERR_FST_TH           : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t RD_IN_ST             :  1 ; /* bits 15:15 */
    ca_uint32_t ERR_CNT              : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BST_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BSRAM0           0xf43100e0
#define DDR_CTRL_RXI316_BACKEND_BSRAM0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMD_CNT              : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t WD_CNT               : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BSRAM0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BSRAM1           0xf43100e4
#define DDR_CTRL_RXI316_BACKEND_BSRAM1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RG_CNT               : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t RD_CNT               : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BSRAM1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BER              0xf43100e8
#define DDR_CTRL_RXI316_BACKEND_BER_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ERR_BIT              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BER_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BEXPC            0xf43100ec
#define DDR_CTRL_RXI316_BACKEND_BEXPC_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMD_EXPC_CNT         : 10 ; /* bits 9:0 */
    ca_uint32_t WD_EXPC_CNT          : 10 ; /* bits 19:10 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t RD_EXPC_CNT          : 10 ; /* bits 30:21 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BEXPC_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_SVN_ID           0xf43100f4
#define DDR_CTRL_RXI316_BACKEND_SVN_ID_dft       0x10260548

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RELEASE_DATE         : 16 ; /* bits 15:0 */
    ca_uint32_t GIT_NUM              : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_SVN_ID_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_IDR              0xf43100f8
#define DDR_CTRL_RXI316_BACKEND_IDR_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PCTL_DEF             : 16 ; /* bits 15:0 */
    ca_uint32_t CR_VER               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_IDR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MSG              0xf43100fc
#define DDR_CTRL_RXI316_BACKEND_MSG_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSG                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MSG_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DPERF0           0xf4310100
#define DDR_CTRL_RXI316_BACKEND_DPERF0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DIW                  : 16 ; /* bits 15:0 */
    ca_uint32_t PHYC_INV             :  8 ; /* bits 23:16 */
    ca_uint32_t PHYC_REF_NUM         :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DPERF0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_MISC             0xf4310224
#define DDR_CTRL_RXI316_BACKEND_MISC_dft         0x00000063

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PAGE_Size            :  4 ; /* bits 3:0 */
    ca_uint32_t BANK_SIZE            :  2 ; /* bits 5:4 */
    ca_uint32_t BST_SIZE             :  3 ; /* bits 8:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t HYBR_SIZE            :  2 ; /* bits 11:10 */
    ca_uint32_t rsrvd2               : 18 ;
    ca_uint32_t ONE_BANK_EN          :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_MISC_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CHOP_SIZE        0xf4310228
#define DDR_CTRL_RXI316_BACKEND_CHOP_SIZE_dft    0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CR_CHOP_SIZE         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CHOP_SIZE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DRAM_SIZE        0xf4310230
#define DDR_CTRL_RXI316_BACKEND_DRAM_SIZE_dft    0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DRAM_SIZE            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DRAM_SIZE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_DSIZE_UP_4GB     0xf4310234
#define DDR_CTRL_RXI316_BACKEND_DSIZE_UP_4GB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DSIZE_8GB            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_DSIZE_UP_4GB_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BUS_WRAP_IDR     0xf43102a0
#define DDR_CTRL_RXI316_BACKEND_BUS_WRAP_IDR_dft 0x00010316

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CR_WRAP_DEF          : 16 ; /* bits 15:0 */
    ca_uint32_t CR_WRAP_IDR          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BUS_WRAP_IDR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BUS_WRAP_SVN     0xf43102a4
#define DDR_CTRL_RXI316_BACKEND_BUS_WRAP_SVN_dft 0x10260548

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RELEASE_DATE         : 16 ; /* bits 15:0 */
    ca_uint32_t SVN_NUM              : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BUS_WRAP_SVN_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_ICG_EN           0xf4310300
#define DDR_CTRL_RXI316_BACKEND_ICG_EN_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CGATE_EN_BW          :  1 ; /* bits 0:0 */
    ca_uint32_t CGATE_EN_CR          :  1 ; /* bits 1:1 */
    ca_uint32_t CGATE_EN_RCB         :  1 ; /* bits 2:2 */
    ca_uint32_t CGATE_EN_WCB         :  1 ; /* bits 3:3 */
    ca_uint32_t CGATE_EN_WDB         :  1 ; /* bits 4:4 */
    ca_uint32_t CGATE_EN_RDB         :  1 ; /* bits 5:5 */
    ca_uint32_t CGATE_EN_QOS         :  1 ; /* bits 6:6 */
    ca_uint32_t CGATE_EN_PCR         :  1 ; /* bits 7:7 */
    ca_uint32_t CGATE_EN_DCKE        :  1 ; /* bits 8:8 */
    ca_uint32_t CGATE_EN_DC          :  1 ; /* bits 9:9 */
    ca_uint32_t CGATE_EN_TIC         :  1 ; /* bits 10:10 */
    ca_uint32_t CGATE_EN_INIT        :  1 ; /* bits 11:11 */
    ca_uint32_t CGATE_EN_REF         :  1 ; /* bits 12:12 */
    ca_uint32_t CGATE_EN_SREF        :  1 ; /* bits 13:13 */
    ca_uint32_t CGATE_EN_DPIN        :  1 ; /* bits 14:14 */
    ca_uint32_t CGATE_EN_BSTC        :  1 ; /* bits 15:15 */
    ca_uint32_t DMY                  : 14 ; /* bits 29:16 */
    ca_uint32_t CGATE_EN_PROF        :  1 ; /* bits 30:30 */
    ca_uint32_t CGATE_EN_SRAM        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_ICG_EN_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_ROW_REMAP0       0xf4310400
#define DDR_CTRL_RXI316_BACKEND_ROW_REMAP0_dft   0x88888888

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ROW0_REMAP           :  4 ; /* bits 3:0 */
    ca_uint32_t ROW1_REMAP           :  4 ; /* bits 7:4 */
    ca_uint32_t ROW2_REMAP           :  4 ; /* bits 11:8 */
    ca_uint32_t ROW3_REMAP           :  4 ; /* bits 15:12 */
    ca_uint32_t ROW4_REMAP           :  4 ; /* bits 19:16 */
    ca_uint32_t ROW5_REMAP           :  4 ; /* bits 23:20 */
    ca_uint32_t ROW6_REMAP           :  4 ; /* bits 27:24 */
    ca_uint32_t ROW7_REMAP           :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_ROW_REMAP0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_ROW_REMAP1       0xf4310404
#define DDR_CTRL_RXI316_BACKEND_ROW_REMAP1_dft   0x88888888

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ROW8_REMAP           :  4 ; /* bits 3:0 */
    ca_uint32_t ROW9_REMAP           :  4 ; /* bits 7:4 */
    ca_uint32_t ROW10_REMAP          :  4 ; /* bits 11:8 */
    ca_uint32_t ROW11_REMAP          :  4 ; /* bits 15:12 */
    ca_uint32_t ROW12_REMAP          :  4 ; /* bits 19:16 */
    ca_uint32_t ROW13_REMAP          :  4 ; /* bits 23:20 */
    ca_uint32_t ROW14_REMAP          :  4 ; /* bits 27:24 */
    ca_uint32_t ROW15_REMAP          :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_ROW_REMAP1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_ROW_REMAP2       0xf4310408
#define DDR_CTRL_RXI316_BACKEND_ROW_REMAP2_dft   0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ROW16_REMAP          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_ROW_REMAP2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BANK_REMAP0      0xf431040c
#define DDR_CTRL_RXI316_BACKEND_BANK_REMAP0_dft  0x00002928

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BA0_REMAP            :  5 ; /* bits 4:0 */
    ca_uint32_t BA1_REMAP            :  5 ; /* bits 9:5 */
    ca_uint32_t BA2_REMAP            :  5 ; /* bits 14:10 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BANK_REMAP0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_COLU_REMAP0      0xf4310410
#define DDR_CTRL_RXI316_BACKEND_COLU_REMAP0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COL2_REMAP           :  4 ; /* bits 3:0 */
    ca_uint32_t COL3_REMAP           :  4 ; /* bits 7:4 */
    ca_uint32_t COL4_REMAP           :  4 ; /* bits 11:8 */
    ca_uint32_t COL5_REMAP           :  4 ; /* bits 15:12 */
    ca_uint32_t COL6_REMAP           :  4 ; /* bits 19:16 */
    ca_uint32_t COL7_REMAP           :  4 ; /* bits 23:20 */
    ca_uint32_t COL8_REMAP           :  4 ; /* bits 27:24 */
    ca_uint32_t COL9_REMAP           :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_COLU_REMAP0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_COLU_REMAP1      0xf4310414
#define DDR_CTRL_RXI316_BACKEND_COLU_REMAP1_dft  0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COL10_REMAP          :  4 ; /* bits 3:0 */
    ca_uint32_t COL11_REMAP          :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_COLU_REMAP1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_RANK_REMAP0      0xf4310418
#define DDR_CTRL_RXI316_BACKEND_RANK_REMAP0_dft  0x0000000b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RA_REMAP             :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_RANK_REMAP0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CH_REMAP0        0xf431041c
#define DDR_CTRL_RXI316_BACKEND_CH_REMAP0_dft    0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CH_REMAP             :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CH_REMAP0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BG_REMAP0        0xf4310420
#define DDR_CTRL_RXI316_BACKEND_BG_REMAP0_dft    0x0000016a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BG0_REMAP            :  5 ; /* bits 4:0 */
    ca_uint32_t BG1_REMAP            :  5 ; /* bits 9:5 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BG_REMAP0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_ADDR_REMAP_CTRL  0xf4310424
#define DDR_CTRL_RXI316_BACKEND_ADDR_REMAP_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NONB_DSIZE           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_ADDR_REMAP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_SLOT_PARK        0xf4310460
#define DDR_CTRL_RXI316_BACKEND_SLOT_PARK_dft    0x00400000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PERF_PARK            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t IDLE_WINOW           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_SLOT_PARK_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_SLOT_STARVE      0xf4310464
#define DDR_CTRL_RXI316_BACKEND_SLOT_STARVE_dft  0xff020104

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPW_STARVE_CYC       :  8 ; /* bits 7:0 */
    ca_uint32_t HPR_STARVE_CYC       :  8 ; /* bits 15:8 */
    ca_uint32_t LPR_STARVE_CYC       :  8 ; /* bits 23:16 */
    ca_uint32_t BASE_STARVE_CYC      :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_SLOT_STARVE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_SLOT_CNTR        0xf4310468
#define DDR_CTRL_RXI316_BACKEND_SLOT_CNTR_dft    0x00201020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPW_ISU_LMT          :  8 ; /* bits 7:0 */
    ca_uint32_t HPR_ISU_LMT          :  8 ; /* bits 15:8 */
    ca_uint32_t LPR_ISU_LMT          :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_SLOT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_EXP_CTRL         0xf431046c
#define DDR_CTRL_RXI316_BACKEND_EXP_CTRL_dft     0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t EXP_BASE             :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_EXP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_HZD_CTRL0        0xf4310470
#define DDR_CTRL_RXI316_BACKEND_HZD_CTRL0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WHZD_THD             :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t RHZD_THD             :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_HZD_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_HZD_CTRL1        0xf4310474
#define DDR_CTRL_RXI316_BACKEND_HZD_CTRL1_dft    0x0fff0fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WHZD_CRDT_CYC        : 12 ; /* bits 11:0 */
    ca_uint32_t WHZD_CRDT_NUM        :  4 ; /* bits 15:12 */
    ca_uint32_t RHZD_CRDT_CYC        : 12 ; /* bits 27:16 */
    ca_uint32_t RHZD_CRDT_NUM        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_HZD_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBCTL0           0xf4310480
#define DDR_CTRL_RXI316_BACKEND_CBCTL0_dft       0x000f0020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPR_FREESLOT_NUM     :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t LPR_RMW_RUN_LEN      :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBCTL0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBCTL1           0xf4310484
#define DDR_CTRL_RXI316_BACKEND_CBCTL1_dft       0x000f0e00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DIS_WMG              :  1 ; /* bits 0:0 */
    ca_uint32_t PAGEOPEN             :  1 ; /* bits 1:1 */
    ca_uint32_t PAGE_HIT_THR_RD_EN   :  1 ; /* bits 2:2 */
    ca_uint32_t PAGE_HIT_THR_WR_EN   :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t W_HAZ_EXP_CTRL       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t LPW_RMW_RUN_LEN      :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t PAGE_HIT_THR_RD      :  4 ; /* bits 27:24 */
    ca_uint32_t PAGE_HIT_THR_WR      :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBCTL1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBSTARVE0        0xf4310488
#define DDR_CTRL_RXI316_BACKEND_CBSTARVE0_dft    0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPR_MAX_STARVE       : 12 ; /* bits 11:0 */
    ca_uint32_t LPR_STARVE_DIS       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBSTARVE0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBSTARVE1        0xf431048c
#define DDR_CTRL_RXI316_BACKEND_CBSTARVE1_dft    0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t HPR_MAX_STARVE       : 12 ; /* bits 11:0 */
    ca_uint32_t HPR_STARVE_DIS       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBSTARVE1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBSTARVE2        0xf4310490
#define DDR_CTRL_RXI316_BACKEND_CBSTARVE2_dft    0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPW_MAX_STARVE       : 12 ; /* bits 11:0 */
    ca_uint32_t LPW_STARVE_DIS       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBSTARVE2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBSTARVE3        0xf4310494
#define DDR_CTRL_RXI316_BACKEND_CBSTARVE3_dft    0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPR_RMW_MAX_STARVE   : 12 ; /* bits 11:0 */
    ca_uint32_t LPR_RMW_STARVE_DIS   :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBSTARVE3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_CBSTARVE4        0xf4310498
#define DDR_CTRL_RXI316_BACKEND_CBSTARVE4_dft    0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LPW_RMW_MAX_STARVE   : 12 ; /* bits 11:0 */
    ca_uint32_t LPW_RMW_STARVE_DIS   :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_CBSTARVE4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_BACKEND_BANK_SCH_CTRL    0xf43104a0
#define DDR_CTRL_RXI316_BACKEND_BANK_SCH_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BA_SEL_LMT           :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_BACKEND_BANK_SCH_CTRL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* RXI316_BACKEND */
#ifndef __ASSEMBLER__
typedef struct {
  DDR_CTRL_RXI316_BACKEND_CCR_t            CCR;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DDR_CTRL_RXI316_BACKEND_DCR_t            DCR;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DDR_CTRL_RXI316_BACKEND_IOCR_t           IOCR;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DDR_CTRL_RXI316_BACKEND_CSR_t            CSR;                           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DDR_CTRL_RXI316_BACKEND_DRR_t            DRR;                           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DDR_CTRL_RXI316_BACKEND_TPR0_t           TPR0;                          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DDR_CTRL_RXI316_BACKEND_TPR1_t           TPR1;                          /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DDR_CTRL_RXI316_BACKEND_TPR2_t           TPR2;                          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DDR_CTRL_RXI316_BACKEND_TPR3_t           TPR3;                          /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DDR_CTRL_RXI316_BACKEND_CMD_DPIN_NDGE_t  CMD_DPIN_NDGE;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DDR_CTRL_RXI316_BACKEND_CMD_DPIN_t       CMD_DPIN;                      /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DDR_CTRL_RXI316_BACKEND_TIE_DPIN_t       TIE_DPIN;                      /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DDR_CTRL_RXI316_BACKEND_MR_INFO_t        MR_INFO;                       /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DDR_CTRL_RXI316_BACKEND_MR0_t            MR0;                           /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DDR_CTRL_RXI316_BACKEND_MR1_t            MR1;                           /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DDR_CTRL_RXI316_BACKEND_MR2_t            MR2;                           /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DDR_CTRL_RXI316_BACKEND_MR3_t            MR3;                           /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DDR_CTRL_RXI316_BACKEND_MR4_t            MR4;                           /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  DDR_CTRL_RXI316_BACKEND_MR5_t            MR5;                           /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  DDR_CTRL_RXI316_BACKEND_MR6_t            MR6;                           /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  DDR_CTRL_RXI316_BACKEND_MR11_t           MR11;                          /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  DDR_CTRL_RXI316_BACKEND_MR12_t           MR12;                          /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  DDR_CTRL_RXI316_BACKEND_MR13_t           MR13;                          /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  DDR_CTRL_RXI316_BACKEND_MR14_t           MR14;                          /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  DDR_CTRL_RXI316_BACKEND_MR22_t           MR22;                          /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[47];
  DDR_CTRL_RXI316_BACKEND_TPR4_t           TPR4;                          /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd26[3];
  DDR_CTRL_RXI316_BACKEND_TPR5_t           TPR5;                          /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd27[43];
  DDR_CTRL_RXI316_BACKEND_DPDRI_t          DPDRI;                         /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd28[3];
  DDR_CTRL_RXI316_BACKEND_DPDR_t           DPDR;                          /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd29[3];
  DDR_CTRL_RXI316_BACKEND_ISR_t            ISR;                           /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd30[3];
  DDR_CTRL_RXI316_BACKEND_IMR_t            IMR;                           /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd31[3];
  DDR_CTRL_RXI316_BACKEND_BCR_t            BCR;                           /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd32[3];
  DDR_CTRL_RXI316_BACKEND_BECC_t           BECC;                          /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd33[3];
  DDR_CTRL_RXI316_BACKEND_BCM_t            BCM;                           /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd34[3];
  DDR_CTRL_RXI316_BACKEND_BST_t            BST;                           /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd35[3];
  DDR_CTRL_RXI316_BACKEND_BSRAM0_t         BSRAM0;                        /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd36[3];
  DDR_CTRL_RXI316_BACKEND_BSRAM1_t         BSRAM1;                        /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd37[3];
  DDR_CTRL_RXI316_BACKEND_BER_t            BER;                           /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd38[3];
  DDR_CTRL_RXI316_BACKEND_BEXPC_t          BEXPC;                         /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd39[7];
  DDR_CTRL_RXI316_BACKEND_SVN_ID_t         SVN_ID;                        /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd40[3];
  DDR_CTRL_RXI316_BACKEND_IDR_t            IDR;                           /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd41[3];
  DDR_CTRL_RXI316_BACKEND_MSG_t            MSG;                           /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd42[3];
  DDR_CTRL_RXI316_BACKEND_DPERF0_t         DPERF0;                        /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd43[291];
  DDR_CTRL_RXI316_BACKEND_MISC_t           MISC;                          /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd44[3];
  DDR_CTRL_RXI316_BACKEND_CHOP_SIZE_t      CHOP_SIZE;                     /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd45[7];
  DDR_CTRL_RXI316_BACKEND_DRAM_SIZE_t      DRAM_SIZE;                     /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd46[3];
  DDR_CTRL_RXI316_BACKEND_DSIZE_UP_4GB_t   DSIZE_UP_4GB;                  /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd47[107];
  DDR_CTRL_RXI316_BACKEND_BUS_WRAP_IDR_t   BUS_WRAP_IDR;                  /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd48[3];
  DDR_CTRL_RXI316_BACKEND_BUS_WRAP_SVN_t   BUS_WRAP_SVN;                  /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd49[91];
  DDR_CTRL_RXI316_BACKEND_ICG_EN_t         ICG_EN;                        /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd50[255];
  DDR_CTRL_RXI316_BACKEND_ROW_REMAP0_t     ROW_REMAP0;                    /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd51[3];
  DDR_CTRL_RXI316_BACKEND_ROW_REMAP1_t     ROW_REMAP1;                    /* addr: 0x00000404 */
  ca_uint32_t                              rsrvd52[3];
  DDR_CTRL_RXI316_BACKEND_ROW_REMAP2_t     ROW_REMAP2;                    /* addr: 0x00000408 */
  ca_uint32_t                              rsrvd53[3];
  DDR_CTRL_RXI316_BACKEND_BANK_REMAP0_t    BANK_REMAP0;                   /* addr: 0x0000040c */
  ca_uint32_t                              rsrvd54[3];
  DDR_CTRL_RXI316_BACKEND_COLU_REMAP0_t    COLU_REMAP0;                   /* addr: 0x00000410 */
  ca_uint32_t                              rsrvd55[3];
  DDR_CTRL_RXI316_BACKEND_COLU_REMAP1_t    COLU_REMAP1;                   /* addr: 0x00000414 */
  ca_uint32_t                              rsrvd56[3];
  DDR_CTRL_RXI316_BACKEND_RANK_REMAP0_t    RANK_REMAP0;                   /* addr: 0x00000418 */
  ca_uint32_t                              rsrvd57[3];
  DDR_CTRL_RXI316_BACKEND_CH_REMAP0_t      CH_REMAP0;                     /* addr: 0x0000041c */
  ca_uint32_t                              rsrvd58[3];
  DDR_CTRL_RXI316_BACKEND_BG_REMAP0_t      BG_REMAP0;                     /* addr: 0x00000420 */
  ca_uint32_t                              rsrvd59[3];
  DDR_CTRL_RXI316_BACKEND_ADDR_REMAP_CTRL_t ADDR_REMAP_CTRL;               /* addr: 0x00000424 */
  ca_uint32_t                              rsrvd60[59];
  DDR_CTRL_RXI316_BACKEND_SLOT_PARK_t      SLOT_PARK;                     /* addr: 0x00000460 */
  ca_uint32_t                              rsrvd61[3];
  DDR_CTRL_RXI316_BACKEND_SLOT_STARVE_t    SLOT_STARVE;                   /* addr: 0x00000464 */
  ca_uint32_t                              rsrvd62[3];
  DDR_CTRL_RXI316_BACKEND_SLOT_CNTR_t      SLOT_CNTR;                     /* addr: 0x00000468 */
  ca_uint32_t                              rsrvd63[3];
  DDR_CTRL_RXI316_BACKEND_EXP_CTRL_t       EXP_CTRL;                      /* addr: 0x0000046c */
  ca_uint32_t                              rsrvd64[3];
  DDR_CTRL_RXI316_BACKEND_HZD_CTRL0_t      HZD_CTRL0;                     /* addr: 0x00000470 */
  ca_uint32_t                              rsrvd65[3];
  DDR_CTRL_RXI316_BACKEND_HZD_CTRL1_t      HZD_CTRL1;                     /* addr: 0x00000474 */
  ca_uint32_t                              rsrvd66[11];
  DDR_CTRL_RXI316_BACKEND_CBCTL0_t         CBCTL0;                        /* addr: 0x00000480 */
  ca_uint32_t                              rsrvd67[3];
  DDR_CTRL_RXI316_BACKEND_CBCTL1_t         CBCTL1;                        /* addr: 0x00000484 */
  ca_uint32_t                              rsrvd68[3];
  DDR_CTRL_RXI316_BACKEND_CBSTARVE0_t      CBSTARVE0;                     /* addr: 0x00000488 */
  ca_uint32_t                              rsrvd69[3];
  DDR_CTRL_RXI316_BACKEND_CBSTARVE1_t      CBSTARVE1;                     /* addr: 0x0000048c */
  ca_uint32_t                              rsrvd70[3];
  DDR_CTRL_RXI316_BACKEND_CBSTARVE2_t      CBSTARVE2;                     /* addr: 0x00000490 */
  ca_uint32_t                              rsrvd71[3];
  DDR_CTRL_RXI316_BACKEND_CBSTARVE3_t      CBSTARVE3;                     /* addr: 0x00000494 */
  ca_uint32_t                              rsrvd72[3];
  DDR_CTRL_RXI316_BACKEND_CBSTARVE4_t      CBSTARVE4;                     /* addr: 0x00000498 */
  ca_uint32_t                              rsrvd73[7];
  DDR_CTRL_RXI316_BACKEND_BANK_SCH_CTRL_t  BANK_SCH_CTRL;                 /* addr: 0x000004a0 */
} DDR_CTRL_RXI316_RXI316_BACKEND_t;
#endif /* !__ASSEMBLER__ */


/*
 * RXI316_FRONTEND
 */

#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_0        0xf4311000
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_0_dft    0x00052316

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t design_name          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_1        0xf4311004
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_1_dft    0x00000100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t design_version       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_2        0xf4311008
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_2_dft    0x01000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t design_revision      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_3        0xf431100c
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_3_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t design_instance      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_4        0xf4311010
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_4_dft    0x00002020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t impl_year            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_5        0xf4311014
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_5_dft    0x10261946

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t impl_date            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_6        0xf4311018
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_6_dft    0x00521439

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t developer            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_7        0xf431101c
#define DDR_CTRL_RXI316_FRONTEND_FE_DIR_7_dft    0x00000316

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t proj_number          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_FE_DIR_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_PA    0xf4311100
#define DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_PA_dft 0x14040404

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aw_pagelimit_npri0   :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t aw_pagelimit_pri0    :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t ar_pagelimit_npri0   :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t ar_pagelimit_pri0    :  4 ; /* bits 27:24 */
    ca_uint32_t pagematch_enable     :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t forward_urgent       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_PA_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_RRB   0xf4311104
#define DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_RRB_dft 0x00002020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_num_lpr_entries_ch0 :  8 ; /* bits 7:0 */
    ca_uint32_t max_num_lpr_entries_ch1 :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_RRB_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_APC_CKG     0xf4311180
#define DDR_CTRL_RXI316_FRONTEND_CFG_APC_CKG_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CGATE_EN_PORT_AGEN   :  1 ; /* bits 0:0 */
    ca_uint32_t CGATE_EN_AW_FIFO     :  1 ; /* bits 1:1 */
    ca_uint32_t CGATE_EN_WD_FIFO     :  1 ; /* bits 2:2 */
    ca_uint32_t CGATE_EN_AW_MERGE    :  1 ; /* bits 3:3 */
    ca_uint32_t CGATE_EN_AW_REG1     :  1 ; /* bits 4:4 */
    ca_uint32_t CGATE_EN_AW_CHOP     :  1 ; /* bits 5:5 */
    ca_uint32_t CGATE_EN_AW_REG2     :  1 ; /* bits 6:6 */
    ca_uint32_t CGATE_EN_AW_PACK     :  1 ; /* bits 7:7 */
    ca_uint32_t CGATE_EN_AW_MAP      :  1 ; /* bits 8:8 */
    ca_uint32_t CGATE_EN_AR_MAP0     :  1 ; /* bits 9:9 */
    ca_uint32_t CGATE_EN_AR_QUEUE    :  1 ; /* bits 10:10 */
    ca_uint32_t CGATE_EN_AR_REG0     :  1 ; /* bits 11:11 */
    ca_uint32_t CGATE_EN_RD_FIFO0    :  1 ; /* bits 12:12 */
    ca_uint32_t CGATE_EN_AR_MERGE    :  1 ; /* bits 13:13 */
    ca_uint32_t CGATE_EN_AR_REG1     :  1 ; /* bits 14:14 */
    ca_uint32_t CGATE_EN_RD_FIFO1    :  1 ; /* bits 15:15 */
    ca_uint32_t CGATE_EN_AR_CHOP     :  1 ; /* bits 16:16 */
    ca_uint32_t CGATE_EN_AR_REG2     :  1 ; /* bits 17:17 */
    ca_uint32_t CGATE_EN_AR_MAP1     :  1 ; /* bits 18:18 */
    ca_uint32_t CGATE_EN_RD_FIFO2    :  1 ; /* bits 19:19 */
    ca_uint32_t CGATE_EN_AR_BB       :  1 ; /* bits 20:20 */
    ca_uint32_t CGATE_EN_AW_BB       :  1 ; /* bits 21:21 */
    ca_uint32_t CGATE_EN_WD_BB       :  1 ; /* bits 22:22 */
    ca_uint32_t DMY                  :  9 ; /* bits 31:23 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_APC_CKG_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_FE_CKG      0xf4311184
#define DDR_CTRL_RXI316_FRONTEND_CFG_FE_CKG_dft  0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CGATE_EN_PA0         :  1 ; /* bits 0:0 */
    ca_uint32_t CGATE_EN_PA1         :  1 ; /* bits 1:1 */
    ca_uint32_t CGATE_EN_RRB         :  1 ; /* bits 2:2 */
    ca_uint32_t CGATE_EN_DEFSLV      :  1 ; /* bits 3:3 */
    ca_uint32_t CGATE_EN_ERRLOG      :  1 ; /* bits 4:4 */
    ca_uint32_t CGATE_EN_REGBLK      :  1 ; /* bits 5:5 */
    ca_uint32_t CGATE_EN_DNSIZER0    :  1 ; /* bits 6:6 */
    ca_uint32_t CGATE_EN_DNSIZER1    :  1 ; /* bits 7:7 */
    ca_uint32_t DMY                  : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_FE_CKG_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_PLD0        0xf4311200
#define DDR_CTRL_RXI316_FRONTEND_ELR_PLD0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ERR_SRC              :  8 ; /* bits 7:0 */
    ca_uint32_t ERR_CMD              :  3 ; /* bits 10:8 */
    ca_uint32_t ERR_BSTTYPE          :  3 ; /* bits 13:11 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ERR_BSTLEN           :  8 ; /* bits 23:16 */
    ca_uint32_t ERR_BSTINDEX         :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_PLD0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_PLD1        0xf4311204
#define DDR_CTRL_RXI316_FRONTEND_ELR_PLD1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t ERR_SIZE             :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t ERR_MREQINFO         :  9 ; /* bits 31:23 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_PLD1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_ID          0xf4311208
#define DDR_CTRL_RXI316_FRONTEND_ELR_ID_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ERR_ID               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_ID_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_ADR0        0xf431120c
#define DDR_CTRL_RXI316_FRONTEND_ELR_ADR0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Lower_part_of_address : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_ADR0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_ADR1        0xf4311210
#define DDR_CTRL_RXI316_FRONTEND_ELR_ADR1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Higher_part_of_address : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_ADR1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_CODE        0xf4311214
#define DDR_CTRL_RXI316_FRONTEND_ELR_CODE_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Error_Core           :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_CODE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_ELR_CTRL        0xf431123c
#define DDR_CTRL_RXI316_FRONTEND_ELR_CTRL_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ELR_INTR_CLR         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_ELR_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_RQOS     0xf4311800
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_RQOS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rqos_map_level1      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rqos_map_level2      :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rqos_map_region0     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rqos_map_region1     :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t rqos_map_region2     :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_RQOS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_WQOS     0xf4311804
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_WQOS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wqos_map_level1      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t wqos_map_level2      :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t wqos_map_region0     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t wqos_map_region1     :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t wqos_map_region2     :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_WQOS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_TIMEOUT  0xf4311808
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rd_port_timeout_value :  3 ; /* bits 2:0 */
    ca_uint32_t wr_port_timeout_value :  3 ; /* bits 5:3 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_RDQUEUE  0xf431180c
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_RDQUEUE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t page_limitation      :  3 ; /* bits 2:0 */
    ca_uint32_t pagematch_lock       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_RDQUEUE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYL  0xf4311810
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expiry_time_low      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYH  0xf4311814
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expiry_time_high     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYH_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTCTRL 0xf4311818
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTCTRL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t block_command_request :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTCTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTSTATS 0xf4311820
#define DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTSTATS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t block_command_status :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTSTATS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_RQOS     0xf4311840
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_RQOS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rqos_map_level1      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rqos_map_level2      :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rqos_map_region0     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rqos_map_region1     :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t rqos_map_region2     :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_RQOS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_WQOS     0xf4311844
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_WQOS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wqos_map_level1      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t wqos_map_level2      :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t wqos_map_region0     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t wqos_map_region1     :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t wqos_map_region2     :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_WQOS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_TIMEOUT  0xf4311848
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rd_port_timeout_value :  3 ; /* bits 2:0 */
    ca_uint32_t wr_port_timeout_value :  3 ; /* bits 5:3 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_RDQUEUE  0xf431184c
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_RDQUEUE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t page_limitation      :  3 ; /* bits 2:0 */
    ca_uint32_t pagematch_lock       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_RDQUEUE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYL  0xf4311850
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expiry_time_low      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYH  0xf4311854
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expiry_time_high     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYH_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTCTRL 0xf4311858
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTCTRL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t block_command_request :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTCTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTSTATS 0xf4311860
#define DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTSTATS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t block_command_status :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTSTATS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_RQOS     0xf4311880
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_RQOS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rqos_map_level1      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rqos_map_level2      :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rqos_map_region0     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rqos_map_region1     :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t rqos_map_region2     :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_RQOS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_WQOS     0xf4311884
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_WQOS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wqos_map_level1      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t wqos_map_level2      :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t wqos_map_region0     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t wqos_map_region1     :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t wqos_map_region2     :  2 ; /* bits 25:24 */
    ca_uint32_t rsrvd5               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_WQOS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_TIMEOUT  0xf4311888
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rd_port_timeout_value :  3 ; /* bits 2:0 */
    ca_uint32_t wr_port_timeout_value :  3 ; /* bits 5:3 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_RDQUEUE  0xf431188c
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_RDQUEUE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t page_limitation      :  3 ; /* bits 2:0 */
    ca_uint32_t pagematch_lock       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_RDQUEUE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYL  0xf4311890
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expiry_time_low      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYH  0xf4311894
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expiry_time_high     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYH_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTCTRL 0xf4311898
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTCTRL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t block_command_request :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTCTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTSTATS 0xf43118a0
#define DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTSTATS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t block_command_status :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTSTATS_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* RXI316_FRONTEND */
#ifndef __ASSEMBLER__
typedef struct {
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_0_t      FE_DIR_0;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_1_t      FE_DIR_1;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_2_t      FE_DIR_2;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_3_t      FE_DIR_3;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_4_t      FE_DIR_4;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_5_t      FE_DIR_5;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_6_t      FE_DIR_6;                      /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DDR_CTRL_RXI316_FRONTEND_FE_DIR_7_t      FE_DIR_7;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[227];
  DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_PA_t  CFG_C0_FE_PA;                  /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd9[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_C0_FE_RRB_t CFG_C0_FE_RRB;                 /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd10[123];
  DDR_CTRL_RXI316_FRONTEND_CFG_APC_CKG_t   CFG_APC_CKG;                   /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd11[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_FE_CKG_t    CFG_FE_CKG;                    /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd12[123];
  DDR_CTRL_RXI316_FRONTEND_ELR_PLD0_t      ELR_PLD0;                      /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd13[3];
  DDR_CTRL_RXI316_FRONTEND_ELR_PLD1_t      ELR_PLD1;                      /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd14[3];
  DDR_CTRL_RXI316_FRONTEND_ELR_ID_t        ELR_ID;                        /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd15[3];
  DDR_CTRL_RXI316_FRONTEND_ELR_ADR0_t      ELR_ADR0;                      /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd16[3];
  DDR_CTRL_RXI316_FRONTEND_ELR_ADR1_t      ELR_ADR1;                      /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd17[3];
  DDR_CTRL_RXI316_FRONTEND_ELR_CODE_t      ELR_CODE;                      /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd18[39];
  DDR_CTRL_RXI316_FRONTEND_ELR_CTRL_t      ELR_CTRL;                      /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd19[1475];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_RQOS_t   CFG_P0_RQOS;                   /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd20[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_WQOS_t   CFG_P0_WQOS;                   /* addr: 0x00000804 */
  ca_uint32_t                              rsrvd21[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_TIMEOUT_t CFG_P0_TIMEOUT;                /* addr: 0x00000808 */
  ca_uint32_t                              rsrvd22[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_RDQUEUE_t CFG_P0_RDQUEUE;                /* addr: 0x0000080c */
  ca_uint32_t                              rsrvd23[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYL_t CFG_P0_EXPIRYL;                /* addr: 0x00000810 */
  ca_uint32_t                              rsrvd24[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_EXPIRYH_t CFG_P0_EXPIRYH;                /* addr: 0x00000814 */
  ca_uint32_t                              rsrvd25[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTCTRL_t CFG_P0_PORTCTRL;               /* addr: 0x00000818 */
  ca_uint32_t                              rsrvd26[7];
  DDR_CTRL_RXI316_FRONTEND_CFG_P0_PORTSTATS_t CFG_P0_PORTSTATS;              /* addr: 0x00000820 */
  ca_uint32_t                              rsrvd27[31];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_RQOS_t   CFG_P1_RQOS;                   /* addr: 0x00000840 */
  ca_uint32_t                              rsrvd28[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_WQOS_t   CFG_P1_WQOS;                   /* addr: 0x00000844 */
  ca_uint32_t                              rsrvd29[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_TIMEOUT_t CFG_P1_TIMEOUT;                /* addr: 0x00000848 */
  ca_uint32_t                              rsrvd30[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_RDQUEUE_t CFG_P1_RDQUEUE;                /* addr: 0x0000084c */
  ca_uint32_t                              rsrvd31[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYL_t CFG_P1_EXPIRYL;                /* addr: 0x00000850 */
  ca_uint32_t                              rsrvd32[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_EXPIRYH_t CFG_P1_EXPIRYH;                /* addr: 0x00000854 */
  ca_uint32_t                              rsrvd33[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTCTRL_t CFG_P1_PORTCTRL;               /* addr: 0x00000858 */
  ca_uint32_t                              rsrvd34[7];
  DDR_CTRL_RXI316_FRONTEND_CFG_P1_PORTSTATS_t CFG_P1_PORTSTATS;              /* addr: 0x00000860 */
  ca_uint32_t                              rsrvd35[31];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_RQOS_t   CFG_P2_RQOS;                   /* addr: 0x00000880 */
  ca_uint32_t                              rsrvd36[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_WQOS_t   CFG_P2_WQOS;                   /* addr: 0x00000884 */
  ca_uint32_t                              rsrvd37[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_TIMEOUT_t CFG_P2_TIMEOUT;                /* addr: 0x00000888 */
  ca_uint32_t                              rsrvd38[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_RDQUEUE_t CFG_P2_RDQUEUE;                /* addr: 0x0000088c */
  ca_uint32_t                              rsrvd39[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYL_t CFG_P2_EXPIRYL;                /* addr: 0x00000890 */
  ca_uint32_t                              rsrvd40[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_EXPIRYH_t CFG_P2_EXPIRYH;                /* addr: 0x00000894 */
  ca_uint32_t                              rsrvd41[3];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTCTRL_t CFG_P2_PORTCTRL;               /* addr: 0x00000898 */
  ca_uint32_t                              rsrvd42[7];
  DDR_CTRL_RXI316_FRONTEND_CFG_P2_PORTSTATS_t CFG_P2_PORTSTATS;              /* addr: 0x000008a0 */
} DDR_CTRL_RXI316_RXI316_FRONTEND_t;
#endif /* !__ASSEMBLER__ */


/*
 * RXI316_FUNCTION
 */

#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_0      0xf4312200
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base0            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_0       0xf4312204
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R0_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R0_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R0_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End0             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_0       0xf4312208
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R0_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_1      0xf431220c
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_1_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base1            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_1       0xf4312210
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R1_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R1_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R1_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End1             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_1       0xf4312214
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R1_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_2      0xf4312218
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_2_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base2            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_2       0xf431221c
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R2_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R2_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R2_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End2             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_2       0xf4312220
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R2_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_3      0xf4312224
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_3_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base3            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_3       0xf4312228
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_3_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R3_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R3_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R3_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End3             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_3       0xf431222c
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_3_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R3_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_4      0xf4312230
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_4_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base4            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_4       0xf4312234
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_4_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R4_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R4_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R4_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End4             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_4       0xf4312238
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_4_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R4_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_5      0xf431223c
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_5_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base5            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_5       0xf4312240
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_5_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R5_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R5_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R5_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End5             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_5       0xf4312244
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_5_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R5_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_6      0xf4312248
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_6_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base6            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_6       0xf431224c
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_6_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R6_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R6_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R6_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End6             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_6       0xf4312250
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_6_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R6_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_7      0xf4312254
#define DDR_CTRL_RXI316_FUNCTION_SEC_BASE_7_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t SEC_Base7            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_BASE_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_END_7       0xf4312258
#define DDR_CTRL_RXI316_FUNCTION_SEC_END_7_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R7_FUNC_EN       :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_R7_SECURE_EN     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t SEC_R7_FUNC_MODE     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t SEC_End7             : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_END_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_7       0xf431225c
#define DDR_CTRL_RXI316_FUNCTION_SEC_MSB_7_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_R7_MSB           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_MSB_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_0     0xf4312270
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_0          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_1     0xf4312274
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_1          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_2     0xf4312278
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_2          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_3     0xf431227c
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_3          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_4     0xf4312280
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_4          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_5     0xf4312284
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_5          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_6     0xf4312288
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_6          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_7     0xf431228c
#define DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_NONCE_7          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_0       0xf4312290
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_0            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_1       0xf4312294
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_1            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_2       0xf4312298
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_2            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_3       0xf431229c
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_3_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_3            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_4       0xf43122a0
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_4_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_4            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_5       0xf43122a4
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_5_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_5            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_6       0xf43122a8
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_6_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_6            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_7       0xf43122ac
#define DDR_CTRL_RXI316_FUNCTION_SEC_KEY_7_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_KEY_7            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_KEY_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_RXI316_FUNCTION_SEC_IDR         0xf43123fc
#define DDR_CTRL_RXI316_FUNCTION_SEC_IDR_dft     0x00008103

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEC_EN               :  1 ; /* bits 0:0 */
    ca_uint32_t SEC_CFG_MODE         :  2 ; /* bits 2:1 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t SEC_KEY_NUM          :  4 ; /* bits 11:8 */
    ca_uint32_t SEC_CONF_NUM         :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_RXI316_FUNCTION_SEC_IDR_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* RXI316_FUNCTION */
#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              rsrvd1[512];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_0_t    SEC_BASE_0;                    /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd2[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_0_t     SEC_END_0;                     /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd3[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_0_t     SEC_MSB_0;                     /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd4[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_1_t    SEC_BASE_1;                    /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd5[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_1_t     SEC_END_1;                     /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd6[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_1_t     SEC_MSB_1;                     /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd7[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_2_t    SEC_BASE_2;                    /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd8[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_2_t     SEC_END_2;                     /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd9[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_2_t     SEC_MSB_2;                     /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd10[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_3_t    SEC_BASE_3;                    /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd11[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_3_t     SEC_END_3;                     /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd12[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_3_t     SEC_MSB_3;                     /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd13[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_4_t    SEC_BASE_4;                    /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd14[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_4_t     SEC_END_4;                     /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd15[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_4_t     SEC_MSB_4;                     /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd16[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_5_t    SEC_BASE_5;                    /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd17[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_5_t     SEC_END_5;                     /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd18[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_5_t     SEC_MSB_5;                     /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd19[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_6_t    SEC_BASE_6;                    /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd20[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_6_t     SEC_END_6;                     /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd21[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_6_t     SEC_MSB_6;                     /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd22[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_BASE_7_t    SEC_BASE_7;                    /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd23[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_END_7_t     SEC_END_7;                     /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd24[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_MSB_7_t     SEC_MSB_7;                     /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd25[19];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_0_t   SEC_NONCE_0;                   /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd26[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_1_t   SEC_NONCE_1;                   /* addr: 0x00000274 */
  ca_uint32_t                              rsrvd27[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_2_t   SEC_NONCE_2;                   /* addr: 0x00000278 */
  ca_uint32_t                              rsrvd28[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_3_t   SEC_NONCE_3;                   /* addr: 0x0000027c */
  ca_uint32_t                              rsrvd29[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_4_t   SEC_NONCE_4;                   /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd30[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_5_t   SEC_NONCE_5;                   /* addr: 0x00000284 */
  ca_uint32_t                              rsrvd31[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_6_t   SEC_NONCE_6;                   /* addr: 0x00000288 */
  ca_uint32_t                              rsrvd32[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_NONCE_7_t   SEC_NONCE_7;                   /* addr: 0x0000028c */
  ca_uint32_t                              rsrvd33[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_0_t     SEC_KEY_0;                     /* addr: 0x00000290 */
  ca_uint32_t                              rsrvd34[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_1_t     SEC_KEY_1;                     /* addr: 0x00000294 */
  ca_uint32_t                              rsrvd35[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_2_t     SEC_KEY_2;                     /* addr: 0x00000298 */
  ca_uint32_t                              rsrvd36[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_3_t     SEC_KEY_3;                     /* addr: 0x0000029c */
  ca_uint32_t                              rsrvd37[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_4_t     SEC_KEY_4;                     /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd38[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_5_t     SEC_KEY_5;                     /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd39[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_6_t     SEC_KEY_6;                     /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd40[3];
  DDR_CTRL_RXI316_FUNCTION_SEC_KEY_7_t     SEC_KEY_7;                     /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd41[335];
  DDR_CTRL_RXI316_FUNCTION_SEC_IDR_t       SEC_IDR;                       /* addr: 0x000003fc */
} DDR_CTRL_RXI316_RXI316_FUNCTION_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* RXI316 */

#ifndef __ASSEMBLER__
typedef struct {
  DDR_CTRL_RXI316_RXI316_BACKEND_t         RXI316_BACKEND;                /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3503];
  DDR_CTRL_RXI316_RXI316_FRONTEND_t        RXI316_FRONTEND;               /* addr: 0x00001000 */
  ca_uint32_t                              rsrvd2[2991];
  DDR_CTRL_RXI316_RXI316_FUNCTION_t        RXI316_FUNCTION;               /* addr: 0x00002000 */
} DDR_CTRL_RXI316_t;
#endif /* !__ASSEMBLER__ */


/*
 * DPI
 */

#define DDR_CTRL_DPI_CRT_CTL                     0xf4313000
#define DDR_CTRL_DPI_CRT_CTL_dft                 0x0c0cb821

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DDR3_MODE        :  1 ; /* bits 0:0 */
    ca_uint32_t DPI_DDR2_EN          :  1 ; /* bits 1:1 */
    ca_uint32_t DPI_DAT_RATE_SEL     :  1 ; /* bits 2:2 */
    ca_uint32_t DPI_LPDDR_EN         :  1 ; /* bits 3:3 */
    ca_uint32_t PIN_MUX_MODE         :  1 ; /* bits 4:4 */
    ca_uint32_t PIN_MUX_DDR3         :  1 ; /* bits 5:5 */
    ca_uint32_t PIN_MUX_DDR3_MCM_BYTE01 :  1 ; /* bits 6:6 */
    ca_uint32_t PIN_MUX_DDR3_MCM_BYTE23 :  1 ; /* bits 7:7 */
    ca_uint32_t PIN_MUX_DDR4_9619C   :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CKE_VALUE            :  1 ; /* bits 10:10 */
    ca_uint32_t FORCE_CKE            :  1 ; /* bits 11:11 */
    ca_uint32_t ZQ_DDR3_MODE         :  1 ; /* bits 12:12 */
    ca_uint32_t CS_1_VALUE           :  1 ; /* bits 13:13 */
    ca_uint32_t FORCE_CS_1           :  1 ; /* bits 14:14 */
    ca_uint32_t CS_VALUE             :  1 ; /* bits 15:15 */
    ca_uint32_t FORCE_CS             :  1 ; /* bits 16:16 */
    ca_uint32_t CKE_1_VALUE          :  1 ; /* bits 17:17 */
    ca_uint32_t FORCE_CKE_1          :  1 ; /* bits 18:18 */
    ca_uint32_t CA_DDR3_MODE         :  1 ; /* bits 19:19 */
    ca_uint32_t FIFO_RST_INI_RX      :  3 ; /* bits 22:20 */
    ca_uint32_t FIFO_RST_INI_TX      :  3 ; /* bits 25:23 */
    ca_uint32_t RSTN_VALUE           :  1 ; /* bits 26:26 */
    ca_uint32_t FORCE_RSTN           :  1 ; /* bits 27:27 */
    ca_uint32_t CLK_TEN_MODE         :  1 ; /* bits 28:28 */
    ca_uint32_t CLK_TEN_VALUE        :  1 ; /* bits 29:29 */
    ca_uint32_t MCK_CKE_SEL          :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CRT_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL0                    0xf4313004
#define DDR_CTRL_DPI_PLL_CTL0_dft                0x00200000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_MCK_CLK_EN       : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t CA_AFIFO_DCG_CNT     :  3 ; /* bits 22:20 */
    ca_uint32_t CA_AFIFO_DCG_EN      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t TMUX_DCG_EN          :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL1                    0xf4313008
#define DDR_CTRL_DPI_PLL_CTL1_dft                0x20000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_OESYNC_OP_SEL    : 13 ; /* bits 12:0 */
    ca_uint32_t DPI_OESYNC_OP_SEL_FIX :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t DPI_CLK_OE           :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t DPI_REG_CRT_PWROFF_DIS :  1 ; /* bits 29:29 */
    ca_uint32_t DPI_REG_FIX_DIV1     :  1 ; /* bits 30:30 */
    ca_uint32_t MCK_MC_EN            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL2                    0xf431300c
#define DDR_CTRL_DPI_PLL_CTL2_dft                0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_PLL_DUM          :  8 ; /* bits 7:0 */
    ca_uint32_t DPI_NC_PRBS13_MAX    :  1 ; /* bits 8:8 */
    ca_uint32_t DPI_NC_PRBS13_INVS   :  1 ; /* bits 9:9 */
    ca_uint32_t DPI_NC_PRBS13_EN     :  1 ; /* bits 10:10 */
    ca_uint32_t DPI_NC_PRBS13_SEED   : 13 ; /* bits 23:11 */
    ca_uint32_t DPI_NC_CLK_DIV_SEL   :  2 ; /* bits 25:24 */
    ca_uint32_t DPI_NC_SEL           :  2 ; /* bits 27:26 */
    ca_uint32_t DPI_PRBS_EN          :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_REG_CTS_FIFO_SYNC_CNT :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_PI0                     0xf4313010
#define DDR_CTRL_DPI_PLL_PI0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_POST_PI_SEL0     :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL1     :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL2     :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL3     :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_PI0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_PI1                     0xf4313014
#define DDR_CTRL_DPI_PLL_PI1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_POST_PI_SEL4     :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL5     :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL6     :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL      :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_PI1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL3                    0xf4313018
#define DDR_CTRL_DPI_PLL_CTL3_dft                0x056876c5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_CCO_BAND         :  2 ; /* bits 1:0 */
    ca_uint32_t DPI_CCO_KVCO         :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_ICP              :  4 ; /* bits 7:4 */
    ca_uint32_t DPI_LOOP_PI_ISEL     :  4 ; /* bits 11:8 */
    ca_uint32_t DPI_LPF_CP           :  1 ; /* bits 12:12 */
    ca_uint32_t DPI_LPF_SR           :  3 ; /* bits 15:13 */
    ca_uint32_t DPI_PDIV             :  2 ; /* bits 17:16 */
    ca_uint32_t DPI_PLL_DBUG_EN      :  1 ; /* bits 18:18 */
    ca_uint32_t DPI_PLL_LDO_VSEL     :  3 ; /* bits 21:19 */
    ca_uint32_t DPI_PLL_SEL_CPMODE   :  1 ; /* bits 22:22 */
    ca_uint32_t DPI_POST_PI_BIAS     :  2 ; /* bits 24:23 */
    ca_uint32_t DPI_POST_PI_RL       :  2 ; /* bits 26:25 */
    ca_uint32_t DPI_POST_PI_RS       :  1 ; /* bits 27:27 */
    ca_uint32_t DPI_CKREF_SEL        :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_V11_LDO_VSEL     :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_SSC0                        0xf431301c
#define DDR_CTRL_DPI_SSC0_dft                    0x00003f40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_BYPASS_PI        :  1 ; /* bits 0:0 */
    ca_uint32_t DPI_EN_SSC           :  1 ; /* bits 1:1 */
    ca_uint32_t DPI_ORDER            :  1 ; /* bits 2:2 */
    ca_uint32_t DPI_SSC_FLAG_INIT    :  1 ; /* bits 3:3 */
    ca_uint32_t DPI_SEL_OC_MODE      :  2 ; /* bits 5:4 */
    ca_uint32_t DPI_HS_OC_STOP_DIFF  :  2 ; /* bits 7:6 */
    ca_uint32_t DPI_OC_DONE_DELAY    :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_SSC0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_SSC1                        0xf4313020
#define DDR_CTRL_DPI_SSC1_dft                    0x00c021fb

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_GRAN_SET         : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DOT_GRAN         :  3 ; /* bits 22:20 */
    ca_uint32_t DPI_GRAN_AUTO_RST    :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_SSC1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_SSC2                        0xf4313024
#define DDR_CTRL_DPI_SSC2_dft                    0x050a05ed

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_F_CODE           : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t DPI_F_CODE_T         : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd2               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_SSC2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_SSC3                        0xf4313028
#define DDR_CTRL_DPI_SSC3_dft                    0x00281a19

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_N_CODE           :  8 ; /* bits 7:0 */
    ca_uint32_t DPI_N_CODE_T         :  8 ; /* bits 15:8 */
    ca_uint32_t DPI_OC_STEP_SET      : 10 ; /* bits 25:16 */
    ca_uint32_t DPI_OC_EN            :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_SSC3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_WDOG                        0xf431302c
#define DDR_CTRL_DPI_WDOG_dft                    0x00001232

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_WD_ENABLE        :  1 ; /* bits 0:0 */
    ca_uint32_t DPI_F390K            :  2 ; /* bits 2:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_TIME0_CK         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_TIME_RDY_CKOUT   :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t DPI_TIME2_RST_WIDTH  :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd4               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_WDOG_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_CMD                     0xf4313030
#define DDR_CTRL_DPI_DCC_CMD_dft                 0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_CMD_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_CMD_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_CMD_DUTY     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_CMD_INT_GAIN :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_CMD_DIV      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_CMD_DSP_STOP :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_CMD_DUTY_SEL :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DPI_DCC_CMD_DSP_DBG_SEL :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_CMD_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQS_0                   0xf4313034
#define DDR_CTRL_DPI_DCC_DQS_0_dft               0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQS_INT_GAIN :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQS_DIV      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DSP_STOP :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQS_DUTY_SEL :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQS_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQS_1                   0xf4313038
#define DDR_CTRL_DPI_DCC_DQS_1_dft               0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQS_INT_GAIN :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQS_DIV      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DSP_STOP :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQS_DUTY_SEL :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQS_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQS_2                   0xf431303c
#define DDR_CTRL_DPI_DCC_DQS_2_dft               0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQS_INT_GAIN :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQS_DIV      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DSP_STOP :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQS_DUTY_SEL :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQS_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQS_3                   0xf4313040
#define DDR_CTRL_DPI_DCC_DQS_3_dft               0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DUTY     :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQS_INT_GAIN :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQS_DIV      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQS_DSP_STOP :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQS_DUTY_SEL :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQS_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQ_0                    0xf4313044
#define DDR_CTRL_DPI_DCC_DQ_0_dft                0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQ_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQ_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQ_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQ_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQ_1                    0xf4313048
#define DDR_CTRL_DPI_DCC_DQ_1_dft                0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQ_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQ_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQ_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQ_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQ_2                    0xf431304c
#define DDR_CTRL_DPI_DCC_DQ_2_dft                0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQ_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQ_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQ_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQ_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_DQ_3                    0xf4313050
#define DDR_CTRL_DPI_DCC_DQ_3_dft                0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_DQ_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_DQ_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_DQ_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_DQ_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_DQ_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_CK_0                    0xf4313054
#define DDR_CTRL_DPI_DCC_CK_0_dft                0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_CK_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_CK_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_CK_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_CK_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_CK_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_CK_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_CK_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_CK_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_CK_1                    0xf4313058
#define DDR_CTRL_DPI_DCC_CK_1_dft                0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_CK_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_CK_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_CK_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_CK_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_CK_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_CK_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_CK_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_CK_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL6                    0xf431305c
#define DDR_CTRL_DPI_PLL_CTL6_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_POW_LDO_VCO      :  1 ; /* bits 0:0 */
    ca_uint32_t DPI_POW_LDO_V11      :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CRT_CTL_2                   0xf4313060
#define DDR_CTRL_DPI_CRT_CTL_2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RWREG_CLK_DIS        :  1 ; /* bits 0:0 */
    ca_uint32_t TOPREG_CLK_DIS       :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ALERT_CHK_EN         :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t ZQ_CAL_CLK_DIS       :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  8 ;
    ca_uint32_t MCK_TEST_CLK_SEL     :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CRT_CTL_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CRT_DMY                     0xf4313078
#define DDR_CTRL_DPI_CRT_DMY_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DMY                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CRT_DMY_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CRT_DMY1                    0xf431307c
#define DDR_CTRL_DPI_CRT_DMY1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DMY                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CRT_DMY1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_AFIFO_STR_0                 0xf4313080
#define DDR_CTRL_DPI_AFIFO_STR_0_dft             0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_RD_STR_NUM_0      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_RD_STR_NUM_0     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_RD_STR_NUM_1      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_RD_STR_NUM_1     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ_RD_STR_NUM_2      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQS_RD_STR_NUM_2     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ_RD_STR_NUM_3      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQS_RD_STR_NUM_3     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_AFIFO_STR_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_AFIFO_STR_1                 0xf4313084
#define DDR_CTRL_DPI_AFIFO_STR_1_dft             0x000c0021

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMD_RD_STR_NUM       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CMD_EX_RD_STR_NUM    :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CMD_RD_STR_NUM_SEL_H :  8 ; /* bits 15:8 */
    ca_uint32_t REF_RST_EN_TX        :  1 ; /* bits 16:16 */
    ca_uint32_t REF_RST_EN_RX        :  1 ; /* bits 17:17 */
    ca_uint32_t FORCE_RST_N_TX       :  1 ; /* bits 18:18 */
    ca_uint32_t FORCE_RST_N_RX       :  1 ; /* bits 19:19 */
    ca_uint32_t BYPASS_EN_TX         :  1 ; /* bits 20:20 */
    ca_uint32_t BYPASS_EN_RX         :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_AFIFO_STR_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_AFIFO_STR_2                 0xf4313088
#define DDR_CTRL_DPI_AFIFO_STR_2_dft             0x00001111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_RD_STR_NUM_0      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t RX_RD_STR_NUM_1      :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RX_RD_STR_NUM_2      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t RX_RD_STR_NUM_3      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_AFIFO_STR_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CRT_RST_CTL                 0xf431308c
#define DDR_CTRL_DPI_CRT_RST_CTL_dft             0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PLL_LDO_RST_N        :  1 ; /* bits 0:0 */
    ca_uint32_t PLL_SSC_DIG_RST_N    :  1 ; /* bits 1:1 */
    ca_uint32_t RST_N                :  1 ; /* bits 2:2 */
    ca_uint32_t PTR_RST_N            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CRT_RST_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_AFIFO_STR_SEL               0xf4313094
#define DDR_CTRL_DPI_AFIFO_STR_SEL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMD_RD_STR_NUM_SEL   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_AFIFO_STR_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_PI2                     0xf4313098
#define DDR_CTRL_DPI_PLL_PI2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_POST_PI_SEL7     :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL8     :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL9     :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL10    :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_PI2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL4                    0xf431309c
#define DDR_CTRL_DPI_PLL_CTL4_dft                0x10103fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_EN_POST_PI       : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t DPI_DLY_SEL_CK1      :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t DPI_DLY_SEL          :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t CLK_PI_CTRL          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_PI3                     0xf43130a0
#define DDR_CTRL_DPI_PLL_PI3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_POST_PI_SEL11    :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DPI_POST_PI_SEL12    :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_PI3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_CS                      0xf43130a4
#define DDR_CTRL_DPI_DCC_CS_dft                  0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_CS_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_CS_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_CS_DUTY      :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_CS_INT_GAIN  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_CS_DIV       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_CS_DSP_STOP  :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_CS_DUTY_SEL  :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DPI_DCC_CS_DSP_DBG_SEL :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_CS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DCC_CS1                     0xf43130a8
#define DDR_CTRL_DPI_DCC_CS1_dft                 0x15053833

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DCC_CS_1_DUTY_PRESETA :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DPI_DCC_CS_1_DUTY_PRESETB :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DPI_DCC_CS_1_DUTY    :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DPI_DCC_CS_1_INT_GAIN :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t DPI_DCC_CS_1_DIV     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DPI_DCC_CS_1_DSP_STOP :  1 ; /* bits 28:28 */
    ca_uint32_t DPI_DCC_CS_1_DUTY_SEL :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DPI_DCC_CS_1_DSP_DBG_SEL :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DCC_CS1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PLL_CTL5                    0xf43130ac
#define DDR_CTRL_DPI_PLL_CTL5_dft                0x00002480

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t DPI_CA_PWROFF_MODE   :  2 ; /* bits 3:2 */
    ca_uint32_t DPI_RW_PWROFF_MODE   :  2 ; /* bits 5:4 */
    ca_uint32_t DPI_PWROFF_WR_WAIT_CYCLE :  3 ; /* bits 8:6 */
    ca_uint32_t DPI_PWROFF_RD_WAIT_CYCLE :  3 ; /* bits 11:9 */
    ca_uint32_t DPI_PWROFF_PWR_WAIT_CYCLE :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PLL_CTL5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_DLY_0                   0xf4313100
#define DDR_CTRL_DPI_ADR_DLY_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR00_DLY_SEL        :  4 ; /* bits 3:0 */
    ca_uint32_t ADR01_DLY_SEL        :  4 ; /* bits 7:4 */
    ca_uint32_t ADR02_DLY_SEL        :  4 ; /* bits 11:8 */
    ca_uint32_t ADR03_DLY_SEL        :  4 ; /* bits 15:12 */
    ca_uint32_t ADR04_DLY_SEL        :  4 ; /* bits 19:16 */
    ca_uint32_t ADR05_DLY_SEL        :  4 ; /* bits 23:20 */
    ca_uint32_t ADR06_DLY_SEL        :  4 ; /* bits 27:24 */
    ca_uint32_t ADR07_DLY_SEL        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_DLY_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_DLY_1                   0xf4313104
#define DDR_CTRL_DPI_ADR_DLY_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR08_DLY_SEL        :  4 ; /* bits 3:0 */
    ca_uint32_t ADR09_DLY_SEL        :  4 ; /* bits 7:4 */
    ca_uint32_t ADR10_DLY_SEL        :  4 ; /* bits 11:8 */
    ca_uint32_t ADR11_DLY_SEL        :  4 ; /* bits 15:12 */
    ca_uint32_t ADR12_DLY_SEL        :  4 ; /* bits 19:16 */
    ca_uint32_t ADR13_DLY_SEL        :  4 ; /* bits 23:20 */
    ca_uint32_t ADR14_DLY_SEL        :  4 ; /* bits 27:24 */
    ca_uint32_t ADR15_DLY_SEL        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_DLY_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_DLY_2                   0xf4313108
#define DDR_CTRL_DPI_ADR_DLY_2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR4_EXT_DLY_SEL     :  4 ; /* bits 3:0 */
    ca_uint32_t ADR5_EXT_DLY_SEL     :  4 ; /* bits 7:4 */
    ca_uint32_t BA0_DLY_SEL          :  4 ; /* bits 11:8 */
    ca_uint32_t BA1_DLY_SEL          :  4 ; /* bits 15:12 */
    ca_uint32_t BA2_DLY_SEL          :  4 ; /* bits 19:16 */
    ca_uint32_t ADR16_DLY_SEL        :  4 ; /* bits 23:20 */
    ca_uint32_t TEN_DLY_SEL          :  4 ; /* bits 27:24 */
    ca_uint32_t ALERT_DLY_SEL        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_DLY_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CMD_DLY_0                   0xf431310c
#define DDR_CTRL_DPI_CMD_DLY_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CKE_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t RAS_N_DLY_SEL        :  4 ; /* bits 7:4 */
    ca_uint32_t CAS_N_DLY_SEL        :  4 ; /* bits 11:8 */
    ca_uint32_t WE_N_DLY_SEL         :  4 ; /* bits 15:12 */
    ca_uint32_t ODT_DLY_SEL          :  4 ; /* bits 19:16 */
    ca_uint32_t CS_N_DLY_SEL         :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t CS_N_1_DLY_SEL       :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CMD_DLY_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CMD_DLY_1                   0xf4313110
#define DDR_CTRL_DPI_CMD_DLY_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ACT_N_DLY_SEL        :  4 ; /* bits 3:0 */
    ca_uint32_t DDR4_CKE_DLY_SEL     :  4 ; /* bits 7:4 */
    ca_uint32_t DDR4_BG0_DLY_SEL     :  4 ; /* bits 11:8 */
    ca_uint32_t PARITY_DLY_SEL       :  4 ; /* bits 15:12 */
    ca_uint32_t PARITY_1_DLY_SEL     :  4 ; /* bits 19:16 */
    ca_uint32_t ALERT_1_DLY_SEL      :  4 ; /* bits 23:20 */
    ca_uint32_t DDR4_CS_N_DLY_SEL    :  4 ; /* bits 27:24 */
    ca_uint32_t CKE_1_DLY_SEL        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CMD_DLY_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_OE_CTL                  0xf4313114
#define DDR_CTRL_DPI_PAD_OE_CTL_dft              0x9fffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR00_OE             :  1 ; /* bits 0:0 */
    ca_uint32_t ADR01_OE             :  1 ; /* bits 1:1 */
    ca_uint32_t ADR02_OE             :  1 ; /* bits 2:2 */
    ca_uint32_t ADR03_OE             :  1 ; /* bits 3:3 */
    ca_uint32_t ADR04_OE             :  1 ; /* bits 4:4 */
    ca_uint32_t ADR05_OE             :  1 ; /* bits 5:5 */
    ca_uint32_t ADR06_OE             :  1 ; /* bits 6:6 */
    ca_uint32_t ADR07_OE             :  1 ; /* bits 7:7 */
    ca_uint32_t ADR08_OE             :  1 ; /* bits 8:8 */
    ca_uint32_t ADR09_OE             :  1 ; /* bits 9:9 */
    ca_uint32_t ADR10_OE             :  1 ; /* bits 10:10 */
    ca_uint32_t ADR11_OE             :  1 ; /* bits 11:11 */
    ca_uint32_t ADR12_OE             :  1 ; /* bits 12:12 */
    ca_uint32_t ADR13_OE             :  1 ; /* bits 13:13 */
    ca_uint32_t ADR14_OE             :  1 ; /* bits 14:14 */
    ca_uint32_t ADR15_OE             :  1 ; /* bits 15:15 */
    ca_uint32_t EXT_ADR4_OE          :  1 ; /* bits 16:16 */
    ca_uint32_t EXT_ADR5_OE          :  1 ; /* bits 17:17 */
    ca_uint32_t BK0_OE               :  1 ; /* bits 18:18 */
    ca_uint32_t BK1_OE               :  1 ; /* bits 19:19 */
    ca_uint32_t BK2_OE               :  1 ; /* bits 20:20 */
    ca_uint32_t RESET_N_OE           :  1 ; /* bits 21:21 */
    ca_uint32_t ODT_OE               :  1 ; /* bits 22:22 */
    ca_uint32_t WE_N_OE              :  1 ; /* bits 23:23 */
    ca_uint32_t CAS_N_OE             :  1 ; /* bits 24:24 */
    ca_uint32_t RAS_N_OE             :  1 ; /* bits 25:25 */
    ca_uint32_t CKE_OE               :  1 ; /* bits 26:26 */
    ca_uint32_t DCK_OE               :  1 ; /* bits 27:27 */
    ca_uint32_t DCK_1_OE             :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ADR54_1TO1           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_OE_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_OE_CTL_EX               0xf4313118
#define DDR_CTRL_DPI_PAD_OE_CTL_EX_dft           0x0003ff07

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CS_N_OE              :  1 ; /* bits 0:0 */
    ca_uint32_t CS_N_1_OE            :  1 ; /* bits 1:1 */
    ca_uint32_t CKE_1_OE             :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t DDR4_CS_N_OE         :  1 ; /* bits 8:8 */
    ca_uint32_t ADR16_OE             :  1 ; /* bits 9:9 */
    ca_uint32_t PARITY_1_OE          :  1 ; /* bits 10:10 */
    ca_uint32_t PARITY_OE            :  1 ; /* bits 11:11 */
    ca_uint32_t DDR4_BG0_OE          :  1 ; /* bits 12:12 */
    ca_uint32_t DDR4_CKE_OE          :  1 ; /* bits 13:13 */
    ca_uint32_t DDR4_ALERT1_OE       :  1 ; /* bits 14:14 */
    ca_uint32_t DDR4_ALERT0_OE       :  1 ; /* bits 15:15 */
    ca_uint32_t DDR4_TEN_OE          :  1 ; /* bits 16:16 */
    ca_uint32_t ACT_N_OE             :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 13 ;
    ca_uint32_t ODT_FORCE            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_OE_CTL_EX_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ALERT_SEL_0             0xf431311c
#define DDR_CTRL_DPI_PAD_ALERT_SEL_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ALERT_SEL_0          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ALERT_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ALERT_SEL_1             0xf4313120
#define DDR_CTRL_DPI_PAD_ALERT_SEL_1_dft         0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ALERT_SEL_1          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ALERT_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ALERT_1_SEL_0           0xf4313124
#define DDR_CTRL_DPI_PAD_ALERT_1_SEL_0_dft       0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ALERT_1_SEL_0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ALERT_1_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ALERT_1_SEL_1           0xf4313128
#define DDR_CTRL_DPI_PAD_ALERT_1_SEL_1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ALERT_1_SEL_1        :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ALERT_1_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_IDDQ                    0xf431312c
#define DDR_CTRL_DPI_PAD_IDDQ_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IDDQ                 : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_IDDQ_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_PROG               0xf4313130
#define DDR_CTRL_DPI_PAD_CTRL_PROG_dft           0x04000c19

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZCTR_NCYC_LRG        :  7 ; /* bits 6:0 */
    ca_uint32_t ZQ_CAL_CMD           :  1 ; /* bits 7:7 */
    ca_uint32_t ZCTR_NCYC            :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t RZQ_CAL_EN           :  1 ; /* bits 16:16 */
    ca_uint32_t RZQ_COMP_INV         :  1 ; /* bits 17:17 */
    ca_uint32_t DZQ_REF_UP           :  1 ; /* bits 18:18 */
    ca_uint32_t RZQ_EXT_R240         :  1 ; /* bits 19:19 */
    ca_uint32_t ZCTRL_MODE           :  3 ; /* bits 22:20 */
    ca_uint32_t ZCOMP_MODE           :  1 ; /* bits 23:23 */
    ca_uint32_t ZCTRL_START          :  1 ; /* bits 24:24 */
    ca_uint32_t ZCTRL_CLK_SEL        :  2 ; /* bits 26:25 */
    ca_uint32_t DZQ_AUTO_UP          :  1 ; /* bits 27:27 */
    ca_uint32_t DZQ_UP_SEL           :  3 ; /* bits 30:28 */
    ca_uint32_t ZCTRL_FILTER_EN      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_PROG_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ZQ_NOCD2                    0xf431313c
#define DDR_CTRL_DPI_ZQ_NOCD2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZQ_ENA_NOCD2         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ZQ_OVWR_NOCD_DATA    :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ZQ_NOCD2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ZCTRL_STATUS            0xf4313140
#define DDR_CTRL_DPI_PAD_ZCTRL_STATUS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZCTRL_STATUS         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ZCTRL_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ZCTRL_RESULT            0xf4313144
#define DDR_CTRL_DPI_PAD_ZCTRL_RESULT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZCTRL_RESULT         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ZCTRL_RESULT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_ZCTRL_RESULT_D          0xf4313148
#define DDR_CTRL_DPI_PAD_ZCTRL_RESULT_D_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZCTRL_RESULT_DBG     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_ZCTRL_RESULT_D_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_RZCTRL_STATUS           0xf431314c
#define DDR_CTRL_DPI_PAD_RZCTRL_STATUS_dft       0x0000001e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RZQ_CAL_DONE         :  1 ; /* bits 0:0 */
    ca_uint32_t RZQ_480CODE          :  5 ; /* bits 5:1 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_RZCTRL_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_DQS_CTRL                 0xf4313150
#define DDR_CTRL_DPI_DQ_DQS_CTRL_dft             0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_OE_FRC_EN        :  1 ; /* bits 0:0 */
    ca_uint32_t TRIG_DQS             :  1 ; /* bits 1:1 */
    ca_uint32_t DQ_LATCH_EN          :  1 ; /* bits 2:2 */
    ca_uint32_t DQS_OE_SIG           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t TEN_EN               :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_DQS_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CMD_ADR_PH                  0xf4313154
#define DDR_CTRL_DPI_CMD_ADR_PH_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMD_PH_SEL           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CS_PH_SEL            :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CS_1_PH_SEL          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CKE_PH_SEL           :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t CKE_1_PH_SEL         :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t CMD_GEARDOWN         :  1 ; /* bits 20:20 */
    ca_uint32_t CS_GEARDOWN          :  1 ; /* bits 21:21 */
    ca_uint32_t CS_1_GEARDOWN        :  1 ; /* bits 22:22 */
    ca_uint32_t CKE_GEARDOWN         :  1 ; /* bits 23:23 */
    ca_uint32_t CKE_1_GEARDOWN       :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t CMD_PH_EN            :  1 ; /* bits 26:26 */
    ca_uint32_t CS_PH_EN             :  1 ; /* bits 27:27 */
    ca_uint32_t CS_1_PH_EN           :  1 ; /* bits 28:28 */
    ca_uint32_t CKE_PH_EN            :  1 ; /* bits 29:29 */
    ca_uint32_t CKE_1_PH_EN          :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd7               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CMD_ADR_PH_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_PAT_IN0                  0xf4313158
#define DDR_CTRL_DPI_DQ_PAT_IN0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_PAT_IN            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_PAT_IN0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_PAT_IN1                  0xf431315c
#define DDR_CTRL_DPI_DQ_PAT_IN1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_PAT_IN            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_PAT_IN1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_WRLVL_DQS_DATA              0xf4313160
#define DDR_CTRL_DPI_WRLVL_DQS_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WRLVL_DQSDATA        :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_WRLVL_DQS_DATA_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_TEST_CTRL0                  0xf4313164
#define DDR_CTRL_DPI_TEST_CTRL0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t RW_DBG_SEL0          :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t TOP_DBG_SEL          :  3 ; /* bits 27:25 */
    ca_uint32_t DATA_EN_CHK          :  1 ; /* bits 28:28 */
    ca_uint32_t LBK_SET              :  1 ; /* bits 29:29 */
    ca_uint32_t LBK_MODE             :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_TEST_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_TEST_CTRL1                  0xf4313168
#define DDR_CTRL_DPI_TEST_CTRL1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t RW_DBG_SEL1          :  2 ; /* bits 21:20 */
    ca_uint32_t DQSEN_DBG_SEL        :  2 ; /* bits 23:22 */
    ca_uint32_t DPI_DBG_DLL_SEL      :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DCC_DSP_DBG_SEL      :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_TEST_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_HALF_CYC_DET                0xf431316c
#define DDR_CTRL_DPI_HALF_CYC_DET_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DET_RESULT           : 13 ; /* bits 12:0 */
    ca_uint32_t DET_DONE             :  1 ; /* bits 13:13 */
    ca_uint32_t DET_ENABLE           :  1 ; /* bits 14:14 */
    ca_uint32_t DET_CLK_ENABLE       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_HALF_CYC_DET_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_READ_CTRL_1                 0xf4313170
#define DDR_CTRL_DPI_READ_CTRL_1_dft             0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_RD_FIFO           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t DQ_LAT_EN_FORCE_SIG  :  1 ; /* bits 8:8 */
    ca_uint32_t DQ_LAT_EN_FORCE_SEL  :  1 ; /* bits 9:9 */
    ca_uint32_t RD_DLY_FOLLOW_DQ0    :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t NCON_2T_MODE         :  1 ; /* bits 26:26 */
    ca_uint32_t NCON_3T_MODE         :  1 ; /* bits 27:27 */
    ca_uint32_t RDDATA_EN_DLY_SEL    :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t RX_CAL_DIS           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_READ_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_TX_RPT_CTRL                 0xf4313174
#define DDR_CTRL_DPI_TX_RPT_CTRL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_RPT_ADD_0         :  1 ; /* bits 0:0 */
    ca_uint32_t DQ_RPT_DEC_0         :  1 ; /* bits 1:1 */
    ca_uint32_t DQ_RPT_ADD_1         :  1 ; /* bits 2:2 */
    ca_uint32_t DQ_RPT_DEC_1         :  1 ; /* bits 3:3 */
    ca_uint32_t DQ_RPT_ADD_2         :  1 ; /* bits 4:4 */
    ca_uint32_t DQ_RPT_DEC_2         :  1 ; /* bits 5:5 */
    ca_uint32_t DQ_RPT_ADD_3         :  1 ; /* bits 6:6 */
    ca_uint32_t DQ_RPT_DEC_3         :  1 ; /* bits 7:7 */
    ca_uint32_t DQS_RPT_ADD_0        :  1 ; /* bits 8:8 */
    ca_uint32_t DQS_RPT_DEC_0        :  1 ; /* bits 9:9 */
    ca_uint32_t DQS_RPT_ADD_1        :  1 ; /* bits 10:10 */
    ca_uint32_t DQS_RPT_DEC_1        :  1 ; /* bits 11:11 */
    ca_uint32_t DQS_RPT_ADD_2        :  1 ; /* bits 12:12 */
    ca_uint32_t DQS_RPT_DEC_2        :  1 ; /* bits 13:13 */
    ca_uint32_t DQS_RPT_ADD_3        :  1 ; /* bits 14:14 */
    ca_uint32_t DQS_RPT_DEC_3        :  1 ; /* bits 15:15 */
    ca_uint32_t RX_RPT_ADD           :  1 ; /* bits 16:16 */
    ca_uint32_t RX_RPT_DEC           :  1 ; /* bits 17:17 */
    ca_uint32_t CA_RPT_ADD           :  1 ; /* bits 18:18 */
    ca_uint32_t CA_RPT_DEC           :  1 ; /* bits 19:19 */
    ca_uint32_t CS_RPT_ADD           :  1 ; /* bits 20:20 */
    ca_uint32_t CS_RPT_DEC           :  1 ; /* bits 21:21 */
    ca_uint32_t CS_1_RPT_ADD         :  1 ; /* bits 22:22 */
    ca_uint32_t CS_1_RPT_DEC         :  1 ; /* bits 23:23 */
    ca_uint32_t CKE_RPT_ADD          :  1 ; /* bits 24:24 */
    ca_uint32_t CKE_RPT_DEC          :  1 ; /* bits 25:25 */
    ca_uint32_t CKE_1_RPT_ADD        :  1 ; /* bits 26:26 */
    ca_uint32_t CKE_1_RPT_DEC        :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_TX_RPT_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CAL_SHIFT_CTRL              0xf4313178
#define DDR_CTRL_DPI_CAL_SHIFT_CTRL_dft          0x22116677

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_LAG0             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CAL_LAG1             :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CAL_LAG2             :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CAL_LAG3             :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t CAL_LEAD0            :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t CAL_LEAD1            :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t CAL_LEAD2            :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t CAL_LEAD3            :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CAL_SHIFT_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DT_SET0                     0xf431317c
#define DDR_CTRL_DPI_DT_SET0_dft                 0x0030f0f0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DTP_DQ               :  4 ; /* bits 3:0 */
    ca_uint32_t DTN_DQ               :  4 ; /* bits 7:4 */
    ca_uint32_t DTP_DQS              :  4 ; /* bits 11:8 */
    ca_uint32_t DTN_DQS              :  4 ; /* bits 15:12 */
    ca_uint32_t DTP_CLK              :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t DTN_CLK              :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DT_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCP0_SET0              0xf4313180
#define DDR_CTRL_DPI_ODT_TTCP0_SET0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCP_SET_0_PRE   :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCP_SET_1_PRE   :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCP_SET_2_PRE   :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCP_SET_3_PRE   :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCP0_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCP1_SET0              0xf4313184
#define DDR_CTRL_DPI_ODT_TTCP1_SET0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCP_SET_4_PRE   :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCP_SET_5_PRE   :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCP_SET_6_PRE   :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCP_SET_7_PRE   :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCP1_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCN0_SET0              0xf4313188
#define DDR_CTRL_DPI_ODT_TTCN0_SET0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCN_SET_0_PRE   :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCN_SET_1_PRE   :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCN_SET_2_PRE   :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCN_SET_3_PRE   :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCN0_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCN1_SET0              0xf431318c
#define DDR_CTRL_DPI_ODT_TTCN1_SET0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCN_SET_4_PRE   :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCN_SET_5_PRE   :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCN_SET_6_PRE   :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCN_SET_7_PRE   :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCN1_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDP0_SET0                  0xf4313190
#define DDR_CTRL_DPI_OCDP0_SET0_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDP_SET_0_PRE       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDP_SET_1_PRE       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDP_SET_2_PRE       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDP_SET_3_PRE       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDP0_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDP1_SET0                  0xf4313194
#define DDR_CTRL_DPI_OCDP1_SET0_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDP_SET_4_PRE       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDP_SET_5_PRE       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDP_SET_6_PRE       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDP_SET_7_PRE       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDP1_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDN0_SET0                  0xf4313198
#define DDR_CTRL_DPI_OCDN0_SET0_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDN_SET_0_PRE       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDN_SET_1_PRE       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDN_SET_2_PRE       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDN_SET_3_PRE       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDN0_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDN1_SET0                  0xf431319c
#define DDR_CTRL_DPI_OCDN1_SET0_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDN_SET_4_PRE       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDN_SET_5_PRE       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDN_SET_6_PRE       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDN_SET_7_PRE       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDN1_SET0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCP0_SET1              0xf43131a0
#define DDR_CTRL_DPI_ODT_TTCP0_SET1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCP_SET_0       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCP_SET_1       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCP_SET_2       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCP_SET_3       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCP0_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCP1_SET1              0xf43131a4
#define DDR_CTRL_DPI_ODT_TTCP1_SET1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCP_SET_4       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCP_SET_5       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCP_SET_6       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCP_SET_7       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCP1_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCN0_SET1              0xf43131a8
#define DDR_CTRL_DPI_ODT_TTCN0_SET1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCN_SET_0       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCN_SET_1       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCN_SET_2       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCN_SET_3       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCN0_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_TTCN1_SET1              0xf43131ac
#define DDR_CTRL_DPI_ODT_TTCN1_SET1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ODT_TTCN_SET_4       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ODT_TTCN_SET_5       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ODT_TTCN_SET_6       :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ODT_TTCN_SET_7       :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_TTCN1_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDP0_SET1                  0xf43131b0
#define DDR_CTRL_DPI_OCDP0_SET1_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDP_SET_0           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDP_SET_1           :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDP_SET_2           :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDP_SET_3           :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDP0_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDP1_SET1                  0xf43131b4
#define DDR_CTRL_DPI_OCDP1_SET1_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDP_SET_4           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDP_SET_5           :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDP_SET_6           :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDP_SET_7           :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDP1_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDN0_SET1                  0xf43131b8
#define DDR_CTRL_DPI_OCDN0_SET1_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDN_SET_0           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDN_SET_1           :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDN_SET_2           :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDN_SET_3           :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDN0_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCDN1_SET1                  0xf43131bc
#define DDR_CTRL_DPI_OCDN1_SET1_dft              0x26262626

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t OCDN_SET_4           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t OCDN_SET_5           :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t OCDN_SET_6           :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t OCDN_SET_7           :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCDN1_SET1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_ODT_SEL_0                0xf43131c0
#define DDR_CTRL_DPI_DQ_ODT_SEL_0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_0_TTCP_SEL        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ_1_TTCP_SEL        :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_0_TTCN_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ_1_TTCN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_ODT_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_ODT_SEL_1                0xf43131c4
#define DDR_CTRL_DPI_DQ_ODT_SEL_1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_0_TTCP_SEL        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ_1_TTCP_SEL        :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_0_TTCN_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ_1_TTCN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_ODT_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_OCD_SEL_0                0xf43131c8
#define DDR_CTRL_DPI_DQ_OCD_SEL_0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_0_OCDP_SEL        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ_1_OCDP_SEL        :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_0_OCDN_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ_1_OCDN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_OCD_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_OCD_SEL_1                0xf43131cc
#define DDR_CTRL_DPI_DQ_OCD_SEL_1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_0_OCDP_SEL        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ_1_OCDP_SEL        :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_0_OCDN_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ_1_OCDN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_OCD_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_P_ODT_SEL_0             0xf43131d0
#define DDR_CTRL_DPI_DQS_P_ODT_SEL_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_P_0_TTCP_SEL     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_P_1_TTCP_SEL     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_P_0_TTCN_SEL     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_P_1_TTCN_SEL     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_P_ODT_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_P_ODT_SEL_1             0xf43131d4
#define DDR_CTRL_DPI_DQS_P_ODT_SEL_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_P_0_TTCP_SEL     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_P_1_TTCP_SEL     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_P_0_TTCN_SEL     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_P_1_TTCN_SEL     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_P_ODT_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_N_ODT_SEL_0             0xf43131d8
#define DDR_CTRL_DPI_DQS_N_ODT_SEL_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_N_0_TTCP_SEL     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_N_1_TTCP_SEL     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_N_0_TTCN_SEL     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_N_1_TTCN_SEL     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_N_ODT_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_N_ODT_SEL_1             0xf43131dc
#define DDR_CTRL_DPI_DQS_N_ODT_SEL_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_N_0_TTCP_SEL     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_N_1_TTCP_SEL     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_N_0_TTCN_SEL     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_N_1_TTCN_SEL     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_N_ODT_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_OCD_SEL_0               0xf43131e0
#define DDR_CTRL_DPI_DQS_OCD_SEL_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_P_0_OCDP_SEL     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_P_1_OCDP_SEL     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_P_0_OCDN_SEL     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_P_1_OCDN_SEL     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQS_N_0_OCDP_SEL     :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQS_N_1_OCDP_SEL     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQS_N_0_OCDN_SEL     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQS_N_1_OCDN_SEL     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_OCD_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_OCD_SEL_1               0xf43131e4
#define DDR_CTRL_DPI_DQS_OCD_SEL_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_P_0_OCDP_SEL     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_P_1_OCDP_SEL     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_P_0_OCDN_SEL     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_P_1_OCDN_SEL     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQS_N_0_OCDP_SEL     :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQS_N_1_OCDP_SEL     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQS_N_0_OCDN_SEL     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQS_N_1_OCDN_SEL     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_OCD_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CKE_OCD_SEL                 0xf43131e8
#define DDR_CTRL_DPI_CKE_OCD_SEL_dft             0x00001111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CKE_OCDP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CKE_OCDN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CKE_1_OCDP_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CKE_1_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CKE_OCD_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_OCD_SEL                 0xf43131ec
#define DDR_CTRL_DPI_ADR_OCD_SEL_dft             0x11001100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t CS_OCDP_SEL          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CS_OCDN_SEL          :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  9 ;
    ca_uint32_t CS_1_OCDP_SEL        :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t CS_1_OCDN_SEL        :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd5               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_OCD_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CK_OCD_SEL                  0xf43131f0
#define DDR_CTRL_DPI_CK_OCD_SEL_dft              0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CK_P_0_OCDP_SEL      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CK_P_1_OCDP_SEL      :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CK_P_0_OCDN_SEL      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CK_P_1_OCDN_SEL      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t CK_N_0_OCDP_SEL      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t CK_N_1_OCDP_SEL      :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t CK_N_0_OCDN_SEL      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t CK_N_1_OCDN_SEL      :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CK_OCD_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_BUS_0                   0xf43131f4
#define DDR_CTRL_DPI_PAD_BUS_0_dft               0x89580000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PAD_BUS_0            : 18 ; /* bits 17:0 */
    ca_uint32_t VREF_PD              :  1 ; /* bits 18:18 */
    ca_uint32_t VREF_CURRENTSEL      :  2 ; /* bits 20:19 */
    ca_uint32_t VREF_S               :  6 ; /* bits 26:21 */
    ca_uint32_t VREF_RANGE           :  1 ; /* bits 27:27 */
    ca_uint32_t VREF_SEL             :  1 ; /* bits 28:28 */
    ca_uint32_t EN_DMYI              :  1 ; /* bits 29:29 */
    ca_uint32_t PD_CK                :  1 ; /* bits 30:30 */
    ca_uint32_t EN_DCC               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_BUS_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_BUS_1                   0xf43131f8
#define DDR_CTRL_DPI_PAD_BUS_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PAD_BUS_1            :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t VREF_DDR2_MODE       :  1 ; /* bits 30:30 */
    ca_uint32_t PD_CK_1              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_BUS_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_BUS_2                   0xf43131fc
#define DDR_CTRL_DPI_PAD_BUS_2_dft               0x00949494

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VREF_PD_0            :  1 ; /* bits 0:0 */
    ca_uint32_t VREF_S_0             :  6 ; /* bits 6:1 */
    ca_uint32_t VREF_RANGE_0         :  1 ; /* bits 7:7 */
    ca_uint32_t VREF_PD_1            :  1 ; /* bits 8:8 */
    ca_uint32_t VREF_S_1             :  6 ; /* bits 14:9 */
    ca_uint32_t VREF_RANGE_1         :  1 ; /* bits 15:15 */
    ca_uint32_t VREF_PD_2            :  1 ; /* bits 16:16 */
    ca_uint32_t VREF_S_2             :  6 ; /* bits 22:17 */
    ca_uint32_t VREF_RANGE_2         :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_BUS_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ZQ_TRIM                     0xf4313200
#define DDR_CTRL_DPI_ZQ_TRIM_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t R480_TRIM            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ZQ_TRIM_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_0                   0xf4313204
#define DDR_CTRL_DPI_OCD_SEL_0_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR03_OCDP_SEL       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ADR03_OCDN_SEL       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR02_OCDP_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR02_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR01_OCDP_SEL       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR01_OCDN_SEL       :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR00_OCDP_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR00_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_1                   0xf4313208
#define DDR_CTRL_DPI_OCD_SEL_1_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR07_OCDP_SEL       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ADR07_OCDN_SEL       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR06_OCDP_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR06_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR05_OCDP_SEL       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR05_OCDN_SEL       :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR04_OCDP_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR04_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_2                   0xf431320c
#define DDR_CTRL_DPI_OCD_SEL_2_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR11_OCDP_SEL       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ADR11_OCDN_SEL       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR10_OCDP_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR10_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR09_OCDP_SEL       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR09_OCDN_SEL       :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR08_OCDP_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR08_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_3                   0xf4313210
#define DDR_CTRL_DPI_OCD_SEL_3_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR15_OCDP_SEL       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ADR15_OCDN_SEL       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR14_OCDP_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR14_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR13_OCDP_SEL       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR13_OCDN_SEL       :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR12_OCDP_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR12_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_4                   0xf4313214
#define DDR_CTRL_DPI_OCD_SEL_4_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BA0_OCDP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t BA0_OCDN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR_EXT_5_OCDP_SEL   :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR_EXT_5_OCDN_SEL   :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR_EXT_4_OCDP_SEL   :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR_EXT_4_OCDN_SEL   :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR16_OCDP_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR16_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_5                   0xf4313218
#define DDR_CTRL_DPI_OCD_SEL_5_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAS_OCDP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CAS_OCDN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RAS_OCDP_SEL         :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t RAS_OCDN_SEL         :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t BA2_OCDP_SEL         :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t BA2_OCDN_SEL         :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t BA1_OCDP_SEL         :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t BA1_OCDN_SEL         :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_6                   0xf431321c
#define DDR_CTRL_DPI_OCD_SEL_6_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PAR_OCDP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t PAR_OCDN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RST_OCDP_SEL         :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t RST_OCDN_SEL         :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ODT_OCDP_SEL         :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ODT_OCDN_SEL         :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t WE_OCDP_SEL          :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t WE_OCDN_SEL          :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_7                   0xf4313220
#define DDR_CTRL_DPI_OCD_SEL_7_dft               0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TEN_OCDP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t TEN_OCDN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DDR4_BG0_OCDP_SEL    :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DDR4_BG0_OCDN_SEL    :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ACT_OCDP_SEL         :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ACT_OCDN_SEL         :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t PAR1_OCDP_SEL        :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t PAR1_OCDN_SEL        :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_OCD_SEL_8                   0xf4313224
#define DDR_CTRL_DPI_OCD_SEL_8_dft               0x11110000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t ALERT1_OCDP_SEL      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ALERT1_OCDN_SEL      :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ALERT_OCDP_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ALERT_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd5               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_OCD_SEL_8_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ODT_SEL_0                   0xf4313228
#define DDR_CTRL_DPI_ODT_SEL_0_dft               0x00000011

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CA_TTCP_SEL          :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CA_TTCN_SEL          :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ODT_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CKE_ODT_SEL                 0xf431322c
#define DDR_CTRL_DPI_CKE_ODT_SEL_dft             0x00001111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CKE_TTCP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CKE_TTCN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CKE_1_TTCP_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CKE_1_TTCN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CKE_ODT_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_ODT_SEL                 0xf4313230
#define DDR_CTRL_DPI_ADR_ODT_SEL_dft             0x11001111

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RST_TTCP_SEL         :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t RST_TTCN_SEL         :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CS_TTCP_SEL          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CS_TTCN_SEL          :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  9 ;
    ca_uint32_t CS_1_TTCP_SEL        :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t CS_1_TTCN_SEL        :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd6               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_ODT_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CLK_ODT_SEL                 0xf4313234
#define DDR_CTRL_DPI_CLK_ODT_SEL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CK_TTCP_SEL          :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CK_TTCN_SEL          :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t CK_1_TTCP_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CK_1_TTCN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CLK_ODT_SEL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DPI_CTRL_0                  0xf4313238
#define DDR_CTRL_DPI_DPI_CTRL_0_dft              0x003e2004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_SET_MODE          :  2 ; /* bits 1:0 */
    ca_uint32_t RST_FIFO_MODE        :  2 ; /* bits 3:2 */
    ca_uint32_t CAL_SET_MODE         :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t REF_UPDATE_DLY       :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t nT_RD_PRE            :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t CAL_DQSEN_MODE       :  2 ; /* bits 18:17 */
    ca_uint32_t CAL_DQSEN_UPDATE_ENA :  1 ; /* bits 19:19 */
    ca_uint32_t DATA_INIT            :  1 ; /* bits 20:20 */
    ca_uint32_t DATA_PRE             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd4               :  6 ;
    ca_uint32_t nT_WR_PRE            :  1 ; /* bits 28:28 */
    ca_uint32_t EN_CRC               :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd5               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DPI_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DPI_CTRL_1                  0xf431323c
#define DDR_CTRL_DPI_DPI_CTRL_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_SET_WR_DLY        :  1 ; /* bits 0:0 */
    ca_uint32_t WRITE_EN_0           :  1 ; /* bits 1:1 */
    ca_uint32_t FW_SET_RD_DLY        :  1 ; /* bits 2:2 */
    ca_uint32_t WRITE_EN_1           :  1 ; /* bits 3:3 */
    ca_uint32_t FW_SET_CAL_RANGE     :  1 ; /* bits 4:4 */
    ca_uint32_t WRITE_EN_2           :  1 ; /* bits 5:5 */
    ca_uint32_t FW_SET_RD_DET        :  1 ; /* bits 6:6 */
    ca_uint32_t WRITE_EN_3           :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t SET_REG_VALID        :  1 ; /* bits 30:30 */
    ca_uint32_t WRITE_EN_4           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DPI_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DPI_CTRL_2                  0xf4313240
#define DDR_CTRL_DPI_DPI_CTRL_2_dft              0x80090f00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t PWROFF_CMD_GATE      :  4 ; /* bits 7:4 */
    ca_uint32_t RD_UPDATE_DLY_RX     :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t RD_UPDATE_DLY        :  6 ; /* bits 21:16 */
    ca_uint32_t ALERT_1_ENA          :  1 ; /* bits 22:22 */
    ca_uint32_t ALERT_ENA            :  1 ; /* bits 23:23 */
    ca_uint32_t RST_DQSEN_MODE       :  2 ; /* bits 25:24 */
    ca_uint32_t RST_3POINT_MODE      :  2 ; /* bits 27:26 */
    ca_uint32_t SET_REG_VALID_MODE   :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t RST_DQSEN_CAL        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DPI_CTRL_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_BIST_2TO1_0                 0xf4313244
#define DDR_CTRL_DPI_BIST_2TO1_0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BIST_DEBUG_SEL       :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t BIST_MODE            :  3 ; /* bits 22:20 */
    ca_uint32_t BIST_EN              :  1 ; /* bits 23:23 */
    ca_uint32_t BIST_CA_XOR          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_BIST_2TO1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_BIST_2TO1_1                 0xf4313248
#define DDR_CTRL_DPI_BIST_2TO1_1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BIST_FAIL_DATA       :  4 ; /* bits 3:0 */
    ca_uint32_t BIST_FAIL_CMD        :  1 ; /* bits 4:4 */
    ca_uint32_t BIST_RDY             :  1 ; /* bits 5:5 */
    ca_uint32_t nPOINT_VIO_DET       :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_BIST_2TO1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_BIST_PT                     0xf431324c
#define DDR_CTRL_DPI_BIST_PT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BIST_PATTERN         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_BIST_PT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_BIST_DEBUG                  0xf4313250
#define DDR_CTRL_DPI_BIST_DEBUG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BIST_DEBUG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_BIST_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_INT_CTRL                    0xf4313254
#define DDR_CTRL_DPI_INT_CTRL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INT_DQS_EN           :  1 ; /* bits 0:0 */
    ca_uint32_t WRITE_EN_0           :  1 ; /* bits 1:1 */
    ca_uint32_t INT_CAL_BDY_EN       :  1 ; /* bits 2:2 */
    ca_uint32_t WRITE_EN_1           :  1 ; /* bits 3:3 */
    ca_uint32_t FW_CLR_DQS_INT       :  1 ; /* bits 4:4 */
    ca_uint32_t WRITE_EN_2           :  1 ; /* bits 5:5 */
    ca_uint32_t INT_CPU_0_EN         :  1 ; /* bits 6:6 */
    ca_uint32_t WRITE_EN_3           :  1 ; /* bits 7:7 */
    ca_uint32_t INT_CPU_1_EN         :  1 ; /* bits 8:8 */
    ca_uint32_t WRITE_EN_4           :  1 ; /* bits 9:9 */
    ca_uint32_t INT_CPU_2_EN         :  1 ; /* bits 10:10 */
    ca_uint32_t WRITE_EN_5           :  1 ; /* bits 11:11 */
    ca_uint32_t INT_CPU_3_EN         :  1 ; /* bits 12:12 */
    ca_uint32_t WRITE_EN_6           :  1 ; /* bits 13:13 */
    ca_uint32_t INT_PLL_EN           :  1 ; /* bits 14:14 */
    ca_uint32_t WRITE_EN_7           :  1 ; /* bits 15:15 */
    ca_uint32_t INT_ALERT_EN         :  1 ; /* bits 16:16 */
    ca_uint32_t WRITE_EN_8           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t INT_ZQ_EN            :  1 ; /* bits 22:22 */
    ca_uint32_t WRITE_EN_11          :  1 ; /* bits 23:23 */
    ca_uint32_t INT_FIFO_PTR_EN      :  1 ; /* bits 24:24 */
    ca_uint32_t WRITE_EN_12          :  1 ; /* bits 25:25 */
    ca_uint32_t INT_TM_DQSEN_EN      :  1 ; /* bits 26:26 */
    ca_uint32_t WRITE_EN_13          :  1 ; /* bits 27:27 */
    ca_uint32_t INT_DQS_BURST_ERR_EN :  1 ; /* bits 28:28 */
    ca_uint32_t WRITE_EN_14          :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_INT_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_INT_STATUS_0                0xf4313258
#define DDR_CTRL_DPI_INT_STATUS_0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_INT_0            :  1 ; /* bits 0:0 */
    ca_uint32_t DQS_INT_1            :  1 ; /* bits 1:1 */
    ca_uint32_t DQS_INT_2            :  1 ; /* bits 2:2 */
    ca_uint32_t DQS_INT_3            :  1 ; /* bits 3:3 */
    ca_uint32_t TM_DQSEN_LATE_INT_0  :  1 ; /* bits 4:4 */
    ca_uint32_t TM_DQSEN_LATE_INT_1  :  1 ; /* bits 5:5 */
    ca_uint32_t TM_DQSEN_LATE_INT_2  :  1 ; /* bits 6:6 */
    ca_uint32_t TM_DQSEN_LATE_INT_3  :  1 ; /* bits 7:7 */
    ca_uint32_t TM_DQSEN_EARLY_INT_0 :  1 ; /* bits 8:8 */
    ca_uint32_t TM_DQSEN_EARLY_INT_1 :  1 ; /* bits 9:9 */
    ca_uint32_t TM_DQSEN_EARLY_INT_2 :  1 ; /* bits 10:10 */
    ca_uint32_t TM_DQSEN_EARLY_INT_3 :  1 ; /* bits 11:11 */
    ca_uint32_t DQS_BURST_ERR_INT_0  :  1 ; /* bits 12:12 */
    ca_uint32_t DQS_BURST_ERR_INT_1  :  1 ; /* bits 13:13 */
    ca_uint32_t DQS_BURST_ERR_INT_2  :  1 ; /* bits 14:14 */
    ca_uint32_t DQS_BURST_ERR_INT_3  :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_INT_STATUS_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_INT_STATUS_2                0xf431325c
#define DDR_CTRL_DPI_INT_STATUS_2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PLL_STABLE           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t ZQ_DONE              :  1 ; /* bits 9:9 */
    ca_uint32_t RZQ_DONE             :  1 ; /* bits 10:10 */
    ca_uint32_t ALERT_OUT            :  1 ; /* bits 11:11 */
    ca_uint32_t ALERT_OUT_1          :  1 ; /* bits 12:12 */
    ca_uint32_t ALERT_TIE_HI         :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_INT_STATUS_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_SSC_STATUS                  0xf4313260
#define DDR_CTRL_DPI_SSC_STATUS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SSC_FCODE_DEBUG      : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t SSC_OC_DONE          :  1 ; /* bits 12:12 */
    ca_uint32_t SSC_FMOD             :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t SSC_NCODE_DEBUG      :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd3               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_SSC_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX0                  0xf4313264
#define DDR_CTRL_DPI_PRBS_TMUX0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t WE_N_SEL             :  3 ; /* bits 18:16 */
    ca_uint32_t PRBS11_2T_EN         :  1 ; /* bits 19:19 */
    ca_uint32_t RAS_N_SEL            :  3 ; /* bits 22:20 */
    ca_uint32_t CKE_TEST             :  1 ; /* bits 23:23 */
    ca_uint32_t CAS_N_SEL            :  3 ; /* bits 26:24 */
    ca_uint32_t PRBS11_DUAL_EN       :  1 ; /* bits 27:27 */
    ca_uint32_t ODT_SEL              :  3 ; /* bits 30:28 */
    ca_uint32_t PRBS11_TEN           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX1                  0xf4313268
#define DDR_CTRL_DPI_PRBS_TMUX1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR00_SEL            :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ADR01_SEL            :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR02_SEL            :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR03_SEL            :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR04_SEL            :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR05_SEL            :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR06_SEL            :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR07_SEL            :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX2                  0xf431326c
#define DDR_CTRL_DPI_PRBS_TMUX2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR08_SEL            :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ADR09_SEL            :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR10_SEL            :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR11_SEL            :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ADR12_SEL            :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t ADR13_SEL            :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t ADR14_SEL            :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t ADR15_SEL            :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX3                  0xf4313270
#define DDR_CTRL_DPI_PRBS_TMUX3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CS_N_1_SEL           :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CS_N_SEL             :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ADR04_EXT_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ADR05_EXT_SEL        :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t BA00_SEL             :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t BA01_SEL             :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t BA02_SEL             :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd7               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX6                  0xf4313274
#define DDR_CTRL_DPI_PRBS_TMUX6_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ALERT_IN             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t TEN_IN               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t PARITY_IN            :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t PARITY_IN_1          :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ALERT_IN_1           :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DDR4_CS_N            :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX7                  0xf4313278
#define DDR_CTRL_DPI_PRBS_TMUX7_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BG0                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ACT_N                :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ADR16_SEL            :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX8                  0xf431327c
#define DDR_CTRL_DPI_PRBS_TMUX8_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TEST_PATTERN         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX8_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX9                  0xf4313280
#define DDR_CTRL_DPI_PRBS_TMUX9_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TEST4_PATTERN        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX9_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PRBS_TMUX10                 0xf4313284
#define DDR_CTRL_DPI_PRBS_TMUX10_dft             0x00010001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CMD_PRBS11_SEED      : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t CMD_PRBS11_INVS      :  1 ; /* bits 15:15 */
    ca_uint32_t CS_PRBS11_SEED       : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t CS_PRBS11_INVS       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PRBS_TMUX10_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DUMMY_0                     0xf4313288
#define DDR_CTRL_DPI_DUMMY_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DUMMY_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DUMMY_1                     0xf431328c
#define DDR_CTRL_DPI_DUMMY_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DUMMY_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DUMMY_2                     0xf4313290
#define DDR_CTRL_DPI_DUMMY_2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DUMMY_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DUMMY_3                     0xf4313294
#define DDR_CTRL_DPI_DUMMY_3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SCAN_WRAP            :  4 ; /* bits 3:0 */
    ca_uint32_t DUMMY                : 28 ; /* bits 31:4 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DUMMY_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CS_EMPH_CTL                 0xf4313298
#define DDR_CTRL_DPI_CS_EMPH_CTL_dft             0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CS_EN_EMPHP          :  4 ; /* bits 3:0 */
    ca_uint32_t CS_EN_EMPHN          :  4 ; /* bits 7:4 */
    ca_uint32_t CS_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t CS_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t CS1_EN_EMPHP         :  4 ; /* bits 19:16 */
    ca_uint32_t CS1_EN_EMPHN         :  4 ; /* bits 23:20 */
    ca_uint32_t CS1_DLY_EMPH         :  4 ; /* bits 27:24 */
    ca_uint32_t CS1_SLEWRATE         :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CS_EMPH_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CS_SEL_EMPH_CTL             0xf431329c
#define DDR_CTRL_DPI_CS_SEL_EMPH_CTL_dft         0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CS_SEL_EMPHP         :  4 ; /* bits 3:0 */
    ca_uint32_t CS_SEL_EMPHN         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t CS1_SEL_EMPHP        :  4 ; /* bits 19:16 */
    ca_uint32_t CS1_SEL_EMPHN        :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CS_SEL_EMPH_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DDR4_CS_EMPH_CTL            0xf43132a0
#define DDR_CTRL_DPI_DDR4_CS_EMPH_CTL_dft        0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CS_EN_EMPHP          :  4 ; /* bits 3:0 */
    ca_uint32_t CS_EN_EMPHN          :  4 ; /* bits 7:4 */
    ca_uint32_t CS_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t CS_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t CS_SEL_EMPHP         :  4 ; /* bits 19:16 */
    ca_uint32_t CS_SEL_EMPHN         :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DDR4_CS_EMPH_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CK_EMPH_CTL                 0xf43132a4
#define DDR_CTRL_DPI_CK_EMPH_CTL_dft             0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CK_EN_EMPHP          :  4 ; /* bits 3:0 */
    ca_uint32_t CK_EN_EMPHN          :  4 ; /* bits 7:4 */
    ca_uint32_t CK_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t CK_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t CK1_EN_EMPHP         :  4 ; /* bits 19:16 */
    ca_uint32_t CK1_EN_EMPHN         :  4 ; /* bits 23:20 */
    ca_uint32_t CK1_DLY_EMPH         :  4 ; /* bits 27:24 */
    ca_uint32_t CK1_SLEWRATE         :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CK_EMPH_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_CK_SEL_EMPH_CTL             0xf43132a8
#define DDR_CTRL_DPI_CK_SEL_EMPH_CTL_dft         0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CK_SEL_EMPHP         :  4 ; /* bits 3:0 */
    ca_uint32_t CK_SEL_EMPHN         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t CK1_SEL_EMPHP        :  4 ; /* bits 19:16 */
    ca_uint32_t CK1_SEL_EMPHN        :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_CK_SEL_EMPH_CTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_EMPH_CTL_0              0xf43132ac
#define DDR_CTRL_DPI_ADR_EMPH_CTL_0_dft          0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR_EN_EMPHP_0       :  4 ; /* bits 3:0 */
    ca_uint32_t ADR_EN_EMPHN_0       :  4 ; /* bits 7:4 */
    ca_uint32_t ADR_DLY_EMPH_0       :  4 ; /* bits 11:8 */
    ca_uint32_t ADR_SLEWRATE_0       :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ADR_EN_EMPHP_1       :  4 ; /* bits 19:16 */
    ca_uint32_t ADR_EN_EMPHN_1       :  4 ; /* bits 23:20 */
    ca_uint32_t ADR_DLY_EMPH_1       :  4 ; /* bits 27:24 */
    ca_uint32_t ADR_SLEWRATE_1       :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_EMPH_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_EMPH_CTL_1              0xf43132b0
#define DDR_CTRL_DPI_ADR_EMPH_CTL_1_dft          0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR_EN_EMPHP_0       :  4 ; /* bits 3:0 */
    ca_uint32_t ADR_EN_EMPHN_0       :  4 ; /* bits 7:4 */
    ca_uint32_t ADR_DLY_EMPH_0       :  4 ; /* bits 11:8 */
    ca_uint32_t ADR_SLEWRATE_0       :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ADR_EN_EMPHP_1       :  4 ; /* bits 19:16 */
    ca_uint32_t ADR_EN_EMPHN_1       :  4 ; /* bits 23:20 */
    ca_uint32_t ADR_DLY_EMPH_1       :  4 ; /* bits 27:24 */
    ca_uint32_t ADR_SLEWRATE_1       :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_EMPH_CTL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_0          0xf43132b4
#define DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_0_dft      0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR_SEL_EMPHP_0      :  4 ; /* bits 3:0 */
    ca_uint32_t ADR_SEL_EMPHN_0      :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t ADR_SEL_EMPHP_1      :  4 ; /* bits 19:16 */
    ca_uint32_t ADR_SEL_EMPHN_1      :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_1          0xf43132b8
#define DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_1_dft      0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADR_SEL_EMPHP_0      :  4 ; /* bits 3:0 */
    ca_uint32_t ADR_SEL_EMPHN_0      :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t ADR_SEL_EMPHP_1      :  4 ; /* bits 19:16 */
    ca_uint32_t ADR_SEL_EMPHN_1      :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_EMPH_SEL_0              0xf43132bc
#define DDR_CTRL_DPI_ADR_EMPH_SEL_0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t A0_EMPH_SEL          :  2 ; /* bits 1:0 */
    ca_uint32_t A1_EMPH_SEL          :  2 ; /* bits 3:2 */
    ca_uint32_t A2_EMPH_SEL          :  2 ; /* bits 5:4 */
    ca_uint32_t A3_EMPH_SEL          :  2 ; /* bits 7:6 */
    ca_uint32_t A4_EMPH_SEL          :  2 ; /* bits 9:8 */
    ca_uint32_t A5_EMPH_SEL          :  2 ; /* bits 11:10 */
    ca_uint32_t A6_EMPH_SEL          :  2 ; /* bits 13:12 */
    ca_uint32_t A7_EMPH_SEL          :  2 ; /* bits 15:14 */
    ca_uint32_t A8_EMPH_SEL          :  2 ; /* bits 17:16 */
    ca_uint32_t A9_EMPH_SEL          :  2 ; /* bits 19:18 */
    ca_uint32_t A10_EMPH_SEL         :  2 ; /* bits 21:20 */
    ca_uint32_t A11_EMPH_SEL         :  2 ; /* bits 23:22 */
    ca_uint32_t A12_EMPH_SEL         :  2 ; /* bits 25:24 */
    ca_uint32_t A13_EMPH_SEL         :  2 ; /* bits 27:26 */
    ca_uint32_t A14_EMPH_SEL         :  2 ; /* bits 29:28 */
    ca_uint32_t A15_EMPH_SEL         :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_EMPH_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_EMPH_SEL_1              0xf43132c0
#define DDR_CTRL_DPI_ADR_EMPH_SEL_1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t A16_EMPH_SEL         :  2 ; /* bits 1:0 */
    ca_uint32_t AD1_4_EMPH_SEL       :  2 ; /* bits 3:2 */
    ca_uint32_t AD1_5_EMPH_SEL       :  2 ; /* bits 5:4 */
    ca_uint32_t BA0_EMPH_SEL         :  2 ; /* bits 7:6 */
    ca_uint32_t BA1_EMPH_SEL         :  2 ; /* bits 9:8 */
    ca_uint32_t BA2_EMPH_SEL         :  2 ; /* bits 11:10 */
    ca_uint32_t CAS_EMPH_SEL         :  2 ; /* bits 13:12 */
    ca_uint32_t CKE_EMPH_SEL         :  2 ; /* bits 15:14 */
    ca_uint32_t CKE1_EMPH_SEL        :  2 ; /* bits 17:16 */
    ca_uint32_t ODT_EMPH_SEL         :  2 ; /* bits 19:18 */
    ca_uint32_t PAR_EMPH_SEL         :  2 ; /* bits 21:20 */
    ca_uint32_t PAR1_EMPH_SEL        :  2 ; /* bits 23:22 */
    ca_uint32_t RAS_EMPH_SEL         :  2 ; /* bits 25:24 */
    ca_uint32_t WE_EMPH_SEL          :  2 ; /* bits 27:26 */
    ca_uint32_t RST_EMPH_SEL         :  2 ; /* bits 29:28 */
    ca_uint32_t ACT_EMPH_SEL         :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_EMPH_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_ADR_EMPH_SEL_2              0xf43132c4
#define DDR_CTRL_DPI_ADR_EMPH_SEL_2_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DDR4_BG0_EMPH_SEL    :  2 ; /* bits 1:0 */
    ca_uint32_t DDR4_CKE_EMPH_SEL    :  2 ; /* bits 3:2 */
    ca_uint32_t DDR4_TEN_EMPH_SEL    :  2 ; /* bits 5:4 */
    ca_uint32_t ALERT_EMPH_SEL       :  2 ; /* bits 7:6 */
    ca_uint32_t ALERT1_EMPH_SEL      :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_ADR_EMPH_SEL_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DBG_READ_0                  0xf43132c8
#define DDR_CTRL_DPI_DBG_READ_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQSEN_DBG            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DBG_READ_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DBG_READ_1                  0xf43132cc
#define DDR_CTRL_DPI_DBG_READ_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DPI_DBG_DLL          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DBG_READ_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DBG_READ_2                  0xf43132d0
#define DDR_CTRL_DPI_DBG_READ_2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DATA_EN_ERR_TYPE     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DBG_READ_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_0            0xf43132e8
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_1            0xf43132ec
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_2            0xf43132f0
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_3            0xf43132f4
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_4            0xf43132f8
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_4_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_5            0xf43132fc
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_5_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_6            0xf4313300
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_6_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_7            0xf4313304
#define DDR_CTRL_DPI_PAD_CTRL_ZPROG_7_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ZPROG_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ZPROG_1              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t ZPROG_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t ZPROG_3              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_CTRL_ZPROG_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_0           0xf4313308
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_1           0xf431330c
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_2           0xf4313310
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_3           0xf4313314
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_3_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_3_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_4           0xf4313318
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_4_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_4_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_5           0xf431331c
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_5_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_5_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_6           0xf4313320
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_6_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_6_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_7           0xf4313324
#define DDR_CTRL_DPI_PAD_NOCD2_ZPROG_7_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NOCD2_ZPROG_0        :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t NOCD2_ZPROG_1        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_PAD_NOCD2_ZPROG_7_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_OCD_SEL_2_0              0xf4313328
#define DDR_CTRL_DPI_DQ_OCD_SEL_2_0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_4_OCDP_SEL        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ_5_OCDP_SEL        :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_4_OCDN_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ_5_OCDN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ_6_OCDP_SEL        :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQ_7_OCDP_SEL        :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ_6_OCDN_SEL        :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQ_7_OCDN_SEL        :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_OCD_SEL_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQ_OCD_SEL_2_1              0xf431332c
#define DDR_CTRL_DPI_DQ_OCD_SEL_2_1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_4_OCDP_SEL        :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ_5_OCDP_SEL        :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ_4_OCDN_SEL        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ_5_OCDN_SEL        :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ_6_OCDP_SEL        :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQ_7_OCDP_SEL        :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ_6_OCDN_SEL        :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQ_7_OCDN_SEL        :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQ_OCD_SEL_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_OCD_SEL_2_0             0xf4313330
#define DDR_CTRL_DPI_DQS_OCD_SEL_2_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_4_OCDP_SEL       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_5_OCDP_SEL       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_4_OCDN_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_5_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQS_6_OCDP_SEL       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQS_7_OCDP_SEL       :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQS_6_OCDN_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQS_7_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_OCD_SEL_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DQS_OCD_SEL_2_1             0xf4313334
#define DDR_CTRL_DPI_DQS_OCD_SEL_2_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_4_OCDP_SEL       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_5_OCDP_SEL       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQS_4_OCDN_SEL       :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQS_5_OCDN_SEL       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQS_6_OCDP_SEL       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQS_7_OCDP_SEL       :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQS_6_OCDN_SEL       :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t DQS_7_OCDN_SEL       :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DQS_OCD_SEL_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DATA_VAL_CTRL_0             0xf431333c
#define DDR_CTRL_DPI_DATA_VAL_CTRL_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WRDATA_FORCE         :  1 ; /* bits 0:0 */
    ca_uint32_t RDDATA_FORCE         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t WRDATA_MASK_VAL      :  4 ; /* bits 7:4 */
    ca_uint32_t RDDATA_DBI_VAL       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DATA_VAL_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DATA_VAL_CTRL_1             0xf4313340
#define DDR_CTRL_DPI_DATA_VAL_CTRL_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WRDATA_VAL           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DATA_VAL_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_DATA_VAL_CTRL_2             0xf4313344
#define DDR_CTRL_DPI_DATA_VAL_CTRL_2_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RDDATA_VAL           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_DATA_VAL_CTRL_2_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RW_DMY_A               0xf4313400
#define DDR_CTRL_DPI_RW01_RW_DMY_A_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RW_DMY_A_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RW_DMY_B               0xf4313404
#define DDR_CTRL_DPI_RW01_RW_DMY_B_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RW_DMY_B_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_2_0          0xf4313408
#define DDR_CTRL_DPI_RW01_READ_CTRL_2_0_dft      0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN_DLY        :  1 ; /* bits 0:0 */
    ca_uint32_t TM_ODT_EN_SEL        :  2 ; /* bits 2:1 */
    ca_uint32_t TM_ODT_EN_ODD        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t DQ_ODT_FORCE_SIG     :  1 ; /* bits 20:20 */
    ca_uint32_t DQ_ODT_FORCE_SEL     :  1 ; /* bits 21:21 */
    ca_uint32_t DQS_ODT_FORCE_SIG    :  1 ; /* bits 22:22 */
    ca_uint32_t DQS_ODT_FORCE_SEL    :  1 ; /* bits 23:23 */
    ca_uint32_t EN_ODT_3_STG         :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_2_1          0xf431340c
#define DDR_CTRL_DPI_RW01_READ_CTRL_2_1_dft      0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN_DLY        :  1 ; /* bits 0:0 */
    ca_uint32_t TM_ODT_EN_SEL        :  2 ; /* bits 2:1 */
    ca_uint32_t TM_ODT_EN_ODD        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t DQ_ODT_FORCE_SIG     :  1 ; /* bits 20:20 */
    ca_uint32_t DQ_ODT_FORCE_SEL     :  1 ; /* bits 21:21 */
    ca_uint32_t DQS_ODT_FORCE_SIG    :  1 ; /* bits 22:22 */
    ca_uint32_t DQS_ODT_FORCE_SEL    :  1 ; /* bits 23:23 */
    ca_uint32_t EN_ODT_3_STG         :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_6_0          0xf4313418
#define DDR_CTRL_DPI_RW01_READ_CTRL_6_0_dft      0x000000fe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_6_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_6_1          0xf431341c
#define DDR_CTRL_DPI_RW01_READ_CTRL_6_1_dft      0x000000fe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_6_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_0         0xf4313420
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_1         0xf4313424
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_0         0xf4313428
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_1         0xf431342c
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_0     0xf4313430
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_0_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_1     0xf4313434
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_1_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_0         0xf4313438
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_1         0xf431343c
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_0         0xf4313440
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_1         0xf4313444
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_0     0xf4313448
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_0_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_1     0xf431344c
#define DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_1_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_0  0xf4313450
#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_PFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_PFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_1  0xf4313454
#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_PFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_PFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_0  0xf4313458
#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_NFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_NFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_1  0xf431345c
#define DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_NFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_NFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_DLY_0_0             0xf4313460
#define DDR_CTRL_DPI_RW01_DQ_DLY_0_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ0_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DQ1_DLY_SEL          :  4 ; /* bits 7:4 */
    ca_uint32_t DQ2_DLY_SEL          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ3_DLY_SEL          :  4 ; /* bits 15:12 */
    ca_uint32_t DQ4_DLY_SEL          :  4 ; /* bits 19:16 */
    ca_uint32_t DQ5_DLY_SEL          :  4 ; /* bits 23:20 */
    ca_uint32_t DQ6_DLY_SEL          :  4 ; /* bits 27:24 */
    ca_uint32_t DQ7_DLY_SEL          :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_DLY_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_DLY_0_1             0xf4313464
#define DDR_CTRL_DPI_RW01_DQ_DLY_0_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ0_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DQ1_DLY_SEL          :  4 ; /* bits 7:4 */
    ca_uint32_t DQ2_DLY_SEL          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ3_DLY_SEL          :  4 ; /* bits 15:12 */
    ca_uint32_t DQ4_DLY_SEL          :  4 ; /* bits 19:16 */
    ca_uint32_t DQ5_DLY_SEL          :  4 ; /* bits 23:20 */
    ca_uint32_t DQ6_DLY_SEL          :  4 ; /* bits 27:24 */
    ca_uint32_t DQ7_DLY_SEL          :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_DLY_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_DLY_1_0             0xf4313468
#define DDR_CTRL_DPI_RW01_DQ_DLY_1_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DM_DLY_SEL           :  4 ; /* bits 7:4 */
    ca_uint32_t DQS_OE_DLY_SEL       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_DLY_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_DLY_1_1             0xf431346c
#define DDR_CTRL_DPI_RW01_DQ_DLY_1_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DM_DLY_SEL           :  4 ; /* bits 7:4 */
    ca_uint32_t DQS_OE_DLY_SEL       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_DLY_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_OUT_0_0            0xf4313470
#define DDR_CTRL_DPI_RW01_CAL_OUT_0_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_RD_DLY_OUT       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_OUT_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_OUT_0_1            0xf4313474
#define DDR_CTRL_DPI_RW01_CAL_OUT_0_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_RD_DLY_OUT       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_OUT_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_WR_FIFO_0_0            0xf4313478
#define DDR_CTRL_DPI_RW01_WR_FIFO_0_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_WR_FIFO_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_WR_FIFO_0_1            0xf431347c
#define DDR_CTRL_DPI_RW01_WR_FIFO_0_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_WR_FIFO_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_WR_FIFO_1_0            0xf4313480
#define DDR_CTRL_DPI_RW01_WR_FIFO_1_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_WR_FIFO_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_WR_FIFO_1_1            0xf4313484
#define DDR_CTRL_DPI_RW01_WR_FIFO_1_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_WR_FIFO_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RD_FIFO_0_0            0xf4313488
#define DDR_CTRL_DPI_RW01_RD_FIFO_0_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RD_FIFO_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RD_FIFO_0_1            0xf431348c
#define DDR_CTRL_DPI_RW01_RD_FIFO_0_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RD_FIFO_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RD_FIFO_1_0            0xf4313490
#define DDR_CTRL_DPI_RW01_RD_FIFO_1_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RD_FIFO_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RD_FIFO_1_1            0xf4313494
#define DDR_CTRL_DPI_RW01_RD_FIFO_1_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RD_FIFO_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DBI_FIFO_0             0xf4313498
#define DDR_CTRL_DPI_RW01_DBI_FIFO_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RW_ADR_DBI           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DBI_FIFO_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DBI_FIFO_1             0xf431349c
#define DDR_CTRL_DPI_RW01_DBI_FIFO_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RW_ADR_DBI           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DBI_FIFO_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_INT_STATUS_1_0         0xf43134a0
#define DDR_CTRL_DPI_RW01_INT_STATUS_1_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_LBDY_INT_POS     :  8 ; /* bits 7:0 */
    ca_uint32_t CAL_RBDY_INT_POS     :  8 ; /* bits 15:8 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  8 ; /* bits 23:16 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_INT_STATUS_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_INT_STATUS_1_1         0xf43134a4
#define DDR_CTRL_DPI_RW01_INT_STATUS_1_1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_LBDY_INT_POS     :  8 ; /* bits 7:0 */
    ca_uint32_t CAL_RBDY_INT_POS     :  8 ; /* bits 15:8 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  8 ; /* bits 23:16 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_INT_STATUS_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_INT_STATUS_3_0         0xf43134a8
#define DDR_CTRL_DPI_RW01_INT_STATUS_3_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FIFO_PTR_INT_POS     :  9 ; /* bits 8:0 */
    ca_uint32_t FIFO_PTR_INT_NEG     :  9 ; /* bits 17:9 */
    ca_uint32_t CAL_LBDY_INT_POS     :  1 ; /* bits 18:18 */
    ca_uint32_t CAL_RBDY_INT_POS     :  1 ; /* bits 19:19 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  1 ; /* bits 20:20 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_INT_STATUS_3_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_INT_STATUS_3_1         0xf43134ac
#define DDR_CTRL_DPI_RW01_INT_STATUS_3_1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FIFO_PTR_INT_POS     :  9 ; /* bits 8:0 */
    ca_uint32_t FIFO_PTR_INT_NEG     :  9 ; /* bits 17:9 */
    ca_uint32_t CAL_LBDY_INT_POS     :  1 ; /* bits 18:18 */
    ca_uint32_t CAL_RBDY_INT_POS     :  1 ; /* bits 19:19 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  1 ; /* bits 20:20 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_INT_STATUS_3_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_PRBS_TMUX4_0           0xf43134b8
#define DDR_CTRL_DPI_RW01_PRBS_TMUX4_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ0_SEL              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ1_SEL              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ2_SEL              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ3_SEL              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQ4_SEL              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ5_SEL              :  3 ; /* bits 30:28 */
    ca_uint32_t DQS_TEST             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_PRBS_TMUX4_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_PRBS_TMUX4_1           0xf43134bc
#define DDR_CTRL_DPI_RW01_PRBS_TMUX4_1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ0_SEL              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ1_SEL              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ2_SEL              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ3_SEL              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQ4_SEL              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ5_SEL              :  3 ; /* bits 30:28 */
    ca_uint32_t DQS_TEST             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_PRBS_TMUX4_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_PRBS_TMUX5_0           0xf43134c0
#define DDR_CTRL_DPI_RW01_PRBS_TMUX5_0_dft       0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ6_SEL              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ7_SEL              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DM_SEL               :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t DATA_PRBS11_SEED     : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t DATA_PRBS11_INVS     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_PRBS_TMUX5_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_PRBS_TMUX5_1           0xf43134c4
#define DDR_CTRL_DPI_RW01_PRBS_TMUX5_1_dft       0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ6_SEL              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ7_SEL              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DM_SEL               :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t DATA_PRBS11_SEED     : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t DATA_PRBS11_INVS     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_PRBS_TMUX5_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RW_EMPH_CTL_0          0xf43134c8
#define DDR_CTRL_DPI_RW01_RW_EMPH_CTL_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t DQS_DLY_EMPH         :  4 ; /* bits 27:24 */
    ca_uint32_t DQS_SLEWRATE         :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RW_EMPH_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RW_EMPH_CTL_1          0xf43134cc
#define DDR_CTRL_DPI_RW01_RW_EMPH_CTL_1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t DQS_DLY_EMPH         :  4 ; /* bits 27:24 */
    ca_uint32_t DQS_SLEWRATE         :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RW_EMPH_CTL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_0      0xf43134d0
#define DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_0_dft  0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_SEL_EMPHP         :  4 ; /* bits 3:0 */
    ca_uint32_t DQ_SEL_EMPHN         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_SEL_EMPHP        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_SEL_EMPHN        :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_1      0xf43134d4
#define DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_1_dft  0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_SEL_EMPHP         :  4 ; /* bits 3:0 */
    ca_uint32_t DQ_SEL_EMPHN         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_SEL_EMPHP        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_SEL_EMPHN        :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_0          0xf43134d8
#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_IE_FRC_EN         :  8 ; /* bits 7:0 */
    ca_uint32_t DQ_IE_SIG            :  8 ; /* bits 15:8 */
    ca_uint32_t DQ_OE_FRC_EN         :  8 ; /* bits 23:16 */
    ca_uint32_t DQ_OE_SIG            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_1          0xf43134dc
#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_IE_FRC_EN         :  8 ; /* bits 7:0 */
    ca_uint32_t DQ_IE_SIG            :  8 ; /* bits 15:8 */
    ca_uint32_t DQ_OE_FRC_EN         :  8 ; /* bits 23:16 */
    ca_uint32_t DQ_OE_SIG            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_0          0xf43134e0
#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_0_dft      0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DM_IE_FRC_EN         :  1 ; /* bits 0:0 */
    ca_uint32_t DM_IE_SIG            :  1 ; /* bits 1:1 */
    ca_uint32_t DM_OE_FRC_EN         :  1 ; /* bits 2:2 */
    ca_uint32_t DM_OE_SIG            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t DM_PAT_OUT           :  1 ; /* bits 23:23 */
    ca_uint32_t DQ_PAT_OUT           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_1          0xf43134e4
#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_1_dft      0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DM_IE_FRC_EN         :  1 ; /* bits 0:0 */
    ca_uint32_t DM_IE_SIG            :  1 ; /* bits 1:1 */
    ca_uint32_t DM_OE_FRC_EN         :  1 ; /* bits 2:2 */
    ca_uint32_t DM_OE_SIG            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t DM_PAT_OUT           :  1 ; /* bits 23:23 */
    ca_uint32_t DQ_PAT_OUT           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_DBG_CTRL_0        0xf43134e8
#define DDR_CTRL_DPI_RW01_READ_DBG_CTRL_0_dft    0x1c000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_PD_EN             :  8 ; /* bits 7:0 */
    ca_uint32_t DQS_DM_PD_EN         :  2 ; /* bits 9:8 */
    ca_uint32_t TX_WDATA_MASK        :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CAL_RD_DLY_OUT_SEL   :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RD_DBG_SEL0          :  5 ; /* bits 20:16 */
    ca_uint32_t RD_DBG_SEL1          :  5 ; /* bits 25:21 */
    ca_uint32_t DQS_BURST_MON_WAIT_TIME :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_DBG_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_DBG_CTRL_1        0xf43134ec
#define DDR_CTRL_DPI_RW01_READ_DBG_CTRL_1_dft    0x1c000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_PD_EN             :  8 ; /* bits 7:0 */
    ca_uint32_t DQS_DM_PD_EN         :  2 ; /* bits 9:8 */
    ca_uint32_t TX_WDATA_MASK        :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CAL_RD_DLY_OUT_SEL   :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RD_DBG_SEL0          :  5 ; /* bits 20:16 */
    ca_uint32_t RD_DBG_SEL1          :  5 ; /* bits 25:21 */
    ca_uint32_t DQS_BURST_MON_WAIT_TIME :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_DBG_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_MON_0                  0xf43134f0
#define DDR_CTRL_DPI_RW01_MON_0_dft              0x03100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MON_DQS_CNT          :  4 ; /* bits 3:0 */
    ca_uint32_t MON_BURST_CNT        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_EN_DLY_SEL_PH    :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t FW_TM_DQS_EN_FTUN    :  4 ; /* bits 27:24 */
    ca_uint32_t CAL_FTUN_BOTH_HIT_FLG :  1 ; /* bits 28:28 */
    ca_uint32_t CAL_FTUN_OVER_FLG    :  1 ; /* bits 29:29 */
    ca_uint32_t CAL_FTUN_UNDER_FLG   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_MON_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_MON_1                  0xf43134f4
#define DDR_CTRL_DPI_RW01_MON_1_dft              0x03100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MON_DQS_CNT          :  4 ; /* bits 3:0 */
    ca_uint32_t MON_BURST_CNT        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_EN_DLY_SEL_PH    :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t FW_TM_DQS_EN_FTUN    :  4 ; /* bits 27:24 */
    ca_uint32_t CAL_FTUN_BOTH_HIT_FLG :  1 ; /* bits 28:28 */
    ca_uint32_t CAL_FTUN_OVER_FLG    :  1 ; /* bits 29:29 */
    ca_uint32_t CAL_FTUN_UNDER_FLG   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_MON_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_0           0xf43134f8
#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_0_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_0      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_1      :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_2      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_3      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_4      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_5      :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_6      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_7      :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_LS_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_1           0xf43134fc
#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_1_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_0      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_1      :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_2      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_3      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_4      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_5      :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_6      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_7      :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_LS_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_0       0xf4313500
#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_0_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_8      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_1       0xf4313504
#define DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_1_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_8      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_0           0xf4313508
#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_0_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_0     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_1     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_2     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_3     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_4     :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_5     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_6     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_7     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_RS_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_1           0xf431350c
#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_1_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_0     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_1     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_2     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_3     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_4     :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_5     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_6     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_7     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_RS_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_0       0xf4313510
#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_0_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_8     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_1       0xf4313514
#define DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_1_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_8     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_0          0xf4313518
#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DATA_INV             :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DQM_OE_TIME          :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_1          0xf431351c
#define DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DATA_INV             :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DQM_OE_TIME          :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_4_0          0xf4313520
#define DDR_CTRL_DPI_RW01_READ_CTRL_4_0_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_TE_UPD         :  1 ; /* bits 0:0 */
    ca_uint32_t FW_DQSEN_FTUN_UPD    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_4_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_4_1          0xf4313524
#define DDR_CTRL_DPI_RW01_READ_CTRL_4_1_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_TE_UPD         :  1 ; /* bits 0:0 */
    ca_uint32_t FW_DQSEN_FTUN_UPD    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_4_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_0_0          0xf43135f8
#define DDR_CTRL_DPI_RW01_READ_CTRL_0_0_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_DQS_EN_FTUN       :  2 ; /* bits 1:0 */
    ca_uint32_t TM_DQS_EN            :  5 ; /* bits 6:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_EN_DLY_SEL       :  6 ; /* bits 13:8 */
    ca_uint32_t DQS_FIFO_DLY_SEL     :  2 ; /* bits 15:14 */
    ca_uint32_t TM_DQ_LAT_DLY        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_GLITCH_DLY_PH    :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t DQS_RC1IN_DLY_SEL    :  5 ; /* bits 30:26 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW01_READ_CTRL_0_1          0xf43135fc
#define DDR_CTRL_DPI_RW01_READ_CTRL_0_1_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_DQS_EN_FTUN       :  2 ; /* bits 1:0 */
    ca_uint32_t TM_DQS_EN            :  5 ; /* bits 6:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_EN_DLY_SEL       :  6 ; /* bits 13:8 */
    ca_uint32_t DQS_FIFO_DLY_SEL     :  2 ; /* bits 15:14 */
    ca_uint32_t TM_DQ_LAT_DLY        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_GLITCH_DLY_PH    :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t DQS_RC1IN_DLY_SEL    :  5 ; /* bits 30:26 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW01_READ_CTRL_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RW_DMY_A               0xf4313600
#define DDR_CTRL_DPI_RW02_RW_DMY_A_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RW_DMY_A_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RW_DMY_B               0xf4313604
#define DDR_CTRL_DPI_RW02_RW_DMY_B_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DUMMY                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RW_DMY_B_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_2_0          0xf4313608
#define DDR_CTRL_DPI_RW02_READ_CTRL_2_0_dft      0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN_DLY        :  1 ; /* bits 0:0 */
    ca_uint32_t TM_ODT_EN_SEL        :  2 ; /* bits 2:1 */
    ca_uint32_t TM_ODT_EN_ODD        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t DQ_ODT_FORCE_SIG     :  1 ; /* bits 20:20 */
    ca_uint32_t DQ_ODT_FORCE_SEL     :  1 ; /* bits 21:21 */
    ca_uint32_t DQS_ODT_FORCE_SIG    :  1 ; /* bits 22:22 */
    ca_uint32_t DQS_ODT_FORCE_SEL    :  1 ; /* bits 23:23 */
    ca_uint32_t EN_ODT_3_STG         :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_2_1          0xf431360c
#define DDR_CTRL_DPI_RW02_READ_CTRL_2_1_dft      0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN_DLY        :  1 ; /* bits 0:0 */
    ca_uint32_t TM_ODT_EN_SEL        :  2 ; /* bits 2:1 */
    ca_uint32_t TM_ODT_EN_ODD        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t DQ_ODT_FORCE_SIG     :  1 ; /* bits 20:20 */
    ca_uint32_t DQ_ODT_FORCE_SEL     :  1 ; /* bits 21:21 */
    ca_uint32_t DQS_ODT_FORCE_SIG    :  1 ; /* bits 22:22 */
    ca_uint32_t DQS_ODT_FORCE_SEL    :  1 ; /* bits 23:23 */
    ca_uint32_t EN_ODT_3_STG         :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_6_0          0xf4313618
#define DDR_CTRL_DPI_RW02_READ_CTRL_6_0_dft      0x000000fe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_6_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_6_1          0xf431361c
#define DDR_CTRL_DPI_RW02_READ_CTRL_6_1_dft      0x000000fe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_ODT_EN            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_6_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_0         0xf4313620
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_1         0xf4313624
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_0         0xf4313628
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_1         0xf431362c
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_POS_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_0     0xf4313630
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_0_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_1     0xf4313634
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_1_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_POS_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_0         0xf4313638
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_1         0xf431363c
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_0  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_1  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_2  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_3  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_0         0xf4313640
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_0_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_1         0xf4313644
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_1_dft     0x0a0a0a0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_4  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_5  :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_6  :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t FW_RD_DLY_NEG_SEL_7  :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_0     0xf4313648
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_0_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_1     0xf431364c
#define DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_1_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_DLY_NEG_SEL_8  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_0  0xf4313650
#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_PFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_PFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_1  0xf4313654
#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_PFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_PFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_0  0xf4313658
#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_NFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_NFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_1  0xf431365c
#define DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LEAD_DET_NFIFO    :  9 ; /* bits 8:0 */
    ca_uint32_t RX_LAG_DET_NFIFO     :  9 ; /* bits 17:9 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_DLY_0_0             0xf4313660
#define DDR_CTRL_DPI_RW02_DQ_DLY_0_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ0_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DQ1_DLY_SEL          :  4 ; /* bits 7:4 */
    ca_uint32_t DQ2_DLY_SEL          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ3_DLY_SEL          :  4 ; /* bits 15:12 */
    ca_uint32_t DQ4_DLY_SEL          :  4 ; /* bits 19:16 */
    ca_uint32_t DQ5_DLY_SEL          :  4 ; /* bits 23:20 */
    ca_uint32_t DQ6_DLY_SEL          :  4 ; /* bits 27:24 */
    ca_uint32_t DQ7_DLY_SEL          :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_DLY_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_DLY_0_1             0xf4313664
#define DDR_CTRL_DPI_RW02_DQ_DLY_0_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ0_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DQ1_DLY_SEL          :  4 ; /* bits 7:4 */
    ca_uint32_t DQ2_DLY_SEL          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ3_DLY_SEL          :  4 ; /* bits 15:12 */
    ca_uint32_t DQ4_DLY_SEL          :  4 ; /* bits 19:16 */
    ca_uint32_t DQ5_DLY_SEL          :  4 ; /* bits 23:20 */
    ca_uint32_t DQ6_DLY_SEL          :  4 ; /* bits 27:24 */
    ca_uint32_t DQ7_DLY_SEL          :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_DLY_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_DLY_1_0             0xf4313668
#define DDR_CTRL_DPI_RW02_DQ_DLY_1_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DM_DLY_SEL           :  4 ; /* bits 7:4 */
    ca_uint32_t DQS_OE_DLY_SEL       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_DLY_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_DLY_1_1             0xf431366c
#define DDR_CTRL_DPI_RW02_DQ_DLY_1_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQS_DLY_SEL          :  4 ; /* bits 3:0 */
    ca_uint32_t DM_DLY_SEL           :  4 ; /* bits 7:4 */
    ca_uint32_t DQS_OE_DLY_SEL       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_DLY_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_OUT_0_0            0xf4313670
#define DDR_CTRL_DPI_RW02_CAL_OUT_0_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_RD_DLY_OUT       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_OUT_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_OUT_0_1            0xf4313674
#define DDR_CTRL_DPI_RW02_CAL_OUT_0_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_RD_DLY_OUT       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_OUT_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_WR_FIFO_0_0            0xf4313678
#define DDR_CTRL_DPI_RW02_WR_FIFO_0_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_WR_FIFO_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_WR_FIFO_0_1            0xf431367c
#define DDR_CTRL_DPI_RW02_WR_FIFO_0_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_WR_FIFO_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_WR_FIFO_1_0            0xf4313680
#define DDR_CTRL_DPI_RW02_WR_FIFO_1_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_WR_FIFO_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_WR_FIFO_1_1            0xf4313684
#define DDR_CTRL_DPI_RW02_WR_FIFO_1_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WR_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_WR_FIFO_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RD_FIFO_0_0            0xf4313688
#define DDR_CTRL_DPI_RW02_RD_FIFO_0_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RD_FIFO_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RD_FIFO_0_1            0xf431368c
#define DDR_CTRL_DPI_RW02_RD_FIFO_0_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_POS           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RD_FIFO_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RD_FIFO_1_0            0xf4313690
#define DDR_CTRL_DPI_RW02_RD_FIFO_1_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RD_FIFO_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RD_FIFO_1_1            0xf4313694
#define DDR_CTRL_DPI_RW02_RD_FIFO_1_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RD_ADR_NEG           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RD_FIFO_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DBI_FIFO_0             0xf4313698
#define DDR_CTRL_DPI_RW02_DBI_FIFO_0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RW_ADR_DBI           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DBI_FIFO_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DBI_FIFO_1             0xf431369c
#define DDR_CTRL_DPI_RW02_DBI_FIFO_1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RW_ADR_DBI           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DBI_FIFO_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_INT_STATUS_1_0         0xf43136a0
#define DDR_CTRL_DPI_RW02_INT_STATUS_1_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_LBDY_INT_POS     :  8 ; /* bits 7:0 */
    ca_uint32_t CAL_RBDY_INT_POS     :  8 ; /* bits 15:8 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  8 ; /* bits 23:16 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_INT_STATUS_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_INT_STATUS_1_1         0xf43136a4
#define DDR_CTRL_DPI_RW02_INT_STATUS_1_1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CAL_LBDY_INT_POS     :  8 ; /* bits 7:0 */
    ca_uint32_t CAL_RBDY_INT_POS     :  8 ; /* bits 15:8 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  8 ; /* bits 23:16 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_INT_STATUS_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_INT_STATUS_3_0         0xf43136a8
#define DDR_CTRL_DPI_RW02_INT_STATUS_3_0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FIFO_PTR_INT_POS     :  9 ; /* bits 8:0 */
    ca_uint32_t FIFO_PTR_INT_NEG     :  9 ; /* bits 17:9 */
    ca_uint32_t CAL_LBDY_INT_POS     :  1 ; /* bits 18:18 */
    ca_uint32_t CAL_RBDY_INT_POS     :  1 ; /* bits 19:19 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  1 ; /* bits 20:20 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_INT_STATUS_3_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_INT_STATUS_3_1         0xf43136ac
#define DDR_CTRL_DPI_RW02_INT_STATUS_3_1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FIFO_PTR_INT_POS     :  9 ; /* bits 8:0 */
    ca_uint32_t FIFO_PTR_INT_NEG     :  9 ; /* bits 17:9 */
    ca_uint32_t CAL_LBDY_INT_POS     :  1 ; /* bits 18:18 */
    ca_uint32_t CAL_RBDY_INT_POS     :  1 ; /* bits 19:19 */
    ca_uint32_t CAL_LBDY_INT_NEG     :  1 ; /* bits 20:20 */
    ca_uint32_t CAL_RBDY_INT_NEG     :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_INT_STATUS_3_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_PRBS_TMUX4_0           0xf43136b8
#define DDR_CTRL_DPI_RW02_PRBS_TMUX4_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ0_SEL              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ1_SEL              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ2_SEL              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ3_SEL              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQ4_SEL              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ5_SEL              :  3 ; /* bits 30:28 */
    ca_uint32_t DQS_TEST             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_PRBS_TMUX4_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_PRBS_TMUX4_1           0xf43136bc
#define DDR_CTRL_DPI_RW02_PRBS_TMUX4_1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ0_SEL              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DQ1_SEL              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t DQ2_SEL              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t DQ3_SEL              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t DQ4_SEL              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t DQ5_SEL              :  3 ; /* bits 30:28 */
    ca_uint32_t DQS_TEST             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_PRBS_TMUX4_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_PRBS_TMUX5_0           0xf43136c0
#define DDR_CTRL_DPI_RW02_PRBS_TMUX5_0_dft       0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ6_SEL              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ7_SEL              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DM_SEL               :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t DATA_PRBS11_SEED     : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t DATA_PRBS11_INVS     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_PRBS_TMUX5_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_PRBS_TMUX5_1           0xf43136c4
#define DDR_CTRL_DPI_RW02_PRBS_TMUX5_1_dft       0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ6_SEL              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQ7_SEL              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t DM_SEL               :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t DATA_PRBS11_SEED     : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t DATA_PRBS11_INVS     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_PRBS_TMUX5_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RW_EMPH_CTL_0          0xf43136c8
#define DDR_CTRL_DPI_RW02_RW_EMPH_CTL_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t DQS_DLY_EMPH         :  4 ; /* bits 27:24 */
    ca_uint32_t DQS_SLEWRATE         :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RW_EMPH_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RW_EMPH_CTL_1          0xf43136cc
#define DDR_CTRL_DPI_RW02_RW_EMPH_CTL_1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQ_DLY_EMPH          :  4 ; /* bits 11:8 */
    ca_uint32_t DQ_SLEWRATE          :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t DQS_DLY_EMPH         :  4 ; /* bits 27:24 */
    ca_uint32_t DQS_SLEWRATE         :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RW_EMPH_CTL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_0      0xf43136d0
#define DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_0_dft  0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_SEL_EMPHP         :  4 ; /* bits 3:0 */
    ca_uint32_t DQ_SEL_EMPHN         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_SEL_EMPHP        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_SEL_EMPHN        :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_1      0xf43136d4
#define DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_1_dft  0x00770077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_SEL_EMPHP         :  4 ; /* bits 3:0 */
    ca_uint32_t DQ_SEL_EMPHN         :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_SEL_EMPHP        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_SEL_EMPHN        :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_0          0xf43136d8
#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_IE_FRC_EN         :  8 ; /* bits 7:0 */
    ca_uint32_t DQ_IE_SIG            :  8 ; /* bits 15:8 */
    ca_uint32_t DQ_OE_FRC_EN         :  8 ; /* bits 23:16 */
    ca_uint32_t DQ_OE_SIG            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_1          0xf43136dc
#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_IE_FRC_EN         :  8 ; /* bits 7:0 */
    ca_uint32_t DQ_IE_SIG            :  8 ; /* bits 15:8 */
    ca_uint32_t DQ_OE_FRC_EN         :  8 ; /* bits 23:16 */
    ca_uint32_t DQ_OE_SIG            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_0          0xf43136e0
#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_0_dft      0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DM_IE_FRC_EN         :  1 ; /* bits 0:0 */
    ca_uint32_t DM_IE_SIG            :  1 ; /* bits 1:1 */
    ca_uint32_t DM_OE_FRC_EN         :  1 ; /* bits 2:2 */
    ca_uint32_t DM_OE_SIG            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t DM_PAT_OUT           :  1 ; /* bits 23:23 */
    ca_uint32_t DQ_PAT_OUT           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_1          0xf43136e4
#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_1_dft      0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DM_IE_FRC_EN         :  1 ; /* bits 0:0 */
    ca_uint32_t DM_IE_SIG            :  1 ; /* bits 1:1 */
    ca_uint32_t DM_OE_FRC_EN         :  1 ; /* bits 2:2 */
    ca_uint32_t DM_OE_SIG            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t DM_PAT_OUT           :  1 ; /* bits 23:23 */
    ca_uint32_t DQ_PAT_OUT           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_DBG_CTRL_0        0xf43136e8
#define DDR_CTRL_DPI_RW02_READ_DBG_CTRL_0_dft    0x1c000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_PD_EN             :  8 ; /* bits 7:0 */
    ca_uint32_t DQS_DM_PD_EN         :  2 ; /* bits 9:8 */
    ca_uint32_t TX_WDATA_MASK        :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CAL_RD_DLY_OUT_SEL   :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RD_DBG_SEL0          :  5 ; /* bits 20:16 */
    ca_uint32_t RD_DBG_SEL1          :  5 ; /* bits 25:21 */
    ca_uint32_t DQS_BURST_MON_WAIT_TIME :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_DBG_CTRL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_DBG_CTRL_1        0xf43136ec
#define DDR_CTRL_DPI_RW02_READ_DBG_CTRL_1_dft    0x1c000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DQ_PD_EN             :  8 ; /* bits 7:0 */
    ca_uint32_t DQS_DM_PD_EN         :  2 ; /* bits 9:8 */
    ca_uint32_t TX_WDATA_MASK        :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CAL_RD_DLY_OUT_SEL   :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RD_DBG_SEL0          :  5 ; /* bits 20:16 */
    ca_uint32_t RD_DBG_SEL1          :  5 ; /* bits 25:21 */
    ca_uint32_t DQS_BURST_MON_WAIT_TIME :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_DBG_CTRL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_MON_0                  0xf43136f0
#define DDR_CTRL_DPI_RW02_MON_0_dft              0x03100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MON_DQS_CNT          :  4 ; /* bits 3:0 */
    ca_uint32_t MON_BURST_CNT        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_EN_DLY_SEL_PH    :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t FW_TM_DQS_EN_FTUN    :  4 ; /* bits 27:24 */
    ca_uint32_t CAL_FTUN_BOTH_HIT_FLG :  1 ; /* bits 28:28 */
    ca_uint32_t CAL_FTUN_OVER_FLG    :  1 ; /* bits 29:29 */
    ca_uint32_t CAL_FTUN_UNDER_FLG   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_MON_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_MON_1                  0xf43136f4
#define DDR_CTRL_DPI_RW02_MON_1_dft              0x03100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MON_DQS_CNT          :  4 ; /* bits 3:0 */
    ca_uint32_t MON_BURST_CNT        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t DQS_EN_DLY_SEL_PH    :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t FW_TM_DQS_EN_FTUN    :  4 ; /* bits 27:24 */
    ca_uint32_t CAL_FTUN_BOTH_HIT_FLG :  1 ; /* bits 28:28 */
    ca_uint32_t CAL_FTUN_OVER_FLG    :  1 ; /* bits 29:29 */
    ca_uint32_t CAL_FTUN_UNDER_FLG   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_MON_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_0           0xf43136f8
#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_0_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_0      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_1      :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_2      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_3      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_4      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_5      :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_6      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_7      :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_LS_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_1           0xf43136fc
#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_1_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_0      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_1      :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_2      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_3      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_4      :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_5      :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_6      :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t PRE_SHIFT_SEL_7      :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_LS_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_0       0xf4313700
#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_0_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_8      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_1       0xf4313704
#define DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_1_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PRE_SHIFT_SEL_8      :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_0           0xf4313708
#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_0_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_0     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_1     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_2     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_3     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_4     :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_5     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_6     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_7     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_RS_SEL_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_1           0xf431370c
#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_1_dft       0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_0     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_1     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_2     :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_3     :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_4     :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_5     :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_6     :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t POST_SHIFT_SEL_7     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_RS_SEL_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_0       0xf4313710
#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_0_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_8     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_1       0xf4313714
#define DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_1_dft   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t POST_SHIFT_SEL_8     :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_0          0xf4313718
#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DATA_INV             :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DQM_OE_TIME          :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_1          0xf431371c
#define DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DATA_INV             :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t DQM_OE_TIME          :  4 ; /* bits 15:12 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_4_0          0xf4313720
#define DDR_CTRL_DPI_RW02_READ_CTRL_4_0_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_TE_UPD         :  1 ; /* bits 0:0 */
    ca_uint32_t FW_DQSEN_FTUN_UPD    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_4_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_4_1          0xf4313724
#define DDR_CTRL_DPI_RW02_READ_CTRL_4_1_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FW_RD_TE_UPD         :  1 ; /* bits 0:0 */
    ca_uint32_t FW_DQSEN_FTUN_UPD    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_4_1_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_0_0          0xf43137f8
#define DDR_CTRL_DPI_RW02_READ_CTRL_0_0_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_DQS_EN_FTUN       :  2 ; /* bits 1:0 */
    ca_uint32_t TM_DQS_EN            :  5 ; /* bits 6:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_EN_DLY_SEL       :  6 ; /* bits 13:8 */
    ca_uint32_t DQS_FIFO_DLY_SEL     :  2 ; /* bits 15:14 */
    ca_uint32_t TM_DQ_LAT_DLY        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_GLITCH_DLY_PH    :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t DQS_RC1IN_DLY_SEL    :  5 ; /* bits 30:26 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_0_0_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_DPI_RW02_READ_CTRL_0_1          0xf43137fc
#define DDR_CTRL_DPI_RW02_READ_CTRL_0_1_dft      0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TM_DQS_EN_FTUN       :  2 ; /* bits 1:0 */
    ca_uint32_t TM_DQS_EN            :  5 ; /* bits 6:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t DQS_EN_DLY_SEL       :  6 ; /* bits 13:8 */
    ca_uint32_t DQS_FIFO_DLY_SEL     :  2 ; /* bits 15:14 */
    ca_uint32_t TM_DQ_LAT_DLY        :  4 ; /* bits 19:16 */
    ca_uint32_t DQS_GLITCH_DLY_PH    :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t DQS_RC1IN_DLY_SEL    :  5 ; /* bits 30:26 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DPI_RW02_READ_CTRL_0_1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DPI */
#ifndef __ASSEMBLER__
typedef struct {
  DDR_CTRL_DPI_CRT_CTL_t                   CRT_CTL;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DDR_CTRL_DPI_PLL_CTL0_t                  PLL_CTL0;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DDR_CTRL_DPI_PLL_CTL1_t                  PLL_CTL1;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DDR_CTRL_DPI_PLL_CTL2_t                  PLL_CTL2;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DDR_CTRL_DPI_PLL_PI0_t                   PLL_PI0;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DDR_CTRL_DPI_PLL_PI1_t                   PLL_PI1;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DDR_CTRL_DPI_PLL_CTL3_t                  PLL_CTL3;                      /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DDR_CTRL_DPI_SSC0_t                      SSC0;                          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DDR_CTRL_DPI_SSC1_t                      SSC1;                          /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DDR_CTRL_DPI_SSC2_t                      SSC2;                          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DDR_CTRL_DPI_SSC3_t                      SSC3;                          /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DDR_CTRL_DPI_WDOG_t                      WDOG;                          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DDR_CTRL_DPI_DCC_CMD_t                   DCC_CMD;                       /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DDR_CTRL_DPI_DCC_DQS_0_t                 DCC_DQS_0;                     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DDR_CTRL_DPI_DCC_DQS_1_t                 DCC_DQS_1;                     /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DDR_CTRL_DPI_DCC_DQS_2_t                 DCC_DQS_2;                     /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DDR_CTRL_DPI_DCC_DQS_3_t                 DCC_DQS_3;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DDR_CTRL_DPI_DCC_DQ_0_t                  DCC_DQ_0;                      /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  DDR_CTRL_DPI_DCC_DQ_1_t                  DCC_DQ_1;                      /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  DDR_CTRL_DPI_DCC_DQ_2_t                  DCC_DQ_2;                      /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  DDR_CTRL_DPI_DCC_DQ_3_t                  DCC_DQ_3;                      /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  DDR_CTRL_DPI_DCC_CK_0_t                  DCC_CK_0;                      /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  DDR_CTRL_DPI_DCC_CK_1_t                  DCC_CK_1;                      /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  DDR_CTRL_DPI_PLL_CTL6_t                  PLL_CTL6;                      /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  DDR_CTRL_DPI_CRT_CTL_2_t                 CRT_CTL_2;                     /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[23];
  DDR_CTRL_DPI_CRT_DMY_t                   CRT_DMY;                       /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd26[3];
  DDR_CTRL_DPI_CRT_DMY1_t                  CRT_DMY1;                      /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd27[3];
  DDR_CTRL_DPI_AFIFO_STR_0_t               AFIFO_STR_0;                   /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd28[3];
  DDR_CTRL_DPI_AFIFO_STR_1_t               AFIFO_STR_1;                   /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd29[3];
  DDR_CTRL_DPI_AFIFO_STR_2_t               AFIFO_STR_2;                   /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd30[3];
  DDR_CTRL_DPI_CRT_RST_CTL_t               CRT_RST_CTL;                   /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd31[7];
  DDR_CTRL_DPI_AFIFO_STR_SEL_t             AFIFO_STR_SEL;                 /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd32[3];
  DDR_CTRL_DPI_PLL_PI2_t                   PLL_PI2;                       /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd33[3];
  DDR_CTRL_DPI_PLL_CTL4_t                  PLL_CTL4;                      /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd34[3];
  DDR_CTRL_DPI_PLL_PI3_t                   PLL_PI3;                       /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd35[3];
  DDR_CTRL_DPI_DCC_CS_t                    DCC_CS;                        /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd36[3];
  DDR_CTRL_DPI_DCC_CS1_t                   DCC_CS1;                       /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd37[3];
  DDR_CTRL_DPI_PLL_CTL5_t                  PLL_CTL5;                      /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd38[83];
  DDR_CTRL_DPI_ADR_DLY_0_t                 ADR_DLY_0;                     /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd39[3];
  DDR_CTRL_DPI_ADR_DLY_1_t                 ADR_DLY_1;                     /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd40[3];
  DDR_CTRL_DPI_ADR_DLY_2_t                 ADR_DLY_2;                     /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd41[3];
  DDR_CTRL_DPI_CMD_DLY_0_t                 CMD_DLY_0;                     /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd42[3];
  DDR_CTRL_DPI_CMD_DLY_1_t                 CMD_DLY_1;                     /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd43[3];
  DDR_CTRL_DPI_PAD_OE_CTL_t                PAD_OE_CTL;                    /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd44[3];
  DDR_CTRL_DPI_PAD_OE_CTL_EX_t             PAD_OE_CTL_EX;                 /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd45[3];
  DDR_CTRL_DPI_PAD_ALERT_SEL_0_t           PAD_ALERT_SEL_0;               /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd46[3];
  DDR_CTRL_DPI_PAD_ALERT_SEL_1_t           PAD_ALERT_SEL_1;               /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd47[3];
  DDR_CTRL_DPI_PAD_ALERT_1_SEL_0_t         PAD_ALERT_1_SEL_0;             /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd48[3];
  DDR_CTRL_DPI_PAD_ALERT_1_SEL_1_t         PAD_ALERT_1_SEL_1;             /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd49[3];
  DDR_CTRL_DPI_PAD_IDDQ_t                  PAD_IDDQ;                      /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd50[3];
  DDR_CTRL_DPI_PAD_CTRL_PROG_t             PAD_CTRL_PROG;                 /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd51[11];
  DDR_CTRL_DPI_ZQ_NOCD2_t                  ZQ_NOCD2;                      /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd52[3];
  DDR_CTRL_DPI_PAD_ZCTRL_STATUS_t          PAD_ZCTRL_STATUS;              /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd53[3];
  DDR_CTRL_DPI_PAD_ZCTRL_RESULT_t          PAD_ZCTRL_RESULT;              /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd54[3];
  DDR_CTRL_DPI_PAD_ZCTRL_RESULT_D_t        PAD_ZCTRL_RESULT_D;            /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd55[3];
  DDR_CTRL_DPI_PAD_RZCTRL_STATUS_t         PAD_RZCTRL_STATUS;             /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd56[3];
  DDR_CTRL_DPI_DQ_DQS_CTRL_t               DQ_DQS_CTRL;                   /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd57[3];
  DDR_CTRL_DPI_CMD_ADR_PH_t                CMD_ADR_PH;                    /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd58[3];
  DDR_CTRL_DPI_DQ_PAT_IN0_t                DQ_PAT_IN0;                    /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd59[3];
  DDR_CTRL_DPI_DQ_PAT_IN1_t                DQ_PAT_IN1;                    /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd60[3];
  DDR_CTRL_DPI_WRLVL_DQS_DATA_t            WRLVL_DQS_DATA;                /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd61[3];
  DDR_CTRL_DPI_TEST_CTRL0_t                TEST_CTRL0;                    /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd62[3];
  DDR_CTRL_DPI_TEST_CTRL1_t                TEST_CTRL1;                    /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd63[3];
  DDR_CTRL_DPI_HALF_CYC_DET_t              HALF_CYC_DET;                  /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd64[3];
  DDR_CTRL_DPI_READ_CTRL_1_t               READ_CTRL_1;                   /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd65[3];
  DDR_CTRL_DPI_TX_RPT_CTRL_t               TX_RPT_CTRL;                   /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd66[3];
  DDR_CTRL_DPI_CAL_SHIFT_CTRL_t            CAL_SHIFT_CTRL;                /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd67[3];
  DDR_CTRL_DPI_DT_SET0_t                   DT_SET0;                       /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd68[3];
  DDR_CTRL_DPI_ODT_TTCP0_SET0_t            ODT_TTCP0_SET0;                /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd69[3];
  DDR_CTRL_DPI_ODT_TTCP1_SET0_t            ODT_TTCP1_SET0;                /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd70[3];
  DDR_CTRL_DPI_ODT_TTCN0_SET0_t            ODT_TTCN0_SET0;                /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd71[3];
  DDR_CTRL_DPI_ODT_TTCN1_SET0_t            ODT_TTCN1_SET0;                /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd72[3];
  DDR_CTRL_DPI_OCDP0_SET0_t                OCDP0_SET0;                    /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd73[3];
  DDR_CTRL_DPI_OCDP1_SET0_t                OCDP1_SET0;                    /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd74[3];
  DDR_CTRL_DPI_OCDN0_SET0_t                OCDN0_SET0;                    /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd75[3];
  DDR_CTRL_DPI_OCDN1_SET0_t                OCDN1_SET0;                    /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd76[3];
  DDR_CTRL_DPI_ODT_TTCP0_SET1_t            ODT_TTCP0_SET1;                /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd77[3];
  DDR_CTRL_DPI_ODT_TTCP1_SET1_t            ODT_TTCP1_SET1;                /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd78[3];
  DDR_CTRL_DPI_ODT_TTCN0_SET1_t            ODT_TTCN0_SET1;                /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd79[3];
  DDR_CTRL_DPI_ODT_TTCN1_SET1_t            ODT_TTCN1_SET1;                /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd80[3];
  DDR_CTRL_DPI_OCDP0_SET1_t                OCDP0_SET1;                    /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd81[3];
  DDR_CTRL_DPI_OCDP1_SET1_t                OCDP1_SET1;                    /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd82[3];
  DDR_CTRL_DPI_OCDN0_SET1_t                OCDN0_SET1;                    /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd83[3];
  DDR_CTRL_DPI_OCDN1_SET1_t                OCDN1_SET1;                    /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd84[3];
  DDR_CTRL_DPI_DQ_ODT_SEL_0_t              DQ_ODT_SEL_0;                  /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd85[3];
  DDR_CTRL_DPI_DQ_ODT_SEL_1_t              DQ_ODT_SEL_1;                  /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd86[3];
  DDR_CTRL_DPI_DQ_OCD_SEL_0_t              DQ_OCD_SEL_0;                  /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd87[3];
  DDR_CTRL_DPI_DQ_OCD_SEL_1_t              DQ_OCD_SEL_1;                  /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd88[3];
  DDR_CTRL_DPI_DQS_P_ODT_SEL_0_t           DQS_P_ODT_SEL_0;               /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd89[3];
  DDR_CTRL_DPI_DQS_P_ODT_SEL_1_t           DQS_P_ODT_SEL_1;               /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd90[3];
  DDR_CTRL_DPI_DQS_N_ODT_SEL_0_t           DQS_N_ODT_SEL_0;               /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd91[3];
  DDR_CTRL_DPI_DQS_N_ODT_SEL_1_t           DQS_N_ODT_SEL_1;               /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd92[3];
  DDR_CTRL_DPI_DQS_OCD_SEL_0_t             DQS_OCD_SEL_0;                 /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd93[3];
  DDR_CTRL_DPI_DQS_OCD_SEL_1_t             DQS_OCD_SEL_1;                 /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd94[3];
  DDR_CTRL_DPI_CKE_OCD_SEL_t               CKE_OCD_SEL;                   /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd95[3];
  DDR_CTRL_DPI_ADR_OCD_SEL_t               ADR_OCD_SEL;                   /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd96[3];
  DDR_CTRL_DPI_CK_OCD_SEL_t                CK_OCD_SEL;                    /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd97[3];
  DDR_CTRL_DPI_PAD_BUS_0_t                 PAD_BUS_0;                     /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd98[3];
  DDR_CTRL_DPI_PAD_BUS_1_t                 PAD_BUS_1;                     /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd99[3];
  DDR_CTRL_DPI_PAD_BUS_2_t                 PAD_BUS_2;                     /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd100[3];
  DDR_CTRL_DPI_ZQ_TRIM_t                   ZQ_TRIM;                       /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd101[3];
  DDR_CTRL_DPI_OCD_SEL_0_t                 OCD_SEL_0;                     /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd102[3];
  DDR_CTRL_DPI_OCD_SEL_1_t                 OCD_SEL_1;                     /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd103[3];
  DDR_CTRL_DPI_OCD_SEL_2_t                 OCD_SEL_2;                     /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd104[3];
  DDR_CTRL_DPI_OCD_SEL_3_t                 OCD_SEL_3;                     /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd105[3];
  DDR_CTRL_DPI_OCD_SEL_4_t                 OCD_SEL_4;                     /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd106[3];
  DDR_CTRL_DPI_OCD_SEL_5_t                 OCD_SEL_5;                     /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd107[3];
  DDR_CTRL_DPI_OCD_SEL_6_t                 OCD_SEL_6;                     /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd108[3];
  DDR_CTRL_DPI_OCD_SEL_7_t                 OCD_SEL_7;                     /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd109[3];
  DDR_CTRL_DPI_OCD_SEL_8_t                 OCD_SEL_8;                     /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd110[3];
  DDR_CTRL_DPI_ODT_SEL_0_t                 ODT_SEL_0;                     /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd111[3];
  DDR_CTRL_DPI_CKE_ODT_SEL_t               CKE_ODT_SEL;                   /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd112[3];
  DDR_CTRL_DPI_ADR_ODT_SEL_t               ADR_ODT_SEL;                   /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd113[3];
  DDR_CTRL_DPI_CLK_ODT_SEL_t               CLK_ODT_SEL;                   /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd114[3];
  DDR_CTRL_DPI_DPI_CTRL_0_t                DPI_CTRL_0;                    /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd115[3];
  DDR_CTRL_DPI_DPI_CTRL_1_t                DPI_CTRL_1;                    /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd116[3];
  DDR_CTRL_DPI_DPI_CTRL_2_t                DPI_CTRL_2;                    /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd117[3];
  DDR_CTRL_DPI_BIST_2TO1_0_t               BIST_2TO1_0;                   /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd118[3];
  DDR_CTRL_DPI_BIST_2TO1_1_t               BIST_2TO1_1;                   /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd119[3];
  DDR_CTRL_DPI_BIST_PT_t                   BIST_PT;                       /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd120[3];
  DDR_CTRL_DPI_BIST_DEBUG_t                BIST_DEBUG;                    /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd121[3];
  DDR_CTRL_DPI_INT_CTRL_t                  INT_CTRL;                      /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd122[3];
  DDR_CTRL_DPI_INT_STATUS_0_t              INT_STATUS_0;                  /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd123[3];
  DDR_CTRL_DPI_INT_STATUS_2_t              INT_STATUS_2;                  /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd124[3];
  DDR_CTRL_DPI_SSC_STATUS_t                SSC_STATUS;                    /* addr: 0x00000260 */
  ca_uint32_t                              rsrvd125[3];
  DDR_CTRL_DPI_PRBS_TMUX0_t                PRBS_TMUX0;                    /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd126[3];
  DDR_CTRL_DPI_PRBS_TMUX1_t                PRBS_TMUX1;                    /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd127[3];
  DDR_CTRL_DPI_PRBS_TMUX2_t                PRBS_TMUX2;                    /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd128[3];
  DDR_CTRL_DPI_PRBS_TMUX3_t                PRBS_TMUX3;                    /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd129[3];
  DDR_CTRL_DPI_PRBS_TMUX6_t                PRBS_TMUX6;                    /* addr: 0x00000274 */
  ca_uint32_t                              rsrvd130[3];
  DDR_CTRL_DPI_PRBS_TMUX7_t                PRBS_TMUX7;                    /* addr: 0x00000278 */
  ca_uint32_t                              rsrvd131[3];
  DDR_CTRL_DPI_PRBS_TMUX8_t                PRBS_TMUX8;                    /* addr: 0x0000027c */
  ca_uint32_t                              rsrvd132[3];
  DDR_CTRL_DPI_PRBS_TMUX9_t                PRBS_TMUX9;                    /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd133[3];
  DDR_CTRL_DPI_PRBS_TMUX10_t               PRBS_TMUX10;                   /* addr: 0x00000284 */
  ca_uint32_t                              rsrvd134[3];
  DDR_CTRL_DPI_DUMMY_0_t                   DUMMY_0;                       /* addr: 0x00000288 */
  ca_uint32_t                              rsrvd135[3];
  DDR_CTRL_DPI_DUMMY_1_t                   DUMMY_1;                       /* addr: 0x0000028c */
  ca_uint32_t                              rsrvd136[3];
  DDR_CTRL_DPI_DUMMY_2_t                   DUMMY_2;                       /* addr: 0x00000290 */
  ca_uint32_t                              rsrvd137[3];
  DDR_CTRL_DPI_DUMMY_3_t                   DUMMY_3;                       /* addr: 0x00000294 */
  ca_uint32_t                              rsrvd138[3];
  DDR_CTRL_DPI_CS_EMPH_CTL_t               CS_EMPH_CTL;                   /* addr: 0x00000298 */
  ca_uint32_t                              rsrvd139[3];
  DDR_CTRL_DPI_CS_SEL_EMPH_CTL_t           CS_SEL_EMPH_CTL;               /* addr: 0x0000029c */
  ca_uint32_t                              rsrvd140[3];
  DDR_CTRL_DPI_DDR4_CS_EMPH_CTL_t          DDR4_CS_EMPH_CTL;              /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd141[3];
  DDR_CTRL_DPI_CK_EMPH_CTL_t               CK_EMPH_CTL;                   /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd142[3];
  DDR_CTRL_DPI_CK_SEL_EMPH_CTL_t           CK_SEL_EMPH_CTL;               /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd143[3];
  DDR_CTRL_DPI_ADR_EMPH_CTL_0_t            ADR_EMPH_CTL_0;                /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd144[3];
  DDR_CTRL_DPI_ADR_EMPH_CTL_1_t            ADR_EMPH_CTL_1;                /* addr: 0x000002b0 */
  ca_uint32_t                              rsrvd145[3];
  DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_0_t        ADR_SEL_EMPH_CTL_0;            /* addr: 0x000002b4 */
  ca_uint32_t                              rsrvd146[3];
  DDR_CTRL_DPI_ADR_SEL_EMPH_CTL_1_t        ADR_SEL_EMPH_CTL_1;            /* addr: 0x000002b8 */
  ca_uint32_t                              rsrvd147[3];
  DDR_CTRL_DPI_ADR_EMPH_SEL_0_t            ADR_EMPH_SEL_0;                /* addr: 0x000002bc */
  ca_uint32_t                              rsrvd148[3];
  DDR_CTRL_DPI_ADR_EMPH_SEL_1_t            ADR_EMPH_SEL_1;                /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd149[3];
  DDR_CTRL_DPI_ADR_EMPH_SEL_2_t            ADR_EMPH_SEL_2;                /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd150[3];
  DDR_CTRL_DPI_DBG_READ_0_t                DBG_READ_0;                    /* addr: 0x000002c8 */
  ca_uint32_t                              rsrvd151[3];
  DDR_CTRL_DPI_DBG_READ_1_t                DBG_READ_1;                    /* addr: 0x000002cc */
  ca_uint32_t                              rsrvd152[3];
  DDR_CTRL_DPI_DBG_READ_2_t                DBG_READ_2;                    /* addr: 0x000002d0 */
  ca_uint32_t                              rsrvd153[23];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_0_t          PAD_CTRL_ZPROG_0;              /* addr: 0x000002e8 */
  ca_uint32_t                              rsrvd154[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_1_t          PAD_CTRL_ZPROG_1;              /* addr: 0x000002ec */
  ca_uint32_t                              rsrvd155[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_2_t          PAD_CTRL_ZPROG_2;              /* addr: 0x000002f0 */
  ca_uint32_t                              rsrvd156[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_3_t          PAD_CTRL_ZPROG_3;              /* addr: 0x000002f4 */
  ca_uint32_t                              rsrvd157[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_4_t          PAD_CTRL_ZPROG_4;              /* addr: 0x000002f8 */
  ca_uint32_t                              rsrvd158[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_5_t          PAD_CTRL_ZPROG_5;              /* addr: 0x000002fc */
  ca_uint32_t                              rsrvd159[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_6_t          PAD_CTRL_ZPROG_6;              /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd160[3];
  DDR_CTRL_DPI_PAD_CTRL_ZPROG_7_t          PAD_CTRL_ZPROG_7;              /* addr: 0x00000304 */
  ca_uint32_t                              rsrvd161[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_0_t         PAD_NOCD2_ZPROG_0;             /* addr: 0x00000308 */
  ca_uint32_t                              rsrvd162[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_1_t         PAD_NOCD2_ZPROG_1;             /* addr: 0x0000030c */
  ca_uint32_t                              rsrvd163[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_2_t         PAD_NOCD2_ZPROG_2;             /* addr: 0x00000310 */
  ca_uint32_t                              rsrvd164[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_3_t         PAD_NOCD2_ZPROG_3;             /* addr: 0x00000314 */
  ca_uint32_t                              rsrvd165[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_4_t         PAD_NOCD2_ZPROG_4;             /* addr: 0x00000318 */
  ca_uint32_t                              rsrvd166[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_5_t         PAD_NOCD2_ZPROG_5;             /* addr: 0x0000031c */
  ca_uint32_t                              rsrvd167[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_6_t         PAD_NOCD2_ZPROG_6;             /* addr: 0x00000320 */
  ca_uint32_t                              rsrvd168[3];
  DDR_CTRL_DPI_PAD_NOCD2_ZPROG_7_t         PAD_NOCD2_ZPROG_7;             /* addr: 0x00000324 */
  ca_uint32_t                              rsrvd169[3];
  DDR_CTRL_DPI_DQ_OCD_SEL_2_0_t            DQ_OCD_SEL_2_0;                /* addr: 0x00000328 */
  ca_uint32_t                              rsrvd170[3];
  DDR_CTRL_DPI_DQ_OCD_SEL_2_1_t            DQ_OCD_SEL_2_1;                /* addr: 0x0000032c */
  ca_uint32_t                              rsrvd171[3];
  DDR_CTRL_DPI_DQS_OCD_SEL_2_0_t           DQS_OCD_SEL_2_0;               /* addr: 0x00000330 */
  ca_uint32_t                              rsrvd172[3];
  DDR_CTRL_DPI_DQS_OCD_SEL_2_1_t           DQS_OCD_SEL_2_1;               /* addr: 0x00000334 */
  ca_uint32_t                              rsrvd173[7];
  DDR_CTRL_DPI_DATA_VAL_CTRL_0_t           DATA_VAL_CTRL_0;               /* addr: 0x0000033c */
  ca_uint32_t                              rsrvd174[3];
  DDR_CTRL_DPI_DATA_VAL_CTRL_1_t           DATA_VAL_CTRL_1;               /* addr: 0x00000340 */
  ca_uint32_t                              rsrvd175[3];
  DDR_CTRL_DPI_DATA_VAL_CTRL_2_t           DATA_VAL_CTRL_2;               /* addr: 0x00000344 */
  ca_uint32_t                              rsrvd176[187];
  DDR_CTRL_DPI_RW01_RW_DMY_A_t             RW01_RW_DMY_A;                 /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd177[3];
  DDR_CTRL_DPI_RW01_RW_DMY_B_t             RW01_RW_DMY_B;                 /* addr: 0x00000404 */
  ca_uint32_t                              rsrvd178[3];
  DDR_CTRL_DPI_RW01_READ_CTRL_2_0_t        RW01_READ_CTRL_2_0;            /* addr: 0x00000408 */
  ca_uint32_t                              rsrvd179[3];
  DDR_CTRL_DPI_RW01_READ_CTRL_2_1_t        RW01_READ_CTRL_2_1;            /* addr: 0x0000040c */
  ca_uint32_t                              rsrvd180[11];
  DDR_CTRL_DPI_RW01_READ_CTRL_6_0_t        RW01_READ_CTRL_6_0;            /* addr: 0x00000418 */
  ca_uint32_t                              rsrvd181[3];
  DDR_CTRL_DPI_RW01_READ_CTRL_6_1_t        RW01_READ_CTRL_6_1;            /* addr: 0x0000041c */
  ca_uint32_t                              rsrvd182[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_0_t       RW01_DQS_IN_DLY_0_0;           /* addr: 0x00000420 */
  ca_uint32_t                              rsrvd183[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_0_1_t       RW01_DQS_IN_DLY_0_1;           /* addr: 0x00000424 */
  ca_uint32_t                              rsrvd184[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_0_t       RW01_DQS_IN_DLY_1_0;           /* addr: 0x00000428 */
  ca_uint32_t                              rsrvd185[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_1_t       RW01_DQS_IN_DLY_1_1;           /* addr: 0x0000042c */
  ca_uint32_t                              rsrvd186[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_0_t   RW01_DQS_IN_DLY_1_DBI_0;       /* addr: 0x00000430 */
  ca_uint32_t                              rsrvd187[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_1_DBI_1_t   RW01_DQS_IN_DLY_1_DBI_1;       /* addr: 0x00000434 */
  ca_uint32_t                              rsrvd188[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_0_t       RW01_DQS_IN_DLY_2_0;           /* addr: 0x00000438 */
  ca_uint32_t                              rsrvd189[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_2_1_t       RW01_DQS_IN_DLY_2_1;           /* addr: 0x0000043c */
  ca_uint32_t                              rsrvd190[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_0_t       RW01_DQS_IN_DLY_3_0;           /* addr: 0x00000440 */
  ca_uint32_t                              rsrvd191[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_1_t       RW01_DQS_IN_DLY_3_1;           /* addr: 0x00000444 */
  ca_uint32_t                              rsrvd192[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_0_t   RW01_DQS_IN_DLY_3_DBI_0;       /* addr: 0x00000448 */
  ca_uint32_t                              rsrvd193[3];
  DDR_CTRL_DPI_RW01_DQS_IN_DLY_3_DBI_1_t   RW01_DQS_IN_DLY_3_DBI_1;       /* addr: 0x0000044c */
  ca_uint32_t                              rsrvd194[3];
  DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_0_t RW01_VALID_WIN_DET_PFIFO_0;    /* addr: 0x00000450 */
  ca_uint32_t                              rsrvd195[3];
  DDR_CTRL_DPI_RW01_VALID_WIN_DET_PFIFO_1_t RW01_VALID_WIN_DET_PFIFO_1;    /* addr: 0x00000454 */
  ca_uint32_t                              rsrvd196[3];
  DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_0_t RW01_VALID_WIN_DET_NFIFO_0;    /* addr: 0x00000458 */
  ca_uint32_t                              rsrvd197[3];
  DDR_CTRL_DPI_RW01_VALID_WIN_DET_NFIFO_1_t RW01_VALID_WIN_DET_NFIFO_1;    /* addr: 0x0000045c */
  ca_uint32_t                              rsrvd198[3];
  DDR_CTRL_DPI_RW01_DQ_DLY_0_0_t           RW01_DQ_DLY_0_0;               /* addr: 0x00000460 */
  ca_uint32_t                              rsrvd199[3];
  DDR_CTRL_DPI_RW01_DQ_DLY_0_1_t           RW01_DQ_DLY_0_1;               /* addr: 0x00000464 */
  ca_uint32_t                              rsrvd200[3];
  DDR_CTRL_DPI_RW01_DQ_DLY_1_0_t           RW01_DQ_DLY_1_0;               /* addr: 0x00000468 */
  ca_uint32_t                              rsrvd201[3];
  DDR_CTRL_DPI_RW01_DQ_DLY_1_1_t           RW01_DQ_DLY_1_1;               /* addr: 0x0000046c */
  ca_uint32_t                              rsrvd202[3];
  DDR_CTRL_DPI_RW01_CAL_OUT_0_0_t          RW01_CAL_OUT_0_0;              /* addr: 0x00000470 */
  ca_uint32_t                              rsrvd203[3];
  DDR_CTRL_DPI_RW01_CAL_OUT_0_1_t          RW01_CAL_OUT_0_1;              /* addr: 0x00000474 */
  ca_uint32_t                              rsrvd204[3];
  DDR_CTRL_DPI_RW01_WR_FIFO_0_0_t          RW01_WR_FIFO_0_0;              /* addr: 0x00000478 */
  ca_uint32_t                              rsrvd205[3];
  DDR_CTRL_DPI_RW01_WR_FIFO_0_1_t          RW01_WR_FIFO_0_1;              /* addr: 0x0000047c */
  ca_uint32_t                              rsrvd206[3];
  DDR_CTRL_DPI_RW01_WR_FIFO_1_0_t          RW01_WR_FIFO_1_0;              /* addr: 0x00000480 */
  ca_uint32_t                              rsrvd207[3];
  DDR_CTRL_DPI_RW01_WR_FIFO_1_1_t          RW01_WR_FIFO_1_1;              /* addr: 0x00000484 */
  ca_uint32_t                              rsrvd208[3];
  DDR_CTRL_DPI_RW01_RD_FIFO_0_0_t          RW01_RD_FIFO_0_0;              /* addr: 0x00000488 */
  ca_uint32_t                              rsrvd209[3];
  DDR_CTRL_DPI_RW01_RD_FIFO_0_1_t          RW01_RD_FIFO_0_1;              /* addr: 0x0000048c */
  ca_uint32_t                              rsrvd210[3];
  DDR_CTRL_DPI_RW01_RD_FIFO_1_0_t          RW01_RD_FIFO_1_0;              /* addr: 0x00000490 */
  ca_uint32_t                              rsrvd211[3];
  DDR_CTRL_DPI_RW01_RD_FIFO_1_1_t          RW01_RD_FIFO_1_1;              /* addr: 0x00000494 */
  ca_uint32_t                              rsrvd212[3];
  DDR_CTRL_DPI_RW01_DBI_FIFO_0_t           RW01_DBI_FIFO_0;               /* addr: 0x00000498 */
  ca_uint32_t                              rsrvd213[3];
  DDR_CTRL_DPI_RW01_DBI_FIFO_1_t           RW01_DBI_FIFO_1;               /* addr: 0x0000049c */
  ca_uint32_t                              rsrvd214[3];
  DDR_CTRL_DPI_RW01_INT_STATUS_1_0_t       RW01_INT_STATUS_1_0;           /* addr: 0x000004a0 */
  ca_uint32_t                              rsrvd215[3];
  DDR_CTRL_DPI_RW01_INT_STATUS_1_1_t       RW01_INT_STATUS_1_1;           /* addr: 0x000004a4 */
  ca_uint32_t                              rsrvd216[3];
  DDR_CTRL_DPI_RW01_INT_STATUS_3_0_t       RW01_INT_STATUS_3_0;           /* addr: 0x000004a8 */
  ca_uint32_t                              rsrvd217[3];
  DDR_CTRL_DPI_RW01_INT_STATUS_3_1_t       RW01_INT_STATUS_3_1;           /* addr: 0x000004ac */
  ca_uint32_t                              rsrvd218[11];
  DDR_CTRL_DPI_RW01_PRBS_TMUX4_0_t         RW01_PRBS_TMUX4_0;             /* addr: 0x000004b8 */
  ca_uint32_t                              rsrvd219[3];
  DDR_CTRL_DPI_RW01_PRBS_TMUX4_1_t         RW01_PRBS_TMUX4_1;             /* addr: 0x000004bc */
  ca_uint32_t                              rsrvd220[3];
  DDR_CTRL_DPI_RW01_PRBS_TMUX5_0_t         RW01_PRBS_TMUX5_0;             /* addr: 0x000004c0 */
  ca_uint32_t                              rsrvd221[3];
  DDR_CTRL_DPI_RW01_PRBS_TMUX5_1_t         RW01_PRBS_TMUX5_1;             /* addr: 0x000004c4 */
  ca_uint32_t                              rsrvd222[3];
  DDR_CTRL_DPI_RW01_RW_EMPH_CTL_0_t        RW01_RW_EMPH_CTL_0;            /* addr: 0x000004c8 */
  ca_uint32_t                              rsrvd223[3];
  DDR_CTRL_DPI_RW01_RW_EMPH_CTL_1_t        RW01_RW_EMPH_CTL_1;            /* addr: 0x000004cc */
  ca_uint32_t                              rsrvd224[3];
  DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_0_t    RW01_RW_SEL_EMPH_CTL_0;        /* addr: 0x000004d0 */
  ca_uint32_t                              rsrvd225[3];
  DDR_CTRL_DPI_RW01_RW_SEL_EMPH_CTL_1_t    RW01_RW_SEL_EMPH_CTL_1;        /* addr: 0x000004d4 */
  ca_uint32_t                              rsrvd226[3];
  DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_0_t        RW01_DQ_IO_CTL_0_0;            /* addr: 0x000004d8 */
  ca_uint32_t                              rsrvd227[3];
  DDR_CTRL_DPI_RW01_DQ_IO_CTL_0_1_t        RW01_DQ_IO_CTL_0_1;            /* addr: 0x000004dc */
  ca_uint32_t                              rsrvd228[3];
  DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_0_t        RW01_DQ_IO_CTL_1_0;            /* addr: 0x000004e0 */
  ca_uint32_t                              rsrvd229[3];
  DDR_CTRL_DPI_RW01_DQ_IO_CTL_1_1_t        RW01_DQ_IO_CTL_1_1;            /* addr: 0x000004e4 */
  ca_uint32_t                              rsrvd230[3];
  DDR_CTRL_DPI_RW01_READ_DBG_CTRL_0_t      RW01_READ_DBG_CTRL_0;          /* addr: 0x000004e8 */
  ca_uint32_t                              rsrvd231[3];
  DDR_CTRL_DPI_RW01_READ_DBG_CTRL_1_t      RW01_READ_DBG_CTRL_1;          /* addr: 0x000004ec */
  ca_uint32_t                              rsrvd232[3];
  DDR_CTRL_DPI_RW01_MON_0_t                RW01_MON_0;                    /* addr: 0x000004f0 */
  ca_uint32_t                              rsrvd233[3];
  DDR_CTRL_DPI_RW01_MON_1_t                RW01_MON_1;                    /* addr: 0x000004f4 */
  ca_uint32_t                              rsrvd234[3];
  DDR_CTRL_DPI_RW01_CAL_LS_SEL_0_t         RW01_CAL_LS_SEL_0;             /* addr: 0x000004f8 */
  ca_uint32_t                              rsrvd235[3];
  DDR_CTRL_DPI_RW01_CAL_LS_SEL_1_t         RW01_CAL_LS_SEL_1;             /* addr: 0x000004fc */
  ca_uint32_t                              rsrvd236[3];
  DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_0_t     RW01_CAL_LS_SEL_DBI_0;         /* addr: 0x00000500 */
  ca_uint32_t                              rsrvd237[3];
  DDR_CTRL_DPI_RW01_CAL_LS_SEL_DBI_1_t     RW01_CAL_LS_SEL_DBI_1;         /* addr: 0x00000504 */
  ca_uint32_t                              rsrvd238[3];
  DDR_CTRL_DPI_RW01_CAL_RS_SEL_0_t         RW01_CAL_RS_SEL_0;             /* addr: 0x00000508 */
  ca_uint32_t                              rsrvd239[3];
  DDR_CTRL_DPI_RW01_CAL_RS_SEL_1_t         RW01_CAL_RS_SEL_1;             /* addr: 0x0000050c */
  ca_uint32_t                              rsrvd240[3];
  DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_0_t     RW01_CAL_RS_SEL_DBI_0;         /* addr: 0x00000510 */
  ca_uint32_t                              rsrvd241[3];
  DDR_CTRL_DPI_RW01_CAL_RS_SEL_DBI_1_t     RW01_CAL_RS_SEL_DBI_1;         /* addr: 0x00000514 */
  ca_uint32_t                              rsrvd242[3];
  DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_0_t        RW01_DQ_IO_CTL_2_0;            /* addr: 0x00000518 */
  ca_uint32_t                              rsrvd243[3];
  DDR_CTRL_DPI_RW01_DQ_IO_CTL_2_1_t        RW01_DQ_IO_CTL_2_1;            /* addr: 0x0000051c */
  ca_uint32_t                              rsrvd244[3];
  DDR_CTRL_DPI_RW01_READ_CTRL_4_0_t        RW01_READ_CTRL_4_0;            /* addr: 0x00000520 */
  ca_uint32_t                              rsrvd245[3];
  DDR_CTRL_DPI_RW01_READ_CTRL_4_1_t        RW01_READ_CTRL_4_1;            /* addr: 0x00000524 */
  ca_uint32_t                              rsrvd246[211];
  DDR_CTRL_DPI_RW01_READ_CTRL_0_0_t        RW01_READ_CTRL_0_0;            /* addr: 0x000005f8 */
  ca_uint32_t                              rsrvd247[3];
  DDR_CTRL_DPI_RW01_READ_CTRL_0_1_t        RW01_READ_CTRL_0_1;            /* addr: 0x000005fc */
  ca_uint32_t                              rsrvd248[3];
  DDR_CTRL_DPI_RW02_RW_DMY_A_t             RW02_RW_DMY_A;                 /* addr: 0x00000600 */
  ca_uint32_t                              rsrvd249[3];
  DDR_CTRL_DPI_RW02_RW_DMY_B_t             RW02_RW_DMY_B;                 /* addr: 0x00000604 */
  ca_uint32_t                              rsrvd250[3];
  DDR_CTRL_DPI_RW02_READ_CTRL_2_0_t        RW02_READ_CTRL_2_0;            /* addr: 0x00000608 */
  ca_uint32_t                              rsrvd251[3];
  DDR_CTRL_DPI_RW02_READ_CTRL_2_1_t        RW02_READ_CTRL_2_1;            /* addr: 0x0000060c */
  ca_uint32_t                              rsrvd252[11];
  DDR_CTRL_DPI_RW02_READ_CTRL_6_0_t        RW02_READ_CTRL_6_0;            /* addr: 0x00000618 */
  ca_uint32_t                              rsrvd253[3];
  DDR_CTRL_DPI_RW02_READ_CTRL_6_1_t        RW02_READ_CTRL_6_1;            /* addr: 0x0000061c */
  ca_uint32_t                              rsrvd254[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_0_t       RW02_DQS_IN_DLY_0_0;           /* addr: 0x00000620 */
  ca_uint32_t                              rsrvd255[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_0_1_t       RW02_DQS_IN_DLY_0_1;           /* addr: 0x00000624 */
  ca_uint32_t                              rsrvd256[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_0_t       RW02_DQS_IN_DLY_1_0;           /* addr: 0x00000628 */
  ca_uint32_t                              rsrvd257[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_1_t       RW02_DQS_IN_DLY_1_1;           /* addr: 0x0000062c */
  ca_uint32_t                              rsrvd258[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_0_t   RW02_DQS_IN_DLY_1_DBI_0;       /* addr: 0x00000630 */
  ca_uint32_t                              rsrvd259[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_1_DBI_1_t   RW02_DQS_IN_DLY_1_DBI_1;       /* addr: 0x00000634 */
  ca_uint32_t                              rsrvd260[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_0_t       RW02_DQS_IN_DLY_2_0;           /* addr: 0x00000638 */
  ca_uint32_t                              rsrvd261[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_2_1_t       RW02_DQS_IN_DLY_2_1;           /* addr: 0x0000063c */
  ca_uint32_t                              rsrvd262[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_0_t       RW02_DQS_IN_DLY_3_0;           /* addr: 0x00000640 */
  ca_uint32_t                              rsrvd263[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_1_t       RW02_DQS_IN_DLY_3_1;           /* addr: 0x00000644 */
  ca_uint32_t                              rsrvd264[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_0_t   RW02_DQS_IN_DLY_3_DBI_0;       /* addr: 0x00000648 */
  ca_uint32_t                              rsrvd265[3];
  DDR_CTRL_DPI_RW02_DQS_IN_DLY_3_DBI_1_t   RW02_DQS_IN_DLY_3_DBI_1;       /* addr: 0x0000064c */
  ca_uint32_t                              rsrvd266[3];
  DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_0_t RW02_VALID_WIN_DET_PFIFO_0;    /* addr: 0x00000650 */
  ca_uint32_t                              rsrvd267[3];
  DDR_CTRL_DPI_RW02_VALID_WIN_DET_PFIFO_1_t RW02_VALID_WIN_DET_PFIFO_1;    /* addr: 0x00000654 */
  ca_uint32_t                              rsrvd268[3];
  DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_0_t RW02_VALID_WIN_DET_NFIFO_0;    /* addr: 0x00000658 */
  ca_uint32_t                              rsrvd269[3];
  DDR_CTRL_DPI_RW02_VALID_WIN_DET_NFIFO_1_t RW02_VALID_WIN_DET_NFIFO_1;    /* addr: 0x0000065c */
  ca_uint32_t                              rsrvd270[3];
  DDR_CTRL_DPI_RW02_DQ_DLY_0_0_t           RW02_DQ_DLY_0_0;               /* addr: 0x00000660 */
  ca_uint32_t                              rsrvd271[3];
  DDR_CTRL_DPI_RW02_DQ_DLY_0_1_t           RW02_DQ_DLY_0_1;               /* addr: 0x00000664 */
  ca_uint32_t                              rsrvd272[3];
  DDR_CTRL_DPI_RW02_DQ_DLY_1_0_t           RW02_DQ_DLY_1_0;               /* addr: 0x00000668 */
  ca_uint32_t                              rsrvd273[3];
  DDR_CTRL_DPI_RW02_DQ_DLY_1_1_t           RW02_DQ_DLY_1_1;               /* addr: 0x0000066c */
  ca_uint32_t                              rsrvd274[3];
  DDR_CTRL_DPI_RW02_CAL_OUT_0_0_t          RW02_CAL_OUT_0_0;              /* addr: 0x00000670 */
  ca_uint32_t                              rsrvd275[3];
  DDR_CTRL_DPI_RW02_CAL_OUT_0_1_t          RW02_CAL_OUT_0_1;              /* addr: 0x00000674 */
  ca_uint32_t                              rsrvd276[3];
  DDR_CTRL_DPI_RW02_WR_FIFO_0_0_t          RW02_WR_FIFO_0_0;              /* addr: 0x00000678 */
  ca_uint32_t                              rsrvd277[3];
  DDR_CTRL_DPI_RW02_WR_FIFO_0_1_t          RW02_WR_FIFO_0_1;              /* addr: 0x0000067c */
  ca_uint32_t                              rsrvd278[3];
  DDR_CTRL_DPI_RW02_WR_FIFO_1_0_t          RW02_WR_FIFO_1_0;              /* addr: 0x00000680 */
  ca_uint32_t                              rsrvd279[3];
  DDR_CTRL_DPI_RW02_WR_FIFO_1_1_t          RW02_WR_FIFO_1_1;              /* addr: 0x00000684 */
  ca_uint32_t                              rsrvd280[3];
  DDR_CTRL_DPI_RW02_RD_FIFO_0_0_t          RW02_RD_FIFO_0_0;              /* addr: 0x00000688 */
  ca_uint32_t                              rsrvd281[3];
  DDR_CTRL_DPI_RW02_RD_FIFO_0_1_t          RW02_RD_FIFO_0_1;              /* addr: 0x0000068c */
  ca_uint32_t                              rsrvd282[3];
  DDR_CTRL_DPI_RW02_RD_FIFO_1_0_t          RW02_RD_FIFO_1_0;              /* addr: 0x00000690 */
  ca_uint32_t                              rsrvd283[3];
  DDR_CTRL_DPI_RW02_RD_FIFO_1_1_t          RW02_RD_FIFO_1_1;              /* addr: 0x00000694 */
  ca_uint32_t                              rsrvd284[3];
  DDR_CTRL_DPI_RW02_DBI_FIFO_0_t           RW02_DBI_FIFO_0;               /* addr: 0x00000698 */
  ca_uint32_t                              rsrvd285[3];
  DDR_CTRL_DPI_RW02_DBI_FIFO_1_t           RW02_DBI_FIFO_1;               /* addr: 0x0000069c */
  ca_uint32_t                              rsrvd286[3];
  DDR_CTRL_DPI_RW02_INT_STATUS_1_0_t       RW02_INT_STATUS_1_0;           /* addr: 0x000006a0 */
  ca_uint32_t                              rsrvd287[3];
  DDR_CTRL_DPI_RW02_INT_STATUS_1_1_t       RW02_INT_STATUS_1_1;           /* addr: 0x000006a4 */
  ca_uint32_t                              rsrvd288[3];
  DDR_CTRL_DPI_RW02_INT_STATUS_3_0_t       RW02_INT_STATUS_3_0;           /* addr: 0x000006a8 */
  ca_uint32_t                              rsrvd289[3];
  DDR_CTRL_DPI_RW02_INT_STATUS_3_1_t       RW02_INT_STATUS_3_1;           /* addr: 0x000006ac */
  ca_uint32_t                              rsrvd290[11];
  DDR_CTRL_DPI_RW02_PRBS_TMUX4_0_t         RW02_PRBS_TMUX4_0;             /* addr: 0x000006b8 */
  ca_uint32_t                              rsrvd291[3];
  DDR_CTRL_DPI_RW02_PRBS_TMUX4_1_t         RW02_PRBS_TMUX4_1;             /* addr: 0x000006bc */
  ca_uint32_t                              rsrvd292[3];
  DDR_CTRL_DPI_RW02_PRBS_TMUX5_0_t         RW02_PRBS_TMUX5_0;             /* addr: 0x000006c0 */
  ca_uint32_t                              rsrvd293[3];
  DDR_CTRL_DPI_RW02_PRBS_TMUX5_1_t         RW02_PRBS_TMUX5_1;             /* addr: 0x000006c4 */
  ca_uint32_t                              rsrvd294[3];
  DDR_CTRL_DPI_RW02_RW_EMPH_CTL_0_t        RW02_RW_EMPH_CTL_0;            /* addr: 0x000006c8 */
  ca_uint32_t                              rsrvd295[3];
  DDR_CTRL_DPI_RW02_RW_EMPH_CTL_1_t        RW02_RW_EMPH_CTL_1;            /* addr: 0x000006cc */
  ca_uint32_t                              rsrvd296[3];
  DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_0_t    RW02_RW_SEL_EMPH_CTL_0;        /* addr: 0x000006d0 */
  ca_uint32_t                              rsrvd297[3];
  DDR_CTRL_DPI_RW02_RW_SEL_EMPH_CTL_1_t    RW02_RW_SEL_EMPH_CTL_1;        /* addr: 0x000006d4 */
  ca_uint32_t                              rsrvd298[3];
  DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_0_t        RW02_DQ_IO_CTL_0_0;            /* addr: 0x000006d8 */
  ca_uint32_t                              rsrvd299[3];
  DDR_CTRL_DPI_RW02_DQ_IO_CTL_0_1_t        RW02_DQ_IO_CTL_0_1;            /* addr: 0x000006dc */
  ca_uint32_t                              rsrvd300[3];
  DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_0_t        RW02_DQ_IO_CTL_1_0;            /* addr: 0x000006e0 */
  ca_uint32_t                              rsrvd301[3];
  DDR_CTRL_DPI_RW02_DQ_IO_CTL_1_1_t        RW02_DQ_IO_CTL_1_1;            /* addr: 0x000006e4 */
  ca_uint32_t                              rsrvd302[3];
  DDR_CTRL_DPI_RW02_READ_DBG_CTRL_0_t      RW02_READ_DBG_CTRL_0;          /* addr: 0x000006e8 */
  ca_uint32_t                              rsrvd303[3];
  DDR_CTRL_DPI_RW02_READ_DBG_CTRL_1_t      RW02_READ_DBG_CTRL_1;          /* addr: 0x000006ec */
  ca_uint32_t                              rsrvd304[3];
  DDR_CTRL_DPI_RW02_MON_0_t                RW02_MON_0;                    /* addr: 0x000006f0 */
  ca_uint32_t                              rsrvd305[3];
  DDR_CTRL_DPI_RW02_MON_1_t                RW02_MON_1;                    /* addr: 0x000006f4 */
  ca_uint32_t                              rsrvd306[3];
  DDR_CTRL_DPI_RW02_CAL_LS_SEL_0_t         RW02_CAL_LS_SEL_0;             /* addr: 0x000006f8 */
  ca_uint32_t                              rsrvd307[3];
  DDR_CTRL_DPI_RW02_CAL_LS_SEL_1_t         RW02_CAL_LS_SEL_1;             /* addr: 0x000006fc */
  ca_uint32_t                              rsrvd308[3];
  DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_0_t     RW02_CAL_LS_SEL_DBI_0;         /* addr: 0x00000700 */
  ca_uint32_t                              rsrvd309[3];
  DDR_CTRL_DPI_RW02_CAL_LS_SEL_DBI_1_t     RW02_CAL_LS_SEL_DBI_1;         /* addr: 0x00000704 */
  ca_uint32_t                              rsrvd310[3];
  DDR_CTRL_DPI_RW02_CAL_RS_SEL_0_t         RW02_CAL_RS_SEL_0;             /* addr: 0x00000708 */
  ca_uint32_t                              rsrvd311[3];
  DDR_CTRL_DPI_RW02_CAL_RS_SEL_1_t         RW02_CAL_RS_SEL_1;             /* addr: 0x0000070c */
  ca_uint32_t                              rsrvd312[3];
  DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_0_t     RW02_CAL_RS_SEL_DBI_0;         /* addr: 0x00000710 */
  ca_uint32_t                              rsrvd313[3];
  DDR_CTRL_DPI_RW02_CAL_RS_SEL_DBI_1_t     RW02_CAL_RS_SEL_DBI_1;         /* addr: 0x00000714 */
  ca_uint32_t                              rsrvd314[3];
  DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_0_t        RW02_DQ_IO_CTL_2_0;            /* addr: 0x00000718 */
  ca_uint32_t                              rsrvd315[3];
  DDR_CTRL_DPI_RW02_DQ_IO_CTL_2_1_t        RW02_DQ_IO_CTL_2_1;            /* addr: 0x0000071c */
  ca_uint32_t                              rsrvd316[3];
  DDR_CTRL_DPI_RW02_READ_CTRL_4_0_t        RW02_READ_CTRL_4_0;            /* addr: 0x00000720 */
  ca_uint32_t                              rsrvd317[3];
  DDR_CTRL_DPI_RW02_READ_CTRL_4_1_t        RW02_READ_CTRL_4_1;            /* addr: 0x00000724 */
  ca_uint32_t                              rsrvd318[211];
  DDR_CTRL_DPI_RW02_READ_CTRL_0_0_t        RW02_READ_CTRL_0_0;            /* addr: 0x000007f8 */
  ca_uint32_t                              rsrvd319[3];
  DDR_CTRL_DPI_RW02_READ_CTRL_0_1_t        RW02_READ_CTRL_0_1;            /* addr: 0x000007fc */
} DDR_CTRL_DPI_t;
#endif /* !__ASSEMBLER__ */


/*
 * PCTL
 */

#define DDR_CTRL_PCTL_DDR_CONF                   0xf4313a00
#define DDR_CTRL_PCTL_DDR_CONF_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rx_cts_fifo_rst_en   :  1 ; /* bits 1:1 */
    ca_uint32_t tx_cts_fifo_rst_en   :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t srex_port_blocking_en :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd3               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_DDR_CONF_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL          0xf4313a04
#define DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL_dft      0x00000c00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PWDPAD15N            :  1 ; /* bits 0:0 */
    ca_uint32_t PWDPAD15N_23         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t reg_clken_dcphy      :  1 ; /* bits 8:8 */
    ca_uint32_t reg_clken_pllreg     :  1 ; /* bits 9:9 */
    ca_uint32_t crt_rst_n            :  1 ; /* bits 10:10 */
    ca_uint32_t rxi310_rst_n         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL          0xf4313a08
#define DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dpi_bypass_pll_ref_test_mode :  1 ; /* bits 0:0 */
    ca_uint32_t dpi_bypass_pll_test_mode :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_PHY_STAT                   0xf4313a0c
#define DDR_CTRL_PCTL_PHY_STAT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pll_stable           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_PHY_STAT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_PHY_TEST_MODE              0xf4313a10
#define DDR_CTRL_PCTL_PHY_TEST_MODE_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dpi_dq_test_mode     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_PHY_TEST_MODE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_BSTC_MEM_ACCESS            0xf4313a14
#define DDR_CTRL_PCTL_BSTC_MEM_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_BSTC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_BSTC_MEM_DATA              0xf4313a18
#define DDR_CTRL_PCTL_BSTC_MEM_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bstc_data            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_BSTC_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_INTERRUPT                  0xf4313a1c
#define DDR_CTRL_PCTL_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxi316_INTERRUPT     :  2 ; /* bits 1:0 */
    ca_uint32_t dpi_INTERRUPT        :  4 ; /* bits 5:2 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_INTENABLE                  0xf4313a20
#define DDR_CTRL_PCTL_INTENABLE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxi316_INTERRUPTE    :  2 ; /* bits 1:0 */
    ca_uint32_t dpi_INTERRUPTE       :  4 ; /* bits 5:2 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_SRAM_CONTROL               0xf4313a24
#define DDR_CTRL_PCTL_SRAM_CONTROL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxi316_sram_LS       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxi316_sram_TEST1    :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rxi316_sram_RME      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t rxi316_sram_TESTRWM  :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  5 ;
    ca_uint32_t bstc_sram_TEST1      :  4 ; /* bits 23:20 */
    ca_uint32_t bstc_sram_RME        :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd5               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_SRAM_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define DDR_CTRL_PCTL_SRAM_RM_CONTROL            0xf4313a28
#define DDR_CTRL_PCTL_SRAM_RM_CONTROL_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxi316_sram_rm_0     :  2 ; /* bits 1:0 */
    ca_uint32_t rxi316_sram_rm_1     :  2 ; /* bits 3:2 */
    ca_uint32_t rxi316_sram_rm_2     :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t bstc_sram_rm_0       :  2 ; /* bits 17:16 */
    ca_uint32_t bstc_sram_rm_1       :  2 ; /* bits 19:18 */
    ca_uint32_t bstc_sram_rm_2       :  2 ; /* bits 21:20 */
    ca_uint32_t bstc_sram_rm_3       :  2 ; /* bits 23:22 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_PCTL_SRAM_RM_CONTROL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCTL */
#ifndef __ASSEMBLER__
typedef struct {
  DDR_CTRL_PCTL_DDR_CONF_t                 DDR_CONF;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL_t        RTK_PHY_INIT_CNTL;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL_t        RTK_PHY_TEST_CNTL;             /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DDR_CTRL_PCTL_PHY_STAT_t                 PHY_STAT;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DDR_CTRL_PCTL_PHY_TEST_MODE_t            PHY_TEST_MODE;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DDR_CTRL_PCTL_BSTC_MEM_ACCESS_t          BSTC_MEM_ACCESS;               /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DDR_CTRL_PCTL_BSTC_MEM_DATA_t            BSTC_MEM_DATA;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DDR_CTRL_PCTL_INTERRUPT_t                INTERRUPT;                     /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DDR_CTRL_PCTL_INTENABLE_t                INTENABLE;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DDR_CTRL_PCTL_SRAM_CONTROL_t             SRAM_CONTROL;                  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DDR_CTRL_PCTL_SRAM_RM_CONTROL_t          SRAM_RM_CONTROL;               /* addr: 0x00000028 */
} DDR_CTRL_PCTL_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DDR_CTRL */

#ifndef __ASSEMBLER__
typedef struct {
  DDR_CTRL_RXI316_t                        RXI316;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3841];
  DDR_CTRL_DPI_t                           DPI;                           /* addr: 0x00003000 */
  ca_uint32_t                              rsrvd2[1537];
  DDR_CTRL_PCTL_t                          PCTL;                          /* addr: 0x00003a00 */
} DDR_CTRL_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB2
 */

/*
 * GLB
 */

#define GLOBAL_JTAG_ID                           0xf4320000
#define GLOBAL_JTAG_ID_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t jtag_id              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_JTAG_ID_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL13                    0xf4320004
#define GLOBAL_BIST_CONTROL13_dft                0x00040020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global13        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL13_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL12                    0xf4320008
#define GLOBAL_BIST_CONTROL12_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global12        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL12_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL11                    0xf432000c
#define GLOBAL_BIST_CONTROL11_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global11        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL11_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL10                    0xf4320010
#define GLOBAL_BIST_CONTROL10_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global10        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL10_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL9                     0xf4320014
#define GLOBAL_BIST_CONTROL9_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global9         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL9_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL8                     0xf4320018
#define GLOBAL_BIST_CONTROL8_dft                 0x000003ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global8         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL8_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL7                     0xf432001c
#define GLOBAL_BIST_CONTROL7_dft                 0xc0000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global7         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL7_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL6                     0xf4320020
#define GLOBAL_BIST_CONTROL6_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global6         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL6_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL5                     0xf4320024
#define GLOBAL_BIST_CONTROL5_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global5         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL5_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL4                     0xf4320028
#define GLOBAL_BIST_CONTROL4_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global4         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL3                     0xf432002c
#define GLOBAL_BIST_CONTROL3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global3         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL2                     0xf4320030
#define GLOBAL_BIST_CONTROL2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global2         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL1                     0xf4320034
#define GLOBAL_BIST_CONTROL1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_CONTROL0                     0xf4320038
#define GLOBAL_BIST_CONTROL0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_global0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_CONTROL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS13                    0xf432003c
#define GLOBAL_BIST_RESULTS13_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results13       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS13_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS12                    0xf4320040
#define GLOBAL_BIST_RESULTS12_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results12       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS12_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS11                    0xf4320044
#define GLOBAL_BIST_RESULTS11_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results11       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS11_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS10                    0xf4320048
#define GLOBAL_BIST_RESULTS10_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results10       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS10_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS9                     0xf432004c
#define GLOBAL_BIST_RESULTS9_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results9        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS9_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS8                     0xf4320050
#define GLOBAL_BIST_RESULTS8_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results8        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS8_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS7                     0xf4320054
#define GLOBAL_BIST_RESULTS7_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results7        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS7_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS6                     0xf4320058
#define GLOBAL_BIST_RESULTS6_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results6        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS6_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS5                     0xf432005c
#define GLOBAL_BIST_RESULTS5_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results5        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS5_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS4                     0xf4320060
#define GLOBAL_BIST_RESULTS4_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results4        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS3                     0xf4320064
#define GLOBAL_BIST_RESULTS3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results3        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS2                     0xf4320068
#define GLOBAL_BIST_RESULTS2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results2        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS1                     0xf432006c
#define GLOBAL_BIST_RESULTS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results1        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULTS0                     0xf4320070
#define GLOBAL_BIST_RESULTS0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_results0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULTS0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_EPON_CNTL                         0xf4320074
#define GLOBAL_EPON_CNTL_dft                     0x00030000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t epon_rst_n           :  1 ; /* bits 0:0 */
    ca_uint32_t onumpcp_rst_n        :  1 ; /* bits 1:1 */
    ca_uint32_t onugepn_rst_n        :  1 ; /* bits 2:2 */
    ca_uint32_t xgepn_rst_n          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rx_coresec_10_rst_n  :  1 ; /* bits 5:5 */
    ca_uint32_t tx_coresec_10_rst_n  :  1 ; /* bits 6:6 */
    ca_uint32_t apb_coresec_10_rst_n :  1 ; /* bits 7:7 */
    ca_uint32_t xge_c10_en           :  1 ; /* bits 8:8 */
    ca_uint32_t act_eth_rst_n        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t epon_onu_mode        :  2 ; /* bits 17:16 */
    ca_uint32_t epon_ethernet_mode   :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_EPON_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_EPON_STATUS                       0xf4320078
#define GLOBAL_EPON_STATUS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgepon_linkok        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_EPON_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPON_CNTL                         0xf432007c
#define GLOBAL_GPON_CNTL_dft                     0x00000300

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ani_rst_n            :  1 ; /* bits 0:0 */
    ca_uint32_t gpon_rst_n           :  1 ; /* bits 1:1 */
    ca_uint32_t xgpn_rst_n           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t us10g_mode           :  1 ; /* bits 8:8 */
    ca_uint32_t nxgs_mode            :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPON_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_OPT_MODULE_CNTL                   0xf4320080
#define GLOBAL_OPT_MODULE_CNTL_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t opt_tx_power_down    :  1 ; /* bits 0:0 */
    ca_uint32_t en_lao_det           :  1 ; /* bits 1:1 */
    ca_uint32_t hw_lao_enable        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t los_invert           :  1 ; /* bits 30:30 */
    ca_uint32_t opt_cntl_reset       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_OPT_MODULE_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_OPT_MODULE_LAO_CNTL               0xf4320084
#define GLOBAL_OPT_MODULE_LAO_CNTL_dft           0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lao_accu_one         : 16 ; /* bits 15:0 */
    ca_uint32_t lao_accu_zero        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_OPT_MODULE_LAO_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_OPT_INTERRUPT                     0xf4320088
#define GLOBAL_OPT_INTERRUPT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_los               :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fault             :  1 ; /* bits 1:1 */
    ca_uint32_t mod_abs              :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t lao_stuck_at_one_int :  1 ; /* bits 8:8 */
    ca_uint32_t lao_stuck_at_zero_int :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_OPT_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_OPT_INTENABLE                     0xf432008c
#define GLOBAL_OPT_INTENABLE_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_losE              :  1 ; /* bits 0:0 */
    ca_uint32_t tx_faultE            :  1 ; /* bits 1:1 */
    ca_uint32_t mod_absE             :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t lao_stuck_at_one_intE :  1 ; /* bits 8:8 */
    ca_uint32_t lao_stuck_at_zero_intE :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_OPT_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_OPT_MODULE_STATUS                 0xf4320090
#define GLOBAL_OPT_MODULE_STATUS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t opt_tx_fault         :  1 ; /* bits 0:0 */
    ca_uint32_t opt_tx_sd            :  1 ; /* bits 1:1 */
    ca_uint32_t opt_mod_abs          :  1 ; /* bits 2:2 */
    ca_uint32_t opt_rx_los           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_OPT_MODULE_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PON_CNTL                          0xf4320094
#define GLOBAL_PON_CNTL_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t epon_mode            :  1 ; /* bits 0:0 */
    ca_uint32_t pon_serdes_rst_n     :  1 ; /* bits 1:1 */
    ca_uint32_t psds_reg_rst_n       :  1 ; /* bits 2:2 */
    ca_uint32_t ptp_rst_n            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t puc_reset            :  1 ; /* bits 8:8 */
    ca_uint32_t pdc_reset            :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PON_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BLOCK_RESET                       0xf4320098
#define GLOBAL_BLOCK_RESET_dft                   0xd03021c0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset_ni             :  1 ; /* bits 0:0 */
    ca_uint32_t reset_l2fe           :  1 ; /* bits 1:1 */
    ca_uint32_t reset_l2tm           :  1 ; /* bits 2:2 */
    ca_uint32_t reset_l3fe           :  1 ; /* bits 3:3 */
    ca_uint32_t reset_sdram          :  1 ; /* bits 4:4 */
    ca_uint32_t reset_tqm            :  1 ; /* bits 5:5 */
    ca_uint32_t reset_pcie0          :  1 ; /* bits 6:6 */
    ca_uint32_t reset_pcie1          :  1 ; /* bits 7:7 */
    ca_uint32_t reset_pcie2          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reset_gic400         :  1 ; /* bits 10:10 */
    ca_uint32_t reset_l3fe_reo       :  1 ; /* bits 11:11 */
    ca_uint32_t reset_qm_reo         :  1 ; /* bits 12:12 */
    ca_uint32_t reset_usb            :  1 ; /* bits 13:13 */
    ca_uint32_t reset_flash          :  1 ; /* bits 14:14 */
    ca_uint32_t reset_per            :  1 ; /* bits 15:15 */
    ca_uint32_t reset_dma            :  1 ; /* bits 16:16 */
    ca_uint32_t reset_rtc            :  1 ; /* bits 17:17 */
    ca_uint32_t reset_pe0            :  1 ; /* bits 18:18 */
    ca_uint32_t reset_pe1            :  1 ; /* bits 19:19 */
    ca_uint32_t reset_rcpu0          :  1 ; /* bits 20:20 */
    ca_uint32_t reset_rcpu1          :  1 ; /* bits 21:21 */
    ca_uint32_t reset_sadb           :  1 ; /* bits 22:22 */
    ca_uint32_t reset_uvlo           :  1 ; /* bits 23:23 */
    ca_uint32_t reset_rcrypto        :  1 ; /* bits 24:24 */
    ca_uint32_t reset_ldma           :  1 ; /* bits 25:25 */
    ca_uint32_t reset_gphy           :  1 ; /* bits 26:26 */
    ca_uint32_t reset_dma_reo        :  1 ; /* bits 27:27 */
    ca_uint32_t reset_sd             :  1 ; /* bits 28:28 */
    ca_uint32_t reset_otprom         :  1 ; /* bits 29:29 */
    ca_uint32_t reset_ptp_timer      :  1 ; /* bits 30:30 */
    ca_uint32_t reset_qxgmii         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BLOCK_RESET_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BLOCK_RESET_EXT                   0xf432009c
#define GLOBAL_BLOCK_RESET_EXT_dft               0x00003f00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset_i2s            :  1 ; /* bits 0:0 */
    ca_uint32_t reset_gdma           :  1 ; /* bits 1:1 */
    ca_uint32_t reset_ssi0           :  1 ; /* bits 2:2 */
    ca_uint32_t reset_uart0          :  1 ; /* bits 3:3 */
    ca_uint32_t reset_uart1          :  1 ; /* bits 4:4 */
    ca_uint32_t USB2_PORT_1_OTG_SW_PHY_RESET :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t en_gdma              :  1 ; /* bits 8:8 */
    ca_uint32_t en_ssi0              :  1 ; /* bits 9:9 */
    ca_uint32_t en_dma_uart0         :  1 ; /* bits 10:10 */
    ca_uint32_t en_dma_uart1         :  1 ; /* bits 11:11 */
    ca_uint32_t en_i2s               :  1 ; /* bits 12:12 */
    ca_uint32_t wrap_sds_en          :  1 ; /* bits 13:13 */
    ca_uint32_t en_sd                :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BLOCK_RESET_EXT_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DPHY_RESET                        0xf43200a0
#define GLOBAL_DPHY_RESET_dft                    0x000001af

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset_dphy_s0_pcie   :  1 ; /* bits 0:0 */
    ca_uint32_t reset_dphy_s1_pcie   :  1 ; /* bits 1:1 */
    ca_uint32_t reset_dphy_s2_pcie   :  1 ; /* bits 2:2 */
    ca_uint32_t reset_dphy_s3_pcie   :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reset_dphy_s3_sgmii  :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t reset_sdsif          :  1 ; /* bits 7:7 */
    ca_uint32_t reset_sgmii          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DPHY_RESET_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_FABRIC_RESET                      0xf43200a4
#define GLOBAL_FABRIC_RESET_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset_axi            :  1 ; /* bits 0:0 */
    ca_uint32_t reset_capsram        :  1 ; /* bits 1:1 */
    ca_uint32_t reset_capsramreg     :  1 ; /* bits 2:2 */
    ca_uint32_t reset_ccireg         :  1 ; /* bits 3:3 */
    ca_uint32_t reset_global_hsio    :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reset_global_ls      :  1 ; /* bits 6:6 */
    ca_uint32_t reset_global_pe      :  1 ; /* bits 7:7 */
    ca_uint32_t reset_lsaxi_cortexapb :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_FABRIC_RESET_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_RESET                         0xf43200a8
#define GLOBAL_ARM_RESET_dft                     0x000001c0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t restart              :  1 ; /* bits 0:0 */
    ca_uint32_t CPUPORESET           :  4 ; /* bits 4:1 */
    ca_uint32_t CORERESET            :  4 ; /* bits 8:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t RESETSOCDBG          :  1 ; /* bits 11:11 */
    ca_uint32_t RESETPOR             :  1 ; /* bits 12:12 */
    ca_uint32_t ALLOW_DBG            :  4 ; /* bits 16:13 */
    ca_uint32_t ALLOW_WARM           :  4 ; /* bits 20:17 */
    ca_uint32_t rsrvd2               :  7 ;
    ca_uint32_t A53WARMRSTREQ        :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_RESET_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_STRAP                             0xf43200ac
#define GLOBAL_STRAP_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t debug_mode           :  1 ; /* bits 0:0 */
    ca_uint32_t speed                :  3 ; /* bits 3:1 */
    ca_uint32_t flash_type           :  3 ; /* bits 6:4 */
    ca_uint32_t flash_size           :  2 ; /* bits 8:7 */
    ca_uint32_t flash_width          :  1 ; /* bits 9:9 */
    ca_uint32_t flash_pin            :  1 ; /* bits 10:10 */
    ca_uint32_t uart_message         :  1 ; /* bits 11:11 */
    ca_uint32_t sd                   :  1 ; /* bits 12:12 */
    ca_uint32_t pmd                  :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t jtag_osc             :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_STRAP_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_RESULT                       0xf43200b0
#define GLOBAL_BIST_RESULT_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bist_complete_capsram :  1 ; /* bits 0:0 */
    ca_uint32_t bist_complete_puc3   :  1 ; /* bits 1:1 */
    ca_uint32_t bist_complete_puc2b  :  1 ; /* bits 2:2 */
    ca_uint32_t bist_complete_puc2   :  1 ; /* bits 3:3 */
    ca_uint32_t bist_complete_l3qm2  :  1 ; /* bits 4:4 */
    ca_uint32_t bist_complete_l2tm1  :  1 ; /* bits 5:5 */
    ca_uint32_t bist_complete_taroko_1 :  1 ; /* bits 6:6 */
    ca_uint32_t bist_complete_taroko_0 :  1 ; /* bits 7:7 */
    ca_uint32_t bist_complete_a55_1  :  1 ; /* bits 8:8 */
    ca_uint32_t bist_complete_a55_0  :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t a55_1                : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_RESULT_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_DATA                         0xf43200b4
#define GLOBAL_BIST_DATA_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t capsram              : 12 ; /* bits 11:0 */
    ca_uint32_t l3qm2                :  6 ; /* bits 17:12 */
    ca_uint32_t l2tm1                :  6 ; /* bits 23:18 */
    ca_uint32_t puc3                 :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_DATA2                        0xf43200b8
#define GLOBAL_BIST_DATA2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc2                 : 20 ; /* bits 19:0 */
    ca_uint32_t a55_0                : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BIST_DATA3                        0xf43200bc
#define GLOBAL_BIST_DATA3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc2b                : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BIST_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GLOBAL_CONFIG                     0xf43200c0
#define GLOBAL_GLOBAL_CONFIG_dft                 0x07e45400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t quad_off             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t wd_reset_subsys_enable :  1 ; /* bits 4:4 */
    ca_uint32_t wd_reset_pcie        :  1 ; /* bits 5:5 */
    ca_uint32_t wd_reset_all_blocks  :  1 ; /* bits 6:6 */
    ca_uint32_t wd_reset_remap       :  1 ; /* bits 7:7 */
    ca_uint32_t wd_reset_ext_reset   :  1 ; /* bits 8:8 */
    ca_uint32_t ext_reset            :  1 ; /* bits 9:9 */
    ca_uint32_t cfg_pcie_0_clken     :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t cfg_pcie_1_clken     :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t cfg_pcie_2_clken     :  1 ; /* bits 14:14 */
    ca_uint32_t gpon_pd              :  1 ; /* bits 15:15 */
    ca_uint32_t epon_pd              :  1 ; /* bits 16:16 */
    ca_uint32_t ext_eth_refclk       :  1 ; /* bits 17:17 */
    ca_uint32_t refclk_sel           :  2 ; /* bits 19:18 */
    ca_uint32_t trng_pd              :  1 ; /* bits 20:20 */
    ca_uint32_t ps_usb2_otg_en       :  1 ; /* bits 21:21 */
    ca_uint32_t ps_pcie0_en          :  1 ; /* bits 22:22 */
    ca_uint32_t ps_pcie1_en          :  1 ; /* bits 23:23 */
    ca_uint32_t ps_pcie2_en          :  1 ; /* bits 24:24 */
    ca_uint32_t ps_usb3_en           :  1 ; /* bits 25:25 */
    ca_uint32_t ps_pe_en             :  1 ; /* bits 26:26 */
    ca_uint32_t l3fe_pd              :  1 ; /* bits 27:27 */
    ca_uint32_t offload0_pd          :  1 ; /* bits 28:28 */
    ca_uint32_t offload1_pd          :  1 ; /* bits 29:29 */
    ca_uint32_t crypto_pd            :  1 ; /* bits 30:30 */
    ca_uint32_t core_pd              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GLOBAL_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_CONTROL                       0xf43200c4
#define GLOBAL_PHY_CONTROL_dft                   0x01040113

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_xfi0_10g         :  1 ; /* bits 0:0 */
    ca_uint32_t cfg_xfi1_10g         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t USB2_LPM_PLL_ALIVE   :  1 ; /* bits 4:4 */
    ca_uint32_t USB2_PORT_1_CLOSE    :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t USB2_REF_SEL         :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t sys_pcie2_and_s2_sel :  1 ; /* bits 18:18 */
    ca_uint32_t sys_usb3_and_s2_sel  :  1 ; /* bits 19:19 */
    ca_uint32_t s2_pcie_usb3_sel     :  1 ; /* bits 20:20 */
    ca_uint32_t s2_pcie_usb3_sgmii_sel :  2 ; /* bits 22:21 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t s3_pcie_usb3_sel     :  1 ; /* bits 24:24 */
    ca_uint32_t s3_pcie_usb3_sgmii_sel :  2 ; /* bits 26:25 */
    ca_uint32_t s0_rxaui_mode        :  1 ; /* bits 27:27 */
    ca_uint32_t s0_p_mdio_enable_reg :  1 ; /* bits 28:28 */
    ca_uint32_t s1_p_mdio_enable_reg :  1 ; /* bits 29:29 */
    ca_uint32_t s2_p_mdio_enable_reg :  1 ; /* bits 30:30 */
    ca_uint32_t s3_p_mdio_enable_reg :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_MISC_CONTROL                  0xf43200c8
#define GLOBAL_PHY_MISC_CONTROL_dft              0xc0000a00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t s2_USB3_BG_EN        :  1 ; /* bits 8:8 */
    ca_uint32_t s2_USB3_MBIAS_EN     :  1 ; /* bits 9:9 */
    ca_uint32_t s3_USB3_BG_EN        :  1 ; /* bits 10:10 */
    ca_uint32_t s3_USB3_MBIAS_EN     :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 18 ;
    ca_uint32_t s2_USB3_OOBS_PDB     :  1 ; /* bits 30:30 */
    ca_uint32_t s3_USB3_OOBS_PDB     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_MISC_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_STATUS                        0xf43200cc
#define GLOBAL_PHY_STATUS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t USB2_CKUSABLE        :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t s2_CKUSABLE          :  1 ; /* bits 3:3 */
    ca_uint32_t s3_CKUSABLE          :  1 ; /* bits 4:4 */
    ca_uint32_t s0_CKUSABLE          :  1 ; /* bits 5:5 */
    ca_uint32_t s1_CKUSABLE          :  1 ; /* bits 6:6 */
    ca_uint32_t CKUSABLE_SGMII       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_SGMII_MISC_CONTROL            0xf43200d0
#define GLOBAL_PHY_SGMII_MISC_CONTROL_dft        0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s3_SGMII_CKBUF_EN    :  1 ; /* bits 0:0 */
    ca_uint32_t s3_SGMII_CLK_MODE_SEL :  2 ; /* bits 2:1 */
    ca_uint32_t s3_SGMII_BG_EN       :  1 ; /* bits 3:3 */
    ca_uint32_t s3_SGMII_MBIAS_EN    :  1 ; /* bits 4:4 */
    ca_uint32_t s3_SGMII_RX50_LINK   :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t s3_TX_DEEMP_SEL_SGMII :  1 ; /* bits 7:7 */
    ca_uint32_t s3_EQHOLD_SGMII      :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_SGMII_MISC_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_SGMII_PCS_CONTROL             0xf43200d4
#define GLOBAL_PHY_SGMII_PCS_CONTROL_dft         0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sgmii_sds_tx_disable_s0 :  1 ; /* bits 0:0 */
    ca_uint32_t sgmii_sds_rx_disable_s0 :  1 ; /* bits 1:1 */
    ca_uint32_t sgmii_sds_mode0      :  5 ; /* bits 6:2 */
    ca_uint32_t sgmii_sds_iso_on_s0  :  1 ; /* bits 7:7 */
    ca_uint32_t sgmii_sds_frc_ld_s0  :  1 ; /* bits 8:8 */
    ca_uint32_t sgmii_sds0_ablty     : 17 ; /* bits 25:9 */
    ca_uint32_t sgmii_cf_spd0x       :  3 ; /* bits 28:26 */
    ca_uint32_t sgmii_spdup_ini      :  1 ; /* bits 29:29 */
    ca_uint32_t sgmii_load_sys_par   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_SGMII_PCS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_SGMII_PCS_CONTROL_2nd         0xf43200d8
#define GLOBAL_PHY_SGMII_PCS_CONTROL_2nd_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sgmii_unidir_tx_able_s0 :  1 ; /* bits 0:0 */
    ca_uint32_t sgmii_pause_ini_s0   :  2 ; /* bits 2:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sgmii_realtek_oui    : 24 ; /* bits 27:4 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_SGMII_PCS_CONTROL_2nd_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_SGMII_PCS_CONTROL_3rd         0xf43200dc
#define GLOBAL_PHY_SGMII_PCS_CONTROL_3rd_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sgmii_revision_no    :  4 ; /* bits 3:0 */
    ca_uint32_t sgmii_model_no       :  6 ; /* bits 9:4 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_SGMII_PCS_CONTROL_3rd_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_SGMII_PCS_INFO                0xf43200e0
#define GLOBAL_PHY_SGMII_PCS_INFO_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sgmii_sds_link_ok    :  1 ; /* bits 0:0 */
    ca_uint32_t sgmii_sds_reg_rdy    :  1 ; /* bits 1:1 */
    ca_uint32_t sgmii_sds_sdet_out_s0 :  1 ; /* bits 2:2 */
    ca_uint32_t sgmii_sts_upd_rx     :  1 ; /* bits 3:3 */
    ca_uint32_t sgmii_sds_rx_sym_err_all_s0 :  1 ; /* bits 4:4 */
    ca_uint32_t sgmii_sds0_link_partner_ablty : 17 ; /* bits 21:5 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_SGMII_PCS_INFO_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SGMII_PCS_INTERRUPT               0xf43200e4
#define GLOBAL_SGMII_PCS_INTERRUPT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LINK_OKi             :  1 ; /* bits 0:0 */
    ca_uint32_t UPD_RXi              :  1 ; /* bits 1:1 */
    ca_uint32_t SYM_ERRi             :  1 ; /* bits 2:2 */
    ca_uint32_t LPA_MDFi             :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SGMII_PCS_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SGMII_PCS_INTENABLE               0xf43200e8
#define GLOBAL_SGMII_PCS_INTENABLE_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LINK_OKe             :  1 ; /* bits 0:0 */
    ca_uint32_t UPD_RXe              :  1 ; /* bits 1:1 */
    ca_uint32_t SYM_ERRe             :  1 ; /* bits 2:2 */
    ca_uint32_t LPA_MDFe             :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SGMII_PCS_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RXAUI_SERDES_CONTROL              0xf43200ec
#define GLOBAL_RXAUI_SERDES_CONTROL_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aphy_txdata_en       :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RXAUI_SERDES_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PIN_MUX                           0xf43200f0
#define GLOBAL_PIN_MUX_dft                       0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pmux_flash           :  2 ; /* bits 1:0 */
    ca_uint32_t arm_trace_enable     :  1 ; /* bits 2:2 */
    ca_uint32_t iomux_uart_0_hwfc_enable :  1 ; /* bits 3:3 */
    ca_uint32_t iomux_uart_2_enable  :  1 ; /* bits 4:4 */
    ca_uint32_t iomux_uart_3_enable  :  1 ; /* bits 5:5 */
    ca_uint32_t iomux_spi_cs_1_enable :  1 ; /* bits 6:6 */
    ca_uint32_t iomux_spi_cs_2_enable :  1 ; /* bits 7:7 */
    ca_uint32_t iomux_spi_cs_3_enable :  1 ; /* bits 8:8 */
    ca_uint32_t iomux_spi_cs_4_enable :  1 ; /* bits 9:9 */
    ca_uint32_t iomux_pwm_nf         :  1 ; /* bits 10:10 */
    ca_uint32_t iomux_pwm_sf         :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t iomux_use_cspi       :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t iomux_led_enable     :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               : 10 ;
    ca_uint32_t fmro_enable          :  1 ; /* bits 30:30 */
    ca_uint32_t flash_mux_sel        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PIN_MUX_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PIN_MUX_NEW                       0xf43200f4
#define GLOBAL_PIN_MUX_NEW_dft                   0x0091cfdc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iomux_uart_3_hwfc_enable :  1 ; /* bits 0:0 */
    ca_uint32_t iomux_uart_2_hwfc_enable :  1 ; /* bits 1:1 */
    ca_uint32_t iomux_uart_1_enable  :  1 ; /* bits 2:2 */
    ca_uint32_t iomux_uart_0_enable  :  1 ; /* bits 3:3 */
    ca_uint32_t iomux_ssp_enable     :  1 ; /* bits 4:4 */
    ca_uint32_t iomux_spi_dma_enable :  1 ; /* bits 5:5 */
    ca_uint32_t iomux_spi_enable     :  1 ; /* bits 6:6 */
    ca_uint32_t iomux_ref_clk_enable :  1 ; /* bits 7:7 */
    ca_uint32_t iomux_opt_enable     :  1 ; /* bits 8:8 */
    ca_uint32_t iomux_onu_enable     :  1 ; /* bits 9:9 */
    ca_uint32_t iomux_mmc_enable     :  1 ; /* bits 10:10 */
    ca_uint32_t iomux_mdio_enable    :  1 ; /* bits 11:11 */
    ca_uint32_t iomux_i2s_slv_enable :  1 ; /* bits 12:12 */
    ca_uint32_t iomux_i2s_mst_enable :  1 ; /* bits 13:13 */
    ca_uint32_t iomux_gmac_enable    :  1 ; /* bits 14:14 */
    ca_uint32_t iomux_flash_enable   :  1 ; /* bits 15:15 */
    ca_uint32_t iomux_cpu_debug_enable :  1 ; /* bits 16:16 */
    ca_uint32_t iomux_biw1_enable    :  3 ; /* bits 19:17 */
    ca_uint32_t iomux_biw0_enable    :  3 ; /* bits 22:20 */
    ca_uint32_t iomux_jtag_enable    :  1 ; /* bits 23:23 */
    ca_uint32_t iomux_sdpll_enable   :  1 ; /* bits 24:24 */
    ca_uint32_t iomux_spi_dma_3wire  :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PIN_MUX_NEW_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_IO_PULL_CONTROL                0xf43200f8
#define GLOBAL_SD_IO_PULL_CONTROL_dft            0x010015ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_mmc_pd           : 13 ; /* bits 12:0 */
    ca_uint32_t cfg_mmc_pu           : 13 ; /* bits 25:13 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_IO_PULL_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_IO_DRIVE_CONTROL                  0xf43200fc
#define GLOBAL_IO_DRIVE_CONTROL_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gmac_dp              :  3 ; /* bits 2:0 */
    ca_uint32_t gmac_dn              :  3 ; /* bits 5:3 */
    ca_uint32_t gmac_mode            :  2 ; /* bits 7:6 */
    ca_uint32_t gmac_ds              :  1 ; /* bits 8:8 */
    ca_uint32_t flash_ds             :  1 ; /* bits 9:9 */
    ca_uint32_t nu_ds                :  1 ; /* bits 10:10 */
    ca_uint32_t ssp_ds               :  1 ; /* bits 11:11 */
    ca_uint32_t spi_ds               :  1 ; /* bits 12:12 */
    ca_uint32_t gpio_ds              :  1 ; /* bits 13:13 */
    ca_uint32_t misc_ds              :  1 ; /* bits 14:14 */
    ca_uint32_t eaxi_ds              :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t sr                   :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_IO_DRIVE_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPIO_MUX_0                        0xf4320100
#define GLOBAL_GPIO_MUX_0_dft                    0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio0en              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPIO_MUX_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPIO_MUX_1                        0xf4320104
#define GLOBAL_GPIO_MUX_1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio1en              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPIO_MUX_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPIO_MUX_2                        0xf4320108
#define GLOBAL_GPIO_MUX_2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio2en              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPIO_MUX_2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPIO_MUX_3                        0xf432010c
#define GLOBAL_GPIO_MUX_3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio3en              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPIO_MUX_3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPIO_MUX_4                        0xf4320110
#define GLOBAL_GPIO_MUX_4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio4en              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPIO_MUX_4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GIGE_PHY                          0xf4320114
#define GLOBAL_GIGE_PHY_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t gphy_SEL_PHY_REFCK_UPS_L :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GIGE_PHY_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_STATE                         0xf4320118
#define GLOBAL_ARM_STATE_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CLUSTERPACTIVE       : 20 ; /* bits 19:0 */
    ca_uint32_t CLUSTERPACCEPT       :  1 ; /* bits 20:20 */
    ca_uint32_t CLUSTERPDENY         :  1 ; /* bits 21:21 */
    ca_uint32_t PMUSNAPSHOTACK       :  1 ; /* bits 22:22 */
    ca_uint32_t gic_pmu_sample_ack   :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cpu_wd_req           :  1 ; /* bits 25:25 */
    ca_uint32_t cpll_lock            :  1 ; /* bits 26:26 */
    ca_uint32_t epll_lock            :  1 ; /* bits 27:27 */
    ca_uint32_t fpll_lock            :  1 ; /* bits 28:28 */
    ca_uint32_t cpll_switch_state    :  1 ; /* bits 29:29 */
    ca_uint32_t epll_switch_state    :  1 ; /* bits 30:30 */
    ca_uint32_t fpll_switch_state    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_STATE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CPU0_STATE                    0xf432011c
#define GLOBAL_ARM_CPU0_STATE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COREPACTIVE0         : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t COREPACCEPT0         :  1 ; /* bits 20:20 */
    ca_uint32_t COREPDENY0           :  1 ; /* bits 21:21 */
    ca_uint32_t pwrctrl_out          :  1 ; /* bits 22:22 */
    ca_uint32_t pwrctrl_2nd_out      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CPU0_STATE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CPU1_STATE                    0xf4320120
#define GLOBAL_ARM_CPU1_STATE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COREPACTIVE1         : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t COREPACCEPT1         :  1 ; /* bits 20:20 */
    ca_uint32_t COREPDENY1           :  1 ; /* bits 21:21 */
    ca_uint32_t pwrctrl_out          :  1 ; /* bits 22:22 */
    ca_uint32_t pwrctrl_2nd_out      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CPU1_STATE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CPU2_STATE                    0xf4320124
#define GLOBAL_ARM_CPU2_STATE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COREPACTIVE2         : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t COREPACCEPT2         :  1 ; /* bits 20:20 */
    ca_uint32_t COREPDENY2           :  1 ; /* bits 21:21 */
    ca_uint32_t pwrctrl_out          :  1 ; /* bits 22:22 */
    ca_uint32_t pwrctrl_2nd_out      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CPU2_STATE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CPU3_STATE                    0xf4320128
#define GLOBAL_ARM_CPU3_STATE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COREPACTIVE3         : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t COREPACCEPT3         :  1 ; /* bits 20:20 */
    ca_uint32_t COREPDENY3           :  1 ; /* bits 21:21 */
    ca_uint32_t pwrctrl_out          :  1 ; /* bits 22:22 */
    ca_uint32_t pwrctrl_2nd_out      :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CPU3_STATE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PE_DSS_STATE                      0xf432012c
#define GLOBAL_PE_DSS_STATE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_dss_ready       :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t pe0_debug_mode       :  1 ; /* bits 8:8 */
    ca_uint32_t pe0_sleepsys_mode    :  1 ; /* bits 9:9 */
    ca_uint32_t pe1_debug_mode       :  1 ; /* bits 10:10 */
    ca_uint32_t pe1_sleepsys_mode    :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PE_DSS_STATE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_COUNT2                        0xf4320130
#define GLOBAL_DSS_COUNT2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_count_out2      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_COUNT2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_COUNT1                        0xf4320134
#define GLOBAL_DSS_COUNT1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_count_out1      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_COUNT1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_COUNT0                        0xf4320138
#define GLOBAL_DSS_COUNT0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_count_out0      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_COUNT0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_A                      0xf432013c
#define GLOBAL_ARM_CONFIG_A_dft                  0x0000f00f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t AA64nAA32            :  4 ; /* bits 3:0 */
    ca_uint32_t CFGEND               :  4 ; /* bits 7:4 */
    ca_uint32_t CFGTE                :  4 ; /* bits 11:8 */
    ca_uint32_t VINITHI              :  4 ; /* bits 15:12 */
    ca_uint32_t CRYPTODISABLE        :  1 ; /* bits 16:16 */
    ca_uint32_t PMUSNAPSHOTREQ       :  1 ; /* bits 17:17 */
    ca_uint32_t gic_pmu_sample_req   :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t gict_allow_ns        :  1 ; /* bits 30:30 */
    ca_uint32_t gicp_allow_ns        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_A_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_B                      0xf4320140
#define GLOBAL_ARM_CONFIG_B_dft                  0x00000048

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CLUSTERPSTATE        :  7 ; /* bits 6:0 */
    ca_uint32_t CLUSTERPREQ          :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t ca55_core_clamp_en   :  4 ; /* bits 19:16 */
    ca_uint32_t ca55_core_pwrctrl_in :  4 ; /* bits 23:20 */
    ca_uint32_t ca55_core_pwrctrl_2nd_in :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_B_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_C                      0xf4320144
#define GLOBAL_ARM_CONFIG_C_dft                  0x08080808

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t COREPSTATE0          :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t COREPREQ0            :  1 ; /* bits 7:7 */
    ca_uint32_t COREPSTATE1          :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t COREPREQ1            :  1 ; /* bits 15:15 */
    ca_uint32_t COREPSTATE2          :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t COREPREQ2            :  1 ; /* bits 23:23 */
    ca_uint32_t COREPSTATE3          :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t COREPREQ3            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_C_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_D1                     0xf4320148
#define GLOBAL_ARM_CONFIG_D1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RVBARADDR1           :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_D1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_D0                     0xf432014c
#define GLOBAL_ARM_CONFIG_D0_dft                 0x3fffc000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RVBARADDR0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_D0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_E                      0xf4320150
#define GLOBAL_ARM_CONFIG_E_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t ca55_dss_rst_n       :  4 ; /* bits 9:6 */
    ca_uint32_t ca55_dss_ro_sel      : 12 ; /* bits 21:10 */
    ca_uint32_t ca55_dss_speed_en    :  4 ; /* bits 25:22 */
    ca_uint32_t ca55_dss_wire_sel    :  4 ; /* bits 29:26 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_E_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_F                      0xf4320154
#define GLOBAL_ARM_CONFIG_F_dft                  0x00004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ASTARTMP             : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_F_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_CONFIG_G                      0xf4320158
#define GLOBAL_ARM_CONFIG_G_dft                  0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t AENDMP               : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_CONFIG_G_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SYSTEM_INTERRUPT                  0xf432015c
#define GLOBAL_SYSTEM_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPLL_LOCKi           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t EPLL_LOCKi           :  1 ; /* bits 2:2 */
    ca_uint32_t FPLL_LOCKi           :  1 ; /* bits 3:3 */
    ca_uint32_t CPU_WD_REQi          :  1 ; /* bits 4:4 */
    ca_uint32_t CORE_CLKi            :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SYSTEM_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SYSTEM_INTENABLE                  0xf4320160
#define GLOBAL_SYSTEM_INTENABLE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPLL_LOCKe           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t EPLL_LOCKe           :  1 ; /* bits 2:2 */
    ca_uint32_t FPLL_LOCKe           :  1 ; /* bits 3:3 */
    ca_uint32_t CPU_WD_REQe          :  1 ; /* bits 4:4 */
    ca_uint32_t CORE_CLKe            :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SYSTEM_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_NETWORK_ENGINE_INTERRUPT_0        0xf4320164
#define GLOBAL_NETWORK_ENGINE_INTERRUPT_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NIi                  :  1 ; /* bits 0:0 */
    ca_uint32_t L2FEi                :  1 ; /* bits 1:1 */
    ca_uint32_t L2TMi                :  1 ; /* bits 2:2 */
    ca_uint32_t L3TEi                :  1 ; /* bits 3:3 */
    ca_uint32_t TQMi                 :  1 ; /* bits 4:4 */
    ca_uint32_t PONi                 :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_EPP_FIFO_0i      :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_EPP_FIFO_1i      :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_EPP_FIFO_2i      :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_EPP_FIFO_3i      :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_EPP_FIFO_4i      :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_EPP_FIFO_5i      :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_EPP_FIFO_6i      :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_EPP_FIFO_7i      :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_LOi :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_HIi :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_REFILL_REQ_0i    :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_REFILL_REQ_1i    :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_REFILL_REQ_2i    :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_REFILL_REQ_3i    :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_REFILL_REQ_4i    :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_REFILL_REQ_5i    :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_REFILL_REQ_6i    :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_REFILL_REQ_7i    :  1 ; /* bits 23:23 */
    ca_uint32_t CPU_REFILL_REQ_8i    :  1 ; /* bits 24:24 */
    ca_uint32_t CPU_REFILL_REQ_9i    :  1 ; /* bits 25:25 */
    ca_uint32_t CPU_REFILL_REQ_10i   :  1 ; /* bits 26:26 */
    ca_uint32_t CPU_REFILL_REQ_11i   :  1 ; /* bits 27:27 */
    ca_uint32_t CPU_REFILL_REQ_12i   :  1 ; /* bits 28:28 */
    ca_uint32_t CPU_REFILL_REQ_13i   :  1 ; /* bits 29:29 */
    ca_uint32_t CPU_REFILL_REQ_14i   :  1 ; /* bits 30:30 */
    ca_uint32_t CPU_REFILL_REQ_15i   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_NETWORK_ENGINE_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_NETWORK_ENGINE_INTENABLE_0        0xf4320168
#define GLOBAL_NETWORK_ENGINE_INTENABLE_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NIe                  :  1 ; /* bits 0:0 */
    ca_uint32_t L2FEe                :  1 ; /* bits 1:1 */
    ca_uint32_t L2TMe                :  1 ; /* bits 2:2 */
    ca_uint32_t L3TEe                :  1 ; /* bits 3:3 */
    ca_uint32_t TQMe                 :  1 ; /* bits 4:4 */
    ca_uint32_t PONe                 :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_EPP_FIFO_0e      :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_EPP_FIFO_1e      :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_EPP_FIFO_2e      :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_EPP_FIFO_3e      :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_EPP_FIFO_4e      :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_EPP_FIFO_5e      :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_EPP_FIFO_6e      :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_EPP_FIFO_7e      :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_LOe :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_HIe :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_REFILL_REQ_0e    :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_REFILL_REQ_1e    :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_REFILL_REQ_2e    :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_REFILL_REQ_3e    :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_REFILL_REQ_4e    :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_REFILL_REQ_5e    :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_REFILL_REQ_6e    :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_REFILL_REQ_7e    :  1 ; /* bits 23:23 */
    ca_uint32_t CPU_REFILL_REQ_8e    :  1 ; /* bits 24:24 */
    ca_uint32_t CPU_REFILL_REQ_9e    :  1 ; /* bits 25:25 */
    ca_uint32_t CPU_REFILL_REQ_10e   :  1 ; /* bits 26:26 */
    ca_uint32_t CPU_REFILL_REQ_11e   :  1 ; /* bits 27:27 */
    ca_uint32_t CPU_REFILL_REQ_12e   :  1 ; /* bits 28:28 */
    ca_uint32_t CPU_REFILL_REQ_13e   :  1 ; /* bits 29:29 */
    ca_uint32_t CPU_REFILL_REQ_14e   :  1 ; /* bits 30:30 */
    ca_uint32_t CPU_REFILL_REQ_15e   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_NETWORK_ENGINE_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_NETWORK_ENGINE_INTERRUPT_1        0xf432016c
#define GLOBAL_NETWORK_ENGINE_INTERRUPT_1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NIi                  :  1 ; /* bits 0:0 */
    ca_uint32_t L2FEi                :  1 ; /* bits 1:1 */
    ca_uint32_t L2TMi                :  1 ; /* bits 2:2 */
    ca_uint32_t L3TEi                :  1 ; /* bits 3:3 */
    ca_uint32_t TQMi                 :  1 ; /* bits 4:4 */
    ca_uint32_t PONi                 :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_EPP_FIFO_0i      :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_EPP_FIFO_1i      :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_EPP_FIFO_2i      :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_EPP_FIFO_3i      :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_EPP_FIFO_4i      :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_EPP_FIFO_5i      :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_EPP_FIFO_6i      :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_EPP_FIFO_7i      :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_LOi :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_HIi :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_REFILL_REQ_0i    :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_REFILL_REQ_1i    :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_REFILL_REQ_2i    :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_REFILL_REQ_3i    :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_REFILL_REQ_4i    :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_REFILL_REQ_5i    :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_REFILL_REQ_6i    :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_REFILL_REQ_7i    :  1 ; /* bits 23:23 */
    ca_uint32_t CPU_REFILL_REQ_8i    :  1 ; /* bits 24:24 */
    ca_uint32_t CPU_REFILL_REQ_9i    :  1 ; /* bits 25:25 */
    ca_uint32_t CPU_REFILL_REQ_10i   :  1 ; /* bits 26:26 */
    ca_uint32_t CPU_REFILL_REQ_11i   :  1 ; /* bits 27:27 */
    ca_uint32_t CPU_REFILL_REQ_12i   :  1 ; /* bits 28:28 */
    ca_uint32_t CPU_REFILL_REQ_13i   :  1 ; /* bits 29:29 */
    ca_uint32_t CPU_REFILL_REQ_14i   :  1 ; /* bits 30:30 */
    ca_uint32_t CPU_REFILL_REQ_15i   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_NETWORK_ENGINE_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_NETWORK_ENGINE_INTENABLE_1        0xf4320170
#define GLOBAL_NETWORK_ENGINE_INTENABLE_1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t NIe                  :  1 ; /* bits 0:0 */
    ca_uint32_t L2FEe                :  1 ; /* bits 1:1 */
    ca_uint32_t L2TMe                :  1 ; /* bits 2:2 */
    ca_uint32_t L3TEe                :  1 ; /* bits 3:3 */
    ca_uint32_t TQMe                 :  1 ; /* bits 4:4 */
    ca_uint32_t PONe                 :  1 ; /* bits 5:5 */
    ca_uint32_t CPU_EPP_FIFO_0e      :  1 ; /* bits 6:6 */
    ca_uint32_t CPU_EPP_FIFO_1e      :  1 ; /* bits 7:7 */
    ca_uint32_t CPU_EPP_FIFO_2e      :  1 ; /* bits 8:8 */
    ca_uint32_t CPU_EPP_FIFO_3e      :  1 ; /* bits 9:9 */
    ca_uint32_t CPU_EPP_FIFO_4e      :  1 ; /* bits 10:10 */
    ca_uint32_t CPU_EPP_FIFO_5e      :  1 ; /* bits 11:11 */
    ca_uint32_t CPU_EPP_FIFO_6e      :  1 ; /* bits 12:12 */
    ca_uint32_t CPU_EPP_FIFO_7e      :  1 ; /* bits 13:13 */
    ca_uint32_t CPU_EPP_256_FIFO_LOe :  1 ; /* bits 14:14 */
    ca_uint32_t CPU_EPP_256_FIFO_HIe :  1 ; /* bits 15:15 */
    ca_uint32_t CPU_REFILL_REQ_0e    :  1 ; /* bits 16:16 */
    ca_uint32_t CPU_REFILL_REQ_1e    :  1 ; /* bits 17:17 */
    ca_uint32_t CPU_REFILL_REQ_2e    :  1 ; /* bits 18:18 */
    ca_uint32_t CPU_REFILL_REQ_3e    :  1 ; /* bits 19:19 */
    ca_uint32_t CPU_REFILL_REQ_4e    :  1 ; /* bits 20:20 */
    ca_uint32_t CPU_REFILL_REQ_5e    :  1 ; /* bits 21:21 */
    ca_uint32_t CPU_REFILL_REQ_6e    :  1 ; /* bits 22:22 */
    ca_uint32_t CPU_REFILL_REQ_7e    :  1 ; /* bits 23:23 */
    ca_uint32_t CPU_REFILL_REQ_8e    :  1 ; /* bits 24:24 */
    ca_uint32_t CPU_REFILL_REQ_9e    :  1 ; /* bits 25:25 */
    ca_uint32_t CPU_REFILL_REQ_10e   :  1 ; /* bits 26:26 */
    ca_uint32_t CPU_REFILL_REQ_11e   :  1 ; /* bits 27:27 */
    ca_uint32_t CPU_REFILL_REQ_12e   :  1 ; /* bits 28:28 */
    ca_uint32_t CPU_REFILL_REQ_13e   :  1 ; /* bits 29:29 */
    ca_uint32_t CPU_REFILL_REQ_14e   :  1 ; /* bits 30:30 */
    ca_uint32_t CPU_REFILL_REQ_15e   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_NETWORK_ENGINE_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_NETWORK_ENGINE_STATUS             0xf4320174
#define GLOBAL_NETWORK_ENGINE_STATUS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t l2fe_init_done       :  1 ; /* bits 0:0 */
    ca_uint32_t l2tm_init_done       :  1 ; /* bits 1:1 */
    ca_uint32_t tqm_init_done        :  1 ; /* bits 2:2 */
    ca_uint32_t tqm_glb_idle         :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_NETWORK_ENGINE_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_WOL_INTERRUPT                     0xf4320178
#define GLOBAL_WOL_INTERRUPT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PORT0_WOLi           :  1 ; /* bits 0:0 */
    ca_uint32_t PORT1_WOLi           :  1 ; /* bits 1:1 */
    ca_uint32_t PORT2_WOLi           :  1 ; /* bits 2:2 */
    ca_uint32_t PORT3_WOLi           :  1 ; /* bits 3:3 */
    ca_uint32_t PORT4_WOLi           :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_WOL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_WOL_INTENABLE                     0xf432017c
#define GLOBAL_WOL_INTENABLE_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PORT0_WOLe           :  1 ; /* bits 0:0 */
    ca_uint32_t PORT1_WOLe           :  1 ; /* bits 1:1 */
    ca_uint32_t PORT2_WOLe           :  1 ; /* bits 2:2 */
    ca_uint32_t PORT3_WOLe           :  1 ; /* bits 3:3 */
    ca_uint32_t PORT4_WOLe           :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_WOL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PON_INTERRUPT_0                   0xf4320180
#define GLOBAL_PON_INTERRUPT_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PON_MACi             :  1 ; /* bits 0:0 */
    ca_uint32_t PON_CNTLi            :  1 ; /* bits 1:1 */
    ca_uint32_t PTPi                 :  1 ; /* bits 2:2 */
    ca_uint32_t OPTi                 :  1 ; /* bits 3:3 */
    ca_uint32_t PSDS_PRBSi           :  1 ; /* bits 4:4 */
    ca_uint32_t SGMII_PCSi           :  1 ; /* bits 5:5 */
    ca_uint32_t QXGMIIi              :  1 ; /* bits 6:6 */
    ca_uint32_t PSDSi                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PON_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PON_INTENABLE_0                   0xf4320184
#define GLOBAL_PON_INTENABLE_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PON_MACe             :  1 ; /* bits 0:0 */
    ca_uint32_t PON_CNTLe            :  1 ; /* bits 1:1 */
    ca_uint32_t PTPe                 :  1 ; /* bits 2:2 */
    ca_uint32_t OPTe                 :  1 ; /* bits 3:3 */
    ca_uint32_t PSDS_PRBSe           :  1 ; /* bits 4:4 */
    ca_uint32_t SGMII_PCSe           :  1 ; /* bits 5:5 */
    ca_uint32_t QXGMIIe              :  1 ; /* bits 6:6 */
    ca_uint32_t PSDSe                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PON_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PON_INTERRUPT_1                   0xf4320188
#define GLOBAL_PON_INTERRUPT_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PON_MACi             :  1 ; /* bits 0:0 */
    ca_uint32_t PON_CNTLi            :  1 ; /* bits 1:1 */
    ca_uint32_t PTPi                 :  1 ; /* bits 2:2 */
    ca_uint32_t OPTi                 :  1 ; /* bits 3:3 */
    ca_uint32_t PSDS_PRBSi           :  1 ; /* bits 4:4 */
    ca_uint32_t SGMII_PCSi           :  1 ; /* bits 5:5 */
    ca_uint32_t QXGMIIi              :  1 ; /* bits 6:6 */
    ca_uint32_t PSDSi                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PON_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PON_INTENABLE_1                   0xf432018c
#define GLOBAL_PON_INTENABLE_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PON_MACe             :  1 ; /* bits 0:0 */
    ca_uint32_t PON_CNTLe            :  1 ; /* bits 1:1 */
    ca_uint32_t PTPe                 :  1 ; /* bits 2:2 */
    ca_uint32_t OPTe                 :  1 ; /* bits 3:3 */
    ca_uint32_t PSDS_PRBSe           :  1 ; /* bits 4:4 */
    ca_uint32_t SGMII_PCSe           :  1 ; /* bits 5:5 */
    ca_uint32_t QXGMIIe              :  1 ; /* bits 6:6 */
    ca_uint32_t PSDSe                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PON_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_JTAG_TAP_CONTROL                  0xf4320190
#define GLOBAL_JTAG_TAP_CONTROL_dft              0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable_arm           :  1 ; /* bits 0:0 */
    ca_uint32_t enable_recirc_0      :  1 ; /* bits 1:1 */
    ca_uint32_t enable_recirc_1      :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_JTAG_TAP_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SOFTWARE                          0xf4320194
#define GLOBAL_SOFTWARE_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SOFTWARE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SOFTWARE2                         0xf4320198
#define GLOBAL_SOFTWARE2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SOFTWARE2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SCRATCH                           0xf432019c
#define GLOBAL_SCRATCH_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scratch              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SCRATCH_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_FMRO                              0xf43201a0
#define GLOBAL_FMRO_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fmro_sel             : 16 ; /* bits 15:0 */
    ca_uint32_t clk_sel              :  6 ; /* bits 21:16 */
    ca_uint32_t blk_sel              :  6 ; /* bits 27:22 */
    ca_uint32_t rot_sel              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_FMRO_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CRYPTO_CONFIG_0                   0xf43201a4
#define GLOBAL_CRYPTO_CONFIG_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crypto0_rng_test_mode :  1 ; /* bits 0:0 */
    ca_uint32_t crypto0_rng_test_tweak_mux :  2 ; /* bits 2:1 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CRYPTO_CONFIG_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CRYPTO_CONFIG_1                   0xf43201a8
#define GLOBAL_CRYPTO_CONFIG_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crypto1_rng_test_mode :  1 ; /* bits 0:0 */
    ca_uint32_t crypto1_rng_test_tweak_mux :  2 ; /* bits 2:1 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CRYPTO_CONFIG_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SPEED_OVERRIDE                    0xf43201ac
#define GLOBAL_SPEED_OVERRIDE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t speed                :  3 ; /* bits 2:0 */
    ca_uint32_t ov_enable            : 29 ; /* bits 31:3 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SPEED_OVERRIDE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ARM_DEBUG                         0xf43201b0
#define GLOBAL_ARM_DEBUG_dft                     0x00bf000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_dbgen            :  1 ; /* bits 0:0 */
    ca_uint32_t cpu_niden            :  1 ; /* bits 1:1 */
    ca_uint32_t cpu_spiden           :  1 ; /* bits 2:2 */
    ca_uint32_t cpu_spinden          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t auth_cssys_dbgen     :  1 ; /* bits 16:16 */
    ca_uint32_t auth_cssys_niden     :  1 ; /* bits 17:17 */
    ca_uint32_t cs_auth_niden        :  1 ; /* bits 18:18 */
    ca_uint32_t cs_auth_spinden      :  1 ; /* bits 19:19 */
    ca_uint32_t cfg_tpctl            :  1 ; /* bits 20:20 */
    ca_uint32_t cfg_tpmaxdatasize    :  5 ; /* bits 25:21 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ARM_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_AXI_MUX_TEST                      0xf43201b4
#define GLOBAL_AXI_MUX_TEST_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_en              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_AXI_MUX_TEST_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_AXI_MUX_TEST_STATUS               0xf43201b8
#define GLOBAL_AXI_MUX_TEST_STATUS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t result               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_AXI_MUX_TEST_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONTROL                       0xf43201bc
#define GLOBAL_LED_CONTROL_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t blink_rate_1         :  8 ; /* bits 7:0 */
    ca_uint32_t blink_rate_2         :  8 ; /* bits 15:8 */
    ca_uint32_t led_test             :  1 ; /* bits 16:16 */
    ca_uint32_t led_clk_polarity     :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t led_test_activity    :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_0                      0xf43201c0
#define GLOBAL_LED_CONFIG_0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_1                      0xf43201c4
#define GLOBAL_LED_CONFIG_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_2                      0xf43201c8
#define GLOBAL_LED_CONFIG_2_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_3                      0xf43201cc
#define GLOBAL_LED_CONFIG_3_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_4                      0xf43201d0
#define GLOBAL_LED_CONFIG_4_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_5                      0xf43201d4
#define GLOBAL_LED_CONFIG_5_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_5_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_6                      0xf43201d8
#define GLOBAL_LED_CONFIG_6_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_6_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_7                      0xf43201dc
#define GLOBAL_LED_CONFIG_7_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_7_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_8                      0xf43201e0
#define GLOBAL_LED_CONFIG_8_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_8_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_9                      0xf43201e4
#define GLOBAL_LED_CONFIG_9_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_9_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_10                     0xf43201e8
#define GLOBAL_LED_CONFIG_10_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_10_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_11                     0xf43201ec
#define GLOBAL_LED_CONFIG_11_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_11_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_12                     0xf43201f0
#define GLOBAL_LED_CONFIG_12_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_12_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_13                     0xf43201f4
#define GLOBAL_LED_CONFIG_13_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_13_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_14                     0xf43201f8
#define GLOBAL_LED_CONFIG_14_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_14_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LED_CONFIG_15                     0xf43201fc
#define GLOBAL_LED_CONFIG_15_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t led_event_on         :  3 ; /* bits 2:0 */
    ca_uint32_t led_event_blink      :  3 ; /* bits 5:3 */
    ca_uint32_t led_event_off        :  3 ; /* bits 8:6 */
    ca_uint32_t led_off_on           :  2 ; /* bits 10:9 */
    ca_uint32_t led_port             :  3 ; /* bits 13:11 */
    ca_uint32_t led_off_val          :  1 ; /* bits 14:14 */
    ca_uint32_t led_sw_event         :  1 ; /* bits 15:15 */
    ca_uint32_t led_blink_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t led_blink_or         :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LED_CONFIG_15_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CPLLDIV                           0xf4320200
#define GLOBAL_CPLLDIV_dft                       0x06210200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cortex_divsel        :  6 ; /* bits 5:0 */
    ca_uint32_t cpll_div_override    :  1 ; /* bits 6:6 */
    ca_uint32_t f2c_divsel           :  4 ; /* bits 10:7 */
    ca_uint32_t cf_sel               :  1 ; /* bits 11:11 */
    ca_uint32_t trc_divsel           :  7 ; /* bits 18:12 */
    ca_uint32_t cfg_pilcs_per_divsel :  6 ; /* bits 24:19 */
    ca_uint32_t cfg_ext_vsfc_divsel  :  6 ; /* bits 30:25 */
    ca_uint32_t cpll_mode_override   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CPLLDIV_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CPLLMUX                           0xf4320204
#define GLOBAL_CPLLMUX_dft                       0x00220000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t cf_i0delay           :  4 ; /* bits 19:16 */
    ca_uint32_t cf_i1delay           :  4 ; /* bits 23:20 */
    ca_uint32_t cf_i0guard           :  4 ; /* bits 27:24 */
    ca_uint32_t cf_i1guard           :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CPLLMUX_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_EPLLDIV                           0xf4320208
#define GLOBAL_EPLLDIV_dft                       0x14000c28

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dw_per_divsel        :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t core_divsel          :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t core_dynamic_en      :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t lsaxi_divsel         :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_EPLLDIV_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_EPLLDIV2                          0xf432020c
#define GLOBAL_EPLLDIV2_dft                      0x00000a00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t cci_divsel           :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_EPLLDIV2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PEDIV                             0xf4320210
#define GLOBAL_PEDIV_dft                         0x00040404

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t f_divsel             :  6 ; /* bits 5:0 */
    ca_uint32_t offload_sel          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t c2f_divsel           :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t peaxi_divsel         :  6 ; /* bits 21:16 */
    ca_uint32_t peaxi_fullspeedsel   :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd3               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PEDIV_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PEMUX                             0xf4320214
#define GLOBAL_PEMUX_dft                         0x00220000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t offload_i0delay      :  4 ; /* bits 19:16 */
    ca_uint32_t offload_i1delay      :  4 ; /* bits 23:20 */
    ca_uint32_t offload_i0guard      :  4 ; /* bits 27:24 */
    ca_uint32_t offload_i1guard      :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PEMUX_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SECURITY_OVERRIDE                 0xf4320218
#define GLOBAL_SECURITY_OVERRIDE_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t secure_override_ne   :  1 ; /* bits 0:0 */
    ca_uint32_t secure_override_per  :  1 ; /* bits 1:1 */
    ca_uint32_t secure_override_wrap_gphy :  1 ; /* bits 2:2 */
    ca_uint32_t secure_override_dma  :  1 ; /* bits 3:3 */
    ca_uint32_t secure_override_ldma :  1 ; /* bits 4:4 */
    ca_uint32_t secure_override_flash :  1 ; /* bits 5:5 */
    ca_uint32_t secure_override_pcie0 :  1 ; /* bits 6:6 */
    ca_uint32_t secure_override_pcie1 :  1 ; /* bits 7:7 */
    ca_uint32_t secure_override_pcie2 :  1 ; /* bits 8:8 */
    ca_uint32_t secure_override_ccireg :  1 ; /* bits 9:9 */
    ca_uint32_t secure_override_capsram :  1 ; /* bits 10:10 */
    ca_uint32_t secure_override_ddr  :  1 ; /* bits 11:11 */
    ca_uint32_t secure_override_sadb :  1 ; /* bits 12:12 */
    ca_uint32_t secure_override_usb  :  1 ; /* bits 13:13 */
    ca_uint32_t secure_override_pon  :  1 ; /* bits 14:14 */
    ca_uint32_t secure_override_otprom :  1 ; /* bits 15:15 */
    ca_uint32_t secure_override_peatu :  1 ; /* bits 16:16 */
    ca_uint32_t secure_override_hsioatu :  1 ; /* bits 17:17 */
    ca_uint32_t otp_lock_prot_fields :  1 ; /* bits 18:18 */
    ca_uint32_t secure_override_global :  1 ; /* bits 19:19 */
    ca_uint32_t secure_override_dma_reo :  1 ; /* bits 20:20 */
    ca_uint32_t secure_override_pemisc :  1 ; /* bits 21:21 */
    ca_uint32_t secure_override_qxgmii :  1 ; /* bits 22:22 */
    ca_uint32_t secure_override_efuse_otp :  1 ; /* bits 23:23 */
    ca_uint32_t secure_override_otp_mem :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SECURITY_OVERRIDE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_MASTER_OVERRIDE_SECURITY          0xf432021c
#define GLOBAL_MASTER_OVERRIDE_SECURITY_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t master_secure_override_ne :  1 ; /* bits 0:0 */
    ca_uint32_t master_secure_override_dma :  1 ; /* bits 1:1 */
    ca_uint32_t master_secure_override_ldma :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_MASTER_OVERRIDE_SECURITY_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PE_ISO_MODE                       0xf4320220
#define GLOBAL_PE_ISO_MODE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe_iso_mode          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PE_ISO_MODE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ROMOTP_SLV_ID                     0xf4320224
#define GLOBAL_ROMOTP_SLV_ID_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_id_entry0        :  6 ; /* bits 5:0 */
    ca_uint32_t reg_id_entry1        :  6 ; /* bits 11:6 */
    ca_uint32_t reg_id_entry2        :  6 ; /* bits 17:12 */
    ca_uint32_t reg_id_entry3        :  6 ; /* bits 23:18 */
    ca_uint32_t reg_id_en0           :  1 ; /* bits 24:24 */
    ca_uint32_t reg_id_en1           :  1 ; /* bits 25:25 */
    ca_uint32_t reg_id_en2           :  1 ; /* bits 26:26 */
    ca_uint32_t reg_id_en3           :  1 ; /* bits 27:27 */
    ca_uint32_t reg_enabled          :  1 ; /* bits 28:28 */
    ca_uint32_t rom_enabled          :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ROMOTP_SLV_ID_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_ROMOTP_SLV_ID_MASK                0xf4320228
#define GLOBAL_ROMOTP_SLV_ID_MASK_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_id_entry_mask0   :  6 ; /* bits 5:0 */
    ca_uint32_t reg_id_entry_mask1   :  6 ; /* bits 11:6 */
    ca_uint32_t reg_id_entry_mask2   :  6 ; /* bits 17:12 */
    ca_uint32_t reg_id_entry_mask3   :  6 ; /* bits 23:18 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_ROMOTP_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PSDS_INIT_CNTL                    0xf432022c
#define GLOBAL_PSDS_INIT_CNTL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ben_oen              :  1 ; /* bits 4:4 */
    ca_uint32_t POW_PCIX             :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PSDS_INIT_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CPLL0                             0xf4320230
#define GLOBAL_CPLL0_dft                         0x00003fed

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SCPU_DIV_DIVN        :  8 ; /* bits 7:0 */
    ca_uint32_t SCPU_POW             :  2 ; /* bits 9:8 */
    ca_uint32_t SCPU_RSTB            :  2 ; /* bits 11:10 */
    ca_uint32_t DIV_PREDIV_SEL       :  2 ; /* bits 13:12 */
    ca_uint32_t DIV_PREDIV_BPS       :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CPLL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CPLL1                             0xf4320234
#define GLOBAL_CPLL1_dft                         0x000c025f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ICP                  :  3 ; /* bits 2:0 */
    ca_uint32_t LPF_CS               :  2 ; /* bits 4:3 */
    ca_uint32_t LPF_RS               :  3 ; /* bits 7:5 */
    ca_uint32_t SCPU_DBUG_EN         :  1 ; /* bits 8:8 */
    ca_uint32_t SEL_CCO              :  1 ; /* bits 9:9 */
    ca_uint32_t WD_RST               :  2 ; /* bits 11:10 */
    ca_uint32_t WD_SET               :  2 ; /* bits 13:12 */
    ca_uint32_t OEB                  :  2 ; /* bits 15:14 */
    ca_uint32_t TESTSEL              :  1 ; /* bits 16:16 */
    ca_uint32_t LDO10V_SEL           :  2 ; /* bits 18:17 */
    ca_uint32_t LDO18V_SEL           :  2 ; /* bits 20:19 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CPLL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_EPLL0                             0xf4320238
#define GLOBAL_EPLL0_dft                         0x00000f9d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SCPU_DIV_DIVN        :  8 ; /* bits 7:0 */
    ca_uint32_t SCPU_POW             :  2 ; /* bits 9:8 */
    ca_uint32_t SCPU_RSTB            :  2 ; /* bits 11:10 */
    ca_uint32_t DIV_PREDIV_SEL       :  2 ; /* bits 13:12 */
    ca_uint32_t DIV_PREDIV_BPS       :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_EPLL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_EPLL1                             0xf432023c
#define GLOBAL_EPLL1_dft                         0x000a025f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ICP                  :  3 ; /* bits 2:0 */
    ca_uint32_t LPF_CS               :  2 ; /* bits 4:3 */
    ca_uint32_t LPF_RS               :  3 ; /* bits 7:5 */
    ca_uint32_t SCPU_DBUG_EN         :  1 ; /* bits 8:8 */
    ca_uint32_t SEL_CCO              :  1 ; /* bits 9:9 */
    ca_uint32_t WD_RST               :  2 ; /* bits 11:10 */
    ca_uint32_t WD_SET               :  2 ; /* bits 13:12 */
    ca_uint32_t OEB                  :  2 ; /* bits 15:14 */
    ca_uint32_t TESTSEL              :  1 ; /* bits 16:16 */
    ca_uint32_t LDO10V_SEL           :  2 ; /* bits 18:17 */
    ca_uint32_t LDO18V_SEL           :  2 ; /* bits 20:19 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_EPLL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_FPLL0                             0xf4320240
#define GLOBAL_FPLL0_dft                         0x00001fbd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SCPU_DIV_DIVN        :  8 ; /* bits 7:0 */
    ca_uint32_t SCPU_POW             :  2 ; /* bits 9:8 */
    ca_uint32_t SCPU_RSTB            :  2 ; /* bits 11:10 */
    ca_uint32_t DIV_PREDIV_SEL       :  2 ; /* bits 13:12 */
    ca_uint32_t DIV_PREDIV_BPS       :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_FPLL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_FPLL1                             0xf4320244
#define GLOBAL_FPLL1_dft                         0x000a025f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ICP                  :  3 ; /* bits 2:0 */
    ca_uint32_t LPF_CS               :  2 ; /* bits 4:3 */
    ca_uint32_t LPF_RS               :  3 ; /* bits 7:5 */
    ca_uint32_t SCPU_DBUG_EN         :  1 ; /* bits 8:8 */
    ca_uint32_t SEL_CCO              :  1 ; /* bits 9:9 */
    ca_uint32_t WD_RST               :  2 ; /* bits 11:10 */
    ca_uint32_t WD_SET               :  2 ; /* bits 13:12 */
    ca_uint32_t OEB                  :  2 ; /* bits 15:14 */
    ca_uint32_t TESTSEL              :  1 ; /* bits 16:16 */
    ca_uint32_t LDO10V_SEL           :  2 ; /* bits 18:17 */
    ca_uint32_t LDO18V_SEL           :  2 ; /* bits 20:19 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_FPLL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BOOT_VEC_0                        0xf4320248
#define GLOBAL_BOOT_VEC_0_dft                    0x17ff4000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t global_boot_0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BOOT_VEC_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BOOT_VEC_4                        0xf432024c
#define GLOBAL_BOOT_VEC_4_dft                    0xd503201f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t global_boot_4        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BOOT_VEC_4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BOOT_VEC_8                        0xf4320250
#define GLOBAL_BOOT_VEC_8_dft                    0xd503201f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t global_boot_8        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BOOT_VEC_8_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_BOOT_VEC_C                        0xf4320254
#define GLOBAL_BOOT_VEC_C_dft                    0xd503201f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t global_boot_c        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_BOOT_VEC_C_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PTP_CFG                           0xf4320258
#define GLOBAL_PTP_CFG_dft                       0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 31 ;
    ca_uint32_t div_8                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PTP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PTP_PHASE_VAL                     0xf432025c
#define GLOBAL_PTP_PHASE_VAL_dft                 0x40000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PTP_PHASE_VAL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PTP_PERIOD_ERR                    0xf4320260
#define GLOBAL_PTP_PERIOD_ERR_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PTP_PERIOD_ERR_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TMS_REG_A                         0xf4320264
#define GLOBAL_TMS_REG_A_dft                     0x086d6b85

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_a                : 29 ; /* bits 28:0 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TMS_REG_A_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TMS_REG_B                         0xf4320268
#define GLOBAL_TMS_REG_B_dft                     0x0036f2cd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_b                : 22 ; /* bits 21:0 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TMS_REG_B_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TMS_REG_C                         0xf432026c
#define GLOBAL_TMS_REG_C_dft                     0x2101012c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rstb                 :  1 ; /* bits 0:0 */
    ca_uint32_t adccksel             :  1 ; /* bits 1:1 */
    ca_uint32_t biasdem_en           :  1 ; /* bits 2:2 */
    ca_uint32_t ppow                 :  1 ; /* bits 3:3 */
    ca_uint32_t chopen               :  1 ; /* bits 4:4 */
    ca_uint32_t en_latch             :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t hold_dly             :  2 ; /* bits 9:8 */
    ca_uint32_t hold_en              :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t osr                  :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t chopfreqsel          :  4 ; /* bits 27:24 */
    ca_uint32_t ctmk_inv_sel         :  1 ; /* bits 28:28 */
    ca_uint32_t powct                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TMS_REG_C_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TMS_TEMP_DATA                     0xf4320270
#define GLOBAL_TMS_TEMP_DATA_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tm_out               : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TMS_TEMP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TMS_ADC_DATA                      0xf4320274
#define GLOBAL_TMS_ADC_DATA_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t adc_out              : 22 ; /* bits 21:0 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TMS_ADC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_CONTROL_GAINN                0xf4320278
#define GLOBAL_UVLO_CONTROL_GAINN_dft            0x00842108

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_uvlo_reg_gainn  : 25 ; /* bits 24:0 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_CONTROL_GAINN_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_CONTROL_GAINP                0xf432027c
#define GLOBAL_UVLO_CONTROL_GAINP_dft            0x01084210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_uvlo_reg_gainp  : 25 ; /* bits 24:0 */
    ca_uint32_t ca55_uvlo_reg_pow    :  5 ; /* bits 29:25 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_CONTROL_GAINP_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_CONTROL                      0xf4320280
#define GLOBAL_UVLO_CONTROL_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t glb_en               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t div_sel              :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t trig_sel             :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t uvlo_deg_filter      :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t fss_deg_filter       :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t cpu_deg_filter       :  3 ; /* bits 22:20 */
    ca_uint32_t fss_detect_out       :  5 ; /* bits 27:23 */
    ca_uint32_t rsrvd6               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_TRIG_CONTROL                 0xf4320284
#define GLOBAL_UVLO_TRIG_CONTROL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t uvlo_min             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fss_min              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t core_min             :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t core_idle_div_en     :  1 ; /* bits 16:16 */
    ca_uint32_t fss_deg_filter_h2l   :  3 ; /* bits 19:17 */
    ca_uint32_t uvlo_deg_filter_h2l  :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd4               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_TRIG_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_RECV_CTRL0                   0xf4320288
#define GLOBAL_UVLO_RECV_CTRL0_dft               0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t det_recv_sel         :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_RECV_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_RECV_CTRL1                   0xf432028c
#define GLOBAL_UVLO_RECV_CTRL1_dft               0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cycle_lowf           : 16 ; /* bits 15:0 */
    ca_uint32_t lowf                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_RECV_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_RECV_CTRL2                   0xf4320290
#define GLOBAL_UVLO_RECV_CTRL2_dft               0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cycle_recv1          : 16 ; /* bits 15:0 */
    ca_uint32_t recv1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_RECV_CTRL2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_RECV_CTRL3                   0xf4320294
#define GLOBAL_UVLO_RECV_CTRL3_dft               0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cycle_recv2          : 16 ; /* bits 15:0 */
    ca_uint32_t recv2                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_RECV_CTRL3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_RECV_CTRL4                   0xf4320298
#define GLOBAL_UVLO_RECV_CTRL4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t recv1_sw             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_RECV_CTRL4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PROF_INTST                   0xf432029c
#define GLOBAL_UVLO_PROF_INTST_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t prof_intst           :  1 ; /* bits 1:1 */
    ca_uint32_t sw_recv_intst        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PROF_INTST_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PROF_INTEN                   0xf43202a0
#define GLOBAL_UVLO_PROF_INTEN_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t prof_inten           :  1 ; /* bits 1:1 */
    ca_uint32_t sw_recv_inten        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PROF_INTEN_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_VSFC_STATUS                       0xf43202a4
#define GLOBAL_VSFC_STATUS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t idle_st              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t fss_detect_out       :  5 ; /* bits 8:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t uvlo_detect_out      :  5 ; /* bits 16:12 */
    ca_uint32_t rsrvd3               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_VSFC_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PORF_ST0                     0xf43202a8
#define GLOBAL_UVLO_PORF_ST0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t trig_cnt             : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t ovfl_trig            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PORF_ST0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PORF_ST1                     0xf43202ac
#define GLOBAL_UVLO_PORF_ST1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_duration         : 16 ; /* bits 15:0 */
    ca_uint32_t min_duration         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PORF_ST1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PORF_ST2                     0xf43202b0
#define GLOBAL_UVLO_PORF_ST2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovfl_duration        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PORF_ST2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PORF_ST3                     0xf43202b4
#define GLOBAL_UVLO_PORF_ST3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t all_idle_cnt         : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ovfl_all_idle        :  1 ; /* bits 15:15 */
    ca_uint32_t wakeup_cnt           : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ovfl_wakeup          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PORF_ST3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_SW_RECV                      0xf43202b8
#define GLOBAL_UVLO_SW_RECV_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sw_recv_finish       :  1 ; /* bits 0:0 */
    ca_uint32_t recv_st              :  1 ; /* bits 1:1 */
    ca_uint32_t sw_recv_en           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t recv_cycle_cnt       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_SW_RECV_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PROF_CTRL0                   0xf43202bc
#define GLOBAL_UVLO_PROF_CTRL0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cycle_prof           : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t prof_fin_sel         :  1 ; /* bits 30:30 */
    ca_uint32_t prof_en              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PROF_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_UVLO_PROF_CTRL1                   0xf43202c0
#define GLOBAL_UVLO_PROF_CTRL1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_2nd_droop        : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ovfl_2nd_droop       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_UVLO_PROF_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_A                   0xf43202c4
#define GLOBAL_CA55_ARM_SRAM_A_dft               0x06db06db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_ema_tlb_tag     : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ca55_ema_tlb_data    : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_A_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_B                   0xf43202c8
#define GLOBAL_CA55_ARM_SRAM_B_dft               0x06db06db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_ema_idata       : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ca55_ema_itag        : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_B_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_C                   0xf43202cc
#define GLOBAL_CA55_ARM_SRAM_C_dft               0x06db06db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_ema_btac0       : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ca55_ema_btac1       : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_C_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_D                   0xf43202d0
#define GLOBAL_CA55_ARM_SRAM_D_dft               0x06db06db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_ema_ddata       : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ca55_ema_dtag        : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_D_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_E                   0xf43202d4
#define GLOBAL_CA55_ARM_SRAM_E_dft               0x024906db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_ema_ddirty      : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ca55_emaa_l2_db      : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_E_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_F                   0xf43202d8
#define GLOBAL_CA55_ARM_SRAM_F_dft               0x1b6d1492

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_emab_l2_db      : 12 ; /* bits 11:0 */
    ca_uint32_t ca55_emaa_scu_ltdb   :  3 ; /* bits 14:12 */
    ca_uint32_t ca55_emab_scu_ltdb   :  3 ; /* bits 17:15 */
    ca_uint32_t ca55_ema_scu_sf      :  3 ; /* bits 20:18 */
    ca_uint32_t ca55_ema_l3_tag      :  3 ; /* bits 23:21 */
    ca_uint32_t ca55_ema_l3_vic      :  3 ; /* bits 26:24 */
    ca_uint32_t ca55_ema_l3_data     :  3 ; /* bits 29:27 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_F_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_G                   0xf43202dc
#define GLOBAL_CA55_ARM_SRAM_G_dft               0x55005555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_emaw_tlb_tag    :  8 ; /* bits 7:0 */
    ca_uint32_t ca55_emaw_tlb_data   :  8 ; /* bits 15:8 */
    ca_uint32_t ca55_emaw_idata      :  8 ; /* bits 23:16 */
    ca_uint32_t ca55_emaw_itag       :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_G_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_H                   0xf43202e0
#define GLOBAL_CA55_ARM_SRAM_H_dft               0x55005555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_emaw_btac0      :  8 ; /* bits 7:0 */
    ca_uint32_t ca55_emaw_btac1      :  8 ; /* bits 15:8 */
    ca_uint32_t ca55_emaw_ddata      :  8 ; /* bits 23:16 */
    ca_uint32_t ca55_emaw_dtag       :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_H_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_I                   0xf43202e4
#define GLOBAL_CA55_ARM_SRAM_I_dft               0x00000455

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_emaw_ddirty     :  8 ; /* bits 7:0 */
    ca_uint32_t ca55_emaw_scu_sf     :  2 ; /* bits 9:8 */
    ca_uint32_t ca55_emaw_l3_tag     :  2 ; /* bits 11:10 */
    ca_uint32_t ca55_emaw_l3_vic     :  2 ; /* bits 13:12 */
    ca_uint32_t ca55_emaw_l3_data    :  2 ; /* bits 15:14 */
    ca_uint32_t ca55_emas_tlb_tag    :  4 ; /* bits 19:16 */
    ca_uint32_t ca55_emas_tlb_data   :  4 ; /* bits 23:20 */
    ca_uint32_t ca55_emas_idata      :  4 ; /* bits 27:24 */
    ca_uint32_t ca55_emas_itag       :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_I_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_J                   0xf43202e8
#define GLOBAL_CA55_ARM_SRAM_J_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_emas_btac0      :  4 ; /* bits 3:0 */
    ca_uint32_t ca55_emas_btac1      :  4 ; /* bits 7:4 */
    ca_uint32_t ca55_emas_ddata      :  4 ; /* bits 11:8 */
    ca_uint32_t ca55_emas_dtag       :  4 ; /* bits 15:12 */
    ca_uint32_t ca55_emas_ddirty     :  4 ; /* bits 19:16 */
    ca_uint32_t ca55_emas_scu_sf     :  1 ; /* bits 20:20 */
    ca_uint32_t ca55_emas_l3_tag     :  1 ; /* bits 21:21 */
    ca_uint32_t ca55_emas_l3_vic     :  1 ; /* bits 22:22 */
    ca_uint32_t ca55_emas_l3_data    :  1 ; /* bits 23:23 */
    ca_uint32_t ca55_emasa_l2_db     :  4 ; /* bits 27:24 */
    ca_uint32_t ca55_emasa_scu_ltdb  :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_J_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_ARM_SRAM_K                   0xf43202ec
#define GLOBAL_CA55_ARM_SRAM_K_dft               0x1ff00000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ca55_stov_idata      :  4 ; /* bits 3:0 */
    ca_uint32_t ca55_stov_ddata      :  4 ; /* bits 7:4 */
    ca_uint32_t ca55_stov_l2_db      :  4 ; /* bits 11:8 */
    ca_uint32_t ca55_stov_scu_ltdb   :  1 ; /* bits 12:12 */
    ca_uint32_t ca55_stov_scu_sf     :  1 ; /* bits 13:13 */
    ca_uint32_t ca55_stov_l3_vic     :  1 ; /* bits 14:14 */
    ca_uint32_t ca55_stov_l3_data    :  1 ; /* bits 15:15 */
    ca_uint32_t ca55_pgen            :  4 ; /* bits 19:16 */
    ca_uint32_t ca55_ret1n           :  5 ; /* bits 24:20 */
    ca_uint32_t ca55_ret2n           :  4 ; /* bits 28:25 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_ARM_SRAM_K_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_DSS30_CTRL               0xf43202f0
#define GLOBAL_CA55_TOP_DSS30_CTRL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rst_n                :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t data_in              : 20 ; /* bits 24:5 */
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_DSS30_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_DSS30_STS                0xf43202f4
#define GLOBAL_CA55_TOP_DSS30_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_DSS30_STS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_DSS35_CTRL               0xf43202f8
#define GLOBAL_CA55_TOP_DSS35_CTRL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rst_n                :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t data_in              : 20 ; /* bits 24:5 */
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_DSS35_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_DSS35_STS                0xf43202fc
#define GLOBAL_CA55_TOP_DSS35_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_DSS35_STS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_DSS40_CTRL               0xf4320300
#define GLOBAL_CA55_TOP_DSS40_CTRL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rst_n                :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t data_in              : 20 ; /* bits 24:5 */
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_DSS40_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_DSS40_STS                0xf4320304
#define GLOBAL_CA55_TOP_DSS40_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_DSS40_STS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_FSS_CTRL0                    0xf4320308
#define GLOBAL_CA55_FSS_CTRL0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rst_n                :  4 ; /* bits 3:0 */
    ca_uint32_t sensor_en            :  4 ; /* bits 7:4 */
    ca_uint32_t path_sel             :  8 ; /* bits 15:8 */
    ca_uint32_t fall_edge_sel        :  4 ; /* bits 19:16 */
    ca_uint32_t cal_en               :  4 ; /* bits 23:20 */
    ca_uint32_t cal_2nd_en           :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_FSS_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_FSS_CTRL1                    0xf432030c
#define GLOBAL_CA55_FSS_CTRL1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t config_cdl0          : 16 ; /* bits 15:0 */
    ca_uint32_t config_cdl1          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_FSS_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_FSS_CTRL2                    0xf4320310
#define GLOBAL_CA55_FSS_CTRL2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t config_cdl2          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_FSS_CTRL2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_FSS_STS0                     0xf4320314
#define GLOBAL_CA55_FSS_STS0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cal_cdl0             : 16 ; /* bits 15:0 */
    ca_uint32_t cal_cdl1             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_FSS_STS0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_FSS_STS1                     0xf4320318
#define GLOBAL_CA55_FSS_STS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cal_done             :  4 ; /* bits 3:0 */
    ca_uint32_t cal_min_cdl1         : 16 ; /* bits 19:4 */
    ca_uint32_t detect_out           :  4 ; /* bits 23:20 */
    ca_uint32_t detector_1           :  4 ; /* bits 27:24 */
    ca_uint32_t detector_2           :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_FSS_STS1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_FSS_CTRL                 0xf432031c
#define GLOBAL_CA55_TOP_FSS_CTRL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rst_n                :  1 ; /* bits 0:0 */
    ca_uint32_t sensor_en            :  1 ; /* bits 1:1 */
    ca_uint32_t path_sel             :  2 ; /* bits 3:2 */
    ca_uint32_t fall_edge_sel        :  1 ; /* bits 4:4 */
    ca_uint32_t critical_path_in     :  1 ; /* bits 5:5 */
    ca_uint32_t cal_en               :  1 ; /* bits 6:6 */
    ca_uint32_t cal_2nd_en           :  1 ; /* bits 7:7 */
    ca_uint32_t config_cdl0          :  4 ; /* bits 11:8 */
    ca_uint32_t config_cdl1          :  4 ; /* bits 15:12 */
    ca_uint32_t config_cdl2          :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_FSS_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CA55_TOP_FSS_STS                  0xf4320320
#define GLOBAL_CA55_TOP_FSS_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t detector_1           :  1 ; /* bits 0:0 */
    ca_uint32_t detector_2           :  1 ; /* bits 1:1 */
    ca_uint32_t detect_out           :  1 ; /* bits 2:2 */
    ca_uint32_t cal_cdl0             :  4 ; /* bits 6:3 */
    ca_uint32_t cal_cdl1             :  4 ; /* bits 10:7 */
    ca_uint32_t cal_min_cdl1         :  4 ; /* bits 14:11 */
    ca_uint32_t cal_done             :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CA55_TOP_FSS_STS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_RM                             0xf4320324
#define GLOBAL_SD_RM_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sd_sramtest          : 12 ; /* bits 11:0 */
    ca_uint32_t sd_sramls            :  2 ; /* bits 13:12 */
    ca_uint32_t epon_sramls          :  1 ; /* bits 14:14 */
    ca_uint32_t gpn_sramls           :  1 ; /* bits 15:15 */
    ca_uint32_t xgpn_sramls          :  1 ; /* bits 16:16 */
    ca_uint32_t puc_sramls           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_RM_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_USB2_OTG_RM                       0xf4320328
#define GLOBAL_USB2_OTG_RM_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usb2_otg_sramtest    :  6 ; /* bits 5:0 */
    ca_uint32_t usb2_otg_sramls      :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_USB2_OTG_RM_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_USB3_RM                           0xf432032c
#define GLOBAL_USB3_RM_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usb3_sramtest        : 21 ; /* bits 20:0 */
    ca_uint32_t usb3_sramls          :  3 ; /* bits 23:21 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_USB3_RM_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_0_CNTL                        0xf4320330
#define GLOBAL_DSS_0_CNTL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dss_rst_n            :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t data_in              : 20 ; /* bits 24:5 */
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_0_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_0_STATUS                      0xf4320334
#define GLOBAL_DSS_0_STATUS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_0_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_1_CNTL                        0xf4320338
#define GLOBAL_DSS_1_CNTL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dss_rst_n            :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t data_in              : 20 ; /* bits 24:5 */
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_1_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_1_STATUS                      0xf432033c
#define GLOBAL_DSS_1_STATUS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_1_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_2_CNTL                        0xf4320340
#define GLOBAL_DSS_2_CNTL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dss_rst_n            :  1 ; /* bits 0:0 */
    ca_uint32_t ro_sel               :  3 ; /* bits 3:1 */
    ca_uint32_t wire_sel             :  1 ; /* bits 4:4 */
    ca_uint32_t data_in              : 20 ; /* bits 24:5 */
    ca_uint32_t speed_en             :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_2_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DSS_2_STATUS                      0xf4320344
#define GLOBAL_DSS_2_STATUS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t count_out            : 20 ; /* bits 20:1 */
    ca_uint32_t wsort_go             :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DSS_2_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DEVICE_ASSIGN_ID1                 0xf4320348
#define GLOBAL_DEVICE_ASSIGN_ID1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t device_id1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DEVICE_ASSIGN_ID1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DEVICE_ASSIGN_ID0                 0xf432034c
#define GLOBAL_DEVICE_ASSIGN_ID0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t device_id0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DEVICE_ASSIGN_ID0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_PLL_0                          0xf4320350
#define GLOBAL_SD_PLL_0_dft                      0x003e0003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sd30_sscpll_ctrl0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_PLL_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_PLL_1                          0xf4320354
#define GLOBAL_SD_PLL_1_dft                      0x1eb9706c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sd30_sscpll_ctrl1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_PLL_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_PLL_2                          0xf4320358
#define GLOBAL_SD_PLL_2_dft                      0x00c54388

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sd30_sscpll_ctrl2    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_PLL_2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_PLL_3                          0xf432035c
#define GLOBAL_SD_PLL_3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sd30_sscpll_ctrl3    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_PLL_3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_SD_PLL_4                          0xf4320360
#define GLOBAL_SD_PLL_4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_sdpll_ck_test    :  1 ; /* bits 0:0 */
    ca_uint32_t sdpll_enable_test    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_SD_PLL_4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_LDO_SD3                           0xf4320364
#define GLOBAL_LDO_SD3_dft                       0x000001db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LDO_SD3_POW          :  2 ; /* bits 1:0 */
    ca_uint32_t LDO_SD3_REG_TUNEREF  :  2 ; /* bits 3:2 */
    ca_uint32_t LDO_SD3_REG_SSTIME   :  2 ; /* bits 5:4 */
    ca_uint32_t LDO_SD3_REG_TUNE_VO  :  3 ; /* bits 8:6 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_LDO_SD3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_U2PHY_STS_SLB                     0xf4320368
#define GLOBAL_U2PHY_STS_SLB_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ERR_NUM_0            :  8 ; /* bits 7:0 */
    ca_uint32_t ERR_NUM_1            :  8 ; /* bits 15:8 */
    ca_uint32_t PACKET_NUM_0         :  8 ; /* bits 23:16 */
    ca_uint32_t PACKET_NUM_1         :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_U2PHY_STS_SLB_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_PHY_ISO_POWER_CTRL                0xf432036c
#define GLOBAL_PHY_ISO_POWER_CTRL_dft            0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s0_PCIE2_ISOLATE_0   :  1 ; /* bits 0:0 */
    ca_uint32_t s0_PCIE2_ISOLATE_1   :  1 ; /* bits 1:1 */
    ca_uint32_t s1_PCIE2_ISOLATE_0   :  1 ; /* bits 2:2 */
    ca_uint32_t s1_PCIE2_ISOLATE_1   :  1 ; /* bits 3:3 */
    ca_uint32_t s2_CPHY_ISOLATE      :  1 ; /* bits 4:4 */
    ca_uint32_t s3_CPHY_ISOLATE      :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t s0_POW_PCIE2_0       :  1 ; /* bits 7:7 */
    ca_uint32_t s0_POW_PCIE2_1       :  1 ; /* bits 8:8 */
    ca_uint32_t s1_POW_PCIE2_0       :  1 ; /* bits 9:9 */
    ca_uint32_t s1_POW_PCIE2_1       :  1 ; /* bits 10:10 */
    ca_uint32_t s2_POW_USB3          :  1 ; /* bits 11:11 */
    ca_uint32_t s2_POW_PCIE2         :  1 ; /* bits 12:12 */
    ca_uint32_t s3_POW_USB3          :  1 ; /* bits 13:13 */
    ca_uint32_t s3_POW_PCIE2         :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t s0_ISO_ANA_B         :  1 ; /* bits 16:16 */
    ca_uint32_t s1_ISO_ANA_B         :  1 ; /* bits 17:17 */
    ca_uint32_t s2_ISO_ANA_B         :  1 ; /* bits 18:18 */
    ca_uint32_t s3_ISO_ANA_B         :  1 ; /* bits 19:19 */
    ca_uint32_t s0_LANE0_CA09PC_EN   :  1 ; /* bits 20:20 */
    ca_uint32_t s0_LANE0_CA33PC_EN   :  1 ; /* bits 21:21 */
    ca_uint32_t s0_LANE1_CA09PC_EN   :  1 ; /* bits 22:22 */
    ca_uint32_t s0_LANE1_CA33PC_EN   :  1 ; /* bits 23:23 */
    ca_uint32_t s1_LANE0_CA09PC_EN   :  1 ; /* bits 24:24 */
    ca_uint32_t s1_LANE0_CA33PC_EN   :  1 ; /* bits 25:25 */
    ca_uint32_t s1_LANE1_CA09PC_EN   :  1 ; /* bits 26:26 */
    ca_uint32_t s1_LANE1_CA33PC_EN   :  1 ; /* bits 27:27 */
    ca_uint32_t s2_CA09PC_EN         :  1 ; /* bits 28:28 */
    ca_uint32_t s2_CA33PC_EN         :  1 ; /* bits 29:29 */
    ca_uint32_t s3_CA09PC_EN         :  1 ; /* bits 30:30 */
    ca_uint32_t s3_CA33PC_EN         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_PHY_ISO_POWER_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPI_STATUS4                       0xf4320370
#define GLOBAL_GPI_STATUS4_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio_i4              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPI_STATUS4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPI_STATUS3                       0xf4320374
#define GLOBAL_GPI_STATUS3_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio_i3              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPI_STATUS3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPI_STATUS2                       0xf4320378
#define GLOBAL_GPI_STATUS2_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio_i2              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPI_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPI_STATUS1                       0xf432037c
#define GLOBAL_GPI_STATUS1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio_i1              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPI_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_GPI_STATUS0                       0xf4320380
#define GLOBAL_GPI_STATUS0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpio_i0              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_GPI_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TH_PLL                            0xf4320384
#define GLOBAL_TH_PLL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PLL_RDY              :  1 ; /* bits 0:0 */
    ca_uint32_t AFE_SDM_DBG_OUT      :  3 ; /* bits 3:1 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TH_PLL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TH_PLL_0                          0xf4320388
#define GLOBAL_TH_PLL_0_dft                      0xe22d7e80

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t REG0X_PLL_I2S        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TH_PLL_0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TH_PLL_1                          0xf432038c
#define GLOBAL_TH_PLL_1_dft                      0x17850180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t REG1X_PLL_I2S        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TH_PLL_1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TH_PLL_2                          0xf4320390
#define GLOBAL_TH_PLL_2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t REG2X_PLL_I2S        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TH_PLL_2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_TH_PLL_3                          0xf4320394
#define GLOBAL_TH_PLL_3_dft                      0x9b030000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t REG3X_PLL_I2S        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_TH_PLL_3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_DDR_RESET_MODE                    0xf4320398
#define GLOBAL_DDR_RESET_MODE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ddr_warm_rst_mode    :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_DDR_RESET_MODE_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL7                     0xf432039c
#define GLOBAL_RSVD_CONTROL7_dft                 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global7         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL7_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL6                     0xf43203a0
#define GLOBAL_RSVD_CONTROL6_dft                 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global6         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL6_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL5                     0xf43203a4
#define GLOBAL_RSVD_CONTROL5_dft                 0xaaaaaaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global5         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL5_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL4                     0xf43203a8
#define GLOBAL_RSVD_CONTROL4_dft                 0xaaaaaaaa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global4         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL4_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL3                     0xf43203ac
#define GLOBAL_RSVD_CONTROL3_dft                 0x55555555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global3         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL2                     0xf43203b0
#define GLOBAL_RSVD_CONTROL2_dft                 0x55555555

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global2         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL1                     0xf43203b4
#define GLOBAL_RSVD_CONTROL1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_CONTROL0                     0xf43203b8
#define GLOBAL_RSVD_CONTROL0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_global0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_CONTROL0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_RESULTS3                     0xf43203bc
#define GLOBAL_RSVD_RESULTS3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_results3        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_RESULTS3_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_RESULTS2                     0xf43203c0
#define GLOBAL_RSVD_RESULTS2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_results2        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_RESULTS2_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_RESULTS1                     0xf43203c4
#define GLOBAL_RSVD_RESULTS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_results1        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_RESULTS1_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_RSVD_RESULTS0                     0xf43203c8
#define GLOBAL_RSVD_RESULTS0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsvd_results0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_RSVD_RESULTS0_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CHIP_ID_CTRL                      0xf4320ff0
#define GLOBAL_CHIP_ID_CTRL_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t chip_id_ctrl         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CHIP_ID_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_CHIP_ID                           0xf4320ff4
#define GLOBAL_CHIP_ID_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t chip_id              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_CHIP_ID_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_FPGA_OPTION                       0xf4320ff8
#define GLOBAL_FPGA_OPTION_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_option          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_FPGA_OPTION_t;
#endif /* !__ASSEMBLER__ */


#define GLOBAL_FPGA_DATE                         0xf4320ffc
#define GLOBAL_FPGA_DATE_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_date            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GLOBAL_FPGA_DATE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
  GLOBAL_JTAG_ID_t                         JTAG_ID;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  GLOBAL_BIST_CONTROL13_t                  BIST_CONTROL13;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  GLOBAL_BIST_CONTROL12_t                  BIST_CONTROL12;                /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  GLOBAL_BIST_CONTROL11_t                  BIST_CONTROL11;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  GLOBAL_BIST_CONTROL10_t                  BIST_CONTROL10;                /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  GLOBAL_BIST_CONTROL9_t                   BIST_CONTROL9;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  GLOBAL_BIST_CONTROL8_t                   BIST_CONTROL8;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  GLOBAL_BIST_CONTROL7_t                   BIST_CONTROL7;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  GLOBAL_BIST_CONTROL6_t                   BIST_CONTROL6;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  GLOBAL_BIST_CONTROL5_t                   BIST_CONTROL5;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  GLOBAL_BIST_CONTROL4_t                   BIST_CONTROL4;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  GLOBAL_BIST_CONTROL3_t                   BIST_CONTROL3;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  GLOBAL_BIST_CONTROL2_t                   BIST_CONTROL2;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  GLOBAL_BIST_CONTROL1_t                   BIST_CONTROL1;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  GLOBAL_BIST_CONTROL0_t                   BIST_CONTROL0;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  GLOBAL_BIST_RESULTS13_t                  BIST_RESULTS13;                /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  GLOBAL_BIST_RESULTS12_t                  BIST_RESULTS12;                /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  GLOBAL_BIST_RESULTS11_t                  BIST_RESULTS11;                /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  GLOBAL_BIST_RESULTS10_t                  BIST_RESULTS10;                /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  GLOBAL_BIST_RESULTS9_t                   BIST_RESULTS9;                 /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  GLOBAL_BIST_RESULTS8_t                   BIST_RESULTS8;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  GLOBAL_BIST_RESULTS7_t                   BIST_RESULTS7;                 /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  GLOBAL_BIST_RESULTS6_t                   BIST_RESULTS6;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  GLOBAL_BIST_RESULTS5_t                   BIST_RESULTS5;                 /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  GLOBAL_BIST_RESULTS4_t                   BIST_RESULTS4;                 /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  GLOBAL_BIST_RESULTS3_t                   BIST_RESULTS3;                 /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  GLOBAL_BIST_RESULTS2_t                   BIST_RESULTS2;                 /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  GLOBAL_BIST_RESULTS1_t                   BIST_RESULTS1;                 /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  GLOBAL_BIST_RESULTS0_t                   BIST_RESULTS0;                 /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  GLOBAL_EPON_CNTL_t                       EPON_CNTL;                     /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  GLOBAL_EPON_STATUS_t                     EPON_STATUS;                   /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  GLOBAL_GPON_CNTL_t                       GPON_CNTL;                     /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  GLOBAL_OPT_MODULE_CNTL_t                 OPT_MODULE_CNTL;               /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  GLOBAL_OPT_MODULE_LAO_CNTL_t             OPT_MODULE_LAO_CNTL;           /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  GLOBAL_OPT_INTERRUPT_t                   OPT_INTERRUPT;                 /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  GLOBAL_OPT_INTENABLE_t                   OPT_INTENABLE;                 /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  GLOBAL_OPT_MODULE_STATUS_t               OPT_MODULE_STATUS;             /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  GLOBAL_PON_CNTL_t                        PON_CNTL;                      /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  GLOBAL_BLOCK_RESET_t                     BLOCK_RESET;                   /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  GLOBAL_BLOCK_RESET_EXT_t                 BLOCK_RESET_EXT;               /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  GLOBAL_DPHY_RESET_t                      DPHY_RESET;                    /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  GLOBAL_FABRIC_RESET_t                    FABRIC_RESET;                  /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  GLOBAL_ARM_RESET_t                       ARM_RESET;                     /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  GLOBAL_STRAP_t                           STRAP;                         /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  GLOBAL_BIST_RESULT_t                     BIST_RESULT;                   /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  GLOBAL_BIST_DATA_t                       BIST_DATA;                     /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  GLOBAL_BIST_DATA2_t                      BIST_DATA2;                    /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  GLOBAL_BIST_DATA3_t                      BIST_DATA3;                    /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  GLOBAL_GLOBAL_CONFIG_t                   GLOBAL_CONFIG;                 /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  GLOBAL_PHY_CONTROL_t                     PHY_CONTROL;                   /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  GLOBAL_PHY_MISC_CONTROL_t                PHY_MISC_CONTROL;              /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  GLOBAL_PHY_STATUS_t                      PHY_STATUS;                    /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  GLOBAL_PHY_SGMII_MISC_CONTROL_t          PHY_SGMII_MISC_CONTROL;        /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  GLOBAL_PHY_SGMII_PCS_CONTROL_t           PHY_SGMII_PCS_CONTROL;         /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  GLOBAL_PHY_SGMII_PCS_CONTROL_2nd_t       PHY_SGMII_PCS_CONTROL_2nd;     /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  GLOBAL_PHY_SGMII_PCS_CONTROL_3rd_t       PHY_SGMII_PCS_CONTROL_3rd;     /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  GLOBAL_PHY_SGMII_PCS_INFO_t              PHY_SGMII_PCS_INFO;            /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  GLOBAL_SGMII_PCS_INTERRUPT_t             SGMII_PCS_INTERRUPT;           /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  GLOBAL_SGMII_PCS_INTENABLE_t             SGMII_PCS_INTENABLE;           /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  GLOBAL_RXAUI_SERDES_CONTROL_t            RXAUI_SERDES_CONTROL;          /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  GLOBAL_PIN_MUX_t                         PIN_MUX;                       /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  GLOBAL_PIN_MUX_NEW_t                     PIN_MUX_NEW;                   /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  GLOBAL_SD_IO_PULL_CONTROL_t              SD_IO_PULL_CONTROL;            /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  GLOBAL_IO_DRIVE_CONTROL_t                IO_DRIVE_CONTROL;              /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  GLOBAL_GPIO_MUX_0_t                      GPIO_MUX_0;                    /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  GLOBAL_GPIO_MUX_1_t                      GPIO_MUX_1;                    /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  GLOBAL_GPIO_MUX_2_t                      GPIO_MUX_2;                    /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  GLOBAL_GPIO_MUX_3_t                      GPIO_MUX_3;                    /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  GLOBAL_GPIO_MUX_4_t                      GPIO_MUX_4;                    /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  GLOBAL_GIGE_PHY_t                        GIGE_PHY;                      /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  GLOBAL_ARM_STATE_t                       ARM_STATE;                     /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  GLOBAL_ARM_CPU0_STATE_t                  ARM_CPU0_STATE;                /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  GLOBAL_ARM_CPU1_STATE_t                  ARM_CPU1_STATE;                /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  GLOBAL_ARM_CPU2_STATE_t                  ARM_CPU2_STATE;                /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  GLOBAL_ARM_CPU3_STATE_t                  ARM_CPU3_STATE;                /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  GLOBAL_PE_DSS_STATE_t                    PE_DSS_STATE;                  /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  GLOBAL_DSS_COUNT2_t                      DSS_COUNT2;                    /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  GLOBAL_DSS_COUNT1_t                      DSS_COUNT1;                    /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  GLOBAL_DSS_COUNT0_t                      DSS_COUNT0;                    /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  GLOBAL_ARM_CONFIG_A_t                    ARM_CONFIG_A;                  /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  GLOBAL_ARM_CONFIG_B_t                    ARM_CONFIG_B;                  /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  GLOBAL_ARM_CONFIG_C_t                    ARM_CONFIG_C;                  /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  GLOBAL_ARM_CONFIG_D1_t                   ARM_CONFIG_D1;                 /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  GLOBAL_ARM_CONFIG_D0_t                   ARM_CONFIG_D0;                 /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  GLOBAL_ARM_CONFIG_E_t                    ARM_CONFIG_E;                  /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  GLOBAL_ARM_CONFIG_F_t                    ARM_CONFIG_F;                  /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  GLOBAL_ARM_CONFIG_G_t                    ARM_CONFIG_G;                  /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  GLOBAL_SYSTEM_INTERRUPT_t                SYSTEM_INTERRUPT;              /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  GLOBAL_SYSTEM_INTENABLE_t                SYSTEM_INTENABLE;              /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  GLOBAL_NETWORK_ENGINE_INTERRUPT_0_t      NETWORK_ENGINE_INTERRUPT_0;    /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  GLOBAL_NETWORK_ENGINE_INTENABLE_0_t      NETWORK_ENGINE_INTENABLE_0;    /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  GLOBAL_NETWORK_ENGINE_INTERRUPT_1_t      NETWORK_ENGINE_INTERRUPT_1;    /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  GLOBAL_NETWORK_ENGINE_INTENABLE_1_t      NETWORK_ENGINE_INTENABLE_1;    /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  GLOBAL_NETWORK_ENGINE_STATUS_t           NETWORK_ENGINE_STATUS;         /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  GLOBAL_WOL_INTERRUPT_t                   WOL_INTERRUPT;                 /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  GLOBAL_WOL_INTENABLE_t                   WOL_INTENABLE;                 /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  GLOBAL_PON_INTERRUPT_0_t                 PON_INTERRUPT_0;               /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  GLOBAL_PON_INTENABLE_0_t                 PON_INTENABLE_0;               /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  GLOBAL_PON_INTERRUPT_1_t                 PON_INTERRUPT_1;               /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  GLOBAL_PON_INTENABLE_1_t                 PON_INTENABLE_1;               /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  GLOBAL_JTAG_TAP_CONTROL_t                JTAG_TAP_CONTROL;              /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  GLOBAL_SOFTWARE_t                        SOFTWARE;                      /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  GLOBAL_SOFTWARE2_t                       SOFTWARE2;                     /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  GLOBAL_SCRATCH_t                         SCRATCH;                       /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  GLOBAL_FMRO_t                            FMRO;                          /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  GLOBAL_CRYPTO_CONFIG_0_t                 CRYPTO_CONFIG_0;               /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  GLOBAL_CRYPTO_CONFIG_1_t                 CRYPTO_CONFIG_1;               /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  GLOBAL_SPEED_OVERRIDE_t                  SPEED_OVERRIDE;                /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  GLOBAL_ARM_DEBUG_t                       ARM_DEBUG;                     /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  GLOBAL_AXI_MUX_TEST_t                    AXI_MUX_TEST;                  /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  GLOBAL_AXI_MUX_TEST_STATUS_t             AXI_MUX_TEST_STATUS;           /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  GLOBAL_LED_CONTROL_t                     LED_CONTROL;                   /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  GLOBAL_LED_CONFIG_0_t                    LED_CONFIG_0;                  /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  GLOBAL_LED_CONFIG_1_t                    LED_CONFIG_1;                  /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  GLOBAL_LED_CONFIG_2_t                    LED_CONFIG_2;                  /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  GLOBAL_LED_CONFIG_3_t                    LED_CONFIG_3;                  /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd116[3];
  GLOBAL_LED_CONFIG_4_t                    LED_CONFIG_4;                  /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd117[3];
  GLOBAL_LED_CONFIG_5_t                    LED_CONFIG_5;                  /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd118[3];
  GLOBAL_LED_CONFIG_6_t                    LED_CONFIG_6;                  /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd119[3];
  GLOBAL_LED_CONFIG_7_t                    LED_CONFIG_7;                  /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd120[3];
  GLOBAL_LED_CONFIG_8_t                    LED_CONFIG_8;                  /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd121[3];
  GLOBAL_LED_CONFIG_9_t                    LED_CONFIG_9;                  /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd122[3];
  GLOBAL_LED_CONFIG_10_t                   LED_CONFIG_10;                 /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd123[3];
  GLOBAL_LED_CONFIG_11_t                   LED_CONFIG_11;                 /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd124[3];
  GLOBAL_LED_CONFIG_12_t                   LED_CONFIG_12;                 /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd125[3];
  GLOBAL_LED_CONFIG_13_t                   LED_CONFIG_13;                 /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd126[3];
  GLOBAL_LED_CONFIG_14_t                   LED_CONFIG_14;                 /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd127[3];
  GLOBAL_LED_CONFIG_15_t                   LED_CONFIG_15;                 /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd128[3];
  GLOBAL_CPLLDIV_t                         CPLLDIV;                       /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd129[3];
  GLOBAL_CPLLMUX_t                         CPLLMUX;                       /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd130[3];
  GLOBAL_EPLLDIV_t                         EPLLDIV;                       /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd131[3];
  GLOBAL_EPLLDIV2_t                        EPLLDIV2;                      /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd132[3];
  GLOBAL_PEDIV_t                           PEDIV;                         /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd133[3];
  GLOBAL_PEMUX_t                           PEMUX;                         /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd134[3];
  GLOBAL_SECURITY_OVERRIDE_t               SECURITY_OVERRIDE;             /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd135[3];
  GLOBAL_MASTER_OVERRIDE_SECURITY_t        MASTER_OVERRIDE_SECURITY;      /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd136[3];
  GLOBAL_PE_ISO_MODE_t                     PE_ISO_MODE;                   /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd137[3];
  GLOBAL_ROMOTP_SLV_ID_t                   ROMOTP_SLV_ID;                 /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd138[3];
  GLOBAL_ROMOTP_SLV_ID_MASK_t              ROMOTP_SLV_ID_MASK;            /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd139[3];
  GLOBAL_PSDS_INIT_CNTL_t                  PSDS_INIT_CNTL;                /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd140[3];
  GLOBAL_CPLL0_t                           CPLL0;                         /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd141[3];
  GLOBAL_CPLL1_t                           CPLL1;                         /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd142[3];
  GLOBAL_EPLL0_t                           EPLL0;                         /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd143[3];
  GLOBAL_EPLL1_t                           EPLL1;                         /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd144[3];
  GLOBAL_FPLL0_t                           FPLL0;                         /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd145[3];
  GLOBAL_FPLL1_t                           FPLL1;                         /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd146[3];
  GLOBAL_BOOT_VEC_0_t                      BOOT_VEC_0;                    /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd147[3];
  GLOBAL_BOOT_VEC_4_t                      BOOT_VEC_4;                    /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd148[3];
  GLOBAL_BOOT_VEC_8_t                      BOOT_VEC_8;                    /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd149[3];
  GLOBAL_BOOT_VEC_C_t                      BOOT_VEC_C;                    /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd150[3];
  GLOBAL_PTP_CFG_t                         PTP_CFG;                       /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd151[3];
  GLOBAL_PTP_PHASE_VAL_t                   PTP_PHASE_VAL;                 /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd152[3];
  GLOBAL_PTP_PERIOD_ERR_t                  PTP_PERIOD_ERR;                /* addr: 0x00000260 */
  ca_uint32_t                              rsrvd153[3];
  GLOBAL_TMS_REG_A_t                       TMS_REG_A;                     /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd154[3];
  GLOBAL_TMS_REG_B_t                       TMS_REG_B;                     /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd155[3];
  GLOBAL_TMS_REG_C_t                       TMS_REG_C;                     /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd156[3];
  GLOBAL_TMS_TEMP_DATA_t                   TMS_TEMP_DATA;                 /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd157[3];
  GLOBAL_TMS_ADC_DATA_t                    TMS_ADC_DATA;                  /* addr: 0x00000274 */
  ca_uint32_t                              rsrvd158[3];
  GLOBAL_UVLO_CONTROL_GAINN_t              UVLO_CONTROL_GAINN;            /* addr: 0x00000278 */
  ca_uint32_t                              rsrvd159[3];
  GLOBAL_UVLO_CONTROL_GAINP_t              UVLO_CONTROL_GAINP;            /* addr: 0x0000027c */
  ca_uint32_t                              rsrvd160[3];
  GLOBAL_UVLO_CONTROL_t                    UVLO_CONTROL;                  /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd161[3];
  GLOBAL_UVLO_TRIG_CONTROL_t               UVLO_TRIG_CONTROL;             /* addr: 0x00000284 */
  ca_uint32_t                              rsrvd162[3];
  GLOBAL_UVLO_RECV_CTRL0_t                 UVLO_RECV_CTRL0;               /* addr: 0x00000288 */
  ca_uint32_t                              rsrvd163[3];
  GLOBAL_UVLO_RECV_CTRL1_t                 UVLO_RECV_CTRL1;               /* addr: 0x0000028c */
  ca_uint32_t                              rsrvd164[3];
  GLOBAL_UVLO_RECV_CTRL2_t                 UVLO_RECV_CTRL2;               /* addr: 0x00000290 */
  ca_uint32_t                              rsrvd165[3];
  GLOBAL_UVLO_RECV_CTRL3_t                 UVLO_RECV_CTRL3;               /* addr: 0x00000294 */
  ca_uint32_t                              rsrvd166[3];
  GLOBAL_UVLO_RECV_CTRL4_t                 UVLO_RECV_CTRL4;               /* addr: 0x00000298 */
  ca_uint32_t                              rsrvd167[3];
  GLOBAL_UVLO_PROF_INTST_t                 UVLO_PROF_INTST;               /* addr: 0x0000029c */
  ca_uint32_t                              rsrvd168[3];
  GLOBAL_UVLO_PROF_INTEN_t                 UVLO_PROF_INTEN;               /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd169[3];
  GLOBAL_VSFC_STATUS_t                     VSFC_STATUS;                   /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd170[3];
  GLOBAL_UVLO_PORF_ST0_t                   UVLO_PORF_ST0;                 /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd171[3];
  GLOBAL_UVLO_PORF_ST1_t                   UVLO_PORF_ST1;                 /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd172[3];
  GLOBAL_UVLO_PORF_ST2_t                   UVLO_PORF_ST2;                 /* addr: 0x000002b0 */
  ca_uint32_t                              rsrvd173[3];
  GLOBAL_UVLO_PORF_ST3_t                   UVLO_PORF_ST3;                 /* addr: 0x000002b4 */
  ca_uint32_t                              rsrvd174[3];
  GLOBAL_UVLO_SW_RECV_t                    UVLO_SW_RECV;                  /* addr: 0x000002b8 */
  ca_uint32_t                              rsrvd175[3];
  GLOBAL_UVLO_PROF_CTRL0_t                 UVLO_PROF_CTRL0;               /* addr: 0x000002bc */
  ca_uint32_t                              rsrvd176[3];
  GLOBAL_UVLO_PROF_CTRL1_t                 UVLO_PROF_CTRL1;               /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd177[3];
  GLOBAL_CA55_ARM_SRAM_A_t                 CA55_ARM_SRAM_A;               /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd178[3];
  GLOBAL_CA55_ARM_SRAM_B_t                 CA55_ARM_SRAM_B;               /* addr: 0x000002c8 */
  ca_uint32_t                              rsrvd179[3];
  GLOBAL_CA55_ARM_SRAM_C_t                 CA55_ARM_SRAM_C;               /* addr: 0x000002cc */
  ca_uint32_t                              rsrvd180[3];
  GLOBAL_CA55_ARM_SRAM_D_t                 CA55_ARM_SRAM_D;               /* addr: 0x000002d0 */
  ca_uint32_t                              rsrvd181[3];
  GLOBAL_CA55_ARM_SRAM_E_t                 CA55_ARM_SRAM_E;               /* addr: 0x000002d4 */
  ca_uint32_t                              rsrvd182[3];
  GLOBAL_CA55_ARM_SRAM_F_t                 CA55_ARM_SRAM_F;               /* addr: 0x000002d8 */
  ca_uint32_t                              rsrvd183[3];
  GLOBAL_CA55_ARM_SRAM_G_t                 CA55_ARM_SRAM_G;               /* addr: 0x000002dc */
  ca_uint32_t                              rsrvd184[3];
  GLOBAL_CA55_ARM_SRAM_H_t                 CA55_ARM_SRAM_H;               /* addr: 0x000002e0 */
  ca_uint32_t                              rsrvd185[3];
  GLOBAL_CA55_ARM_SRAM_I_t                 CA55_ARM_SRAM_I;               /* addr: 0x000002e4 */
  ca_uint32_t                              rsrvd186[3];
  GLOBAL_CA55_ARM_SRAM_J_t                 CA55_ARM_SRAM_J;               /* addr: 0x000002e8 */
  ca_uint32_t                              rsrvd187[3];
  GLOBAL_CA55_ARM_SRAM_K_t                 CA55_ARM_SRAM_K;               /* addr: 0x000002ec */
  ca_uint32_t                              rsrvd188[3];
  GLOBAL_CA55_TOP_DSS30_CTRL_t             CA55_TOP_DSS30_CTRL;           /* addr: 0x000002f0 */
  ca_uint32_t                              rsrvd189[3];
  GLOBAL_CA55_TOP_DSS30_STS_t              CA55_TOP_DSS30_STS;            /* addr: 0x000002f4 */
  ca_uint32_t                              rsrvd190[3];
  GLOBAL_CA55_TOP_DSS35_CTRL_t             CA55_TOP_DSS35_CTRL;           /* addr: 0x000002f8 */
  ca_uint32_t                              rsrvd191[3];
  GLOBAL_CA55_TOP_DSS35_STS_t              CA55_TOP_DSS35_STS;            /* addr: 0x000002fc */
  ca_uint32_t                              rsrvd192[3];
  GLOBAL_CA55_TOP_DSS40_CTRL_t             CA55_TOP_DSS40_CTRL;           /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd193[3];
  GLOBAL_CA55_TOP_DSS40_STS_t              CA55_TOP_DSS40_STS;            /* addr: 0x00000304 */
  ca_uint32_t                              rsrvd194[3];
  GLOBAL_CA55_FSS_CTRL0_t                  CA55_FSS_CTRL0;                /* addr: 0x00000308 */
  ca_uint32_t                              rsrvd195[3];
  GLOBAL_CA55_FSS_CTRL1_t                  CA55_FSS_CTRL1;                /* addr: 0x0000030c */
  ca_uint32_t                              rsrvd196[3];
  GLOBAL_CA55_FSS_CTRL2_t                  CA55_FSS_CTRL2;                /* addr: 0x00000310 */
  ca_uint32_t                              rsrvd197[3];
  GLOBAL_CA55_FSS_STS0_t                   CA55_FSS_STS0;                 /* addr: 0x00000314 */
  ca_uint32_t                              rsrvd198[3];
  GLOBAL_CA55_FSS_STS1_t                   CA55_FSS_STS1;                 /* addr: 0x00000318 */
  ca_uint32_t                              rsrvd199[3];
  GLOBAL_CA55_TOP_FSS_CTRL_t               CA55_TOP_FSS_CTRL;             /* addr: 0x0000031c */
  ca_uint32_t                              rsrvd200[3];
  GLOBAL_CA55_TOP_FSS_STS_t                CA55_TOP_FSS_STS;              /* addr: 0x00000320 */
  ca_uint32_t                              rsrvd201[3];
  GLOBAL_SD_RM_t                           SD_RM;                         /* addr: 0x00000324 */
  ca_uint32_t                              rsrvd202[3];
  GLOBAL_USB2_OTG_RM_t                     USB2_OTG_RM;                   /* addr: 0x00000328 */
  ca_uint32_t                              rsrvd203[3];
  GLOBAL_USB3_RM_t                         USB3_RM;                       /* addr: 0x0000032c */
  ca_uint32_t                              rsrvd204[3];
  GLOBAL_DSS_0_CNTL_t                      DSS_0_CNTL;                    /* addr: 0x00000330 */
  ca_uint32_t                              rsrvd205[3];
  GLOBAL_DSS_0_STATUS_t                    DSS_0_STATUS;                  /* addr: 0x00000334 */
  ca_uint32_t                              rsrvd206[3];
  GLOBAL_DSS_1_CNTL_t                      DSS_1_CNTL;                    /* addr: 0x00000338 */
  ca_uint32_t                              rsrvd207[3];
  GLOBAL_DSS_1_STATUS_t                    DSS_1_STATUS;                  /* addr: 0x0000033c */
  ca_uint32_t                              rsrvd208[3];
  GLOBAL_DSS_2_CNTL_t                      DSS_2_CNTL;                    /* addr: 0x00000340 */
  ca_uint32_t                              rsrvd209[3];
  GLOBAL_DSS_2_STATUS_t                    DSS_2_STATUS;                  /* addr: 0x00000344 */
  ca_uint32_t                              rsrvd210[3];
  GLOBAL_DEVICE_ASSIGN_ID1_t               DEVICE_ASSIGN_ID1;             /* addr: 0x00000348 */
  ca_uint32_t                              rsrvd211[3];
  GLOBAL_DEVICE_ASSIGN_ID0_t               DEVICE_ASSIGN_ID0;             /* addr: 0x0000034c */
  ca_uint32_t                              rsrvd212[3];
  GLOBAL_SD_PLL_0_t                        SD_PLL_0;                      /* addr: 0x00000350 */
  ca_uint32_t                              rsrvd213[3];
  GLOBAL_SD_PLL_1_t                        SD_PLL_1;                      /* addr: 0x00000354 */
  ca_uint32_t                              rsrvd214[3];
  GLOBAL_SD_PLL_2_t                        SD_PLL_2;                      /* addr: 0x00000358 */
  ca_uint32_t                              rsrvd215[3];
  GLOBAL_SD_PLL_3_t                        SD_PLL_3;                      /* addr: 0x0000035c */
  ca_uint32_t                              rsrvd216[3];
  GLOBAL_SD_PLL_4_t                        SD_PLL_4;                      /* addr: 0x00000360 */
  ca_uint32_t                              rsrvd217[3];
  GLOBAL_LDO_SD3_t                         LDO_SD3;                       /* addr: 0x00000364 */
  ca_uint32_t                              rsrvd218[3];
  GLOBAL_U2PHY_STS_SLB_t                   U2PHY_STS_SLB;                 /* addr: 0x00000368 */
  ca_uint32_t                              rsrvd219[3];
  GLOBAL_PHY_ISO_POWER_CTRL_t              PHY_ISO_POWER_CTRL;            /* addr: 0x0000036c */
  ca_uint32_t                              rsrvd220[3];
  GLOBAL_GPI_STATUS4_t                     GPI_STATUS4;                   /* addr: 0x00000370 */
  ca_uint32_t                              rsrvd221[3];
  GLOBAL_GPI_STATUS3_t                     GPI_STATUS3;                   /* addr: 0x00000374 */
  ca_uint32_t                              rsrvd222[3];
  GLOBAL_GPI_STATUS2_t                     GPI_STATUS2;                   /* addr: 0x00000378 */
  ca_uint32_t                              rsrvd223[3];
  GLOBAL_GPI_STATUS1_t                     GPI_STATUS1;                   /* addr: 0x0000037c */
  ca_uint32_t                              rsrvd224[3];
  GLOBAL_GPI_STATUS0_t                     GPI_STATUS0;                   /* addr: 0x00000380 */
  ca_uint32_t                              rsrvd225[3];
  GLOBAL_TH_PLL_t                          TH_PLL;                        /* addr: 0x00000384 */
  ca_uint32_t                              rsrvd226[3];
  GLOBAL_TH_PLL_0_t                        TH_PLL_0;                      /* addr: 0x00000388 */
  ca_uint32_t                              rsrvd227[3];
  GLOBAL_TH_PLL_1_t                        TH_PLL_1;                      /* addr: 0x0000038c */
  ca_uint32_t                              rsrvd228[3];
  GLOBAL_TH_PLL_2_t                        TH_PLL_2;                      /* addr: 0x00000390 */
  ca_uint32_t                              rsrvd229[3];
  GLOBAL_TH_PLL_3_t                        TH_PLL_3;                      /* addr: 0x00000394 */
  ca_uint32_t                              rsrvd230[3];
  GLOBAL_DDR_RESET_MODE_t                  DDR_RESET_MODE;                /* addr: 0x00000398 */
  ca_uint32_t                              rsrvd231[3];
  GLOBAL_RSVD_CONTROL7_t                   RSVD_CONTROL7;                 /* addr: 0x0000039c */
  ca_uint32_t                              rsrvd232[3];
  GLOBAL_RSVD_CONTROL6_t                   RSVD_CONTROL6;                 /* addr: 0x000003a0 */
  ca_uint32_t                              rsrvd233[3];
  GLOBAL_RSVD_CONTROL5_t                   RSVD_CONTROL5;                 /* addr: 0x000003a4 */
  ca_uint32_t                              rsrvd234[3];
  GLOBAL_RSVD_CONTROL4_t                   RSVD_CONTROL4;                 /* addr: 0x000003a8 */
  ca_uint32_t                              rsrvd235[3];
  GLOBAL_RSVD_CONTROL3_t                   RSVD_CONTROL3;                 /* addr: 0x000003ac */
  ca_uint32_t                              rsrvd236[3];
  GLOBAL_RSVD_CONTROL2_t                   RSVD_CONTROL2;                 /* addr: 0x000003b0 */
  ca_uint32_t                              rsrvd237[3];
  GLOBAL_RSVD_CONTROL1_t                   RSVD_CONTROL1;                 /* addr: 0x000003b4 */
  ca_uint32_t                              rsrvd238[3];
  GLOBAL_RSVD_CONTROL0_t                   RSVD_CONTROL0;                 /* addr: 0x000003b8 */
  ca_uint32_t                              rsrvd239[3];
  GLOBAL_RSVD_RESULTS3_t                   RSVD_RESULTS3;                 /* addr: 0x000003bc */
  ca_uint32_t                              rsrvd240[3];
  GLOBAL_RSVD_RESULTS2_t                   RSVD_RESULTS2;                 /* addr: 0x000003c0 */
  ca_uint32_t                              rsrvd241[3];
  GLOBAL_RSVD_RESULTS1_t                   RSVD_RESULTS1;                 /* addr: 0x000003c4 */
  ca_uint32_t                              rsrvd242[3];
  GLOBAL_RSVD_RESULTS0_t                   RSVD_RESULTS0;                 /* addr: 0x000003c8 */
  ca_uint32_t                              rsrvd243[3111];
  GLOBAL_CHIP_ID_CTRL_t                    CHIP_ID_CTRL;                  /* addr: 0x00000ff0 */
  ca_uint32_t                              rsrvd244[3];
  GLOBAL_CHIP_ID_t                         CHIP_ID;                       /* addr: 0x00000ff4 */
  ca_uint32_t                              rsrvd245[3];
  GLOBAL_FPGA_OPTION_t                     FPGA_OPTION;                   /* addr: 0x00000ff8 */
  ca_uint32_t                              rsrvd246[3];
  GLOBAL_FPGA_DATE_t                       FPGA_DATE;                     /* addr: 0x00000ffc */
} APB2_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * SDPLL
 */



/*
 * CORTEX_TRACE
 */



/*
 * CAPSRAM
 */

#define CAPSRAM_TZCONTROL                        0xf4322000
#define CAPSRAM_TZCONTROL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SEGSECURE            : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_TZCONTROL_t;
#endif /* !__ASSEMBLER__ */


#define CAPSRAM_INIT                             0xf4322004
#define CAPSRAM_INIT_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INIT                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_INIT_t;
#endif /* !__ASSEMBLER__ */


#define CAPSRAM_INITRANGE                        0xf4322008
#define CAPSRAM_INITRANGE_dft                    0x11ff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MIN                  : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t MAX                  : 13 ; /* bits 28:16 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_INITRANGE_t;
#endif /* !__ASSEMBLER__ */


#define CAPSRAM_SRAMBAD0                         0xf432200c
#define CAPSRAM_SRAMBAD0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_SRAMBAD0_t;
#endif /* !__ASSEMBLER__ */


#define CAPSRAM_SRAMBAD1                         0xf4322010
#define CAPSRAM_SRAMBAD1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BURST                :  2 ; /* bits 1:0 */
    ca_uint32_t SIZE                 :  3 ; /* bits 4:2 */
    ca_uint32_t PROT                 :  3 ; /* bits 7:5 */
    ca_uint32_t LEN                  :  4 ; /* bits 11:8 */
    ca_uint32_t ID                   : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_SRAMBAD1_t;
#endif /* !__ASSEMBLER__ */


#define CAPSRAM_SRAMBAD2                         0xf4322014
#define CAPSRAM_SRAMBAD2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VALID                :  1 ; /* bits 0:0 */
    ca_uint32_t INST                 :  3 ; /* bits 3:1 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t VEC                  :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_SRAMBAD2_t;
#endif /* !__ASSEMBLER__ */


#define CAPSRAM_SRAM_TEST_CONTROL_0              0xf4322018
#define CAPSRAM_SRAM_TEST_CONTROL_0_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rm1                  :  2 ; /* bits 9:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 10:10 */
    ca_uint32_t test1                :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rm2                  :  2 ; /* bits 17:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 18:18 */
    ca_uint32_t test2                :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t rm3                  :  2 ; /* bits 25:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 26:26 */
    ca_uint32_t test3                :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} CAPSRAM_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CAPSRAM */
#ifndef __ASSEMBLER__
typedef struct {
  CAPSRAM_TZCONTROL_t                      TZCONTROL;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  CAPSRAM_INIT_t                           INIT;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  CAPSRAM_INITRANGE_t                      INITRANGE;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  CAPSRAM_SRAMBAD0_t                       SRAMBAD0;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  CAPSRAM_SRAMBAD1_t                       SRAMBAD1;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  CAPSRAM_SRAMBAD2_t                       SRAMBAD2;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  CAPSRAM_SRAM_TEST_CONTROL_0_t            SRAM_TEST_CONTROL_0;           /* addr: 0x00000018 */
} APB2_CAPSRAM_t;
#endif /* !__ASSEMBLER__ */


/*
 * CCI
 */

#define CCIMISC_ADDRMAP                          0xf4323000
#define CCIMISC_ADDRMAP_dft                      0x00000209

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDRMAP0             :  3 ; /* bits 2:0 */
    ca_uint32_t ADDRMAP1             :  3 ; /* bits 5:3 */
    ca_uint32_t ADDRMAP2             :  3 ; /* bits 8:6 */
    ca_uint32_t ADDRMAP3             :  3 ; /* bits 11:9 */
    ca_uint32_t ADDRMAP4             :  3 ; /* bits 14:12 */
    ca_uint32_t ADDRMAP5             :  3 ; /* bits 17:15 */
    ca_uint32_t ADDRMAP6             :  3 ; /* bits 20:18 */
    ca_uint32_t ADDRMAP7             :  3 ; /* bits 23:21 */
    ca_uint32_t ADDRMAP8             :  3 ; /* bits 26:24 */
    ca_uint32_t ADDRMAP9             :  3 ; /* bits 29:27 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} CCIMISC_ADDRMAP_t;
#endif /* !__ASSEMBLER__ */


#define CCIMISC_SRAM_TEST_CONTROL_0              0xf4323004
#define CCIMISC_SRAM_TEST_CONTROL_0_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rm1                  :  2 ; /* bits 9:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 10:10 */
    ca_uint32_t test1                :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rm2                  :  2 ; /* bits 17:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 18:18 */
    ca_uint32_t test2                :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t rm3                  :  2 ; /* bits 25:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 26:26 */
    ca_uint32_t test3                :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} CCIMISC_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define CCIMISC_SRAM_TEST_CONTROL_1              0xf4323008
#define CCIMISC_SRAM_TEST_CONTROL_1_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rm1                  :  2 ; /* bits 9:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 10:10 */
    ca_uint32_t test1                :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rm2                  :  2 ; /* bits 17:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 18:18 */
    ca_uint32_t test2                :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t rm3                  :  2 ; /* bits 25:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 26:26 */
    ca_uint32_t test3                :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} CCIMISC_SRAM_TEST_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define CCIMISC_SRAM_TEST_CONTROL_2              0xf432300c
#define CCIMISC_SRAM_TEST_CONTROL_2_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rm1                  :  2 ; /* bits 9:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 10:10 */
    ca_uint32_t test1                :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t rm2                  :  2 ; /* bits 17:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 18:18 */
    ca_uint32_t test2                :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t rm3                  :  2 ; /* bits 25:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 26:26 */
    ca_uint32_t test3                :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} CCIMISC_SRAM_TEST_CONTROL_2_t;
#endif /* !__ASSEMBLER__ */


#define CCIMISC_SRAM_LS_CONTROL                  0xf4323010
#define CCIMISC_SRAM_LS_CONTROL_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpe_sramls           :  2 ; /* bits 1:0 */
    ca_uint32_t cci550_sramls        :  8 ; /* bits 9:2 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} CCIMISC_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define CCIMISC_CCI_MISC                         0xf4323014
#define CCIMISC_CCI_MISC_dft                     0x00005f8f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cci550_dbgen         :  1 ; /* bits 0:0 */
    ca_uint32_t cci550_niden         :  1 ; /* bits 1:1 */
    ca_uint32_t cci550_spiden        :  1 ; /* bits 2:2 */
    ca_uint32_t cci550_spniden       :  1 ; /* bits 3:3 */
    ca_uint32_t cci550_acchannelens0 :  1 ; /* bits 4:4 */
    ca_uint32_t cci550_acchannelens1 :  1 ; /* bits 5:5 */
    ca_uint32_t cci550_acchannelens2 :  2 ; /* bits 7:6 */
    ca_uint32_t cci550_qosoverride   :  3 ; /* bits 10:8 */
    ca_uint32_t cci550_owo           :  3 ; /* bits 13:11 */
    ca_uint32_t cci550_midepsi       :  2 ; /* bits 15:14 */
    ca_uint32_t cci550_burst_split_all :  2 ; /* bits 17:16 */
    ca_uint32_t force_cci550_reset   :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} CCIMISC_CCI_MISC_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CCI */
#ifndef __ASSEMBLER__
typedef struct {
  CCIMISC_ADDRMAP_t                        ADDRMAP;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  CCIMISC_SRAM_TEST_CONTROL_0_t            SRAM_TEST_CONTROL_0;           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  CCIMISC_SRAM_TEST_CONTROL_1_t            SRAM_TEST_CONTROL_1;           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  CCIMISC_SRAM_TEST_CONTROL_2_t            SRAM_TEST_CONTROL_2;           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  CCIMISC_SRAM_LS_CONTROL_t                SRAM_LS_CONTROL;               /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  CCIMISC_CCI_MISC_t                       CCI_MISC;                      /* addr: 0x00000014 */
} APB2_CCI_t;
#endif /* !__ASSEMBLER__ */


/*
 * FLASH
 */

#define FLASH_ID                                 0xf4324000
#define FLASH_ID_dft                             0x00000101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flashRevID           :  8 ; /* bits 7:0 */
    ca_uint32_t flashDevID           : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_ID_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_TIMEOUT                            0xf4324004
#define FLASH_TIMEOUT_dft                        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t timeout_load         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_STATUS                             0xf4324008
#define FLASH_STATUS_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sState               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_TYPE                               0xf432400c
#define FLASH_TYPE_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t flashSize            :  2 ; /* bits 10:9 */
    ca_uint32_t flashWidth           :  1 ; /* bits 11:11 */
    ca_uint32_t flashType            :  3 ; /* bits 14:12 */
    ca_uint32_t flashPin             :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FLASH_ACCESS_START                 0xf4324010
#define FLASH_FLASH_ACCESS_START_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sflashRegReq         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sflashFifoReq        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t sflashRegCmd         :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd4               :  6 ;
    ca_uint32_t sflashbusy           :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd5               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FLASH_ACCESS_START_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FLASH_INTERRUPT                    0xf4324014
#define FLASH_FLASH_INTERRUPT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t regIrq               :  1 ; /* bits 0:0 */
    ca_uint32_t fifoIrq              :  1 ; /* bits 1:1 */
    ca_uint32_t f_addr_err           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FLASH_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FLASH_MASK                         0xf4324018
#define FLASH_FLASH_MASK_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flashRegIrqMask      :  1 ; /* bits 0:0 */
    ca_uint32_t fifoIrqMask          :  1 ; /* bits 1:1 */
    ca_uint32_t f_addr_IrqMask       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FLASH_MASK_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FIFO_CONTROL                       0xf432401c
#define FLASH_FIFO_CONTROL_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fifoCmd              :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t fifoDbgSel           :  4 ; /* bits 7:4 */
    ca_uint32_t fifoClear            :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 15 ;
    ca_uint32_t fifoRDTH             :  2 ; /* bits 25:24 */
    ca_uint32_t fifoWRTH             :  2 ; /* bits 27:26 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FIFO_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FIFO_STATUS                        0xf4324020
#define FLASH_FIFO_STATUS_dft                    0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t f_state              :  2 ; /* bits 1:0 */
    ca_uint32_t f_empty              :  1 ; /* bits 2:2 */
    ca_uint32_t f_full               :  1 ; /* bits 3:3 */
    ca_uint32_t f_ptr_rd             :  5 ; /* bits 8:4 */
    ca_uint32_t f_ptr_wr             :  5 ; /* bits 13:9 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t f_addr_count         :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FIFO_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FIFO_ADDRESS                       0xf4324024
#define FLASH_FIFO_ADDRESS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t f_AXADDR             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FIFO_ADDRESS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FIFO_MATCH_ADDRESS                 0xf4324028
#define FLASH_FIFO_MATCH_ADDRESS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t f_AXADDR_compare     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FIFO_MATCH_ADDRESS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_FIFO_DATA                          0xf432402c
#define FLASH_FIFO_DATA_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t f_ebuf_mem1          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_FIFO_DATA_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_SF_ACCESS                          0xf4324030
#define FLASH_SF_ACCESS_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sflashOpCode         :  8 ; /* bits 7:0 */
    ca_uint32_t sflashAcCode         :  4 ; /* bits 11:8 */
    ca_uint32_t sflashForceTerm      :  1 ; /* bits 12:12 */
    ca_uint32_t sflashForceBurst     :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sflashCnMode         :  1 ; /* bits 15:15 */
    ca_uint32_t sflashCeAlt          :  1 ; /* bits 16:16 */
    ca_uint32_t sflashHSRd           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t sflashMData          :  1 ; /* bits 24:24 */
    ca_uint32_t sflashMAddr          :  1 ; /* bits 25:25 */
    ca_uint32_t sflashMCmd           :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sflashDDR            :  2 ; /* bits 29:28 */
    ca_uint32_t sflashMIO            :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_SF_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_SF_EXT_ACCESS                      0xf4324034
#define FLASH_SF_EXT_ACCESS_dft                  0x3fffff00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sflashOpCode         :  8 ; /* bits 7:0 */
    ca_uint32_t sflashDataCount      : 13 ; /* bits 20:8 */
    ca_uint32_t sflashAddrCount      :  3 ; /* bits 23:21 */
    ca_uint32_t sflashDummyCount     :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sflashDirRdCmdEn     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_SF_EXT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_SF_ADDRESS                         0xf4324038
#define FLASH_SF_ADDRESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sflashRegAddr        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_SF_ADDRESS_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_SF_DATA                            0xf432403c
#define FLASH_SF_DATA_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sflashRegWData       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_SF_DATA_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_SF_TIMING                          0xf4324040
#define FLASH_SF_TIMING_dft                      0x10373737

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sflashIdleTime       :  8 ; /* bits 7:0 */
    ca_uint32_t sflashHoldTime       :  8 ; /* bits 15:8 */
    ca_uint32_t sflashSetupTime      :  8 ; /* bits 23:16 */
    ca_uint32_t sflashClkWidth       :  4 ; /* bits 27:24 */
    ca_uint32_t sflashPipe_lat       :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_SF_TIMING_t;
#endif /* !__ASSEMBLER__ */


#define FLASH_SF_PREDICTOR                       0xf4324044
#define FLASH_SF_PREDICTOR_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t predictor            :  8 ; /* bits 7:0 */
    ca_uint32_t flashbpwstrob        :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t en_predictor         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} FLASH_SF_PREDICTOR_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FLASH */
#ifndef __ASSEMBLER__
typedef struct {
  FLASH_ID_t                               ID;                            /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  FLASH_TIMEOUT_t                          TIMEOUT;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  FLASH_STATUS_t                           STATUS;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  FLASH_TYPE_t                             TYPE;                          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  FLASH_FLASH_ACCESS_START_t               FLASH_ACCESS_START;            /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  FLASH_FLASH_INTERRUPT_t                  FLASH_INTERRUPT;               /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  FLASH_FLASH_MASK_t                       FLASH_MASK;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  FLASH_FIFO_CONTROL_t                     FIFO_CONTROL;                  /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  FLASH_FIFO_STATUS_t                      FIFO_STATUS;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  FLASH_FIFO_ADDRESS_t                     FIFO_ADDRESS;                  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  FLASH_FIFO_MATCH_ADDRESS_t               FIFO_MATCH_ADDRESS;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  FLASH_FIFO_DATA_t                        FIFO_DATA;                     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  FLASH_SF_ACCESS_t                        SF_ACCESS;                     /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  FLASH_SF_EXT_ACCESS_t                    SF_EXT_ACCESS;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  FLASH_SF_ADDRESS_t                       SF_ADDRESS;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  FLASH_SF_DATA_t                          SF_DATA;                       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  FLASH_SF_TIMING_t                        SF_TIMING;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  FLASH_SF_PREDICTOR_t                     SF_PREDICTOR;                  /* addr: 0x00000044 */
} APB2_FLASH_t;
#endif /* !__ASSEMBLER__ */


/*
 * PCIE0_X2
 */

/*
 * PCIE_X2_GLBL
 */

#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_0        0xf4325000
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0 0xf4325004
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_1        0xf4325008
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1 0xf432500c
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t elastic_buf_ovrflow_en :  1 ; /* bits 18:18 */
    ca_uint32_t elastic_buf_underflow_en :  1 ; /* bits 19:19 */
    ca_uint32_t rx_dec_10b_8b_err_cnt_roll_ovr_en :  1 ; /* bits 20:20 */
    ca_uint32_t rx_dis_par_err_cnt_roll_ovr_ovr_en :  1 ; /* bits 21:21 */
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO 0xf4325010
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_rd_resp_bad_eot  :  1 ; /* bits 0:0 */
    ca_uint32_t EP_value             :  1 ; /* bits 1:1 */
    ca_uint32_t TD_value             :  1 ; /* bits 2:2 */
    ca_uint32_t axi_rd_resp_succ     :  2 ; /* bits 4:3 */
    ca_uint32_t axi_wr_resp_succ     :  2 ; /* bits 6:5 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP 0xf4325014
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mstr_csysreq         :  1 ; /* bits 2:2 */
    ca_uint32_t slv_csysreq          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_CORE_CONFIG_REG    0xf4325018
#define PCIE0_X2_PCIE_X2_GLBL_CORE_CONFIG_REG_dft 0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_ltssm_enable     :  1 ; /* bits 0:0 */
    ca_uint32_t app_init_rst         :  1 ; /* bits 1:1 */
    ca_uint32_t diag_ctrl_bus        :  3 ; /* bits 4:2 */
    ca_uint32_t axi_ur_err_mask      :  1 ; /* bits 5:5 */
    ca_uint32_t link_down_rst        :  1 ; /* bits 6:6 */
    ca_uint32_t send_clk_req_n       :  1 ; /* bits 7:7 */
    ca_uint32_t app_xfer_pending     :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t tx_lane_flip_en      :  1 ; /* bits 30:30 */
    ca_uint32_t rx_lane_flip_en      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_CORE_CONFIG_REG_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS 0xf432501c
#define PCIE0_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pm_xtlh_block_tlp    :  1 ; /* bits 0:0 */
    ca_uint32_t pm_curnt_state       :  3 ; /* bits 3:1 */
    ca_uint32_t smlh_ltssm_state     :  6 ; /* bits 9:4 */
    ca_uint32_t pm_status            :  1 ; /* bits 10:10 */
    ca_uint32_t pm_dstate            :  3 ; /* bits 13:11 */
    ca_uint32_t aux_pm_en            :  1 ; /* bits 14:14 */
    ca_uint32_t pm_pme_en            :  1 ; /* bits 15:15 */
    ca_uint32_t clk_req_n            :  1 ; /* bits 16:16 */
    ca_uint32_t link_req_rst_not     :  1 ; /* bits 17:17 */
    ca_uint32_t rdlh_link_up         :  1 ; /* bits 18:18 */
    ca_uint32_t rtlh_rfc_upd         :  1 ; /* bits 19:19 */
    ca_uint32_t mstr_csysack         :  1 ; /* bits 20:20 */
    ca_uint32_t slv_csysack          :  1 ; /* bits 21:21 */
    ca_uint32_t mstr_cactive         :  1 ; /* bits 22:22 */
    ca_uint32_t slv_cactive          :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RTLH_INFO          0xf4325020
#define PCIE0_X2_PCIE_X2_GLBL_RTLH_INFO_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rtlh_rfc_data        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RTLH_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO 0xf4325024
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_byte_offset :  3 ; /* bits 2:0 */
    ca_uint32_t mstr_awmisc_info_response_sts :  3 ; /* bits 5:3 */
    ca_uint32_t mstr_awmisc_info_bar_num :  3 ; /* bits 8:6 */
    ca_uint32_t mstr_awmisc_info_tlp_io :  1 ; /* bits 9:9 */
    ca_uint32_t mstr_awmisc_info_tlp_rom :  1 ; /* bits 10:10 */
    ca_uint32_t mstr_awmisc_info_tlp_fun_num :  3 ; /* bits 13:11 */
    ca_uint32_t mstr_awmisc_info_tlp_attr :  2 ; /* bits 15:14 */
    ca_uint32_t mstr_awmisc_info_tlp_tc :  3 ; /* bits 18:16 */
    ca_uint32_t mstr_awmisc_info_tlp_type :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO 0xf4325028
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_armisc_info_byte_offset :  3 ; /* bits 2:0 */
    ca_uint32_t mstr_armisc_info_response_sts :  3 ; /* bits 5:3 */
    ca_uint32_t mstr_armisc_info_bar_num :  3 ; /* bits 8:6 */
    ca_uint32_t mstr_armisc_info_tlp_io :  1 ; /* bits 9:9 */
    ca_uint32_t mstr_armisc_info_tlp_rom :  1 ; /* bits 10:10 */
    ca_uint32_t mstr_armisc_info_tlp_fun_num :  3 ; /* bits 13:11 */
    ca_uint32_t mstr_armisc_info_tlp_attr :  2 ; /* bits 15:14 */
    ca_uint32_t mstr_armisc_info_tlp_tc :  3 ; /* bits 18:16 */
    ca_uint32_t mstr_armisc_info_tlp_type :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO 0xf432502c
#define PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t slv_bmisc_info_trans_td :  1 ; /* bits 1:1 */
    ca_uint32_t slv_bmisc_info_trans_tc :  3 ; /* bits 4:2 */
    ca_uint32_t slv_bmisc_info_trans_attr :  2 ; /* bits 6:5 */
    ca_uint32_t slv_bmisc_info_trans_sts :  3 ; /* bits 9:7 */
    ca_uint32_t slv_bmisc_info_non_posted :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT 0xf4325030
#define PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t slv_rmisc_info_trans_td :  1 ; /* bits 1:1 */
    ca_uint32_t slv_rmisc_info_trans_tc :  3 ; /* bits 4:2 */
    ca_uint32_t slv_rmisc_info_trans_attr :  2 ; /* bits 6:5 */
    ca_uint32_t slv_rmisc_info_trans_sts :  3 ; /* bits 9:7 */
    ca_uint32_t slv_rmisc_info_non_posted :  1 ; /* bits 10:10 */
    ca_uint32_t radm_cpl_timeout     :  1 ; /* bits 11:11 */
    ca_uint32_t radm_timeout_cpl_len : 12 ; /* bits 23:12 */
    ca_uint32_t radm_timeout_cpl_tag :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0  0xf4325034
#define PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1  0xf4325038
#define PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI 0xf432503c
#define PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_ei   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR 0xf4325040
#define PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_cfg_start_addr    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR 0xf4325044
#define PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_cfg_end_addr      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR 0xf4325048
#define PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR_dft 0xfff80000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rc_iatu_base_addr    : 13 ; /* bits 31:19 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS     0xf432504c
#define PCIE0_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_atu_bypass :  1 ; /* bits 0:0 */
    ca_uint32_t slv_armisc_info_atu_bypass :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1 0xf4325050
#define PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_hdr_34dw1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0 0xf4325054
#define PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_hdr_34dw0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG 0xf4325058
#define PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_p_tag :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1 0xf432505c
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_hdr_34dw1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0 0xf4325060
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_hdr_34dw0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO 0xf4325064
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_last_dcmp_tlp :  1 ; /* bits 0:0 */
    ca_uint32_t mstr_armisc_info_last_dcmp_tlp :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT 0xf4325068
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inta_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT 0xf432506c
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inta_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT 0xf4325070
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intb_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT 0xf4325074
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intb_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT 0xf4325078
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intc_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT 0xf432507c
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intc_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT 0xf4325080
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intd_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT 0xf4325084
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intd_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT 0xf4325088
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hot_plug_int_cnt     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT 0xf432508c
#define PCIE0_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_ready_entr_l23   :  1 ; /* bits 0:0 */
    ca_uint32_t app_req_exit_l1      :  1 ; /* bits 1:1 */
    ca_uint32_t app_req_entr_l1      :  1 ; /* bits 2:2 */
    ca_uint32_t sys_aux_pwr_det      :  1 ; /* bits 3:3 */
    ca_uint32_t sys_pre_det_state    :  1 ; /* bits 4:4 */
    ca_uint32_t sys_atten_button_pressed :  1 ; /* bits 5:5 */
    ca_uint32_t sys_mrl_sensor_state :  1 ; /* bits 6:6 */
    ca_uint32_t sys_pwr_fault_det    :  1 ; /* bits 7:7 */
    ca_uint32_t sys_mrl_sensor_chged :  1 ; /* bits 8:8 */
    ca_uint32_t sys_pre_det_chged    :  1 ; /* bits 9:9 */
    ca_uint32_t sys_cmd_cpled_int    :  1 ; /* bits 10:10 */
    ca_uint32_t apps_pm_xmt_turnoff  :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_FATAL_ERR_CNT      0xf4325090
#define PCIE0_X2_PCIE_X2_GLBL_FATAL_ERR_CNT_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_fatal_err_cnt   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT  0xf4325094
#define PCIE0_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_non_fatal_err_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_CORR_ERR_CNT       0xf4325098
#define PCIE0_X2_PCIE_X2_GLBL_CORR_ERR_CNT_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_correct_err_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_CORR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB 0xf432509c
#define PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msi_addr_31_0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB 0xf43250a0
#define PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msi_addr_63_32       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT 0xf43250a4
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ts1_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT 0xf43250a8
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ts2_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT 0xf43250ac
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_skip_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT 0xf43250b0
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_elec_idle_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT 0xf43250b4
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_log_idle_sym :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT 0xf43250b8
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_dllp_0_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT 0xf43250bc
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_dllp_1_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT 0xf43250c0
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_tlp_0_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT 0xf43250c4
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_tlp_1_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT 0xf43250c8
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_lcrc_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT 0xf43250cc
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ecrc_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT 0xf43250d0
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_cxpl_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT 0xf43250d4
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_cxpl_ur_err  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT 0xf43250d8
#define PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_req_err_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT    0xf43250dc
#define PCIE0_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_dllp_cnt_incr     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT     0xf43250e0
#define PCIE0_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_tlp_cnt_incr      :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS 0xf43250e4
#define PCIE0_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arbar                :  2 ; /* bits 1:0 */
    ca_uint32_t ardomain             :  2 ; /* bits 3:2 */
    ca_uint32_t arqos                :  4 ; /* bits 7:4 */
    ca_uint32_t arsnoop              :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS 0xf43250e8
#define PCIE0_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awbar                :  2 ; /* bits 1:0 */
    ca_uint32_t awdomain             :  2 ; /* bits 3:2 */
    ca_uint32_t awqos                :  4 ; /* bits 7:4 */
    ca_uint32_t awsnoop              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS  0xf43250ec
#define PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               :  6 ; /* bits 5:0 */
    ca_uint32_t awuser               :  6 ; /* bits 11:6 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_SIG_0        0xf43250f0
#define PCIE0_X2_PCIE_X2_GLBL_DEBUG_SIG_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t brdg_slv_xfer_pending :  1 ; /* bits 0:0 */
    ca_uint32_t brdg_dbi_xfer_pending :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t radm_q_not_empty     :  1 ; /* bits 8:8 */
    ca_uint32_t radm_xfer_pending    :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DEBUG_SIG_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_VENUS_CTL_0        0xf43250f4
#define PCIE0_X2_PCIE_X2_GLBL_VENUS_CTL_0_dft    0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_clk_pm_en        :  1 ; /* bits 0:0 */
    ca_uint32_t reg_en_radm_clk_g    :  1 ; /* bits 1:1 */
    ca_uint32_t reg_slv_wmisc_info   :  1 ; /* bits 2:2 */
    ca_uint32_t phy_mac_rxdatavalid  :  2 ; /* bits 4:3 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_VENUS_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_VENUS_DBG_0        0xf43250f8
#define PCIE0_X2_PCIE_X2_GLBL_VENUS_DBG_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_idle            :  1 ; /* bits 0:0 */
    ca_uint32_t en_radm_clk_g        :  1 ; /* bits 1:1 */
    ca_uint32_t mstr_armisc_info_zeroread :  1 ; /* bits 2:2 */
    ca_uint32_t cfg_crs_sw_vis_en    :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_VENUS_DBG_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack 0xf43250fc
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err 0xf4325100
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err 0xf4325104
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err 0xf4325108
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err 0xf432510c
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err 0xf4325110
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err 0xf4325114
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err 0xf4325118
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err 0xf432511c
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err 0xf4325120
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err 0xf4325124
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err 0xf4325128
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout 0xf432512c
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow 0xf4325130
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err 0xf4325134
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur 0xf4325138
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca 0xf432513c
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca 0xf4325140
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur 0xf4325144
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err 0xf4325148
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err 0xf432514c
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned 0xf4325150
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned 0xf4325154
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor 0xf4325158
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf 0xf432515c
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f 0xf4325160
#define PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RM1                0xf4325164
#define PCIE0_X2_PCIE_X2_GLBL_RM1_dft            0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_1_sramtest     :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RM1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RM22               0xf4325168
#define PCIE0_X2_PCIE_X2_GLBL_RM22_dft           0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_2_sramtest2    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RM22_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RM21               0xf432516c
#define PCIE0_X2_PCIE_X2_GLBL_RM21_dft           0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_2_sramtest1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RM21_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RM20               0xf4325170
#define PCIE0_X2_PCIE_X2_GLBL_RM20_dft           0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_2_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RM20_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RM31               0xf4325174
#define PCIE0_X2_PCIE_X2_GLBL_RM31_dft           0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_3_sramtest1    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RM31_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_RM30               0xf4325178
#define PCIE0_X2_PCIE_X2_GLBL_RM30_dft           0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_3_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_RM30_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_LS                 0xf432517c
#define PCIE0_X2_PCIE_X2_GLBL_LS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_1_sramls       :  1 ; /* bits 0:0 */
    ca_uint32_t pcie0_2_sramls       :  9 ; /* bits 9:1 */
    ca_uint32_t pcie0_3_sramls       :  5 ; /* bits 14:10 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_LS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_2        0xf4325180
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_2_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2 0xf4325184
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_3        0xf4325188
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_3_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3 0xf432518c
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_4        0xf4325190
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_4_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4 0xf4325194
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_5        0xf4325198
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_5_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5 0xf432519c
#define PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0 0xf43251a0
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0 0xf43251a4
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1 0xf43251a8
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1 0xf43251ac
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2 0xf43251b0
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2 0xf43251b4
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3 0xf43251b8
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_3 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3 0xf43251bc
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_3 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4 0xf43251c0
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_4 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4 0xf43251c4
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_4 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5 0xf43251c8
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_5 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5 0xf43251cc
#define PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_5 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE_X2_GLBL */
#ifndef __ASSEMBLER__
typedef struct {
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_0_t      INTERRUPT_0;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0_t INTERRUPT_ENABLE_0;            /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_1_t      INTERRUPT_1;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1_t INTERRUPT_ENABLE_1;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_t AXI_MASTER_RESP_MISC_INFO;     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP; /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PCIE0_X2_PCIE_X2_GLBL_CORE_CONFIG_REG_t  CORE_CONFIG_REG;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PCIE0_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t PM_INFO_RESET_VOLT_LOW_PWR_STATUS; /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PCIE0_X2_PCIE_X2_GLBL_RTLH_INFO_t        RTLH_INFO;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_t AXI_MASTER_WR_MISC_INFO;       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_t AXI_MASTER_RD_MISC_INFO;       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t AXI_SLAVE_BRESP_MISC_INFO;     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT; /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_t CXPL_DEBUG_INFO_0;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_t CXPL_DEBUG_INFO_1;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PCIE0_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_t CXPL_DEBUG_INFO_EI;            /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_t PCIE_CONTR_CFG_START_ADDR;     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_t PCIE_CONTR_CFG_END_ADDR;       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PCIE0_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR_t PCIE_CONTR_IATU_BASE_ADDR;     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS_t   AXI_ATU_BYPASS;                /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t AXI_AWMISC_INFO_HDR_34DW1;     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t AXI_AWMISC_INFO_HDR_34DW0;     /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_t AXI_AWMISC_INFO_P_TAG;         /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t AXI_MSTR_AWMISC_INFO_HDR_34DW1; /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t AXI_MSTR_AWMISC_INFO_HDR_34DW0; /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_t AXI_MSTR_DCMP_INFO;            /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t DEBUG_INTA_ASSERT_INT_CNT;     /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t DEBUG_INTA_DE_ASSERT_INT_CNT;  /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t DEBUG_INTB_ASSERT_INT_CNT;     /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t DEBUG_INTB_DE_ASSERT_INT_CNT;  /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t DEBUG_INTC_ASSERT_INT_CNT;     /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t DEBUG_INTC_DE_ASSERT_INT_CNT;  /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t DEBUG_INTD_ASSERT_INT_CNT;     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t DEBUG_INTD_DE_ASSERT_INT_CNT;  /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_t DEBUG_HOT_PLUG_INT_CNT;        /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  PCIE0_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t ELCTRO_MECH_POWER_MANAGEMENT;  /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  PCIE0_X2_PCIE_X2_GLBL_FATAL_ERR_CNT_t    FATAL_ERR_CNT;                 /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  PCIE0_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT_t NON_FATAL_ERR_CNT;             /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  PCIE0_X2_PCIE_X2_GLBL_CORR_ERR_CNT_t     CORR_ERR_CNT;                  /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t MSI_TARGET_ADDRESS_31_0_LSB;   /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t MSI_TARGET_ADDRESS_63_32_MSB;  /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t RX_RCVD_TS1_ORDER_SET_CNT;     /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t RX_RCVD_TS2_ORDER_SET_CNT;     /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t RX_RCVD_SKIP_ORDER_SET_CNT;    /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t RX_RCVD_ELEC_IDLE_ORDER_SET_CNT; /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t RX_RCVD_LOG_IDLE_SYMB_CNT;     /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_t RX_RCVD_DLLP_0_PKT_CNT;        /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_t RX_RCVD_DLLP_1_PKT_CNT;        /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_t RX_RCVD_TLP_0_PKT_CNT;         /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_t RX_RCVD_TLP_1_PKT_CNT;         /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_t RX_RCVD_LCRC_ERR_CNT;          /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_t RX_RCVD_ECRC_ERR_CNT;          /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_t RX_RCVD_CXPL_ERR_CNT;          /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t RX_RCVD_CXPL_UR_ERR_CNT;       /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  PCIE0_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_t RX_RCVD_REQ_ERR_CNT;           /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  PCIE0_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT_t  TX_DLLP_PKT_CNT;               /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  PCIE0_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT_t   TX_TLP_PKT_CNT;                /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_t AXI_READ_SLV_SETTINGS;         /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_t AXI_WRITE_SLV_SETTINGS;        /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  PCIE0_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS_t AXI_MSTR_SETTINGS;             /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  PCIE0_X2_PCIE_X2_GLBL_DEBUG_SIG_0_t      DEBUG_SIG_0;                   /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  PCIE0_X2_PCIE_X2_GLBL_VENUS_CTL_0_t      VENUS_CTL_0;                   /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  PCIE0_X2_PCIE_X2_GLBL_VENUS_DBG_0_t      VENUS_DBG_0;                   /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_t DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack; /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_t DIAG_CNT_CXPL_rmlh_rdlh_pkt_err; /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_t DIAG_CNT_CXPL_rmlh_deskew_alignment_err; /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_t DIAG_CNT_CXPL_smlh_ts_rcv_err; /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_t DIAG_CNT_CDM_xdlh_replay_timeout_err; /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_t DIAG_CNT_CDM_xdlh_replay_num_rlover_err; /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_t DIAG_CNT_CDM_rdlh_bad_dllp_err; /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_t DIAG_CNT_CDM_rdlh_bad_tlp_err; /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err_t DIAG_CNT_CDM_rdlh_prot_err;    /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_t DIAG_CNT_CDM_rtlh_fc_prot_err; /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_t DIAG_CNT_CDM_rmlh_rcvd_err;    /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_t DIAG_CNT_CDM_int_xadm_fc_prot_err; /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_t DIAG_CNT_CDM_radm_cpl_timeout; /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow_t DIAG_CNT_CDM_radm_qoverflow;   /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_t DIAG_CNT_CDM_diag_radm_unexp_cpl_err; /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur; /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca; /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_t DIAG_CNT_CDM_diag_radm_rcvd_req_ca; /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_t DIAG_CNT_CDM_diag_radm_rcvd_req_ur; /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_t DIAG_CNT_CDM_diag_radm_ecrc_err; /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_t DIAG_CNT_CDM_diag_radm_mlf_tlp_err; /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned; /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_t DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned; /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_t DIAG_CNT_CDM_cfg_sys_err_rc_cor; /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_t DIAG_CNT_CDM_cfg_sys_err_rc_nf; /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  PCIE0_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_t DIAG_CNT_CDM_cfg_sys_err_rc_f; /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  PCIE0_X2_PCIE_X2_GLBL_RM1_t              RM1;                           /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  PCIE0_X2_PCIE_X2_GLBL_RM22_t             RM22;                          /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  PCIE0_X2_PCIE_X2_GLBL_RM21_t             RM21;                          /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  PCIE0_X2_PCIE_X2_GLBL_RM20_t             RM20;                          /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  PCIE0_X2_PCIE_X2_GLBL_RM31_t             RM31;                          /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  PCIE0_X2_PCIE_X2_GLBL_RM30_t             RM30;                          /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  PCIE0_X2_PCIE_X2_GLBL_LS_t               LS;                            /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_2_t      INTERRUPT_2;                   /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2_t INTERRUPT_ENABLE_2;            /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_3_t      INTERRUPT_3;                   /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3_t INTERRUPT_ENABLE_3;            /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_4_t      INTERRUPT_4;                   /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4_t INTERRUPT_ENABLE_4;            /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_5_t      INTERRUPT_5;                   /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  PCIE0_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5_t INTERRUPT_ENABLE_5;            /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0_t MSI_INTERRUPT_STATUS_0;        /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0_t MSI_INTERRUPT_ENABLE_0;        /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1_t MSI_INTERRUPT_STATUS_1;        /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1_t MSI_INTERRUPT_ENABLE_1;        /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2_t MSI_INTERRUPT_STATUS_2;        /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2_t MSI_INTERRUPT_ENABLE_2;        /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3_t MSI_INTERRUPT_STATUS_3;        /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3_t MSI_INTERRUPT_ENABLE_3;        /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4_t MSI_INTERRUPT_STATUS_4;        /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4_t MSI_INTERRUPT_ENABLE_4;        /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5_t MSI_INTERRUPT_STATUS_5;        /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  PCIE0_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5_t MSI_INTERRUPT_ENABLE_5;        /* addr: 0x000001cc */
} APB2_PCIE0_X2_PCIE_X2_GLBL_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE0_X2 */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_PCIE0_X2_PCIE_X2_GLBL_t             PCIE_X2_GLBL;                  /* addr: 0x00000000 */
} APB2_PCIE0_X2_t;
#endif /* !__ASSEMBLER__ */


/*
 * PCIE1_X2
 */

/*
 * PCIE_X2_GLBL
 */

#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_0        0xf4326000
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0 0xf4326004
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_1        0xf4326008
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1 0xf432600c
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t elastic_buf_ovrflow_en :  1 ; /* bits 18:18 */
    ca_uint32_t elastic_buf_underflow_en :  1 ; /* bits 19:19 */
    ca_uint32_t rx_dec_10b_8b_err_cnt_roll_ovr_en :  1 ; /* bits 20:20 */
    ca_uint32_t rx_dis_par_err_cnt_roll_ovr_ovr_en :  1 ; /* bits 21:21 */
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO 0xf4326010
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_rd_resp_bad_eot  :  1 ; /* bits 0:0 */
    ca_uint32_t EP_value             :  1 ; /* bits 1:1 */
    ca_uint32_t TD_value             :  1 ; /* bits 2:2 */
    ca_uint32_t axi_rd_resp_succ     :  2 ; /* bits 4:3 */
    ca_uint32_t axi_wr_resp_succ     :  2 ; /* bits 6:5 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP 0xf4326014
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mstr_csysreq         :  1 ; /* bits 2:2 */
    ca_uint32_t slv_csysreq          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_CORE_CONFIG_REG    0xf4326018
#define PCIE1_X2_PCIE_X2_GLBL_CORE_CONFIG_REG_dft 0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_ltssm_enable     :  1 ; /* bits 0:0 */
    ca_uint32_t app_init_rst         :  1 ; /* bits 1:1 */
    ca_uint32_t diag_ctrl_bus        :  3 ; /* bits 4:2 */
    ca_uint32_t axi_ur_err_mask      :  1 ; /* bits 5:5 */
    ca_uint32_t link_down_rst        :  1 ; /* bits 6:6 */
    ca_uint32_t send_clk_req_n       :  1 ; /* bits 7:7 */
    ca_uint32_t app_xfer_pending     :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t tx_lane_flip_en      :  1 ; /* bits 30:30 */
    ca_uint32_t rx_lane_flip_en      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_CORE_CONFIG_REG_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS 0xf432601c
#define PCIE1_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pm_xtlh_block_tlp    :  1 ; /* bits 0:0 */
    ca_uint32_t pm_curnt_state       :  3 ; /* bits 3:1 */
    ca_uint32_t smlh_ltssm_state     :  6 ; /* bits 9:4 */
    ca_uint32_t pm_status            :  1 ; /* bits 10:10 */
    ca_uint32_t pm_dstate            :  3 ; /* bits 13:11 */
    ca_uint32_t aux_pm_en            :  1 ; /* bits 14:14 */
    ca_uint32_t pm_pme_en            :  1 ; /* bits 15:15 */
    ca_uint32_t clk_req_n            :  1 ; /* bits 16:16 */
    ca_uint32_t link_req_rst_not     :  1 ; /* bits 17:17 */
    ca_uint32_t rdlh_link_up         :  1 ; /* bits 18:18 */
    ca_uint32_t rtlh_rfc_upd         :  1 ; /* bits 19:19 */
    ca_uint32_t mstr_csysack         :  1 ; /* bits 20:20 */
    ca_uint32_t slv_csysack          :  1 ; /* bits 21:21 */
    ca_uint32_t mstr_cactive         :  1 ; /* bits 22:22 */
    ca_uint32_t slv_cactive          :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RTLH_INFO          0xf4326020
#define PCIE1_X2_PCIE_X2_GLBL_RTLH_INFO_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rtlh_rfc_data        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RTLH_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO 0xf4326024
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_byte_offset :  3 ; /* bits 2:0 */
    ca_uint32_t mstr_awmisc_info_response_sts :  3 ; /* bits 5:3 */
    ca_uint32_t mstr_awmisc_info_bar_num :  3 ; /* bits 8:6 */
    ca_uint32_t mstr_awmisc_info_tlp_io :  1 ; /* bits 9:9 */
    ca_uint32_t mstr_awmisc_info_tlp_rom :  1 ; /* bits 10:10 */
    ca_uint32_t mstr_awmisc_info_tlp_fun_num :  3 ; /* bits 13:11 */
    ca_uint32_t mstr_awmisc_info_tlp_attr :  2 ; /* bits 15:14 */
    ca_uint32_t mstr_awmisc_info_tlp_tc :  3 ; /* bits 18:16 */
    ca_uint32_t mstr_awmisc_info_tlp_type :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO 0xf4326028
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_armisc_info_byte_offset :  3 ; /* bits 2:0 */
    ca_uint32_t mstr_armisc_info_response_sts :  3 ; /* bits 5:3 */
    ca_uint32_t mstr_armisc_info_bar_num :  3 ; /* bits 8:6 */
    ca_uint32_t mstr_armisc_info_tlp_io :  1 ; /* bits 9:9 */
    ca_uint32_t mstr_armisc_info_tlp_rom :  1 ; /* bits 10:10 */
    ca_uint32_t mstr_armisc_info_tlp_fun_num :  3 ; /* bits 13:11 */
    ca_uint32_t mstr_armisc_info_tlp_attr :  2 ; /* bits 15:14 */
    ca_uint32_t mstr_armisc_info_tlp_tc :  3 ; /* bits 18:16 */
    ca_uint32_t mstr_armisc_info_tlp_type :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO 0xf432602c
#define PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t slv_bmisc_info_trans_td :  1 ; /* bits 1:1 */
    ca_uint32_t slv_bmisc_info_trans_tc :  3 ; /* bits 4:2 */
    ca_uint32_t slv_bmisc_info_trans_attr :  2 ; /* bits 6:5 */
    ca_uint32_t slv_bmisc_info_trans_sts :  3 ; /* bits 9:7 */
    ca_uint32_t slv_bmisc_info_non_posted :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT 0xf4326030
#define PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t slv_rmisc_info_trans_td :  1 ; /* bits 1:1 */
    ca_uint32_t slv_rmisc_info_trans_tc :  3 ; /* bits 4:2 */
    ca_uint32_t slv_rmisc_info_trans_attr :  2 ; /* bits 6:5 */
    ca_uint32_t slv_rmisc_info_trans_sts :  3 ; /* bits 9:7 */
    ca_uint32_t slv_rmisc_info_non_posted :  1 ; /* bits 10:10 */
    ca_uint32_t radm_cpl_timeout     :  1 ; /* bits 11:11 */
    ca_uint32_t radm_timeout_cpl_len : 12 ; /* bits 23:12 */
    ca_uint32_t radm_timeout_cpl_tag :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0  0xf4326034
#define PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1  0xf4326038
#define PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI 0xf432603c
#define PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_ei   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR 0xf4326040
#define PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_cfg_start_addr    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR 0xf4326044
#define PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_cfg_end_addr      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR 0xf4326048
#define PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR_dft 0xfff80000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rc_iatu_base_addr    : 13 ; /* bits 31:19 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS     0xf432604c
#define PCIE1_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_atu_bypass :  1 ; /* bits 0:0 */
    ca_uint32_t slv_armisc_info_atu_bypass :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1 0xf4326050
#define PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_hdr_34dw1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0 0xf4326054
#define PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_hdr_34dw0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG 0xf4326058
#define PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_p_tag :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1 0xf432605c
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_hdr_34dw1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0 0xf4326060
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_hdr_34dw0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO 0xf4326064
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_last_dcmp_tlp :  1 ; /* bits 0:0 */
    ca_uint32_t mstr_armisc_info_last_dcmp_tlp :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT 0xf4326068
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inta_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT 0xf432606c
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inta_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT 0xf4326070
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intb_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT 0xf4326074
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intb_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT 0xf4326078
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intc_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT 0xf432607c
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intc_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT 0xf4326080
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intd_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT 0xf4326084
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intd_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT 0xf4326088
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hot_plug_int_cnt     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT 0xf432608c
#define PCIE1_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_ready_entr_l23   :  1 ; /* bits 0:0 */
    ca_uint32_t app_req_exit_l1      :  1 ; /* bits 1:1 */
    ca_uint32_t app_req_entr_l1      :  1 ; /* bits 2:2 */
    ca_uint32_t sys_aux_pwr_det      :  1 ; /* bits 3:3 */
    ca_uint32_t sys_pre_det_state    :  1 ; /* bits 4:4 */
    ca_uint32_t sys_atten_button_pressed :  1 ; /* bits 5:5 */
    ca_uint32_t sys_mrl_sensor_state :  1 ; /* bits 6:6 */
    ca_uint32_t sys_pwr_fault_det    :  1 ; /* bits 7:7 */
    ca_uint32_t sys_mrl_sensor_chged :  1 ; /* bits 8:8 */
    ca_uint32_t sys_pre_det_chged    :  1 ; /* bits 9:9 */
    ca_uint32_t sys_cmd_cpled_int    :  1 ; /* bits 10:10 */
    ca_uint32_t apps_pm_xmt_turnoff  :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_FATAL_ERR_CNT      0xf4326090
#define PCIE1_X2_PCIE_X2_GLBL_FATAL_ERR_CNT_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_fatal_err_cnt   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT  0xf4326094
#define PCIE1_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_non_fatal_err_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_CORR_ERR_CNT       0xf4326098
#define PCIE1_X2_PCIE_X2_GLBL_CORR_ERR_CNT_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_correct_err_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_CORR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB 0xf432609c
#define PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msi_addr_31_0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB 0xf43260a0
#define PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msi_addr_63_32       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT 0xf43260a4
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ts1_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT 0xf43260a8
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ts2_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT 0xf43260ac
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_skip_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT 0xf43260b0
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_elec_idle_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT 0xf43260b4
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_log_idle_sym :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT 0xf43260b8
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_dllp_0_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT 0xf43260bc
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_dllp_1_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT 0xf43260c0
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_tlp_0_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT 0xf43260c4
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_tlp_1_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT 0xf43260c8
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_lcrc_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT 0xf43260cc
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ecrc_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT 0xf43260d0
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_cxpl_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT 0xf43260d4
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_cxpl_ur_err  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT 0xf43260d8
#define PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_req_err_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT    0xf43260dc
#define PCIE1_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_dllp_cnt_incr     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT     0xf43260e0
#define PCIE1_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_tlp_cnt_incr      :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS 0xf43260e4
#define PCIE1_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arbar                :  2 ; /* bits 1:0 */
    ca_uint32_t ardomain             :  2 ; /* bits 3:2 */
    ca_uint32_t arqos                :  4 ; /* bits 7:4 */
    ca_uint32_t arsnoop              :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS 0xf43260e8
#define PCIE1_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awbar                :  2 ; /* bits 1:0 */
    ca_uint32_t awdomain             :  2 ; /* bits 3:2 */
    ca_uint32_t awqos                :  4 ; /* bits 7:4 */
    ca_uint32_t awsnoop              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS  0xf43260ec
#define PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               :  6 ; /* bits 5:0 */
    ca_uint32_t awuser               :  6 ; /* bits 11:6 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_SIG_0        0xf43260f0
#define PCIE1_X2_PCIE_X2_GLBL_DEBUG_SIG_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t brdg_slv_xfer_pending :  1 ; /* bits 0:0 */
    ca_uint32_t brdg_dbi_xfer_pending :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t radm_q_not_empty     :  1 ; /* bits 8:8 */
    ca_uint32_t radm_xfer_pending    :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DEBUG_SIG_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_VENUS_CTL_0        0xf43260f4
#define PCIE1_X2_PCIE_X2_GLBL_VENUS_CTL_0_dft    0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_clk_pm_en        :  1 ; /* bits 0:0 */
    ca_uint32_t reg_en_radm_clk_g    :  1 ; /* bits 1:1 */
    ca_uint32_t reg_slv_wmisc_info   :  1 ; /* bits 2:2 */
    ca_uint32_t phy_mac_rxdatavalid  :  2 ; /* bits 4:3 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_VENUS_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_VENUS_DBG_0        0xf43260f8
#define PCIE1_X2_PCIE_X2_GLBL_VENUS_DBG_0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_idle            :  1 ; /* bits 0:0 */
    ca_uint32_t en_radm_clk_g        :  1 ; /* bits 1:1 */
    ca_uint32_t mstr_armisc_info_zeroread :  1 ; /* bits 2:2 */
    ca_uint32_t cfg_crs_sw_vis_en    :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_VENUS_DBG_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack 0xf43260fc
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err 0xf4326100
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err 0xf4326104
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err 0xf4326108
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err 0xf432610c
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err 0xf4326110
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err 0xf4326114
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err 0xf4326118
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err 0xf432611c
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err 0xf4326120
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err 0xf4326124
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err 0xf4326128
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout 0xf432612c
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow 0xf4326130
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err 0xf4326134
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur 0xf4326138
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca 0xf432613c
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca 0xf4326140
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur 0xf4326144
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err 0xf4326148
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err 0xf432614c
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned 0xf4326150
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned 0xf4326154
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor 0xf4326158
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf 0xf432615c
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f 0xf4326160
#define PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RM1                0xf4326164
#define PCIE1_X2_PCIE_X2_GLBL_RM1_dft            0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_1_sramtest     :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RM1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RM22               0xf4326168
#define PCIE1_X2_PCIE_X2_GLBL_RM22_dft           0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_2_sramtest2    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RM22_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RM21               0xf432616c
#define PCIE1_X2_PCIE_X2_GLBL_RM21_dft           0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_2_sramtest1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RM21_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RM20               0xf4326170
#define PCIE1_X2_PCIE_X2_GLBL_RM20_dft           0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_2_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RM20_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RM31               0xf4326174
#define PCIE1_X2_PCIE_X2_GLBL_RM31_dft           0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_3_sramtest1    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RM31_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_RM30               0xf4326178
#define PCIE1_X2_PCIE_X2_GLBL_RM30_dft           0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_3_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_RM30_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_LS                 0xf432617c
#define PCIE1_X2_PCIE_X2_GLBL_LS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_1_sramls       :  1 ; /* bits 0:0 */
    ca_uint32_t pcie0_2_sramls       :  9 ; /* bits 9:1 */
    ca_uint32_t pcie0_3_sramls       :  5 ; /* bits 14:10 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_LS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_2        0xf4326180
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_2_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2 0xf4326184
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_3        0xf4326188
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_3_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3 0xf432618c
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_4        0xf4326190
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_4_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4 0xf4326194
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_5        0xf4326198
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_5_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5 0xf432619c
#define PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0 0xf43261a0
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0 0xf43261a4
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1 0xf43261a8
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1 0xf43261ac
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2 0xf43261b0
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2 0xf43261b4
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3 0xf43261b8
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_3 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3 0xf43261bc
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_3 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4 0xf43261c0
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_4 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4 0xf43261c4
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_4 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5 0xf43261c8
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_5 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5 0xf43261cc
#define PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_5 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE_X2_GLBL */
#ifndef __ASSEMBLER__
typedef struct {
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_0_t      INTERRUPT_0;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_0_t INTERRUPT_ENABLE_0;            /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_1_t      INTERRUPT_1;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_1_t INTERRUPT_ENABLE_1;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_t AXI_MASTER_RESP_MISC_INFO;     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP; /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PCIE1_X2_PCIE_X2_GLBL_CORE_CONFIG_REG_t  CORE_CONFIG_REG;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PCIE1_X2_PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t PM_INFO_RESET_VOLT_LOW_PWR_STATUS; /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PCIE1_X2_PCIE_X2_GLBL_RTLH_INFO_t        RTLH_INFO;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_t AXI_MASTER_WR_MISC_INFO;       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_t AXI_MASTER_RD_MISC_INFO;       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t AXI_SLAVE_BRESP_MISC_INFO;     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT; /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_t CXPL_DEBUG_INFO_0;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_t CXPL_DEBUG_INFO_1;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PCIE1_X2_PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_t CXPL_DEBUG_INFO_EI;            /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_t PCIE_CONTR_CFG_START_ADDR;     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_t PCIE_CONTR_CFG_END_ADDR;       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PCIE1_X2_PCIE_X2_GLBL_PCIE_CONTR_IATU_BASE_ADDR_t PCIE_CONTR_IATU_BASE_ADDR;     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_ATU_BYPASS_t   AXI_ATU_BYPASS;                /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t AXI_AWMISC_INFO_HDR_34DW1;     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t AXI_AWMISC_INFO_HDR_34DW0;     /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_t AXI_AWMISC_INFO_P_TAG;         /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t AXI_MSTR_AWMISC_INFO_HDR_34DW1; /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t AXI_MSTR_AWMISC_INFO_HDR_34DW0; /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_t AXI_MSTR_DCMP_INFO;            /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t DEBUG_INTA_ASSERT_INT_CNT;     /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t DEBUG_INTA_DE_ASSERT_INT_CNT;  /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t DEBUG_INTB_ASSERT_INT_CNT;     /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t DEBUG_INTB_DE_ASSERT_INT_CNT;  /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t DEBUG_INTC_ASSERT_INT_CNT;     /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t DEBUG_INTC_DE_ASSERT_INT_CNT;  /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t DEBUG_INTD_ASSERT_INT_CNT;     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t DEBUG_INTD_DE_ASSERT_INT_CNT;  /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_t DEBUG_HOT_PLUG_INT_CNT;        /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  PCIE1_X2_PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t ELCTRO_MECH_POWER_MANAGEMENT;  /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  PCIE1_X2_PCIE_X2_GLBL_FATAL_ERR_CNT_t    FATAL_ERR_CNT;                 /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  PCIE1_X2_PCIE_X2_GLBL_NON_FATAL_ERR_CNT_t NON_FATAL_ERR_CNT;             /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  PCIE1_X2_PCIE_X2_GLBL_CORR_ERR_CNT_t     CORR_ERR_CNT;                  /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t MSI_TARGET_ADDRESS_31_0_LSB;   /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t MSI_TARGET_ADDRESS_63_32_MSB;  /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t RX_RCVD_TS1_ORDER_SET_CNT;     /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t RX_RCVD_TS2_ORDER_SET_CNT;     /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t RX_RCVD_SKIP_ORDER_SET_CNT;    /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t RX_RCVD_ELEC_IDLE_ORDER_SET_CNT; /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t RX_RCVD_LOG_IDLE_SYMB_CNT;     /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_t RX_RCVD_DLLP_0_PKT_CNT;        /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_t RX_RCVD_DLLP_1_PKT_CNT;        /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_t RX_RCVD_TLP_0_PKT_CNT;         /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_t RX_RCVD_TLP_1_PKT_CNT;         /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_t RX_RCVD_LCRC_ERR_CNT;          /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_t RX_RCVD_ECRC_ERR_CNT;          /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_t RX_RCVD_CXPL_ERR_CNT;          /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t RX_RCVD_CXPL_UR_ERR_CNT;       /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  PCIE1_X2_PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_t RX_RCVD_REQ_ERR_CNT;           /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  PCIE1_X2_PCIE_X2_GLBL_TX_DLLP_PKT_CNT_t  TX_DLLP_PKT_CNT;               /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  PCIE1_X2_PCIE_X2_GLBL_TX_TLP_PKT_CNT_t   TX_TLP_PKT_CNT;                /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_t AXI_READ_SLV_SETTINGS;         /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_t AXI_WRITE_SLV_SETTINGS;        /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  PCIE1_X2_PCIE_X2_GLBL_AXI_MSTR_SETTINGS_t AXI_MSTR_SETTINGS;             /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  PCIE1_X2_PCIE_X2_GLBL_DEBUG_SIG_0_t      DEBUG_SIG_0;                   /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  PCIE1_X2_PCIE_X2_GLBL_VENUS_CTL_0_t      VENUS_CTL_0;                   /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  PCIE1_X2_PCIE_X2_GLBL_VENUS_DBG_0_t      VENUS_DBG_0;                   /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_t DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack; /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_t DIAG_CNT_CXPL_rmlh_rdlh_pkt_err; /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_t DIAG_CNT_CXPL_rmlh_deskew_alignment_err; /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_t DIAG_CNT_CXPL_smlh_ts_rcv_err; /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_t DIAG_CNT_CDM_xdlh_replay_timeout_err; /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_t DIAG_CNT_CDM_xdlh_replay_num_rlover_err; /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_t DIAG_CNT_CDM_rdlh_bad_dllp_err; /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_t DIAG_CNT_CDM_rdlh_bad_tlp_err; /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rdlh_prot_err_t DIAG_CNT_CDM_rdlh_prot_err;    /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_t DIAG_CNT_CDM_rtlh_fc_prot_err; /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_t DIAG_CNT_CDM_rmlh_rcvd_err;    /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_t DIAG_CNT_CDM_int_xadm_fc_prot_err; /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_t DIAG_CNT_CDM_radm_cpl_timeout; /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_radm_qoverflow_t DIAG_CNT_CDM_radm_qoverflow;   /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_t DIAG_CNT_CDM_diag_radm_unexp_cpl_err; /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur; /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca; /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_t DIAG_CNT_CDM_diag_radm_rcvd_req_ca; /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_t DIAG_CNT_CDM_diag_radm_rcvd_req_ur; /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_t DIAG_CNT_CDM_diag_radm_ecrc_err; /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_t DIAG_CNT_CDM_diag_radm_mlf_tlp_err; /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned; /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_t DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned; /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_t DIAG_CNT_CDM_cfg_sys_err_rc_cor; /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_t DIAG_CNT_CDM_cfg_sys_err_rc_nf; /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  PCIE1_X2_PCIE_X2_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_t DIAG_CNT_CDM_cfg_sys_err_rc_f; /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  PCIE1_X2_PCIE_X2_GLBL_RM1_t              RM1;                           /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  PCIE1_X2_PCIE_X2_GLBL_RM22_t             RM22;                          /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  PCIE1_X2_PCIE_X2_GLBL_RM21_t             RM21;                          /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  PCIE1_X2_PCIE_X2_GLBL_RM20_t             RM20;                          /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  PCIE1_X2_PCIE_X2_GLBL_RM31_t             RM31;                          /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  PCIE1_X2_PCIE_X2_GLBL_RM30_t             RM30;                          /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  PCIE1_X2_PCIE_X2_GLBL_LS_t               LS;                            /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_2_t      INTERRUPT_2;                   /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_2_t INTERRUPT_ENABLE_2;            /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_3_t      INTERRUPT_3;                   /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_3_t INTERRUPT_ENABLE_3;            /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_4_t      INTERRUPT_4;                   /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_4_t INTERRUPT_ENABLE_4;            /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_5_t      INTERRUPT_5;                   /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  PCIE1_X2_PCIE_X2_GLBL_INTERRUPT_ENABLE_5_t INTERRUPT_ENABLE_5;            /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_0_t MSI_INTERRUPT_STATUS_0;        /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_0_t MSI_INTERRUPT_ENABLE_0;        /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_1_t MSI_INTERRUPT_STATUS_1;        /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_1_t MSI_INTERRUPT_ENABLE_1;        /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_2_t MSI_INTERRUPT_STATUS_2;        /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_2_t MSI_INTERRUPT_ENABLE_2;        /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_3_t MSI_INTERRUPT_STATUS_3;        /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_3_t MSI_INTERRUPT_ENABLE_3;        /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_4_t MSI_INTERRUPT_STATUS_4;        /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_4_t MSI_INTERRUPT_ENABLE_4;        /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_STATUS_5_t MSI_INTERRUPT_STATUS_5;        /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  PCIE1_X2_PCIE_X2_GLBL_MSI_INTERRUPT_ENABLE_5_t MSI_INTERRUPT_ENABLE_5;        /* addr: 0x000001cc */
} APB2_PCIE1_X2_PCIE_X2_GLBL_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE1_X2 */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_PCIE1_X2_PCIE_X2_GLBL_t             PCIE_X2_GLBL;                  /* addr: 0x00000000 */
} APB2_PCIE1_X2_t;
#endif /* !__ASSEMBLER__ */


/*
 * PCIE2_X1
 */

/*
 * PCIE_X1_GLBL
 */

#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_0 0xf4327000
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_0 0xf4327004
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_1 0xf4327008
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_1 0xf432700c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t elastic_buf_ovrflow_en :  1 ; /* bits 18:18 */
    ca_uint32_t elastic_buf_underflow_en :  1 ; /* bits 19:19 */
    ca_uint32_t rx_dec_10b_8b_err_cnt_roll_ovr_en :  1 ; /* bits 20:20 */
    ca_uint32_t rx_dis_par_err_cnt_roll_ovr_ovr_en :  1 ; /* bits 21:21 */
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO 0xf4327010
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_rd_resp_bad_eot  :  1 ; /* bits 0:0 */
    ca_uint32_t EP_value             :  1 ; /* bits 1:1 */
    ca_uint32_t TD_value             :  1 ; /* bits 2:2 */
    ca_uint32_t axi_rd_resp_succ     :  2 ; /* bits 4:3 */
    ca_uint32_t axi_wr_resp_succ     :  2 ; /* bits 6:5 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP 0xf4327014
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t mstr_csysreq         :  1 ; /* bits 2:2 */
    ca_uint32_t slv_csysreq          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORE_CONFIG_REG 0xf4327018
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORE_CONFIG_REG_dft 0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_ltssm_enable     :  1 ; /* bits 0:0 */
    ca_uint32_t app_init_rst         :  1 ; /* bits 1:1 */
    ca_uint32_t diag_ctrl_bus        :  3 ; /* bits 4:2 */
    ca_uint32_t axi_ur_err_mask      :  1 ; /* bits 5:5 */
    ca_uint32_t link_down_rst        :  1 ; /* bits 6:6 */
    ca_uint32_t send_clk_req_n       :  1 ; /* bits 7:7 */
    ca_uint32_t app_xfer_pending     :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORE_CONFIG_REG_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS 0xf432701c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pm_xtlh_block_tlp    :  1 ; /* bits 0:0 */
    ca_uint32_t pm_curnt_state       :  3 ; /* bits 3:1 */
    ca_uint32_t smlh_ltssm_state     :  6 ; /* bits 9:4 */
    ca_uint32_t pm_status            :  1 ; /* bits 10:10 */
    ca_uint32_t pm_dstate            :  3 ; /* bits 13:11 */
    ca_uint32_t aux_pm_en            :  1 ; /* bits 14:14 */
    ca_uint32_t pm_pme_en            :  1 ; /* bits 15:15 */
    ca_uint32_t clk_req_n            :  1 ; /* bits 16:16 */
    ca_uint32_t link_req_rst_not     :  1 ; /* bits 17:17 */
    ca_uint32_t rdlh_link_up         :  1 ; /* bits 18:18 */
    ca_uint32_t rtlh_rfc_upd         :  1 ; /* bits 19:19 */
    ca_uint32_t mstr_csysack         :  1 ; /* bits 20:20 */
    ca_uint32_t slv_csysack          :  1 ; /* bits 21:21 */
    ca_uint32_t mstr_cactive         :  1 ; /* bits 22:22 */
    ca_uint32_t slv_cactive          :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RTLH_INFO   0xf4327020
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RTLH_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rtlh_rfc_data        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RTLH_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO 0xf4327024
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_byte_offset :  3 ; /* bits 2:0 */
    ca_uint32_t mstr_awmisc_info_response_sts :  3 ; /* bits 5:3 */
    ca_uint32_t mstr_awmisc_info_bar_num :  3 ; /* bits 8:6 */
    ca_uint32_t mstr_awmisc_info_tlp_io :  1 ; /* bits 9:9 */
    ca_uint32_t mstr_awmisc_info_tlp_rom :  1 ; /* bits 10:10 */
    ca_uint32_t mstr_awmisc_info_tlp_fun_num :  3 ; /* bits 13:11 */
    ca_uint32_t mstr_awmisc_info_tlp_attr :  2 ; /* bits 15:14 */
    ca_uint32_t mstr_awmisc_info_tlp_tc :  3 ; /* bits 18:16 */
    ca_uint32_t mstr_awmisc_info_tlp_type :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO 0xf4327028
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_armisc_info_byte_offset :  3 ; /* bits 2:0 */
    ca_uint32_t mstr_armisc_info_response_sts :  3 ; /* bits 5:3 */
    ca_uint32_t mstr_armisc_info_bar_num :  3 ; /* bits 8:6 */
    ca_uint32_t mstr_armisc_info_tlp_io :  1 ; /* bits 9:9 */
    ca_uint32_t mstr_armisc_info_tlp_rom :  1 ; /* bits 10:10 */
    ca_uint32_t mstr_armisc_info_tlp_fun_num :  3 ; /* bits 13:11 */
    ca_uint32_t mstr_armisc_info_tlp_attr :  2 ; /* bits 15:14 */
    ca_uint32_t mstr_armisc_info_tlp_tc :  3 ; /* bits 18:16 */
    ca_uint32_t mstr_armisc_info_tlp_type :  5 ; /* bits 23:19 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO 0xf432702c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t slv_bmisc_info_trans_td :  1 ; /* bits 1:1 */
    ca_uint32_t slv_bmisc_info_trans_tc :  3 ; /* bits 4:2 */
    ca_uint32_t slv_bmisc_info_trans_attr :  2 ; /* bits 6:5 */
    ca_uint32_t slv_bmisc_info_trans_sts :  3 ; /* bits 9:7 */
    ca_uint32_t slv_bmisc_info_non_posted :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT 0xf4327030
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t slv_rmisc_info_trans_td :  1 ; /* bits 1:1 */
    ca_uint32_t slv_rmisc_info_trans_tc :  3 ; /* bits 4:2 */
    ca_uint32_t slv_rmisc_info_trans_attr :  2 ; /* bits 6:5 */
    ca_uint32_t slv_rmisc_info_trans_sts :  3 ; /* bits 9:7 */
    ca_uint32_t slv_rmisc_info_non_posted :  1 ; /* bits 10:10 */
    ca_uint32_t radm_cpl_timeout     :  1 ; /* bits 11:11 */
    ca_uint32_t radm_timeout_cpl_len : 12 ; /* bits 23:12 */
    ca_uint32_t radm_timeout_cpl_tag :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_0 0xf4327034
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_1 0xf4327038
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI 0xf432703c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cxpl_debug_info_ei   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR 0xf4327040
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_cfg_start_addr    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR 0xf4327044
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_cfg_end_addr      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_IATU_BASE_ADDR 0xf4327048
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_IATU_BASE_ADDR_dft 0xfff80000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rc_iatu_base_addr    : 13 ; /* bits 31:19 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_IATU_BASE_ADDR_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_ATU_BYPASS 0xf432704c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_ATU_BYPASS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_atu_bypass :  1 ; /* bits 0:0 */
    ca_uint32_t slv_armisc_info_atu_bypass :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_ATU_BYPASS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1 0xf4327050
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_hdr_34dw1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0 0xf4327054
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_hdr_34dw0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG 0xf4327058
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slv_awmisc_info_p_tag :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1 0xf432705c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_hdr_34dw1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0 0xf4327060
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_hdr_34dw0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO 0xf4327064
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mstr_awmisc_info_last_dcmp_tlp :  1 ; /* bits 0:0 */
    ca_uint32_t mstr_armisc_info_last_dcmp_tlp :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT 0xf4327068
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inta_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT 0xf432706c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inta_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT 0xf4327070
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intb_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT 0xf4327074
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intb_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT 0xf4327078
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intc_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT 0xf432707c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intc_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT 0xf4327080
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intd_assert_int_cnt  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT 0xf4327084
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intd_de_assert_int_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT 0xf4327088
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hot_plug_int_cnt     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT 0xf432708c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_ready_entr_l23   :  1 ; /* bits 0:0 */
    ca_uint32_t app_req_exit_l1      :  1 ; /* bits 1:1 */
    ca_uint32_t app_req_entr_l1      :  1 ; /* bits 2:2 */
    ca_uint32_t sys_aux_pwr_det      :  1 ; /* bits 3:3 */
    ca_uint32_t sys_pre_det_state    :  1 ; /* bits 4:4 */
    ca_uint32_t sys_atten_button_pressed :  1 ; /* bits 5:5 */
    ca_uint32_t sys_mrl_sensor_state :  1 ; /* bits 6:6 */
    ca_uint32_t sys_pwr_fault_det    :  1 ; /* bits 7:7 */
    ca_uint32_t sys_mrl_sensor_chged :  1 ; /* bits 8:8 */
    ca_uint32_t sys_pre_det_chged    :  1 ; /* bits 9:9 */
    ca_uint32_t sys_cmd_cpled_int    :  1 ; /* bits 10:10 */
    ca_uint32_t apps_pm_xmt_turnoff  :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_FATAL_ERR_CNT 0xf4327090
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_fatal_err_cnt   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_NON_FATAL_ERR_CNT 0xf4327094
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_NON_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_non_fatal_err_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_NON_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORR_ERR_CNT 0xf4327098
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_correct_err_cnt :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB 0xf432709c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msi_addr_31_0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB 0xf43270a0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msi_addr_63_32       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT 0xf43270a4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ts1_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT 0xf43270a8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ts2_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT 0xf43270ac
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_skip_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT 0xf43270b0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_elec_idle_order_set_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT 0xf43270b4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_log_idle_sym :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT 0xf43270b8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_dllp_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT 0xf43270bc
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_tlp_pkt_cnt_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT 0xf43270c0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_lcrc_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT 0xf43270c4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_ecrc_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT 0xf43270c8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_cxpl_err     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT 0xf43270cc
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_cxpl_ur_err  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT 0xf43270d0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_rcvd_req_err_incr :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_DLLP_PKT_CNT 0xf43270d4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_DLLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_dllp_cnt_incr     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_DLLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_TLP_PKT_CNT 0xf43270d8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_tlp_cnt_incr      :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS 0xf43270dc
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arbar                :  2 ; /* bits 1:0 */
    ca_uint32_t ardomain             :  2 ; /* bits 3:2 */
    ca_uint32_t arqos                :  4 ; /* bits 7:4 */
    ca_uint32_t arsnoop              :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS 0xf43270e0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awbar                :  2 ; /* bits 1:0 */
    ca_uint32_t awdomain             :  2 ; /* bits 3:2 */
    ca_uint32_t awqos                :  4 ; /* bits 7:4 */
    ca_uint32_t awsnoop              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SETTINGS 0xf43270e4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               :  6 ; /* bits 5:0 */
    ca_uint32_t awuser               :  6 ; /* bits 11:6 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SETTINGS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_SIG_0 0xf43270e8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_SIG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t brdg_slv_xfer_pending :  1 ; /* bits 0:0 */
    ca_uint32_t brdg_dbi_xfer_pending :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t radm_q_not_empty     :  1 ; /* bits 8:8 */
    ca_uint32_t radm_xfer_pending    :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_SIG_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_CTL_0 0xf43270ec
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_CTL_0_dft 0x00000009

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t app_clk_pm_en        :  1 ; /* bits 0:0 */
    ca_uint32_t reg_en_radm_clk_g    :  1 ; /* bits 1:1 */
    ca_uint32_t reg_slv_wmisc_info   :  1 ; /* bits 2:2 */
    ca_uint32_t phy_mac_rxdatavalid  :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_CTL_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_DBG_0 0xf43270f0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_DBG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_idle            :  1 ; /* bits 0:0 */
    ca_uint32_t en_radm_clk_g        :  1 ; /* bits 1:1 */
    ca_uint32_t mstr_armisc_info_zeroread :  1 ; /* bits 2:2 */
    ca_uint32_t cfg_crs_sw_vis_en    :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_DBG_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack 0xf43270f4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err 0xf43270f8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err 0xf43270fc
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err 0xf4327100
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err 0xf4327104
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err 0xf4327108
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err 0xf432710c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err 0xf4327110
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_prot_err 0xf4327114
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err 0xf4327118
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err 0xf432711c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err 0xf4327120
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_cpl_timeout 0xf4327124
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_qoverflow 0xf4327128
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_qoverflow_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_qoverflow_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err 0xf432712c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur 0xf4327130
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca 0xf4327134
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca 0xf4327138
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur 0xf432713c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err 0xf4327140
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err 0xf4327144
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned 0xf4327148
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned 0xf432714c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor 0xf4327150
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf 0xf4327154
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f 0xf4327158
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xyz                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM1         0xf432715c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM1_dft     0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie2_1_sramtest     :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM22        0xf4327160
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM22_dft    0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie2_2_sramtest2    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM22_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM21        0xf4327164
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM21_dft    0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie2_2_sramtest1    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM21_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM20        0xf4327168
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM20_dft    0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie2_2_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM20_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM31        0xf432716c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM31_dft    0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie2_3_sramtest1    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM31_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM30        0xf4327170
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM30_dft    0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie2_3_sramtest0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM30_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_LS          0xf4327174
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_LS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcie0_1_sramls       :  1 ; /* bits 0:0 */
    ca_uint32_t pcie0_2_sramls       :  9 ; /* bits 9:1 */
    ca_uint32_t pcie0_3_sramls       :  5 ; /* bits 14:10 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_LS_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY1      0xf4327178
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY1_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY2      0xf432717c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY2_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy2               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_2 0xf4327180
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_2 0xf4327184
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_3 0xf4327188
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_3 0xf432718c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_4 0xf4327190
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_4 0xf4327194
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_5 0xf4327198
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted   :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted   :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted   :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted   :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctr_int          :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up         :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int               :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err    :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err       :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack       :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme          :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down            :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi   :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi          :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme               :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi               :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp          :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_5 0xf432719c
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t radm_inta_asserted_en :  1 ; /* bits 0:0 */
    ca_uint32_t radm_inta_deasserted_en :  1 ; /* bits 1:1 */
    ca_uint32_t radm_intb_asserted_en :  1 ; /* bits 2:2 */
    ca_uint32_t radm_intb_deasserted_en :  1 ; /* bits 3:3 */
    ca_uint32_t radm_intc_asserted_en :  1 ; /* bits 4:4 */
    ca_uint32_t radm_intc_deasserted_en :  1 ; /* bits 5:5 */
    ca_uint32_t radm_intd_asserted_en :  1 ; /* bits 6:6 */
    ca_uint32_t radm_intd_deasserted_en :  1 ; /* bits 7:7 */
    ca_uint32_t msi_ctrl_int_en      :  1 ; /* bits 8:8 */
    ca_uint32_t smlh_link_up_int_en  :  1 ; /* bits 9:9 */
    ca_uint32_t hp_int_en            :  1 ; /* bits 10:10 */
    ca_uint32_t radm_correctable_err_en :  1 ; /* bits 11:11 */
    ca_uint32_t radm_nonfatal_err_en :  1 ; /* bits 12:12 */
    ca_uint32_t radm_fatal_err_en    :  1 ; /* bits 13:13 */
    ca_uint32_t radm_pm_to_ack_en    :  1 ; /* bits 14:14 */
    ca_uint32_t radm_pm_pme_en       :  1 ; /* bits 15:15 */
    ca_uint32_t radm_qoverflow_en    :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t link_down_en         :  1 ; /* bits 22:22 */
    ca_uint32_t cfg_aer_rc_err_msi_en :  1 ; /* bits 23:23 */
    ca_uint32_t cfg_pme_msi_en       :  1 ; /* bits 24:24 */
    ca_uint32_t hp_pme_en            :  1 ; /* bits 25:25 */
    ca_uint32_t hp_msi_en            :  1 ; /* bits 26:26 */
    ca_uint32_t cfg_ur_resp_en       :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_0 0xf43271a0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_0 0xf43271a4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_1 0xf43271a8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_1 0xf43271ac
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_2 0xf43271b0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_2 0xf43271b4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_3 0xf43271b8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_3 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_3 0xf43271bc
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_3_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_3 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_4 0xf43271c0
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_4 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_4 0xf43271c4
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_4_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_4 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_5 0xf43271c8
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_STATUS_5 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_5_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_5 0xf43271cc
#define PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_5_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MSI_INTERRUPT_ENABLE_5 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE_X1_GLBL */
#ifndef __ASSEMBLER__
typedef struct {
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_0_t INTERRUPT_0;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_0_t INTERRUPT_ENABLE_0;            /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_1_t INTERRUPT_1;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_1_t INTERRUPT_ENABLE_1;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO_t AXI_MASTER_RESP_MISC_INFO;     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP; /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORE_CONFIG_REG_t CORE_CONFIG_REG;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t PM_INFO_RESET_VOLT_LOW_PWR_STATUS; /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RTLH_INFO_t RTLH_INFO;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO_t AXI_MASTER_WR_MISC_INFO;       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO_t AXI_MASTER_RD_MISC_INFO;       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t AXI_SLAVE_BRESP_MISC_INFO;     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT; /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_0_t CXPL_DEBUG_INFO_0;             /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_1_t CXPL_DEBUG_INFO_1;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI_t CXPL_DEBUG_INFO_EI;            /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR_t PCIE_CONTR_CFG_START_ADDR;     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR_t PCIE_CONTR_CFG_END_ADDR;       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_PCIE_CONTR_IATU_BASE_ADDR_t PCIE_CONTR_IATU_BASE_ADDR;     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_ATU_BYPASS_t AXI_ATU_BYPASS;                /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t AXI_AWMISC_INFO_HDR_34DW1;     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t AXI_AWMISC_INFO_HDR_34DW0;     /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG_t AXI_AWMISC_INFO_P_TAG;         /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t AXI_MSTR_AWMISC_INFO_HDR_34DW1; /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t AXI_MSTR_AWMISC_INFO_HDR_34DW0; /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO_t AXI_MSTR_DCMP_INFO;            /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t DEBUG_INTA_ASSERT_INT_CNT;     /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t DEBUG_INTA_DE_ASSERT_INT_CNT;  /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t DEBUG_INTB_ASSERT_INT_CNT;     /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t DEBUG_INTB_DE_ASSERT_INT_CNT;  /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t DEBUG_INTC_ASSERT_INT_CNT;     /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t DEBUG_INTC_DE_ASSERT_INT_CNT;  /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t DEBUG_INTD_ASSERT_INT_CNT;     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t DEBUG_INTD_DE_ASSERT_INT_CNT;  /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT_t DEBUG_HOT_PLUG_INT_CNT;        /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t ELCTRO_MECH_POWER_MANAGEMENT;  /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_FATAL_ERR_CNT_t FATAL_ERR_CNT;                 /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_NON_FATAL_ERR_CNT_t NON_FATAL_ERR_CNT;             /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_CORR_ERR_CNT_t CORR_ERR_CNT;                  /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t MSI_TARGET_ADDRESS_31_0_LSB;   /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t MSI_TARGET_ADDRESS_63_32_MSB;  /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t RX_RCVD_TS1_ORDER_SET_CNT;     /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t RX_RCVD_TS2_ORDER_SET_CNT;     /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t RX_RCVD_SKIP_ORDER_SET_CNT;    /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t RX_RCVD_ELEC_IDLE_ORDER_SET_CNT; /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t RX_RCVD_LOG_IDLE_SYMB_CNT;     /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT_t RX_RCVD_DLLP_PKT_CNT;          /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT_t RX_RCVD_TLP_PKT_CNT;           /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT_t RX_RCVD_LCRC_ERR_CNT;          /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT_t RX_RCVD_ECRC_ERR_CNT;          /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT_t RX_RCVD_CXPL_ERR_CNT;          /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t RX_RCVD_CXPL_UR_ERR_CNT;       /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT_t RX_RCVD_REQ_ERR_CNT;           /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_DLLP_PKT_CNT_t TX_DLLP_PKT_CNT;               /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_TX_TLP_PKT_CNT_t TX_TLP_PKT_CNT;                /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS_t AXI_READ_SLV_SETTINGS;         /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS_t AXI_WRITE_SLV_SETTINGS;        /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_AXI_MSTR_SETTINGS_t AXI_MSTR_SETTINGS;             /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DEBUG_SIG_0_t DEBUG_SIG_0;                   /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_CTL_0_t VENUS_CTL_0;                   /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_VENUS_DBG_0_t VENUS_DBG_0;                   /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack_t DIAG_CNT_CXPL_rdlh_xdlh_rcvd_nack; /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_rdlh_pkt_err_t DIAG_CNT_CXPL_rmlh_rdlh_pkt_err; /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_rmlh_deskew_alignment_err_t DIAG_CNT_CXPL_rmlh_deskew_alignment_err; /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CXPL_smlh_ts_rcv_err_t DIAG_CNT_CXPL_smlh_ts_rcv_err; /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_timeout_err_t DIAG_CNT_CDM_xdlh_replay_timeout_err; /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_xdlh_replay_num_rlover_err_t DIAG_CNT_CDM_xdlh_replay_num_rlover_err; /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_dllp_err_t DIAG_CNT_CDM_rdlh_bad_dllp_err; /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_bad_tlp_err_t DIAG_CNT_CDM_rdlh_bad_tlp_err; /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rdlh_prot_err_t DIAG_CNT_CDM_rdlh_prot_err;    /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rtlh_fc_prot_err_t DIAG_CNT_CDM_rtlh_fc_prot_err; /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_rmlh_rcvd_err_t DIAG_CNT_CDM_rmlh_rcvd_err;    /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_int_xadm_fc_prot_err_t DIAG_CNT_CDM_int_xadm_fc_prot_err; /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_cpl_timeout_t DIAG_CNT_CDM_radm_cpl_timeout; /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_radm_qoverflow_t DIAG_CNT_CDM_radm_qoverflow;   /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_unexp_cpl_err_t DIAG_CNT_CDM_diag_radm_unexp_cpl_err; /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_ur; /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_ca; /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ca_t DIAG_CNT_CDM_diag_radm_rcvd_req_ca; /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_req_ur_t DIAG_CNT_CDM_diag_radm_rcvd_req_ur; /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_ecrc_err_t DIAG_CNT_CDM_diag_radm_ecrc_err; /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_mlf_tlp_err_t DIAG_CNT_CDM_diag_radm_mlf_tlp_err; /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned_t DIAG_CNT_CDM_diag_radm_rcvd_cpl_poisoned; /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned_t DIAG_CNT_CDM_diag_radm_rcvd_wreq_poisoned; /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_cor_t DIAG_CNT_CDM_cfg_sys_err_rc_cor; /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_nf_t DIAG_CNT_CDM_cfg_sys_err_rc_nf; /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DIAG_CNT_CDM_cfg_sys_err_rc_f_t DIAG_CNT_CDM_cfg_sys_err_rc_f; /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM1_t       RM1;                           /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM22_t      RM22;                          /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM21_t      RM21;                          /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM20_t      RM20;                          /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM31_t      RM31;                          /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_RM30_t      RM30;                          /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_LS_t        LS;                            /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY1_t    DUMMY1;                        /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_DUMMY2_t    DUMMY2;                        /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_2_t INTERRUPT_2;                   /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_2_t INTERRUPT_ENABLE_2;            /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_3_t INTERRUPT_3;                   /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_3_t INTERRUPT_ENABLE_3;            /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_4_t INTERRUPT_4;                   /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_4_t INTERRUPT_ENABLE_4;            /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_5_t INTERRUPT_5;                   /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_INTERRUPT_ENABLE_5_t INTERRUPT_ENABLE_5;            /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_0_t MSI_INTERRUPT_STATUS_0;        /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_0_t MSI_INTERRUPT_ENABLE_0;        /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_1_t MSI_INTERRUPT_STATUS_1;        /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_1_t MSI_INTERRUPT_ENABLE_1;        /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_2_t MSI_INTERRUPT_STATUS_2;        /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_2_t MSI_INTERRUPT_ENABLE_2;        /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_3_t MSI_INTERRUPT_STATUS_3;        /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_3_t MSI_INTERRUPT_ENABLE_3;        /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_4_t MSI_INTERRUPT_STATUS_4;        /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_4_t MSI_INTERRUPT_ENABLE_4;        /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_STATUS_5_t MSI_INTERRUPT_STATUS_5;        /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  PCIE2_X1_PCIEX1_PCIE_X1_GLBL_MSI_INTERRUPT_ENABLE_5_t MSI_INTERRUPT_ENABLE_5;        /* addr: 0x000001cc */
} APB2_PCIE2_X1_PCIEX1_PCIE_X1_GLBL_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE2_X1 */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_PCIE2_X1_PCIEX1_PCIE_X1_GLBL_t      PCIE_X1_GLBL;                  /* addr: 0x00000000 */
} APB2_PCIE2_X1_t;
#endif /* !__ASSEMBLER__ */


/*
 * PER
 */

#define PER_SOFT_RESET                           0xf4329000
#define PER_SOFT_RESET_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t soft_reset           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SOFT_RESET_t;
#endif /* !__ASSEMBLER__ */


#define PER_PERIPHERAL_INTERRUPT_0               0xf4329004
#define PER_PERIPHERAL_INTERRUPT_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t soft0i               :  1 ; /* bits 0:0 */
    ca_uint32_t soft1i               :  1 ; /* bits 1:1 */
    ca_uint32_t tmr1i                :  1 ; /* bits 2:2 */
    ca_uint32_t tmr2i                :  1 ; /* bits 3:3 */
    ca_uint32_t tmr3i                :  1 ; /* bits 4:4 */
    ca_uint32_t tmr4i                :  1 ; /* bits 5:5 */
    ca_uint32_t wdti                 :  1 ; /* bits 6:6 */
    ca_uint32_t spii                 :  1 ; /* bits 7:7 */
    ca_uint32_t gpio0i               :  1 ; /* bits 8:8 */
    ca_uint32_t gpio1i               :  1 ; /* bits 9:9 */
    ca_uint32_t gpio2i               :  1 ; /* bits 10:10 */
    ca_uint32_t gpio3i               :  1 ; /* bits 11:11 */
    ca_uint32_t gpio4i               :  1 ; /* bits 12:12 */
    ca_uint32_t biw0i                :  1 ; /* bits 13:13 */
    ca_uint32_t mdioi                :  1 ; /* bits 14:14 */
    ca_uint32_t trng0i               :  1 ; /* bits 15:15 */
    ca_uint32_t trng1i               :  1 ; /* bits 16:16 */
    ca_uint32_t cspii                :  1 ; /* bits 17:17 */
    ca_uint32_t ldma4i               :  1 ; /* bits 18:18 */
    ca_uint32_t ldma5i               :  1 ; /* bits 19:19 */
    ca_uint32_t ldma6i               :  1 ; /* bits 20:20 */
    ca_uint32_t ldma7i               :  1 ; /* bits 21:21 */
    ca_uint32_t taroko_timer0i       :  1 ; /* bits 22:22 */
    ca_uint32_t taroko_timer1i       :  1 ; /* bits 23:23 */
    ca_uint32_t dying_gaspi          :  1 ; /* bits 24:24 */
    ca_uint32_t ssp_i                :  1 ; /* bits 25:25 */
    ca_uint32_t biw1i                :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_PERIPHERAL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_PERIPHERAL_INTENABLE_0               0xf4329008
#define PER_PERIPHERAL_INTENABLE_0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t soft0e               :  1 ; /* bits 0:0 */
    ca_uint32_t soft1e               :  1 ; /* bits 1:1 */
    ca_uint32_t tmr1e                :  1 ; /* bits 2:2 */
    ca_uint32_t tmr2e                :  1 ; /* bits 3:3 */
    ca_uint32_t tmr3e                :  1 ; /* bits 4:4 */
    ca_uint32_t tmr4e                :  1 ; /* bits 5:5 */
    ca_uint32_t wdte                 :  1 ; /* bits 6:6 */
    ca_uint32_t spie                 :  1 ; /* bits 7:7 */
    ca_uint32_t gpio0e               :  1 ; /* bits 8:8 */
    ca_uint32_t gpio1e               :  1 ; /* bits 9:9 */
    ca_uint32_t gpio2e               :  1 ; /* bits 10:10 */
    ca_uint32_t gpio3e               :  1 ; /* bits 11:11 */
    ca_uint32_t gpio4e               :  1 ; /* bits 12:12 */
    ca_uint32_t biw0e                :  1 ; /* bits 13:13 */
    ca_uint32_t mdioe                :  1 ; /* bits 14:14 */
    ca_uint32_t trng0e               :  1 ; /* bits 15:15 */
    ca_uint32_t trng1e               :  1 ; /* bits 16:16 */
    ca_uint32_t cspie                :  1 ; /* bits 17:17 */
    ca_uint32_t ldma4e               :  1 ; /* bits 18:18 */
    ca_uint32_t ldma5e               :  1 ; /* bits 19:19 */
    ca_uint32_t ldma6e               :  1 ; /* bits 20:20 */
    ca_uint32_t ldma7e               :  1 ; /* bits 21:21 */
    ca_uint32_t taroko_timer0e       :  1 ; /* bits 22:22 */
    ca_uint32_t taroko_timer1e       :  1 ; /* bits 23:23 */
    ca_uint32_t dying_gaspe          :  1 ; /* bits 24:24 */
    ca_uint32_t ssp_e                :  1 ; /* bits 25:25 */
    ca_uint32_t biw1e                :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_PERIPHERAL_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_PERIPHERAL_INTERRUPT_1               0xf432900c
#define PER_PERIPHERAL_INTERRUPT_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t soft0i               :  1 ; /* bits 0:0 */
    ca_uint32_t soft1i               :  1 ; /* bits 1:1 */
    ca_uint32_t tmr1i                :  1 ; /* bits 2:2 */
    ca_uint32_t tmr2i                :  1 ; /* bits 3:3 */
    ca_uint32_t tmr3i                :  1 ; /* bits 4:4 */
    ca_uint32_t tmr4i                :  1 ; /* bits 5:5 */
    ca_uint32_t wdti                 :  1 ; /* bits 6:6 */
    ca_uint32_t spii                 :  1 ; /* bits 7:7 */
    ca_uint32_t gpio0i               :  1 ; /* bits 8:8 */
    ca_uint32_t gpio1i               :  1 ; /* bits 9:9 */
    ca_uint32_t gpio2i               :  1 ; /* bits 10:10 */
    ca_uint32_t gpio3i               :  1 ; /* bits 11:11 */
    ca_uint32_t gpio4i               :  1 ; /* bits 12:12 */
    ca_uint32_t biw0i                :  1 ; /* bits 13:13 */
    ca_uint32_t mdioi                :  1 ; /* bits 14:14 */
    ca_uint32_t trng0i               :  1 ; /* bits 15:15 */
    ca_uint32_t trng1i               :  1 ; /* bits 16:16 */
    ca_uint32_t cspii                :  1 ; /* bits 17:17 */
    ca_uint32_t ldma4i               :  1 ; /* bits 18:18 */
    ca_uint32_t ldma5i               :  1 ; /* bits 19:19 */
    ca_uint32_t ldma6i               :  1 ; /* bits 20:20 */
    ca_uint32_t ldma7i               :  1 ; /* bits 21:21 */
    ca_uint32_t taroko_timer0i       :  1 ; /* bits 22:22 */
    ca_uint32_t taroko_timer1i       :  1 ; /* bits 23:23 */
    ca_uint32_t dying_gaspi          :  1 ; /* bits 24:24 */
    ca_uint32_t ssp_i                :  1 ; /* bits 25:25 */
    ca_uint32_t biw1i                :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_PERIPHERAL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_PERIPHERAL_INTENABLE_1               0xf4329010
#define PER_PERIPHERAL_INTENABLE_1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t soft0e               :  1 ; /* bits 0:0 */
    ca_uint32_t soft1e               :  1 ; /* bits 1:1 */
    ca_uint32_t tmr1e                :  1 ; /* bits 2:2 */
    ca_uint32_t tmr2e                :  1 ; /* bits 3:3 */
    ca_uint32_t tmr3e                :  1 ; /* bits 4:4 */
    ca_uint32_t tmr4e                :  1 ; /* bits 5:5 */
    ca_uint32_t wdte                 :  1 ; /* bits 6:6 */
    ca_uint32_t spie                 :  1 ; /* bits 7:7 */
    ca_uint32_t gpio0e               :  1 ; /* bits 8:8 */
    ca_uint32_t gpio1e               :  1 ; /* bits 9:9 */
    ca_uint32_t gpio2e               :  1 ; /* bits 10:10 */
    ca_uint32_t gpio3e               :  1 ; /* bits 11:11 */
    ca_uint32_t gpio4e               :  1 ; /* bits 12:12 */
    ca_uint32_t biw0e                :  1 ; /* bits 13:13 */
    ca_uint32_t mdioe                :  1 ; /* bits 14:14 */
    ca_uint32_t trng0e               :  1 ; /* bits 15:15 */
    ca_uint32_t trng1e               :  1 ; /* bits 16:16 */
    ca_uint32_t cspie                :  1 ; /* bits 17:17 */
    ca_uint32_t ldma4e               :  1 ; /* bits 18:18 */
    ca_uint32_t ldma5e               :  1 ; /* bits 19:19 */
    ca_uint32_t ldma6e               :  1 ; /* bits 20:20 */
    ca_uint32_t ldma7e               :  1 ; /* bits 21:21 */
    ca_uint32_t taroko_timer0e       :  1 ; /* bits 22:22 */
    ca_uint32_t taroko_timer1e       :  1 ; /* bits 23:23 */
    ca_uint32_t dying_gaspe          :  1 ; /* bits 24:24 */
    ca_uint32_t ssp_e                :  1 ; /* bits 25:25 */
    ca_uint32_t biw1e                :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd1               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_PERIPHERAL_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_IRQ_SOFT1                            0xf4329014
#define PER_IRQ_SOFT1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t softiSet             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_IRQ_SOFT1_t;
#endif /* !__ASSEMBLER__ */


#define PER_IRQ_SOFT0                            0xf4329018
#define PER_IRQ_SOFT0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t softiSet             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_IRQ_SOFT0_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_CTRL                             0xf432901c
#define PER_WDT_CTRL_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdten                :  1 ; /* bits 0:0 */
    ca_uint32_t rsten                :  1 ; /* bits 1:1 */
    ca_uint32_t clksel               :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t wdt_delay            : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define     clksel_perdiv                                 0x0
#define     clksel_peronly                                0x1
#define     rsten_DIS                                     0x0
#define     rsten_ena                                     0x1
#define     wdten_DIS                                     0x0
#define     wdten_ENA                                     0x1

#define PER_WDT_PS                               0xf4329020
#define PER_WDT_PS_dft                           0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdtps                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_PS_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_DIV                              0xf4329024
#define PER_WDT_DIV_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t div_load             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_DIV_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_LD                               0xf4329028
#define PER_WDT_LD_dft                           0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdtld                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_LD_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_LOADE                            0xf432902c
#define PER_WDT_LOADE_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t update_wdt           :  1 ; /* bits 0:0 */
    ca_uint32_t update_pre           :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_LOADE_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_CNT                              0xf4329030
#define PER_WDT_CNT_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdtcount             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_IE_0                             0xf4329034
#define PER_WDT_IE_0_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdte                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_INT_0                            0xf4329038
#define PER_WDT_INT_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdti                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_STAT_0                           0xf432903c
#define PER_WDT_STAT_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdts                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_STAT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_IE_1                             0xf4329040
#define PER_WDT_IE_1_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdte                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_INT_1                            0xf4329044
#define PER_WDT_INT_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdti                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_STAT_1                           0xf4329048
#define PER_WDT_STAT_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdts                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_STAT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_WDT_TST                              0xf432904c
#define PER_WDT_TST_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t testmode             :  1 ; /* bits 0:0 */
    ca_uint32_t testclken            :  1 ; /* bits 1:1 */
    ca_uint32_t testreset            :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_WDT_TST_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_LD1                              0xf4329050
#define PER_TMR_LD1_dft                          0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t load1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_LD1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_CTRL1                            0xf4329054
#define PER_TMR_CTRL1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t clksel1              :  2 ; /* bits 3:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rlmode1              :  1 ; /* bits 6:6 */
    ca_uint32_t timen1               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define     timen1_DIS                                    0x0
#define     timen1_ENA                                    0x1
#define     rlmode1_ROLL                                  0x0
#define     rlmode1_LOAD                                  0x1
#define     clksel1_direct                                0x0
#define     clksel1_dv64                                  0x1
#define     clksel1_dv1024                                0x2
#define     clksel1_dv4096                                0x3

#define PER_TMR_CNT1                             0xf4329058
#define PER_TMR_CNT1_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE1_0                            0xf432905c
#define PER_TMR_IE1_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr1e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE1_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE1_1                            0xf4329060
#define PER_TMR_IE1_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr1e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE1_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT1_0                           0xf4329064
#define PER_TMR_INT1_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr1i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT1_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT1_1                           0xf4329068
#define PER_TMR_INT1_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr1i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT1_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_STAT1                            0xf432906c
#define PER_TMR_STAT1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr1s                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_STAT1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_LD2                              0xf4329070
#define PER_TMR_LD2_dft                          0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t load2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_LD2_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_CTRL2                            0xf4329074
#define PER_TMR_CTRL2_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t clksel2              :  2 ; /* bits 3:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rlmode2              :  1 ; /* bits 6:6 */
    ca_uint32_t timen2               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CTRL2_t;
#endif /* !__ASSEMBLER__ */

#define     timen2_DIS                                    0x0
#define     timen2_ENA                                    0x1
#define     rlmode2_ROLL                                  0x0
#define     rlmode2_LOAD                                  0x1
#define     clksel2_direct                                0x0
#define     clksel2_dv64                                  0x1
#define     clksel2_dv1024                                0x2
#define     clksel2_dv4096                                0x3

#define PER_TMR_CNT2                             0xf4329078
#define PER_TMR_CNT2_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count2               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CNT2_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE2_0                            0xf432907c
#define PER_TMR_IE2_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr2e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE2_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE2_1                            0xf4329080
#define PER_TMR_IE2_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr2e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE2_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT2_0                           0xf4329084
#define PER_TMR_INT2_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr2i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT2_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT2_1                           0xf4329088
#define PER_TMR_INT2_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr2i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT2_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_STAT2                            0xf432908c
#define PER_TMR_STAT2_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr2s                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_STAT2_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_LD3                              0xf4329090
#define PER_TMR_LD3_dft                          0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t load3                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_LD3_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_CTRL3                            0xf4329094
#define PER_TMR_CTRL3_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t clksel3              :  2 ; /* bits 3:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rlmode3              :  1 ; /* bits 6:6 */
    ca_uint32_t timen3               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CTRL3_t;
#endif /* !__ASSEMBLER__ */

#define     timen3_DIS                                    0x0
#define     timen3_ENA                                    0x1
#define     rlmode3_ROLL                                  0x0
#define     rlmode3_LOAD                                  0x1
#define     clksel3_direct                                0x0
#define     clksel3_dv64                                  0x1
#define     clksel3_dv1024                                0x2
#define     clksel3_dv4096                                0x3

#define PER_TMR_CNT3                             0xf4329098
#define PER_TMR_CNT3_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count3               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CNT3_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE3_0                            0xf432909c
#define PER_TMR_IE3_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr3e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE3_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE3_1                            0xf43290a0
#define PER_TMR_IE3_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr3e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE3_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT3_0                           0xf43290a4
#define PER_TMR_INT3_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr3i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT3_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT3_1                           0xf43290a8
#define PER_TMR_INT3_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr3i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT3_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_STAT3                            0xf43290ac
#define PER_TMR_STAT3_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr3s                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_STAT3_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_LD4                              0xf43290b0
#define PER_TMR_LD4_dft                          0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t load4                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_LD4_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_CTRL4                            0xf43290b4
#define PER_TMR_CTRL4_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t clksel4              :  2 ; /* bits 3:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rlmode4              :  1 ; /* bits 6:6 */
    ca_uint32_t timen4               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CTRL4_t;
#endif /* !__ASSEMBLER__ */

#define     timen4_DIS                                    0x0
#define     timen4_ENA                                    0x1
#define     rlmode4_ROLL                                  0x0
#define     rlmode4_LOAD                                  0x1
#define     clksel4_direct                                0x0
#define     clksel4_dv64                                  0x1
#define     clksel4_dv1024                                0x2
#define     clksel4_dv4096                                0x3

#define PER_TMR_CNT4                             0xf43290b8
#define PER_TMR_CNT4_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count4               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_CNT4_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE4_0                            0xf43290bc
#define PER_TMR_IE4_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr4e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE4_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_IE4_1                            0xf43290c0
#define PER_TMR_IE4_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr4e                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_IE4_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT4_0                           0xf43290c4
#define PER_TMR_INT4_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr4i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT4_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_INT4_1                           0xf43290c8
#define PER_TMR_INT4_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr4i                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_INT4_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_STAT4                            0xf43290cc
#define PER_TMR_STAT4_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tmr4s                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_STAT4_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_LOADE                            0xf43290d0
#define PER_TMR_LOADE_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t update_tmr1          :  1 ; /* bits 1:1 */
    ca_uint32_t update_tmr2          :  1 ; /* bits 2:2 */
    ca_uint32_t update_tmr3          :  1 ; /* bits 3:3 */
    ca_uint32_t update_tmr4          :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_LOADE_t;
#endif /* !__ASSEMBLER__ */


#define PER_TMR_TST                              0xf43290d4
#define PER_TMR_TST_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t testclksel           :  1 ; /* bits 0:0 */
    ca_uint32_t test1                :  1 ; /* bits 1:1 */
    ca_uint32_t test2                :  1 ; /* bits 2:2 */
    ca_uint32_t test3                :  1 ; /* bits 3:3 */
    ca_uint32_t test4                :  1 ; /* bits 4:4 */
    ca_uint32_t pps_timer1_en        :  1 ; /* bits 5:5 */
    ca_uint32_t pps_timer2_en        :  1 ; /* bits 6:6 */
    ca_uint32_t pps_from_timer       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TMR_TST_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_CLK                              0xf43290d8
#define PER_SPI_CLK_dft                          0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter_load         : 16 ; /* bits 15:0 */
    ca_uint32_t ssp_igap             :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_CLK_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_CFG                              0xf43290dc
#define PER_SPI_CFG_dft                          0x3f090000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t command_cyc          :  1 ; /* bits 0:0 */
    ca_uint32_t read_write           :  1 ; /* bits 1:1 */
    ca_uint32_t micro_wire_cs_sel    :  5 ; /* bits 6:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sel_ssp_cs           :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ssp_cmd_cnt          :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t pre_ssp_dat_cnt      :  6 ; /* bits 29:24 */
    ca_uint32_t sspcs_en3_gpio       :  1 ; /* bits 30:30 */
    ca_uint32_t sspcs_en4_gpio       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     micro_wire_cs_sel_SPI                         0x0
#define     micro_wire_cs_sel_MWR                         0x1
#define     read_write_WR                                 0x0
#define     read_write_RD                                 0x1
#define     command_cyc_NORM                              0x0
#define     command_cyc_CONLY                             0x1

#define PER_SPI_MODE                             0xf43290e0
#define PER_SPI_MODE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_MODE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_CTRL                             0xf43290e4
#define PER_SPI_CTRL_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sspdone              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t sspstart             :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_CA0                              0xf43290e8
#define PER_SPI_CA0_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_cmd_addr0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_CA0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_CA1                              0xf43290ec
#define PER_SPI_CA1_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_cmd_addr1        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_CA1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_CA2                              0xf43290f0
#define PER_SPI_CA2_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_cmd_addr2        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_CA2_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_WDAT1                            0xf43290f4
#define PER_SPI_WDAT1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_wdata1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_WDAT1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_WDAT0                            0xf43290f8
#define PER_SPI_WDAT0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_wdata0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_WDAT0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_RDAT1                            0xf43290fc
#define PER_SPI_RDAT1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_rdata1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_RDAT1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_RDAT0                            0xf4329100
#define PER_SPI_RDAT0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssp_rdata0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_RDAT0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_IE_0                             0xf4329104
#define PER_SPI_IE_0_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spie                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_INT_0                            0xf4329108
#define PER_SPI_INT_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sspi                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_IE_1                             0xf432910c
#define PER_SPI_IE_1_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spie                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_INT_1                            0xf4329110
#define PER_SPI_INT_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sspi                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPI_STAT                             0xf4329114
#define PER_SPI_STAT_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ssps                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPI_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_CFG                             0xf4329118
#define PER_MDIO_CFG_dft                         0x10000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdio_manual          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t mdio_pre_scale       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     mdio_manual_AUTO                              0x0
#define     mdio_manual_MAN                               0x1

#define PER_MDIO_ADDR                            0xf432911c
#define PER_MDIO_ADDR_dft                        0x00080000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdio_addr            :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t mdio_offset          :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t mdio_rd_wr           :  1 ; /* bits 15:15 */
    ca_uint32_t mdio_st              :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t mdio_op              :  2 ; /* bits 19:18 */
    ca_uint32_t rsrvd4               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define     mdio_op_ADDR_WR                               0x0
#define     mdio_op_WR                                    0x1
#define     mdio_op_RD_INC                                0x2
#define     mdio_op_RD                                    0x3
#define     mdio_st_Direct                                0x0
#define     mdio_st_Indirect                              0x1
#define     mdio_rd_wr_WR                                 0x0
#define     mdio_rd_wr_RD                                 0x1
#define     mdio_addr_NORM                                0x0
#define     mdio_addr_CONLY                               0x1

#define PER_MDIO_WRDATA                          0xf4329120
#define PER_MDIO_WRDATA_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdio_wrdata          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_WRDATA_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_RDDATA                          0xf4329124
#define PER_MDIO_RDDATA_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdio_rddata          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_RDDATA_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_CTRL                            0xf4329128
#define PER_MDIO_CTRL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdiodone             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t mdiostart            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_AUTO_CFG                        0xf432912c
#define PER_MDIO_AUTO_CFG_dft                    0x00001f00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t auto_mdio_phy_start_idx :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t auto_mdio_phy_end_idx :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t auto_mdio_gpio       :  1 ; /* bits 15:15 */
    ca_uint32_t auto_mdio_reg_to_read :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_AUTO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     auto_mdio_gpio_32                             0x0
#define     auto_mdio_gpio_64                             0x1

#define PER_MDIO_AUTO_INTV                       0xf4329130
#define PER_MDIO_AUTO_INTV_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t poll_wait_cycles     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_AUTO_INTV_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_AUTO_RM                         0xf4329134
#define PER_MDIO_AUTO_RM_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t auto_mdio_bit_invert : 16 ; /* bits 15:0 */
    ca_uint32_t auto_mdio_bit_mask   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_AUTO_RM_t;
#endif /* !__ASSEMBLER__ */

#define     auto_mdio_bit_mask_UNMASKED                   0x0
#define     auto_mdio_bit_mask_MASKED                     0x1
#define     auto_mdio_bit_invert_NONINV                   0x0
#define     auto_mdio_bit_invert_INV                      0x1

#define PER_MDIO_AUTO_AADDR                      0xf4329138
#define PER_MDIO_AUTO_AADDR_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t auto_mdio_phy_alert_addr :  5 ; /* bits 4:0 */
    ca_uint32_t auto_mdio_phy_alert_range :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t auto_mdio_rddata     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_AUTO_AADDR_t;
#endif /* !__ASSEMBLER__ */

#define     auto_mdio_phy_alert_range_low                 0x0
#define     auto_mdio_phy_alert_range_hi                  0x1

#define PER_MDIO_ENTAB0                          0xf432913c
#define PER_MDIO_ENTAB0_dft                      0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slot_enable0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_ENTAB0_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_ENTAB1                          0xf4329140
#define PER_MDIO_ENTAB1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slot_enable1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_ENTAB1_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_ITAB0                           0xf4329144
#define PER_MDIO_ITAB0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i                    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_ITAB0_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_ITAB1                           0xf4329148
#define PER_MDIO_ITAB1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i                    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_ITAB1_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_IE_0                            0xf432914c
#define PER_MDIO_IE_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdioe                :  1 ; /* bits 0:0 */
    ca_uint32_t autopolle            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_INT_0                           0xf4329150
#define PER_MDIO_INT_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdioi                :  1 ; /* bits 0:0 */
    ca_uint32_t autopolli            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_IE_1                            0xf4329154
#define PER_MDIO_IE_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdioe                :  1 ; /* bits 0:0 */
    ca_uint32_t autopolle            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_INT_1                           0xf4329158
#define PER_MDIO_INT_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdioi                :  1 ; /* bits 0:0 */
    ca_uint32_t autopolli            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_MDIO_STAT                            0xf432915c
#define PER_MDIO_STAT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdios                :  1 ; /* bits 0:0 */
    ca_uint32_t autopolls            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_MDIO_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_CFG                             0xf4329160
#define PER_BIW0_CFG_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t core_en              :  1 ; /* bits 0:0 */
    ca_uint32_t biw_soft_reset       :  1 ; /* bits 1:1 */
    ca_uint32_t busywait_en          :  1 ; /* bits 2:2 */
    ca_uint32_t stretch_en           :  1 ; /* bits 3:3 */
    ca_uint32_t arb_en               :  1 ; /* bits 4:4 */
    ca_uint32_t clksync_en           :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t spike_cnt            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t prer                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     core_en_DIS                                   0x0
#define     core_en_ENA                                   0x1

#define PER_BIW0_CTRL                            0xf4329164
#define PER_BIW0_CTRL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwdone              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ack_in               :  1 ; /* bits 3:3 */
    ca_uint32_t write                :  1 ; /* bits 4:4 */
    ca_uint32_t read                 :  1 ; /* bits 5:5 */
    ca_uint32_t stop                 :  1 ; /* bits 6:6 */
    ca_uint32_t start                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_TXR                             0xf4329168
#define PER_BIW0_TXR_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txr                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_TXR_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_RXR                             0xf432916c
#define PER_BIW0_RXR_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxr                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_RXR_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_ACK                             0xf4329170
#define PER_BIW0_ACK_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t al                   :  1 ; /* bits 0:0 */
    ca_uint32_t biw_busy             :  1 ; /* bits 1:1 */
    ca_uint32_t ack_out              :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_ACK_t;
#endif /* !__ASSEMBLER__ */

#define     biw_busy_FREE                                 0x0
#define     biw_busy_BUSY                                 0x1
#define     al_OK                                         0x0
#define     al_LOST                                       0x1

#define PER_BIW0_IE_0                            0xf4329174
#define PER_BIW0_IE_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwe                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_INT_0                           0xf4329178
#define PER_BIW0_INT_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwi                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_IE_1                            0xf432917c
#define PER_BIW0_IE_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwe                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_INT_1                           0xf4329180
#define PER_BIW0_INT_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwi                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW0_STAT                            0xf4329184
#define PER_BIW0_STAT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biws                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW0_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_CFG                             0xf4329188
#define PER_BIW1_CFG_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t core_en              :  1 ; /* bits 0:0 */
    ca_uint32_t biw_soft_reset       :  1 ; /* bits 1:1 */
    ca_uint32_t busywait_en          :  1 ; /* bits 2:2 */
    ca_uint32_t stretch_en           :  1 ; /* bits 3:3 */
    ca_uint32_t arb_en               :  1 ; /* bits 4:4 */
    ca_uint32_t clksync_en           :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t spike_cnt            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t prer                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_CTRL                            0xf432918c
#define PER_BIW1_CTRL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwdone              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ack_in               :  1 ; /* bits 3:3 */
    ca_uint32_t write                :  1 ; /* bits 4:4 */
    ca_uint32_t read                 :  1 ; /* bits 5:5 */
    ca_uint32_t stop                 :  1 ; /* bits 6:6 */
    ca_uint32_t start                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_TXR                             0xf4329190
#define PER_BIW1_TXR_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txr                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_TXR_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_RXR                             0xf4329194
#define PER_BIW1_RXR_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxr                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_RXR_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_ACK                             0xf4329198
#define PER_BIW1_ACK_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t al                   :  1 ; /* bits 0:0 */
    ca_uint32_t biw_busy             :  1 ; /* bits 1:1 */
    ca_uint32_t ack_out              :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_ACK_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_IE_0                            0xf432919c
#define PER_BIW1_IE_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwe                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_INT_0                           0xf43291a0
#define PER_BIW1_INT_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwi                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_IE_1                            0xf43291a4
#define PER_BIW1_IE_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwe                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_INT_1                           0xf43291a8
#define PER_BIW1_INT_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biwi                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_BIW1_STAT                            0xf43291ac
#define PER_BIW1_STAT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t biws                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_BIW1_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_CFG                            0xf43291b0
#define PER_UART0_CFG_dft                        0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t char_cnt             :  2 ; /* bits 1:0 */
    ca_uint32_t uart_stop_2bit       :  1 ; /* bits 2:2 */
    ca_uint32_t even_parity_sel      :  1 ; /* bits 3:3 */
    ca_uint32_t uart_parity_en       :  1 ; /* bits 4:4 */
    ca_uint32_t tx_sm_enable         :  1 ; /* bits 5:5 */
    ca_uint32_t rx_sm_enable         :  1 ; /* bits 6:6 */
    ca_uint32_t uart_en              :  1 ; /* bits 7:7 */
    ca_uint32_t baud_count           : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     uart_en_DIS                                   0x0
#define     uart_en_ENA                                   0x1
#define     rx_sm_enable_DIS                              0x0
#define     rx_sm_enable_ENA                              0x1
#define     tx_sm_enable_DIS                              0x0
#define     tx_sm_enable_ENA                              0x1
#define     uart_parity_en_DIS                            0x0
#define     uart_parity_en_ENA                            0x1
#define     even_parity_sel_ODD                           0x0
#define     even_parity_sel_EvEN                          0x1
#define     uart_stop_2bit_1                              0x0
#define     uart_stop_2bit_2                              0x1
#define     char_cnt_5                                    0x0
#define     char_cnt_6                                    0x1
#define     char_cnt_7                                    0x2
#define     char_cnt_8                                    0x3

#define PER_UART0_FC                             0xf43291b4
#define PER_UART0_FC_dft                         0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_wm                :  6 ; /* bits 5:0 */
    ca_uint32_t inv_cts              :  1 ; /* bits 6:6 */
    ca_uint32_t no_cts               :  1 ; /* bits 7:7 */
    ca_uint32_t cts_reg              :  1 ; /* bits 8:8 */
    ca_uint32_t inv_rts              :  1 ; /* bits 9:9 */
    ca_uint32_t no_rts               :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_FC_t;
#endif /* !__ASSEMBLER__ */

#define     no_rts_ENA                                    0x0
#define     no_rts_DIS                                    0x1
#define     inv_rts_POS                                   0x0
#define     inv_rts_NEG                                   0x1
#define     no_cts_ENA                                    0x0
#define     no_cts_DIS                                    0x1
#define     inv_cts_POS                                   0x0
#define     inv_cts_NEG                                   0x1

#define PER_UART0_RX_SAMPLE                      0xf43291b8
#define PER_UART0_RX_SAMPLE_dft                  0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_center            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_TUN                            0xf43291bc
#define PER_UART0_TUN_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fine_tune_ctl     :  8 ; /* bits 7:0 */
    ca_uint32_t rx_tune_add          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t tx_fine_tune_ctl     :  8 ; /* bits 23:16 */
    ca_uint32_t tx_tune_add          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_TUN_t;
#endif /* !__ASSEMBLER__ */

#define     tx_tune_add_FASTER                            0x0
#define     tx_tune_add_SLOWER                            0x1
#define     rx_tune_add_FASTER                            0x0
#define     rx_tune_add_SLOWER                            0x1

#define PER_UART0_TXDAT                          0xf43291c0
#define PER_UART0_TXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_data              :  8 ; /* bits 7:0 */
    ca_uint32_t send_break           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_TXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_RXDAT                          0xf43291c4
#define PER_UART0_RXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_data_lat          :  8 ; /* bits 7:0 */
    ca_uint32_t rx_data_vld          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_RXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_INFO                           0xf43291c8
#define PER_UART0_INFO_dft                       0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fifo_full         :  1 ; /* bits 0:0 */
    ca_uint32_t rx_fifo_empty        :  1 ; /* bits 1:1 */
    ca_uint32_t tx_fifo_full         :  1 ; /* bits 2:2 */
    ca_uint32_t tx_fifo_empty        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_IE_0                           0xf43291cc
#define PER_UART0_IE_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_IE_1                           0xf43291d0
#define PER_UART0_IE_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_INT_0                          0xf43291d4
#define PER_UART0_INT_0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_INT_1                          0xf43291d8
#define PER_UART0_INT_1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART0_STAT                           0xf43291dc
#define PER_UART0_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruns     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_errs         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_errs       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruns     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruns    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptys       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptys    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaks            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART0_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_CFG                            0xf43291e0
#define PER_UART1_CFG_dft                        0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t char_cnt             :  2 ; /* bits 1:0 */
    ca_uint32_t uart_stop_2bit       :  1 ; /* bits 2:2 */
    ca_uint32_t even_parity_sel      :  1 ; /* bits 3:3 */
    ca_uint32_t uart_parity_en       :  1 ; /* bits 4:4 */
    ca_uint32_t tx_sm_enable         :  1 ; /* bits 5:5 */
    ca_uint32_t rx_sm_enable         :  1 ; /* bits 6:6 */
    ca_uint32_t uart_en              :  1 ; /* bits 7:7 */
    ca_uint32_t baud_count           : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_FC                             0xf43291e4
#define PER_UART1_FC_dft                         0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_wm                :  6 ; /* bits 5:0 */
    ca_uint32_t inv_cts              :  1 ; /* bits 6:6 */
    ca_uint32_t no_cts               :  1 ; /* bits 7:7 */
    ca_uint32_t cts_reg              :  1 ; /* bits 8:8 */
    ca_uint32_t inv_rts              :  1 ; /* bits 9:9 */
    ca_uint32_t no_rts               :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_FC_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_RX_SAMPLE                      0xf43291e8
#define PER_UART1_RX_SAMPLE_dft                  0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_center            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_TUN                            0xf43291ec
#define PER_UART1_TUN_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fine_tune_ctl     :  8 ; /* bits 7:0 */
    ca_uint32_t rx_tune_add          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t tx_fine_tune_ctl     :  8 ; /* bits 23:16 */
    ca_uint32_t tx_tune_add          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_TUN_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_TXDAT                          0xf43291f0
#define PER_UART1_TXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_data              :  8 ; /* bits 7:0 */
    ca_uint32_t send_break           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_TXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_RXDAT                          0xf43291f4
#define PER_UART1_RXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_data_lat          :  8 ; /* bits 7:0 */
    ca_uint32_t rx_data_vld          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_RXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_INFO                           0xf43291f8
#define PER_UART1_INFO_dft                       0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fifo_full         :  1 ; /* bits 0:0 */
    ca_uint32_t rx_fifo_empty        :  1 ; /* bits 1:1 */
    ca_uint32_t tx_fifo_full         :  1 ; /* bits 2:2 */
    ca_uint32_t tx_fifo_empty        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_IE_0                           0xf43291fc
#define PER_UART1_IE_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_IE_1                           0xf4329200
#define PER_UART1_IE_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_INT_0                          0xf4329204
#define PER_UART1_INT_0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_INT_1                          0xf4329208
#define PER_UART1_INT_1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART1_STAT                           0xf432920c
#define PER_UART1_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruns     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_errs         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_errs       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruns     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruns    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptys       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptys    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaks            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART1_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_CFG                            0xf4329210
#define PER_UART2_CFG_dft                        0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t char_cnt             :  2 ; /* bits 1:0 */
    ca_uint32_t uart_stop_2bit       :  1 ; /* bits 2:2 */
    ca_uint32_t even_parity_sel      :  1 ; /* bits 3:3 */
    ca_uint32_t uart_parity_en       :  1 ; /* bits 4:4 */
    ca_uint32_t tx_sm_enable         :  1 ; /* bits 5:5 */
    ca_uint32_t rx_sm_enable         :  1 ; /* bits 6:6 */
    ca_uint32_t uart_en              :  1 ; /* bits 7:7 */
    ca_uint32_t baud_count           : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_FC                             0xf4329214
#define PER_UART2_FC_dft                         0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_wm                :  6 ; /* bits 5:0 */
    ca_uint32_t inv_cts              :  1 ; /* bits 6:6 */
    ca_uint32_t no_cts               :  1 ; /* bits 7:7 */
    ca_uint32_t cts_reg              :  1 ; /* bits 8:8 */
    ca_uint32_t inv_rts              :  1 ; /* bits 9:9 */
    ca_uint32_t no_rts               :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_FC_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_RX_SAMPLE                      0xf4329218
#define PER_UART2_RX_SAMPLE_dft                  0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_center            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_TUN                            0xf432921c
#define PER_UART2_TUN_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fine_tune_ctl     :  8 ; /* bits 7:0 */
    ca_uint32_t rx_tune_add          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t tx_fine_tune_ctl     :  8 ; /* bits 23:16 */
    ca_uint32_t tx_tune_add          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_TUN_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_TXDAT                          0xf4329220
#define PER_UART2_TXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_data              :  8 ; /* bits 7:0 */
    ca_uint32_t send_break           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_TXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_RXDAT                          0xf4329224
#define PER_UART2_RXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_data_lat          :  8 ; /* bits 7:0 */
    ca_uint32_t rx_data_vld          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_RXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_INFO                           0xf4329228
#define PER_UART2_INFO_dft                       0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fifo_full         :  1 ; /* bits 0:0 */
    ca_uint32_t rx_fifo_empty        :  1 ; /* bits 1:1 */
    ca_uint32_t tx_fifo_full         :  1 ; /* bits 2:2 */
    ca_uint32_t tx_fifo_empty        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_IE_0                           0xf432922c
#define PER_UART2_IE_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_IE_1                           0xf4329230
#define PER_UART2_IE_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_INT_0                          0xf4329234
#define PER_UART2_INT_0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_INT_1                          0xf4329238
#define PER_UART2_INT_1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART2_STAT                           0xf432923c
#define PER_UART2_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruns     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_errs         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_errs       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruns     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruns    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptys       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptys    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaks            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART2_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_CFG                            0xf4329240
#define PER_UART3_CFG_dft                        0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t char_cnt             :  2 ; /* bits 1:0 */
    ca_uint32_t uart_stop_2bit       :  1 ; /* bits 2:2 */
    ca_uint32_t even_parity_sel      :  1 ; /* bits 3:3 */
    ca_uint32_t uart_parity_en       :  1 ; /* bits 4:4 */
    ca_uint32_t tx_sm_enable         :  1 ; /* bits 5:5 */
    ca_uint32_t rx_sm_enable         :  1 ; /* bits 6:6 */
    ca_uint32_t uart_en              :  1 ; /* bits 7:7 */
    ca_uint32_t baud_count           : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_FC                             0xf4329244
#define PER_UART3_FC_dft                         0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_wm                :  6 ; /* bits 5:0 */
    ca_uint32_t inv_cts              :  1 ; /* bits 6:6 */
    ca_uint32_t no_cts               :  1 ; /* bits 7:7 */
    ca_uint32_t cts_reg              :  1 ; /* bits 8:8 */
    ca_uint32_t inv_rts              :  1 ; /* bits 9:9 */
    ca_uint32_t no_rts               :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_FC_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_RX_SAMPLE                      0xf4329248
#define PER_UART3_RX_SAMPLE_dft                  0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_center            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_TUN                            0xf432924c
#define PER_UART3_TUN_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fine_tune_ctl     :  8 ; /* bits 7:0 */
    ca_uint32_t rx_tune_add          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t tx_fine_tune_ctl     :  8 ; /* bits 23:16 */
    ca_uint32_t tx_tune_add          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_TUN_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_TXDAT                          0xf4329250
#define PER_UART3_TXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_data              :  8 ; /* bits 7:0 */
    ca_uint32_t send_break           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_TXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_RXDAT                          0xf4329254
#define PER_UART3_RXDAT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_data_lat          :  8 ; /* bits 7:0 */
    ca_uint32_t rx_data_vld          :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_RXDAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_INFO                           0xf4329258
#define PER_UART3_INFO_dft                       0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fifo_full         :  1 ; /* bits 0:0 */
    ca_uint32_t rx_fifo_empty        :  1 ; /* bits 1:1 */
    ca_uint32_t tx_fifo_full         :  1 ; /* bits 2:2 */
    ca_uint32_t tx_fifo_empty        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_INFO_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_IE_0                           0xf432925c
#define PER_UART3_IE_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_IE_1                           0xf4329260
#define PER_UART3_IE_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overrune     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erre         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erre       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overrune     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underrune    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptye       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptye    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breake            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_INT_0                          0xf4329264
#define PER_UART3_INT_0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_INT_1                          0xf4329268
#define PER_UART3_INT_1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruni     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_erri         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_erri       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruni     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruni    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptyi       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptyi    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaki            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_UART3_STAT                           0xf432926c
#define PER_UART3_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo_overruns     :  1 ; /* bits 0:0 */
    ca_uint32_t rx_stop_errs         :  1 ; /* bits 1:1 */
    ca_uint32_t rx_parity_errs       :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fifo_overruns     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_fifo_underruns    :  1 ; /* bits 4:4 */
    ca_uint32_t tx_fifo_emptys       :  1 ; /* bits 5:5 */
    ca_uint32_t rx_fifo_nonemptys    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_breaks            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_UART3_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_TOD_CFG                              0xf4329270
#define PER_TOD_CFG_dft                          0x00000026

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tod_counter          :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tod_en               :  1 ; /* bits 7:7 */
    ca_uint32_t tod_uart             :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_TOD_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_TOD_MEM                              0xf4329280
#define PER_TOD_MEM_STRIDE                       4
#define PER_TOD_MEM_COUNT                        16
#define PER_TOD_MEM_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tod_bst_mem          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_TOD_MEM_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO0_CFG                            0xf43292c0
#define PER_GPIO0_CFG_dft                        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopmod               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define     iopmod_OUT                                    0x0
#define     iopmod_IN                                     0x1

#define PER_GPIO0_OUT                            0xf43292c4
#define PER_GPIO0_OUT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dataout              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_OUT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO0_IN                             0xf43292c8
#define PER_GPIO0_IN_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopdata              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_IN_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO0_LVL                            0xf43292cc
#define PER_GPIO0_LVL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t level                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_LVL_t;
#endif /* !__ASSEMBLER__ */

#define     level_LOW                                     0x0
#define     level_HIGH                                    0x1

#define PER_GPIO0_EDGE                           0xf43292d0
#define PER_GPIO0_EDGE_dft                       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_edge               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_EDGE_t;
#endif /* !__ASSEMBLER__ */

#define     i_edge_LOW                                    0x0
#define     i_edge_HIGH                                   0x1

#define PER_GPIO0_BOTHEDGE                       0xf43292d4
#define PER_GPIO0_BOTHEDGE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_bothedge           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */

#define     i_bothedge_LOW                                0x0
#define     i_bothedge_HIGH                               0x1

#define PER_GPIO0_IE                             0xf43292d8
#define PER_GPIO0_IE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioe                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_IE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO0_INT                            0xf43292dc
#define PER_GPIO0_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioi                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_INT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO0_STAT                           0xf43292e0
#define PER_GPIO0_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpios                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO0_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_CFG                            0xf43292e4
#define PER_GPIO1_CFG_dft                        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopmod               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_OUT                            0xf43292e8
#define PER_GPIO1_OUT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dataout              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_OUT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_IN                             0xf43292ec
#define PER_GPIO1_IN_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopdata              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_IN_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_LVL                            0xf43292f0
#define PER_GPIO1_LVL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t level                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_LVL_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_EDGE                           0xf43292f4
#define PER_GPIO1_EDGE_dft                       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_edge               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_EDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_BOTHEDGE                       0xf43292f8
#define PER_GPIO1_BOTHEDGE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_bothedge           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_IE                             0xf43292fc
#define PER_GPIO1_IE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioe                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_IE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_INT                            0xf4329300
#define PER_GPIO1_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioi                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_INT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO1_STAT                           0xf4329304
#define PER_GPIO1_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpios                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO1_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_CFG                            0xf4329308
#define PER_GPIO2_CFG_dft                        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopmod               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_OUT                            0xf432930c
#define PER_GPIO2_OUT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dataout              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_OUT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_IN                             0xf4329310
#define PER_GPIO2_IN_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopdata              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_IN_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_LVL                            0xf4329314
#define PER_GPIO2_LVL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t level                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_LVL_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_EDGE                           0xf4329318
#define PER_GPIO2_EDGE_dft                       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_edge               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_EDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_BOTHEDGE                       0xf432931c
#define PER_GPIO2_BOTHEDGE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_bothedge           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_IE                             0xf4329320
#define PER_GPIO2_IE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioe                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_IE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_INT                            0xf4329324
#define PER_GPIO2_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioi                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_INT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO2_STAT                           0xf4329328
#define PER_GPIO2_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpios                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO2_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_CFG                            0xf432932c
#define PER_GPIO3_CFG_dft                        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopmod               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_OUT                            0xf4329330
#define PER_GPIO3_OUT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dataout              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_OUT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_IN                             0xf4329334
#define PER_GPIO3_IN_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopdata              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_IN_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_LVL                            0xf4329338
#define PER_GPIO3_LVL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t level                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_LVL_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_EDGE                           0xf432933c
#define PER_GPIO3_EDGE_dft                       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_edge               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_EDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_BOTHEDGE                       0xf4329340
#define PER_GPIO3_BOTHEDGE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_bothedge           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_IE                             0xf4329344
#define PER_GPIO3_IE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioe                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_IE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_INT                            0xf4329348
#define PER_GPIO3_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioi                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_INT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO3_STAT                           0xf432934c
#define PER_GPIO3_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpios                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO3_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_CFG                            0xf4329350
#define PER_GPIO4_CFG_dft                        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopmod               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_OUT                            0xf4329354
#define PER_GPIO4_OUT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dataout              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_OUT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_IN                             0xf4329358
#define PER_GPIO4_IN_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t iopdata              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_IN_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_LVL                            0xf432935c
#define PER_GPIO4_LVL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t level                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_LVL_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_EDGE                           0xf4329360
#define PER_GPIO4_EDGE_dft                       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_edge               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_EDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_BOTHEDGE                       0xf4329364
#define PER_GPIO4_BOTHEDGE_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t i_bothedge           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_IE                             0xf4329368
#define PER_GPIO4_IE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioe                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_IE_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_INT                            0xf432936c
#define PER_GPIO4_INT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpioi                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_INT_t;
#endif /* !__ASSEMBLER__ */


#define PER_GPIO4_STAT                           0xf4329370
#define PER_GPIO4_STAT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpios                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_GPIO4_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER1                           0xf4329374
#define PER_SYS_TIMER1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gtimer1              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER0                           0xf4329378
#define PER_SYS_TIMER0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gtimer0              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_01          0xf432937c
#define PER_SYS_TIMER_COMPARATOR_CPU_01_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_01_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_00          0xf4329380
#define PER_SYS_TIMER_COMPARATOR_CPU_00_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_00_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_01             0xf4329384
#define PER_SYS_TIMER_AUTOINC_CPU_01_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_01_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_00             0xf4329388
#define PER_SYS_TIMER_AUTOINC_CPU_00_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_00_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_0_INTENABLE            0xf432938c
#define PER_SYS_TIMER_CPU_0_INTENABLE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimere            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_0_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_0_INTERRUPT            0xf4329390
#define PER_SYS_TIMER_CPU_0_INTERRUPT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimeri            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_0_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_11          0xf4329394
#define PER_SYS_TIMER_COMPARATOR_CPU_11_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_11_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_10          0xf4329398
#define PER_SYS_TIMER_COMPARATOR_CPU_10_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_10_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_11             0xf432939c
#define PER_SYS_TIMER_AUTOINC_CPU_11_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_11_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_10             0xf43293a0
#define PER_SYS_TIMER_AUTOINC_CPU_10_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_10_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_1_INTENABLE            0xf43293a4
#define PER_SYS_TIMER_CPU_1_INTENABLE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimere            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_1_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_1_INTERRUPT            0xf43293a8
#define PER_SYS_TIMER_CPU_1_INTERRUPT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimeri            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_1_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_21          0xf43293ac
#define PER_SYS_TIMER_COMPARATOR_CPU_21_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_21_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_20          0xf43293b0
#define PER_SYS_TIMER_COMPARATOR_CPU_20_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_20_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_21             0xf43293b4
#define PER_SYS_TIMER_AUTOINC_CPU_21_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_21_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_20             0xf43293b8
#define PER_SYS_TIMER_AUTOINC_CPU_20_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_20_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_2_INTENABLE            0xf43293bc
#define PER_SYS_TIMER_CPU_2_INTENABLE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimere            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_2_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_2_INTERRUPT            0xf43293c0
#define PER_SYS_TIMER_CPU_2_INTERRUPT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimeri            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_2_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_31          0xf43293c4
#define PER_SYS_TIMER_COMPARATOR_CPU_31_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_31_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_CPU_30          0xf43293c8
#define PER_SYS_TIMER_COMPARATOR_CPU_30_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_CPU_30_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_31             0xf43293cc
#define PER_SYS_TIMER_AUTOINC_CPU_31_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_31_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_CPU_30             0xf43293d0
#define PER_SYS_TIMER_AUTOINC_CPU_30_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_CPU_30_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_3_INTENABLE            0xf43293d4
#define PER_SYS_TIMER_CPU_3_INTENABLE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimere            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_3_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_CPU_3_INTERRUPT            0xf43293d8
#define PER_SYS_TIMER_CPU_3_INTERRUPT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimeri            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_CPU_3_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_SECURE1         0xf43293dc
#define PER_SYS_TIMER_COMPARATOR_SECURE1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_SECURE1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_COMPARATOR_SECURE0         0xf43293e0
#define PER_SYS_TIMER_COMPARATOR_SECURE0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_COMPARATOR_SECURE0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_SECURE1            0xf43293e4
#define PER_SYS_TIMER_AUTOINC_SECURE1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_SECURE1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_AUTOINC_SECURE0            0xf43293e8
#define PER_SYS_TIMER_AUTOINC_SECURE0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t autoinc0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_AUTOINC_SECURE0_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_SECURE_INTENABLE           0xf43293ec
#define PER_SYS_TIMER_SECURE_INTENABLE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimere            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_SECURE_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SYS_TIMER_SECURE_INTERRUPT           0xf43293f0
#define PER_SYS_TIMER_SECURE_INTERRUPT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t systimeri            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SYS_TIMER_SECURE_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PER_PWM_TIMER_PERIOD_0                   0xf43293f4
#define PER_PWM_TIMER_PERIOD_0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t period               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_PWM_TIMER_PERIOD_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_PWM_TIMER_COMP_0                     0xf43293f8
#define PER_PWM_TIMER_COMP_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_PWM_TIMER_COMP_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_PWM_TIMER_PERIOD_1                   0xf43293fc
#define PER_PWM_TIMER_PERIOD_1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t period               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_PWM_TIMER_PERIOD_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_PWM_TIMER_COMP_1                     0xf4329400
#define PER_PWM_TIMER_COMP_1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t comp                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_PWM_TIMER_COMP_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_CLK                             0xf4329404
#define PER_CSPI_CLK_dft                         0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t divisor              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t cpha                 :  1 ; /* bits 30:30 */
    ca_uint32_t cpol                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_CLK_t;
#endif /* !__ASSEMBLER__ */

#define     cpol_IDLE0                                    0x0
#define     cpol_IDLE1                                    0x1
#define     cpha_RXFIRST                                  0x0
#define     cpha_TXFIRST                                  0x1

#define PER_CSPI_FMT                             0xf4329408
#define PER_CSPI_FMT_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t highbit              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t frontporch           :  8 ; /* bits 15:8 */
    ca_uint32_t backporch            :  8 ; /* bits 23:16 */
    ca_uint32_t gap                  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_FMT_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_CS                              0xf432940c
#define PER_CSPI_CS_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t active_hi            :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 18 ;
    ca_uint32_t force                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_CS_t;
#endif /* !__ASSEMBLER__ */

#define     force_NORM                                    0x0
#define     force_FORCE                                   0x1
#define     active_hi_ACT_LO                              0x0
#define     active_hi_ACT_HI                              0x1
#define     enable_DISABLED                               0x0
#define     enable_ENABLED                                0x1

#define PER_CSPI_WDATA1                          0xf4329410
#define PER_CSPI_WDATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdata1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_WDATA1_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_WDATA0                          0xf4329414
#define PER_CSPI_WDATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wdata0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_WDATA0_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_RDATA1                          0xf4329418
#define PER_CSPI_RDATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdata1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_RDATA1_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_RDATA0                          0xf432941c
#define PER_CSPI_RDATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rdata0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_RDATA0_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_CONTROL                         0xf4329420
#define PER_CSPI_CONTROL_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t start                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_IE_0                            0xf4329424
#define PER_CSPI_IE_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cspie                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_INT_0                           0xf4329428
#define PER_CSPI_INT_0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cspii                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_IE_1                            0xf432942c
#define PER_CSPI_IE_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cspie                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_INT_1                           0xf4329430
#define PER_CSPI_INT_1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cspii                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_CSPI_STAT                            0xf4329434
#define PER_CSPI_STAT_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cspis                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_CSPI_STAT_t;
#endif /* !__ASSEMBLER__ */


#define PER_SECURE_WDT_TIMER_INTENABLE           0xf4329438
#define PER_SECURE_WDT_TIMER_INTENABLE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t secure_wdte          :  1 ; /* bits 0:0 */
    ca_uint32_t secure_timere        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SECURE_WDT_TIMER_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PER_SECURE_WDT_TIMER_INTERRUPT           0xf432943c
#define PER_SECURE_WDT_TIMER_INTERRUPT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t secure_wdti          :  1 ; /* bits 0:0 */
    ca_uint32_t secure_timeri        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_SECURE_WDT_TIMER_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PER_DYING_GASP                           0xf4329440
#define PER_DYING_GASP_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dg_ifsel             :  3 ; /* bits 2:0 */
    ca_uint32_t dg_bitsel            :  5 ; /* bits 7:3 */
    ca_uint32_t dg_enable            :  1 ; /* bits 8:8 */
    ca_uint32_t dg_pol               :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DYING_GASP_t;
#endif /* !__ASSEMBLER__ */


#define PER_DG_IE_0                              0xf4329444
#define PER_DG_IE_0_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dge                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DG_IE_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_DG_INT_0                             0xf4329448
#define PER_DG_INT_0_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dgi                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DG_INT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_DG_STAT_0                            0xf432944c
#define PER_DG_STAT_0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dgs                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DG_STAT_0_t;
#endif /* !__ASSEMBLER__ */


#define PER_DG_IE_1                              0xf4329450
#define PER_DG_IE_1_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dge                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DG_IE_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_DG_INT_1                             0xf4329454
#define PER_DG_INT_1_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dgi                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DG_INT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_DG_STAT_1                            0xf4329458
#define PER_DG_STAT_1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dgs                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PER_DG_STAT_1_t;
#endif /* !__ASSEMBLER__ */


#define PER_SPARE                                0xf432945c
#define PER_SPARE_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PER_SPARE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PER */
#ifndef __ASSEMBLER__
typedef struct {
  PER_SOFT_RESET_t                         SOFT_RESET;                    /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PER_PERIPHERAL_INTERRUPT_0_t             PERIPHERAL_INTERRUPT_0;        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PER_PERIPHERAL_INTENABLE_0_t             PERIPHERAL_INTENABLE_0;        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PER_PERIPHERAL_INTERRUPT_1_t             PERIPHERAL_INTERRUPT_1;        /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PER_PERIPHERAL_INTENABLE_1_t             PERIPHERAL_INTENABLE_1;        /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PER_IRQ_SOFT1_t                          IRQ_SOFT1;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PER_IRQ_SOFT0_t                          IRQ_SOFT0;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PER_WDT_CTRL_t                           WDT_CTRL;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PER_WDT_PS_t                             WDT_PS;                        /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PER_WDT_DIV_t                            WDT_DIV;                       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PER_WDT_LD_t                             WDT_LD;                        /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PER_WDT_LOADE_t                          WDT_LOADE;                     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PER_WDT_CNT_t                            WDT_CNT;                       /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PER_WDT_IE_0_t                           WDT_IE_0;                      /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PER_WDT_INT_0_t                          WDT_INT_0;                     /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PER_WDT_STAT_0_t                         WDT_STAT_0;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PER_WDT_IE_1_t                           WDT_IE_1;                      /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PER_WDT_INT_1_t                          WDT_INT_1;                     /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PER_WDT_STAT_1_t                         WDT_STAT_1;                    /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PER_WDT_TST_t                            WDT_TST;                       /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PER_TMR_LD1_t                            TMR_LD1;                       /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PER_TMR_CTRL1_t                          TMR_CTRL1;                     /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PER_TMR_CNT1_t                           TMR_CNT1;                      /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PER_TMR_IE1_0_t                          TMR_IE1_0;                     /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PER_TMR_IE1_1_t                          TMR_IE1_1;                     /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PER_TMR_INT1_0_t                         TMR_INT1_0;                    /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PER_TMR_INT1_1_t                         TMR_INT1_1;                    /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PER_TMR_STAT1_t                          TMR_STAT1;                     /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PER_TMR_LD2_t                            TMR_LD2;                       /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PER_TMR_CTRL2_t                          TMR_CTRL2;                     /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PER_TMR_CNT2_t                           TMR_CNT2;                      /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PER_TMR_IE2_0_t                          TMR_IE2_0;                     /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PER_TMR_IE2_1_t                          TMR_IE2_1;                     /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PER_TMR_INT2_0_t                         TMR_INT2_0;                    /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PER_TMR_INT2_1_t                         TMR_INT2_1;                    /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  PER_TMR_STAT2_t                          TMR_STAT2;                     /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  PER_TMR_LD3_t                            TMR_LD3;                       /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  PER_TMR_CTRL3_t                          TMR_CTRL3;                     /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  PER_TMR_CNT3_t                           TMR_CNT3;                      /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  PER_TMR_IE3_0_t                          TMR_IE3_0;                     /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  PER_TMR_IE3_1_t                          TMR_IE3_1;                     /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  PER_TMR_INT3_0_t                         TMR_INT3_0;                    /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  PER_TMR_INT3_1_t                         TMR_INT3_1;                    /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  PER_TMR_STAT3_t                          TMR_STAT3;                     /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  PER_TMR_LD4_t                            TMR_LD4;                       /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  PER_TMR_CTRL4_t                          TMR_CTRL4;                     /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  PER_TMR_CNT4_t                           TMR_CNT4;                      /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  PER_TMR_IE4_0_t                          TMR_IE4_0;                     /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  PER_TMR_IE4_1_t                          TMR_IE4_1;                     /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  PER_TMR_INT4_0_t                         TMR_INT4_0;                    /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  PER_TMR_INT4_1_t                         TMR_INT4_1;                    /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  PER_TMR_STAT4_t                          TMR_STAT4;                     /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  PER_TMR_LOADE_t                          TMR_LOADE;                     /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  PER_TMR_TST_t                            TMR_TST;                       /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  PER_SPI_CLK_t                            SPI_CLK;                       /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  PER_SPI_CFG_t                            SPI_CFG;                       /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  PER_SPI_MODE_t                           SPI_MODE;                      /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  PER_SPI_CTRL_t                           SPI_CTRL;                      /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  PER_SPI_CA0_t                            SPI_CA0;                       /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  PER_SPI_CA1_t                            SPI_CA1;                       /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  PER_SPI_CA2_t                            SPI_CA2;                       /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  PER_SPI_WDAT1_t                          SPI_WDAT1;                     /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  PER_SPI_WDAT0_t                          SPI_WDAT0;                     /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  PER_SPI_RDAT1_t                          SPI_RDAT1;                     /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  PER_SPI_RDAT0_t                          SPI_RDAT0;                     /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  PER_SPI_IE_0_t                           SPI_IE_0;                      /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  PER_SPI_INT_0_t                          SPI_INT_0;                     /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  PER_SPI_IE_1_t                           SPI_IE_1;                      /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  PER_SPI_INT_1_t                          SPI_INT_1;                     /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  PER_SPI_STAT_t                           SPI_STAT;                      /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  PER_MDIO_CFG_t                           MDIO_CFG;                      /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  PER_MDIO_ADDR_t                          MDIO_ADDR;                     /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  PER_MDIO_WRDATA_t                        MDIO_WRDATA;                   /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  PER_MDIO_RDDATA_t                        MDIO_RDDATA;                   /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  PER_MDIO_CTRL_t                          MDIO_CTRL;                     /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  PER_MDIO_AUTO_CFG_t                      MDIO_AUTO_CFG;                 /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  PER_MDIO_AUTO_INTV_t                     MDIO_AUTO_INTV;                /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  PER_MDIO_AUTO_RM_t                       MDIO_AUTO_RM;                  /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  PER_MDIO_AUTO_AADDR_t                    MDIO_AUTO_AADDR;               /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  PER_MDIO_ENTAB0_t                        MDIO_ENTAB0;                   /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  PER_MDIO_ENTAB1_t                        MDIO_ENTAB1;                   /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  PER_MDIO_ITAB0_t                         MDIO_ITAB0;                    /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  PER_MDIO_ITAB1_t                         MDIO_ITAB1;                    /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  PER_MDIO_IE_0_t                          MDIO_IE_0;                     /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  PER_MDIO_INT_0_t                         MDIO_INT_0;                    /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  PER_MDIO_IE_1_t                          MDIO_IE_1;                     /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  PER_MDIO_INT_1_t                         MDIO_INT_1;                    /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  PER_MDIO_STAT_t                          MDIO_STAT;                     /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  PER_BIW0_CFG_t                           BIW0_CFG;                      /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  PER_BIW0_CTRL_t                          BIW0_CTRL;                     /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  PER_BIW0_TXR_t                           BIW0_TXR;                      /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  PER_BIW0_RXR_t                           BIW0_RXR;                      /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  PER_BIW0_ACK_t                           BIW0_ACK;                      /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  PER_BIW0_IE_0_t                          BIW0_IE_0;                     /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  PER_BIW0_INT_0_t                         BIW0_INT_0;                    /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  PER_BIW0_IE_1_t                          BIW0_IE_1;                     /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  PER_BIW0_INT_1_t                         BIW0_INT_1;                    /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  PER_BIW0_STAT_t                          BIW0_STAT;                     /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  PER_BIW1_CFG_t                           BIW1_CFG;                      /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  PER_BIW1_CTRL_t                          BIW1_CTRL;                     /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  PER_BIW1_TXR_t                           BIW1_TXR;                      /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  PER_BIW1_RXR_t                           BIW1_RXR;                      /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  PER_BIW1_ACK_t                           BIW1_ACK;                      /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  PER_BIW1_IE_0_t                          BIW1_IE_0;                     /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  PER_BIW1_INT_0_t                         BIW1_INT_0;                    /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  PER_BIW1_IE_1_t                          BIW1_IE_1;                     /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  PER_BIW1_INT_1_t                         BIW1_INT_1;                    /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  PER_BIW1_STAT_t                          BIW1_STAT;                     /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  PER_UART0_CFG_t                          UART0_CFG;                     /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  PER_UART0_FC_t                           UART0_FC;                      /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  PER_UART0_RX_SAMPLE_t                    UART0_RX_SAMPLE;               /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  PER_UART0_TUN_t                          UART0_TUN;                     /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  PER_UART0_TXDAT_t                        UART0_TXDAT;                   /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  PER_UART0_RXDAT_t                        UART0_RXDAT;                   /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  PER_UART0_INFO_t                         UART0_INFO;                    /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  PER_UART0_IE_0_t                         UART0_IE_0;                    /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd116[3];
  PER_UART0_IE_1_t                         UART0_IE_1;                    /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd117[3];
  PER_UART0_INT_0_t                        UART0_INT_0;                   /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd118[3];
  PER_UART0_INT_1_t                        UART0_INT_1;                   /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd119[3];
  PER_UART0_STAT_t                         UART0_STAT;                    /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd120[3];
  PER_UART1_CFG_t                          UART1_CFG;                     /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd121[3];
  PER_UART1_FC_t                           UART1_FC;                      /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd122[3];
  PER_UART1_RX_SAMPLE_t                    UART1_RX_SAMPLE;               /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd123[3];
  PER_UART1_TUN_t                          UART1_TUN;                     /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd124[3];
  PER_UART1_TXDAT_t                        UART1_TXDAT;                   /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd125[3];
  PER_UART1_RXDAT_t                        UART1_RXDAT;                   /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd126[3];
  PER_UART1_INFO_t                         UART1_INFO;                    /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd127[3];
  PER_UART1_IE_0_t                         UART1_IE_0;                    /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd128[3];
  PER_UART1_IE_1_t                         UART1_IE_1;                    /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd129[3];
  PER_UART1_INT_0_t                        UART1_INT_0;                   /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd130[3];
  PER_UART1_INT_1_t                        UART1_INT_1;                   /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd131[3];
  PER_UART1_STAT_t                         UART1_STAT;                    /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd132[3];
  PER_UART2_CFG_t                          UART2_CFG;                     /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd133[3];
  PER_UART2_FC_t                           UART2_FC;                      /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd134[3];
  PER_UART2_RX_SAMPLE_t                    UART2_RX_SAMPLE;               /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd135[3];
  PER_UART2_TUN_t                          UART2_TUN;                     /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd136[3];
  PER_UART2_TXDAT_t                        UART2_TXDAT;                   /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd137[3];
  PER_UART2_RXDAT_t                        UART2_RXDAT;                   /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd138[3];
  PER_UART2_INFO_t                         UART2_INFO;                    /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd139[3];
  PER_UART2_IE_0_t                         UART2_IE_0;                    /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd140[3];
  PER_UART2_IE_1_t                         UART2_IE_1;                    /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd141[3];
  PER_UART2_INT_0_t                        UART2_INT_0;                   /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd142[3];
  PER_UART2_INT_1_t                        UART2_INT_1;                   /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd143[3];
  PER_UART2_STAT_t                         UART2_STAT;                    /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd144[3];
  PER_UART3_CFG_t                          UART3_CFG;                     /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd145[3];
  PER_UART3_FC_t                           UART3_FC;                      /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd146[3];
  PER_UART3_RX_SAMPLE_t                    UART3_RX_SAMPLE;               /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd147[3];
  PER_UART3_TUN_t                          UART3_TUN;                     /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd148[3];
  PER_UART3_TXDAT_t                        UART3_TXDAT;                   /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd149[3];
  PER_UART3_RXDAT_t                        UART3_RXDAT;                   /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd150[3];
  PER_UART3_INFO_t                         UART3_INFO;                    /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd151[3];
  PER_UART3_IE_0_t                         UART3_IE_0;                    /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd152[3];
  PER_UART3_IE_1_t                         UART3_IE_1;                    /* addr: 0x00000260 */
  ca_uint32_t                              rsrvd153[3];
  PER_UART3_INT_0_t                        UART3_INT_0;                   /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd154[3];
  PER_UART3_INT_1_t                        UART3_INT_1;                   /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd155[3];
  PER_UART3_STAT_t                         UART3_STAT;                    /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd156[3];
  PER_TOD_CFG_t                            TOD_CFG;                       /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd157[15];
  PER_TOD_MEM_t                            TOD_MEM[16];                   /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd158[48];
  PER_GPIO0_CFG_t                          GPIO0_CFG;                     /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd159[3];
  PER_GPIO0_OUT_t                          GPIO0_OUT;                     /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd160[3];
  PER_GPIO0_IN_t                           GPIO0_IN;                      /* addr: 0x000002c8 */
  ca_uint32_t                              rsrvd161[3];
  PER_GPIO0_LVL_t                          GPIO0_LVL;                     /* addr: 0x000002cc */
  ca_uint32_t                              rsrvd162[3];
  PER_GPIO0_EDGE_t                         GPIO0_EDGE;                    /* addr: 0x000002d0 */
  ca_uint32_t                              rsrvd163[3];
  PER_GPIO0_BOTHEDGE_t                     GPIO0_BOTHEDGE;                /* addr: 0x000002d4 */
  ca_uint32_t                              rsrvd164[3];
  PER_GPIO0_IE_t                           GPIO0_IE;                      /* addr: 0x000002d8 */
  ca_uint32_t                              rsrvd165[3];
  PER_GPIO0_INT_t                          GPIO0_INT;                     /* addr: 0x000002dc */
  ca_uint32_t                              rsrvd166[3];
  PER_GPIO0_STAT_t                         GPIO0_STAT;                    /* addr: 0x000002e0 */
  ca_uint32_t                              rsrvd167[3];
  PER_GPIO1_CFG_t                          GPIO1_CFG;                     /* addr: 0x000002e4 */
  ca_uint32_t                              rsrvd168[3];
  PER_GPIO1_OUT_t                          GPIO1_OUT;                     /* addr: 0x000002e8 */
  ca_uint32_t                              rsrvd169[3];
  PER_GPIO1_IN_t                           GPIO1_IN;                      /* addr: 0x000002ec */
  ca_uint32_t                              rsrvd170[3];
  PER_GPIO1_LVL_t                          GPIO1_LVL;                     /* addr: 0x000002f0 */
  ca_uint32_t                              rsrvd171[3];
  PER_GPIO1_EDGE_t                         GPIO1_EDGE;                    /* addr: 0x000002f4 */
  ca_uint32_t                              rsrvd172[3];
  PER_GPIO1_BOTHEDGE_t                     GPIO1_BOTHEDGE;                /* addr: 0x000002f8 */
  ca_uint32_t                              rsrvd173[3];
  PER_GPIO1_IE_t                           GPIO1_IE;                      /* addr: 0x000002fc */
  ca_uint32_t                              rsrvd174[3];
  PER_GPIO1_INT_t                          GPIO1_INT;                     /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd175[3];
  PER_GPIO1_STAT_t                         GPIO1_STAT;                    /* addr: 0x00000304 */
  ca_uint32_t                              rsrvd176[3];
  PER_GPIO2_CFG_t                          GPIO2_CFG;                     /* addr: 0x00000308 */
  ca_uint32_t                              rsrvd177[3];
  PER_GPIO2_OUT_t                          GPIO2_OUT;                     /* addr: 0x0000030c */
  ca_uint32_t                              rsrvd178[3];
  PER_GPIO2_IN_t                           GPIO2_IN;                      /* addr: 0x00000310 */
  ca_uint32_t                              rsrvd179[3];
  PER_GPIO2_LVL_t                          GPIO2_LVL;                     /* addr: 0x00000314 */
  ca_uint32_t                              rsrvd180[3];
  PER_GPIO2_EDGE_t                         GPIO2_EDGE;                    /* addr: 0x00000318 */
  ca_uint32_t                              rsrvd181[3];
  PER_GPIO2_BOTHEDGE_t                     GPIO2_BOTHEDGE;                /* addr: 0x0000031c */
  ca_uint32_t                              rsrvd182[3];
  PER_GPIO2_IE_t                           GPIO2_IE;                      /* addr: 0x00000320 */
  ca_uint32_t                              rsrvd183[3];
  PER_GPIO2_INT_t                          GPIO2_INT;                     /* addr: 0x00000324 */
  ca_uint32_t                              rsrvd184[3];
  PER_GPIO2_STAT_t                         GPIO2_STAT;                    /* addr: 0x00000328 */
  ca_uint32_t                              rsrvd185[3];
  PER_GPIO3_CFG_t                          GPIO3_CFG;                     /* addr: 0x0000032c */
  ca_uint32_t                              rsrvd186[3];
  PER_GPIO3_OUT_t                          GPIO3_OUT;                     /* addr: 0x00000330 */
  ca_uint32_t                              rsrvd187[3];
  PER_GPIO3_IN_t                           GPIO3_IN;                      /* addr: 0x00000334 */
  ca_uint32_t                              rsrvd188[3];
  PER_GPIO3_LVL_t                          GPIO3_LVL;                     /* addr: 0x00000338 */
  ca_uint32_t                              rsrvd189[3];
  PER_GPIO3_EDGE_t                         GPIO3_EDGE;                    /* addr: 0x0000033c */
  ca_uint32_t                              rsrvd190[3];
  PER_GPIO3_BOTHEDGE_t                     GPIO3_BOTHEDGE;                /* addr: 0x00000340 */
  ca_uint32_t                              rsrvd191[3];
  PER_GPIO3_IE_t                           GPIO3_IE;                      /* addr: 0x00000344 */
  ca_uint32_t                              rsrvd192[3];
  PER_GPIO3_INT_t                          GPIO3_INT;                     /* addr: 0x00000348 */
  ca_uint32_t                              rsrvd193[3];
  PER_GPIO3_STAT_t                         GPIO3_STAT;                    /* addr: 0x0000034c */
  ca_uint32_t                              rsrvd194[3];
  PER_GPIO4_CFG_t                          GPIO4_CFG;                     /* addr: 0x00000350 */
  ca_uint32_t                              rsrvd195[3];
  PER_GPIO4_OUT_t                          GPIO4_OUT;                     /* addr: 0x00000354 */
  ca_uint32_t                              rsrvd196[3];
  PER_GPIO4_IN_t                           GPIO4_IN;                      /* addr: 0x00000358 */
  ca_uint32_t                              rsrvd197[3];
  PER_GPIO4_LVL_t                          GPIO4_LVL;                     /* addr: 0x0000035c */
  ca_uint32_t                              rsrvd198[3];
  PER_GPIO4_EDGE_t                         GPIO4_EDGE;                    /* addr: 0x00000360 */
  ca_uint32_t                              rsrvd199[3];
  PER_GPIO4_BOTHEDGE_t                     GPIO4_BOTHEDGE;                /* addr: 0x00000364 */
  ca_uint32_t                              rsrvd200[3];
  PER_GPIO4_IE_t                           GPIO4_IE;                      /* addr: 0x00000368 */
  ca_uint32_t                              rsrvd201[3];
  PER_GPIO4_INT_t                          GPIO4_INT;                     /* addr: 0x0000036c */
  ca_uint32_t                              rsrvd202[3];
  PER_GPIO4_STAT_t                         GPIO4_STAT;                    /* addr: 0x00000370 */
  ca_uint32_t                              rsrvd203[3];
  PER_SYS_TIMER1_t                         SYS_TIMER1;                    /* addr: 0x00000374 */
  ca_uint32_t                              rsrvd204[3];
  PER_SYS_TIMER0_t                         SYS_TIMER0;                    /* addr: 0x00000378 */
  ca_uint32_t                              rsrvd205[3];
  PER_SYS_TIMER_COMPARATOR_CPU_01_t        SYS_TIMER_COMPARATOR_CPU_01;   /* addr: 0x0000037c */
  ca_uint32_t                              rsrvd206[3];
  PER_SYS_TIMER_COMPARATOR_CPU_00_t        SYS_TIMER_COMPARATOR_CPU_00;   /* addr: 0x00000380 */
  ca_uint32_t                              rsrvd207[3];
  PER_SYS_TIMER_AUTOINC_CPU_01_t           SYS_TIMER_AUTOINC_CPU_01;      /* addr: 0x00000384 */
  ca_uint32_t                              rsrvd208[3];
  PER_SYS_TIMER_AUTOINC_CPU_00_t           SYS_TIMER_AUTOINC_CPU_00;      /* addr: 0x00000388 */
  ca_uint32_t                              rsrvd209[3];
  PER_SYS_TIMER_CPU_0_INTENABLE_t          SYS_TIMER_CPU_0_INTENABLE;     /* addr: 0x0000038c */
  ca_uint32_t                              rsrvd210[3];
  PER_SYS_TIMER_CPU_0_INTERRUPT_t          SYS_TIMER_CPU_0_INTERRUPT;     /* addr: 0x00000390 */
  ca_uint32_t                              rsrvd211[3];
  PER_SYS_TIMER_COMPARATOR_CPU_11_t        SYS_TIMER_COMPARATOR_CPU_11;   /* addr: 0x00000394 */
  ca_uint32_t                              rsrvd212[3];
  PER_SYS_TIMER_COMPARATOR_CPU_10_t        SYS_TIMER_COMPARATOR_CPU_10;   /* addr: 0x00000398 */
  ca_uint32_t                              rsrvd213[3];
  PER_SYS_TIMER_AUTOINC_CPU_11_t           SYS_TIMER_AUTOINC_CPU_11;      /* addr: 0x0000039c */
  ca_uint32_t                              rsrvd214[3];
  PER_SYS_TIMER_AUTOINC_CPU_10_t           SYS_TIMER_AUTOINC_CPU_10;      /* addr: 0x000003a0 */
  ca_uint32_t                              rsrvd215[3];
  PER_SYS_TIMER_CPU_1_INTENABLE_t          SYS_TIMER_CPU_1_INTENABLE;     /* addr: 0x000003a4 */
  ca_uint32_t                              rsrvd216[3];
  PER_SYS_TIMER_CPU_1_INTERRUPT_t          SYS_TIMER_CPU_1_INTERRUPT;     /* addr: 0x000003a8 */
  ca_uint32_t                              rsrvd217[3];
  PER_SYS_TIMER_COMPARATOR_CPU_21_t        SYS_TIMER_COMPARATOR_CPU_21;   /* addr: 0x000003ac */
  ca_uint32_t                              rsrvd218[3];
  PER_SYS_TIMER_COMPARATOR_CPU_20_t        SYS_TIMER_COMPARATOR_CPU_20;   /* addr: 0x000003b0 */
  ca_uint32_t                              rsrvd219[3];
  PER_SYS_TIMER_AUTOINC_CPU_21_t           SYS_TIMER_AUTOINC_CPU_21;      /* addr: 0x000003b4 */
  ca_uint32_t                              rsrvd220[3];
  PER_SYS_TIMER_AUTOINC_CPU_20_t           SYS_TIMER_AUTOINC_CPU_20;      /* addr: 0x000003b8 */
  ca_uint32_t                              rsrvd221[3];
  PER_SYS_TIMER_CPU_2_INTENABLE_t          SYS_TIMER_CPU_2_INTENABLE;     /* addr: 0x000003bc */
  ca_uint32_t                              rsrvd222[3];
  PER_SYS_TIMER_CPU_2_INTERRUPT_t          SYS_TIMER_CPU_2_INTERRUPT;     /* addr: 0x000003c0 */
  ca_uint32_t                              rsrvd223[3];
  PER_SYS_TIMER_COMPARATOR_CPU_31_t        SYS_TIMER_COMPARATOR_CPU_31;   /* addr: 0x000003c4 */
  ca_uint32_t                              rsrvd224[3];
  PER_SYS_TIMER_COMPARATOR_CPU_30_t        SYS_TIMER_COMPARATOR_CPU_30;   /* addr: 0x000003c8 */
  ca_uint32_t                              rsrvd225[3];
  PER_SYS_TIMER_AUTOINC_CPU_31_t           SYS_TIMER_AUTOINC_CPU_31;      /* addr: 0x000003cc */
  ca_uint32_t                              rsrvd226[3];
  PER_SYS_TIMER_AUTOINC_CPU_30_t           SYS_TIMER_AUTOINC_CPU_30;      /* addr: 0x000003d0 */
  ca_uint32_t                              rsrvd227[3];
  PER_SYS_TIMER_CPU_3_INTENABLE_t          SYS_TIMER_CPU_3_INTENABLE;     /* addr: 0x000003d4 */
  ca_uint32_t                              rsrvd228[3];
  PER_SYS_TIMER_CPU_3_INTERRUPT_t          SYS_TIMER_CPU_3_INTERRUPT;     /* addr: 0x000003d8 */
  ca_uint32_t                              rsrvd229[3];
  PER_SYS_TIMER_COMPARATOR_SECURE1_t       SYS_TIMER_COMPARATOR_SECURE1;  /* addr: 0x000003dc */
  ca_uint32_t                              rsrvd230[3];
  PER_SYS_TIMER_COMPARATOR_SECURE0_t       SYS_TIMER_COMPARATOR_SECURE0;  /* addr: 0x000003e0 */
  ca_uint32_t                              rsrvd231[3];
  PER_SYS_TIMER_AUTOINC_SECURE1_t          SYS_TIMER_AUTOINC_SECURE1;     /* addr: 0x000003e4 */
  ca_uint32_t                              rsrvd232[3];
  PER_SYS_TIMER_AUTOINC_SECURE0_t          SYS_TIMER_AUTOINC_SECURE0;     /* addr: 0x000003e8 */
  ca_uint32_t                              rsrvd233[3];
  PER_SYS_TIMER_SECURE_INTENABLE_t         SYS_TIMER_SECURE_INTENABLE;    /* addr: 0x000003ec */
  ca_uint32_t                              rsrvd234[3];
  PER_SYS_TIMER_SECURE_INTERRUPT_t         SYS_TIMER_SECURE_INTERRUPT;    /* addr: 0x000003f0 */
  ca_uint32_t                              rsrvd235[3];
  PER_PWM_TIMER_PERIOD_0_t                 PWM_TIMER_PERIOD_0;            /* addr: 0x000003f4 */
  ca_uint32_t                              rsrvd236[3];
  PER_PWM_TIMER_COMP_0_t                   PWM_TIMER_COMP_0;              /* addr: 0x000003f8 */
  ca_uint32_t                              rsrvd237[3];
  PER_PWM_TIMER_PERIOD_1_t                 PWM_TIMER_PERIOD_1;            /* addr: 0x000003fc */
  ca_uint32_t                              rsrvd238[3];
  PER_PWM_TIMER_COMP_1_t                   PWM_TIMER_COMP_1;              /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd239[3];
  PER_CSPI_CLK_t                           CSPI_CLK;                      /* addr: 0x00000404 */
  ca_uint32_t                              rsrvd240[3];
  PER_CSPI_FMT_t                           CSPI_FMT;                      /* addr: 0x00000408 */
  ca_uint32_t                              rsrvd241[3];
  PER_CSPI_CS_t                            CSPI_CS;                       /* addr: 0x0000040c */
  ca_uint32_t                              rsrvd242[3];
  PER_CSPI_WDATA1_t                        CSPI_WDATA1;                   /* addr: 0x00000410 */
  ca_uint32_t                              rsrvd243[3];
  PER_CSPI_WDATA0_t                        CSPI_WDATA0;                   /* addr: 0x00000414 */
  ca_uint32_t                              rsrvd244[3];
  PER_CSPI_RDATA1_t                        CSPI_RDATA1;                   /* addr: 0x00000418 */
  ca_uint32_t                              rsrvd245[3];
  PER_CSPI_RDATA0_t                        CSPI_RDATA0;                   /* addr: 0x0000041c */
  ca_uint32_t                              rsrvd246[3];
  PER_CSPI_CONTROL_t                       CSPI_CONTROL;                  /* addr: 0x00000420 */
  ca_uint32_t                              rsrvd247[3];
  PER_CSPI_IE_0_t                          CSPI_IE_0;                     /* addr: 0x00000424 */
  ca_uint32_t                              rsrvd248[3];
  PER_CSPI_INT_0_t                         CSPI_INT_0;                    /* addr: 0x00000428 */
  ca_uint32_t                              rsrvd249[3];
  PER_CSPI_IE_1_t                          CSPI_IE_1;                     /* addr: 0x0000042c */
  ca_uint32_t                              rsrvd250[3];
  PER_CSPI_INT_1_t                         CSPI_INT_1;                    /* addr: 0x00000430 */
  ca_uint32_t                              rsrvd251[3];
  PER_CSPI_STAT_t                          CSPI_STAT;                     /* addr: 0x00000434 */
  ca_uint32_t                              rsrvd252[3];
  PER_SECURE_WDT_TIMER_INTENABLE_t         SECURE_WDT_TIMER_INTENABLE;    /* addr: 0x00000438 */
  ca_uint32_t                              rsrvd253[3];
  PER_SECURE_WDT_TIMER_INTERRUPT_t         SECURE_WDT_TIMER_INTERRUPT;    /* addr: 0x0000043c */
  ca_uint32_t                              rsrvd254[3];
  PER_DYING_GASP_t                         DYING_GASP;                    /* addr: 0x00000440 */
  ca_uint32_t                              rsrvd255[3];
  PER_DG_IE_0_t                            DG_IE_0;                       /* addr: 0x00000444 */
  ca_uint32_t                              rsrvd256[3];
  PER_DG_INT_0_t                           DG_INT_0;                      /* addr: 0x00000448 */
  ca_uint32_t                              rsrvd257[3];
  PER_DG_STAT_0_t                          DG_STAT_0;                     /* addr: 0x0000044c */
  ca_uint32_t                              rsrvd258[3];
  PER_DG_IE_1_t                            DG_IE_1;                       /* addr: 0x00000450 */
  ca_uint32_t                              rsrvd259[3];
  PER_DG_INT_1_t                           DG_INT_1;                      /* addr: 0x00000454 */
  ca_uint32_t                              rsrvd260[3];
  PER_DG_STAT_1_t                          DG_STAT_1;                     /* addr: 0x00000458 */
  ca_uint32_t                              rsrvd261[3];
  PER_SPARE_t                              SPARE;                         /* addr: 0x0000045c */
} APB2_PER_t;
#endif /* !__ASSEMBLER__ */


/*
 * DW_PER_SPI0
 */



/*
 * DW_PER_SPI1
 */



/*
 * DW_PER_UART_DMA0
 */



/*
 * DW_PER_UART_DMA1
 */



/*
 * RTC
 */

#define RTCLK_ALARM_SEC                          0xf432a004
#define RTCLK_ALARM_SEC_dft                      0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BCD_SEC              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_SEC_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_ALARM_MIN                          0xf432a008
#define RTCLK_ALARM_MIN_dft                      0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BCD_MIN              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_MIN_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_ALARM_HOUR                         0xf432a00c
#define RTCLK_ALARM_HOUR_dft                     0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BCD_HOUR             :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_HOUR_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_ALARM_DAY                          0xf432a010
#define RTCLK_ALARM_DAY_dft                      0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BCD_DAY              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_DAY_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_ALARM_WEEK                         0xf432a014
#define RTCLK_ALARM_WEEK_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SUNDAY               :  1 ; /* bits 0:0 */
    ca_uint32_t MONDAY               :  1 ; /* bits 1:1 */
    ca_uint32_t TUESDAY              :  1 ; /* bits 2:2 */
    ca_uint32_t WEDNESDAY            :  1 ; /* bits 3:3 */
    ca_uint32_t THURSDAY             :  1 ; /* bits 4:4 */
    ca_uint32_t FRIDAY               :  1 ; /* bits 5:5 */
    ca_uint32_t SATURDAY             :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_WEEK_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_ALARM_MONTH                        0xf432a018
#define RTCLK_ALARM_MONTH_dft                    0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BCD_MONTH            :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_MONTH_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_ALARM_YEAR                         0xf432a01c
#define RTCLK_ALARM_YEAR_dft                     0x000000aa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BCD_YEAR             :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_ALARM_YEAR_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_USER_SRAM0                         0xf432a020
#define RTCLK_USER_SRAM0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t _16BIT               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_USER_SRAM0_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_USER_SRAM1                         0xf432a024
#define RTCLK_USER_SRAM1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t _16BIT               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_USER_SRAM1_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_INT_EN                             0xf432a028
#define RTCLK_INT_EN_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SECONDLY             :  1 ; /* bits 0:0 */
    ca_uint32_t MINUTELY             :  1 ; /* bits 1:1 */
    ca_uint32_t HOURLY               :  1 ; /* bits 2:2 */
    ca_uint32_t WEEKLY               :  1 ; /* bits 3:3 */
    ca_uint32_t MONTHLY              :  1 ; /* bits 4:4 */
    ca_uint32_t YEARLY               :  1 ; /* bits 5:5 */
    ca_uint32_t DATE                 :  1 ; /* bits 6:6 */
    ca_uint32_t WAKEUP               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_INT_EN_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_CNTL                               0xf432a02c
#define RTCLK_CNTL_dft                           0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t WRITE_EN             :  1 ; /* bits 0:0 */
    ca_uint32_t SEL_WAKEUP_INT       :  1 ; /* bits 1:1 */
    ca_uint32_t DUM_0                :  1 ; /* bits 2:2 */
    ca_uint32_t DUM_1                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t WRITE_ENABLED        :  1 ; /* bits 8:8 */
    ca_uint32_t TIME_LOADED          :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_CNTL_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_COMP                               0xf432a030
#define RTCLK_COMP_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MIN_CNTR             : 14 ; /* bits 13:0 */
    ca_uint32_t LAG_ADV              :  1 ; /* bits 14:14 */
    ca_uint32_t ENABLE               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_COMP_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_TIME_CNTR                          0xf432a034
#define RTCLK_TIME_CNTR_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RIPPLE_CNTR          : 15 ; /* bits 14:0 */
    ca_uint32_t ENABLE               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_TIME_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_CHANGING                           0xf432a038
#define RTCLK_CHANGING_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INDICATOR            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_CHANGING_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_INT_STATUS                         0xf432a040
#define RTCLK_INT_STATUS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SECONDLY             :  1 ; /* bits 0:0 */
    ca_uint32_t MINUTELY             :  1 ; /* bits 1:1 */
    ca_uint32_t HOURLY               :  1 ; /* bits 2:2 */
    ca_uint32_t WEEKLY               :  1 ; /* bits 3:3 */
    ca_uint32_t MONTHLY              :  1 ; /* bits 4:4 */
    ca_uint32_t YEARLY               :  1 ; /* bits 5:5 */
    ca_uint32_t DATE                 :  1 ; /* bits 6:6 */
    ca_uint32_t WAKEUP               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_INT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_SEC                            0xf432a044
#define RTCLK_BCD_SEC_dft                        0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_SEC             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_SEC_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_MIN                            0xf432a048
#define RTCLK_BCD_MIN_dft                        0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_MIN             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_MIN_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_HOUR                           0xf432a04c
#define RTCLK_BCD_HOUR_dft                       0x0000003a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_HOUR            :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_HOUR_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_DAY                            0xf432a050
#define RTCLK_BCD_DAY_dft                        0x0000003a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_DAY             :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_DAY_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_WEEK                           0xf432a054
#define RTCLK_BCD_WEEK_dft                       0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_WEEK            :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_WEEK_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_MONTH                          0xf432a058
#define RTCLK_BCD_MONTH_dft                      0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_MONTH           :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_MONTH_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BCD_YEAR                           0xf432a05c
#define RTCLK_BCD_YEAR_dft                       0x000000aa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_YEAR            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BCD_YEAR_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_BATTERY_OK                         0xf432a060
#define RTCLK_BATTERY_OK_dft                     0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INDICATOR            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t RTC_CI_cap           :  2 ; /* bits 9:8 */
    ca_uint32_t RTC_CO_cap           :  2 ; /* bits 11:10 */
    ca_uint32_t test_speedup         :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_BATTERY_OK_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_SEC                       0xf432a064
#define RTCLK_LREG_BCD_SEC_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_SEC             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_SEC_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_MIN                       0xf432a068
#define RTCLK_LREG_BCD_MIN_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_MIN             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_MIN_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_HOUR                      0xf432a06c
#define RTCLK_LREG_BCD_HOUR_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_HOUR            :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_HOUR_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_DAY                       0xf432a070
#define RTCLK_LREG_BCD_DAY_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_DAY             :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_DAY_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_WEEK                      0xf432a074
#define RTCLK_LREG_BCD_WEEK_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_WEEK            :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_WEEK_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_MONTH                     0xf432a078
#define RTCLK_LREG_BCD_MONTH_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_MONTH           :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_MONTH_t;
#endif /* !__ASSEMBLER__ */


#define RTCLK_LREG_BCD_YEAR                      0xf432a07c
#define RTCLK_LREG_BCD_YEAR_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TIME_YEAR            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} RTCLK_LREG_BCD_YEAR_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* RTC */
#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              rsrvd1[4];
  RTCLK_ALARM_SEC_t                        ALARM_SEC;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  RTCLK_ALARM_MIN_t                        ALARM_MIN;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  RTCLK_ALARM_HOUR_t                       ALARM_HOUR;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  RTCLK_ALARM_DAY_t                        ALARM_DAY;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  RTCLK_ALARM_WEEK_t                       ALARM_WEEK;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  RTCLK_ALARM_MONTH_t                      ALARM_MONTH;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  RTCLK_ALARM_YEAR_t                       ALARM_YEAR;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  RTCLK_USER_SRAM0_t                       USER_SRAM0;                    /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  RTCLK_USER_SRAM1_t                       USER_SRAM1;                    /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  RTCLK_INT_EN_t                           INT_EN;                        /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  RTCLK_CNTL_t                             CNTL;                          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  RTCLK_COMP_t                             COMP;                          /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  RTCLK_TIME_CNTR_t                        TIME_CNTR;                     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  RTCLK_CHANGING_t                         CHANGING;                      /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[7];
  RTCLK_INT_STATUS_t                       INT_STATUS;                    /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd16[3];
  RTCLK_BCD_SEC_t                          BCD_SEC;                       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd17[3];
  RTCLK_BCD_MIN_t                          BCD_MIN;                       /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd18[3];
  RTCLK_BCD_HOUR_t                         BCD_HOUR;                      /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd19[3];
  RTCLK_BCD_DAY_t                          BCD_DAY;                       /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd20[3];
  RTCLK_BCD_WEEK_t                         BCD_WEEK;                      /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd21[3];
  RTCLK_BCD_MONTH_t                        BCD_MONTH;                     /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd22[3];
  RTCLK_BCD_YEAR_t                         BCD_YEAR;                      /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd23[3];
  RTCLK_BATTERY_OK_t                       BATTERY_OK;                    /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd24[3];
  RTCLK_LREG_BCD_SEC_t                     LREG_BCD_SEC;                  /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd25[3];
  RTCLK_LREG_BCD_MIN_t                     LREG_BCD_MIN;                  /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd26[3];
  RTCLK_LREG_BCD_HOUR_t                    LREG_BCD_HOUR;                 /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd27[3];
  RTCLK_LREG_BCD_DAY_t                     LREG_BCD_DAY;                  /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd28[3];
  RTCLK_LREG_BCD_WEEK_t                    LREG_BCD_WEEK;                 /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd29[3];
  RTCLK_LREG_BCD_MONTH_t                   LREG_BCD_MONTH;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd30[3];
  RTCLK_LREG_BCD_YEAR_t                    LREG_BCD_YEAR;                 /* addr: 0x0000007c */
} APB2_RTC_t;
#endif /* !__ASSEMBLER__ */


/*
 * USBCFG
 */

#define USBCFG_U3_CONTROL                        0xf432b000
#define USBCFG_U3_CONTROL_dft                    0x6020001f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_filter_bypass    :  4 ; /* bits 3:0 */
    ca_uint32_t xhc_bme              :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t vaux_resetn_port     :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t fladj_30mhz_reg      :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t host_legacy_smi_bar_wr :  1 ; /* bits 24:24 */
    ca_uint32_t host_legacy_smi_pci_cmd_reg_wr :  1 ; /* bits 25:25 */
    ca_uint32_t host_msi_enable      :  1 ; /* bits 26:26 */
    ca_uint32_t host_port_power_control_present :  1 ; /* bits 27:27 */
    ca_uint32_t bigendian_gs         :  1 ; /* bits 28:28 */
    ca_uint32_t bus_clken_gm         :  1 ; /* bits 29:29 */
    ca_uint32_t bus_clken_gs         :  1 ; /* bits 30:30 */
    ca_uint32_t vaux_resetn          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3_STATUS                         0xf432b004
#define USBCFG_U3_STATUS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t host_current_belt    : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t host_legacy_smi_interrupt :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 14 ;
    ca_uint32_t host_system_err      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3_PORT_CONFIG                    0xf432b008
#define USBCFG_U3_PORT_CONFIG_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t u2_p0_hub_port_perm_attach :  1 ; /* bits 0:0 */
    ca_uint32_t u2_p0_hub_port_overcurrent :  1 ; /* bits 1:1 */
    ca_uint32_t u2_p0_port_disable   :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t u2_p1_hub_port_perm_attach :  1 ; /* bits 8:8 */
    ca_uint32_t u2_p1_hub_port_overcurrent :  1 ; /* bits 9:9 */
    ca_uint32_t u2_p1_port_disable   :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t u3_p0_hub_port_perm_attach :  1 ; /* bits 16:16 */
    ca_uint32_t u3_p0_hub_port_overcurrent :  1 ; /* bits 17:17 */
    ca_uint32_t u3_p0_port_disable   :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_PORT_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3_PORT_STATUS                    0xf432b00c
#define USBCFG_U3_PORT_STATUS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t u2_p0_hub_vbus_ctrl  :  1 ; /* bits 0:0 */
    ca_uint32_t u2_p0_utmi_fsls_low_power :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t u2_p1_hub_vbus_ctrl  :  1 ; /* bits 8:8 */
    ca_uint32_t u2_p1_utmi_fsls_low_power :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t u3_p0_hub_vbus_ctrl  :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t u3_p0_pipe3_phy_mode :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd4               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_PORT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3PHY_PORT0_CONFIG0               0xf432b010
#define USBCFG_U3PHY_PORT0_CONFIG0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CLK_MODE_SEL         :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 29 ;
    ca_uint32_t CKBUF_EN             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3PHY_PORT0_CONFIG0_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3PHY_PORT0_STATUS0               0xf432b014
#define USBCFG_U3PHY_PORT0_STATUS0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t clk_rdy              :  1 ; /* bits 19:19 */
    ca_uint32_t phy_mac_recv_det_ack :  1 ; /* bits 20:20 */
    ca_uint32_t phy_mac_recv_det_end :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3PHY_PORT0_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3PHY_PORT0_STATUS1               0xf432b018
#define USBCFG_U3PHY_PORT0_STATUS1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t decode_err           :  8 ; /* bits 7:0 */
    ca_uint32_t elastic_buf_ovf      :  8 ; /* bits 15:8 */
    ca_uint32_t elastic_buf_udf      :  8 ; /* bits 23:16 */
    ca_uint32_t disparity_err        :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3PHY_PORT0_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB_DMY0                          0xf432b01c
#define USBCFG_USB_DMY0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB_DMY0_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2PHY_PORT0_CONFIG                0xf432b020
#define USBCFG_U2PHY_PORT0_CONFIG_dft            0x00080004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TX_SE0               :  1 ; /* bits 0:0 */
    ca_uint32_t TX_DAT               :  1 ; /* bits 1:1 */
    ca_uint32_t TX_ENABLE_N          :  1 ; /* bits 2:2 */
    ca_uint32_t TXBITSTUFFENABLEH    :  1 ; /* bits 3:3 */
    ca_uint32_t TXBITSTUFFENABLE     :  1 ; /* bits 4:4 */
    ca_uint32_t DMPULLDOWN           :  1 ; /* bits 5:5 */
    ca_uint32_t DPPULLDOWN           :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CLKTSTEN             :  1 ; /* bits 8:8 */
    ca_uint32_t LF_PD_R_EN           :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t BY_PASS_ON           :  1 ; /* bits 18:18 */
    ca_uint32_t VLOADM               :  1 ; /* bits 19:19 */
    ca_uint32_t VCONTROL             :  4 ; /* bits 23:20 */
    ca_uint32_t VSTATUS_IN           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2PHY_PORT0_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2PHY_PORT0_STATUS                0xf432b024
#define USBCFG_U2PHY_PORT0_STATUS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t debug                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t VSTATUS_OUT          :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2PHY_PORT0_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2PHY_PORT1_CONFIG                0xf432b028
#define USBCFG_U2PHY_PORT1_CONFIG_dft            0x00080004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TX_SE0               :  1 ; /* bits 0:0 */
    ca_uint32_t TX_DAT               :  1 ; /* bits 1:1 */
    ca_uint32_t TX_ENABLE_N          :  1 ; /* bits 2:2 */
    ca_uint32_t TXBITSTUFFENABLEH    :  1 ; /* bits 3:3 */
    ca_uint32_t TXBITSTUFFENABLE     :  1 ; /* bits 4:4 */
    ca_uint32_t DMPULLDOWN           :  1 ; /* bits 5:5 */
    ca_uint32_t DPPULLDOWN           :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t CLKTSTEN             :  1 ; /* bits 8:8 */
    ca_uint32_t LF_PD_R_EN           :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t BY_PASS_ON           :  1 ; /* bits 18:18 */
    ca_uint32_t VLOADM               :  1 ; /* bits 19:19 */
    ca_uint32_t VCONTROL             :  4 ; /* bits 23:20 */
    ca_uint32_t VSTATUS_IN           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2PHY_PORT1_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2PHY_PORT1_STATUS                0xf432b02c
#define USBCFG_U2PHY_PORT1_STATUS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t debug                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t VSTATUS_OUT          :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2PHY_PORT1_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2PHY_PORT0_FORCE_MODE            0xf432b030
#define USBCFG_U2PHY_PORT0_FORCE_MODE_dft        0x00000260

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t r_sdiscon_0          :  1 ; /* bits 4:4 */
    ca_uint32_t r_fdiscon_0          :  1 ; /* bits 5:5 */
    ca_uint32_t r_ssus_0             :  1 ; /* bits 6:6 */
    ca_uint32_t r_fsus_0             :  1 ; /* bits 7:7 */
    ca_uint32_t r_stermsel_0         :  1 ; /* bits 8:8 */
    ca_uint32_t r_ftermsel_0         :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2PHY_PORT0_FORCE_MODE_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2PHY_PORT1_FORCE_MODE            0xf432b034
#define USBCFG_U2PHY_PORT1_FORCE_MODE_dft        0x026fc000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t r_sdischrgvbus_1     :  1 ; /* bits 6:6 */
    ca_uint32_t r_fdischrgvbus_1     :  1 ; /* bits 7:7 */
    ca_uint32_t r_schrgvbus_1        :  1 ; /* bits 8:8 */
    ca_uint32_t r_fchrgvbus_1        :  1 ; /* bits 9:9 */
    ca_uint32_t r_sdrvvbus_1         :  1 ; /* bits 10:10 */
    ca_uint32_t r_fdrvvbus_1         :  1 ; /* bits 11:11 */
    ca_uint32_t r_ssessend_1         :  1 ; /* bits 12:12 */
    ca_uint32_t r_fsessend_1         :  1 ; /* bits 13:13 */
    ca_uint32_t r_svbusvalid_1       :  1 ; /* bits 14:14 */
    ca_uint32_t r_fvbusvalid_1       :  1 ; /* bits 15:15 */
    ca_uint32_t r_sbvalid_1          :  1 ; /* bits 16:16 */
    ca_uint32_t r_fbvalid_1          :  1 ; /* bits 17:17 */
    ca_uint32_t r_savalid_1          :  1 ; /* bits 18:18 */
    ca_uint32_t r_favalid_1          :  1 ; /* bits 19:19 */
    ca_uint32_t r_sdiscon_1          :  1 ; /* bits 20:20 */
    ca_uint32_t r_fdiscon_1          :  1 ; /* bits 21:21 */
    ca_uint32_t r_ssus_1             :  1 ; /* bits 22:22 */
    ca_uint32_t r_fsus_1             :  1 ; /* bits 23:23 */
    ca_uint32_t r_stermsel_1         :  1 ; /* bits 24:24 */
    ca_uint32_t r_ftermsel_1         :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2PHY_PORT1_FORCE_MODE_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2_CHARGER_0                      0xf432b038
#define USBCFG_U2_CHARGER_0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t REG_LDO_PW           :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2_CHARGER_0_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U2_CHARGER_1                      0xf432b03c
#define USBCFG_U2_CHARGER_1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t REG_LDO_PW           :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U2_CHARGER_1_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB_HOST_CONTROL                  0xf432b048
#define USBCFG_USB_HOST_CONTROL_dft              0x04000012

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usb3_host_num_u2_port :  4 ; /* bits 3:0 */
    ca_uint32_t usb3_host_num_u3_port :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t utmi_clk0_sel        :  1 ; /* bits 16:16 */
    ca_uint32_t utmi_clk1_sel        :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t u2_p0_suspend_ctrl   :  3 ; /* bits 24:22 */
    ca_uint32_t u2_p1_suspend_ctrl   :  3 ; /* bits 27:25 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB_HOST_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3_EXT_CONTROL0                   0xf432b04c
#define USBCFG_U3_EXT_CONTROL0_dft               0x10000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t pipe_bist_en         :  1 ; /* bits 24:24 */
    ca_uint32_t pipe_bist_sel        :  2 ; /* bits 26:25 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rx50_term_sel        :  1 ; /* bits 28:28 */
    ca_uint32_t rx50_term_sys        :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_EXT_CONTROL0_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3_PIPE_BIST_ERROR_CNT            0xf432b050
#define USBCFG_U3_PIPE_BIST_ERROR_CNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_PIPE_BIST_ERROR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_U3_PIPE_BIST_CORRECT_CNT          0xf432b054
#define USBCFG_U3_PIPE_BIST_CORRECT_CNT_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cor_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_U3_PIPE_BIST_CORRECT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB3_LTSSM_INT                    0xf432b058
#define USBCFG_USB3_LTSSM_INT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t int_ltssm_polling    :  1 ; /* bits 0:0 */
    ca_uint32_t int_ltssm_ss_inactive :  1 ; /* bits 1:1 */
    ca_uint32_t int_ltssm_rx_detect  :  1 ; /* bits 2:2 */
    ca_uint32_t int_ltssm_ss_disable :  1 ; /* bits 3:3 */
    ca_uint32_t int_ltssm_u3         :  1 ; /* bits 4:4 */
    ca_uint32_t int_ltssm_u2         :  1 ; /* bits 5:5 */
    ca_uint32_t int_ltssm_u1         :  1 ; /* bits 6:6 */
    ca_uint32_t int_ltssm_u0         :  1 ; /* bits 7:7 */
    ca_uint32_t int_ltssm_link_error :  1 ; /* bits 8:8 */
    ca_uint32_t int_ltssm_loopback   :  1 ; /* bits 9:9 */
    ca_uint32_t int_ltssm_compliance :  1 ; /* bits 10:10 */
    ca_uint32_t int_ltssm_hot_reset  :  1 ; /* bits 11:11 */
    ca_uint32_t int_ltssm_recovery   :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB3_LTSSM_INT_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB2_OTG_CONTROL                  0xf432b080
#define USBCFG_USB2_OTG_CONTROL_dft              0x01000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t r_fs_sync            :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t m_hbigendian         :  1 ; /* bits 27:27 */
    ca_uint32_t s_hbigendian         :  1 ; /* bits 28:28 */
    ca_uint32_t dbnce_fltr_bypass    :  1 ; /* bits 29:29 */
    ca_uint32_t ss_scaledown_mode    :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB2_OTG_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB2_OTG_INT                      0xf432b084
#define USBCFG_USB2_OTG_INT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t endp_interrupt       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB2_OTG_INT_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB2_OTG_DBG1                     0xf432b088
#define USBCFG_USB2_OTG_DBG1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crcerr_cnt           :  8 ; /* bits 7:0 */
    ca_uint32_t prt_bab_cnt          :  8 ; /* bits 15:8 */
    ca_uint32_t timout_cnt           :  8 ; /* bits 23:16 */
    ca_uint32_t nak_cnt              :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB2_OTG_DBG1_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB2_OTG_DBG2                     0xf432b08c
#define USBCFG_USB2_OTG_DBG2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_reg2             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB2_OTG_DBG2_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB2_OTG_DBG3                     0xf432b090
#define USBCFG_USB2_OTG_DBG3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_reg3             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB2_OTG_DBG3_t;
#endif /* !__ASSEMBLER__ */


#define USBCFG_USB2_OTG_DBG4                     0xf432b094
#define USBCFG_USB2_OTG_DBG4_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_reg4             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} USBCFG_USB2_OTG_DBG4_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* USBCFG */
#ifndef __ASSEMBLER__
typedef struct {
  USBCFG_U3_CONTROL_t                      U3_CONTROL;                    /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  USBCFG_U3_STATUS_t                       U3_STATUS;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  USBCFG_U3_PORT_CONFIG_t                  U3_PORT_CONFIG;                /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  USBCFG_U3_PORT_STATUS_t                  U3_PORT_STATUS;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  USBCFG_U3PHY_PORT0_CONFIG0_t             U3PHY_PORT0_CONFIG0;           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  USBCFG_U3PHY_PORT0_STATUS0_t             U3PHY_PORT0_STATUS0;           /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  USBCFG_U3PHY_PORT0_STATUS1_t             U3PHY_PORT0_STATUS1;           /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  USBCFG_USB_DMY0_t                        USB_DMY0;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  USBCFG_U2PHY_PORT0_CONFIG_t              U2PHY_PORT0_CONFIG;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  USBCFG_U2PHY_PORT0_STATUS_t              U2PHY_PORT0_STATUS;            /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  USBCFG_U2PHY_PORT1_CONFIG_t              U2PHY_PORT1_CONFIG;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  USBCFG_U2PHY_PORT1_STATUS_t              U2PHY_PORT1_STATUS;            /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  USBCFG_U2PHY_PORT0_FORCE_MODE_t          U2PHY_PORT0_FORCE_MODE;        /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  USBCFG_U2PHY_PORT1_FORCE_MODE_t          U2PHY_PORT1_FORCE_MODE;        /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  USBCFG_U2_CHARGER_0_t                    U2_CHARGER_0;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  USBCFG_U2_CHARGER_1_t                    U2_CHARGER_1;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[11];
  USBCFG_USB_HOST_CONTROL_t                USB_HOST_CONTROL;              /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd17[3];
  USBCFG_U3_EXT_CONTROL0_t                 U3_EXT_CONTROL0;               /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd18[3];
  USBCFG_U3_PIPE_BIST_ERROR_CNT_t          U3_PIPE_BIST_ERROR_CNT;        /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd19[3];
  USBCFG_U3_PIPE_BIST_CORRECT_CNT_t        U3_PIPE_BIST_CORRECT_CNT;      /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd20[3];
  USBCFG_USB3_LTSSM_INT_t                  USB3_LTSSM_INT;                /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd21[39];
  USBCFG_USB2_OTG_CONTROL_t                USB2_OTG_CONTROL;              /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd22[3];
  USBCFG_USB2_OTG_INT_t                    USB2_OTG_INT;                  /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd23[3];
  USBCFG_USB2_OTG_DBG1_t                   USB2_OTG_DBG1;                 /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd24[3];
  USBCFG_USB2_OTG_DBG2_t                   USB2_OTG_DBG2;                 /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd25[3];
  USBCFG_USB2_OTG_DBG3_t                   USB2_OTG_DBG3;                 /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd26[3];
  USBCFG_USB2_OTG_DBG4_t                   USB2_OTG_DBG4;                 /* addr: 0x00000094 */
} APB2_USBCFG_t;
#endif /* !__ASSEMBLER__ */


/*
 * HSIOBMISC
 */

/*
 * PCIE0_ATU
 */

#define PCIE0_ATU_CTL                            0xf432c000
#define PCIE0_ATU_CTL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_ATU_DATA0                          0xf432c004
#define PCIE0_ATU_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_ATU_DATA1                          0xf432c008
#define PCIE0_ATU_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_ATU_DATA2                          0xf432c00c
#define PCIE0_ATU_DATA2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_ATU_DATA3                          0xf432c010
#define PCIE0_ATU_DATA3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_ATU_DATA4                          0xf432c014
#define PCIE0_ATU_DATA4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE0_ATU_DATA5                          0xf432c018
#define PCIE0_ATU_DATA5_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  PCIE0_ATU_CTL_t                          CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PCIE0_ATU_DATA0_t                        DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PCIE0_ATU_DATA1_t                        DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PCIE0_ATU_DATA2_t                        DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PCIE0_ATU_DATA3_t                        DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PCIE0_ATU_DATA4_t                        DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PCIE0_ATU_DATA5_t                        DATA5;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_PCIE0_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * PCIE1_ATU
 */

#define PCIE1_ATU_CTL                            0xf432c100
#define PCIE1_ATU_CTL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_ATU_DATA0                          0xf432c104
#define PCIE1_ATU_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_ATU_DATA1                          0xf432c108
#define PCIE1_ATU_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_ATU_DATA2                          0xf432c10c
#define PCIE1_ATU_DATA2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_ATU_DATA3                          0xf432c110
#define PCIE1_ATU_DATA3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_ATU_DATA4                          0xf432c114
#define PCIE1_ATU_DATA4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE1_ATU_DATA5                          0xf432c118
#define PCIE1_ATU_DATA5_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE1_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  PCIE1_ATU_CTL_t                          CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PCIE1_ATU_DATA0_t                        DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PCIE1_ATU_DATA1_t                        DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PCIE1_ATU_DATA2_t                        DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PCIE1_ATU_DATA3_t                        DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PCIE1_ATU_DATA4_t                        DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PCIE1_ATU_DATA5_t                        DATA5;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_PCIE1_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * PCIE2_ATU
 */

#define PCIE2_ATU_CTL                            0xf432c200
#define PCIE2_ATU_CTL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_ATU_DATA0                          0xf432c204
#define PCIE2_ATU_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_ATU_DATA1                          0xf432c208
#define PCIE2_ATU_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_ATU_DATA2                          0xf432c20c
#define PCIE2_ATU_DATA2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_ATU_DATA3                          0xf432c210
#define PCIE2_ATU_DATA3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_ATU_DATA4                          0xf432c214
#define PCIE2_ATU_DATA4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PCIE2_ATU_DATA5                          0xf432c218
#define PCIE2_ATU_DATA5_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PCIE2_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE2_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  PCIE2_ATU_CTL_t                          CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PCIE2_ATU_DATA0_t                        DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PCIE2_ATU_DATA1_t                        DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PCIE2_ATU_DATA2_t                        DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PCIE2_ATU_DATA3_t                        DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PCIE2_ATU_DATA4_t                        DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PCIE2_ATU_DATA5_t                        DATA5;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_PCIE2_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * SATA_ATU
 */

#define SATA_ATU_CTL                             0xf432c300
#define SATA_ATU_CTL_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define SATA_ATU_DATA0                           0xf432c304
#define SATA_ATU_DATA0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define SATA_ATU_DATA1                           0xf432c308
#define SATA_ATU_DATA1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define SATA_ATU_DATA2                           0xf432c30c
#define SATA_ATU_DATA2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define SATA_ATU_DATA3                           0xf432c310
#define SATA_ATU_DATA3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define SATA_ATU_DATA4                           0xf432c314
#define SATA_ATU_DATA4_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define SATA_ATU_DATA5                           0xf432c318
#define SATA_ATU_DATA5_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} SATA_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SATA_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  SATA_ATU_CTL_t                           CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  SATA_ATU_DATA0_t                         DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  SATA_ATU_DATA1_t                         DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  SATA_ATU_DATA2_t                         DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  SATA_ATU_DATA3_t                         DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  SATA_ATU_DATA4_t                         DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  SATA_ATU_DATA5_t                         DATA5;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_SATA_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * SD_ATU
 */

#define SD_ATU_CTL                               0xf432c400
#define SD_ATU_CTL_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define SD_ATU_DATA0                             0xf432c404
#define SD_ATU_DATA0_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define SD_ATU_DATA1                             0xf432c408
#define SD_ATU_DATA1_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define SD_ATU_DATA2                             0xf432c40c
#define SD_ATU_DATA2_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define SD_ATU_DATA3                             0xf432c410
#define SD_ATU_DATA3_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hprot                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define SD_ATU_DATA4                             0xf432c414
#define SD_ATU_DATA4_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t huser                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define SD_ATU_UPPER                             0xf432c418
#define SD_ATU_UPPER_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} SD_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SD_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  SD_ATU_CTL_t                             CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  SD_ATU_DATA0_t                           DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  SD_ATU_DATA1_t                           DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  SD_ATU_DATA2_t                           DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  SD_ATU_DATA3_t                           DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  SD_ATU_DATA4_t                           DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  SD_ATU_UPPER_t                           UPPER;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_SD_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * USB3_ATU
 */

#define USB3_ATU_CTL                             0xf432c500
#define USB3_ATU_CTL_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define USB3_ATU_DATA0                           0xf432c504
#define USB3_ATU_DATA0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define USB3_ATU_DATA1                           0xf432c508
#define USB3_ATU_DATA1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define USB3_ATU_DATA2                           0xf432c50c
#define USB3_ATU_DATA2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define USB3_ATU_DATA3                           0xf432c510
#define USB3_ATU_DATA3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t arprot               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t awprot               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t arqos                :  4 ; /* bits 11:8 */
    ca_uint32_t awqos                :  4 ; /* bits 15:12 */
    ca_uint32_t arcache              :  4 ; /* bits 19:16 */
    ca_uint32_t awcache              :  4 ; /* bits 23:20 */
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t cache_en             :  1 ; /* bits 26:26 */
    ca_uint32_t qos_en               :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd3               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define USB3_ATU_DATA4                           0xf432c514
#define USB3_ATU_DATA4_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aruser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define USB3_ATU_DATA5                           0xf432c518
#define USB3_ATU_DATA5_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t awuser               : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB3_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* USB3_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  USB3_ATU_CTL_t                           CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  USB3_ATU_DATA0_t                         DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  USB3_ATU_DATA1_t                         DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  USB3_ATU_DATA2_t                         DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  USB3_ATU_DATA3_t                         DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  USB3_ATU_DATA4_t                         DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  USB3_ATU_DATA5_t                         DATA5;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_USB3_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * USB2OTG_ATU
 */

#define USB2OTG_ATU_CTL                          0xf432c600
#define USB2OTG_ATU_CTL_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define USB2OTG_ATU_DATA0                        0xf432c604
#define USB2OTG_ATU_DATA0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define USB2OTG_ATU_DATA1                        0xf432c608
#define USB2OTG_ATU_DATA1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define USB2OTG_ATU_DATA2                        0xf432c60c
#define USB2OTG_ATU_DATA2_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define USB2OTG_ATU_DATA3                        0xf432c610
#define USB2OTG_ATU_DATA3_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hprot                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define USB2OTG_ATU_DATA4                        0xf432c614
#define USB2OTG_ATU_DATA4_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t huser                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define USB2OTG_ATU_UPPER                        0xf432c618
#define USB2OTG_ATU_UPPER_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} USB2OTG_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* USB2OTG_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  USB2OTG_ATU_CTL_t                        CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  USB2OTG_ATU_DATA0_t                      DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  USB2OTG_ATU_DATA1_t                      DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  USB2OTG_ATU_DATA2_t                      DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  USB2OTG_ATU_DATA3_t                      DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  USB2OTG_ATU_DATA4_t                      DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  USB2OTG_ATU_UPPER_t                      UPPER;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_USB2OTG_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * HSIOMISC
 */

#define HSIOMISC_THRESHOLD0                      0xf432c700
#define HSIOMISC_THRESHOLD0_dft                  0x00000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_fifo_threshold   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_THRESHOLD0_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_THRESHOLD1                      0xf432c704
#define HSIOMISC_THRESHOLD1_dft                  0x00000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_fifo_threshold   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_THRESHOLD1_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_THRESHOLD2                      0xf432c708
#define HSIOMISC_THRESHOLD2_dft                  0x00000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_fifo_threshold   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_THRESHOLD2_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_THRESHOLD3                      0xf432c70c
#define HSIOMISC_THRESHOLD3_dft                  0x00000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_fifo_threshold   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_THRESHOLD3_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_DES_ADDR_MSB0                   0xf432c710
#define HSIOMISC_DES_ADDR_MSB0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_des_addr_msb     : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_DES_ADDR_MSB0_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_DES_ADDR_LSB0                   0xf432c714
#define HSIOMISC_DES_ADDR_LSB0_dft               0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t reg_des_addr_start   : 14 ; /* bits 15:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t reg_des_addr_end     : 14 ; /* bits 31:18 */
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_DES_ADDR_LSB0_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_DES_ADDR_MSB1                   0xf432c718
#define HSIOMISC_DES_ADDR_MSB1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_des_addr_msb     : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_DES_ADDR_MSB1_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_DES_ADDR_LSB1                   0xf432c71c
#define HSIOMISC_DES_ADDR_LSB1_dft               0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t reg_des_addr_start   : 14 ; /* bits 15:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t reg_des_addr_end     : 14 ; /* bits 31:18 */
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_DES_ADDR_LSB1_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_DES_ADDR_MSB2                   0xf432c720
#define HSIOMISC_DES_ADDR_MSB2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_des_addr_msb     : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_DES_ADDR_MSB2_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_DES_ADDR_LSB2                   0xf432c724
#define HSIOMISC_DES_ADDR_LSB2_dft               0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t reg_des_addr_start   : 14 ; /* bits 15:2 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t reg_des_addr_end     : 14 ; /* bits 31:18 */
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_DES_ADDR_LSB2_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_SRAM_TEST_CONTROL0              0xf432c728
#define HSIOMISC_SRAM_TEST_CONTROL0_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sram_0a_rm           :  2 ; /* bits 1:0 */
    ca_uint32_t sram_0a_rme          :  1 ; /* bits 2:2 */
    ca_uint32_t sram_0a_test1        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sram_0b_rm           :  2 ; /* bits 9:8 */
    ca_uint32_t sram_0b_rme          :  1 ; /* bits 10:10 */
    ca_uint32_t sram_0b_test1        :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t sram_1a_rm           :  2 ; /* bits 17:16 */
    ca_uint32_t sram_1a_rme          :  1 ; /* bits 18:18 */
    ca_uint32_t sram_1a_test1        :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t sram_1b_rm           :  2 ; /* bits 25:24 */
    ca_uint32_t sram_1b_rme          :  1 ; /* bits 26:26 */
    ca_uint32_t sram_1b_test1        :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_SRAM_TEST_CONTROL0_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_SRAM_TEST_CONTROL1              0xf432c72c
#define HSIOMISC_SRAM_TEST_CONTROL1_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sram_0a_rm           :  2 ; /* bits 1:0 */
    ca_uint32_t sram_0a_rme          :  1 ; /* bits 2:2 */
    ca_uint32_t sram_0a_test1        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sram_0b_rm           :  2 ; /* bits 9:8 */
    ca_uint32_t sram_0b_rme          :  1 ; /* bits 10:10 */
    ca_uint32_t sram_0b_test1        :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t sram_1a_rm           :  2 ; /* bits 17:16 */
    ca_uint32_t sram_1a_rme          :  1 ; /* bits 18:18 */
    ca_uint32_t sram_1a_test1        :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t sram_1b_rm           :  2 ; /* bits 25:24 */
    ca_uint32_t sram_1b_rme          :  1 ; /* bits 26:26 */
    ca_uint32_t sram_1b_test1        :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_SRAM_TEST_CONTROL1_t;
#endif /* !__ASSEMBLER__ */


#define HSIOMISC_SRAM_LS_CONTROL                 0xf432c730
#define HSIOMISC_SRAM_LS_CONTROL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bus_matcher_sramls   :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} HSIOMISC_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* HSIOMISC */
#ifndef __ASSEMBLER__
typedef struct {
  HSIOMISC_THRESHOLD0_t                    THRESHOLD0;                    /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  HSIOMISC_THRESHOLD1_t                    THRESHOLD1;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  HSIOMISC_THRESHOLD2_t                    THRESHOLD2;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  HSIOMISC_THRESHOLD3_t                    THRESHOLD3;                    /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  HSIOMISC_DES_ADDR_MSB0_t                 DES_ADDR_MSB0;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  HSIOMISC_DES_ADDR_LSB0_t                 DES_ADDR_LSB0;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  HSIOMISC_DES_ADDR_MSB1_t                 DES_ADDR_MSB1;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  HSIOMISC_DES_ADDR_LSB1_t                 DES_ADDR_LSB1;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  HSIOMISC_DES_ADDR_MSB2_t                 DES_ADDR_MSB2;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  HSIOMISC_DES_ADDR_LSB2_t                 DES_ADDR_LSB2;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  HSIOMISC_SRAM_TEST_CONTROL0_t            SRAM_TEST_CONTROL0;            /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  HSIOMISC_SRAM_TEST_CONTROL1_t            SRAM_TEST_CONTROL1;            /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  HSIOMISC_SRAM_LS_CONTROL_t               SRAM_LS_CONTROL;               /* addr: 0x00000030 */
} APB2_HSIOBMISC_HSIOMISC_t;
#endif /* !__ASSEMBLER__ */


/*
 * I2S_ATU
 */

#define I2S_ATU_CTL                              0xf432c800
#define I2S_ATU_CTL_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define I2S_ATU_DATA0                            0xf432c804
#define I2S_ATU_DATA0_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define I2S_ATU_DATA1                            0xf432c808
#define I2S_ATU_DATA1_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define I2S_ATU_DATA2                            0xf432c80c
#define I2S_ATU_DATA2_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define I2S_ATU_DATA3                            0xf432c810
#define I2S_ATU_DATA3_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hprot                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define I2S_ATU_DATA4                            0xf432c814
#define I2S_ATU_DATA4_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t huser                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define I2S_ATU_UPPER                            0xf432c818
#define I2S_ATU_UPPER_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} I2S_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* I2S_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  I2S_ATU_CTL_t                            CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  I2S_ATU_DATA0_t                          DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  I2S_ATU_DATA1_t                          DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  I2S_ATU_DATA2_t                          DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  I2S_ATU_DATA3_t                          DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  I2S_ATU_DATA4_t                          DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  I2S_ATU_UPPER_t                          UPPER;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_I2S_ATU_t;
#endif /* !__ASSEMBLER__ */


/*
 * GDMA_ATU
 */

#define GDMA_ATU_CTL                             0xf432c900
#define GDMA_ATU_CTL_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t idx                  :  6 ; /* bits 29:24 */
    ca_uint32_t r                    :  1 ; /* bits 30:30 */
    ca_uint32_t w                    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */


#define GDMA_ATU_DATA0                           0xf432c904
#define GDMA_ATU_DATA0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_comp      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define GDMA_ATU_DATA1                           0xf432c908
#define GDMA_ATU_DATA1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_input_mask      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define GDMA_ATU_DATA2                           0xf432c90c
#define GDMA_ATU_DATA2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr_output_value    : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define GDMA_ATU_DATA3                           0xf432c910
#define GDMA_ATU_DATA3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hprot                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t user_en              :  1 ; /* bits 24:24 */
    ca_uint32_t prot_en              :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define GDMA_ATU_DATA4                           0xf432c914
#define GDMA_ATU_DATA4_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t huser                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define GDMA_ATU_UPPER                           0xf432c918
#define GDMA_ATU_UPPER_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t upper_bits           :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GDMA_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GDMA_ATU */
#ifndef __ASSEMBLER__
typedef struct {
  GDMA_ATU_CTL_t                           CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  GDMA_ATU_DATA0_t                         DATA0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  GDMA_ATU_DATA1_t                         DATA1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  GDMA_ATU_DATA2_t                         DATA2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  GDMA_ATU_DATA3_t                         DATA3;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  GDMA_ATU_DATA4_t                         DATA4;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  GDMA_ATU_UPPER_t                         UPPER;                         /* addr: 0x00000018 */
} APB2_HSIOBMISC_GDMA_ATU_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* HSIOBMISC */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_HSIOBMISC_PCIE0_ATU_t               PCIE0_ATU;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[243];
  APB2_HSIOBMISC_PCIE1_ATU_t               PCIE1_ATU;                     /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[243];
  APB2_HSIOBMISC_PCIE2_ATU_t               PCIE2_ATU;                     /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd3[243];
  APB2_HSIOBMISC_SATA_ATU_t                SATA_ATU;                      /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd4[243];
  APB2_HSIOBMISC_SD_ATU_t                  SD_ATU;                        /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd5[243];
  APB2_HSIOBMISC_USB3_ATU_t                USB3_ATU;                      /* addr: 0x00000500 */
  ca_uint32_t                              rsrvd6[243];
  APB2_HSIOBMISC_USB2OTG_ATU_t             USB2OTG_ATU;                   /* addr: 0x00000600 */
  ca_uint32_t                              rsrvd7[243];
  APB2_HSIOBMISC_HSIOMISC_t                HSIOMISC;                      /* addr: 0x00000700 */
  ca_uint32_t                              rsrvd8[231];
  APB2_HSIOBMISC_I2S_ATU_t                 I2S_ATU;                       /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd9[243];
  APB2_HSIOBMISC_GDMA_ATU_t                GDMA_ATU;                      /* addr: 0x00000900 */
} APB2_HSIOBMISC_t;
#endif /* !__ASSEMBLER__ */


/*
 * QM_AXI_REO
 */

/*
 * AXI_REO_RD[0..0]
 */

#define QM_AXI_REO_AXI_REO_RD_ORIG_ID            0xf432d000
#define QM_AXI_REO_AXI_REO_RD_ORIG_ID_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_ORIG_ID_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_NEW_ID             0xf432d004
#define QM_AXI_REO_AXI_REO_RD_NEW_ID_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_NEW_ID_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR0          0xf432d008
#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_TOP_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0     0xf432d00c
#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_NEW_ID0            0xf432d010
#define QM_AXI_REO_AXI_REO_RD_NEW_ID0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_NEW_ID0_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR1          0xf432d014
#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_TOP_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1     0xf432d018
#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_NEW_ID1            0xf432d01c
#define QM_AXI_REO_AXI_REO_RD_NEW_ID1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_NEW_ID1_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR2          0xf432d020
#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_TOP_ADDR2_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2     0xf432d024
#define QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_NEW_ID2            0xf432d028
#define QM_AXI_REO_AXI_REO_RD_NEW_ID2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_NEW_ID2_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_STATUS             0xf432d02c
#define QM_AXI_REO_AXI_REO_RD_STATUS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t return_full          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t return_status        :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL  0xf432d030
#define QM_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL_dft 0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rm1                  :  2 ; /* bits 5:4 */
    ca_uint32_t rme1                 :  1 ; /* bits 6:6 */
    ca_uint32_t test1                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL    0xf432d034
#define QM_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramls               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXI_REO_RD */
#ifndef __ASSEMBLER__
typedef struct {
  QM_AXI_REO_AXI_REO_RD_ORIG_ID_t          ORIG_ID;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  QM_AXI_REO_AXI_REO_RD_NEW_ID_t           NEW_ID;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  QM_AXI_REO_AXI_REO_RD_TOP_ADDR0_t        TOP_ADDR0;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0_t   TOP_ADDR_MASK0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  QM_AXI_REO_AXI_REO_RD_NEW_ID0_t          NEW_ID0;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  QM_AXI_REO_AXI_REO_RD_TOP_ADDR1_t        TOP_ADDR1;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1_t   TOP_ADDR_MASK1;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  QM_AXI_REO_AXI_REO_RD_NEW_ID1_t          NEW_ID1;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  QM_AXI_REO_AXI_REO_RD_TOP_ADDR2_t        TOP_ADDR2;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  QM_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2_t   TOP_ADDR_MASK2;                /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  QM_AXI_REO_AXI_REO_RD_NEW_ID2_t          NEW_ID2;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  QM_AXI_REO_AXI_REO_RD_STATUS_t           STATUS;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  QM_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL_t SRAM_TEST_CONTROL;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  QM_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL_t  SRAM_LS_CONTROL;               /* addr: 0x00000034 */
} APB2_QM_AXI_REO_AXI_REO_RD_t;
#endif /* !__ASSEMBLER__ */


/*
 * AXI_REO_WR[0..1]
 */

#define QM_AXI_REO_AXI_REO_WR_ORIG_ID            0xf432d400
#define QM_AXI_REO_AXI_REO_WR_ORIG_ID_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_ORIG_ID_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_NEW_ID             0xf432d404
#define QM_AXI_REO_AXI_REO_WR_NEW_ID_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_NEW_ID_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR0          0xf432d408
#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_TOP_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0     0xf432d40c
#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_NEW_ID0            0xf432d410
#define QM_AXI_REO_AXI_REO_WR_NEW_ID0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_NEW_ID0_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR1          0xf432d414
#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_TOP_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1     0xf432d418
#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_NEW_ID1            0xf432d41c
#define QM_AXI_REO_AXI_REO_WR_NEW_ID1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_NEW_ID1_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR2          0xf432d420
#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_TOP_ADDR2_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2     0xf432d424
#define QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_NEW_ID2            0xf432d428
#define QM_AXI_REO_AXI_REO_WR_NEW_ID2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_NEW_ID2_t;
#endif /* !__ASSEMBLER__ */


#define QM_AXI_REO_AXI_REO_WR_STATUS             0xf432d42c
#define QM_AXI_REO_AXI_REO_WR_STATUS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t return_full          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t return_status        :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} QM_AXI_REO_AXI_REO_WR_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define APB2_QM_AXI_REO_AXI_REO_WR_STRIDE        128
#define APB2_QM_AXI_REO_AXI_REO_WR_COUNT         2



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXI_REO_WR */
#ifndef __ASSEMBLER__
typedef struct {
  QM_AXI_REO_AXI_REO_WR_ORIG_ID_t          ORIG_ID;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  QM_AXI_REO_AXI_REO_WR_NEW_ID_t           NEW_ID;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  QM_AXI_REO_AXI_REO_WR_TOP_ADDR0_t        TOP_ADDR0;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0_t   TOP_ADDR_MASK0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  QM_AXI_REO_AXI_REO_WR_NEW_ID0_t          NEW_ID0;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  QM_AXI_REO_AXI_REO_WR_TOP_ADDR1_t        TOP_ADDR1;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1_t   TOP_ADDR_MASK1;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  QM_AXI_REO_AXI_REO_WR_NEW_ID1_t          NEW_ID1;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  QM_AXI_REO_AXI_REO_WR_TOP_ADDR2_t        TOP_ADDR2;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  QM_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2_t   TOP_ADDR_MASK2;                /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  QM_AXI_REO_AXI_REO_WR_NEW_ID2_t          NEW_ID2;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  QM_AXI_REO_AXI_REO_WR_STATUS_t           STATUS;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[83];
} APB2_QM_AXI_REO_AXI_REO_WR_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* QM_AXI_REO */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_QM_AXI_REO_AXI_REO_RD_t             AXI_REO_RD;                    /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[997];
  APB2_QM_AXI_REO_AXI_REO_WR_t             AXI_REO_WR[2];                 /* addr: 0x00000400 */
} APB2_QM_AXI_REO_t;
#endif /* !__ASSEMBLER__ */


/*
 * DMA_AXI_REO
 */

/*
 * AXI_REO_RD[0..4]
 */

#define DMA_AXI_REO_AXI_REO_RD_ORIG_ID           0xf432e000
#define DMA_AXI_REO_AXI_REO_RD_ORIG_ID_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_ORIG_ID_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_NEW_ID            0xf432e004
#define DMA_AXI_REO_AXI_REO_RD_NEW_ID_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_NEW_ID_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR0         0xf432e008
#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_TOP_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0    0xf432e00c
#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_NEW_ID0           0xf432e010
#define DMA_AXI_REO_AXI_REO_RD_NEW_ID0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_NEW_ID0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR1         0xf432e014
#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_TOP_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1    0xf432e018
#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_NEW_ID1           0xf432e01c
#define DMA_AXI_REO_AXI_REO_RD_NEW_ID1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_NEW_ID1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR2         0xf432e020
#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_TOP_ADDR2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2    0xf432e024
#define DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_NEW_ID2           0xf432e028
#define DMA_AXI_REO_AXI_REO_RD_NEW_ID2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_NEW_ID2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_STATUS            0xf432e02c
#define DMA_AXI_REO_AXI_REO_RD_STATUS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t return_full          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t return_status        :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL 0xf432e030
#define DMA_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL_dft 0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rm1                  :  2 ; /* bits 5:4 */
    ca_uint32_t rme1                 :  1 ; /* bits 6:6 */
    ca_uint32_t test1                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL   0xf432e034
#define DMA_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramls               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define APB2_DMA_AXI_REO_AXI_REO_RD_STRIDE       128
#define APB2_DMA_AXI_REO_AXI_REO_RD_COUNT        5



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXI_REO_RD */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_AXI_REO_AXI_REO_RD_ORIG_ID_t         ORIG_ID;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_AXI_REO_AXI_REO_RD_NEW_ID_t          NEW_ID;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_AXI_REO_AXI_REO_RD_TOP_ADDR0_t       TOP_ADDR0;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK0_t  TOP_ADDR_MASK0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_AXI_REO_AXI_REO_RD_NEW_ID0_t         NEW_ID0;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_AXI_REO_AXI_REO_RD_TOP_ADDR1_t       TOP_ADDR1;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK1_t  TOP_ADDR_MASK1;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_AXI_REO_AXI_REO_RD_NEW_ID1_t         NEW_ID1;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_AXI_REO_AXI_REO_RD_TOP_ADDR2_t       TOP_ADDR2;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_AXI_REO_AXI_REO_RD_TOP_ADDR_MASK2_t  TOP_ADDR_MASK2;                /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_AXI_REO_AXI_REO_RD_NEW_ID2_t         NEW_ID2;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_AXI_REO_AXI_REO_RD_STATUS_t          STATUS;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DMA_AXI_REO_AXI_REO_RD_SRAM_TEST_CONTROL_t SRAM_TEST_CONTROL;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DMA_AXI_REO_AXI_REO_RD_SRAM_LS_CONTROL_t SRAM_LS_CONTROL;               /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[75];
} APB2_DMA_AXI_REO_AXI_REO_RD_t;
#endif /* !__ASSEMBLER__ */


/*
 * AXI_REO_WR[0..2]
 */

#define DMA_AXI_REO_AXI_REO_WR_ORIG_ID           0xf432e400
#define DMA_AXI_REO_AXI_REO_WR_ORIG_ID_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_ORIG_ID_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_NEW_ID            0xf432e404
#define DMA_AXI_REO_AXI_REO_WR_NEW_ID_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_NEW_ID_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR0         0xf432e408
#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_TOP_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0    0xf432e40c
#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_NEW_ID0           0xf432e410
#define DMA_AXI_REO_AXI_REO_WR_NEW_ID0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_NEW_ID0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR1         0xf432e414
#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_TOP_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1    0xf432e418
#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_NEW_ID1           0xf432e41c
#define DMA_AXI_REO_AXI_REO_WR_NEW_ID1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_NEW_ID1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR2         0xf432e420
#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_TOP_ADDR2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2    0xf432e424
#define DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_NEW_ID2           0xf432e428
#define DMA_AXI_REO_AXI_REO_WR_NEW_ID2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_NEW_ID2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_AXI_REO_AXI_REO_WR_STATUS            0xf432e42c
#define DMA_AXI_REO_AXI_REO_WR_STATUS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t return_full          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t return_status        :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_AXI_REO_AXI_REO_WR_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define APB2_DMA_AXI_REO_AXI_REO_WR_STRIDE       128
#define APB2_DMA_AXI_REO_AXI_REO_WR_COUNT        3



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXI_REO_WR */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_AXI_REO_AXI_REO_WR_ORIG_ID_t         ORIG_ID;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_AXI_REO_AXI_REO_WR_NEW_ID_t          NEW_ID;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_AXI_REO_AXI_REO_WR_TOP_ADDR0_t       TOP_ADDR0;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK0_t  TOP_ADDR_MASK0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_AXI_REO_AXI_REO_WR_NEW_ID0_t         NEW_ID0;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_AXI_REO_AXI_REO_WR_TOP_ADDR1_t       TOP_ADDR1;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK1_t  TOP_ADDR_MASK1;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_AXI_REO_AXI_REO_WR_NEW_ID1_t         NEW_ID1;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_AXI_REO_AXI_REO_WR_TOP_ADDR2_t       TOP_ADDR2;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_AXI_REO_AXI_REO_WR_TOP_ADDR_MASK2_t  TOP_ADDR_MASK2;                /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_AXI_REO_AXI_REO_WR_NEW_ID2_t         NEW_ID2;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_AXI_REO_AXI_REO_WR_STATUS_t          STATUS;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[83];
} APB2_DMA_AXI_REO_AXI_REO_WR_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_AXI_REO */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_DMA_AXI_REO_AXI_REO_RD_t            AXI_REO_RD[5];                 /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[384];
  APB2_DMA_AXI_REO_AXI_REO_WR_t            AXI_REO_WR[3];                 /* addr: 0x00000400 */
} APB2_DMA_AXI_REO_t;
#endif /* !__ASSEMBLER__ */


/*
 * L3FE_AXI_REO
 */

#define AXI_REO_RD_ORIG_ID                       0xf432f000
#define AXI_REO_RD_ORIG_ID_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_ORIG_ID_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_NEW_ID                        0xf432f004
#define AXI_REO_RD_NEW_ID_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_NEW_ID_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_TOP_ADDR0                     0xf432f008
#define AXI_REO_RD_TOP_ADDR0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_TOP_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_TOP_ADDR_MASK0                0xf432f00c
#define AXI_REO_RD_TOP_ADDR_MASK0_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_TOP_ADDR_MASK0_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_NEW_ID0                       0xf432f010
#define AXI_REO_RD_NEW_ID0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_NEW_ID0_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_TOP_ADDR1                     0xf432f014
#define AXI_REO_RD_TOP_ADDR1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_TOP_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_TOP_ADDR_MASK1                0xf432f018
#define AXI_REO_RD_TOP_ADDR_MASK1_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_TOP_ADDR_MASK1_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_NEW_ID1                       0xf432f01c
#define AXI_REO_RD_NEW_ID1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_NEW_ID1_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_TOP_ADDR2                     0xf432f020
#define AXI_REO_RD_TOP_ADDR2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_addr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_TOP_ADDR2_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_TOP_ADDR_MASK2                0xf432f024
#define AXI_REO_RD_TOP_ADDR_MASK2_dft            0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id_mask              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_TOP_ADDR_MASK2_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_NEW_ID2                       0xf432f028
#define AXI_REO_RD_NEW_ID2_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_id               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t axi_id_valid         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_NEW_ID2_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_STATUS                        0xf432f02c
#define AXI_REO_RD_STATUS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t return_full          :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t return_status        :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_SRAM_TEST_CONTROL             0xf432f030
#define AXI_REO_RD_SRAM_TEST_CONTROL_dft         0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  2 ; /* bits 1:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 2:2 */
    ca_uint32_t test0                :  1 ; /* bits 3:3 */
    ca_uint32_t rm1                  :  2 ; /* bits 5:4 */
    ca_uint32_t rme1                 :  1 ; /* bits 6:6 */
    ca_uint32_t test1                :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_SRAM_TEST_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define AXI_REO_RD_SRAM_LS_CONTROL               0xf432f034
#define AXI_REO_RD_SRAM_LS_CONTROL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sramls               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} AXI_REO_RD_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define APB2_L3FE_AXI_REO_STRIDE                 128
#define APB2_L3FE_AXI_REO_COUNT                  2



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L3FE_AXI_REO */
#ifndef __ASSEMBLER__
typedef struct {
  AXI_REO_RD_ORIG_ID_t                     ORIG_ID;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  AXI_REO_RD_NEW_ID_t                      NEW_ID;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  AXI_REO_RD_TOP_ADDR0_t                   TOP_ADDR0;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  AXI_REO_RD_TOP_ADDR_MASK0_t              TOP_ADDR_MASK0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  AXI_REO_RD_NEW_ID0_t                     NEW_ID0;                       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  AXI_REO_RD_TOP_ADDR1_t                   TOP_ADDR1;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  AXI_REO_RD_TOP_ADDR_MASK1_t              TOP_ADDR_MASK1;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  AXI_REO_RD_NEW_ID1_t                     NEW_ID1;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  AXI_REO_RD_TOP_ADDR2_t                   TOP_ADDR2;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  AXI_REO_RD_TOP_ADDR_MASK2_t              TOP_ADDR_MASK2;                /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  AXI_REO_RD_NEW_ID2_t                     NEW_ID2;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  AXI_REO_RD_STATUS_t                      STATUS;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  AXI_REO_RD_SRAM_TEST_CONTROL_t           SRAM_TEST_CONTROL;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  AXI_REO_RD_SRAM_LS_CONTROL_t             SRAM_LS_CONTROL;               /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[75];
} APB2_L3FE_AXI_REO_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB2 */

#ifndef __ASSEMBLER__
typedef struct {
  APB2_GLB_t                               GLB;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[6145];
  APB2_CAPSRAM_t                           CAPSRAM;                       /* addr: 0x00002000 */
  ca_uint32_t                              rsrvd2[4083];
  APB2_CCI_t                               CCI;                           /* addr: 0x00003000 */
  ca_uint32_t                              rsrvd3[4085];
  APB2_FLASH_t                             FLASH;                         /* addr: 0x00004000 */
  ca_uint32_t                              rsrvd4[4061];
  APB2_PCIE0_X2_t                          PCIE0_X2;                      /* addr: 0x00005000 */
  ca_uint32_t                              rsrvd5[3865];
  APB2_PCIE1_X2_t                          PCIE1_X2;                      /* addr: 0x00006000 */
  ca_uint32_t                              rsrvd6[3865];
  APB2_PCIE2_X1_t                          PCIE2_X1;                      /* addr: 0x00007000 */
  ca_uint32_t                              rsrvd7[7961];
  APB2_PER_t                               PER;                           /* addr: 0x00009000 */
  ca_uint32_t                              rsrvd8[3537];
  APB2_RTC_t                               RTC;                           /* addr: 0x0000a000 */
  ca_uint32_t                              rsrvd9[4035];
  APB2_USBCFG_t                            USBCFG;                        /* addr: 0x0000b000 */
  ca_uint32_t                              rsrvd10[4021];
  APB2_HSIOBMISC_t                         HSIOBMISC;                     /* addr: 0x0000c000 */
  ca_uint32_t                              rsrvd11[1779];
  APB2_QM_AXI_REO_t                        QM_AXI_REO;                    /* addr: 0x0000d000 */
  ca_uint32_t                              rsrvd12[2816];
  APB2_DMA_AXI_REO_t                       DMA_AXI_REO;                   /* addr: 0x0000e000 */
  ca_uint32_t                              rsrvd13[2688];
  APB2_L3FE_AXI_REO_t                      L3FE_AXI_REO[2];               /* addr: 0x0000f000 */
} APB2_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB3
 */

/*
 * S0_0
 */

#define S0_0_DUMMY_REG_BASE                      0xf4333000
#define S0_0_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} S0_0_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* S0_0 */
#ifndef __ASSEMBLER__
typedef struct {
  S0_0_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_S0_0_t;
#endif /* !__ASSEMBLER__ */


/*
 * S0_1
 */

#define S0_1_DUMMY_REG_BASE                      0xf4334000
#define S0_1_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} S0_1_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* S0_1 */
#ifndef __ASSEMBLER__
typedef struct {
  S0_1_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_S0_1_t;
#endif /* !__ASSEMBLER__ */


/*
 * S1_0
 */

#define S1_0_DUMMY_REG_BASE                      0xf4335000
#define S1_0_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} S1_0_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* S1_0 */
#ifndef __ASSEMBLER__
typedef struct {
  S1_0_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_S1_0_t;
#endif /* !__ASSEMBLER__ */


/*
 * S1_1
 */

#define S1_1_DUMMY_REG_BASE                      0xf4336000
#define S1_1_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} S1_1_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* S1_1 */
#ifndef __ASSEMBLER__
typedef struct {
  S1_1_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_S1_1_t;
#endif /* !__ASSEMBLER__ */


/*
 * S2
 */

#define S2_DUMMY_REG_BASE                        0xf4337000
#define S2_DUMMY_REG_BASE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} S2_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* S2 */
#ifndef __ASSEMBLER__
typedef struct {
  S2_DUMMY_REG_BASE_t                      DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_S2_t;
#endif /* !__ASSEMBLER__ */


/*
 * S3
 */

#define S3_DUMMY_REG_BASE                        0xf4338000
#define S3_DUMMY_REG_BASE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} S3_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* S3 */
#ifndef __ASSEMBLER__
typedef struct {
  S3_DUMMY_REG_BASE_t                      DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_S3_t;
#endif /* !__ASSEMBLER__ */


/*
 * GPHY
 */

#define GPHY_DUMMY_REG_BASE                      0xf4339000
#define GPHY_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPHY_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPHY */
#ifndef __ASSEMBLER__
typedef struct {
  GPHY_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_GPHY_t;
#endif /* !__ASSEMBLER__ */


/*
 * SGMII_LP
 */

#define SGMII_LP_DUMMY_REG_BASE                  0xf433a000
#define SGMII_LP_DUMMY_REG_BASE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} SGMII_LP_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SGMII_LP */
#ifndef __ASSEMBLER__
typedef struct {
  SGMII_LP_DUMMY_REG_BASE_t                DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_SGMII_LP_t;
#endif /* !__ASSEMBLER__ */


/*
 * SGMII_HP
 */

#define SGMII_HP_DUMMY_REG_BASE                  0xf433b000
#define SGMII_HP_DUMMY_REG_BASE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} SGMII_HP_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SGMII_HP */
#ifndef __ASSEMBLER__
typedef struct {
  SGMII_HP_DUMMY_REG_BASE_t                DUMMY_REG_BASE;                /* addr: 0x00000000 */
} APB3_SGMII_HP_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB3 */

#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              rsrvd1[12288];
  APB3_S0_0_t                              S0_0;                          /* addr: 0x00003000 */
  ca_uint32_t                              rsrvd2[4095];
  APB3_S0_1_t                              S0_1;                          /* addr: 0x00004000 */
  ca_uint32_t                              rsrvd3[4095];
  APB3_S1_0_t                              S1_0;                          /* addr: 0x00005000 */
  ca_uint32_t                              rsrvd4[4095];
  APB3_S1_1_t                              S1_1;                          /* addr: 0x00006000 */
  ca_uint32_t                              rsrvd5[4095];
  APB3_S2_t                                S2;                            /* addr: 0x00007000 */
  ca_uint32_t                              rsrvd6[4095];
  APB3_S3_t                                S3;                            /* addr: 0x00008000 */
  ca_uint32_t                              rsrvd7[4095];
  APB3_GPHY_t                              GPHY;                          /* addr: 0x00009000 */
  ca_uint32_t                              rsrvd8[4095];
  APB3_SGMII_LP_t                          SGMII_LP;                      /* addr: 0x0000a000 */
  ca_uint32_t                              rsrvd9[4095];
  APB3_SGMII_HP_t                          SGMII_HP;                      /* addr: 0x0000b000 */
} APB3_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB5
 */



/*
 * APB8
 */

/*
 * GPHY
 */



/*
 * WRAP_GPHY
 */

#define WRAP_GPHY_CTRL0                          0xf4700000
#define WRAP_GPHY_CTRL0_dft                      0x00003110

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_cmds_wr     :  4 ; /* bits 3:0 */
    ca_uint32_t cfg_peri_cmds_rd     :  4 ; /* bits 7:4 */
    ca_uint32_t cfg_peri_wrmsk_en    :  4 ; /* bits 11:8 */
    ca_uint32_t cfg_hotcmd_en        :  3 ; /* bits 14:12 */
    ca_uint32_t cfg_phy_sdet         :  2 ; /* bits 16:15 */
    ca_uint32_t cfg_byps_chk_ini     :  1 ; /* bits 17:17 */
    ca_uint32_t cfg_hotcmd_prd_en    :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL1                          0xf4700004
#define WRAP_GPHY_CTRL1_dft                      0x00010ff0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_iniphy_disgiga   :  4 ; /* bits 3:0 */
    ca_uint32_t cfg_iniphy_pwrup     :  4 ; /* bits 7:4 */
    ca_uint32_t cfg_iniphy_eee       :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t cfg_poll_period      :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd2               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL2                          0xf4700008
#define WRAP_GPHY_CTRL2_dft                      0x0010bc06

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_getpowctrl_adr   : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_getpowctrl_bit   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL2_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL3                          0xf470000c
#define WRAP_GPHY_CTRL3_dft                      0x0800a400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_hotcmd1_adr      : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_hotcmd1_dat      : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL3_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL4                          0xf4700010
#define WRAP_GPHY_CTRL4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_hotcmd2_adr      : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_hotcmd2_wrbus    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL4_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL5                          0xf4700014
#define WRAP_GPHY_CTRL5_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_hotcmd2_inv      : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_hotcmd2_rd       :  1 ; /* bits 16:16 */
    ca_uint32_t cfg_hotcmd2_wrmsk    :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL5_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL6                          0xf4700018
#define WRAP_GPHY_CTRL6_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_inv_en0     : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_peri_inv_en1     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL6_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL7                          0xf470001c
#define WRAP_GPHY_CTRL7_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_inv_en2     : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_peri_inv_en3     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL7_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL8                          0xf4700020
#define WRAP_GPHY_CTRL8_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_wrbus0      : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_peri_wrbus1      : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL8_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL9                          0xf4700024
#define WRAP_GPHY_CTRL9_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_wrbus2      : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_peri_wrbus3      : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL9_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL10                         0xf4700028
#define WRAP_GPHY_CTRL10_dft                     0xa47aa434

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_adr0        : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_peri_adr1        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL10_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL11                         0xf470002c
#define WRAP_GPHY_CTRL11_dft                     0x0000a730

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_peri_adr2        : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_peri_adr3        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL11_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL12                         0xf4700030
#define WRAP_GPHY_CTRL12_dft                     0x1f000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_base_phyad       :  5 ; /* bits 4:0 */
    ca_uint32_t cfg_brd_phyad        :  5 ; /* bits 9:5 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t cfg_phy_brd_mode     :  4 ; /* bits 19:16 */
    ca_uint32_t cfg_msk_mdi          :  4 ; /* bits 23:20 */
    ca_uint32_t cfg_ocp_timeout      :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL12_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_CTRL13                         0xf4700034
#define WRAP_GPHY_CTRL13_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mdio_ocp_sel         :  1 ; /* bits 0:0 */
    ca_uint32_t sel_ext_mdio         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t pll_ate_clk_sel      :  1 ; /* bits 8:8 */
    ca_uint32_t dbgo_gphy_loc_sel    :  3 ; /* bits 11:9 */
    ca_uint32_t patch_phy_done       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_CTRL13_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS0                           0xf4700038
#define WRAP_GPHY_STS0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_pericmd0_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p0_pericmd1_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS0_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS1                           0xf470003c
#define WRAP_GPHY_STS1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_pericmd2_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p0_pericmd3_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS1_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS2                           0xf4700040
#define WRAP_GPHY_STS2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p1_pericmd0_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p1_pericmd1_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS2_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS3                           0xf4700044
#define WRAP_GPHY_STS3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p1_pericmd2_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p1_pericmd3_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS3_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS4                           0xf4700048
#define WRAP_GPHY_STS4_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p2_pericmd0_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p2_pericmd1_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS4_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS5                           0xf470004c
#define WRAP_GPHY_STS5_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p2_pericmd2_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p2_pericmd3_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS5_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS6                           0xf4700050
#define WRAP_GPHY_STS6_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p3_pericmd0_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p3_pericmd1_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS6_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS7                           0xf4700054
#define WRAP_GPHY_STS7_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p3_pericmd2_rddata   : 16 ; /* bits 15:0 */
    ca_uint32_t p3_pericmd3_rddata   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS7_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_STS8                           0xf4700058
#define WRAP_GPHY_STS8_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t p0_phy_in_extini     :  1 ; /* bits 0:0 */
    ca_uint32_t p1_phy_in_extini     :  1 ; /* bits 1:1 */
    ca_uint32_t p2_phy_in_extini     :  1 ; /* bits 2:2 */
    ca_uint32_t p3_phy_in_extini     :  1 ; /* bits 3:3 */
    ca_uint32_t p0_phy_in_lan_on     :  1 ; /* bits 4:4 */
    ca_uint32_t p1_phy_in_lan_on     :  1 ; /* bits 5:5 */
    ca_uint32_t p2_phy_in_lan_on     :  1 ; /* bits 6:6 */
    ca_uint32_t p3_phy_in_lan_on     :  1 ; /* bits 7:7 */
    ca_uint32_t phy_ocp_timeout      :  4 ; /* bits 11:8 */
    ca_uint32_t p0_phy_fatal_err     :  1 ; /* bits 12:12 */
    ca_uint32_t p1_phy_fatal_err     :  1 ; /* bits 13:13 */
    ca_uint32_t p2_phy_fatal_err     :  1 ; /* bits 14:14 */
    ca_uint32_t p3_phy_fatal_err     :  1 ; /* bits 15:15 */
    ca_uint32_t rdy4patch            :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_STS8_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_CENREG0               0xf470005c
#define WRAP_GPHY_GPHY_ANA_CENREG0_dft           0x00010094

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_cen0    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_cen1    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_CENREG0_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_CENREG1               0xf4700060
#define WRAP_GPHY_GPHY_ANA_CENREG1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_cen2    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_cen3    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_CENREG1_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_CENREG2               0xf4700064
#define WRAP_GPHY_GPHY_ANA_CENREG2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_cen4    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_cen5    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_CENREG2_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_CENREG3               0xf4700068
#define WRAP_GPHY_GPHY_ANA_CENREG3_dft           0x0f0f0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_cen6    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_cen7    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_CENREG3_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_CENREG4               0xf470006c
#define WRAP_GPHY_GPHY_ANA_CENREG4_dft           0x0f0f0f0f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_cen8    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_cen9    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_CENREG4_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_CENREG5               0xf4700070
#define WRAP_GPHY_GPHY_ANA_CENREG5_dft           0x0f0f0f0f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_cen10   : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_cen11   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_CENREG5_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_PLLREG0               0xf4700074
#define WRAP_GPHY_GPHY_ANA_PLLREG0_dft           0xeb650063

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_pll0    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_pll1    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_PLLREG0_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_PLLREG1               0xf4700078
#define WRAP_GPHY_GPHY_ANA_PLLREG1_dft           0x00014003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_pll2    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_pll3    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_PLLREG1_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_PLLREG2               0xf470007c
#define WRAP_GPHY_GPHY_ANA_PLLREG2_dft           0x20008003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_pll4    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_pll5    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_PLLREG2_t;
#endif /* !__ASSEMBLER__ */


#define WRAP_GPHY_GPHY_ANA_PLLREG3               0xf4700080
#define WRAP_GPHY_GPHY_ANA_PLLREG3_dft           0x0f007e01

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_gphy_ana_pll6    : 16 ; /* bits 15:0 */
    ca_uint32_t cfg_gphy_ana_pll7    : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} WRAP_GPHY_GPHY_ANA_PLLREG3_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* WRAP_GPHY */
#ifndef __ASSEMBLER__
typedef struct {
  WRAP_GPHY_CTRL0_t                        CTRL0;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  WRAP_GPHY_CTRL1_t                        CTRL1;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  WRAP_GPHY_CTRL2_t                        CTRL2;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  WRAP_GPHY_CTRL3_t                        CTRL3;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  WRAP_GPHY_CTRL4_t                        CTRL4;                         /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  WRAP_GPHY_CTRL5_t                        CTRL5;                         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  WRAP_GPHY_CTRL6_t                        CTRL6;                         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  WRAP_GPHY_CTRL7_t                        CTRL7;                         /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  WRAP_GPHY_CTRL8_t                        CTRL8;                         /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  WRAP_GPHY_CTRL9_t                        CTRL9;                         /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  WRAP_GPHY_CTRL10_t                       CTRL10;                        /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  WRAP_GPHY_CTRL11_t                       CTRL11;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  WRAP_GPHY_CTRL12_t                       CTRL12;                        /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  WRAP_GPHY_CTRL13_t                       CTRL13;                        /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  WRAP_GPHY_STS0_t                         STS0;                          /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  WRAP_GPHY_STS1_t                         STS1;                          /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  WRAP_GPHY_STS2_t                         STS2;                          /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  WRAP_GPHY_STS3_t                         STS3;                          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  WRAP_GPHY_STS4_t                         STS4;                          /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  WRAP_GPHY_STS5_t                         STS5;                          /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  WRAP_GPHY_STS6_t                         STS6;                          /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  WRAP_GPHY_STS7_t                         STS7;                          /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  WRAP_GPHY_STS8_t                         STS8;                          /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  WRAP_GPHY_GPHY_ANA_CENREG0_t             GPHY_ANA_CENREG0;              /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  WRAP_GPHY_GPHY_ANA_CENREG1_t             GPHY_ANA_CENREG1;              /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  WRAP_GPHY_GPHY_ANA_CENREG2_t             GPHY_ANA_CENREG2;              /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  WRAP_GPHY_GPHY_ANA_CENREG3_t             GPHY_ANA_CENREG3;              /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  WRAP_GPHY_GPHY_ANA_CENREG4_t             GPHY_ANA_CENREG4;              /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  WRAP_GPHY_GPHY_ANA_CENREG5_t             GPHY_ANA_CENREG5;              /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  WRAP_GPHY_GPHY_ANA_PLLREG0_t             GPHY_ANA_PLLREG0;              /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  WRAP_GPHY_GPHY_ANA_PLLREG1_t             GPHY_ANA_PLLREG1;              /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  WRAP_GPHY_GPHY_ANA_PLLREG2_t             GPHY_ANA_PLLREG2;              /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  WRAP_GPHY_GPHY_ANA_PLLREG3_t             GPHY_ANA_PLLREG3;              /* addr: 0x00000080 */
} APB8_WRAP_GPHY_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB8 */

#ifndef __ASSEMBLER__
typedef struct {
  ca_uint32_t                              rsrvd1[1048576];
  APB8_WRAP_GPHY_t                         WRAP_GPHY;                     /* addr: 0x00100000 */
} APB8_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB4
 */



/*
 * GPV0
 */

#define GPV0_DUMMY_REG_BASE                      0xf5000000
#define GPV0_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPV0_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPV0 */
#ifndef __ASSEMBLER__
typedef struct {
  GPV0_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} GPV0_t;
#endif /* !__ASSEMBLER__ */


/*
 * GPV1
 */

#define GPV1_DUMMY_REG_BASE                      0xf5100000
#define GPV1_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPV1_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPV1 */
#ifndef __ASSEMBLER__
typedef struct {
  GPV1_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} GPV1_t;
#endif /* !__ASSEMBLER__ */


/*
 * GPV2
 */

#define GPV2_DUMMY_REG_BASE                      0xf5200000
#define GPV2_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPV2_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPV2 */
#ifndef __ASSEMBLER__
typedef struct {
  GPV2_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} GPV2_t;
#endif /* !__ASSEMBLER__ */


/*
 * GPV3
 */

#define GPV3_DUMMY_REG_BASE                      0xf5300000
#define GPV3_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPV3_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPV3 */
#ifndef __ASSEMBLER__
typedef struct {
  GPV3_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} GPV3_t;
#endif /* !__ASSEMBLER__ */


/*
 * GPV4
 */

#define GPV4_DUMMY_REG_BASE                      0xf5400000
#define GPV4_DUMMY_REG_BASE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dummy                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPV4_DUMMY_REG_BASE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPV4 */
#ifndef __ASSEMBLER__
typedef struct {
  GPV4_DUMMY_REG_BASE_t                    DUMMY_REG_BASE;                /* addr: 0x00000000 */
} GPV4_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB7
 */

/*
 * WRAP_PON
 */

/*
 * EPON
 */

/*
 * epon_glb
 */

#define EPON_EPON_GLB_INTERRUPT                  0xf5500000
#define EPON_EPON_GLB_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_epon_int         :  1 ; /* bits 0:0 */
    ca_uint32_t xgepn_int            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t mpcp_int             :  1 ; /* bits 3:3 */
    ca_uint32_t onu_1pps_int         :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t onu_gps_int          :  1 ; /* bits 6:6 */
    ca_uint32_t extif_int            :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_INTERRUPTE                 0xf5500004
#define EPON_EPON_GLB_INTERRUPTE_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_epon_intE        :  1 ; /* bits 0:0 */
    ca_uint32_t xgepn_intE           :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t mpcp_intE            :  1 ; /* bits 3:3 */
    ca_uint32_t onu_1pps_intE        :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t onu_gps_intE         :  1 ; /* bits 6:6 */
    ca_uint32_t extif_intE           :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_ONU_EPON_INTERRUPT         0xf5500008
#define EPON_EPON_GLB_ONU_EPON_INTERRUPT_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t TX_NON_EMPTYi        :  1 ; /* bits 8:8 */
    ca_uint32_t TX_PKT_CUTi          :  1 ; /* bits 9:9 */
    ca_uint32_t TX_OVERRUNi          :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ptp_eg_ltsI          :  1 ; /* bits 12:12 */
    ca_uint32_t TX_PACKET_UFLOWi     :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t BM_PON_TX_MONi       :  1 ; /* bits 15:15 */
    ca_uint32_t txoam_DONEi          :  1 ; /* bits 16:16 */
    ca_uint32_t rx_data_fifo_overflow :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd4               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_ONU_EPON_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_ONU_EPON_INTERRUPTE        0xf550000c
#define EPON_EPON_GLB_ONU_EPON_INTERRUPTE_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t TX_NON_EMPTYiE       :  1 ; /* bits 8:8 */
    ca_uint32_t TX_PKT_CUTiE         :  1 ; /* bits 9:9 */
    ca_uint32_t TX_OVERRUNiE         :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ptp_eg_ltsIE         :  1 ; /* bits 12:12 */
    ca_uint32_t TX_PACKET_UFLOWiE    :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t BM_PON_TX_MONiE      :  1 ; /* bits 15:15 */
    ca_uint32_t txoam_DONEiE         :  1 ; /* bits 16:16 */
    ca_uint32_t rx_data_fifo_overflowE :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd4               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_ONU_EPON_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_EPON_STATUS                0xf5500010
#define EPON_EPON_GLB_EPON_STATUS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sigloss              :  1 ; /* bits 0:0 */
    ca_uint32_t pcs_sync_xg          :  1 ; /* bits 1:1 */
    ca_uint32_t pcs_sync_1g          :  1 ; /* bits 2:2 */
    ca_uint32_t ethernet_mode        :  1 ; /* bits 3:3 */
    ca_uint32_t datapath_speed       :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_EPON_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_STATIC_CFG                 0xf5500014
#define EPON_EPON_GLB_STATIC_CFG_dft             0xcc100c00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sigloss_polarity     :  1 ; /* bits 0:0 */
    ca_uint32_t laser_always_on      :  1 ; /* bits 1:1 */
    ca_uint32_t laser_tx_polarity    :  1 ; /* bits 2:2 */
    ca_uint32_t bc_llid_sel          :  1 ; /* bits 3:3 */
    ca_uint32_t txarb_mpfifo_rst_ctrl :  2 ; /* bits 5:4 */
    ca_uint32_t txarb_datfifo_rst_ctrl :  2 ; /* bits 7:6 */
    ca_uint32_t tx_ipg               :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t dis_pdc_thrtl        :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t tx_dat_ipg           :  4 ; /* bits 27:24 */
    ca_uint32_t tx_oam_ipg           :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_STATIC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGEPN_MAC_ADDR_H           0xf5500018
#define EPON_EPON_GLB_XGEPN_MAC_ADDR_H_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGEPN_MAC_ADDR_H_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGEPN_MAC_ADDR_L           0xf550001c
#define EPON_EPON_GLB_XGEPN_MAC_ADDR_L_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGEPN_MAC_ADDR_L_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_CORESEC10_CFG              0xf5500020
#define EPON_EPON_GLB_CORESEC10_CFG_dft          0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t algo_sel             :  2 ; /* bits 1:0 */
    ca_uint32_t tx_algo_sel          :  2 ; /* bits 3:2 */
    ca_uint32_t tx_IvSa_sel          :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_CORESEC10_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGPCS_FEC_CFG              0xf5500024
#define EPON_EPON_GLB_XGPCS_FEC_CFG_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_off               :  1 ; /* bits 0:0 */
    ca_uint32_t tx_win_ctrl          :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rx_mode              :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGPCS_FEC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGPCS_FEC_RXMODE_ST        0xf5500028
#define EPON_EPON_GLB_XGPCS_FEC_RXMODE_ST_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t misc                 : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t disable              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGPCS_FEC_RXMODE_ST_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGPCS_BD_pattern_fecless2  0xf550002c
#define EPON_EPON_GLB_XGPCS_BD_pattern_fecless2_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val2                 :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGPCS_BD_pattern_fecless2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGPCS_BD_pattern_fecless1  0xf5500030
#define EPON_EPON_GLB_XGPCS_BD_pattern_fecless1_dft 0xb92f1a54

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGPCS_BD_pattern_fecless1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGPCS_BD_pattern_fecless0  0xf5500034
#define EPON_EPON_GLB_XGPCS_BD_pattern_fecless0_dft 0x2c192eba

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGPCS_BD_pattern_fecless0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SFI64_KSDS32_XFER          0xf5500038
#define EPON_EPON_GLB_SFI64_KSDS32_XFER_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rx_swap              :  1 ; /* bits 2:2 */
    ca_uint32_t tx_swap              :  1 ; /* bits 3:3 */
    ca_uint32_t rx_swap_dw           :  1 ; /* bits 4:4 */
    ca_uint32_t tx_swap_dw           :  1 ; /* bits 5:5 */
    ca_uint32_t rx_swap_dw_all       :  1 ; /* bits 6:6 */
    ca_uint32_t tx_swap_dw_all       :  1 ; /* bits 7:7 */
    ca_uint32_t debug_bus_sel        :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SFI64_KSDS32_XFER_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PTP_CFG                    0xf550003c
#define EPON_EPON_GLB_PTP_CFG_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   :  1 ; /* bits 0:0 */
    ca_uint32_t ptp_mode             :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PTP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_NI_MODULE_IRQ_STATS        0xf5500040
#define EPON_EPON_GLB_NI_MODULE_IRQ_STATS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_1pps             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t onurpt               :  1 ; /* bits 4:4 */
    ca_uint32_t onu_epon             :  1 ; /* bits 5:5 */
    ca_uint32_t rsvd_1b              :  1 ; /* bits 6:6 */
    ca_uint32_t xgepn_txarb          :  1 ; /* bits 7:7 */
    ca_uint32_t xgepn_xgmac          :  1 ; /* bits 8:8 */
    ca_uint32_t xgepn_xgpcs_rx       :  1 ; /* bits 9:9 */
    ca_uint32_t xgepn_xgpcs_tx       :  1 ; /* bits 10:10 */
    ca_uint32_t rx_coresec10         :  1 ; /* bits 11:11 */
    ca_uint32_t tx_coresec10         :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_NI_MODULE_IRQ_STATS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_MP_LT_RO_CTRL              0xf5500044
#define EPON_EPON_GLB_MP_LT_RO_CTRL_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t SWpulse              :  1 ; /* bits 1:1 */
    ca_uint32_t ts_en                :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_MP_LT_RO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PUC_CFG0                   0xf5500048
#define EPON_EPON_GLB_PUC_CFG0_dft               0x00300100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc_rpt_latency      : 16 ; /* bits 15:0 */
    ca_uint32_t puc_endrpt_latency   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PUC_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PUC_CFG1                   0xf550004c
#define EPON_EPON_GLB_PUC_CFG1_dft               0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc_sch_latency      :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PUC_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PMAC_PKT_REQ_CNT           0xf5500050
#define EPON_EPON_GLB_PMAC_PKT_REQ_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pmac_pkt_req_cnt     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PMAC_PKT_REQ_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PUC_PKT_CNT                0xf5500054
#define EPON_EPON_GLB_PUC_PKT_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc_pkt_cnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PUC_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PUC_BURST_CNT              0xf5500058
#define EPON_EPON_GLB_PUC_BURST_CNT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc_burst_cnt        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PUC_BURST_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PDC_PKT_CNT                0xf550005c
#define EPON_EPON_GLB_PDC_PKT_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pdc_pkt_cnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PDC_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PUC_SCHSZ_CTRL             0xf5500060
#define EPON_EPON_GLB_PUC_SCHSZ_CTRL_dft         0x000001f4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t puc_schsz            : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t puc_schsz_fixed      :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PUC_SCHSZ_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY0          0xf5500064
#define EPON_EPON_GLB_LLID_TABLE_ENTRY0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY1          0xf5500068
#define EPON_EPON_GLB_LLID_TABLE_ENTRY1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY2          0xf550006c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY3          0xf5500070
#define EPON_EPON_GLB_LLID_TABLE_ENTRY3_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY4          0xf5500074
#define EPON_EPON_GLB_LLID_TABLE_ENTRY4_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY4_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY5          0xf5500078
#define EPON_EPON_GLB_LLID_TABLE_ENTRY5_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY5_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY6          0xf550007c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY6_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY6_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY7          0xf5500080
#define EPON_EPON_GLB_LLID_TABLE_ENTRY7_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY7_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY8          0xf5500084
#define EPON_EPON_GLB_LLID_TABLE_ENTRY8_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY8_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY9          0xf5500088
#define EPON_EPON_GLB_LLID_TABLE_ENTRY9_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY9_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY10         0xf550008c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY10_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY10_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY11         0xf5500090
#define EPON_EPON_GLB_LLID_TABLE_ENTRY11_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY11_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY12         0xf5500094
#define EPON_EPON_GLB_LLID_TABLE_ENTRY12_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY12_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY13         0xf5500098
#define EPON_EPON_GLB_LLID_TABLE_ENTRY13_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY13_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY14         0xf550009c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY14_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY14_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY15         0xf55000a0
#define EPON_EPON_GLB_LLID_TABLE_ENTRY15_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY15_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY16         0xf55000a4
#define EPON_EPON_GLB_LLID_TABLE_ENTRY16_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY16_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY17         0xf55000a8
#define EPON_EPON_GLB_LLID_TABLE_ENTRY17_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY17_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY18         0xf55000ac
#define EPON_EPON_GLB_LLID_TABLE_ENTRY18_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY18_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY19         0xf55000b0
#define EPON_EPON_GLB_LLID_TABLE_ENTRY19_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY19_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY20         0xf55000b4
#define EPON_EPON_GLB_LLID_TABLE_ENTRY20_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY20_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY21         0xf55000b8
#define EPON_EPON_GLB_LLID_TABLE_ENTRY21_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY21_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY22         0xf55000bc
#define EPON_EPON_GLB_LLID_TABLE_ENTRY22_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY22_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY23         0xf55000c0
#define EPON_EPON_GLB_LLID_TABLE_ENTRY23_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY23_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY24         0xf55000c4
#define EPON_EPON_GLB_LLID_TABLE_ENTRY24_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY24_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY25         0xf55000c8
#define EPON_EPON_GLB_LLID_TABLE_ENTRY25_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY25_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY26         0xf55000cc
#define EPON_EPON_GLB_LLID_TABLE_ENTRY26_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY26_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY27         0xf55000d0
#define EPON_EPON_GLB_LLID_TABLE_ENTRY27_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY27_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY28         0xf55000d4
#define EPON_EPON_GLB_LLID_TABLE_ENTRY28_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY28_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY29         0xf55000d8
#define EPON_EPON_GLB_LLID_TABLE_ENTRY29_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY29_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY30         0xf55000dc
#define EPON_EPON_GLB_LLID_TABLE_ENTRY30_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY30_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY31         0xf55000e0
#define EPON_EPON_GLB_LLID_TABLE_ENTRY31_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY31_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY32         0xf55000e4
#define EPON_EPON_GLB_LLID_TABLE_ENTRY32_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY32_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY33         0xf55000e8
#define EPON_EPON_GLB_LLID_TABLE_ENTRY33_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY33_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY34         0xf55000ec
#define EPON_EPON_GLB_LLID_TABLE_ENTRY34_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY34_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY35         0xf55000f0
#define EPON_EPON_GLB_LLID_TABLE_ENTRY35_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY35_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY36         0xf55000f4
#define EPON_EPON_GLB_LLID_TABLE_ENTRY36_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY36_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY37         0xf55000f8
#define EPON_EPON_GLB_LLID_TABLE_ENTRY37_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY37_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY38         0xf55000fc
#define EPON_EPON_GLB_LLID_TABLE_ENTRY38_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY38_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY39         0xf5500100
#define EPON_EPON_GLB_LLID_TABLE_ENTRY39_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY39_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY40         0xf5500104
#define EPON_EPON_GLB_LLID_TABLE_ENTRY40_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY40_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY41         0xf5500108
#define EPON_EPON_GLB_LLID_TABLE_ENTRY41_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY41_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY42         0xf550010c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY42_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY42_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY43         0xf5500110
#define EPON_EPON_GLB_LLID_TABLE_ENTRY43_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY43_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY44         0xf5500114
#define EPON_EPON_GLB_LLID_TABLE_ENTRY44_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY44_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY45         0xf5500118
#define EPON_EPON_GLB_LLID_TABLE_ENTRY45_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY45_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY46         0xf550011c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY46_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY46_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY47         0xf5500120
#define EPON_EPON_GLB_LLID_TABLE_ENTRY47_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY47_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY48         0xf5500124
#define EPON_EPON_GLB_LLID_TABLE_ENTRY48_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY48_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY49         0xf5500128
#define EPON_EPON_GLB_LLID_TABLE_ENTRY49_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY49_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY50         0xf550012c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY50_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY50_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY51         0xf5500130
#define EPON_EPON_GLB_LLID_TABLE_ENTRY51_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY51_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY52         0xf5500134
#define EPON_EPON_GLB_LLID_TABLE_ENTRY52_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY52_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY53         0xf5500138
#define EPON_EPON_GLB_LLID_TABLE_ENTRY53_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY53_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY54         0xf550013c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY54_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY54_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY55         0xf5500140
#define EPON_EPON_GLB_LLID_TABLE_ENTRY55_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY55_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY56         0xf5500144
#define EPON_EPON_GLB_LLID_TABLE_ENTRY56_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY56_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY57         0xf5500148
#define EPON_EPON_GLB_LLID_TABLE_ENTRY57_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY57_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY58         0xf550014c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY58_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY58_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY59         0xf5500150
#define EPON_EPON_GLB_LLID_TABLE_ENTRY59_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY59_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY60         0xf5500154
#define EPON_EPON_GLB_LLID_TABLE_ENTRY60_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY60_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY61         0xf5500158
#define EPON_EPON_GLB_LLID_TABLE_ENTRY61_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY61_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY62         0xf550015c
#define EPON_EPON_GLB_LLID_TABLE_ENTRY62_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY62_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TABLE_ENTRY63         0xf5500160
#define EPON_EPON_GLB_LLID_TABLE_ENTRY63_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t index                :  6 ; /* bits 21:16 */
    ca_uint32_t mcast                :  1 ; /* bits 22:22 */
    ca_uint32_t vld                  :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TABLE_ENTRY63_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TBL_ACC_DAT           0xf5500164
#define EPON_EPON_GLB_LLID_TBL_ACC_DAT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t sw_index             :  6 ; /* bits 21:16 */
    ca_uint32_t mc_llid              :  1 ; /* bits 22:22 */
    ca_uint32_t op                   :  1 ; /* bits 23:23 */
    ca_uint32_t mac_index            :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TBL_ACC_DAT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TBL_ACC               0xf5500168
#define EPON_EPON_GLB_LLID_TBL_ACC_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t acc                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TBL_ACC_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_TBL_ACC_STS           0xf550016c
#define EPON_EPON_GLB_LLID_TBL_ACC_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t status               :  3 ; /* bits 2:0 */
    ca_uint32_t rsv1                 : 29 ; /* bits 31:3 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_TBL_ACC_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_MAPPING_CFG1          0xf5500170
#define EPON_EPON_GLB_LLID_MAPPING_CFG1_dft      0x3c3f003f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fake_bcast_idx       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fake_bc_llid_pass    :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  7 ;
    ca_uint32_t gepn_mpcp_trap       :  1 ; /* bits 15:15 */
    ca_uint32_t bcast_idx            :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sw_mode              :  1 ; /* bits 23:23 */
    ca_uint32_t mon_idx              :  6 ; /* bits 29:24 */
    ca_uint32_t monitor_mode         :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_MAPPING_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_LLID_MAPPING_CFG2          0xf5500174
#define EPON_EPON_GLB_LLID_MAPPING_CFG2_dft      0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reflect_Nmatch_idx   :  6 ; /* bits 5:0 */
    ca_uint32_t reflect_Nmatch_mcast :  1 ; /* bits 6:6 */
    ca_uint32_t reflect_Nmatch_drop  :  1 ; /* bits 7:7 */
    ca_uint32_t reflect_match_idx    :  6 ; /* bits 13:8 */
    ca_uint32_t reflect_match_mcast  :  1 ; /* bits 14:14 */
    ca_uint32_t reflect_match_drop   :  1 ; /* bits 15:15 */
    ca_uint32_t reflect_Nmatch_mac_index :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t reflect_match_mac_index :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_LLID_MAPPING_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_DS_HDRA_CFG1               0xf5500178
#define EPON_EPON_GLB_DS_HDRA_CFG1_dft           0x03800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos                  :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid                :  6 ; /* bits 8:3 */
    ca_uint32_t fe_bypass            :  1 ; /* bits 9:9 */
    ca_uint32_t hdr_type             :  2 ; /* bits 11:10 */
    ca_uint32_t mcgid                :  8 ; /* bits 19:12 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t mirror               :  1 ; /* bits 21:21 */
    ca_uint32_t mark                 :  1 ; /* bits 22:22 */
    ca_uint32_t lspid                :  6 ; /* bits 28:23 */
    ca_uint32_t drop_code            :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_DS_HDRA_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_DS_HDRA_CFG2               0xf550017c
#define EPON_EPON_GLB_DS_HDRA_CFG2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pol_en               :  2 ; /* bits 1:0 */
    ca_uint32_t pol_id               :  9 ; /* bits 10:2 */
    ca_uint32_t pol_grpid            :  3 ; /* bits 13:11 */
    ca_uint32_t dpq                  :  1 ; /* bits 14:14 */
    ca_uint32_t cpu_flg              :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_DS_HDRA_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_MISC_CTRL                  0xf5500180
#define EPON_EPON_GLB_MISC_CTRL_dft              0x00021823

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_burst_oen         :  1 ; /* bits 0:0 */
    ca_uint32_t tx_dis_oen           :  1 ; /* bits 1:1 */
    ca_uint32_t sw_gasp_en           :  1 ; /* bits 2:2 */
    ca_uint32_t sw_gasp              :  1 ; /* bits 3:3 */
    ca_uint32_t dis_opt_power        :  1 ; /* bits 4:4 */
    ca_uint32_t dis_opt_power_polarity :  1 ; /* bits 5:5 */
    ca_uint32_t rsvd1                :  5 ; /* bits 10:6 */
    ca_uint32_t tx_gasp_limit        :  4 ; /* bits 14:11 */
    ca_uint32_t gasp_en              :  1 ; /* bits 15:15 */
    ca_uint32_t rssi_pulse_on        :  1 ; /* bits 16:16 */
    ca_uint32_t rssi_polarity        :  1 ; /* bits 17:17 */
    ca_uint32_t txoam_rpt_replace    :  1 ; /* bits 18:18 */
    ca_uint32_t txfec_1g_on          :  1 ; /* bits 19:19 */
    ca_uint32_t txfec_1g_sel         :  1 ; /* bits 20:20 */
    ca_uint32_t rsvd2                : 10 ; /* bits 30:21 */
    ca_uint32_t llid_tbl_clr_all     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_MISC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_SW_FRAME_HEADER         0xf5500184
#define EPON_EPON_GLB_TX_SW_FRAME_HEADER_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_SW_FRAME_HEADER_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_SW_FRAME_DATA_ACCESS    0xf5500188
#define EPON_EPON_GLB_TX_SW_FRAME_DATA_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_SW_FRAME_DATA_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA1     0xf550018c
#define EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA0     0xf5500190
#define EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_SW_START                0xf5500194
#define EPON_EPON_GLB_TX_SW_START_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ready                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_SW_START_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TXARB_DAT_BUF_THRESHOLD    0xf5500198
#define EPON_EPON_GLB_TXARB_DAT_BUF_THRESHOLD_dft 0x00001600

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lo                   :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t hi                   :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TXARB_DAT_BUF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TXARB_LAST_HDR_SIZE        0xf550019c
#define EPON_EPON_GLB_TXARB_LAST_HDR_SIZE_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr                  : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t count                : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TXARB_LAST_HDR_SIZE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_EXTIF_INTERRUPT            0xf55001a0
#define EPON_EPON_GLB_EXTIF_INTERRUPT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucrpt_error_intrpt  :  1 ; /* bits 0:0 */
    ca_uint32_t pucsch_error_intrpt  :  1 ; /* bits 1:1 */
    ca_uint32_t puc_pkt_lengthERRi   :  1 ; /* bits 2:2 */
    ca_uint32_t sig_LOSSi            :  1 ; /* bits 3:3 */
    ca_uint32_t puc_miss_eop_intrpt  :  1 ; /* bits 4:4 */
    ca_uint32_t txarb_pkt_size_mismatch :  1 ; /* bits 5:5 */
    ca_uint32_t pcs_sync_1gi         :  1 ; /* bits 6:6 */
    ca_uint32_t pdc_pmac_throttle    :  1 ; /* bits 7:7 */
    ca_uint32_t rsv8                 :  1 ; /* bits 8:8 */
    ca_uint32_t rsv9                 :  1 ; /* bits 9:9 */
    ca_uint32_t rsv10                :  1 ; /* bits 10:10 */
    ca_uint32_t rsv11                :  1 ; /* bits 11:11 */
    ca_uint32_t rsv12                :  1 ; /* bits 12:12 */
    ca_uint32_t rsv13                :  1 ; /* bits 13:13 */
    ca_uint32_t rsv14                :  1 ; /* bits 14:14 */
    ca_uint32_t rsv15                :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_EXTIF_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_EXTIF_INTERRUPTE           0xf55001a4
#define EPON_EPON_GLB_EXTIF_INTERRUPTE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucrpt_error_intrptE :  1 ; /* bits 0:0 */
    ca_uint32_t pucsch_error_intrptE :  1 ; /* bits 1:1 */
    ca_uint32_t puc_pkt_lengthERRiE  :  1 ; /* bits 2:2 */
    ca_uint32_t sig_LOSSiE           :  1 ; /* bits 3:3 */
    ca_uint32_t puc_miss_eop_intrptE :  1 ; /* bits 4:4 */
    ca_uint32_t txarb_pkt_size_mismatchE :  1 ; /* bits 5:5 */
    ca_uint32_t pcs_sync_1giE        :  1 ; /* bits 6:6 */
    ca_uint32_t pdc_pmac_throttleE   :  1 ; /* bits 7:7 */
    ca_uint32_t rsv8E                :  1 ; /* bits 8:8 */
    ca_uint32_t rsv9E                :  1 ; /* bits 9:9 */
    ca_uint32_t rsv10E               :  1 ; /* bits 10:10 */
    ca_uint32_t rsv11E               :  1 ; /* bits 11:11 */
    ca_uint32_t rsv12E               :  1 ; /* bits 12:12 */
    ca_uint32_t rsv13E               :  1 ; /* bits 13:13 */
    ca_uint32_t rsv14E               :  1 ; /* bits 14:14 */
    ca_uint32_t rsv15E               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_EXTIF_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_PUC_PKT_LENGTH             0xf55001a8
#define EPON_EPON_GLB_PUC_PKT_LENGTH_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t received_puc_pkt_byte : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t received_puc_pkt_len : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_PUC_PKT_LENGTH_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_REVISION                   0xf55001ac
#define EPON_EPON_GLB_REVISION_dft               0x20170217

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t date                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_REVISION_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_CVS_REV                    0xf55001b0
#define EPON_EPON_GLB_CVS_REV_dft                0x20161005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_CVS_REV_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SW_TXPKT_CNTR              0xf55001b4
#define EPON_EPON_GLB_SW_TXPKT_CNTR_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pktcnt            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SW_TXPKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_DAT_TXPKT_CNTR             0xf55001b8
#define EPON_EPON_GLB_DAT_TXPKT_CNTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pktcnt            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_DAT_TXPKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_EXTENSION_TYPE_CFG         0xf55001bc
#define EPON_EPON_GLB_EXTENSION_TYPE_CFG_dft     0x8808fffe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ext                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_EXTENSION_TYPE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGEPON_INTERRUPT           0xf55001c0
#define EPON_EPON_GLB_XGEPON_INTERRUPT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t xgepn_xgmac          :  1 ; /* bits 8:8 */
    ca_uint32_t xgepn_xgpcs_rx       :  1 ; /* bits 9:9 */
    ca_uint32_t xgepn_xgpcs_tx       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGEPON_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_XGEPON_INTERRUPTE          0xf55001c4
#define EPON_EPON_GLB_XGEPON_INTERRUPTE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t xgepn_xgmacE         :  1 ; /* bits 8:8 */
    ca_uint32_t xgepn_xgpcs_rxE      :  1 ; /* bits 9:9 */
    ca_uint32_t xgepn_xgpcs_txE      :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_XGEPON_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SPARE_CFG                  0xf55001c8
#define EPON_EPON_GLB_SPARE_CFG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare_csr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_GASP_FRAME_HEADER       0xf55001cc
#define EPON_EPON_GLB_TX_GASP_FRAME_HEADER_dft   0x00f86040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_GASP_FRAME_HEADER_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_GASP_TXPKT_CNTR            0xf55001d0
#define EPON_EPON_GLB_GASP_TXPKT_CNTR_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pktcnt            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_GASP_TXPKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SPARE_STS                  0xf55001d4
#define EPON_EPON_GLB_SPARE_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare_sts            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_RX_ENC_CNT                 0xf55001d8
#define EPON_EPON_GLB_RX_ENC_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_enc_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_RX_ENC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_RX_NENC_CNT                0xf55001dc
#define EPON_EPON_GLB_RX_NENC_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_nenc_cnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_RX_NENC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_ENC_CNT                 0xf55001e0
#define EPON_EPON_GLB_TX_ENC_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_enc_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_ENC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_TX_NENC_CNT                0xf55001e4
#define EPON_EPON_GLB_TX_NENC_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_nenc_cnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_TX_NENC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_CONTROL_CFG           0xf55001e8
#define EPON_EPON_GLB_FLOW_CONTROL_CFG_dft       0xd0ff0070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qbb_tx_en            :  1 ; /* bits 0:0 */
    ca_uint32_t qbb_rx_en            :  1 ; /* bits 1:1 */
    ca_uint32_t pau_tx_en            :  1 ; /* bits 2:2 */
    ca_uint32_t pau_rx_en            :  1 ; /* bits 3:3 */
    ca_uint32_t adjust_pause_cnt     : 12 ; /* bits 15:4 */
    ca_uint32_t qbb_qen              :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tx_sw_pause_en       :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t internal_txstop_sel  :  1 ; /* bits 28:28 */
    ca_uint32_t tx_pause_sel_l2te    :  1 ; /* bits 29:29 */
    ca_uint32_t rx_pausereq_sel      :  1 ; /* bits 30:30 */
    ca_uint32_t te_pausereq_sel      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_CONTROL_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_TX_REPEAT_CNT         0xf55001ec
#define EPON_EPON_GLB_FLOW_TX_REPEAT_CNT_dft     0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t repeat_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_TX_REPEAT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_TX_QUANTA0            0xf55001f0
#define EPON_EPON_GLB_FLOW_TX_QUANTA0_dft        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta0        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta1        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_TX_QUANTA0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_TX_QUANTA1            0xf55001f4
#define EPON_EPON_GLB_FLOW_TX_QUANTA1_dft        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta2        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta3        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_TX_QUANTA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_TX_QUANTA2            0xf55001f8
#define EPON_EPON_GLB_FLOW_TX_QUANTA2_dft        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta4        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta5        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_TX_QUANTA2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_TX_QUANTA3            0xf55001fc
#define EPON_EPON_GLB_FLOW_TX_QUANTA3_dft        0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta6        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta7        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_TX_QUANTA3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_FLOW_QBB_WAIT_TIME         0xf5500200
#define EPON_EPON_GLB_FLOW_QBB_WAIT_TIME_dft     0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wait_cnt             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_FLOW_QBB_WAIT_TIME_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SRAMTEST_CFG1              0xf5500204
#define EPON_EPON_GLB_SRAMTEST_CFG1_dft          0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t m10ge_txmib_ctl      : 16 ; /* bits 15:0 */
    ca_uint32_t m10ge_mac_2p_ctl     : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SRAMTEST_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SRAMTEST_CFG2              0xf5500208
#define EPON_EPON_GLB_SRAMTEST_CFG2_dft          0x00222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t m10ge_rxmib_ctl      : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SRAMTEST_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SRAMTEST_CFG31             0xf550020c
#define EPON_EPON_GLB_SRAMTEST_CFG31_dft         0x00222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t m1ge_fec_mac_ctl1    : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SRAMTEST_CFG31_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SRAMTEST_CFG30             0xf5500210
#define EPON_EPON_GLB_SRAMTEST_CFG30_dft         0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t m1ge_fec_mac_ctl0    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SRAMTEST_CFG30_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SRAMTEST_CFG4              0xf5500214
#define EPON_EPON_GLB_SRAMTEST_CFG4_dft          0x00022222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_fifo_2p_ctl     :  8 ; /* bits 7:0 */
    ca_uint32_t m1ge_rxctrl_mpcp_ctl :  8 ; /* bits 15:8 */
    ca_uint32_t m10ge_txarb_ctl      :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SRAMTEST_CFG4_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_SRAMTEST_CFG5              0xf5500218
#define EPON_EPON_GLB_SRAMTEST_CFG5_dft          0x22222222

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t m10ge_mac_ctl        :  8 ; /* bits 7:0 */
    ca_uint32_t m10g_fec_m1_ctl      :  8 ; /* bits 15:8 */
    ca_uint32_t m10ge_txarb_2p_ctl   :  8 ; /* bits 23:16 */
    ca_uint32_t txarb_mpcp_2p_ctl    :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_SRAMTEST_CFG5_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_GLB_EPON_DUMMY_00              0xf550021c
#define EPON_EPON_GLB_EPON_DUMMY_00_dft          0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t epon_dummy_00        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_GLB_EPON_DUMMY_00_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* epon_glb */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_EPON_GLB_INTERRUPT_t                INTERRUPT;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_EPON_GLB_INTERRUPTE_t               INTERRUPTE;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_EPON_GLB_ONU_EPON_INTERRUPT_t       ONU_EPON_INTERRUPT;            /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_EPON_GLB_ONU_EPON_INTERRUPTE_t      ONU_EPON_INTERRUPTE;           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_EPON_GLB_EPON_STATUS_t              EPON_STATUS;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_EPON_GLB_STATIC_CFG_t               STATIC_CFG;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_EPON_GLB_XGEPN_MAC_ADDR_H_t         XGEPN_MAC_ADDR_H;              /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_EPON_GLB_XGEPN_MAC_ADDR_L_t         XGEPN_MAC_ADDR_L;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_EPON_GLB_CORESEC10_CFG_t            CORESEC10_CFG;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_EPON_GLB_XGPCS_FEC_CFG_t            XGPCS_FEC_CFG;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_EPON_GLB_XGPCS_FEC_RXMODE_ST_t      XGPCS_FEC_RXMODE_ST;           /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_EPON_GLB_XGPCS_BD_pattern_fecless2_t XGPCS_BD_pattern_fecless2;     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_EPON_GLB_XGPCS_BD_pattern_fecless1_t XGPCS_BD_pattern_fecless1;     /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_EPON_GLB_XGPCS_BD_pattern_fecless0_t XGPCS_BD_pattern_fecless0;     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_EPON_GLB_SFI64_KSDS32_XFER_t        SFI64_KSDS32_XFER;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_EPON_GLB_PTP_CFG_t                  PTP_CFG;                       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_EPON_GLB_NI_MODULE_IRQ_STATS_t      NI_MODULE_IRQ_STATS;           /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_EPON_GLB_MP_LT_RO_CTRL_t            MP_LT_RO_CTRL;                 /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_EPON_GLB_PUC_CFG0_t                 PUC_CFG0;                      /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_EPON_GLB_PUC_CFG1_t                 PUC_CFG1;                      /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_EPON_GLB_PMAC_PKT_REQ_CNT_t         PMAC_PKT_REQ_CNT;              /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_EPON_GLB_PUC_PKT_CNT_t              PUC_PKT_CNT;                   /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_EPON_GLB_PUC_BURST_CNT_t            PUC_BURST_CNT;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_EPON_GLB_PDC_PKT_CNT_t              PDC_PKT_CNT;                   /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_EPON_GLB_PUC_SCHSZ_CTRL_t           PUC_SCHSZ_CTRL;                /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY0_t        LLID_TABLE_ENTRY0;             /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY1_t        LLID_TABLE_ENTRY1;             /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY2_t        LLID_TABLE_ENTRY2;             /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY3_t        LLID_TABLE_ENTRY3;             /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY4_t        LLID_TABLE_ENTRY4;             /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY5_t        LLID_TABLE_ENTRY5;             /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY6_t        LLID_TABLE_ENTRY6;             /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY7_t        LLID_TABLE_ENTRY7;             /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY8_t        LLID_TABLE_ENTRY8;             /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY9_t        LLID_TABLE_ENTRY9;             /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY10_t       LLID_TABLE_ENTRY10;            /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY11_t       LLID_TABLE_ENTRY11;            /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY12_t       LLID_TABLE_ENTRY12;            /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY13_t       LLID_TABLE_ENTRY13;            /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY14_t       LLID_TABLE_ENTRY14;            /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY15_t       LLID_TABLE_ENTRY15;            /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY16_t       LLID_TABLE_ENTRY16;            /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY17_t       LLID_TABLE_ENTRY17;            /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY18_t       LLID_TABLE_ENTRY18;            /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY19_t       LLID_TABLE_ENTRY19;            /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY20_t       LLID_TABLE_ENTRY20;            /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY21_t       LLID_TABLE_ENTRY21;            /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY22_t       LLID_TABLE_ENTRY22;            /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY23_t       LLID_TABLE_ENTRY23;            /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY24_t       LLID_TABLE_ENTRY24;            /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY25_t       LLID_TABLE_ENTRY25;            /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY26_t       LLID_TABLE_ENTRY26;            /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY27_t       LLID_TABLE_ENTRY27;            /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY28_t       LLID_TABLE_ENTRY28;            /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY29_t       LLID_TABLE_ENTRY29;            /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY30_t       LLID_TABLE_ENTRY30;            /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY31_t       LLID_TABLE_ENTRY31;            /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY32_t       LLID_TABLE_ENTRY32;            /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY33_t       LLID_TABLE_ENTRY33;            /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY34_t       LLID_TABLE_ENTRY34;            /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY35_t       LLID_TABLE_ENTRY35;            /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY36_t       LLID_TABLE_ENTRY36;            /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY37_t       LLID_TABLE_ENTRY37;            /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY38_t       LLID_TABLE_ENTRY38;            /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY39_t       LLID_TABLE_ENTRY39;            /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY40_t       LLID_TABLE_ENTRY40;            /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY41_t       LLID_TABLE_ENTRY41;            /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY42_t       LLID_TABLE_ENTRY42;            /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY43_t       LLID_TABLE_ENTRY43;            /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY44_t       LLID_TABLE_ENTRY44;            /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY45_t       LLID_TABLE_ENTRY45;            /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY46_t       LLID_TABLE_ENTRY46;            /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY47_t       LLID_TABLE_ENTRY47;            /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY48_t       LLID_TABLE_ENTRY48;            /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY49_t       LLID_TABLE_ENTRY49;            /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY50_t       LLID_TABLE_ENTRY50;            /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY51_t       LLID_TABLE_ENTRY51;            /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY52_t       LLID_TABLE_ENTRY52;            /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY53_t       LLID_TABLE_ENTRY53;            /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY54_t       LLID_TABLE_ENTRY54;            /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY55_t       LLID_TABLE_ENTRY55;            /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY56_t       LLID_TABLE_ENTRY56;            /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY57_t       LLID_TABLE_ENTRY57;            /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY58_t       LLID_TABLE_ENTRY58;            /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY59_t       LLID_TABLE_ENTRY59;            /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY60_t       LLID_TABLE_ENTRY60;            /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY61_t       LLID_TABLE_ENTRY61;            /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY62_t       LLID_TABLE_ENTRY62;            /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  EPON_EPON_GLB_LLID_TABLE_ENTRY63_t       LLID_TABLE_ENTRY63;            /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  EPON_EPON_GLB_LLID_TBL_ACC_DAT_t         LLID_TBL_ACC_DAT;              /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  EPON_EPON_GLB_LLID_TBL_ACC_t             LLID_TBL_ACC;                  /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  EPON_EPON_GLB_LLID_TBL_ACC_STS_t         LLID_TBL_ACC_STS;              /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  EPON_EPON_GLB_LLID_MAPPING_CFG1_t        LLID_MAPPING_CFG1;             /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  EPON_EPON_GLB_LLID_MAPPING_CFG2_t        LLID_MAPPING_CFG2;             /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  EPON_EPON_GLB_DS_HDRA_CFG1_t             DS_HDRA_CFG1;                  /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  EPON_EPON_GLB_DS_HDRA_CFG2_t             DS_HDRA_CFG2;                  /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  EPON_EPON_GLB_MISC_CTRL_t                MISC_CTRL;                     /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  EPON_EPON_GLB_TX_SW_FRAME_HEADER_t       TX_SW_FRAME_HEADER;            /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  EPON_EPON_GLB_TX_SW_FRAME_DATA_ACCESS_t  TX_SW_FRAME_DATA_ACCESS;       /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA1_t   TX_SW_FRAME_DATA_DATA1;        /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  EPON_EPON_GLB_TX_SW_FRAME_DATA_DATA0_t   TX_SW_FRAME_DATA_DATA0;        /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  EPON_EPON_GLB_TX_SW_START_t              TX_SW_START;                   /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  EPON_EPON_GLB_TXARB_DAT_BUF_THRESHOLD_t  TXARB_DAT_BUF_THRESHOLD;       /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  EPON_EPON_GLB_TXARB_LAST_HDR_SIZE_t      TXARB_LAST_HDR_SIZE;           /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  EPON_EPON_GLB_EXTIF_INTERRUPT_t          EXTIF_INTERRUPT;               /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  EPON_EPON_GLB_EXTIF_INTERRUPTE_t         EXTIF_INTERRUPTE;              /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  EPON_EPON_GLB_PUC_PKT_LENGTH_t           PUC_PKT_LENGTH;                /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  EPON_EPON_GLB_REVISION_t                 REVISION;                      /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  EPON_EPON_GLB_CVS_REV_t                  CVS_REV;                       /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  EPON_EPON_GLB_SW_TXPKT_CNTR_t            SW_TXPKT_CNTR;                 /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  EPON_EPON_GLB_DAT_TXPKT_CNTR_t           DAT_TXPKT_CNTR;                /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  EPON_EPON_GLB_EXTENSION_TYPE_CFG_t       EXTENSION_TYPE_CFG;            /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  EPON_EPON_GLB_XGEPON_INTERRUPT_t         XGEPON_INTERRUPT;              /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  EPON_EPON_GLB_XGEPON_INTERRUPTE_t        XGEPON_INTERRUPTE;             /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  EPON_EPON_GLB_SPARE_CFG_t                SPARE_CFG;                     /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  EPON_EPON_GLB_TX_GASP_FRAME_HEADER_t     TX_GASP_FRAME_HEADER;          /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd116[3];
  EPON_EPON_GLB_GASP_TXPKT_CNTR_t          GASP_TXPKT_CNTR;               /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd117[3];
  EPON_EPON_GLB_SPARE_STS_t                SPARE_STS;                     /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd118[3];
  EPON_EPON_GLB_RX_ENC_CNT_t               RX_ENC_CNT;                    /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd119[3];
  EPON_EPON_GLB_RX_NENC_CNT_t              RX_NENC_CNT;                   /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd120[3];
  EPON_EPON_GLB_TX_ENC_CNT_t               TX_ENC_CNT;                    /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd121[3];
  EPON_EPON_GLB_TX_NENC_CNT_t              TX_NENC_CNT;                   /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd122[3];
  EPON_EPON_GLB_FLOW_CONTROL_CFG_t         FLOW_CONTROL_CFG;              /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd123[3];
  EPON_EPON_GLB_FLOW_TX_REPEAT_CNT_t       FLOW_TX_REPEAT_CNT;            /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd124[3];
  EPON_EPON_GLB_FLOW_TX_QUANTA0_t          FLOW_TX_QUANTA0;               /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd125[3];
  EPON_EPON_GLB_FLOW_TX_QUANTA1_t          FLOW_TX_QUANTA1;               /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd126[3];
  EPON_EPON_GLB_FLOW_TX_QUANTA2_t          FLOW_TX_QUANTA2;               /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd127[3];
  EPON_EPON_GLB_FLOW_TX_QUANTA3_t          FLOW_TX_QUANTA3;               /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd128[3];
  EPON_EPON_GLB_FLOW_QBB_WAIT_TIME_t       FLOW_QBB_WAIT_TIME;            /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd129[3];
  EPON_EPON_GLB_SRAMTEST_CFG1_t            SRAMTEST_CFG1;                 /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd130[3];
  EPON_EPON_GLB_SRAMTEST_CFG2_t            SRAMTEST_CFG2;                 /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd131[3];
  EPON_EPON_GLB_SRAMTEST_CFG31_t           SRAMTEST_CFG31;                /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd132[3];
  EPON_EPON_GLB_SRAMTEST_CFG30_t           SRAMTEST_CFG30;                /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd133[3];
  EPON_EPON_GLB_SRAMTEST_CFG4_t            SRAMTEST_CFG4;                 /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd134[3];
  EPON_EPON_GLB_SRAMTEST_CFG5_t            SRAMTEST_CFG5;                 /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd135[3];
  EPON_EPON_GLB_EPON_DUMMY_00_t            EPON_DUMMY_00;                 /* addr: 0x0000021c */
} APB7_EPON_EPON_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * epon_mib
 */

#define EPON_EPON_MIB_MIB_RAM_STATUS_REG         0xf5500600
#define EPON_EPON_MIB_MIB_RAM_STATUS_REG_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_initdone         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_MIB_RAM_STATUS_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_MIB_CTL                    0xf5500604
#define EPON_EPON_MIB_MIB_CTL_dft                0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_clr_en           :  1 ; /* bits 0:0 */
    ca_uint32_t ram_sw_initial       :  1 ; /* bits 1:1 */
    ca_uint32_t dbg_en               :  1 ; /* bits 2:2 */
    ca_uint32_t ram_init_en          :  1 ; /* bits 3:3 */
    ca_uint32_t term_dbg_en          :  1 ; /* bits 4:4 */
    ca_uint32_t ex_oam_in_bytecnt    :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_MIB_CTL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_ACCESS 0xf5500608
#define EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_DATA  0xf550060c
#define EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_ACCESS 0xf5500610
#define EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_DATA 0xf5500614
#define EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_ACCESS 0xf5500618
#define EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_DATA 0xf550061c
#define EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_ACCESS 0xf5500620
#define EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_DATA  0xf5500624
#define EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_ACCESS 0xf5500628
#define EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 19 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_DATA 0xf550062c
#define EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_ACCESS 0xf5500630
#define EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_DATA 0xf5500634
#define EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_MIB_TX_DROPCNT             0xf5500638
#define EPON_EPON_MIB_MIB_TX_DROPCNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_MIB_TX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_MIB_RX_DROPCNT             0xf550063c
#define EPON_EPON_MIB_MIB_RX_DROPCNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_MIB_RX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_LLID_MIB_RX_BYTECNT_HI     0xf5500640
#define EPON_EPON_MIB_LLID_MIB_RX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_LLID_MIB_RX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_LLID_MIB_TX_BYTECNT_HI     0xf5500644
#define EPON_EPON_MIB_LLID_MIB_TX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_LLID_MIB_TX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_XGEPN_MIB_RX_BYTECNT_HI    0xf5500648
#define EPON_EPON_MIB_XGEPN_MIB_RX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_XGEPN_MIB_RX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_XGEPN_MIB_TX_BYTECNT_HI    0xf550064c
#define EPON_EPON_MIB_XGEPN_MIB_TX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mib_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_XGEPN_MIB_TX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_XOFF_PKT_CNT               0xf5500650
#define EPON_EPON_MIB_XOFF_PKT_CNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xoff_pkt_cnt         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_XOFF_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_EPON_MIB_XON_PKT_CNT                0xf5500654
#define EPON_EPON_MIB_XON_PKT_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xon_pkt_cnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_EPON_MIB_XON_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* epon_mib */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_EPON_MIB_MIB_RAM_STATUS_REG_t       MIB_RAM_STATUS_REG;            /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_EPON_MIB_MIB_CTL_t                  MIB_CTL;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_ACCESS_t RX_LLID_MPCP_MIB_ACC_ACCESS;   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_EPON_MIB_RX_LLID_MPCP_MIB_ACC_DATA_t RX_LLID_MPCP_MIB_ACC_DATA;     /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_ACCESS_t RX_LLID_FRMCNT_MIB_ACC_ACCESS; /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_EPON_MIB_RX_LLID_FRMCNT_MIB_ACC_DATA_t RX_LLID_FRMCNT_MIB_ACC_DATA;   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_ACCESS_t RX_XGEPON_ETHNET_MIB_ACC_ACCESS; /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_EPON_MIB_RX_XGEPON_ETHNET_MIB_ACC_DATA_t RX_XGEPON_ETHNET_MIB_ACC_DATA; /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_ACCESS_t TX_LLID_MPCP_MIB_ACC_ACCESS;   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_EPON_MIB_TX_LLID_MPCP_MIB_ACC_DATA_t TX_LLID_MPCP_MIB_ACC_DATA;     /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_ACCESS_t TX_LLID_FRMCNT_MIB_ACC_ACCESS; /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_EPON_MIB_TX_LLID_FRMCNT_MIB_ACC_DATA_t TX_LLID_FRMCNT_MIB_ACC_DATA;   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_ACCESS_t TX_XGEPON_ETHNET_MIB_ACC_ACCESS; /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_EPON_MIB_TX_XGEPON_ETHNET_MIB_ACC_DATA_t TX_XGEPON_ETHNET_MIB_ACC_DATA; /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_EPON_MIB_MIB_TX_DROPCNT_t           MIB_TX_DROPCNT;                /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_EPON_MIB_MIB_RX_DROPCNT_t           MIB_RX_DROPCNT;                /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_EPON_MIB_LLID_MIB_RX_BYTECNT_HI_t   LLID_MIB_RX_BYTECNT_HI;        /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_EPON_MIB_LLID_MIB_TX_BYTECNT_HI_t   LLID_MIB_TX_BYTECNT_HI;        /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_EPON_MIB_XGEPN_MIB_RX_BYTECNT_HI_t  XGEPN_MIB_RX_BYTECNT_HI;       /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_EPON_MIB_XGEPN_MIB_TX_BYTECNT_HI_t  XGEPN_MIB_TX_BYTECNT_HI;       /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_EPON_MIB_XOFF_PKT_CNT_t             XOFF_PKT_CNT;                  /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_EPON_MIB_XON_PKT_CNT_t              XON_PKT_CNT;                   /* addr: 0x00000054 */
} APB7_EPON_EPON_MIB_t;
#endif /* !__ASSEMBLER__ */


/*
 * ONU_EPON
 */

#define EPON_ONU_EPON_PCS_CFG                    0xf5500800
#define EPON_ONU_EPON_PCS_CFG_dft                0x00235c08

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcs_loop_cnt_hi      :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t pon_10balign_en      :  1 ; /* bits 10:10 */
    ca_uint32_t pon_fec_sync_en      :  1 ; /* bits 11:11 */
    ca_uint32_t pcs_loop_cnt_lo      :  4 ; /* bits 15:12 */
    ca_uint32_t an_ps1               :  1 ; /* bits 16:16 */
    ca_uint32_t an_ps2               :  1 ; /* bits 17:17 */
    ca_uint32_t an_rf1               :  1 ; /* bits 18:18 */
    ca_uint32_t an_rf2               :  1 ; /* bits 19:19 */
    ca_uint32_t restart_auto_neg     :  1 ; /* bits 20:20 */
    ca_uint32_t dis_auto_neg         :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PCS_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PCS_Status_Reg             0xf5500804
#define EPON_ONU_EPON_PCS_Status_Reg_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t An_PS1               :  1 ; /* bits 1:1 */
    ca_uint32_t An_PS2               :  1 ; /* bits 2:2 */
    ca_uint32_t An_RF1               :  1 ; /* bits 3:3 */
    ca_uint32_t An_RF2               :  1 ; /* bits 4:4 */
    ca_uint32_t Link_partner_duplex  :  1 ; /* bits 5:5 */
    ca_uint32_t An_done              :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PCS_Status_Reg_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_CFG                    0xf5500808
#define EPON_ONU_EPON_FEC_CFG_dft                0x0000c160

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t tx_1st_preamble_mode :  1 ; /* bits 5:5 */
    ca_uint32_t tx_rep_mode          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t tfec_rep             :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t tx_ipg_adj           :  3 ; /* bits 14:12 */
    ca_uint32_t tx_fec8B             :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd4               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_TX_ERRINJ              0xf550080c
#define EPON_ONU_EPON_FEC_TX_ERRINJ_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_sfec             :  1 ; /* bits 0:0 */
    ca_uint32_t err_data             :  1 ; /* bits 1:1 */
    ca_uint32_t err_tfec1            :  1 ; /* bits 2:2 */
    ca_uint32_t err_prty             :  1 ; /* bits 3:3 */
    ca_uint32_t err_tfec2            :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t err_bytecnt          :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t err_bitcnt           :  2 ; /* bits 15:14 */
    ca_uint32_t err_pktcnt           :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t err_burst            :  1 ; /* bits 26:26 */
    ca_uint32_t err_sel              :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t err_en               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_TX_ERRINJ_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_CTRL                   0xf5500810
#define EPON_ONU_EPON_FEC_CTRL_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fec_decode_enable    :  1 ; /* bits 0:0 */
    ca_uint32_t fec_encode_enable    :  1 ; /* bits 1:1 */
    ca_uint32_t fec_rx_clr           :  1 ; /* bits 2:2 */
    ca_uint32_t fec_tx_clr           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rsv7                 :  1 ; /* bits 7:7 */
    ca_uint32_t non_FEC_mode         :  1 ; /* bits 8:8 */
    ca_uint32_t rsv1                 :  1 ; /* bits 9:9 */
    ca_uint32_t rsv2                 :  1 ; /* bits 10:10 */
    ca_uint32_t rsv3                 :  1 ; /* bits 11:11 */
    ca_uint32_t rsv4                 :  1 ; /* bits 12:12 */
    ca_uint32_t rsv5                 :  1 ; /* bits 13:13 */
    ca_uint32_t fec_rx_ctrl          : 11 ; /* bits 24:14 */
    ca_uint32_t rsrvd2               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_TX_RCC_CNT                 0xf5500814
#define EPON_ONU_EPON_TX_RCC_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_TX_RCC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_MISC_STATUS            0xf5500818
#define EPON_ONU_EPON_FEC_MISC_STATUS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pack_full            :  1 ; /* bits 0:0 */
    ca_uint32_t prty_full            :  1 ; /* bits 1:1 */
    ca_uint32_t cmd_full             :  1 ; /* bits 2:2 */
    ca_uint32_t cwb_full             :  1 ; /* bits 3:3 */
    ca_uint32_t pipe_stall           :  1 ; /* bits 4:4 */
    ca_uint32_t los_tfec1            :  1 ; /* bits 5:5 */
    ca_uint32_t los_tfec2            :  1 ; /* bits 6:6 */
    ca_uint32_t fec_errors           :  4 ; /* bits 10:7 */
    ca_uint32_t fec_uncorr           :  1 ; /* bits 11:11 */
    ca_uint32_t fec_dacor_ack_q      :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t fec_pkt_st           :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_MISC_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_Counter_Control        0xf550081c
#define EPON_ONU_EPON_FEC_Counter_Control_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_CNTR_rd_clr_mode :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_Counter_Control_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_Block_Correctable_Error_Counter 0xf5500820
#define EPON_ONU_EPON_FEC_Block_Correctable_Error_Counter_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_RCNT             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_Block_Correctable_Error_Counter_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_Block_Uncorrectable_Error_Counter 0xf5500824
#define EPON_ONU_EPON_FEC_Block_Uncorrectable_Error_Counter_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_UCNT             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_Block_Uncorrectable_Error_Counter_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_Block_No_Error_Counter 0xf5500828
#define EPON_ONU_EPON_FEC_Block_No_Error_Counter_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_NOERR            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_Block_No_Error_Counter_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_Block_Counter          0xf550082c
#define EPON_ONU_EPON_FEC_Block_Counter_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_BLK_CNT          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_Block_Counter_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_Corr_Byte_Counter      0xf5500830
#define EPON_ONU_EPON_FEC_Corr_Byte_Counter_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_CORR_BYTE_CNT    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_Corr_Byte_Counter_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_TXCTRL                     0xf5500834
#define EPON_ONU_EPON_TXCTRL_dft                 0x0001c000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TX_EN                :  1 ; /* bits 0:0 */
    ca_uint32_t reserved_1           :  1 ; /* bits 1:1 */
    ca_uint32_t reserved_2           :  1 ; /* bits 2:2 */
    ca_uint32_t drain                :  1 ; /* bits 3:3 */
    ca_uint32_t reserved_4           :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reserved_6           :  1 ; /* bits 6:6 */
    ca_uint32_t reserved_7           :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t laser_delay          :  6 ; /* bits 17:12 */
    ca_uint32_t laser_burst_polarity :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ipg_sel              :  2 ; /* bits 21:20 */
    ca_uint32_t crc8_calculation_order_select :  2 ; /* bits 23:22 */
    ca_uint32_t bf                   :  1 ; /* bits 24:24 */
    ca_uint32_t disable_crc32_re_generation :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t max_pkt_size_limit   :  1 ; /* bits 30:30 */
    ca_uint32_t tx_pause_enable      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_TXCTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_MAXPKTSIZE                 0xf5500838
#define EPON_ONU_EPON_MAXPKTSIZE_dft             0x30003000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_max_pkt_size      : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rx_max_pkt_size      : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_MAXPKTSIZE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_TXCTRL_FFCFG               0xf550083c
#define EPON_ONU_EPON_TXCTRL_FFCFG_dft           0xc1f44008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_fifo_low_threshold :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t async_fifo_low_threshold :  4 ; /* bits 15:12 */
    ca_uint32_t sync_fifo_high_threshold :  9 ; /* bits 24:16 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t async_fifo_high_threshold :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_TXCTRL_FFCFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_TXMAC_CFG                  0xf5500840
#define EPON_ONU_EPON_TXMAC_CFG_dft              0x000a0212

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_lsr_on_adj       :  8 ; /* bits 7:0 */
    ca_uint32_t win_dly_adj          :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t lsr_on_adj           :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_TXMAC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PACKET_DRAIN_CNT           0xf5500844
#define EPON_ONU_EPON_PACKET_DRAIN_CNT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_drain_cnt        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PACKET_DRAIN_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_TX_CRCERR_CNT              0xf5500848
#define EPON_ONU_EPON_TX_CRCERR_CNT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txcrcErrCnt          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_TX_CRCERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_OUTPCS_CNT                 0xf550084c
#define EPON_ONU_EPON_OUTPCS_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t is                   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_OUTPCS_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_OUTMAC_CNT                 0xf5500850
#define EPON_ONU_EPON_OUTMAC_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t is                   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_OUTMAC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_OUTLSR_CNT                 0xf5500854
#define EPON_ONU_EPON_OUTLSR_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t is                   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_OUTLSR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_DATAPATH_STATUS            0xf5500858
#define EPON_ONU_EPON_DATAPATH_STATUS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t txpath1              :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_DATAPATH_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RCC_CNT                    0xf550085c
#define EPON_ONU_EPON_RCC_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RCC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PTP_ASYM_DELAY             0xf5500860
#define EPON_ONU_EPON_PTP_ASYM_DELAY_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t correction           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PTP_ASYM_DELAY_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PTP_EG_TIME_LATCH          0xf5500864
#define EPON_ONU_EPON_PTP_EG_TIME_LATCH_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_time           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PTP_EG_TIME_LATCH_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PTP_EG_TIMES_LATCH1        0xf5500868
#define EPON_ONU_EPON_PTP_EG_TIMES_LATCH1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_time1          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PTP_EG_TIMES_LATCH1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PTP_EG_TIMES_LATCH0        0xf550086c
#define EPON_ONU_EPON_PTP_EG_TIMES_LATCH0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_time0          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PTP_EG_TIMES_LATCH0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PTP_EG_LATCH               0xf5500870
#define EPON_ONU_EPON_PTP_EG_LATCH_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sqid                 : 16 ; /* bits 15:0 */
    ca_uint32_t message_type         :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PTP_EG_LATCH_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PTP_PIPE_EMPTY             0xf5500874
#define EPON_ONU_EPON_PTP_PIPE_EMPTY_dft         0x000003f0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PTP_PIPE_EMPTY_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_DBG_SEL                    0xf5500878
#define EPON_ONU_EPON_DBG_SEL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_sel              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t dbg_sel_aes          :  5 ; /* bits 12:8 */
    ca_uint32_t dbg_sel_fec          :  3 ; /* bits 15:13 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_DBG_SEL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_DBG_OUT                    0xf550087c
#define EPON_ONU_EPON_DBG_OUT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_out              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_DBG_OUT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FF_STS                     0xf5500880
#define EPON_ONU_EPON_FF_STS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asyncff_full         :  1 ; /* bits 0:0 */
    ca_uint32_t asyncff_empty        :  1 ; /* bits 1:1 */
    ca_uint32_t syncff_full          :  1 ; /* bits 2:2 */
    ca_uint32_t syncff_empty         :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_SPARE                      0xf5500884
#define EPON_ONU_EPON_SPARE_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg                  :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RSVR                       0xf5500888
#define EPON_ONU_EPON_RSVR_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RSVR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXCTRL                     0xf550088c
#define EPON_ONU_EPON_RXCTRL_dft                 0x0c002100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_EN                :  1 ; /* bits 0:0 */
    ca_uint32_t rx_pause_enable      :  1 ; /* bits 1:1 */
    ca_uint32_t mpcp_to_cpu          :  1 ; /* bits 2:2 */
    ca_uint32_t ipg_cnt              :  3 ; /* bits 5:3 */
    ca_uint32_t gmii                 :  1 ; /* bits 6:6 */
    ca_uint32_t sfd_mode2            :  1 ; /* bits 7:7 */
    ca_uint32_t max_mtu_tag_en       :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t disable_crc8_checking :  1 ; /* bits 10:10 */
    ca_uint32_t drop_mask            : 11 ; /* bits 21:11 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t dis_bypass_extn      :  1 ; /* bits 23:23 */
    ca_uint32_t dis_bypass_oam       :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t check_da_mac         :  1 ; /* bits 26:26 */
    ca_uint32_t check_mp_length      :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t bypass               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXCTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RX_MONITOR                 0xf5500890
#define EPON_ONU_EPON_RX_MONITOR_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mp_discovery_cnt     :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RX_MONITOR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXMAC_CFG                  0xf5500894
#define EPON_ONU_EPON_RXMAC_CFG_dft              0x00ffff40

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t filtering_threshold  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t mtu_tag_pattern      : 16 ; /* bits 23:8 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXMAC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXMAC_EXTENSION_CFG        0xf5500898
#define EPON_ONU_EPON_RXMAC_EXTENSION_CFG_dft    0x0000fffe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t opcode               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXMAC_EXTENSION_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXMAC_EXTENSION_OUI        0xf550089c
#define EPON_ONU_EPON_RXMAC_EXTENSION_OUI_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t oui                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t check_oui            :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXMAC_EXTENSION_OUI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXMAC_EXTENSION_DA1        0xf55008a0
#define EPON_ONU_EPON_RXMAC_EXTENSION_DA1_dft    0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t extda1               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXMAC_EXTENSION_DA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXMAC_EXTENSION_DA0        0xf55008a4
#define EPON_ONU_EPON_RXMAC_EXTENSION_DA0_dft    0xc2000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t extda0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXMAC_EXTENSION_DA0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_DATAPATH_BYPASS            0xf55008a8
#define EPON_ONU_EPON_DATAPATH_BYPASS_dft        0x00000026

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxpath_bypass        :  4 ; /* bits 3:0 */
    ca_uint32_t txpath_bypass        :  5 ; /* bits 8:4 */
    ca_uint32_t rxpath_sw_mode       :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fec_tx_delay_en      :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_DATAPATH_BYPASS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_DEFINE_PKTSIZE         0xf55008ac
#define EPON_ONU_EPON_FEC_DEFINE_PKTSIZE_dft     0x00032608

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_pkt_size         : 12 ; /* bits 11:0 */
    ca_uint32_t min_pkt_size         : 12 ; /* bits 23:12 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_DEFINE_PKTSIZE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_FEC_DEFINE_LATENCY         0xf55008b0
#define EPON_ONU_EPON_FEC_DEFINE_LATENCY_dft     0x0014c608

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pckt_latency         : 12 ; /* bits 11:0 */
    ca_uint32_t fdec_latency         :  9 ; /* bits 20:12 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_FEC_DEFINE_LATENCY_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_MODE_CTL               0xf55008b4
#define EPON_ONU_EPON_AES_MODE_CTL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CntDiff              :  8 ; /* bits 7:0 */
    ca_uint32_t CntIncDec            :  1 ; /* bits 8:8 */
    ca_uint32_t tx_CntDiff           :  8 ; /* bits 16:9 */
    ca_uint32_t tx_CntIncDec         :  1 ; /* bits 17:17 */
    ca_uint32_t rx_enc_en_cnt_clr    :  1 ; /* bits 18:18 */
    ca_uint32_t tx_port_encrypt_en   :  1 ; /* bits 19:19 */
    ca_uint32_t rx_enc_en_cnt_lmt    :  3 ; /* bits 22:20 */
    ca_uint32_t tx_ReverseCrc8En     :  1 ; /* bits 23:23 */
    ca_uint32_t tx_ReverseCrc8Out    :  1 ; /* bits 24:24 */
    ca_uint32_t tx_crc8_gen_disable  :  1 ; /* bits 25:25 */
    ca_uint32_t port_encrypt_index_sel :  1 ; /* bits 26:26 */
    ca_uint32_t csr_port_encrypt_index :  1 ; /* bits 27:27 */
    ca_uint32_t tx_port_decryptonly_en :  1 ; /* bits 28:28 */
    ca_uint32_t AesModeSel           :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_MODE_CTL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY03                   0xf55008b8
#define EPON_ONU_EPON_UC_KEY03_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key03                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY03_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY02                   0xf55008bc
#define EPON_ONU_EPON_UC_KEY02_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key02                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY02_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY01                   0xf55008c0
#define EPON_ONU_EPON_UC_KEY01_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key01                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY01_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY00                   0xf55008c4
#define EPON_ONU_EPON_UC_KEY00_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key00                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY00_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY13                   0xf55008c8
#define EPON_ONU_EPON_UC_KEY13_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key13                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY13_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY12                   0xf55008cc
#define EPON_ONU_EPON_UC_KEY12_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key12                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY12_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY11                   0xf55008d0
#define EPON_ONU_EPON_UC_KEY11_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key11                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY11_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_KEY10                   0xf55008d4
#define EPON_ONU_EPON_UC_KEY10_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key10                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_KEY10_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON03                  0xf55008d8
#define EPON_ONU_EPON_PKT_MON03_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t recv_pkt_r3          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON03_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON02                  0xf55008dc
#define EPON_ONU_EPON_PKT_MON02_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t recv_pkt_r2          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON02_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON01                  0xf55008e0
#define EPON_ONU_EPON_PKT_MON01_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t recv_pkt_r1          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON01_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON00                  0xf55008e4
#define EPON_ONU_EPON_PKT_MON00_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t recv_pkt_r0          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON00_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON13                  0xf55008e8
#define EPON_ONU_EPON_PKT_MON13_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t decrypt_pkt_r3       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON13_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON12                  0xf55008ec
#define EPON_ONU_EPON_PKT_MON12_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t decrypt_pkt_r2       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON12_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON11                  0xf55008f0
#define EPON_ONU_EPON_PKT_MON11_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t decrypt_pkt_r1       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON11_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON10                  0xf55008f4
#define EPON_ONU_EPON_PKT_MON10_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t decrypt_pkt_r0       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON10_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON2                   0xf55008f8
#define EPON_ONU_EPON_PKT_MON2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t last_rx_key_index    :  1 ; /* bits 0:0 */
    ca_uint32_t RCC_b0               :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t rx_aes_flag          :  8 ; /* bits 15:8 */
    ca_uint32_t key_ind_tog_cnt      :  8 ; /* bits 23:16 */
    ca_uint32_t last_rx_key_per_llid :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON31                  0xf55008fc
#define EPON_ONU_EPON_PKT_MON31_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_cnt_recode_err1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON31_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_PKT_MON30                  0xf5500900
#define EPON_ONU_EPON_PKT_MON30_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_cnt_recode_err0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_PKT_MON30_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_KEYREQUEST_OAM_CNT         0xf5500904
#define EPON_ONU_EPON_KEYREQUEST_OAM_CNT_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t keyrequest_oam_cnt   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_KEYREQUEST_OAM_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DBG_CNT0               0xf5500908
#define EPON_ONU_EPON_AES_DBG_CNT0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DBG_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DBG_GOOD_CNT0          0xf550090c
#define EPON_ONU_EPON_AES_DBG_GOOD_CNT0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DBG_GOOD_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DBG_CNT1               0xf5500910
#define EPON_ONU_EPON_AES_DBG_CNT1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DBG_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DBG_GOOD_CNT1          0xf5500914
#define EPON_ONU_EPON_AES_DBG_GOOD_CNT1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DBG_GOOD_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY03                0xf5500918
#define EPON_ONU_EPON_UC_TX_KEY03_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key03                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY03_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY02                0xf550091c
#define EPON_ONU_EPON_UC_TX_KEY02_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key02                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY02_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY01                0xf5500920
#define EPON_ONU_EPON_UC_TX_KEY01_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key01                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY01_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY00                0xf5500924
#define EPON_ONU_EPON_UC_TX_KEY00_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key00                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY00_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY13                0xf5500928
#define EPON_ONU_EPON_UC_TX_KEY13_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key13                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY13_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY12                0xf550092c
#define EPON_ONU_EPON_UC_TX_KEY12_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key12                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY12_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY11                0xf5500930
#define EPON_ONU_EPON_UC_TX_KEY11_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key11                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY11_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY10                0xf5500934
#define EPON_ONU_EPON_UC_TX_KEY10_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key10                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY10_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_UC_TX_KEY_CTRL             0xf5500938
#define EPON_ONU_EPON_UC_TX_KEY_CTRL_dft         0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_key_sel           :  1 ; /* bits 0:0 */
    ca_uint32_t tx_rcc_b0_sel        :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pkt_ts_sel        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_UC_TX_KEY_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_CHURNING_CTRL          0xf550093c
#define EPON_ONU_EPON_AES_CHURNING_CTRL_dft      0x00000680

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable_decryption_function_churning_or_AES :  1 ; /* bits 0:0 */
    ca_uint32_t enable_single_de_churning_function :  1 ; /* bits 1:1 */
    ca_uint32_t reverse_bit_order_of_random_generated_key :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t key_rdout_sel        :  1 ; /* bits 5:5 */
    ca_uint32_t revser_sel           :  1 ; /* bits 6:6 */
    ca_uint32_t HW_key_mode          :  1 ; /* bits 7:7 */
    ca_uint32_t rcc_correct_dis      :  1 ; /* bits 8:8 */
    ca_uint32_t oam_enc_dis          :  1 ; /* bits 9:9 */
    ca_uint32_t mp_enc_dis           :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_CHURNING_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_CHURN_CONFIG_CONTROL       0xf5500940
#define EPON_ONU_EPON_CHURN_CONFIG_CONTROL_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t select_sw_key_as_decryption_key :  1 ; /* bits 3:3 */
    ca_uint32_t enable_Transmit_churning_OAM :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t SW_sel               :  1 ; /* bits 7:7 */
    ca_uint32_t key_sel_mode         :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t rsv15                :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd4               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_CHURN_CONFIG_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_MISC_CFG                   0xf5500944
#define EPON_ONU_EPON_MISC_CFG_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t glb_pon_aes_disable  :  1 ; /* bits 0:0 */
    ca_uint32_t dpoe_dec_iv_sel      :  1 ; /* bits 1:1 */
    ca_uint32_t dpoe_key_mem_sel     :  1 ; /* bits 2:2 */
    ca_uint32_t dpoe_key_lat_sel     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_SLD_ERR_CNT                0xf5500948
#define EPON_ONU_EPON_SLD_ERR_CNT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sld_cnt              : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_SLD_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_CRC8_ERR_CNT               0xf550094c
#define EPON_ONU_EPON_CRC8_ERR_CNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crc8e_cnt            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_CRC8_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_IPG_DROP_CNT               0xf5500950
#define EPON_ONU_EPON_IPG_DROP_CNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipg_drop_cnt         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_IPG_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_MISC                       0xf5500954
#define EPON_ONU_EPON_MISC_dft                   0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_op_mode          :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_MISC_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_RXCTRL_STS                 0xf5500958
#define EPON_ONU_EPON_RXCTRL_STS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drop_short_cnt       :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_RXCTRL_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DEC_LLID_INDEX_0       0xf550095c
#define EPON_ONU_EPON_AES_DEC_LLID_INDEX_0_STRIDE 4
#define EPON_ONU_EPON_AES_DEC_LLID_INDEX_0_COUNT 8
#define EPON_ONU_EPON_AES_DEC_LLID_INDEX_0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t entry                : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DEC_LLID_INDEX_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DEC_KEY_TBL_ACCESS     0xf550097c
#define EPON_ONU_EPON_AES_DEC_KEY_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DEC_KEY_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA3      0xf5500980
#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA3_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA2      0xf5500984
#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA2_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA1      0xf5500988
#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA1_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA0      0xf550098c
#define EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ONU_EPON */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_ONU_EPON_PCS_CFG_t                  PCS_CFG;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_ONU_EPON_PCS_Status_Reg_t           PCS_Status_Reg;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_ONU_EPON_FEC_CFG_t                  FEC_CFG;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_ONU_EPON_FEC_TX_ERRINJ_t            FEC_TX_ERRINJ;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_ONU_EPON_FEC_CTRL_t                 FEC_CTRL;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_ONU_EPON_TX_RCC_CNT_t               TX_RCC_CNT;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_ONU_EPON_FEC_MISC_STATUS_t          FEC_MISC_STATUS;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_ONU_EPON_FEC_Counter_Control_t      FEC_Counter_Control;           /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_ONU_EPON_FEC_Block_Correctable_Error_Counter_t FEC_Block_Correctable_Error_Counter; /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_ONU_EPON_FEC_Block_Uncorrectable_Error_Counter_t FEC_Block_Uncorrectable_Error_Counter; /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_ONU_EPON_FEC_Block_No_Error_Counter_t FEC_Block_No_Error_Counter;    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_ONU_EPON_FEC_Block_Counter_t        FEC_Block_Counter;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_ONU_EPON_FEC_Corr_Byte_Counter_t    FEC_Corr_Byte_Counter;         /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_ONU_EPON_TXCTRL_t                   TXCTRL;                        /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_ONU_EPON_MAXPKTSIZE_t               MAXPKTSIZE;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_ONU_EPON_TXCTRL_FFCFG_t             TXCTRL_FFCFG;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_ONU_EPON_TXMAC_CFG_t                TXMAC_CFG;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_ONU_EPON_PACKET_DRAIN_CNT_t         PACKET_DRAIN_CNT;              /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_ONU_EPON_TX_CRCERR_CNT_t            TX_CRCERR_CNT;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_ONU_EPON_OUTPCS_CNT_t               OUTPCS_CNT;                    /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_ONU_EPON_OUTMAC_CNT_t               OUTMAC_CNT;                    /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_ONU_EPON_OUTLSR_CNT_t               OUTLSR_CNT;                    /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_ONU_EPON_DATAPATH_STATUS_t          DATAPATH_STATUS;               /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_ONU_EPON_RCC_CNT_t                  RCC_CNT;                       /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_ONU_EPON_PTP_ASYM_DELAY_t           PTP_ASYM_DELAY;                /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_ONU_EPON_PTP_EG_TIME_LATCH_t        PTP_EG_TIME_LATCH;             /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_ONU_EPON_PTP_EG_TIMES_LATCH1_t      PTP_EG_TIMES_LATCH1;           /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_ONU_EPON_PTP_EG_TIMES_LATCH0_t      PTP_EG_TIMES_LATCH0;           /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  EPON_ONU_EPON_PTP_EG_LATCH_t             PTP_EG_LATCH;                  /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  EPON_ONU_EPON_PTP_PIPE_EMPTY_t           PTP_PIPE_EMPTY;                /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  EPON_ONU_EPON_DBG_SEL_t                  DBG_SEL;                       /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  EPON_ONU_EPON_DBG_OUT_t                  DBG_OUT;                       /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  EPON_ONU_EPON_FF_STS_t                   FF_STS;                        /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  EPON_ONU_EPON_SPARE_t                    SPARE;                         /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  EPON_ONU_EPON_RSVR_t                     RSVR;                          /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  EPON_ONU_EPON_RXCTRL_t                   RXCTRL;                        /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  EPON_ONU_EPON_RX_MONITOR_t               RX_MONITOR;                    /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  EPON_ONU_EPON_RXMAC_CFG_t                RXMAC_CFG;                     /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  EPON_ONU_EPON_RXMAC_EXTENSION_CFG_t      RXMAC_EXTENSION_CFG;           /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  EPON_ONU_EPON_RXMAC_EXTENSION_OUI_t      RXMAC_EXTENSION_OUI;           /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  EPON_ONU_EPON_RXMAC_EXTENSION_DA1_t      RXMAC_EXTENSION_DA1;           /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  EPON_ONU_EPON_RXMAC_EXTENSION_DA0_t      RXMAC_EXTENSION_DA0;           /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  EPON_ONU_EPON_DATAPATH_BYPASS_t          DATAPATH_BYPASS;               /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  EPON_ONU_EPON_FEC_DEFINE_PKTSIZE_t       FEC_DEFINE_PKTSIZE;            /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  EPON_ONU_EPON_FEC_DEFINE_LATENCY_t       FEC_DEFINE_LATENCY;            /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  EPON_ONU_EPON_AES_MODE_CTL_t             AES_MODE_CTL;                  /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  EPON_ONU_EPON_UC_KEY03_t                 UC_KEY03;                      /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  EPON_ONU_EPON_UC_KEY02_t                 UC_KEY02;                      /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  EPON_ONU_EPON_UC_KEY01_t                 UC_KEY01;                      /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  EPON_ONU_EPON_UC_KEY00_t                 UC_KEY00;                      /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  EPON_ONU_EPON_UC_KEY13_t                 UC_KEY13;                      /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  EPON_ONU_EPON_UC_KEY12_t                 UC_KEY12;                      /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  EPON_ONU_EPON_UC_KEY11_t                 UC_KEY11;                      /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  EPON_ONU_EPON_UC_KEY10_t                 UC_KEY10;                      /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  EPON_ONU_EPON_PKT_MON03_t                PKT_MON03;                     /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  EPON_ONU_EPON_PKT_MON02_t                PKT_MON02;                     /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  EPON_ONU_EPON_PKT_MON01_t                PKT_MON01;                     /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  EPON_ONU_EPON_PKT_MON00_t                PKT_MON00;                     /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  EPON_ONU_EPON_PKT_MON13_t                PKT_MON13;                     /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  EPON_ONU_EPON_PKT_MON12_t                PKT_MON12;                     /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  EPON_ONU_EPON_PKT_MON11_t                PKT_MON11;                     /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  EPON_ONU_EPON_PKT_MON10_t                PKT_MON10;                     /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  EPON_ONU_EPON_PKT_MON2_t                 PKT_MON2;                      /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  EPON_ONU_EPON_PKT_MON31_t                PKT_MON31;                     /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  EPON_ONU_EPON_PKT_MON30_t                PKT_MON30;                     /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  EPON_ONU_EPON_KEYREQUEST_OAM_CNT_t       KEYREQUEST_OAM_CNT;            /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  EPON_ONU_EPON_AES_DBG_CNT0_t             AES_DBG_CNT0;                  /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  EPON_ONU_EPON_AES_DBG_GOOD_CNT0_t        AES_DBG_GOOD_CNT0;             /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  EPON_ONU_EPON_AES_DBG_CNT1_t             AES_DBG_CNT1;                  /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  EPON_ONU_EPON_AES_DBG_GOOD_CNT1_t        AES_DBG_GOOD_CNT1;             /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  EPON_ONU_EPON_UC_TX_KEY03_t              UC_TX_KEY03;                   /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  EPON_ONU_EPON_UC_TX_KEY02_t              UC_TX_KEY02;                   /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  EPON_ONU_EPON_UC_TX_KEY01_t              UC_TX_KEY01;                   /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  EPON_ONU_EPON_UC_TX_KEY00_t              UC_TX_KEY00;                   /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  EPON_ONU_EPON_UC_TX_KEY13_t              UC_TX_KEY13;                   /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  EPON_ONU_EPON_UC_TX_KEY12_t              UC_TX_KEY12;                   /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  EPON_ONU_EPON_UC_TX_KEY11_t              UC_TX_KEY11;                   /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  EPON_ONU_EPON_UC_TX_KEY10_t              UC_TX_KEY10;                   /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  EPON_ONU_EPON_UC_TX_KEY_CTRL_t           UC_TX_KEY_CTRL;                /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  EPON_ONU_EPON_AES_CHURNING_CTRL_t        AES_CHURNING_CTRL;             /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  EPON_ONU_EPON_CHURN_CONFIG_CONTROL_t     CHURN_CONFIG_CONTROL;          /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  EPON_ONU_EPON_MISC_CFG_t                 MISC_CFG;                      /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  EPON_ONU_EPON_SLD_ERR_CNT_t              SLD_ERR_CNT;                   /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  EPON_ONU_EPON_CRC8_ERR_CNT_t             CRC8_ERR_CNT;                  /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  EPON_ONU_EPON_IPG_DROP_CNT_t             IPG_DROP_CNT;                  /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  EPON_ONU_EPON_MISC_t                     MISC;                          /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  EPON_ONU_EPON_RXCTRL_STS_t               RXCTRL_STS;                    /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  EPON_ONU_EPON_AES_DEC_LLID_INDEX_0_t     AES_DEC_LLID_INDEX_0;          /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[31];
  EPON_ONU_EPON_AES_DEC_KEY_TBL_ACCESS_t   AES_DEC_KEY_TBL_ACCESS;        /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd89[3];
  EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA3_t    AES_DEC_KEY_TBL_DATA3;         /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd90[3];
  EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA2_t    AES_DEC_KEY_TBL_DATA2;         /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd91[3];
  EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA1_t    AES_DEC_KEY_TBL_DATA1;         /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd92[3];
  EPON_ONU_EPON_AES_DEC_KEY_TBL_DATA0_t    AES_DEC_KEY_TBL_DATA0;         /* addr: 0x0000018c */
} APB7_EPON_ONU_EPON_t;
#endif /* !__ASSEMBLER__ */


/*
 * onu_1pps
 */

#define EPON_ONU_1PPS_INTERRUPT_SOURCE           0xf5500c00
#define EPON_ONU_1PPS_INTERRUPT_SOURCE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pps_timeout          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_1PPS_INTERRUPT_SOURCE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_1PPS_INTERRUPT_SOURCEE          0xf5500c04
#define EPON_ONU_1PPS_INTERRUPT_SOURCEE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pps_timeoutE         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_1PPS_INTERRUPT_SOURCEE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_1PPS_CFG                        0xf5500c08
#define EPON_ONU_1PPS_CFG_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gen_1pps_tod_en      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_1PPS_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_1PPS_TOD_S_PPS                  0xf5500c0c
#define EPON_ONU_1PPS_TOD_S_PPS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s_pps                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_1PPS_TOD_S_PPS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_1PPS_TOD_PPS_WID                0xf5500c10
#define EPON_ONU_1PPS_TOD_PPS_WID_dft            0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pps_width            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_1PPS_TOD_PPS_WID_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_1PPS_TOD_S_TOD                  0xf5500c14
#define EPON_ONU_1PPS_TOD_S_TOD_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t s_tod                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_1PPS_TOD_S_TOD_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* onu_1pps */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_ONU_1PPS_INTERRUPT_SOURCE_t         INTERRUPT_SOURCE;              /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_ONU_1PPS_INTERRUPT_SOURCEE_t        INTERRUPT_SOURCEE;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_ONU_1PPS_CFG_t                      CFG;                           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_ONU_1PPS_TOD_S_PPS_t                TOD_S_PPS;                     /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_ONU_1PPS_TOD_PPS_WID_t              TOD_PPS_WID;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_ONU_1PPS_TOD_S_TOD_t                TOD_S_TOD;                     /* addr: 0x00000014 */
} APB7_EPON_ONU_1PPS_t;
#endif /* !__ASSEMBLER__ */


/*
 * glb_ptp
 */

#define EPON_GLB_PTP_INTERRUPT_ENABLE            0xf5500d00
#define EPON_GLB_PTP_INTERRUPT_ENABLE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t gpsEnable1           :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_INTERRUPT_SOURCE            0xf5500d04
#define EPON_GLB_PTP_INTERRUPT_SOURCE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t gpsIRQ1              :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_INTERRUPT_SOURCE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_PTP_LTH_SRC_REG             0xf5500d08
#define EPON_GLB_PTP_PTP_LTH_SRC_REG_dft         0x000000e0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t slt_pad_gps          :  1 ; /* bits 0:0 */
    ca_uint32_t slt_sw_gps           :  1 ; /* bits 1:1 */
    ca_uint32_t slt_pps_gps          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t add_adjust_timer     :  1 ; /* bits 5:5 */
    ca_uint32_t add_adjust_timer_s   :  1 ; /* bits 6:6 */
    ca_uint32_t reg_ptp_sync         :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_PTP_LTH_SRC_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_GLOBAL_TIMER_REG            0xf5500d0c
#define EPON_GLB_PTP_GLOBAL_TIMER_REG_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t glb_timer            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_GLOBAL_TIMER_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_ADJUST_TIMER_REG            0xf5500d10
#define EPON_GLB_PTP_ADJUST_TIMER_REG_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t adjust_timer         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_ADJUST_TIMER_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_GLOBAL_TIMER_S_LO_REG       0xf5500d14
#define EPON_GLB_PTP_GLOBAL_TIMER_S_LO_REG_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t glb_timer_s_lo       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_GLOBAL_TIMER_S_LO_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_GLOBAL_TIMER_S_HI_REG       0xf5500d18
#define EPON_GLB_PTP_GLOBAL_TIMER_S_HI_REG_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t glb_timer_s_hi       : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_GLOBAL_TIMER_S_HI_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_GLOBAL_CNT_1S_REG           0xf5500d1c
#define EPON_GLB_PTP_GLOBAL_CNT_1S_REG_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_1s               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_GLOBAL_CNT_1S_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_ADJUST_TIMER_S_LO_REG       0xf5500d20
#define EPON_GLB_PTP_ADJUST_TIMER_S_LO_REG_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t adjust_timer_s_lo    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_ADJUST_TIMER_S_LO_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_GLB_PTP_ADJUST_TIMER_S_HI_REG       0xf5500d24
#define EPON_GLB_PTP_ADJUST_TIMER_S_HI_REG_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t adjust_timer_s_hi    : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_GLB_PTP_ADJUST_TIMER_S_HI_REG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* glb_ptp */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_GLB_PTP_INTERRUPT_ENABLE_t          INTERRUPT_ENABLE;              /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_GLB_PTP_INTERRUPT_SOURCE_t          INTERRUPT_SOURCE;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_GLB_PTP_PTP_LTH_SRC_REG_t           PTP_LTH_SRC_REG;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_GLB_PTP_GLOBAL_TIMER_REG_t          GLOBAL_TIMER_REG;              /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_GLB_PTP_ADJUST_TIMER_REG_t          ADJUST_TIMER_REG;              /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_GLB_PTP_GLOBAL_TIMER_S_LO_REG_t     GLOBAL_TIMER_S_LO_REG;         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_GLB_PTP_GLOBAL_TIMER_S_HI_REG_t     GLOBAL_TIMER_S_HI_REG;         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_GLB_PTP_GLOBAL_CNT_1S_REG_t         GLOBAL_CNT_1S_REG;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_GLB_PTP_ADJUST_TIMER_S_LO_REG_t     ADJUST_TIMER_S_LO_REG;         /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_GLB_PTP_ADJUST_TIMER_S_HI_REG_t     ADJUST_TIMER_S_HI_REG;         /* addr: 0x00000024 */
} APB7_EPON_GLB_PTP_t;
#endif /* !__ASSEMBLER__ */


/*
 * onu_lt
 */

#define EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_RX   0xf5500f00
#define EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_RX_dft 0x00310001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t csrB                 : 16 ; /* bits 15:0 */
    ca_uint32_t csrA                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_RX_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_TX   0xf5500f04
#define EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_TX_dft 0x00120011

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t csrD                 : 16 ; /* bits 15:0 */
    ca_uint32_t csrC                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_TX_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_RX  0xf5500f08
#define EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_RX_dft 0x005c0004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t csrB                 : 16 ; /* bits 15:0 */
    ca_uint32_t csrA                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_RX_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_TX  0xf5500f0c
#define EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_TX_dft 0x001b0016

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t csrD                 : 16 ; /* bits 15:0 */
    ca_uint32_t csrC                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_TX_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_RTT_COMPENSATION_TXMAC_OFFSET 0xf5500f10
#define EPON_ONU_LT_RTT_COMPENSATION_TXMAC_OFFSET_dft 0x00160013

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx1g                 : 16 ; /* bits 15:0 */
    ca_uint32_t tx10g                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_RTT_COMPENSATION_TXMAC_OFFSET_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_MISC_CFG                     0xf5500f14
#define EPON_ONU_LT_MISC_CFG_dft                 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t forbidden_win_size   :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_MPCP_TIMER_MATCH_CFG         0xf5500f18
#define EPON_ONU_LT_MPCP_TIMER_MATCH_CFG_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t epon_mpcp_timer_match_val : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_MPCP_TIMER_MATCH_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_LAST_DRIFT                   0xf5500f1c
#define EPON_ONU_LT_LAST_DRIFT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t last_drift_value     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_LAST_DRIFT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_ONU_LT_SDS_DLY                      0xf5500f20
#define EPON_ONU_LT_SDS_DLY_dft                  0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx1g                 :  8 ; /* bits 7:0 */
    ca_uint32_t rx1g                 :  8 ; /* bits 15:8 */
    ca_uint32_t tx10g                :  8 ; /* bits 23:16 */
    ca_uint32_t rx10g                :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_ONU_LT_SDS_DLY_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* onu_lt */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_RX_t RTT_COMPENSATION_CFG_1G_RX;    /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_ONU_LT_RTT_COMPENSATION_CFG_1G_TX_t RTT_COMPENSATION_CFG_1G_TX;    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_RX_t RTT_COMPENSATION_CFG_10G_RX;   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_ONU_LT_RTT_COMPENSATION_CFG_10G_TX_t RTT_COMPENSATION_CFG_10G_TX;   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_ONU_LT_RTT_COMPENSATION_TXMAC_OFFSET_t RTT_COMPENSATION_TXMAC_OFFSET; /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_ONU_LT_MISC_CFG_t                   MISC_CFG;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_ONU_LT_MPCP_TIMER_MATCH_CFG_t       MPCP_TIMER_MATCH_CFG;          /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_ONU_LT_LAST_DRIFT_t                 LAST_DRIFT;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_ONU_LT_SDS_DLY_t                    SDS_DLY;                       /* addr: 0x00000020 */
} APB7_EPON_ONU_LT_t;
#endif /* !__ASSEMBLER__ */


/*
 * XGEPN
 */

/*
 * xmac
 */

/*
 * txmac
 */

#define EPON_XGEPN_XMAC_TXMAC_CONFIG             0xf5501000
#define EPON_XGEPN_XMAC_TXMAC_CONFIG_dft         0x0000106a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t xgepcs               :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ins_2idles           :  1 ; /* bits 3:3 */
    ca_uint32_t sel_t4burst_ctrl     :  1 ; /* bits 4:4 */
    ca_uint32_t eob_cnt              :  3 ; /* bits 7:5 */
    ca_uint32_t idl_cnt              :  3 ; /* bits 10:8 */
    ca_uint32_t en_true_burst_end    :  1 ; /* bits 11:11 */
    ca_uint32_t en_txf_empty_end     :  1 ; /* bits 12:12 */
    ca_uint32_t en_dfemp_burst_end   :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd3               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_TX_CONFIG          0xf5501004
#define EPON_XGEPN_XMAC_TXMAC_TX_CONFIG_dft      0x1c40c030

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reset                :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t mac_en               :  1 ; /* bits 3:3 */
    ca_uint32_t crc_recaculate_en    :  1 ; /* bits 4:4 */
    ca_uint32_t ch_timestamp         :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t loopback             :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd4               :  4 ;
    ca_uint32_t ipg_minimal          :  5 ; /* bits 16:12 */
    ca_uint32_t dic_maximum          :  2 ; /* bits 18:17 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t burst_cnt            :  5 ; /* bits 24:20 */
    ca_uint32_t burst_testmode       :  1 ; /* bits 25:25 */
    ca_uint32_t burst_end_cnt        :  5 ; /* bits 30:26 */
    ca_uint32_t burst_end_test_mode  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_TX_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB0       0xf5501008
#define EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t match                :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB1       0xf550100c
#define EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_MACSEC_LLIDEN0     0xf5501010
#define EPON_XGEPN_XMAC_TXMAC_MACSEC_LLIDEN0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid_sec_en          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_MACSEC_LLIDEN0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_SECTAG_LLIDEN0     0xf5501014
#define EPON_XGEPN_XMAC_TXMAC_SECTAG_LLIDEN0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sectag_type          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_SECTAG_LLIDEN0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_PKT_TYPE_EN        0xf5501018
#define EPON_XGEPN_XMAC_TXMAC_PKT_TYPE_EN_dft    0x88080000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ethernettype_sec_en  :  1 ; /* bits 0:0 */
    ca_uint32_t oam_sec_en           :  1 ; /* bits 1:1 */
    ca_uint32_t mpcp_sec_en          :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t pkt_type             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_PKT_TYPE_EN_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_XGEPN_BURST_TEST   0xf550101c
#define EPON_XGEPN_XMAC_TXMAC_XGEPN_BURST_TEST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_st_testmode     :  1 ; /* bits 0:0 */
    ca_uint32_t xgepn_st_testmode    :  1 ; /* bits 1:1 */
    ca_uint32_t xgepn_end_testmode   :  1 ; /* bits 2:2 */
    ca_uint32_t xgepn_trueend_testmode :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_XGEPN_BURST_TEST_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_FIFO_UNDERFLOW 0xf5501020
#define EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_FIFO_UNDERFLOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t async_tx_underflow   :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_FIFO_UNDERFLOW_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_DBG       0xf5501024
#define EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_DBG_dft   0x00000009

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_DBG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* txmac */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_XMAC_TXMAC_CONFIG_t           CONFIG;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_XMAC_TXMAC_TX_CONFIG_t        TX_CONFIG;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB0_t     TX_PAKT_MIB0;                  /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_XMAC_TXMAC_TX_PAKT_MIB1_t     TX_PAKT_MIB1;                  /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_XMAC_TXMAC_MACSEC_LLIDEN0_t   MACSEC_LLIDEN0;                /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_XMAC_TXMAC_SECTAG_LLIDEN0_t   SECTAG_LLIDEN0;                /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_XMAC_TXMAC_PKT_TYPE_EN_t      PKT_TYPE_EN;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_XMAC_TXMAC_XGEPN_BURST_TEST_t XGEPN_BURST_TEST;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_FIFO_UNDERFLOW_t XGEPN_TX_FIFO_UNDERFLOW;       /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGEPN_XMAC_TXMAC_XGEPN_TX_DBG_t     XGEPN_TX_DBG;                  /* addr: 0x00000024 */
} APB7_EPON_XGEPN_XMAC_TXMAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * rxmac
 */

#define EPON_XGEPN_XMAC_RXMAC_RX_MPCP0           0xf55010b0
#define EPON_XGEPN_XMAC_RXMAC_RX_MPCP0_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_sts              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_RX_MPCP0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_RX_CONFIG          0xf55010b4
#define EPON_XGEPN_XMAC_RXMAC_RX_CONFIG_dft      0x5ffe1210

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t reset                :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t mpcp_lt_emb          :  1 ; /* bits 3:3 */
    ca_uint32_t mpcp_crc_chk         :  1 ; /* bits 4:4 */
    ca_uint32_t llid_filter_dis      :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t mac_en               :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t pause_en             :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t en_old_fsm           :  1 ; /* bits 11:11 */
    ca_uint32_t dis_rtt_ts_adj       :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd6               :  4 ;
    ca_uint32_t max_size             : 14 ; /* bits 30:17 */
    ca_uint32_t rsrvd7               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_RX_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_RX_PKT_DET         0xf55010b8
#define EPON_XGEPN_XMAC_RXMAC_RX_PKT_DET_dft     0x00251bff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t check_idle           :  1 ; /* bits 0:0 */
    ca_uint32_t check_start          :  1 ; /* bits 1:1 */
    ca_uint32_t check_sld            :  1 ; /* bits 2:2 */
    ca_uint32_t check_preamble       :  1 ; /* bits 3:3 */
    ca_uint32_t check_llid           :  1 ; /* bits 4:4 */
    ca_uint32_t check_sfd            :  1 ; /* bits 5:5 */
    ca_uint32_t check_terminate      :  1 ; /* bits 6:6 */
    ca_uint32_t mc_mpcp              :  6 ; /* bits 12:7 */
    ca_uint32_t uc_mpcp              :  6 ; /* bits 18:13 */
    ca_uint32_t slow_subtype         :  3 ; /* bits 21:19 */
    ca_uint32_t mpcp_fw              :  6 ; /* bits 27:22 */
    ca_uint32_t chkoam               :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_RX_PKT_DET_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_RX_LOCALTIME_ADJUST 0xf55010bc
#define EPON_XGEPN_XMAC_RXMAC_RX_LOCALTIME_ADJUST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t adjust_loctimer      : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_RX_LOCALTIME_ADJUST_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB0       0xf55010c0
#define EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t match                :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB1       0xf55010c4
#define EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_XGEPN_SLD_CRC8_ERRCNT 0xf55010c8
#define EPON_XGEPN_XMAC_RXMAC_XGEPN_SLD_CRC8_ERRCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sld_crc8_err_cnt     : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_XGEPN_SLD_CRC8_ERRCNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD0 0xf55010cc
#define EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD1 0xf55010d0
#define EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t header               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rxmac */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_XMAC_RXMAC_RX_MPCP0_t         RX_MPCP0;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_XMAC_RXMAC_RX_CONFIG_t        RX_CONFIG;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_XMAC_RXMAC_RX_PKT_DET_t       RX_PKT_DET;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_XMAC_RXMAC_RX_LOCALTIME_ADJUST_t RX_LOCALTIME_ADJUST;           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB0_t     RX_PAKT_MIB0;                  /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_XMAC_RXMAC_RX_PAKT_MIB1_t     RX_PAKT_MIB1;                  /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_XMAC_RXMAC_XGEPN_SLD_CRC8_ERRCNT_t XGEPN_SLD_CRC8_ERRCNT;         /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD0_t XGEPN_RX_PKT_HEAD0;            /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_XMAC_RXMAC_XGEPN_RX_PKT_HEAD1_t XGEPN_RX_PKT_HEAD1;            /* addr: 0x00000020 */
} APB7_EPON_XGEPN_XMAC_RXMAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * ctrl
 */

#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_CTL        0xf5501250
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_CTL_dft    0x380ff000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_da_en            :  1 ; /* bits 0:0 */
    ca_uint32_t clr_rcffoverrun      :  1 ; /* bits 1:1 */
    ca_uint32_t drop_ptp_pkt_type    : 10 ; /* bits 11:2 */
    ca_uint32_t frame_error_drop_en  :  1 ; /* bits 12:12 */
    ca_uint32_t frame_fcs_error_drop_en :  1 ; /* bits 13:13 */
    ca_uint32_t frame_unopcode_drop_en :  1 ; /* bits 14:14 */
    ca_uint32_t frame_pause_drop_en  :  1 ; /* bits 15:15 */
    ca_uint32_t frame_runt_drop_en   :  1 ; /* bits 16:16 */
    ca_uint32_t frame_oversize_drop_en :  1 ; /* bits 17:17 */
    ca_uint32_t frame_ffoverflow_drop_en :  1 ; /* bits 18:18 */
    ca_uint32_t frame_mpcp_drop_en   :  1 ; /* bits 19:19 */
    ca_uint32_t ptp_ing_ts_cmp       :  5 ; /* bits 24:20 */
    ca_uint32_t frame_exmpcp_datadrop_en :  1 ; /* bits 25:25 */
    ca_uint32_t frame_unda_drop_en   :  1 ; /* bits 26:26 */
    ca_uint32_t frame_invld_llid_drop_en :  1 ; /* bits 27:27 */
    ca_uint32_t frame_keyex_oam_drop_en :  1 ; /* bits 28:28 */
    ca_uint32_t frame_exmpcp_mpcpdrop_en :  1 ; /* bits 29:29 */
    ca_uint32_t frame_bytecnt_drop_en :  1 ; /* bits 30:30 */
    ca_uint32_t bypass               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_CTL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_CTL        0xf5501254
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_CTL_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tx_remheader_dis     :  1 ; /* bits 1:1 */
    ca_uint32_t bm_pausereq_sel      :  1 ; /* bits 2:2 */
    ca_uint32_t tx_pad_en            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ptp_eg_ts_comp       :  5 ; /* bits 9:5 */
    ca_uint32_t rsrvd3               : 18 ;
    ca_uint32_t dbg_bus_sel          :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_CTL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_FF_THRESHOLD 0xf5501258
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_FF_THRESHOLD_dft 0x00f0702b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txff_wrff_threshold  :  4 ; /* bits 3:0 */
    ca_uint32_t txff_rdff_threshold  :  4 ; /* bits 7:4 */
    ca_uint32_t txctl_wrff_threshold :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t txctl_rdff_threshold :  7 ; /* bits 26:20 */
    ca_uint32_t rsrvd2               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS0    0xf550125c
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rcdrop_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS1    0xf5501260
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rcff_pktnum          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS2    0xf5501264
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tcff_pktnum          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS3    0xf5501268
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t length_mismatch      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS4    0xf550126c
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t es_runt_pkt          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS4_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_FF_STATUS     0xf5501270
#define EPON_XGEPN_XMAC_CTRL_XGEPN_FF_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_ffempty           :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fffull            :  1 ; /* bits 1:1 */
    ca_uint32_t rx_ffempty           :  1 ; /* bits 2:2 */
    ca_uint32_t rx_fffull            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_FF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPT     0xf5501274
#define EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_ffoverrun_intI    :  1 ; /* bits 0:0 */
    ca_uint32_t mpcp_ffoverrun_intI  :  1 ; /* bits 1:1 */
    ca_uint32_t burst_end_mismatch_intI :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t rc_ptp_pkt_intI      :  1 ; /* bits 16:16 */
    ca_uint32_t tc_ptp_pkt_intI      :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE0   0xf5501278
#define EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_ffoverrun_intIE   :  1 ; /* bits 0:0 */
    ca_uint32_t mpcp_ffoverrun_intIE :  1 ; /* bits 1:1 */
    ca_uint32_t burst_end_mismatch_intIE :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t rc_ptp_pkt_intIE     :  1 ; /* bits 16:16 */
    ca_uint32_t tc_ptp_pkt_intIE     :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE1   0xf550127c
#define EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rc_ffoverrun_intIE   :  1 ; /* bits 0:0 */
    ca_uint32_t mpcp_ffoverrun_intIE :  1 ; /* bits 1:1 */
    ca_uint32_t burst_end_mismatch_intIE :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t rc_ptp_pkt_intIE     :  1 ; /* bits 16:16 */
    ca_uint32_t tc_ptp_pkt_intIE     :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB0        0xf5501280
#define EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t match                :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB1        0xf5501284
#define EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB0        0xf5501288
#define EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t match                :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB1        0xf550128c
#define EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB0         0xf5501290
#define EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB1         0xf5501294
#define EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB0        0xf5501298
#define EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t match                :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB1        0xf550129c
#define EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB0        0xf55012a0
#define EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t llid                 : 16 ; /* bits 15:0 */
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t match                :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB1        0xf55012a4
#define EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB0         0xf55012a8
#define EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t latch                :  1 ; /* bits 16:16 */
    ca_uint32_t clr                  :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB1         0xf55012ac
#define EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM     0xf55012b0
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_LO 0xf55012b4
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_LO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_LO_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_HI 0xf55012b8
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_HI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TYPE   0xf55012bc
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_type             :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_SQID   0xf55012c0
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_SQID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sq_id                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_SQID_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM     0xf55012c4
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_LO 0xf55012c8
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_LO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_LO_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_HI 0xf55012cc
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_tm               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_HI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_SQID   0xf55012d0
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_SQID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sq_id                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_SQID_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TYPE   0xf55012d4
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ptp_type             :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN0     0xf55012d8
#define EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN0_dft 0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan0                : 16 ; /* bits 15:0 */
    ca_uint32_t vlan1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN1     0xf55012dc
#define EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN1_dft 0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan0                : 16 ; /* bits 15:0 */
    ca_uint32_t vlan1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_DBG        0xf55012e0
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RX_DBG_dft    0x80000009

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RX_DBG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_DBG        0xf55012e4
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TX_DBG_dft    0x0000000e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg                  : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TX_DBG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_DROPCNT 0xf55012e8
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t asyncff_dropcnt      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_DROPCNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_FF_THRESHOLD 0xf55012ec
#define EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_FF_THRESHOLD_dft 0x30000090

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_wrff_threshold    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t rx_rdff_ipg          :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_XGEPN_TXFPGA_FF_THRESHOLD 0xf55012f0
#define EPON_XGEPN_XMAC_CTRL_XGEPN_TXFPGA_FF_THRESHOLD_dft 0x004000f0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_wrff_threshold    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t tx_rdff_threshold    :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_XGEPN_TXFPGA_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_SPARE               0xf55012f4
#define EPON_XGEPN_XMAC_CTRL_SPARE_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XMAC_CTRL_SPARE1              0xf55012f8
#define EPON_XGEPN_XMAC_CTRL_SPARE1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XMAC_CTRL_SPARE1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ctrl */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_CTL_t      XGEPN_RX_CTL;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_CTL_t      XGEPN_TX_CTL;                  /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_FF_THRESHOLD_t XGEPN_TX_FF_THRESHOLD;         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS0_t  XGEPN_RX_STATUS0;              /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_STATUS1_t  XGEPN_RX_STATUS1;              /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS2_t  XGEPN_TX_STATUS2;              /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS3_t  XGEPN_TX_STATUS3;              /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_STATUS4_t  XGEPN_TX_STATUS4;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_FF_STATUS_t   XGEPN_FF_STATUS;               /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPT_t   XGEPN_INTERRUPT;               /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE0_t XGEPN_INTERRUPTE0;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_INTERRUPTE1_t XGEPN_INTERRUPTE1;             /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB0_t      RX_BYTE_MIB0;                  /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_XGEPN_XMAC_CTRL_RX_BYTE_MIB1_t      RX_BYTE_MIB1;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB0_t      RX_MPCP_MIB0;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_XGEPN_XMAC_CTRL_RX_MPCP_MIB1_t      RX_MPCP_MIB1;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB0_t       RX_OAM_MIB0;                   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_XGEPN_XMAC_CTRL_RX_OAM_MIB1_t       RX_OAM_MIB1;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB0_t      TX_BYTE_MIB0;                  /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_XGEPN_XMAC_CTRL_TX_BYTE_MIB1_t      TX_BYTE_MIB1;                  /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB0_t      TX_MPCP_MIB0;                  /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_XGEPN_XMAC_CTRL_TX_MPCP_MIB1_t      TX_MPCP_MIB1;                  /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB0_t       TX_OAM_MIB0;                   /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_XGEPN_XMAC_CTRL_TX_OAM_MIB1_t       TX_OAM_MIB1;                   /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_t   XGEPN_RX_PTP_TM;               /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_LO_t XGEPN_RX_PTP_TM_S_LO;          /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TM_S_HI_t XGEPN_RX_PTP_TM_S_HI;          /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_TYPE_t XGEPN_RX_PTP_TYPE;             /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_PTP_SQID_t XGEPN_RX_PTP_SQID;             /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_t   XGEPN_TX_PTP_TM;               /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_LO_t XGEPN_TX_PTP_TM_S_LO;          /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TM_S_HI_t XGEPN_TX_PTP_TM_S_HI;          /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_SQID_t XGEPN_TX_PTP_SQID;             /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_PTP_TYPE_t XGEPN_TX_PTP_TYPE;             /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN0_t   XGEPN_PTP_VLAN0;               /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_PTP_VLAN1_t   XGEPN_PTP_VLAN1;               /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RX_DBG_t      XGEPN_RX_DBG;                  /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TX_DBG_t      XGEPN_TX_DBG;                  /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_DROPCNT_t XGEPN_RXFPGA_DROPCNT;          /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_RXFPGA_FF_THRESHOLD_t XGEPN_RXFPGA_FF_THRESHOLD;     /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  EPON_XGEPN_XMAC_CTRL_XGEPN_TXFPGA_FF_THRESHOLD_t XGEPN_TXFPGA_FF_THRESHOLD;     /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  EPON_XGEPN_XMAC_CTRL_SPARE_t             SPARE;                         /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  EPON_XGEPN_XMAC_CTRL_SPARE1_t            SPARE1;                        /* addr: 0x000000a8 */
} APB7_EPON_XGEPN_XMAC_CTRL_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xmac */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_EPON_XGEPN_XMAC_TXMAC_t    txmac;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[157];
  APB7_EPON_XGEPN_XMAC_RXMAC_t    rxmac;                         /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd2[399];
  APB7_EPON_XGEPN_XMAC_CTRL_t     ctrl;                          /* addr: 0x00000250 */
} APB7_EPON_XGEPN_XMAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * XGPCS
 */

/*
 * tx
 */

#define EPON_XGEPN_XGPCS_TX_TXINT                0xf5501300
#define EPON_XGEPN_XGPCS_TX_TXINT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t errorpktI            :  1 ; /* bits 0:0 */
    ca_uint32_t errorpktsatI         :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsatI          :  1 ; /* bits 2:2 */
    ca_uint32_t badburstendI         :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_TXINT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_TXINTE0              0xf5501304
#define EPON_XGEPN_XGPCS_TX_TXINTE0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t errorpktIE           :  1 ; /* bits 0:0 */
    ca_uint32_t errorpktsatIE        :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsatIE         :  1 ; /* bits 2:2 */
    ca_uint32_t badburstendIE        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_TXINTE0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_TXINTE1              0xf5501308
#define EPON_XGEPN_XGPCS_TX_TXINTE1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t errorpktIE           :  1 ; /* bits 0:0 */
    ca_uint32_t errorpktsatIE        :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsatIE         :  1 ; /* bits 2:2 */
    ca_uint32_t badburstendIE        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_TXINTE1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_TXCNTRL              0xf550130c
#define EPON_XGEPN_XGPCS_TX_TXCNTRL_dft          0x02000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txcode_control       :  2 ; /* bits 1:0 */
    ca_uint32_t swap_tx_bus          :  1 ; /* bits 2:2 */
    ca_uint32_t scram_tx_dis         :  1 ; /* bits 3:3 */
    ca_uint32_t prb31_tx_disable_inversion :  1 ; /* bits 4:4 */
    ca_uint32_t tx_loopback          :  1 ; /* bits 5:5 */
    ca_uint32_t tx_estore_resync     :  1 ; /* bits 6:6 */
    ca_uint32_t test_tx_err          :  1 ; /* bits 7:7 */
    ca_uint32_t pcs6_tx_test         :  2 ; /* bits 9:8 */
    ca_uint32_t pseudo_tx_inv        :  1 ; /* bits 10:10 */
    ca_uint32_t square_tx_pat        :  4 ; /* bits 14:11 */
    ca_uint32_t logicReset           :  1 ; /* bits 15:15 */
    ca_uint32_t laserctrldelay       :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t laserctrlpolarity    :  1 ; /* bits 24:24 */
    ca_uint32_t close_laser_advance_en :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_TXCNTRL_t;
#endif /* !__ASSEMBLER__ */

#define     square_tx_pat_Low                             0x0
#define     square_tx_pat_Square1                         0x1
#define     square_tx_pat_Square2                         0x2
#define     square_tx_pat_Square4                         0x3
#define     square_tx_pat_Square8                         0x4
#define     square_tx_pat_Square16                        0x5
#define     square_tx_pat_Pulse0                          0x6
#define     square_tx_pat_Pulse1                          0x7
#define     square_tx_pat_High                            0x8
#define     pcs6_tx_test_Normal                           0x0
#define     pcs6_tx_test_PRBS31                           0x1
#define     pcs6_tx_test_Square                           0x2
#define     pcs6_tx_test_Pseudo                           0x3
#define     txcode_control_Normal                         0x0
#define     txcode_control_Invert                         0x1
#define     txcode_control_Force_00                       0x2
#define     txcode_control_Force_11                       0x3

#define EPON_XGEPN_XGPCS_TX_TXSTATUS             0xf5501310
#define EPON_XGEPN_XGPCS_TX_TXSTATUS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t errorpktsat          :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsat           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_TXSTATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_GOODPKT              0xf5501314
#define EPON_XGEPN_XGPCS_TX_GOODPKT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t good_pktM_tx         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_GOODPKT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_ERRPKT               0xf5501318
#define EPON_XGEPN_XGPCS_TX_ERRPKT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_pktM_tx          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_ERRPKT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_SEED_A1              0xf550131c
#define EPON_XGEPN_XGPCS_TX_SEED_A1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_tx_A1         : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_SEED_A1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_SEED_A0              0xf5501320
#define EPON_XGEPN_XGPCS_TX_SEED_A0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_tx_A0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_SEED_A0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_SEED_B1              0xf5501324
#define EPON_XGEPN_XGPCS_TX_SEED_B1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_tx_B1         : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_SEED_B1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_SEED_B0              0xf5501328
#define EPON_XGEPN_XGPCS_TX_SEED_B0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_tx_B0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_SEED_B0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_SEED_D1              0xf550132c
#define EPON_XGEPN_XGPCS_TX_SEED_D1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_tx_D1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_SEED_D1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_SEED_D0              0xf5501330
#define EPON_XGEPN_XGPCS_TX_SEED_D0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_tx_D0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_SEED_D0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_FMRO                 0xf5501334
#define EPON_XGEPN_XGPCS_TX_FMRO_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fmro_rx_view         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t fmro_view_sel        :  5 ; /* bits 8:4 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_FMRO_t;
#endif /* !__ASSEMBLER__ */

#define     fmro_view_sel_PCS6_XGMII_0                    0x0
#define     fmro_view_sel_PCS6_XGMII_1                    0x1
#define     fmro_view_sel_PCS6_XGMII_2                    0x2
#define     fmro_view_sel_PCS6_XGMII_3                    0x3
#define     fmro_view_sel_PCS6_XGMII_4                    0x4
#define     fmro_view_sel_PCS6_XGMII_5                    0x5
#define     fmro_view_sel_PCS6_XGMII_6                    0x6
#define     fmro_view_sel_PCS6_XGMII_7                    0x7
#define     fmro_view_sel_PCS6_CODE_0                     0x8
#define     fmro_view_sel_PCS6_CODE_1                     0x9
#define     fmro_view_sel_PCS6_CODE_2                     0xa
#define     fmro_view_sel_PCS6_CODE_3                     0xb
#define     fmro_view_sel_PCS6_LINE_0                     0xc
#define     fmro_view_sel_PCS6_LINE_1                     0xd
#define     fmro_rx_view_PCS6_Transmit                    0x0
#define     fmro_rx_view_PCS6_Receive                     0x1

#define EPON_XGEPN_XGPCS_TX_PCSERRINS            0xf5501338
#define EPON_XGEPN_XGPCS_TX_PCSERRINS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LOCATION             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t TYPE                 :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t SINGLE               :  1 ; /* bits 14:14 */
    ca_uint32_t ENABLE               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd3               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_PCSERRINS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_TXDISFEC             0xf550133c
#define EPON_XGEPN_XGPCS_TX_TXDISFEC_dft         0x0000f03c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t disableFEC           :  1 ; /* bits 0:0 */
    ca_uint32_t swap_before_fec      :  1 ; /* bits 1:1 */
    ca_uint32_t swap_before_fec_encoder :  1 ; /* bits 2:2 */
    ca_uint32_t swap_after_fec_encoder :  1 ; /* bits 3:3 */
    ca_uint32_t EOBTerminatorLength  :  8 ; /* bits 11:4 */
    ca_uint32_t error_inject_count   :  4 ; /* bits 15:12 */
    ca_uint32_t tx_fec_bypass_delay_mode :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_TXDISFEC_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_ACCESS    0xf5501340
#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CPUPktEn_OnuSPLen    :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA2     0xf5501344
#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PktData              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA1     0xf5501348
#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PktData              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA0     0xf550134c
#define EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PktData              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_StartDeque           0xf5501350
#define EPON_XGEPN_XGPCS_TX_StartDeque_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t init                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_StartDeque_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_CPUPktEn             0xf5501354
#define EPON_XGEPN_XGPCS_TX_CPUPktEn_dft         0x00000052

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Enable               :  1 ; /* bits 0:0 */
    ca_uint32_t NumLines             :  5 ; /* bits 5:1 */
    ca_uint32_t NumPkts              :  9 ; /* bits 14:6 */
    ca_uint32_t SendForever          :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_CPUPktEn_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_BERMonitor           0xf5501358
#define EPON_XGEPN_XGPCS_TX_BERMonitor_dft       0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Window               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_BERMonitor_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_ACCESS 0xf550135c
#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MASK_MEM_ADDR        :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t w_rdn                :  1 ; /* bits 30:30 */
    ca_uint32_t ACCESS               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA2 0xf5501360
#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MASK_MEM_DATA        :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA1 0xf5501364
#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MASK_MEM_DATA        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA0 0xf5501368
#define EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MASK_MEM_DATA        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_TX_FEC_ERROR_INJECT     0xf550136c
#define EPON_XGEPN_XGPCS_TX_FEC_ERROR_INJECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_TX_FEC_ERROR_INJECT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* tx */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_XGPCS_TX_TXINT_t              TXINT;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_XGPCS_TX_TXINTE0_t            TXINTE0;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_XGPCS_TX_TXINTE1_t            TXINTE1;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_XGPCS_TX_TXCNTRL_t            TXCNTRL;                       /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_XGPCS_TX_TXSTATUS_t           TXSTATUS;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_XGPCS_TX_GOODPKT_t            GOODPKT;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_XGPCS_TX_ERRPKT_t             ERRPKT;                        /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_XGPCS_TX_SEED_A1_t            SEED_A1;                       /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_XGPCS_TX_SEED_A0_t            SEED_A0;                       /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGEPN_XGPCS_TX_SEED_B1_t            SEED_B1;                       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_XGEPN_XGPCS_TX_SEED_B0_t            SEED_B0;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_XGEPN_XGPCS_TX_SEED_D1_t            SEED_D1;                       /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_XGEPN_XGPCS_TX_SEED_D0_t            SEED_D0;                       /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_XGEPN_XGPCS_TX_FMRO_t               FMRO;                          /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_XGEPN_XGPCS_TX_PCSERRINS_t          PCSERRINS;                     /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_XGEPN_XGPCS_TX_TXDISFEC_t           TXDISFEC;                      /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_ACCESS_t  PKTGEN_MEM_ACCESS;             /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA2_t   PKTGEN_MEM_DATA2;              /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA1_t   PKTGEN_MEM_DATA1;              /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_XGEPN_XGPCS_TX_PKTGEN_MEM_DATA0_t   PKTGEN_MEM_DATA0;              /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_XGEPN_XGPCS_TX_StartDeque_t         StartDeque;                    /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_XGEPN_XGPCS_TX_CPUPktEn_t           CPUPktEn;                      /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_XGEPN_XGPCS_TX_BERMonitor_t         BERMonitor;                    /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_ACCESS_t FEC_MASK_MEM_SW_ACCESS;        /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA2_t FEC_MASK_MEM_SW_DATA2;         /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA1_t FEC_MASK_MEM_SW_DATA1;         /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_XGEPN_XGPCS_TX_FEC_MASK_MEM_SW_DATA0_t FEC_MASK_MEM_SW_DATA0;         /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_XGEPN_XGPCS_TX_FEC_ERROR_INJECT_t   FEC_ERROR_INJECT;              /* addr: 0x0000006c */
} APB7_EPON_XGEPN_XGPCS_TX_t;
#endif /* !__ASSEMBLER__ */


/*
 * rx
 */

#define EPON_XGEPN_XGPCS_RX_RXINT                0xf5501370
#define EPON_XGEPN_XGPCS_RX_RXINT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t errorpktI            :  1 ; /* bits 0:0 */
    ca_uint32_t errorpktsatI         :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsatI          :  1 ; /* bits 2:2 */
    ca_uint32_t errordecI            :  1 ; /* bits 3:3 */
    ca_uint32_t errordecsatI         :  1 ; /* bits 4:4 */
    ca_uint32_t errorpatI            :  1 ; /* bits 5:5 */
    ca_uint32_t errorpatsatI         :  1 ; /* bits 6:6 */
    ca_uint32_t errorbersatI         :  1 ; /* bits 7:7 */
    ca_uint32_t syncdetI             :  1 ; /* bits 8:8 */
    ca_uint32_t berhighI             :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t patsyncI             :  1 ; /* bits 11:11 */
    ca_uint32_t fecdeccorrsatI       :  1 ; /* bits 12:12 */
    ca_uint32_t fecdecuncorrsatI     :  1 ; /* bits 13:13 */
    ca_uint32_t fecdecpersistfailI   :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t linkdown             :  1 ; /* bits 17:17 */
    ca_uint32_t linkup               :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_RXINT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_RXINTE0              0xf5501374
#define EPON_XGEPN_XGPCS_RX_RXINTE0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t errorpktIE           :  1 ; /* bits 0:0 */
    ca_uint32_t errorpktsatIE        :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsatIE         :  1 ; /* bits 2:2 */
    ca_uint32_t errordecIE           :  1 ; /* bits 3:3 */
    ca_uint32_t errordecsatIE        :  1 ; /* bits 4:4 */
    ca_uint32_t errorpatIE           :  1 ; /* bits 5:5 */
    ca_uint32_t errorpatsatIE        :  1 ; /* bits 6:6 */
    ca_uint32_t errorbersatIE        :  1 ; /* bits 7:7 */
    ca_uint32_t syncdetIE            :  1 ; /* bits 8:8 */
    ca_uint32_t berhighIE            :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t patsyncIE            :  1 ; /* bits 11:11 */
    ca_uint32_t fecdeccorrsatIE      :  1 ; /* bits 12:12 */
    ca_uint32_t fecdecuncorrsatIE    :  1 ; /* bits 13:13 */
    ca_uint32_t fecdecpersistfailIE  :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t linkdownE            :  1 ; /* bits 17:17 */
    ca_uint32_t linkupE              :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_RXINTE0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_RXINTE1              0xf5501378
#define EPON_XGEPN_XGPCS_RX_RXINTE1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t errorpktIE           :  1 ; /* bits 0:0 */
    ca_uint32_t errorpktsatIE        :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsatIE         :  1 ; /* bits 2:2 */
    ca_uint32_t errordecIE           :  1 ; /* bits 3:3 */
    ca_uint32_t errordecsatIE        :  1 ; /* bits 4:4 */
    ca_uint32_t errorpatIE           :  1 ; /* bits 5:5 */
    ca_uint32_t errorpatsatIE        :  1 ; /* bits 6:6 */
    ca_uint32_t errorbersatIE        :  1 ; /* bits 7:7 */
    ca_uint32_t syncdetIE            :  1 ; /* bits 8:8 */
    ca_uint32_t berhighIE            :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t patsyncIE            :  1 ; /* bits 11:11 */
    ca_uint32_t fecdeccorrsatIE      :  1 ; /* bits 12:12 */
    ca_uint32_t fecdecuncorrsatIE    :  1 ; /* bits 13:13 */
    ca_uint32_t fecdecpersistfailIE  :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t linkdownE            :  1 ; /* bits 17:17 */
    ca_uint32_t linkupE              :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd3               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_RXINTE1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_RXCNTRL              0xf550137c
#define EPON_XGEPN_XGPCS_RX_RXCNTRL_dft          0x00005004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_loopback          :  1 ; /* bits 0:0 */
    ca_uint32_t rx_estore_resync     :  1 ; /* bits 1:1 */
    ca_uint32_t swap_rx_bus          :  1 ; /* bits 2:2 */
    ca_uint32_t descram_rx_dis       :  1 ; /* bits 3:3 */
    ca_uint32_t prb31_rx_disable_inversion :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t pcs6_rx_test         :  2 ; /* bits 9:8 */
    ca_uint32_t pseudo_rx_inv        :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t latchEach1e          :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t dontFilterFsig       :  1 ; /* bits 14:14 */
    ca_uint32_t logicReset           :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd4               : 15 ;
    ca_uint32_t link_sel             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_RXCNTRL_t;
#endif /* !__ASSEMBLER__ */

#define     pcs6_rx_test_Normal                           0x0
#define     pcs6_rx_test_PRBS31                           0x1
#define     pcs6_rx_test_Reserved                         0x2
#define     pcs6_rx_test_Pseudo                           0x3

#define EPON_XGEPN_XGPCS_RX_RXSTATUS             0xf5501380
#define EPON_XGEPN_XGPCS_RX_RXSTATUS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t errorpktsat          :  1 ; /* bits 1:1 */
    ca_uint32_t goodpktsat           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t errordecsat          :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t errorpatsat          :  1 ; /* bits 6:6 */
    ca_uint32_t errorbersat          :  1 ; /* bits 7:7 */
    ca_uint32_t syncdetS             :  1 ; /* bits 8:8 */
    ca_uint32_t berhighS             :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t patsyncS             :  1 ; /* bits 11:11 */
    ca_uint32_t fecdeccorrsat        :  1 ; /* bits 12:12 */
    ca_uint32_t fecdecuncorrsat      :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd5               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_RXSTATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_GOODPKT              0xf5501384
#define EPON_XGEPN_XGPCS_RX_GOODPKT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t good_pktM_rx         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_GOODPKT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_ERRPKT               0xf5501388
#define EPON_XGEPN_XGPCS_RX_ERRPKT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_pktM_rx          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_ERRPKT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_ERRPAT               0xf550138c
#define EPON_XGEPN_XGPCS_RX_ERRPAT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_pat_rx           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_ERRPAT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_ERRDEC               0xf5501390
#define EPON_XGEPN_XGPCS_RX_ERRDEC_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_dec_rx           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_ERRDEC_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_ERRBER               0xf5501394
#define EPON_XGEPN_XGPCS_RX_ERRBER_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t err_ber_rx           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_ERRBER_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_FECCORCODE           0xf5501398
#define EPON_XGEPN_XGPCS_RX_FECCORCODE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fec_corcodM_rx       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_FECCORCODE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_FECUNCORCODE         0xf550139c
#define EPON_XGEPN_XGPCS_RX_FECUNCORCODE_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fec_uncorcodM_rx     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_FECUNCORCODE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SYNOFF               0xf55013a0
#define EPON_XGEPN_XGPCS_RX_SYNOFF_dft           0x00000100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_valid_off       :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t sync_invalid_off     :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SYNOFF_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SEED_A1              0xf55013a4
#define EPON_XGEPN_XGPCS_RX_SEED_A1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_rx_A1         : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SEED_A1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SEED_A0              0xf55013a8
#define EPON_XGEPN_XGPCS_RX_SEED_A0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_rx_A0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SEED_A0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SEED_B1              0xf55013ac
#define EPON_XGEPN_XGPCS_RX_SEED_B1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_rx_B1         : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SEED_B1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SEED_B0              0xf55013b0
#define EPON_XGEPN_XGPCS_RX_SEED_B0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_rx_B0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SEED_B0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SEED_D1              0xf55013b4
#define EPON_XGEPN_XGPCS_RX_SEED_D1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_rx_D1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SEED_D1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_SEED_D0              0xf55013b8
#define EPON_XGEPN_XGPCS_RX_SEED_D0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pseudo_rx_D0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_SEED_D0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_FECCNTRL             0xf55013bc
#define EPON_XGEPN_XGPCS_RX_FECCNTRL_dft         0x00000023

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t persist_dec_fail_threshold :  3 ; /* bits 2:0 */
    ca_uint32_t disableFECcorrection :  1 ; /* bits 3:3 */
    ca_uint32_t disableFECtotal      :  1 ; /* bits 4:4 */
    ca_uint32_t mark_uncorrectable   :  1 ; /* bits 5:5 */
    ca_uint32_t swap_PCS65_block     :  1 ; /* bits 6:6 */
    ca_uint32_t swap_8bits_data_symbol :  1 ; /* bits 7:7 */
    ca_uint32_t swap_8bits_parity_symbol :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t rx_fec_bypass_delay_mode :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_FECCNTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_BER_THRESHOLD        0xf55013c0
#define EPON_XGEPN_XGPCS_RX_BER_THRESHOLD_dft    0x00000640

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_ber_threshold   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_BER_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_DEBUG_CONFIG_REG     0xf55013c4
#define EPON_XGEPN_XGPCS_RX_DEBUG_CONFIG_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mask_hiber           :  1 ; /* bits 0:0 */
    ca_uint32_t slip_manual_mode     :  1 ; /* bits 1:1 */
    ca_uint32_t rx_fec_bypass        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_DEBUG_CONFIG_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_DEBUG_TRIG_REG       0xf55013c8
#define EPON_XGEPN_XGPCS_RX_DEBUG_TRIG_REG_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t trigger_slip         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_DEBUG_TRIG_REG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_XGEPN_LINK_DETECT_CFG 0xf55013cc
#define EPON_XGEPN_XGPCS_RX_XGEPN_LINK_DETECT_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t detect_mode          :  1 ; /* bits 0:0 */
    ca_uint32_t opt_los_polarity     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t detect_period        :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_XGEPN_LINK_DETECT_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_XGEPN_LINK_STATUS    0xf55013d0
#define EPON_XGEPN_XGPCS_RX_XGEPN_LINK_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t link_status          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_XGEPN_LINK_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_FECCORRBYTE          0xf55013d4
#define EPON_XGEPN_XGPCS_RX_FECCORRBYTE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_FECCORRBYTE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_XGPCS_RX_FECTOTALCODE         0xf55013d8
#define EPON_XGEPN_XGPCS_RX_FECTOTALCODE_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_XGPCS_RX_FECTOTALCODE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rx */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_XGPCS_RX_RXINT_t              RXINT;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_XGPCS_RX_RXINTE0_t            RXINTE0;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_XGPCS_RX_RXINTE1_t            RXINTE1;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_XGPCS_RX_RXCNTRL_t            RXCNTRL;                       /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_XGPCS_RX_RXSTATUS_t           RXSTATUS;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_XGPCS_RX_GOODPKT_t            GOODPKT;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_XGPCS_RX_ERRPKT_t             ERRPKT;                        /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_XGPCS_RX_ERRPAT_t             ERRPAT;                        /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_XGPCS_RX_ERRDEC_t             ERRDEC;                        /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGEPN_XGPCS_RX_ERRBER_t             ERRBER;                        /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_XGEPN_XGPCS_RX_FECCORCODE_t         FECCORCODE;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_XGEPN_XGPCS_RX_FECUNCORCODE_t       FECUNCORCODE;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_XGEPN_XGPCS_RX_SYNOFF_t             SYNOFF;                        /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_XGEPN_XGPCS_RX_SEED_A1_t            SEED_A1;                       /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_XGEPN_XGPCS_RX_SEED_A0_t            SEED_A0;                       /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_XGEPN_XGPCS_RX_SEED_B1_t            SEED_B1;                       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_XGEPN_XGPCS_RX_SEED_B0_t            SEED_B0;                       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_XGEPN_XGPCS_RX_SEED_D1_t            SEED_D1;                       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_XGEPN_XGPCS_RX_SEED_D0_t            SEED_D0;                       /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_XGEPN_XGPCS_RX_FECCNTRL_t           FECCNTRL;                      /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_XGEPN_XGPCS_RX_BER_THRESHOLD_t      BER_THRESHOLD;                 /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_XGEPN_XGPCS_RX_DEBUG_CONFIG_REG_t   DEBUG_CONFIG_REG;              /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_XGEPN_XGPCS_RX_DEBUG_TRIG_REG_t     DEBUG_TRIG_REG;                /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_XGEPN_XGPCS_RX_XGEPN_LINK_DETECT_CFG_t XGEPN_LINK_DETECT_CFG;         /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_XGEPN_XGPCS_RX_XGEPN_LINK_STATUS_t  XGEPN_LINK_STATUS;             /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_XGEPN_XGPCS_RX_FECCORRBYTE_t        FECCORRBYTE;                   /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_XGEPN_XGPCS_RX_FECTOTALCODE_t       FECTOTALCODE;                  /* addr: 0x00000068 */
} APB7_EPON_XGEPN_XGPCS_RX_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGPCS */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_EPON_XGEPN_XGPCS_TX_t      tx;                            /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[57];
  APB7_EPON_XGEPN_XGPCS_RX_t      rx;                            /* addr: 0x00000070 */
} APB7_EPON_XGEPN_XGPCS_t;
#endif /* !__ASSEMBLER__ */


/*
 * CORESEC10_TOP[0..1]
 */

/*
 * NANDI
 */

#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_0 0xf5501420
#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_cmd_executed     :  1 ; /* bits 0:0 */
    ca_uint32_t pn_thld_reached      :  1 ; /* bits 1:1 */
    ca_uint32_t key_hash_mem_rd_err  :  1 ; /* bits 2:2 */
    ca_uint32_t key_hash_mem_rd_Cerr :  1 ; /* bits 3:3 */
    ca_uint32_t cntl_mem_rd_err      :  1 ; /* bits 4:4 */
    ca_uint32_t cntl_mem_rd_Cerr     :  1 ; /* bits 5:5 */
    ca_uint32_t pn_mem_rd_err        :  1 ; /* bits 6:6 */
    ca_uint32_t pn_mem_rd_Cerr       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_0 0xf5501424
#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_cmd_executed_E   :  1 ; /* bits 0:0 */
    ca_uint32_t pn_thld_reached_E    :  1 ; /* bits 1:1 */
    ca_uint32_t key_hash_mem_rd_err_E :  1 ; /* bits 2:2 */
    ca_uint32_t key_hash_mem_rd_Cerr_E :  1 ; /* bits 3:3 */
    ca_uint32_t cntl_mem_rd_err_E    :  1 ; /* bits 4:4 */
    ca_uint32_t cntl_mem_rd_Cerr_E   :  1 ; /* bits 5:5 */
    ca_uint32_t pn_mem_rd_err_E      :  1 ; /* bits 6:6 */
    ca_uint32_t pn_mem_rd_Cerr_E     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_1 0xf5501428
#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_cmd_executed     :  1 ; /* bits 0:0 */
    ca_uint32_t pn_thld_reached      :  1 ; /* bits 1:1 */
    ca_uint32_t key_hash_mem_rd_err  :  1 ; /* bits 2:2 */
    ca_uint32_t key_hash_mem_rd_Cerr :  1 ; /* bits 3:3 */
    ca_uint32_t cntl_mem_rd_err      :  1 ; /* bits 4:4 */
    ca_uint32_t cntl_mem_rd_Cerr     :  1 ; /* bits 5:5 */
    ca_uint32_t pn_mem_rd_err        :  1 ; /* bits 6:6 */
    ca_uint32_t pn_mem_rd_Cerr       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_1 0xf550142c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_cmd_executed_E   :  1 ; /* bits 0:0 */
    ca_uint32_t pn_thld_reached_E    :  1 ; /* bits 1:1 */
    ca_uint32_t key_hash_mem_rd_err_E :  1 ; /* bits 2:2 */
    ca_uint32_t key_hash_mem_rd_Cerr_E :  1 ; /* bits 3:3 */
    ca_uint32_t cntl_mem_rd_err_E    :  1 ; /* bits 4:4 */
    ca_uint32_t cntl_mem_rd_Cerr_E   :  1 ; /* bits 5:5 */
    ca_uint32_t pn_mem_rd_err_E      :  1 ; /* bits 6:6 */
    ca_uint32_t pn_mem_rd_Cerr_E     :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_CONFIG    0xf5501430
#define EPON_XGEPN_CORESEC10_TOP_NANDI_CONFIG_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sec_tag_mem_cmd      :  1 ; /* bits 0:0 */
    ca_uint32_t sec_tag_icv_send_en  :  1 ; /* bits 1:1 */
    ca_uint32_t sci_llid_disable     :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_STATUS    0xf5501434
#define EPON_XGEPN_CORESEC10_TOP_NANDI_STATUS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mem_init_done        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_COMMAND_CONTROL 0xf5501438
#define EPON_XGEPN_CORESEC10_TOP_NANDI_COMMAND_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t start_write          :  1 ; /* bits 0:0 */
    ca_uint32_t rwn                  :  1 ; /* bits 1:1 */
    ca_uint32_t said                 : 10 ; /* bits 11:2 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_COMMAND_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_3 0xf550143c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key03                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_2 0xf5501440
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key02                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_1 0xf5501444
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key01                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_0 0xf5501448
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key00                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_3 0xf550144c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash03               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_2 0xf5501450
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash02               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_1 0xf5501454
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash01               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_0 0xf5501458
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash00               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_3 0xf550145c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key13                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_2 0xf5501460
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key12                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_1 0xf5501464
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key11                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_0 0xf5501468
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key10                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_3 0xf550146c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash13               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_2 0xf5501470
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash12               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_1 0xf5501474
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash11               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_0 0xf5501478
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hash10               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_PacketNumber 0xf550147c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_PacketNumber_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pn                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_PacketNumber_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_NextPacketNumber 0xf5501480
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_NextPacketNumber_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t npn                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_NextPacketNumber_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_Control 0xf5501484
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_Control_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t control              : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_Control_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_DATAFIELD_VALID 0xf5501488
#define EPON_XGEPN_CORESEC10_TOP_NANDI_DATAFIELD_VALID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0_vld             :  1 ; /* bits 0:0 */
    ca_uint32_t hash0_vld            :  1 ; /* bits 1:1 */
    ca_uint32_t key1_vld             :  1 ; /* bits 2:2 */
    ca_uint32_t hash1_vld            :  1 ; /* bits 3:3 */
    ca_uint32_t sc_vld               :  1 ; /* bits 4:4 */
    ca_uint32_t pn_vld               :  1 ; /* bits 5:5 */
    ca_uint32_t npn_vld              :  1 ; /* bits 6:6 */
    ca_uint32_t an_vld               :  1 ; /* bits 7:7 */
    ca_uint32_t scb_vld              :  1 ; /* bits 8:8 */
    ca_uint32_t es_vld               :  1 ; /* bits 9:9 */
    ca_uint32_t co_vld               :  1 ; /* bits 10:10 */
    ca_uint32_t rlyen_vld            :  1 ; /* bits 11:11 */
    ca_uint32_t sec_mode_vld         :  1 ; /* bits 12:12 */
    ca_uint32_t v_config_vld         :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_DATAFIELD_VALID_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SCI1      0xf550148c
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SCI1_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SCI1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SCI1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_SCI0      0xf5501490
#define EPON_XGEPN_CORESEC10_TOP_NANDI_SCI0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SCI0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_SCI0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_PNTHLD    0xf5501494
#define EPON_XGEPN_CORESEC10_TOP_NANDI_PNTHLD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t PN_threshold         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_PNTHLD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_NANDI_REPLAYWINDOW 0xf5501498
#define EPON_XGEPN_CORESEC10_TOP_NANDI_REPLAYWINDOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t replay_window        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_NANDI_REPLAYWINDOW_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* NANDI */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_0_t INTERRUPT_0;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_0_t INTENABLE_0;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_INTERRUPT_1_t INTERRUPT_1;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_INTENABLE_1_t INTENABLE_1;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_CONFIG_t  CONFIG;                        /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_STATUS_t  STATUS;                        /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_COMMAND_CONTROL_t COMMAND_CONTROL;               /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_3_t SADB_KEY0_3;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_2_t SADB_KEY0_2;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_1_t SADB_KEY0_1;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY0_0_t SADB_KEY0_0;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_3_t SADB_HASH0_3;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_2_t SADB_HASH0_2;                  /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_1_t SADB_HASH0_1;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH0_0_t SADB_HASH0_0;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_3_t SADB_KEY1_3;                   /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_2_t SADB_KEY1_2;                   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_1_t SADB_KEY1_1;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_KEY1_0_t SADB_KEY1_0;                   /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_3_t SADB_HASH1_3;                  /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_2_t SADB_HASH1_2;                  /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_1_t SADB_HASH1_1;                  /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_HASH1_0_t SADB_HASH1_0;                  /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_PacketNumber_t SADB_PacketNumber;             /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_NextPacketNumber_t SADB_NextPacketNumber;         /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SADB_Control_t SADB_Control;                  /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_DATAFIELD_VALID_t DATAFIELD_VALID;               /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SCI1_t    SCI1;                          /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_SCI0_t    SCI0;                          /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_PNTHLD_t  PNTHLD;                        /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  EPON_XGEPN_CORESEC10_TOP_NANDI_REPLAYWINDOW_t REPLAYWINDOW;                  /* addr: 0x00000078 */
} APB7_EPON_XGEPN_CORESEC10_TOP_NANDI_t;
#endif /* !__ASSEMBLER__ */


/*
 * CORESEC10
 */

#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_0 0xf55014b0
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macsec_dec_err       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_0 0xf55014b4
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macsec_dec_err_en    :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_1 0xf55014b8
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macsec_dec_err       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_1 0xf55014bc
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macsec_dec_err_en    :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_GLOBAL_CONFIG 0xf55014c0
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_GLOBAL_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t disable_crc8_chk     :  1 ; /* bits 0:0 */
    ca_uint32_t key_exhange_mode     :  1 ; /* bits 1:1 */
    ca_uint32_t dis_drop_macsec_err_ptk :  1 ; /* bits 2:2 */
    ca_uint32_t dis_preamble_chk     :  1 ; /* bits 3:3 */
    ca_uint32_t dis_crc32_chk        :  1 ; /* bits 4:4 */
    ca_uint32_t cfg_dont_modify_crc32 :  1 ; /* bits 5:5 */
    ca_uint32_t cfg_mask_dec_err     :  1 ; /* bits 6:6 */
    ca_uint32_t soft_reset           :  1 ; /* bits 7:7 */
    ca_uint32_t en_co_error          :  1 ; /* bits 8:8 */
    ca_uint32_t drop_untag_pkt_mode  :  2 ; /* bits 10:9 */
    ca_uint32_t debug_bus_sel        :  3 ; /* bits 13:11 */
    ca_uint32_t dis_ver0_macsec_err  :  1 ; /* bits 14:14 */
    ca_uint32_t en_macsec_4keys      :  1 ; /* bits 15:15 */
    ca_uint32_t macsec_upstream      :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_GLOBAL_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_MPCP_TIMER_ADJUST 0xf55014c4
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_MPCP_TIMER_ADJUST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_timer_comp_mac_coresec_10 :  5 ; /* bits 4:0 */
    ca_uint32_t mpcp_timer_comp_coresec_10 :  2 ; /* bits 6:5 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_MPCP_TIMER_ADJUST_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_0  0xf55014c8
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_sa_reg0        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_1  0xf55014cc
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t local_sa_reg1        : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t sel_local_sa_reg     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE 0xf55014d0
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_dft 0x00030000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_defined         : 16 ; /* bits 15:0 */
    ca_uint32_t no_drop_oam          :  1 ; /* bits 16:16 */
    ca_uint32_t no_drop_mpcp         :  1 ; /* bits 17:17 */
    ca_uint32_t no_drop_802_1x       :  1 ; /* bits 18:18 */
    ca_uint32_t no_drop_user_def     :  1 ; /* bits 19:19 */
    ca_uint32_t no_drop_user_def10   :  1 ; /* bits 20:20 */
    ca_uint32_t no_drop_user_def11   :  1 ; /* bits 21:21 */
    ca_uint32_t no_drop_user_def20   :  1 ; /* bits 22:22 */
    ca_uint32_t no_drop_user_def21   :  1 ; /* bits 23:23 */
    ca_uint32_t no_drop_8902         :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_1 0xf55014d4
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_defined10       : 16 ; /* bits 15:0 */
    ca_uint32_t user_defined11       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_2 0xf55014d8
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t user_defined20       : 16 ; /* bits 15:0 */
    ca_uint32_t user_defined21       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_ACCESS 0xf55014dc
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mem_loc              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_DATA 0xf55014e0
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LLID_value           : 16 ; /* bits 15:0 */
    ca_uint32_t valid                :  1 ; /* bits 16:16 */
    ca_uint32_t SA_ID                :  6 ; /* bits 22:17 */
    ca_uint32_t rsrvd1               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_ACCESS 0xf55014e4
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mem_loc              :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA10 0xf55014e8
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsUnusedSA       : 22 ; /* bits 21:0 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA10_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA9 0xf55014ec
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsNotUsingSA     : 22 ; /* bits 21:0 */
    ca_uint32_t InPktsUnusedSA       : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA9_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA8 0xf55014f0
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsNotValid       : 22 ; /* bits 21:0 */
    ca_uint32_t InPktsNotUsingSA     : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA7 0xf55014f4
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsInvalid        : 22 ; /* bits 21:0 */
    ca_uint32_t InPktsNotValid       : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA6 0xf55014f8
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsOK             : 22 ; /* bits 21:0 */
    ca_uint32_t InPktsInvalid        : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA5 0xf55014fc
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsLate           : 22 ; /* bits 21:0 */
    ca_uint32_t InPktsOK             : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA4 0xf5501500
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InOctetsDecrypted_OutOctetsEncrypted : 22 ; /* bits 21:0 */
    ca_uint32_t InPktsLate           : 10 ; /* bits 31:22 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA3 0xf5501504
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InOctetsValidated_OutOctetsProtected : 11 ; /* bits 10:0 */
    ca_uint32_t InOctetsDecrypted_OutOctetsEncrypted : 21 ; /* bits 31:11 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA2 0xf5501508
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InOctetsValidated_OutOctetsProtected : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA1 0xf550150c
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsDelayed_OutPktsEncrypted : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA0 0xf5501510
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t InPktsUnchecked_OutPktsProtected : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsUnTagged 0xf5501514
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsUnTagged_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_macsec_mib_OutPktsUnTagged_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsUnTagged_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsTooLong 0xf5501518
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsTooLong_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_macsec_mib_OutPktsTooLong_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsTooLong_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnTagged 0xf550151c
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnTagged_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_mib_InPktsUnTagged_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnTagged_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoTag 0xf5501520
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoTag_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_mib_InPktsNoTag_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoTag_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsBadTag 0xf5501524
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsBadTag_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_mib_InPktsBadTag_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsBadTag_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnKnownSCI 0xf5501528
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnKnownSCI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_mib_InPktsUnKnownSCI_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnKnownSCI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoSCI 0xf550152c
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoSCI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_mib_InPktsNoSCI_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoSCI_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsOverrun 0xf5501530
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsOverrun_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_mib_InPktsOverrun_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsOverrun_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_INVALID_CO_ERR_CNT 0xf5501534
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_INVALID_CO_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_dec_invalid_co_err_cnt_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_INVALID_CO_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_VER_NUM_ERR_CNT 0xf5501538
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_VER_NUM_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_dec_ver_num_err_cnt_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_VER_NUM_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_SL_MSB_ERR_CNT 0xf550153c
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_SL_MSB_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_dec_sl_msb_err_cnt_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_SL_MSB_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_AUTH_FAIL_ERR_CNT 0xf5501540
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_AUTH_FAIL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_macsec_dec_auth_fail_err_cnt_inc : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_AUTH_FAIL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_STATUS 0xf5501544
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_STATUS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stat_mem_init_done   :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_PKTS_UN_REG_LLID_CNT 0xf5501548
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_PKTS_UN_REG_LLID_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_pkts_un_known_llid : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_PKTS_UN_REG_LLID_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_RUNT_PKTS_CNT 0xf550154c
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_RUNT_PKTS_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_runt_pkts         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_RUNT_PKTS_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL0 0xf5501550
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL0_dft 0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sram_0a_rm           :  2 ; /* bits 1:0 */
    ca_uint32_t sram_0a_rme          :  1 ; /* bits 2:2 */
    ca_uint32_t sram_0a_test1        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sram_0b_rm           :  2 ; /* bits 9:8 */
    ca_uint32_t sram_0b_rme          :  1 ; /* bits 10:10 */
    ca_uint32_t sram_0b_test1        :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t sram_1a_rm           :  2 ; /* bits 17:16 */
    ca_uint32_t sram_1a_rme          :  1 ; /* bits 18:18 */
    ca_uint32_t sram_1a_test1        :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t sram_1b_rm           :  2 ; /* bits 25:24 */
    ca_uint32_t sram_1b_rme          :  1 ; /* bits 26:26 */
    ca_uint32_t sram_1b_test1        :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL1 0xf5501554
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL1_dft 0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sram_0a_rm           :  2 ; /* bits 1:0 */
    ca_uint32_t sram_0a_rme          :  1 ; /* bits 2:2 */
    ca_uint32_t sram_0a_test1        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sram_0b_rm           :  2 ; /* bits 9:8 */
    ca_uint32_t sram_0b_rme          :  1 ; /* bits 10:10 */
    ca_uint32_t sram_0b_test1        :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t sram_1a_rm           :  2 ; /* bits 17:16 */
    ca_uint32_t sram_1a_rme          :  1 ; /* bits 18:18 */
    ca_uint32_t sram_1a_test1        :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t sram_1b_rm           :  2 ; /* bits 25:24 */
    ca_uint32_t sram_1b_rme          :  1 ; /* bits 26:26 */
    ca_uint32_t sram_1b_test1        :  1 ; /* bits 27:27 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL2 0xf5501558
#define EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL2_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sram_0a_rm           :  2 ; /* bits 1:0 */
    ca_uint32_t sram_0a_rme          :  1 ; /* bits 2:2 */
    ca_uint32_t sram_0a_test1        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL2_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CORESEC10 */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_0_t INTERRUPT_0;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_0_t INTERRUPT_ENABLE_0;            /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_1_t INTERRUPT_1;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_INTERRUPT_ENABLE_1_t INTERRUPT_ENABLE_1;            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_GLOBAL_CONFIG_t CORESEC10_GLOBAL_CONFIG;       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_CORESEC10_MPCP_TIMER_ADJUST_t CORESEC10_MPCP_TIMER_ADJUST;   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_0_t SA_0;                          /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_SA_1_t SA_1;                          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_t NOT_DROP_ETHERTYPE;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_1_t NOT_DROP_ETHERTYPE_1;          /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_NOT_DROP_ETHERTYPE_2_t NOT_DROP_ETHERTYPE_2;          /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_ACCESS_t LLID_PROG_MEM_ACCESS;          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_LLID_PROG_MEM_DATA_t LLID_PROG_MEM_DATA;            /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_ACCESS_t TX_RX_MIB_MEM_ACCESS;          /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA10_t TX_RX_MIB_MEM_DATA10;          /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA9_t TX_RX_MIB_MEM_DATA9;           /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA8_t TX_RX_MIB_MEM_DATA8;           /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA7_t TX_RX_MIB_MEM_DATA7;           /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA6_t TX_RX_MIB_MEM_DATA6;           /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA5_t TX_RX_MIB_MEM_DATA5;           /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA4_t TX_RX_MIB_MEM_DATA4;           /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA3_t TX_RX_MIB_MEM_DATA3;           /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA2_t TX_RX_MIB_MEM_DATA2;           /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA1_t TX_RX_MIB_MEM_DATA1;           /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_RX_MIB_MEM_DATA0_t TX_RX_MIB_MEM_DATA0;           /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsUnTagged_t TX_MACSEC_MIB_OutPktsUnTagged; /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_TX_MACSEC_MIB_OutPktsTooLong_t TX_MACSEC_MIB_OutPktsTooLong;  /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnTagged_t RX_MACSEC_MIB_InPktsUnTagged;  /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoTag_t RX_MACSEC_MIB_InPktsNoTag;     /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsBadTag_t RX_MACSEC_MIB_InPktsBadTag;    /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsUnKnownSCI_t RX_MACSEC_MIB_InPktsUnKnownSCI; /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsNoSCI_t RX_MACSEC_MIB_InPktsNoSCI;     /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_MIB_InPktsOverrun_t RX_MACSEC_MIB_InPktsOverrun;   /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_INVALID_CO_ERR_CNT_t RX_MACSEC_DEC_INVALID_CO_ERR_CNT; /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_VER_NUM_ERR_CNT_t RX_MACSEC_DEC_VER_NUM_ERR_CNT; /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_SL_MSB_ERR_CNT_t RX_MACSEC_DEC_SL_MSB_ERR_CNT;  /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_MACSEC_DEC_AUTH_FAIL_ERR_CNT_t RX_MACSEC_DEC_AUTH_FAIL_ERR_CNT; /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_STATUS_t STATUS;                        /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_PKTS_UN_REG_LLID_CNT_t RX_PKTS_UN_REG_LLID_CNT;       /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_RX_RUNT_PKTS_CNT_t RX_RUNT_PKTS_CNT;              /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL0_t SRAM_TEST_CONTROL0;            /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL1_t SRAM_TEST_CONTROL1;            /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  EPON_XGEPN_CORESEC10_TOP_CORESEC10_SRAM_TEST_CONTROL2_t SRAM_TEST_CONTROL2;            /* addr: 0x000000a8 */
} APB7_EPON_XGEPN_CORESEC10_TOP_CORESEC10_t;
#endif /* !__ASSEMBLER__ */


#define APB7_EPON_XGEPN_CORESEC10_TOP_STRIDE 320
#define APB7_EPON_XGEPN_CORESEC10_TOP_COUNT 2


/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CORESEC10_TOP */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_EPON_XGEPN_CORESEC10_TOP_NANDI_t NANDI;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[83];
  APB7_EPON_XGEPN_CORESEC10_TOP_CORESEC10_t CORESEC10;                     /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd2[91];
} APB7_EPON_XGEPN_CORESEC10_TOP_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGEPN */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_EPON_XGEPN_XMAC_t          xmac;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[91];
  APB7_EPON_XGEPN_XGPCS_t         XGPCS;                         /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd2[123];
  APB7_EPON_XGEPN_CORESEC10_TOP_t CORESEC10_TOP[2];              /* addr: 0x00000420 */
} APB7_EPON_XGEPN_t;
#endif /* !__ASSEMBLER__ */


/*
 * xgonu_mpcp
 */

#define EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPT   0xf5502000
#define EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_status_changei   :  1 ; /* bits 0:0 */
    ca_uint32_t rx_register_framei   :  1 ; /* bits 1:1 */
    ca_uint32_t gate_timer_expiri    :  1 ; /* bits 2:2 */
    ca_uint32_t mpcp_timer_expiri    :  1 ; /* bits 3:3 */
    ca_uint32_t report_timer_expiri  :  1 ; /* bits 4:4 */
    ca_uint32_t reg_req_retryi       :  1 ; /* bits 5:5 */
    ca_uint32_t ts_drifti            :  1 ; /* bits 6:6 */
    ca_uint32_t grant_fifo_exceedi   :  1 ; /* bits 7:7 */
    ca_uint32_t grant_fifo_accerri   :  1 ; /* bits 8:8 */
    ca_uint32_t grant_drop_tfi       :  1 ; /* bits 9:9 */
    ca_uint32_t grant_drop_tsi       :  1 ; /* bits 10:10 */
    ca_uint32_t grant_drop_tmi       :  1 ; /* bits 11:11 */
    ca_uint32_t grant_drop_disi      :  1 ; /* bits 12:12 */
    ca_uint32_t rx_extend_framei     :  1 ; /* bits 13:13 */
    ca_uint32_t dis_pend_tmr_expiri  :  1 ; /* bits 14:14 */
    ca_uint32_t no_endrpt_reqi       :  1 ; /* bits 15:15 */
    ca_uint32_t grant_drop_tli       :  1 ; /* bits 16:16 */
    ca_uint32_t llid_tbl_remove_emptyi :  1 ; /* bits 17:17 */
    ca_uint32_t llid_tbl_fulli       :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPTE  0xf5502004
#define EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_status_changeiE  :  1 ; /* bits 0:0 */
    ca_uint32_t rx_register_frameiE  :  1 ; /* bits 1:1 */
    ca_uint32_t gate_timer_expiriE   :  1 ; /* bits 2:2 */
    ca_uint32_t mpcp_timer_expiriE   :  1 ; /* bits 3:3 */
    ca_uint32_t report_timer_expiriE :  1 ; /* bits 4:4 */
    ca_uint32_t reg_req_retryiE      :  1 ; /* bits 5:5 */
    ca_uint32_t ts_driftiE           :  1 ; /* bits 6:6 */
    ca_uint32_t grant_fifo_exceediE  :  1 ; /* bits 7:7 */
    ca_uint32_t grant_fifo_accerriE  :  1 ; /* bits 8:8 */
    ca_uint32_t grant_drop_tfiE      :  1 ; /* bits 9:9 */
    ca_uint32_t grant_drop_tsiE      :  1 ; /* bits 10:10 */
    ca_uint32_t grant_drop_tmiE      :  1 ; /* bits 11:11 */
    ca_uint32_t grant_drop_disiE     :  1 ; /* bits 12:12 */
    ca_uint32_t rx_extend_frameiE    :  1 ; /* bits 13:13 */
    ca_uint32_t dis_pend_tmr_expiriE :  1 ; /* bits 14:14 */
    ca_uint32_t no_endrpt_reqiE      :  1 ; /* bits 15:15 */
    ca_uint32_t grant_drop_tliE      :  1 ; /* bits 16:16 */
    ca_uint32_t llid_tbl_remove_emptyiE :  1 ; /* bits 17:17 */
    ca_uint32_t llid_tbl_fulliE      :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_INIT_CFG            0xf5502008
#define EPON_XGONU_MPCP_MPCP_INIT_CFG_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_index            :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t sw_index             :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_INIT_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_START_CFG           0xf550200c
#define EPON_XGONU_MPCP_MPCP_START_CFG_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_start           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_START_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REGISTER_FRAME_STS  0xf5502010
#define EPON_XGONU_MPCP_MPCP_REGISTER_FRAME_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t assigned_llid        : 16 ; /* bits 15:0 */
    ca_uint32_t flag                 :  4 ; /* bits 19:16 */
    ca_uint32_t mac_index            :  5 ; /* bits 24:20 */
    ca_uint32_t vld                  :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REGISTER_FRAME_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MAC_REG_STATUS           0xf5502014
#define EPON_XGONU_MPCP_MAC_REG_STATUS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sts                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MAC_REG_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MAC_MPCP_STS1            0xf5502018
#define EPON_XGONU_MPCP_MAC_MPCP_STS1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stat1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MAC_MPCP_STS1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MAC_MPCP_STS0            0xf550201c
#define EPON_XGONU_MPCP_MAC_MPCP_STS0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t stat0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MAC_MPCP_STS0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_CFG0                0xf5502020
#define EPON_XGONU_MPCP_MPCP_CFG0_dft            0x00010082

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_pending_grant    :  4 ; /* bits 3:0 */
    ca_uint32_t dis_min_grant_check  :  1 ; /* bits 4:4 */
    ca_uint32_t req_frame_llid_sel   :  1 ; /* bits 5:5 */
    ca_uint32_t bak_grt_en           :  1 ; /* bits 6:6 */
    ca_uint32_t flush_grtff_en       :  1 ; /* bits 7:7 */
    ca_uint32_t report_mode_sel      :  3 ; /* bits 10:8 */
    ca_uint32_t t4_report_en         :  1 ; /* bits 11:11 */
    ca_uint32_t overlap_grt_ok       :  1 ; /* bits 12:12 */
    ca_uint32_t ts_drift_threshold   :  6 ; /* bits 18:13 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sieponB_mode         :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ignore_olt_disc_info :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t pre_grt_vld_mode     :  1 ; /* bits 27:27 */
    ca_uint32_t mllid_rereg_wait     :  1 ; /* bits 28:28 */
    ca_uint32_t mllid_mode           :  1 ; /* bits 29:29 */
    ca_uint32_t debug_mode           :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_CFG                 0xf5502024
#define EPON_XGONU_MPCP_MPCP_CFG_dft             0x01270020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_registration_init :  1 ; /* bits 0:0 */
    ca_uint32_t allow_direct_reg     :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t ctc_onu_silence_en   :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t en_period_report     :  1 ; /* bits 5:5 */
    ca_uint32_t en_end_rpt           :  1 ; /* bits 6:6 */
    ca_uint32_t dis_granting         :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd3               :  8 ;
    ca_uint32_t mpcp_timer_expir_dereg :  1 ; /* bits 16:16 */
    ca_uint32_t gate_timer_expir_dereg :  1 ; /* bits 17:17 */
    ca_uint32_t en_ts_drift_dereg    :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t ctl_txarb_timer      :  8 ; /* bits 27:20 */
    ca_uint32_t rsrvd5               :  2 ;
    ca_uint32_t clr_permit           :  1 ; /* bits 30:30 */
    ca_uint32_t llid_en              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_CFG_1G              0xf5502028
#define EPON_XGONU_MPCP_MPCP_CFG_1G_dft          0x00000f2a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t min_pkt_size_1g      :  8 ; /* bits 7:0 */
    ca_uint32_t fec_overhead_1g      :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_CFG_1G_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_CFG_10G             0xf550202c
#define EPON_XGONU_MPCP_MPCP_CFG_10G_dft         0x10000e06

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t min_grant_len_10g_nofec :  8 ; /* bits 7:0 */
    ca_uint32_t min_grant_len_10g    :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t burst_end_xgpcs_dly  :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_CFG_10G_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_GRANT_VLD_AHEAD_TIMER    0xf5502030
#define EPON_XGONU_MPCP_GRANT_VLD_AHEAD_TIMER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_GRANT_VLD_AHEAD_TIMER_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_ES_STOP_WIN_CFG          0xf5502034
#define EPON_XGONU_MPCP_ES_STOP_WIN_CFG_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ahead_timer          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 30 ;
    ca_uint32_t wait                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_ES_STOP_WIN_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GRANT_TIMER         0xf5502038
#define EPON_XGONU_MPCP_MPCP_GRANT_TIMER_dft     0x040003ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t max_future_grant_time : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t min_processing_time  : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd2               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GRANT_TIMER_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_LASER_TIME_CFG      0xf550203c
#define EPON_XGONU_MPCP_MPCP_LASER_TIME_CFG_dft  0x00200020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t laserOnTime_cfg      :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t laserOffTime_cfg     :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_LASER_TIME_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_STIME_ADJ           0xf5502040
#define EPON_XGONU_MPCP_MPCP_STIME_ADJ_dft       0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t process_delay        :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_STIME_ADJ_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_CTC_REG_TIME        0xf5502044
#define EPON_XGONU_MPCP_MPCP_CTC_REG_TIME_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t silence              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_CTC_REG_TIME_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_RPT_TIME_THRED      0xf5502048
#define EPON_XGONU_MPCP_MPCP_RPT_TIME_THRED_dft  0x000001a0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_RPT_TIME_THRED_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_TIMER_EXP_THRED     0xf550204c
#define EPON_XGONU_MPCP_MPCP_TIMER_EXP_THRED_dft 0x003203e8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t gate                 : 14 ; /* bits 29:16 */
    ca_uint32_t rsrvd2               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_TIMER_EXP_THRED_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DIS_PEND_TIME_THRED 0xf5502050
#define EPON_XGONU_MPCP_MPCP_DIS_PEND_TIME_THRED_dft 0x80000fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 20 ; /* bits 19:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t en                   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DIS_PEND_TIME_THRED_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV0       0xf5502054
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV0_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV1       0xf5502058
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV1_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV2       0xf550205c
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV2_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV3       0xf5502060
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV3_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV4       0xf5502064
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV4_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV4_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV5       0xf5502068
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV5_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV5_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV6       0xf550206c
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV6_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV6_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV7       0xf5502070
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV7_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV7_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV8       0xf5502074
#define EPON_XGONU_MPCP_MPCP_REG_REQ_RESV8_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REG_REQ_RESV8_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV0           0xf5502078
#define EPON_XGONU_MPCP_MPCP_ACK_RESV0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV0_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV1           0xf550207c
#define EPON_XGONU_MPCP_MPCP_ACK_RESV1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV2           0xf5502080
#define EPON_XGONU_MPCP_MPCP_ACK_RESV2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV2_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV3           0xf5502084
#define EPON_XGONU_MPCP_MPCP_ACK_RESV3_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV3_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV4           0xf5502088
#define EPON_XGONU_MPCP_MPCP_ACK_RESV4_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV4_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV5           0xf550208c
#define EPON_XGONU_MPCP_MPCP_ACK_RESV5_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV5_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV6           0xf5502090
#define EPON_XGONU_MPCP_MPCP_ACK_RESV6_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV6_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV7           0xf5502094
#define EPON_XGONU_MPCP_MPCP_ACK_RESV7_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV7_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ACK_RESV8           0xf5502098
#define EPON_XGONU_MPCP_MPCP_ACK_RESV8_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ACK_RESV8_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_TIMESTAMP                0xf550209c
#define EPON_XGONU_MPCP_TIMESTAMP_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_TIMESTAMP_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_OLTMACH             0xf55020a0
#define EPON_XGONU_MPCP_MPCP_OLTMACH_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t olt_macH             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_OLTMACH_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_OLTMACL             0xf55020a4
#define EPON_XGONU_MPCP_MPCP_OLTMACL_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t olt_macL             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_OLTMACL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_LOCAL_DISINFO       0xf55020a8
#define EPON_XGONU_MPCP_MPCP_LOCAL_DISINFO_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_LOCAL_DISINFO_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REMOTE_DISINFO      0xf55020ac
#define EPON_XGONU_MPCP_MPCP_REMOTE_DISINFO_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t olt                  : 16 ; /* bits 15:0 */
    ca_uint32_t grant_size           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REMOTE_DISINFO_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_SELF_RPT_STS        0xf55020b0
#define EPON_XGONU_MPCP_MPCP_SELF_RPT_STS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t self_rpt             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_SELF_RPT_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_ONU_PATH_SPEED      0xf55020b4
#define EPON_XGONU_MPCP_MPCP_ONU_PATH_SPEED_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txpath_speed         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_ONU_PATH_SPEED_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GRANT_FIFO_STS      0xf55020b8
#define EPON_XGONU_MPCP_MPCP_GRANT_FIFO_STS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t full_grt             :  1 ; /* bits 0:0 */
    ca_uint32_t empty_grt            :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GRANT_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR     0xf55020bc
#define EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ovd_cnt              :  8 ; /* bits 7:0 */
    ca_uint32_t max_cnt              :  8 ; /* bits 15:8 */
    ca_uint32_t min_cnt              :  8 ; /* bits 23:16 */
    ca_uint32_t localLTstart_cnt     :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR1    0xf55020c0
#define EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_full_cnt          :  8 ; /* bits 7:0 */
    ca_uint32_t rd_empty_cnt         :  8 ; /* bits 15:8 */
    ca_uint32_t rd_drop_cnt          :  8 ; /* bits 23:16 */
    ca_uint32_t llid_mismatch_drop_cnt :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR1_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_BAK_GRANT_CNTR      0xf55020c4
#define EPON_XGONU_MPCP_MPCP_BAK_GRANT_CNTR_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_BAK_GRANT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_LLID_SYNCTIME       0xf55020c8
#define EPON_XGONU_MPCP_MPCP_LLID_SYNCTIME_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_time            : 16 ; /* bits 15:0 */
    ca_uint32_t assigned_llid        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_LLID_SYNCTIME_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DIS_SYNCTIME        0xf55020cc
#define EPON_XGONU_MPCP_MPCP_DIS_SYNCTIME_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_time_xg         : 16 ; /* bits 15:0 */
    ca_uint32_t sync_time_1g         : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DIS_SYNCTIME_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_SYNCTIME_CFG        0xf55020d0
#define EPON_XGONU_MPCP_MPCP_SYNCTIME_CFG_dft    0x00200020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sync_time_dis        : 16 ; /* bits 15:0 */
    ca_uint32_t sync_time_norm       : 15 ; /* bits 30:16 */
    ca_uint32_t mode                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_SYNCTIME_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_LASER_TIME_STS      0xf55020d4
#define EPON_XGONU_MPCP_MPCP_LASER_TIME_STS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t laserOnTime_sts      :  8 ; /* bits 7:0 */
    ca_uint32_t laserOffTime_sts     :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_LASER_TIME_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_PKT_FLAG            0xf55020d8
#define EPON_XGONU_MPCP_MPCP_PKT_FLAG_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ack_flag             :  8 ; /* bits 7:0 */
    ca_uint32_t request_flag         :  8 ; /* bits 15:8 */
    ca_uint32_t register_flag        :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_PKT_FLAG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_REGISTER_STS        0xf55020dc
#define EPON_XGONU_MPCP_MPCP_REGISTER_STS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prereg               :  1 ; /* bits 0:0 */
    ca_uint32_t registered           :  1 ; /* bits 1:1 */
    ca_uint32_t permit               :  1 ; /* bits 2:2 */
    ca_uint32_t retry                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_REGISTER_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DEREG               0xf55020e0
#define EPON_XGONU_MPCP_MPCP_DEREG_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en_local_offline     : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DEREG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GATE_TIMER_STS      0xf55020e4
#define EPON_XGONU_MPCP_MPCP_GATE_TIMER_STS_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t expire_sts           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GATE_TIMER_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DEREG_CAUSE         0xf55020e8
#define EPON_XGONU_MPCP_MPCP_DEREG_CAUSE_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t code                 :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t first_dereg_code     :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t dereg_cnt            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DEREG_CAUSE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_MON_CNTR            0xf55020ec
#define EPON_XGONU_MPCP_MPCP_MON_CNTR_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ts_drift_cnt         :  8 ; /* bits 7:0 */
    ca_uint32_t mpcp_timer_expir_cnt :  8 ; /* bits 15:8 */
    ca_uint32_t gate_timer_expir_cnt :  8 ; /* bits 23:16 */
    ca_uint32_t reged_cnt            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_MON_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_MON_STS             0xf55020f0
#define EPON_XGONU_MPCP_MPCP_MON_STS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t force_report_before_reged :  1 ; /* bits 0:0 */
    ca_uint32_t normal_gate_before_reged :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t retry_cnt            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_MON_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_LLID_DBG            0xf55020f4
#define EPON_XGONU_MPCP_MPCP_LLID_DBG_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_mac_idx          :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t debug_sel            :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t en_llid_debug        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_LLID_DBG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GRANT_FIFO_CTRL     0xf55020f8
#define EPON_XGONU_MPCP_MPCP_GRANT_FIFO_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GRANT_FIFO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_GRANT_FIFO_DATA     0xf55020fc
#define EPON_XGONU_MPCP_MPCP_GRANT_FIFO_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_GRANT_FIFO_DATA_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_RXPKT_CNTR          0xf5502100
#define EPON_XGONU_MPCP_MPCP_RXPKT_CNTR_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_pktcnt            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_RXPKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_TXPKT_CNTR          0xf5502104
#define EPON_XGONU_MPCP_MPCP_TXPKT_CNTR_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_pktcnt            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_TXPKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_CTL_RPT_TMR              0xf5502108
#define EPON_XGONU_MPCP_CTL_RPT_TMR_dft          0x0007000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reg_rpt_vld_tmr      : 16 ; /* bits 15:0 */
    ca_uint32_t reg_rpt_req_tmr      : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_CTL_RPT_TMR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_POWER_SAVING_CFG         0xf550210c
#define EPON_XGONU_MPCP_POWER_SAVING_CFG_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sleep_cycle_en       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_POWER_SAVING_CFG_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_POWER_SAVING_STS         0xf5502110
#define EPON_XGONU_MPCP_POWER_SAVING_STS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sleep_cycle_st       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_POWER_SAVING_STS_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_SPARE                    0xf5502114
#define EPON_XGONU_MPCP_SPARE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_RSVR                     0xf5502118
#define EPON_XGONU_MPCP_RSVR_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_RSVR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MP_RPT_CNT               0xf550211c
#define EPON_XGONU_MPCP_MP_RPT_CNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_rpt_cnt           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MP_RPT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DISPKT_CNTR         0xf5502120
#define EPON_XGONU_MPCP_MPCP_DISPKT_CNTR_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t disfrm_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DISPKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DISPKT_PERIOD       0xf5502124
#define EPON_XGONU_MPCP_MPCP_DISPKT_PERIOD_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t disfrm_period        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DISPKT_PERIOD_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MISC                     0xf5502128
#define EPON_XGONU_MPCP_MISC_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_datapath_rst    :  1 ; /* bits 0:0 */
    ca_uint32_t txACK_mode           :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MISC_t;
#endif /* !__ASSEMBLER__ */


#define EPON_XGONU_MPCP_MPCP_DUMMY_00            0xf550212c
#define EPON_XGONU_MPCP_MPCP_DUMMY_00_dft        0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_dummy_00        : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} EPON_XGONU_MPCP_MPCP_DUMMY_00_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgonu_mpcp */
#ifndef __ASSEMBLER__
typedef struct {
  EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPT_t MPCP_IRQ_SRC_INTERRUPT;        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  EPON_XGONU_MPCP_MPCP_IRQ_SRC_INTERRUPTE_t MPCP_IRQ_SRC_INTERRUPTE;       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  EPON_XGONU_MPCP_MPCP_INIT_CFG_t          MPCP_INIT_CFG;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  EPON_XGONU_MPCP_MPCP_START_CFG_t         MPCP_START_CFG;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  EPON_XGONU_MPCP_MPCP_REGISTER_FRAME_STS_t MPCP_REGISTER_FRAME_STS;       /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  EPON_XGONU_MPCP_MAC_REG_STATUS_t         MAC_REG_STATUS;                /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  EPON_XGONU_MPCP_MAC_MPCP_STS1_t          MAC_MPCP_STS1;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  EPON_XGONU_MPCP_MAC_MPCP_STS0_t          MAC_MPCP_STS0;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  EPON_XGONU_MPCP_MPCP_CFG0_t              MPCP_CFG0;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  EPON_XGONU_MPCP_MPCP_CFG_t               MPCP_CFG;                      /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  EPON_XGONU_MPCP_MPCP_CFG_1G_t            MPCP_CFG_1G;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  EPON_XGONU_MPCP_MPCP_CFG_10G_t           MPCP_CFG_10G;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  EPON_XGONU_MPCP_GRANT_VLD_AHEAD_TIMER_t  GRANT_VLD_AHEAD_TIMER;         /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  EPON_XGONU_MPCP_ES_STOP_WIN_CFG_t        ES_STOP_WIN_CFG;               /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  EPON_XGONU_MPCP_MPCP_GRANT_TIMER_t       MPCP_GRANT_TIMER;              /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  EPON_XGONU_MPCP_MPCP_LASER_TIME_CFG_t    MPCP_LASER_TIME_CFG;           /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  EPON_XGONU_MPCP_MPCP_STIME_ADJ_t         MPCP_STIME_ADJ;                /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  EPON_XGONU_MPCP_MPCP_CTC_REG_TIME_t      MPCP_CTC_REG_TIME;             /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  EPON_XGONU_MPCP_MPCP_RPT_TIME_THRED_t    MPCP_RPT_TIME_THRED;           /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  EPON_XGONU_MPCP_MPCP_TIMER_EXP_THRED_t   MPCP_TIMER_EXP_THRED;          /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  EPON_XGONU_MPCP_MPCP_DIS_PEND_TIME_THRED_t MPCP_DIS_PEND_TIME_THRED;      /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV0_t     MPCP_REG_REQ_RESV0;            /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV1_t     MPCP_REG_REQ_RESV1;            /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV2_t     MPCP_REG_REQ_RESV2;            /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV3_t     MPCP_REG_REQ_RESV3;            /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV4_t     MPCP_REG_REQ_RESV4;            /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV5_t     MPCP_REG_REQ_RESV5;            /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV6_t     MPCP_REG_REQ_RESV6;            /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV7_t     MPCP_REG_REQ_RESV7;            /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  EPON_XGONU_MPCP_MPCP_REG_REQ_RESV8_t     MPCP_REG_REQ_RESV8;            /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV0_t         MPCP_ACK_RESV0;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV1_t         MPCP_ACK_RESV1;                /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV2_t         MPCP_ACK_RESV2;                /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV3_t         MPCP_ACK_RESV3;                /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV4_t         MPCP_ACK_RESV4;                /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV5_t         MPCP_ACK_RESV5;                /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV6_t         MPCP_ACK_RESV6;                /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV7_t         MPCP_ACK_RESV7;                /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  EPON_XGONU_MPCP_MPCP_ACK_RESV8_t         MPCP_ACK_RESV8;                /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  EPON_XGONU_MPCP_TIMESTAMP_t              TIMESTAMP;                     /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  EPON_XGONU_MPCP_MPCP_OLTMACH_t           MPCP_OLTMACH;                  /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  EPON_XGONU_MPCP_MPCP_OLTMACL_t           MPCP_OLTMACL;                  /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  EPON_XGONU_MPCP_MPCP_LOCAL_DISINFO_t     MPCP_LOCAL_DISINFO;            /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  EPON_XGONU_MPCP_MPCP_REMOTE_DISINFO_t    MPCP_REMOTE_DISINFO;           /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  EPON_XGONU_MPCP_MPCP_SELF_RPT_STS_t      MPCP_SELF_RPT_STS;             /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  EPON_XGONU_MPCP_MPCP_ONU_PATH_SPEED_t    MPCP_ONU_PATH_SPEED;           /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  EPON_XGONU_MPCP_MPCP_GRANT_FIFO_STS_t    MPCP_GRANT_FIFO_STS;           /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR_t   MPCP_GRANT_DROP_CNTR;          /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  EPON_XGONU_MPCP_MPCP_GRANT_DROP_CNTR1_t  MPCP_GRANT_DROP_CNTR1;         /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  EPON_XGONU_MPCP_MPCP_BAK_GRANT_CNTR_t    MPCP_BAK_GRANT_CNTR;           /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  EPON_XGONU_MPCP_MPCP_LLID_SYNCTIME_t     MPCP_LLID_SYNCTIME;            /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  EPON_XGONU_MPCP_MPCP_DIS_SYNCTIME_t      MPCP_DIS_SYNCTIME;             /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  EPON_XGONU_MPCP_MPCP_SYNCTIME_CFG_t      MPCP_SYNCTIME_CFG;             /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  EPON_XGONU_MPCP_MPCP_LASER_TIME_STS_t    MPCP_LASER_TIME_STS;           /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  EPON_XGONU_MPCP_MPCP_PKT_FLAG_t          MPCP_PKT_FLAG;                 /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  EPON_XGONU_MPCP_MPCP_REGISTER_STS_t      MPCP_REGISTER_STS;             /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  EPON_XGONU_MPCP_MPCP_DEREG_t             MPCP_DEREG;                    /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  EPON_XGONU_MPCP_MPCP_GATE_TIMER_STS_t    MPCP_GATE_TIMER_STS;           /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  EPON_XGONU_MPCP_MPCP_DEREG_CAUSE_t       MPCP_DEREG_CAUSE;              /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  EPON_XGONU_MPCP_MPCP_MON_CNTR_t          MPCP_MON_CNTR;                 /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  EPON_XGONU_MPCP_MPCP_MON_STS_t           MPCP_MON_STS;                  /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  EPON_XGONU_MPCP_MPCP_LLID_DBG_t          MPCP_LLID_DBG;                 /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  EPON_XGONU_MPCP_MPCP_GRANT_FIFO_CTRL_t   MPCP_GRANT_FIFO_CTRL;          /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  EPON_XGONU_MPCP_MPCP_GRANT_FIFO_DATA_t   MPCP_GRANT_FIFO_DATA;          /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  EPON_XGONU_MPCP_MPCP_RXPKT_CNTR_t        MPCP_RXPKT_CNTR;               /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  EPON_XGONU_MPCP_MPCP_TXPKT_CNTR_t        MPCP_TXPKT_CNTR;               /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  EPON_XGONU_MPCP_CTL_RPT_TMR_t            CTL_RPT_TMR;                   /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  EPON_XGONU_MPCP_POWER_SAVING_CFG_t       POWER_SAVING_CFG;              /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  EPON_XGONU_MPCP_POWER_SAVING_STS_t       POWER_SAVING_STS;              /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  EPON_XGONU_MPCP_SPARE_t                  SPARE;                         /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  EPON_XGONU_MPCP_RSVR_t                   RSVR;                          /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  EPON_XGONU_MPCP_MP_RPT_CNT_t             MP_RPT_CNT;                    /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  EPON_XGONU_MPCP_MPCP_DISPKT_CNTR_t       MPCP_DISPKT_CNTR;              /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  EPON_XGONU_MPCP_MPCP_DISPKT_PERIOD_t     MPCP_DISPKT_PERIOD;            /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  EPON_XGONU_MPCP_MISC_t                   MISC;                          /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  EPON_XGONU_MPCP_MPCP_DUMMY_00_t          MPCP_DUMMY_00;                 /* addr: 0x0000012c */
} APB7_EPON_XGONU_MPCP_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* EPON */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_EPON_EPON_GLB_t            epon_glb;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[1265];
  APB7_EPON_EPON_MIB_t            epon_mib;                      /* addr: 0x00000600 */
  ca_uint32_t                              rsrvd2[469];
  APB7_EPON_ONU_EPON_t            ONU_EPON;                      /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd3[825];
  APB7_EPON_ONU_1PPS_t            onu_1pps;                      /* addr: 0x00000c00 */
  ca_uint32_t                              rsrvd4[245];
  APB7_EPON_GLB_PTP_t             glb_ptp;                       /* addr: 0x00000d00 */
  ca_uint32_t                              rsrvd5[493];
  APB7_EPON_ONU_LT_t              onu_lt;                        /* addr: 0x00000f00 */
  ca_uint32_t                              rsrvd6[239];
  APB7_EPON_XGEPN_t               XGEPN;                         /* addr: 0x00001000 */
  ca_uint32_t                              rsrvd7[2400];
  APB7_EPON_XGONU_MPCP_t          xgonu_mpcp;                    /* addr: 0x00002000 */
} APB7_EPON_t;
#endif /* !__ASSEMBLER__ */


/*
 * XGPN
 */

/*
 * xgpn_glb
 */

#define XGPN_XGPN_GLB_VERSION_ID                 0xf5504000
#define XGPN_XGPN_GLB_VERSION_ID_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t revid                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_VERSION_ID_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_CTRL                       0xf5504004
#define XGPN_XGPN_GLB_CTRL_dft                   0x000000c0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_en               :  2 ; /* bits 1:0 */
    ca_uint32_t power_saving_mode    :  2 ; /* bits 3:2 */
    ca_uint32_t pm_mode              :  2 ; /* bits 5:4 */
    ca_uint32_t us_line_rate         :  2 ; /* bits 7:6 */
    ca_uint32_t uwlch_id             :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t flush_id             :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sw_reset_pmac        :  1 ; /* bits 30:30 */
    ca_uint32_t flush_en             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_INTERRUPT0                 0xf5504008
#define XGPN_XGPN_GLB_INTERRUPT0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DSFP                 :  1 ; /* bits 0:0 */
    ca_uint32_t USBG                 :  1 ; /* bits 1:1 */
    ca_uint32_t PLMP                 :  1 ; /* bits 2:2 */
    ca_uint32_t BWMP                 :  1 ; /* bits 3:3 */
    ca_uint32_t ACTP                 :  1 ; /* bits 4:4 */
    ca_uint32_t AES                  :  1 ; /* bits 5:5 */
    ca_uint32_t AES_PLMP             :  1 ; /* bits 6:6 */
    ca_uint32_t XGFEC                :  1 ; /* bits 7:7 */
    ca_uint32_t RXCTL                :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_INTERRUPT0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_INTERRUPT0E                0xf550400c
#define XGPN_XGPN_GLB_INTERRUPT0E_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DSFPE                :  1 ; /* bits 0:0 */
    ca_uint32_t USBGE                :  1 ; /* bits 1:1 */
    ca_uint32_t PLMPE                :  1 ; /* bits 2:2 */
    ca_uint32_t BWMPE                :  1 ; /* bits 3:3 */
    ca_uint32_t ACTPE                :  1 ; /* bits 4:4 */
    ca_uint32_t AESE                 :  1 ; /* bits 5:5 */
    ca_uint32_t AES_PLMPE            :  1 ; /* bits 6:6 */
    ca_uint32_t XGFECE               :  1 ; /* bits 7:7 */
    ca_uint32_t RXCTLE               :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_INTERRUPT0E_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_INTERRUPT1                 0xf5504010
#define XGPN_XGPN_GLB_INTERRUPT1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DSFP                 :  1 ; /* bits 0:0 */
    ca_uint32_t USBG                 :  1 ; /* bits 1:1 */
    ca_uint32_t PLMP                 :  1 ; /* bits 2:2 */
    ca_uint32_t BWMP                 :  1 ; /* bits 3:3 */
    ca_uint32_t ACTP                 :  1 ; /* bits 4:4 */
    ca_uint32_t AES                  :  1 ; /* bits 5:5 */
    ca_uint32_t AES_PLMP             :  1 ; /* bits 6:6 */
    ca_uint32_t XGFEC                :  1 ; /* bits 7:7 */
    ca_uint32_t RXCTL                :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_INTERRUPT1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_INTERRUPT1E                0xf5504014
#define XGPN_XGPN_GLB_INTERRUPT1E_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t DSFPE                :  1 ; /* bits 0:0 */
    ca_uint32_t USBGE                :  1 ; /* bits 1:1 */
    ca_uint32_t PLMPE                :  1 ; /* bits 2:2 */
    ca_uint32_t BWMPE                :  1 ; /* bits 3:3 */
    ca_uint32_t ACTPE                :  1 ; /* bits 4:4 */
    ca_uint32_t AESE                 :  1 ; /* bits 5:5 */
    ca_uint32_t AES_PLMPE            :  1 ; /* bits 6:6 */
    ca_uint32_t XGFECE               :  1 ; /* bits 7:7 */
    ca_uint32_t RXCTLE               :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_INTERRUPT1E_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_DEBUG_CTRL                 0xf5504018
#define XGPN_XGPN_GLB_DEBUG_CTRL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t eco_los_reset_cfg    :  3 ; /* bits 6:4 */
    ca_uint32_t eco_los_reset_en     :  1 ; /* bits 7:7 */
    ca_uint32_t eco_us_xgem_buf_reset :  1 ; /* bits 8:8 */
    ca_uint32_t eco_plm_ctrl_reset   :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t gem_port_mib_debug_en :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_DEBUG_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_DEBUG_STATUS0              0xf550401c
#define XGPN_XGPN_GLB_DEBUG_STATUS0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_DEBUG_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_DEBUG_STATUS1              0xf5504020
#define XGPN_XGPN_GLB_DEBUG_STATUS1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_DEBUG_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL1     0xf5504024
#define XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sfc1                 : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL0     0xf5504028
#define XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sfc0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_CFG                0xf550402c
#define XGPN_XGPN_GLB_SNIFFER_CFG_dft            0x0001000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bwmp_en              :  1 ; /* bits 0:0 */
    ca_uint32_t ploamd_en            :  1 ; /* bits 1:1 */
    ca_uint32_t ploamu_en            :  1 ; /* bits 2:2 */
    ca_uint32_t bwmp_ploamu          :  1 ; /* bits 3:3 */
    ca_uint32_t bwmp_bc              :  1 ; /* bits 4:4 */
    ca_uint32_t ploamd_bc            :  1 ; /* bits 5:5 */
    ca_uint32_t ploamd_uc_all        :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t dis_int              :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 14 ;
    ca_uint32_t cpu_read_sniffer     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_STS                0xf5504030
#define XGPN_XGPN_GLB_SNIFFER_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sniffer_mem_ptr      : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_MEM_ACCESS         0xf5504034
#define XGPN_XGPN_GLB_SNIFFER_MEM_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA3          0xf5504038
#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA3_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sfc                  : 19 ; /* bits 18:0 */
    ca_uint32_t rsvd                 : 11 ; /* bits 29:19 */
    ca_uint32_t bwmap                :  1 ; /* bits 30:30 */
    ca_uint32_t usdir                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA2          0xf550403c
#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sfc                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA1          0xf5504040
#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t capture              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA0          0xf5504044
#define XGPN_XGPN_GLB_SNIFFER_MEM_DATA0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t capture              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SNIFFER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_0        0xf5504048
#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_0_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_1        0xf550404c
#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_1_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SRAM_TEST_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_2        0xf5504050
#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_2_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SRAM_TEST_CONTROL_2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_3        0xf5504054
#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_3_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SRAM_TEST_CONTROL_3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_4        0xf5504058
#define XGPN_XGPN_GLB_SRAM_TEST_CONTROL_4_dft    0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGPN_GLB_SRAM_TEST_CONTROL_4_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgpn_glb */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_XGPN_GLB_VERSION_ID_t               VERSION_ID;                    /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_XGPN_GLB_CTRL_t                     CTRL;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_XGPN_GLB_INTERRUPT0_t               INTERRUPT0;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_XGPN_GLB_INTERRUPT0E_t              INTERRUPT0E;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_XGPN_GLB_INTERRUPT1_t               INTERRUPT1;                    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_XGPN_GLB_INTERRUPT1E_t              INTERRUPT1E;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_XGPN_GLB_DEBUG_CTRL_t               DEBUG_CTRL;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_XGPN_GLB_DEBUG_STATUS0_t            DEBUG_STATUS0;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_XGPN_GLB_DEBUG_STATUS1_t            DEBUG_STATUS1;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL1_t   SUPER_FRAME_MATCH_VAL1;        /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_XGPN_GLB_SUPER_FRAME_MATCH_VAL0_t   SUPER_FRAME_MATCH_VAL0;        /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_XGPN_GLB_SNIFFER_CFG_t              SNIFFER_CFG;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_XGPN_GLB_SNIFFER_STS_t              SNIFFER_STS;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_XGPN_GLB_SNIFFER_MEM_ACCESS_t       SNIFFER_MEM_ACCESS;            /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_XGPN_GLB_SNIFFER_MEM_DATA3_t        SNIFFER_MEM_DATA3;             /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_XGPN_GLB_SNIFFER_MEM_DATA2_t        SNIFFER_MEM_DATA2;             /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_XGPN_GLB_SNIFFER_MEM_DATA1_t        SNIFFER_MEM_DATA1;             /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_XGPN_GLB_SNIFFER_MEM_DATA0_t        SNIFFER_MEM_DATA0;             /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_XGPN_GLB_SRAM_TEST_CONTROL_0_t      SRAM_TEST_CONTROL_0;           /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  XGPN_XGPN_GLB_SRAM_TEST_CONTROL_1_t      SRAM_TEST_CONTROL_1;           /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  XGPN_XGPN_GLB_SRAM_TEST_CONTROL_2_t      SRAM_TEST_CONTROL_2;           /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  XGPN_XGPN_GLB_SRAM_TEST_CONTROL_3_t      SRAM_TEST_CONTROL_3;           /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  XGPN_XGPN_GLB_SRAM_TEST_CONTROL_4_t      SRAM_TEST_CONTROL_4;           /* addr: 0x00000058 */
} APB7_XGPN_XGPN_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * dsfp
 */

#define XGPN_DSFP_hec_ctl                        0xf5504100
#define XGPN_DSFP_hec_ctl_dft                    0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hec0_en              :  1 ; /* bits 0:0 */
    ca_uint32_t hec1_en              :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_hec_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_sync_ctl                       0xf5504104
#define XGPN_DSFP_sync_ctl_dft                   0x0003002d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ds_descramble_en     :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sfc_hecchk_en        :  1 ; /* bits 2:2 */
    ca_uint32_t ponid_hecchk_en      :  1 ; /* bits 3:3 */
    ca_uint32_t psbd_err_allow       :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t resync_loss_frame_num :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd3               : 11 ;
    ca_uint32_t byte_swap_en         :  1 ; /* bits 30:30 */
    ca_uint32_t bit_swap_en          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_sync_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgtc_ctl                       0xf5504108
#define XGPN_DSFP_xgtc_ctl_dft                   0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hec_chk_en           :  1 ; /* bits 0:0 */
    ca_uint32_t bwmp_en              :  1 ; /* bits 1:1 */
    ca_uint32_t ploam_en             :  1 ; /* bits 2:2 */
    ca_uint32_t ds_en                :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t drop_xgtc_frame_en   :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgtc_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_ctl                       0xf550410c
#define XGPN_DSFP_xgem_ctl_dft                   0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hec_chk_en           :  1 ; /* bits 0:0 */
    ca_uint32_t invld_key_xgem_drop_en :  1 ; /* bits 1:1 */
    ca_uint32_t old_key_xgem_drop_en :  1 ; /* bits 2:2 */
    ca_uint32_t los_word_cnt_clr_en  :  1 ; /* bits 3:3 */
    ca_uint32_t short_pkt_drop_en    :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_ctl                      0xf5504110
#define XGPN_DSFP_rxmac_ctl_dft                  0x7d010301

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crc_chk_en           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t omci_min_pkt_size    :  6 ; /* bits 9:4 */
    ca_uint32_t min_pkt_size         :  7 ; /* bits 16:10 */
    ca_uint32_t max_pkt_size         : 14 ; /* bits 30:17 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_ctl1                     0xf5504114
#define XGPN_DSFP_rxmac_ctl1_dft                 0x07d00000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t max_pkt_size         : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd2               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_ctl1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_INTERRUPT                      0xf5504118
#define XGPN_DSFP_INTERRUPT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ds_losI              :  1 ; /* bits 0:0 */
    ca_uint32_t ds_psync_failI       :  1 ; /* bits 1:1 */
    ca_uint32_t ds_sfc_failI         :  1 ; /* bits 2:2 */
    ca_uint32_t xgem_fifo_overflowI  :  1 ; /* bits 3:3 */
    ca_uint32_t short_pkt_err        :  1 ; /* bits 4:4 */
    ca_uint32_t default_xgem_encrypt_update :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t xgem_portid_mismatchI :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t pkt_length_mismatchI :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t bip_32_errSat        :  1 ; /* bits 16:16 */
    ca_uint32_t bip_32_dw1Sat        :  1 ; /* bits 17:17 */
    ca_uint32_t psbd_hec_errSat      :  1 ; /* bits 18:18 */
    ca_uint32_t psbd_hec_uncorrected_mibSat :  1 ; /* bits 19:19 */
    ca_uint32_t xgtc_hec_correctedSat :  1 ; /* bits 20:20 */
    ca_uint32_t xgtc_hec_uncorrected_mibSat :  1 ; /* bits 21:21 */
    ca_uint32_t bwmap_hec_correctedSat :  1 ; /* bits 22:22 */
    ca_uint32_t bwmap_hec_uncorrected_mibSat :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd4               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_INTERRUPTE0                    0xf550411c
#define XGPN_DSFP_INTERRUPTE0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ds_losIE             :  1 ; /* bits 0:0 */
    ca_uint32_t ds_psync_failIE      :  1 ; /* bits 1:1 */
    ca_uint32_t ds_sfc_failIE        :  1 ; /* bits 2:2 */
    ca_uint32_t xgem_fifo_overflowIE :  1 ; /* bits 3:3 */
    ca_uint32_t short_pkt_errE       :  1 ; /* bits 4:4 */
    ca_uint32_t default_xgem_encrypt_updateE :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t xgem_portid_mismatchIE :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t pkt_length_mismatchIE :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t bip_32_errSatE       :  1 ; /* bits 16:16 */
    ca_uint32_t bip_32_dw1SatE       :  1 ; /* bits 17:17 */
    ca_uint32_t psbd_hec_errSatE     :  1 ; /* bits 18:18 */
    ca_uint32_t psbd_hec_uncorrected_mibSatE :  1 ; /* bits 19:19 */
    ca_uint32_t xgtc_hec_correctedSatE :  1 ; /* bits 20:20 */
    ca_uint32_t xgtc_hec_uncorrected_mibSatE :  1 ; /* bits 21:21 */
    ca_uint32_t bwmap_hec_correctedSatE :  1 ; /* bits 22:22 */
    ca_uint32_t bwmap_hec_uncorrected_mibSatE :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd4               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_INTERRUPTE1                    0xf5504120
#define XGPN_DSFP_INTERRUPTE1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ds_losIE             :  1 ; /* bits 0:0 */
    ca_uint32_t ds_psync_failIE      :  1 ; /* bits 1:1 */
    ca_uint32_t ds_sfc_failIE        :  1 ; /* bits 2:2 */
    ca_uint32_t xgem_fifo_overflowIE :  1 ; /* bits 3:3 */
    ca_uint32_t short_pkt_errE       :  1 ; /* bits 4:4 */
    ca_uint32_t default_xgem_encrypt_updateE :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t xgem_portid_mismatchIE :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t pkt_length_mismatchIE :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               :  5 ;
    ca_uint32_t bip_32_errSatE       :  1 ; /* bits 16:16 */
    ca_uint32_t bip_32_dw1SatE       :  1 ; /* bits 17:17 */
    ca_uint32_t psbd_hec_errSatE     :  1 ; /* bits 18:18 */
    ca_uint32_t psbd_hec_uncorrected_mibSatE :  1 ; /* bits 19:19 */
    ca_uint32_t xgtc_hec_correctedSatE :  1 ; /* bits 20:20 */
    ca_uint32_t xgtc_hec_uncorrected_mibSatE :  1 ; /* bits 21:21 */
    ca_uint32_t bwmap_hec_correctedSatE :  1 ; /* bits 22:22 */
    ca_uint32_t bwmap_hec_uncorrected_mibSatE :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd4               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_key_ctl                   0xf5504124
#define XGPN_DSFP_xgem_key_ctl_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0_idx_vld         :  1 ; /* bits 0:0 */
    ca_uint32_t key1_idx_vld         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_key_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_mc_key_ctl                0xf5504128
#define XGPN_DSFP_xgem_mc_key_ctl_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0_idx_vld         :  1 ; /* bits 0:0 */
    ca_uint32_t key1_idx_vld         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_mc_key_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid0_ctl_xgem               0xf550412c
#define XGPN_DSFP_portid0_ctl_xgem_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid0_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid1_ctl_xgem               0xf5504130
#define XGPN_DSFP_portid1_ctl_xgem_dft           0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid1_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid2_ctl_xgem               0xf5504134
#define XGPN_DSFP_portid2_ctl_xgem_dft           0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid2_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid3_ctl_xgem               0xf5504138
#define XGPN_DSFP_portid3_ctl_xgem_dft           0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid3_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid4_ctl_xgem               0xf550413c
#define XGPN_DSFP_portid4_ctl_xgem_dft           0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid4_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid5_ctl_xgem               0xf5504140
#define XGPN_DSFP_portid5_ctl_xgem_dft           0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid5_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid6_ctl_xgem               0xf5504144
#define XGPN_DSFP_portid6_ctl_xgem_dft           0x00000006

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid6_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid7_ctl_xgem               0xf5504148
#define XGPN_DSFP_portid7_ctl_xgem_dft           0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid7_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid8_ctl_xgem               0xf550414c
#define XGPN_DSFP_portid8_ctl_xgem_dft           0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid8_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid9_ctl_xgem               0xf5504150
#define XGPN_DSFP_portid9_ctl_xgem_dft           0x00000009

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid9_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid10_ctl_xgem              0xf5504154
#define XGPN_DSFP_portid10_ctl_xgem_dft          0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid10_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid11_ctl_xgem              0xf5504158
#define XGPN_DSFP_portid11_ctl_xgem_dft          0x0000000b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid11_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid12_ctl_xgem              0xf550415c
#define XGPN_DSFP_portid12_ctl_xgem_dft          0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid12_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid13_ctl_xgem              0xf5504160
#define XGPN_DSFP_portid13_ctl_xgem_dft          0x0000000d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid13_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid14_ctl_xgem              0xf5504164
#define XGPN_DSFP_portid14_ctl_xgem_dft          0x0000000e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid14_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid15_ctl_xgem              0xf5504168
#define XGPN_DSFP_portid15_ctl_xgem_dft          0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid15_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid16_ctl_xgem              0xf550416c
#define XGPN_DSFP_portid16_ctl_xgem_dft          0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid16_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid17_ctl_xgem              0xf5504170
#define XGPN_DSFP_portid17_ctl_xgem_dft          0x00000011

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid17_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid18_ctl_xgem              0xf5504174
#define XGPN_DSFP_portid18_ctl_xgem_dft          0x00000012

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid18_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid19_ctl_xgem              0xf5504178
#define XGPN_DSFP_portid19_ctl_xgem_dft          0x00000013

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid19_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid20_ctl_xgem              0xf550417c
#define XGPN_DSFP_portid20_ctl_xgem_dft          0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid20_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid21_ctl_xgem              0xf5504180
#define XGPN_DSFP_portid21_ctl_xgem_dft          0x00000015

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid21_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid22_ctl_xgem              0xf5504184
#define XGPN_DSFP_portid22_ctl_xgem_dft          0x00000016

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid22_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid23_ctl_xgem              0xf5504188
#define XGPN_DSFP_portid23_ctl_xgem_dft          0x00000017

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid23_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid24_ctl_xgem              0xf550418c
#define XGPN_DSFP_portid24_ctl_xgem_dft          0x00000018

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid24_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid25_ctl_xgem              0xf5504190
#define XGPN_DSFP_portid25_ctl_xgem_dft          0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid25_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid26_ctl_xgem              0xf5504194
#define XGPN_DSFP_portid26_ctl_xgem_dft          0x0000001a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid26_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid27_ctl_xgem              0xf5504198
#define XGPN_DSFP_portid27_ctl_xgem_dft          0x0000001b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid27_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid28_ctl_xgem              0xf550419c
#define XGPN_DSFP_portid28_ctl_xgem_dft          0x0000001c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid28_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid29_ctl_xgem              0xf55041a0
#define XGPN_DSFP_portid29_ctl_xgem_dft          0x0000001d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid29_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid30_ctl_xgem              0xf55041a4
#define XGPN_DSFP_portid30_ctl_xgem_dft          0x0000001e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid30_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid31_ctl_xgem              0xf55041a8
#define XGPN_DSFP_portid31_ctl_xgem_dft          0x0000001f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid31_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid32_ctl_xgem              0xf55041ac
#define XGPN_DSFP_portid32_ctl_xgem_dft          0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid32_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid33_ctl_xgem              0xf55041b0
#define XGPN_DSFP_portid33_ctl_xgem_dft          0x00000021

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid33_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid34_ctl_xgem              0xf55041b4
#define XGPN_DSFP_portid34_ctl_xgem_dft          0x00000022

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid34_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid35_ctl_xgem              0xf55041b8
#define XGPN_DSFP_portid35_ctl_xgem_dft          0x00000023

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid35_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid36_ctl_xgem              0xf55041bc
#define XGPN_DSFP_portid36_ctl_xgem_dft          0x00000024

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid36_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid37_ctl_xgem              0xf55041c0
#define XGPN_DSFP_portid37_ctl_xgem_dft          0x00000025

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid37_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid38_ctl_xgem              0xf55041c4
#define XGPN_DSFP_portid38_ctl_xgem_dft          0x00000026

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid38_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid39_ctl_xgem              0xf55041c8
#define XGPN_DSFP_portid39_ctl_xgem_dft          0x00000027

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid39_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid40_ctl_xgem              0xf55041cc
#define XGPN_DSFP_portid40_ctl_xgem_dft          0x00000028

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid40_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid41_ctl_xgem              0xf55041d0
#define XGPN_DSFP_portid41_ctl_xgem_dft          0x00000029

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid41_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid42_ctl_xgem              0xf55041d4
#define XGPN_DSFP_portid42_ctl_xgem_dft          0x0000002a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid42_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid43_ctl_xgem              0xf55041d8
#define XGPN_DSFP_portid43_ctl_xgem_dft          0x0000002b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid43_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid44_ctl_xgem              0xf55041dc
#define XGPN_DSFP_portid44_ctl_xgem_dft          0x0000002c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid44_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid45_ctl_xgem              0xf55041e0
#define XGPN_DSFP_portid45_ctl_xgem_dft          0x0000002d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid45_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid46_ctl_xgem              0xf55041e4
#define XGPN_DSFP_portid46_ctl_xgem_dft          0x0000002e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid46_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid47_ctl_xgem              0xf55041e8
#define XGPN_DSFP_portid47_ctl_xgem_dft          0x0000002f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid47_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid48_ctl_xgem              0xf55041ec
#define XGPN_DSFP_portid48_ctl_xgem_dft          0x00000030

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid48_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid49_ctl_xgem              0xf55041f0
#define XGPN_DSFP_portid49_ctl_xgem_dft          0x00000031

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid49_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid50_ctl_xgem              0xf55041f4
#define XGPN_DSFP_portid50_ctl_xgem_dft          0x00000032

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid50_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid51_ctl_xgem              0xf55041f8
#define XGPN_DSFP_portid51_ctl_xgem_dft          0x00000033

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid51_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid52_ctl_xgem              0xf55041fc
#define XGPN_DSFP_portid52_ctl_xgem_dft          0x00000034

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid52_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid53_ctl_xgem              0xf5504200
#define XGPN_DSFP_portid53_ctl_xgem_dft          0x00000035

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid53_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid54_ctl_xgem              0xf5504204
#define XGPN_DSFP_portid54_ctl_xgem_dft          0x00000036

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid54_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid55_ctl_xgem              0xf5504208
#define XGPN_DSFP_portid55_ctl_xgem_dft          0x00000037

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid55_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid56_ctl_xgem              0xf550420c
#define XGPN_DSFP_portid56_ctl_xgem_dft          0x00000038

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid56_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid57_ctl_xgem              0xf5504210
#define XGPN_DSFP_portid57_ctl_xgem_dft          0x00000039

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid57_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid58_ctl_xgem              0xf5504214
#define XGPN_DSFP_portid58_ctl_xgem_dft          0x0000003a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid58_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid59_ctl_xgem              0xf5504218
#define XGPN_DSFP_portid59_ctl_xgem_dft          0x0000003b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid59_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid60_ctl_xgem              0xf550421c
#define XGPN_DSFP_portid60_ctl_xgem_dft          0x0000003c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid60_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid61_ctl_xgem              0xf5504220
#define XGPN_DSFP_portid61_ctl_xgem_dft          0x0000003d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid61_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid62_ctl_xgem              0xf5504224
#define XGPN_DSFP_portid62_ctl_xgem_dft          0x0000003e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid62_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid63_ctl_xgem              0xf5504228
#define XGPN_DSFP_portid63_ctl_xgem_dft          0x0000003f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid63_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid64_ctl_xgem              0xf550422c
#define XGPN_DSFP_portid64_ctl_xgem_dft          0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid64_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid65_ctl_xgem              0xf5504230
#define XGPN_DSFP_portid65_ctl_xgem_dft          0x00000041

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid65_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid66_ctl_xgem              0xf5504234
#define XGPN_DSFP_portid66_ctl_xgem_dft          0x00000042

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid66_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid67_ctl_xgem              0xf5504238
#define XGPN_DSFP_portid67_ctl_xgem_dft          0x00000043

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid67_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid68_ctl_xgem              0xf550423c
#define XGPN_DSFP_portid68_ctl_xgem_dft          0x00000044

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid68_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid69_ctl_xgem              0xf5504240
#define XGPN_DSFP_portid69_ctl_xgem_dft          0x00000045

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid69_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid70_ctl_xgem              0xf5504244
#define XGPN_DSFP_portid70_ctl_xgem_dft          0x00000046

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid70_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid71_ctl_xgem              0xf5504248
#define XGPN_DSFP_portid71_ctl_xgem_dft          0x00000047

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid71_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid72_ctl_xgem              0xf550424c
#define XGPN_DSFP_portid72_ctl_xgem_dft          0x00000048

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid72_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid73_ctl_xgem              0xf5504250
#define XGPN_DSFP_portid73_ctl_xgem_dft          0x00000049

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid73_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid74_ctl_xgem              0xf5504254
#define XGPN_DSFP_portid74_ctl_xgem_dft          0x0000004a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid74_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid75_ctl_xgem              0xf5504258
#define XGPN_DSFP_portid75_ctl_xgem_dft          0x0000004b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid75_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid76_ctl_xgem              0xf550425c
#define XGPN_DSFP_portid76_ctl_xgem_dft          0x0000004c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid76_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid77_ctl_xgem              0xf5504260
#define XGPN_DSFP_portid77_ctl_xgem_dft          0x0000004d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid77_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid78_ctl_xgem              0xf5504264
#define XGPN_DSFP_portid78_ctl_xgem_dft          0x0000004e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid78_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid79_ctl_xgem              0xf5504268
#define XGPN_DSFP_portid79_ctl_xgem_dft          0x0000004f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid79_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid80_ctl_xgem              0xf550426c
#define XGPN_DSFP_portid80_ctl_xgem_dft          0x00000050

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid80_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid81_ctl_xgem              0xf5504270
#define XGPN_DSFP_portid81_ctl_xgem_dft          0x00000051

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid81_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid82_ctl_xgem              0xf5504274
#define XGPN_DSFP_portid82_ctl_xgem_dft          0x00000052

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid82_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid83_ctl_xgem              0xf5504278
#define XGPN_DSFP_portid83_ctl_xgem_dft          0x00000053

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid83_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid84_ctl_xgem              0xf550427c
#define XGPN_DSFP_portid84_ctl_xgem_dft          0x00000054

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid84_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid85_ctl_xgem              0xf5504280
#define XGPN_DSFP_portid85_ctl_xgem_dft          0x00000055

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid85_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid86_ctl_xgem              0xf5504284
#define XGPN_DSFP_portid86_ctl_xgem_dft          0x00000056

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid86_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid87_ctl_xgem              0xf5504288
#define XGPN_DSFP_portid87_ctl_xgem_dft          0x00000057

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid87_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid88_ctl_xgem              0xf550428c
#define XGPN_DSFP_portid88_ctl_xgem_dft          0x00000058

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid88_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid89_ctl_xgem              0xf5504290
#define XGPN_DSFP_portid89_ctl_xgem_dft          0x00000059

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid89_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid90_ctl_xgem              0xf5504294
#define XGPN_DSFP_portid90_ctl_xgem_dft          0x0000005a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid90_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid91_ctl_xgem              0xf5504298
#define XGPN_DSFP_portid91_ctl_xgem_dft          0x0000005b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid91_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid92_ctl_xgem              0xf550429c
#define XGPN_DSFP_portid92_ctl_xgem_dft          0x0000005c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid92_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid93_ctl_xgem              0xf55042a0
#define XGPN_DSFP_portid93_ctl_xgem_dft          0x0000005d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid93_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid94_ctl_xgem              0xf55042a4
#define XGPN_DSFP_portid94_ctl_xgem_dft          0x0000005e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid94_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid95_ctl_xgem              0xf55042a8
#define XGPN_DSFP_portid95_ctl_xgem_dft          0x0000005f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid95_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid96_ctl_xgem              0xf55042ac
#define XGPN_DSFP_portid96_ctl_xgem_dft          0x00000060

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid96_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid97_ctl_xgem              0xf55042b0
#define XGPN_DSFP_portid97_ctl_xgem_dft          0x00000061

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid97_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid98_ctl_xgem              0xf55042b4
#define XGPN_DSFP_portid98_ctl_xgem_dft          0x00000062

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid98_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid99_ctl_xgem              0xf55042b8
#define XGPN_DSFP_portid99_ctl_xgem_dft          0x00000063

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid99_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid100_ctl_xgem             0xf55042bc
#define XGPN_DSFP_portid100_ctl_xgem_dft         0x00000064

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid100_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid101_ctl_xgem             0xf55042c0
#define XGPN_DSFP_portid101_ctl_xgem_dft         0x00000065

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid101_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid102_ctl_xgem             0xf55042c4
#define XGPN_DSFP_portid102_ctl_xgem_dft         0x00000066

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid102_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid103_ctl_xgem             0xf55042c8
#define XGPN_DSFP_portid103_ctl_xgem_dft         0x00000067

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid103_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid104_ctl_xgem             0xf55042cc
#define XGPN_DSFP_portid104_ctl_xgem_dft         0x00000068

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid104_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid105_ctl_xgem             0xf55042d0
#define XGPN_DSFP_portid105_ctl_xgem_dft         0x00000069

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid105_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid106_ctl_xgem             0xf55042d4
#define XGPN_DSFP_portid106_ctl_xgem_dft         0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid106_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid107_ctl_xgem             0xf55042d8
#define XGPN_DSFP_portid107_ctl_xgem_dft         0x0000006b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid107_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid108_ctl_xgem             0xf55042dc
#define XGPN_DSFP_portid108_ctl_xgem_dft         0x0000006c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid108_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid109_ctl_xgem             0xf55042e0
#define XGPN_DSFP_portid109_ctl_xgem_dft         0x0000006d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid109_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid110_ctl_xgem             0xf55042e4
#define XGPN_DSFP_portid110_ctl_xgem_dft         0x0000006e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid110_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid111_ctl_xgem             0xf55042e8
#define XGPN_DSFP_portid111_ctl_xgem_dft         0x0000006f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid111_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid112_ctl_xgem             0xf55042ec
#define XGPN_DSFP_portid112_ctl_xgem_dft         0x00000070

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid112_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid113_ctl_xgem             0xf55042f0
#define XGPN_DSFP_portid113_ctl_xgem_dft         0x00000071

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid113_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid114_ctl_xgem             0xf55042f4
#define XGPN_DSFP_portid114_ctl_xgem_dft         0x00000072

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid114_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid115_ctl_xgem             0xf55042f8
#define XGPN_DSFP_portid115_ctl_xgem_dft         0x00000073

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid115_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid116_ctl_xgem             0xf55042fc
#define XGPN_DSFP_portid116_ctl_xgem_dft         0x00000074

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid116_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid117_ctl_xgem             0xf5504300
#define XGPN_DSFP_portid117_ctl_xgem_dft         0x00000075

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid117_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid118_ctl_xgem             0xf5504304
#define XGPN_DSFP_portid118_ctl_xgem_dft         0x00000076

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid118_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid119_ctl_xgem             0xf5504308
#define XGPN_DSFP_portid119_ctl_xgem_dft         0x00000077

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid119_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid120_ctl_xgem             0xf550430c
#define XGPN_DSFP_portid120_ctl_xgem_dft         0x00000078

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid120_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid121_ctl_xgem             0xf5504310
#define XGPN_DSFP_portid121_ctl_xgem_dft         0x00000079

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid121_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid122_ctl_xgem             0xf5504314
#define XGPN_DSFP_portid122_ctl_xgem_dft         0x0000007a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid122_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid123_ctl_xgem             0xf5504318
#define XGPN_DSFP_portid123_ctl_xgem_dft         0x0000007b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid123_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid124_ctl_xgem             0xf550431c
#define XGPN_DSFP_portid124_ctl_xgem_dft         0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid124_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid125_ctl_xgem             0xf5504320
#define XGPN_DSFP_portid125_ctl_xgem_dft         0x0000007d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid125_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid126_ctl_xgem             0xf5504324
#define XGPN_DSFP_portid126_ctl_xgem_dft         0x0000007e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid126_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid127_ctl_xgem             0xf5504328
#define XGPN_DSFP_portid127_ctl_xgem_dft         0x0000007f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid127_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid128_ctl_xgem             0xf550432c
#define XGPN_DSFP_portid128_ctl_xgem_dft         0x00000080

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid128_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid129_ctl_xgem             0xf5504330
#define XGPN_DSFP_portid129_ctl_xgem_dft         0x00000081

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid129_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid130_ctl_xgem             0xf5504334
#define XGPN_DSFP_portid130_ctl_xgem_dft         0x00000082

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid130_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid131_ctl_xgem             0xf5504338
#define XGPN_DSFP_portid131_ctl_xgem_dft         0x00000083

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid131_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid132_ctl_xgem             0xf550433c
#define XGPN_DSFP_portid132_ctl_xgem_dft         0x00000084

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid132_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid133_ctl_xgem             0xf5504340
#define XGPN_DSFP_portid133_ctl_xgem_dft         0x00000085

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid133_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid134_ctl_xgem             0xf5504344
#define XGPN_DSFP_portid134_ctl_xgem_dft         0x00000086

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid134_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid135_ctl_xgem             0xf5504348
#define XGPN_DSFP_portid135_ctl_xgem_dft         0x00000087

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid135_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid136_ctl_xgem             0xf550434c
#define XGPN_DSFP_portid136_ctl_xgem_dft         0x00000088

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid136_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid137_ctl_xgem             0xf5504350
#define XGPN_DSFP_portid137_ctl_xgem_dft         0x00000089

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid137_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid138_ctl_xgem             0xf5504354
#define XGPN_DSFP_portid138_ctl_xgem_dft         0x0000008a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid138_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid139_ctl_xgem             0xf5504358
#define XGPN_DSFP_portid139_ctl_xgem_dft         0x0000008b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid139_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid140_ctl_xgem             0xf550435c
#define XGPN_DSFP_portid140_ctl_xgem_dft         0x0000008c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid140_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid141_ctl_xgem             0xf5504360
#define XGPN_DSFP_portid141_ctl_xgem_dft         0x0000008d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid141_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid142_ctl_xgem             0xf5504364
#define XGPN_DSFP_portid142_ctl_xgem_dft         0x0000008e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid142_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid143_ctl_xgem             0xf5504368
#define XGPN_DSFP_portid143_ctl_xgem_dft         0x0000008f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid143_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid144_ctl_xgem             0xf550436c
#define XGPN_DSFP_portid144_ctl_xgem_dft         0x00000090

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid144_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid145_ctl_xgem             0xf5504370
#define XGPN_DSFP_portid145_ctl_xgem_dft         0x00000091

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid145_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid146_ctl_xgem             0xf5504374
#define XGPN_DSFP_portid146_ctl_xgem_dft         0x00000092

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid146_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid147_ctl_xgem             0xf5504378
#define XGPN_DSFP_portid147_ctl_xgem_dft         0x00000093

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid147_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid148_ctl_xgem             0xf550437c
#define XGPN_DSFP_portid148_ctl_xgem_dft         0x00000094

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid148_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid149_ctl_xgem             0xf5504380
#define XGPN_DSFP_portid149_ctl_xgem_dft         0x00000095

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid149_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid150_ctl_xgem             0xf5504384
#define XGPN_DSFP_portid150_ctl_xgem_dft         0x00000096

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid150_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid151_ctl_xgem             0xf5504388
#define XGPN_DSFP_portid151_ctl_xgem_dft         0x00000097

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid151_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid152_ctl_xgem             0xf550438c
#define XGPN_DSFP_portid152_ctl_xgem_dft         0x00000098

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid152_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid153_ctl_xgem             0xf5504390
#define XGPN_DSFP_portid153_ctl_xgem_dft         0x00000099

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid153_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid154_ctl_xgem             0xf5504394
#define XGPN_DSFP_portid154_ctl_xgem_dft         0x0000009a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid154_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid155_ctl_xgem             0xf5504398
#define XGPN_DSFP_portid155_ctl_xgem_dft         0x0000009b

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid155_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid156_ctl_xgem             0xf550439c
#define XGPN_DSFP_portid156_ctl_xgem_dft         0x0000009c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid156_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid157_ctl_xgem             0xf55043a0
#define XGPN_DSFP_portid157_ctl_xgem_dft         0x0000009d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid157_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid158_ctl_xgem             0xf55043a4
#define XGPN_DSFP_portid158_ctl_xgem_dft         0x0000009e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid158_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid159_ctl_xgem             0xf55043a8
#define XGPN_DSFP_portid159_ctl_xgem_dft         0x0000009f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid159_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid160_ctl_xgem             0xf55043ac
#define XGPN_DSFP_portid160_ctl_xgem_dft         0x000000a0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid160_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid161_ctl_xgem             0xf55043b0
#define XGPN_DSFP_portid161_ctl_xgem_dft         0x000000a1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid161_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid162_ctl_xgem             0xf55043b4
#define XGPN_DSFP_portid162_ctl_xgem_dft         0x000000a2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid162_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid163_ctl_xgem             0xf55043b8
#define XGPN_DSFP_portid163_ctl_xgem_dft         0x000000a3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid163_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid164_ctl_xgem             0xf55043bc
#define XGPN_DSFP_portid164_ctl_xgem_dft         0x000000a4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid164_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid165_ctl_xgem             0xf55043c0
#define XGPN_DSFP_portid165_ctl_xgem_dft         0x000000a5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid165_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid166_ctl_xgem             0xf55043c4
#define XGPN_DSFP_portid166_ctl_xgem_dft         0x000000a6

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid166_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid167_ctl_xgem             0xf55043c8
#define XGPN_DSFP_portid167_ctl_xgem_dft         0x000000a7

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid167_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid168_ctl_xgem             0xf55043cc
#define XGPN_DSFP_portid168_ctl_xgem_dft         0x000000a8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid168_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid169_ctl_xgem             0xf55043d0
#define XGPN_DSFP_portid169_ctl_xgem_dft         0x000000a9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid169_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid170_ctl_xgem             0xf55043d4
#define XGPN_DSFP_portid170_ctl_xgem_dft         0x000000aa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid170_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid171_ctl_xgem             0xf55043d8
#define XGPN_DSFP_portid171_ctl_xgem_dft         0x000000ab

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid171_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid172_ctl_xgem             0xf55043dc
#define XGPN_DSFP_portid172_ctl_xgem_dft         0x000000ac

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid172_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid173_ctl_xgem             0xf55043e0
#define XGPN_DSFP_portid173_ctl_xgem_dft         0x000000ad

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid173_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid174_ctl_xgem             0xf55043e4
#define XGPN_DSFP_portid174_ctl_xgem_dft         0x000000ae

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid174_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid175_ctl_xgem             0xf55043e8
#define XGPN_DSFP_portid175_ctl_xgem_dft         0x000000af

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid175_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid176_ctl_xgem             0xf55043ec
#define XGPN_DSFP_portid176_ctl_xgem_dft         0x000000b0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid176_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid177_ctl_xgem             0xf55043f0
#define XGPN_DSFP_portid177_ctl_xgem_dft         0x000000b1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid177_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid178_ctl_xgem             0xf55043f4
#define XGPN_DSFP_portid178_ctl_xgem_dft         0x000000b2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid178_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid179_ctl_xgem             0xf55043f8
#define XGPN_DSFP_portid179_ctl_xgem_dft         0x000000b3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid179_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid180_ctl_xgem             0xf55043fc
#define XGPN_DSFP_portid180_ctl_xgem_dft         0x000000b4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid180_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid181_ctl_xgem             0xf5504400
#define XGPN_DSFP_portid181_ctl_xgem_dft         0x000000b5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid181_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid182_ctl_xgem             0xf5504404
#define XGPN_DSFP_portid182_ctl_xgem_dft         0x000000b6

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid182_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid183_ctl_xgem             0xf5504408
#define XGPN_DSFP_portid183_ctl_xgem_dft         0x000000b7

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid183_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid184_ctl_xgem             0xf550440c
#define XGPN_DSFP_portid184_ctl_xgem_dft         0x000000b8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid184_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid185_ctl_xgem             0xf5504410
#define XGPN_DSFP_portid185_ctl_xgem_dft         0x000000b9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid185_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid186_ctl_xgem             0xf5504414
#define XGPN_DSFP_portid186_ctl_xgem_dft         0x000000ba

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid186_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid187_ctl_xgem             0xf5504418
#define XGPN_DSFP_portid187_ctl_xgem_dft         0x000000bb

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid187_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid188_ctl_xgem             0xf550441c
#define XGPN_DSFP_portid188_ctl_xgem_dft         0x000000bc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid188_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid189_ctl_xgem             0xf5504420
#define XGPN_DSFP_portid189_ctl_xgem_dft         0x000000bd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid189_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid190_ctl_xgem             0xf5504424
#define XGPN_DSFP_portid190_ctl_xgem_dft         0x000000be

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid190_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid191_ctl_xgem             0xf5504428
#define XGPN_DSFP_portid191_ctl_xgem_dft         0x000000bf

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid191_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid192_ctl_xgem             0xf550442c
#define XGPN_DSFP_portid192_ctl_xgem_dft         0x000000c0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid192_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid193_ctl_xgem             0xf5504430
#define XGPN_DSFP_portid193_ctl_xgem_dft         0x000000c1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid193_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid194_ctl_xgem             0xf5504434
#define XGPN_DSFP_portid194_ctl_xgem_dft         0x000000c2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid194_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid195_ctl_xgem             0xf5504438
#define XGPN_DSFP_portid195_ctl_xgem_dft         0x000000c3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid195_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid196_ctl_xgem             0xf550443c
#define XGPN_DSFP_portid196_ctl_xgem_dft         0x000000c4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid196_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid197_ctl_xgem             0xf5504440
#define XGPN_DSFP_portid197_ctl_xgem_dft         0x000000c5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid197_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid198_ctl_xgem             0xf5504444
#define XGPN_DSFP_portid198_ctl_xgem_dft         0x000000c6

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid198_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid199_ctl_xgem             0xf5504448
#define XGPN_DSFP_portid199_ctl_xgem_dft         0x000000c7

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid199_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid200_ctl_xgem             0xf550444c
#define XGPN_DSFP_portid200_ctl_xgem_dft         0x000000c8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid200_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid201_ctl_xgem             0xf5504450
#define XGPN_DSFP_portid201_ctl_xgem_dft         0x000000c9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid201_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid202_ctl_xgem             0xf5504454
#define XGPN_DSFP_portid202_ctl_xgem_dft         0x000000ca

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid202_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid203_ctl_xgem             0xf5504458
#define XGPN_DSFP_portid203_ctl_xgem_dft         0x000000cb

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid203_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid204_ctl_xgem             0xf550445c
#define XGPN_DSFP_portid204_ctl_xgem_dft         0x000000cc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid204_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid205_ctl_xgem             0xf5504460
#define XGPN_DSFP_portid205_ctl_xgem_dft         0x000000cd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid205_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid206_ctl_xgem             0xf5504464
#define XGPN_DSFP_portid206_ctl_xgem_dft         0x000000ce

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid206_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid207_ctl_xgem             0xf5504468
#define XGPN_DSFP_portid207_ctl_xgem_dft         0x000000cf

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid207_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid208_ctl_xgem             0xf550446c
#define XGPN_DSFP_portid208_ctl_xgem_dft         0x000000d0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid208_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid209_ctl_xgem             0xf5504470
#define XGPN_DSFP_portid209_ctl_xgem_dft         0x000000d1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid209_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid210_ctl_xgem             0xf5504474
#define XGPN_DSFP_portid210_ctl_xgem_dft         0x000000d2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid210_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid211_ctl_xgem             0xf5504478
#define XGPN_DSFP_portid211_ctl_xgem_dft         0x000000d3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid211_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid212_ctl_xgem             0xf550447c
#define XGPN_DSFP_portid212_ctl_xgem_dft         0x000000d4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid212_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid213_ctl_xgem             0xf5504480
#define XGPN_DSFP_portid213_ctl_xgem_dft         0x000000d5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid213_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid214_ctl_xgem             0xf5504484
#define XGPN_DSFP_portid214_ctl_xgem_dft         0x000000d6

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid214_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid215_ctl_xgem             0xf5504488
#define XGPN_DSFP_portid215_ctl_xgem_dft         0x000000d7

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid215_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid216_ctl_xgem             0xf550448c
#define XGPN_DSFP_portid216_ctl_xgem_dft         0x000000d8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid216_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid217_ctl_xgem             0xf5504490
#define XGPN_DSFP_portid217_ctl_xgem_dft         0x000000d9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid217_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid218_ctl_xgem             0xf5504494
#define XGPN_DSFP_portid218_ctl_xgem_dft         0x000000da

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid218_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid219_ctl_xgem             0xf5504498
#define XGPN_DSFP_portid219_ctl_xgem_dft         0x000000db

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid219_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid220_ctl_xgem             0xf550449c
#define XGPN_DSFP_portid220_ctl_xgem_dft         0x000000dc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid220_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid221_ctl_xgem             0xf55044a0
#define XGPN_DSFP_portid221_ctl_xgem_dft         0x000000dd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid221_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid222_ctl_xgem             0xf55044a4
#define XGPN_DSFP_portid222_ctl_xgem_dft         0x000000de

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid222_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid223_ctl_xgem             0xf55044a8
#define XGPN_DSFP_portid223_ctl_xgem_dft         0x000000df

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid223_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid224_ctl_xgem             0xf55044ac
#define XGPN_DSFP_portid224_ctl_xgem_dft         0x000000e0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid224_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid225_ctl_xgem             0xf55044b0
#define XGPN_DSFP_portid225_ctl_xgem_dft         0x000000e1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid225_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid226_ctl_xgem             0xf55044b4
#define XGPN_DSFP_portid226_ctl_xgem_dft         0x000000e2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid226_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid227_ctl_xgem             0xf55044b8
#define XGPN_DSFP_portid227_ctl_xgem_dft         0x000000e3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid227_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid228_ctl_xgem             0xf55044bc
#define XGPN_DSFP_portid228_ctl_xgem_dft         0x000000e4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid228_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid229_ctl_xgem             0xf55044c0
#define XGPN_DSFP_portid229_ctl_xgem_dft         0x000000e5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid229_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid230_ctl_xgem             0xf55044c4
#define XGPN_DSFP_portid230_ctl_xgem_dft         0x000000e6

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid230_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid231_ctl_xgem             0xf55044c8
#define XGPN_DSFP_portid231_ctl_xgem_dft         0x000000e7

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid231_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid232_ctl_xgem             0xf55044cc
#define XGPN_DSFP_portid232_ctl_xgem_dft         0x000000e8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid232_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid233_ctl_xgem             0xf55044d0
#define XGPN_DSFP_portid233_ctl_xgem_dft         0x000000e9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid233_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid234_ctl_xgem             0xf55044d4
#define XGPN_DSFP_portid234_ctl_xgem_dft         0x000000ea

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid234_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid235_ctl_xgem             0xf55044d8
#define XGPN_DSFP_portid235_ctl_xgem_dft         0x000000eb

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid235_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid236_ctl_xgem             0xf55044dc
#define XGPN_DSFP_portid236_ctl_xgem_dft         0x000000ec

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid236_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid237_ctl_xgem             0xf55044e0
#define XGPN_DSFP_portid237_ctl_xgem_dft         0x000000ed

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid237_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid238_ctl_xgem             0xf55044e4
#define XGPN_DSFP_portid238_ctl_xgem_dft         0x000000ee

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid238_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid239_ctl_xgem             0xf55044e8
#define XGPN_DSFP_portid239_ctl_xgem_dft         0x000000ef

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid239_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid240_ctl_xgem             0xf55044ec
#define XGPN_DSFP_portid240_ctl_xgem_dft         0x000000f0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid240_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid241_ctl_xgem             0xf55044f0
#define XGPN_DSFP_portid241_ctl_xgem_dft         0x000000f1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid241_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid242_ctl_xgem             0xf55044f4
#define XGPN_DSFP_portid242_ctl_xgem_dft         0x000000f2

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid242_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid243_ctl_xgem             0xf55044f8
#define XGPN_DSFP_portid243_ctl_xgem_dft         0x000000f3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid243_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid244_ctl_xgem             0xf55044fc
#define XGPN_DSFP_portid244_ctl_xgem_dft         0x000000f4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid244_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid245_ctl_xgem             0xf5504500
#define XGPN_DSFP_portid245_ctl_xgem_dft         0x000000f5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid245_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid246_ctl_xgem             0xf5504504
#define XGPN_DSFP_portid246_ctl_xgem_dft         0x000000f6

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid246_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid247_ctl_xgem             0xf5504508
#define XGPN_DSFP_portid247_ctl_xgem_dft         0x000000f7

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid247_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid248_ctl_xgem             0xf550450c
#define XGPN_DSFP_portid248_ctl_xgem_dft         0x000000f8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid248_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid249_ctl_xgem             0xf5504510
#define XGPN_DSFP_portid249_ctl_xgem_dft         0x000000f9

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid249_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid250_ctl_xgem             0xf5504514
#define XGPN_DSFP_portid250_ctl_xgem_dft         0x000000fa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid250_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid251_ctl_xgem             0xf5504518
#define XGPN_DSFP_portid251_ctl_xgem_dft         0x000000fb

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid251_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid252_ctl_xgem             0xf550451c
#define XGPN_DSFP_portid252_ctl_xgem_dft         0x000000fc

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid252_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid253_ctl_xgem             0xf5504520
#define XGPN_DSFP_portid253_ctl_xgem_dft         0x000000fd

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid253_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid254_ctl_xgem             0xf5504524
#define XGPN_DSFP_portid254_ctl_xgem_dft         0x000000fe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid254_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_portid255_ctl_xgem             0xf5504528
#define XGPN_DSFP_portid255_ctl_xgem_dft         0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t portid               : 16 ; /* bits 15:0 */
    ca_uint32_t portid_mc            :  1 ; /* bits 16:16 */
    ca_uint32_t portid_vld           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_portid255_ctl_xgem_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_ds_sync                        0xf550452c
#define XGPN_DSFP_ds_sync_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t state                :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t default_xgem_keyidx  :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_ds_sync_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_superframe1                    0xf5504530
#define XGPN_DSFP_superframe1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 19 ; /* bits 18:0 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_superframe1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_superframe0                    0xf5504534
#define XGPN_DSFP_superframe0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_superframe0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_OC_body1                       0xf5504538
#define XGPN_DSFP_OC_body1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TOL1                 :  9 ; /* bits 8:0 */
    ca_uint32_t C_flag1              :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t link_type1           :  2 ; /* bits 12:11 */
    ca_uint32_t P_flag1              :  1 ; /* bits 13:13 */
    ca_uint32_t DS_FEC_flag1         :  1 ; /* bits 14:14 */
    ca_uint32_t ODN_class1           :  3 ; /* bits 17:15 */
    ca_uint32_t RE_flag1             :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_OC_body1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_OC_body0                       0xf550453c
#define XGPN_DSFP_OC_body0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pon_id0              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_OC_body0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_bip_32_dw1                     0xf5504540
#define XGPN_DSFP_bip_32_dw1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_bip_32_dw1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_bip_32_dw0                     0xf5504544
#define XGPN_DSFP_bip_32_dw0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_bip_32_dw0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_bip_32_err                     0xf5504548
#define XGPN_DSFP_bip_32_err_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_bip_32_err_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_psbd_hec_err                   0xf550454c
#define XGPN_DSFP_psbd_hec_err_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_psbd_hec_err_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_sfc_hec_corrected              0xf5504550
#define XGPN_DSFP_sfc_hec_corrected_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_sfc_hec_corrected_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_sfc_hec_uncorrected_mib        0xf5504554
#define XGPN_DSFP_sfc_hec_uncorrected_mib_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_sfc_hec_uncorrected_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_ponid_hec_corrected            0xf5504558
#define XGPN_DSFP_ponid_hec_corrected_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_ponid_hec_corrected_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_ponid_hec_uncorrected_mib      0xf550455c
#define XGPN_DSFP_ponid_hec_uncorrected_mib_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_ponid_hec_uncorrected_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_psbd_hec_uncorrected_mib       0xf5504560
#define XGPN_DSFP_psbd_hec_uncorrected_mib_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_psbd_hec_uncorrected_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_bwmap_hec_corrected            0xf5504564
#define XGPN_DSFP_bwmap_hec_corrected_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_bwmap_hec_corrected_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_bwmap_hec_uncorrected_mib      0xf5504568
#define XGPN_DSFP_bwmap_hec_uncorrected_mib_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_bwmap_hec_uncorrected_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgtc_err                       0xf550456c
#define XGPN_DSFP_xgtc_err_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hd                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgtc_err_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgtc_frame                     0xf5504570
#define XGPN_DSFP_xgtc_frame_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgtc_frame_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgtc_hec_corrected             0xf5504574
#define XGPN_DSFP_xgtc_hec_corrected_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgtc_hec_corrected_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgtc_hec_uncorrected_mib       0xf5504578
#define XGPN_DSFP_xgtc_hec_uncorrected_mib_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgtc_hec_uncorrected_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_err0                      0xf550457c
#define XGPN_DSFP_xgem_err0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hd                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_err0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_err1                      0xf5504580
#define XGPN_DSFP_xgem_err1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hd                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_err1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_frame                     0xf5504584
#define XGPN_DSFP_xgem_frame_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_frame_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_hec_corrected             0xf5504588
#define XGPN_DSFP_xgem_hec_corrected_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_hec_corrected_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_hec_uncorrected_mib       0xf550458c
#define XGPN_DSFP_xgem_hec_uncorrected_mib_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_hec_uncorrected_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_nolf_mib                  0xf5504590
#define XGPN_DSFP_xgem_nolf_mib_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_nolf_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_los_word_mib              0xf5504594
#define XGPN_DSFP_xgem_los_word_mib_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_los_word_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_xgem_err_key_mib               0xf5504598
#define XGPN_DSFP_xgem_err_key_mib_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_xgem_err_key_mib_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_xgem_frame               0xf550459c
#define XGPN_DSFP_rxmac_xgem_frame_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_xgem_frame_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_omci_frame               0xf55045a0
#define XGPN_DSFP_rxmac_omci_frame_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_omci_frame_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_pkt_frame                0xf55045a4
#define XGPN_DSFP_rxmac_pkt_frame_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_pkt_frame_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_pkt_crc_err              0xf55045a8
#define XGPN_DSFP_rxmac_pkt_crc_err_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_pkt_crc_err_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_rxmac_xgem_frame_status        0xf55045ac
#define XGPN_DSFP_rxmac_xgem_frame_status_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fg_xgem_err          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_rxmac_xgem_frame_status_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_async_ff_status                0xf55045b0
#define XGPN_DSFP_async_ff_status_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t overflow             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_async_ff_status_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_MIB_RAM_STATUS_REG             0xf55045b4
#define XGPN_DSFP_MIB_RAM_STATUS_REG_dft         0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_initdone         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_MIB_RAM_STATUS_REG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_PORTID_XGEM_MIB_ACCESS         0xf55045b8
#define XGPN_DSFP_PORTID_XGEM_MIB_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_PORTID_XGEM_MIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_PORTID_XGEM_MIB_DATA3          0xf55045bc
#define XGPN_DSFP_PORTID_XGEM_MIB_DATA3_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t byte_cnt             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_PORTID_XGEM_MIB_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_PORTID_XGEM_MIB_DATA2          0xf55045c0
#define XGPN_DSFP_PORTID_XGEM_MIB_DATA2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t byte_cnt             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_PORTID_XGEM_MIB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_PORTID_XGEM_MIB_DATA1          0xf55045c4
#define XGPN_DSFP_PORTID_XGEM_MIB_DATA1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gem_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_PORTID_XGEM_MIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_DSFP_PORTID_XGEM_MIB_DATA0          0xf55045c8
#define XGPN_DSFP_PORTID_XGEM_MIB_DATA0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_DSFP_PORTID_XGEM_MIB_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* dsfp */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_DSFP_hec_ctl_t                      hec_ctl;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_DSFP_sync_ctl_t                     sync_ctl;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_DSFP_xgtc_ctl_t                     xgtc_ctl;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_DSFP_xgem_ctl_t                     xgem_ctl;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_DSFP_rxmac_ctl_t                    rxmac_ctl;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_DSFP_rxmac_ctl1_t                   rxmac_ctl1;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_DSFP_INTERRUPT_t                    INTERRUPT;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_DSFP_INTERRUPTE0_t                  INTERRUPTE0;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_DSFP_INTERRUPTE1_t                  INTERRUPTE1;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_DSFP_xgem_key_ctl_t                 xgem_key_ctl;                  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_DSFP_xgem_mc_key_ctl_t              xgem_mc_key_ctl;               /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_DSFP_portid0_ctl_xgem_t             portid0_ctl_xgem;              /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_DSFP_portid1_ctl_xgem_t             portid1_ctl_xgem;              /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_DSFP_portid2_ctl_xgem_t             portid2_ctl_xgem;              /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_DSFP_portid3_ctl_xgem_t             portid3_ctl_xgem;              /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_DSFP_portid4_ctl_xgem_t             portid4_ctl_xgem;              /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_DSFP_portid5_ctl_xgem_t             portid5_ctl_xgem;              /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_DSFP_portid6_ctl_xgem_t             portid6_ctl_xgem;              /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_DSFP_portid7_ctl_xgem_t             portid7_ctl_xgem;              /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  XGPN_DSFP_portid8_ctl_xgem_t             portid8_ctl_xgem;              /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  XGPN_DSFP_portid9_ctl_xgem_t             portid9_ctl_xgem;              /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  XGPN_DSFP_portid10_ctl_xgem_t            portid10_ctl_xgem;             /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  XGPN_DSFP_portid11_ctl_xgem_t            portid11_ctl_xgem;             /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  XGPN_DSFP_portid12_ctl_xgem_t            portid12_ctl_xgem;             /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  XGPN_DSFP_portid13_ctl_xgem_t            portid13_ctl_xgem;             /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  XGPN_DSFP_portid14_ctl_xgem_t            portid14_ctl_xgem;             /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  XGPN_DSFP_portid15_ctl_xgem_t            portid15_ctl_xgem;             /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  XGPN_DSFP_portid16_ctl_xgem_t            portid16_ctl_xgem;             /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  XGPN_DSFP_portid17_ctl_xgem_t            portid17_ctl_xgem;             /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  XGPN_DSFP_portid18_ctl_xgem_t            portid18_ctl_xgem;             /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  XGPN_DSFP_portid19_ctl_xgem_t            portid19_ctl_xgem;             /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  XGPN_DSFP_portid20_ctl_xgem_t            portid20_ctl_xgem;             /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  XGPN_DSFP_portid21_ctl_xgem_t            portid21_ctl_xgem;             /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  XGPN_DSFP_portid22_ctl_xgem_t            portid22_ctl_xgem;             /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  XGPN_DSFP_portid23_ctl_xgem_t            portid23_ctl_xgem;             /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  XGPN_DSFP_portid24_ctl_xgem_t            portid24_ctl_xgem;             /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  XGPN_DSFP_portid25_ctl_xgem_t            portid25_ctl_xgem;             /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  XGPN_DSFP_portid26_ctl_xgem_t            portid26_ctl_xgem;             /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  XGPN_DSFP_portid27_ctl_xgem_t            portid27_ctl_xgem;             /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  XGPN_DSFP_portid28_ctl_xgem_t            portid28_ctl_xgem;             /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  XGPN_DSFP_portid29_ctl_xgem_t            portid29_ctl_xgem;             /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  XGPN_DSFP_portid30_ctl_xgem_t            portid30_ctl_xgem;             /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  XGPN_DSFP_portid31_ctl_xgem_t            portid31_ctl_xgem;             /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  XGPN_DSFP_portid32_ctl_xgem_t            portid32_ctl_xgem;             /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  XGPN_DSFP_portid33_ctl_xgem_t            portid33_ctl_xgem;             /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  XGPN_DSFP_portid34_ctl_xgem_t            portid34_ctl_xgem;             /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  XGPN_DSFP_portid35_ctl_xgem_t            portid35_ctl_xgem;             /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  XGPN_DSFP_portid36_ctl_xgem_t            portid36_ctl_xgem;             /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  XGPN_DSFP_portid37_ctl_xgem_t            portid37_ctl_xgem;             /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  XGPN_DSFP_portid38_ctl_xgem_t            portid38_ctl_xgem;             /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  XGPN_DSFP_portid39_ctl_xgem_t            portid39_ctl_xgem;             /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  XGPN_DSFP_portid40_ctl_xgem_t            portid40_ctl_xgem;             /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  XGPN_DSFP_portid41_ctl_xgem_t            portid41_ctl_xgem;             /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  XGPN_DSFP_portid42_ctl_xgem_t            portid42_ctl_xgem;             /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  XGPN_DSFP_portid43_ctl_xgem_t            portid43_ctl_xgem;             /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  XGPN_DSFP_portid44_ctl_xgem_t            portid44_ctl_xgem;             /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  XGPN_DSFP_portid45_ctl_xgem_t            portid45_ctl_xgem;             /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  XGPN_DSFP_portid46_ctl_xgem_t            portid46_ctl_xgem;             /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  XGPN_DSFP_portid47_ctl_xgem_t            portid47_ctl_xgem;             /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  XGPN_DSFP_portid48_ctl_xgem_t            portid48_ctl_xgem;             /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  XGPN_DSFP_portid49_ctl_xgem_t            portid49_ctl_xgem;             /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  XGPN_DSFP_portid50_ctl_xgem_t            portid50_ctl_xgem;             /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  XGPN_DSFP_portid51_ctl_xgem_t            portid51_ctl_xgem;             /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  XGPN_DSFP_portid52_ctl_xgem_t            portid52_ctl_xgem;             /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  XGPN_DSFP_portid53_ctl_xgem_t            portid53_ctl_xgem;             /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  XGPN_DSFP_portid54_ctl_xgem_t            portid54_ctl_xgem;             /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  XGPN_DSFP_portid55_ctl_xgem_t            portid55_ctl_xgem;             /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  XGPN_DSFP_portid56_ctl_xgem_t            portid56_ctl_xgem;             /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  XGPN_DSFP_portid57_ctl_xgem_t            portid57_ctl_xgem;             /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  XGPN_DSFP_portid58_ctl_xgem_t            portid58_ctl_xgem;             /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  XGPN_DSFP_portid59_ctl_xgem_t            portid59_ctl_xgem;             /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  XGPN_DSFP_portid60_ctl_xgem_t            portid60_ctl_xgem;             /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  XGPN_DSFP_portid61_ctl_xgem_t            portid61_ctl_xgem;             /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  XGPN_DSFP_portid62_ctl_xgem_t            portid62_ctl_xgem;             /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  XGPN_DSFP_portid63_ctl_xgem_t            portid63_ctl_xgem;             /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  XGPN_DSFP_portid64_ctl_xgem_t            portid64_ctl_xgem;             /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  XGPN_DSFP_portid65_ctl_xgem_t            portid65_ctl_xgem;             /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  XGPN_DSFP_portid66_ctl_xgem_t            portid66_ctl_xgem;             /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  XGPN_DSFP_portid67_ctl_xgem_t            portid67_ctl_xgem;             /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  XGPN_DSFP_portid68_ctl_xgem_t            portid68_ctl_xgem;             /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  XGPN_DSFP_portid69_ctl_xgem_t            portid69_ctl_xgem;             /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  XGPN_DSFP_portid70_ctl_xgem_t            portid70_ctl_xgem;             /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  XGPN_DSFP_portid71_ctl_xgem_t            portid71_ctl_xgem;             /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  XGPN_DSFP_portid72_ctl_xgem_t            portid72_ctl_xgem;             /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  XGPN_DSFP_portid73_ctl_xgem_t            portid73_ctl_xgem;             /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  XGPN_DSFP_portid74_ctl_xgem_t            portid74_ctl_xgem;             /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  XGPN_DSFP_portid75_ctl_xgem_t            portid75_ctl_xgem;             /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  XGPN_DSFP_portid76_ctl_xgem_t            portid76_ctl_xgem;             /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  XGPN_DSFP_portid77_ctl_xgem_t            portid77_ctl_xgem;             /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  XGPN_DSFP_portid78_ctl_xgem_t            portid78_ctl_xgem;             /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  XGPN_DSFP_portid79_ctl_xgem_t            portid79_ctl_xgem;             /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  XGPN_DSFP_portid80_ctl_xgem_t            portid80_ctl_xgem;             /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  XGPN_DSFP_portid81_ctl_xgem_t            portid81_ctl_xgem;             /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  XGPN_DSFP_portid82_ctl_xgem_t            portid82_ctl_xgem;             /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  XGPN_DSFP_portid83_ctl_xgem_t            portid83_ctl_xgem;             /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  XGPN_DSFP_portid84_ctl_xgem_t            portid84_ctl_xgem;             /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  XGPN_DSFP_portid85_ctl_xgem_t            portid85_ctl_xgem;             /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  XGPN_DSFP_portid86_ctl_xgem_t            portid86_ctl_xgem;             /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  XGPN_DSFP_portid87_ctl_xgem_t            portid87_ctl_xgem;             /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  XGPN_DSFP_portid88_ctl_xgem_t            portid88_ctl_xgem;             /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  XGPN_DSFP_portid89_ctl_xgem_t            portid89_ctl_xgem;             /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  XGPN_DSFP_portid90_ctl_xgem_t            portid90_ctl_xgem;             /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  XGPN_DSFP_portid91_ctl_xgem_t            portid91_ctl_xgem;             /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  XGPN_DSFP_portid92_ctl_xgem_t            portid92_ctl_xgem;             /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  XGPN_DSFP_portid93_ctl_xgem_t            portid93_ctl_xgem;             /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  XGPN_DSFP_portid94_ctl_xgem_t            portid94_ctl_xgem;             /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  XGPN_DSFP_portid95_ctl_xgem_t            portid95_ctl_xgem;             /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  XGPN_DSFP_portid96_ctl_xgem_t            portid96_ctl_xgem;             /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  XGPN_DSFP_portid97_ctl_xgem_t            portid97_ctl_xgem;             /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  XGPN_DSFP_portid98_ctl_xgem_t            portid98_ctl_xgem;             /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  XGPN_DSFP_portid99_ctl_xgem_t            portid99_ctl_xgem;             /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  XGPN_DSFP_portid100_ctl_xgem_t           portid100_ctl_xgem;            /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  XGPN_DSFP_portid101_ctl_xgem_t           portid101_ctl_xgem;            /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  XGPN_DSFP_portid102_ctl_xgem_t           portid102_ctl_xgem;            /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  XGPN_DSFP_portid103_ctl_xgem_t           portid103_ctl_xgem;            /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  XGPN_DSFP_portid104_ctl_xgem_t           portid104_ctl_xgem;            /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd116[3];
  XGPN_DSFP_portid105_ctl_xgem_t           portid105_ctl_xgem;            /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd117[3];
  XGPN_DSFP_portid106_ctl_xgem_t           portid106_ctl_xgem;            /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd118[3];
  XGPN_DSFP_portid107_ctl_xgem_t           portid107_ctl_xgem;            /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd119[3];
  XGPN_DSFP_portid108_ctl_xgem_t           portid108_ctl_xgem;            /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd120[3];
  XGPN_DSFP_portid109_ctl_xgem_t           portid109_ctl_xgem;            /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd121[3];
  XGPN_DSFP_portid110_ctl_xgem_t           portid110_ctl_xgem;            /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd122[3];
  XGPN_DSFP_portid111_ctl_xgem_t           portid111_ctl_xgem;            /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd123[3];
  XGPN_DSFP_portid112_ctl_xgem_t           portid112_ctl_xgem;            /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd124[3];
  XGPN_DSFP_portid113_ctl_xgem_t           portid113_ctl_xgem;            /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd125[3];
  XGPN_DSFP_portid114_ctl_xgem_t           portid114_ctl_xgem;            /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd126[3];
  XGPN_DSFP_portid115_ctl_xgem_t           portid115_ctl_xgem;            /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd127[3];
  XGPN_DSFP_portid116_ctl_xgem_t           portid116_ctl_xgem;            /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd128[3];
  XGPN_DSFP_portid117_ctl_xgem_t           portid117_ctl_xgem;            /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd129[3];
  XGPN_DSFP_portid118_ctl_xgem_t           portid118_ctl_xgem;            /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd130[3];
  XGPN_DSFP_portid119_ctl_xgem_t           portid119_ctl_xgem;            /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd131[3];
  XGPN_DSFP_portid120_ctl_xgem_t           portid120_ctl_xgem;            /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd132[3];
  XGPN_DSFP_portid121_ctl_xgem_t           portid121_ctl_xgem;            /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd133[3];
  XGPN_DSFP_portid122_ctl_xgem_t           portid122_ctl_xgem;            /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd134[3];
  XGPN_DSFP_portid123_ctl_xgem_t           portid123_ctl_xgem;            /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd135[3];
  XGPN_DSFP_portid124_ctl_xgem_t           portid124_ctl_xgem;            /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd136[3];
  XGPN_DSFP_portid125_ctl_xgem_t           portid125_ctl_xgem;            /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd137[3];
  XGPN_DSFP_portid126_ctl_xgem_t           portid126_ctl_xgem;            /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd138[3];
  XGPN_DSFP_portid127_ctl_xgem_t           portid127_ctl_xgem;            /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd139[3];
  XGPN_DSFP_portid128_ctl_xgem_t           portid128_ctl_xgem;            /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd140[3];
  XGPN_DSFP_portid129_ctl_xgem_t           portid129_ctl_xgem;            /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd141[3];
  XGPN_DSFP_portid130_ctl_xgem_t           portid130_ctl_xgem;            /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd142[3];
  XGPN_DSFP_portid131_ctl_xgem_t           portid131_ctl_xgem;            /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd143[3];
  XGPN_DSFP_portid132_ctl_xgem_t           portid132_ctl_xgem;            /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd144[3];
  XGPN_DSFP_portid133_ctl_xgem_t           portid133_ctl_xgem;            /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd145[3];
  XGPN_DSFP_portid134_ctl_xgem_t           portid134_ctl_xgem;            /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd146[3];
  XGPN_DSFP_portid135_ctl_xgem_t           portid135_ctl_xgem;            /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd147[3];
  XGPN_DSFP_portid136_ctl_xgem_t           portid136_ctl_xgem;            /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd148[3];
  XGPN_DSFP_portid137_ctl_xgem_t           portid137_ctl_xgem;            /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd149[3];
  XGPN_DSFP_portid138_ctl_xgem_t           portid138_ctl_xgem;            /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd150[3];
  XGPN_DSFP_portid139_ctl_xgem_t           portid139_ctl_xgem;            /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd151[3];
  XGPN_DSFP_portid140_ctl_xgem_t           portid140_ctl_xgem;            /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd152[3];
  XGPN_DSFP_portid141_ctl_xgem_t           portid141_ctl_xgem;            /* addr: 0x00000260 */
  ca_uint32_t                              rsrvd153[3];
  XGPN_DSFP_portid142_ctl_xgem_t           portid142_ctl_xgem;            /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd154[3];
  XGPN_DSFP_portid143_ctl_xgem_t           portid143_ctl_xgem;            /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd155[3];
  XGPN_DSFP_portid144_ctl_xgem_t           portid144_ctl_xgem;            /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd156[3];
  XGPN_DSFP_portid145_ctl_xgem_t           portid145_ctl_xgem;            /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd157[3];
  XGPN_DSFP_portid146_ctl_xgem_t           portid146_ctl_xgem;            /* addr: 0x00000274 */
  ca_uint32_t                              rsrvd158[3];
  XGPN_DSFP_portid147_ctl_xgem_t           portid147_ctl_xgem;            /* addr: 0x00000278 */
  ca_uint32_t                              rsrvd159[3];
  XGPN_DSFP_portid148_ctl_xgem_t           portid148_ctl_xgem;            /* addr: 0x0000027c */
  ca_uint32_t                              rsrvd160[3];
  XGPN_DSFP_portid149_ctl_xgem_t           portid149_ctl_xgem;            /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd161[3];
  XGPN_DSFP_portid150_ctl_xgem_t           portid150_ctl_xgem;            /* addr: 0x00000284 */
  ca_uint32_t                              rsrvd162[3];
  XGPN_DSFP_portid151_ctl_xgem_t           portid151_ctl_xgem;            /* addr: 0x00000288 */
  ca_uint32_t                              rsrvd163[3];
  XGPN_DSFP_portid152_ctl_xgem_t           portid152_ctl_xgem;            /* addr: 0x0000028c */
  ca_uint32_t                              rsrvd164[3];
  XGPN_DSFP_portid153_ctl_xgem_t           portid153_ctl_xgem;            /* addr: 0x00000290 */
  ca_uint32_t                              rsrvd165[3];
  XGPN_DSFP_portid154_ctl_xgem_t           portid154_ctl_xgem;            /* addr: 0x00000294 */
  ca_uint32_t                              rsrvd166[3];
  XGPN_DSFP_portid155_ctl_xgem_t           portid155_ctl_xgem;            /* addr: 0x00000298 */
  ca_uint32_t                              rsrvd167[3];
  XGPN_DSFP_portid156_ctl_xgem_t           portid156_ctl_xgem;            /* addr: 0x0000029c */
  ca_uint32_t                              rsrvd168[3];
  XGPN_DSFP_portid157_ctl_xgem_t           portid157_ctl_xgem;            /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd169[3];
  XGPN_DSFP_portid158_ctl_xgem_t           portid158_ctl_xgem;            /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd170[3];
  XGPN_DSFP_portid159_ctl_xgem_t           portid159_ctl_xgem;            /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd171[3];
  XGPN_DSFP_portid160_ctl_xgem_t           portid160_ctl_xgem;            /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd172[3];
  XGPN_DSFP_portid161_ctl_xgem_t           portid161_ctl_xgem;            /* addr: 0x000002b0 */
  ca_uint32_t                              rsrvd173[3];
  XGPN_DSFP_portid162_ctl_xgem_t           portid162_ctl_xgem;            /* addr: 0x000002b4 */
  ca_uint32_t                              rsrvd174[3];
  XGPN_DSFP_portid163_ctl_xgem_t           portid163_ctl_xgem;            /* addr: 0x000002b8 */
  ca_uint32_t                              rsrvd175[3];
  XGPN_DSFP_portid164_ctl_xgem_t           portid164_ctl_xgem;            /* addr: 0x000002bc */
  ca_uint32_t                              rsrvd176[3];
  XGPN_DSFP_portid165_ctl_xgem_t           portid165_ctl_xgem;            /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd177[3];
  XGPN_DSFP_portid166_ctl_xgem_t           portid166_ctl_xgem;            /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd178[3];
  XGPN_DSFP_portid167_ctl_xgem_t           portid167_ctl_xgem;            /* addr: 0x000002c8 */
  ca_uint32_t                              rsrvd179[3];
  XGPN_DSFP_portid168_ctl_xgem_t           portid168_ctl_xgem;            /* addr: 0x000002cc */
  ca_uint32_t                              rsrvd180[3];
  XGPN_DSFP_portid169_ctl_xgem_t           portid169_ctl_xgem;            /* addr: 0x000002d0 */
  ca_uint32_t                              rsrvd181[3];
  XGPN_DSFP_portid170_ctl_xgem_t           portid170_ctl_xgem;            /* addr: 0x000002d4 */
  ca_uint32_t                              rsrvd182[3];
  XGPN_DSFP_portid171_ctl_xgem_t           portid171_ctl_xgem;            /* addr: 0x000002d8 */
  ca_uint32_t                              rsrvd183[3];
  XGPN_DSFP_portid172_ctl_xgem_t           portid172_ctl_xgem;            /* addr: 0x000002dc */
  ca_uint32_t                              rsrvd184[3];
  XGPN_DSFP_portid173_ctl_xgem_t           portid173_ctl_xgem;            /* addr: 0x000002e0 */
  ca_uint32_t                              rsrvd185[3];
  XGPN_DSFP_portid174_ctl_xgem_t           portid174_ctl_xgem;            /* addr: 0x000002e4 */
  ca_uint32_t                              rsrvd186[3];
  XGPN_DSFP_portid175_ctl_xgem_t           portid175_ctl_xgem;            /* addr: 0x000002e8 */
  ca_uint32_t                              rsrvd187[3];
  XGPN_DSFP_portid176_ctl_xgem_t           portid176_ctl_xgem;            /* addr: 0x000002ec */
  ca_uint32_t                              rsrvd188[3];
  XGPN_DSFP_portid177_ctl_xgem_t           portid177_ctl_xgem;            /* addr: 0x000002f0 */
  ca_uint32_t                              rsrvd189[3];
  XGPN_DSFP_portid178_ctl_xgem_t           portid178_ctl_xgem;            /* addr: 0x000002f4 */
  ca_uint32_t                              rsrvd190[3];
  XGPN_DSFP_portid179_ctl_xgem_t           portid179_ctl_xgem;            /* addr: 0x000002f8 */
  ca_uint32_t                              rsrvd191[3];
  XGPN_DSFP_portid180_ctl_xgem_t           portid180_ctl_xgem;            /* addr: 0x000002fc */
  ca_uint32_t                              rsrvd192[3];
  XGPN_DSFP_portid181_ctl_xgem_t           portid181_ctl_xgem;            /* addr: 0x00000300 */
  ca_uint32_t                              rsrvd193[3];
  XGPN_DSFP_portid182_ctl_xgem_t           portid182_ctl_xgem;            /* addr: 0x00000304 */
  ca_uint32_t                              rsrvd194[3];
  XGPN_DSFP_portid183_ctl_xgem_t           portid183_ctl_xgem;            /* addr: 0x00000308 */
  ca_uint32_t                              rsrvd195[3];
  XGPN_DSFP_portid184_ctl_xgem_t           portid184_ctl_xgem;            /* addr: 0x0000030c */
  ca_uint32_t                              rsrvd196[3];
  XGPN_DSFP_portid185_ctl_xgem_t           portid185_ctl_xgem;            /* addr: 0x00000310 */
  ca_uint32_t                              rsrvd197[3];
  XGPN_DSFP_portid186_ctl_xgem_t           portid186_ctl_xgem;            /* addr: 0x00000314 */
  ca_uint32_t                              rsrvd198[3];
  XGPN_DSFP_portid187_ctl_xgem_t           portid187_ctl_xgem;            /* addr: 0x00000318 */
  ca_uint32_t                              rsrvd199[3];
  XGPN_DSFP_portid188_ctl_xgem_t           portid188_ctl_xgem;            /* addr: 0x0000031c */
  ca_uint32_t                              rsrvd200[3];
  XGPN_DSFP_portid189_ctl_xgem_t           portid189_ctl_xgem;            /* addr: 0x00000320 */
  ca_uint32_t                              rsrvd201[3];
  XGPN_DSFP_portid190_ctl_xgem_t           portid190_ctl_xgem;            /* addr: 0x00000324 */
  ca_uint32_t                              rsrvd202[3];
  XGPN_DSFP_portid191_ctl_xgem_t           portid191_ctl_xgem;            /* addr: 0x00000328 */
  ca_uint32_t                              rsrvd203[3];
  XGPN_DSFP_portid192_ctl_xgem_t           portid192_ctl_xgem;            /* addr: 0x0000032c */
  ca_uint32_t                              rsrvd204[3];
  XGPN_DSFP_portid193_ctl_xgem_t           portid193_ctl_xgem;            /* addr: 0x00000330 */
  ca_uint32_t                              rsrvd205[3];
  XGPN_DSFP_portid194_ctl_xgem_t           portid194_ctl_xgem;            /* addr: 0x00000334 */
  ca_uint32_t                              rsrvd206[3];
  XGPN_DSFP_portid195_ctl_xgem_t           portid195_ctl_xgem;            /* addr: 0x00000338 */
  ca_uint32_t                              rsrvd207[3];
  XGPN_DSFP_portid196_ctl_xgem_t           portid196_ctl_xgem;            /* addr: 0x0000033c */
  ca_uint32_t                              rsrvd208[3];
  XGPN_DSFP_portid197_ctl_xgem_t           portid197_ctl_xgem;            /* addr: 0x00000340 */
  ca_uint32_t                              rsrvd209[3];
  XGPN_DSFP_portid198_ctl_xgem_t           portid198_ctl_xgem;            /* addr: 0x00000344 */
  ca_uint32_t                              rsrvd210[3];
  XGPN_DSFP_portid199_ctl_xgem_t           portid199_ctl_xgem;            /* addr: 0x00000348 */
  ca_uint32_t                              rsrvd211[3];
  XGPN_DSFP_portid200_ctl_xgem_t           portid200_ctl_xgem;            /* addr: 0x0000034c */
  ca_uint32_t                              rsrvd212[3];
  XGPN_DSFP_portid201_ctl_xgem_t           portid201_ctl_xgem;            /* addr: 0x00000350 */
  ca_uint32_t                              rsrvd213[3];
  XGPN_DSFP_portid202_ctl_xgem_t           portid202_ctl_xgem;            /* addr: 0x00000354 */
  ca_uint32_t                              rsrvd214[3];
  XGPN_DSFP_portid203_ctl_xgem_t           portid203_ctl_xgem;            /* addr: 0x00000358 */
  ca_uint32_t                              rsrvd215[3];
  XGPN_DSFP_portid204_ctl_xgem_t           portid204_ctl_xgem;            /* addr: 0x0000035c */
  ca_uint32_t                              rsrvd216[3];
  XGPN_DSFP_portid205_ctl_xgem_t           portid205_ctl_xgem;            /* addr: 0x00000360 */
  ca_uint32_t                              rsrvd217[3];
  XGPN_DSFP_portid206_ctl_xgem_t           portid206_ctl_xgem;            /* addr: 0x00000364 */
  ca_uint32_t                              rsrvd218[3];
  XGPN_DSFP_portid207_ctl_xgem_t           portid207_ctl_xgem;            /* addr: 0x00000368 */
  ca_uint32_t                              rsrvd219[3];
  XGPN_DSFP_portid208_ctl_xgem_t           portid208_ctl_xgem;            /* addr: 0x0000036c */
  ca_uint32_t                              rsrvd220[3];
  XGPN_DSFP_portid209_ctl_xgem_t           portid209_ctl_xgem;            /* addr: 0x00000370 */
  ca_uint32_t                              rsrvd221[3];
  XGPN_DSFP_portid210_ctl_xgem_t           portid210_ctl_xgem;            /* addr: 0x00000374 */
  ca_uint32_t                              rsrvd222[3];
  XGPN_DSFP_portid211_ctl_xgem_t           portid211_ctl_xgem;            /* addr: 0x00000378 */
  ca_uint32_t                              rsrvd223[3];
  XGPN_DSFP_portid212_ctl_xgem_t           portid212_ctl_xgem;            /* addr: 0x0000037c */
  ca_uint32_t                              rsrvd224[3];
  XGPN_DSFP_portid213_ctl_xgem_t           portid213_ctl_xgem;            /* addr: 0x00000380 */
  ca_uint32_t                              rsrvd225[3];
  XGPN_DSFP_portid214_ctl_xgem_t           portid214_ctl_xgem;            /* addr: 0x00000384 */
  ca_uint32_t                              rsrvd226[3];
  XGPN_DSFP_portid215_ctl_xgem_t           portid215_ctl_xgem;            /* addr: 0x00000388 */
  ca_uint32_t                              rsrvd227[3];
  XGPN_DSFP_portid216_ctl_xgem_t           portid216_ctl_xgem;            /* addr: 0x0000038c */
  ca_uint32_t                              rsrvd228[3];
  XGPN_DSFP_portid217_ctl_xgem_t           portid217_ctl_xgem;            /* addr: 0x00000390 */
  ca_uint32_t                              rsrvd229[3];
  XGPN_DSFP_portid218_ctl_xgem_t           portid218_ctl_xgem;            /* addr: 0x00000394 */
  ca_uint32_t                              rsrvd230[3];
  XGPN_DSFP_portid219_ctl_xgem_t           portid219_ctl_xgem;            /* addr: 0x00000398 */
  ca_uint32_t                              rsrvd231[3];
  XGPN_DSFP_portid220_ctl_xgem_t           portid220_ctl_xgem;            /* addr: 0x0000039c */
  ca_uint32_t                              rsrvd232[3];
  XGPN_DSFP_portid221_ctl_xgem_t           portid221_ctl_xgem;            /* addr: 0x000003a0 */
  ca_uint32_t                              rsrvd233[3];
  XGPN_DSFP_portid222_ctl_xgem_t           portid222_ctl_xgem;            /* addr: 0x000003a4 */
  ca_uint32_t                              rsrvd234[3];
  XGPN_DSFP_portid223_ctl_xgem_t           portid223_ctl_xgem;            /* addr: 0x000003a8 */
  ca_uint32_t                              rsrvd235[3];
  XGPN_DSFP_portid224_ctl_xgem_t           portid224_ctl_xgem;            /* addr: 0x000003ac */
  ca_uint32_t                              rsrvd236[3];
  XGPN_DSFP_portid225_ctl_xgem_t           portid225_ctl_xgem;            /* addr: 0x000003b0 */
  ca_uint32_t                              rsrvd237[3];
  XGPN_DSFP_portid226_ctl_xgem_t           portid226_ctl_xgem;            /* addr: 0x000003b4 */
  ca_uint32_t                              rsrvd238[3];
  XGPN_DSFP_portid227_ctl_xgem_t           portid227_ctl_xgem;            /* addr: 0x000003b8 */
  ca_uint32_t                              rsrvd239[3];
  XGPN_DSFP_portid228_ctl_xgem_t           portid228_ctl_xgem;            /* addr: 0x000003bc */
  ca_uint32_t                              rsrvd240[3];
  XGPN_DSFP_portid229_ctl_xgem_t           portid229_ctl_xgem;            /* addr: 0x000003c0 */
  ca_uint32_t                              rsrvd241[3];
  XGPN_DSFP_portid230_ctl_xgem_t           portid230_ctl_xgem;            /* addr: 0x000003c4 */
  ca_uint32_t                              rsrvd242[3];
  XGPN_DSFP_portid231_ctl_xgem_t           portid231_ctl_xgem;            /* addr: 0x000003c8 */
  ca_uint32_t                              rsrvd243[3];
  XGPN_DSFP_portid232_ctl_xgem_t           portid232_ctl_xgem;            /* addr: 0x000003cc */
  ca_uint32_t                              rsrvd244[3];
  XGPN_DSFP_portid233_ctl_xgem_t           portid233_ctl_xgem;            /* addr: 0x000003d0 */
  ca_uint32_t                              rsrvd245[3];
  XGPN_DSFP_portid234_ctl_xgem_t           portid234_ctl_xgem;            /* addr: 0x000003d4 */
  ca_uint32_t                              rsrvd246[3];
  XGPN_DSFP_portid235_ctl_xgem_t           portid235_ctl_xgem;            /* addr: 0x000003d8 */
  ca_uint32_t                              rsrvd247[3];
  XGPN_DSFP_portid236_ctl_xgem_t           portid236_ctl_xgem;            /* addr: 0x000003dc */
  ca_uint32_t                              rsrvd248[3];
  XGPN_DSFP_portid237_ctl_xgem_t           portid237_ctl_xgem;            /* addr: 0x000003e0 */
  ca_uint32_t                              rsrvd249[3];
  XGPN_DSFP_portid238_ctl_xgem_t           portid238_ctl_xgem;            /* addr: 0x000003e4 */
  ca_uint32_t                              rsrvd250[3];
  XGPN_DSFP_portid239_ctl_xgem_t           portid239_ctl_xgem;            /* addr: 0x000003e8 */
  ca_uint32_t                              rsrvd251[3];
  XGPN_DSFP_portid240_ctl_xgem_t           portid240_ctl_xgem;            /* addr: 0x000003ec */
  ca_uint32_t                              rsrvd252[3];
  XGPN_DSFP_portid241_ctl_xgem_t           portid241_ctl_xgem;            /* addr: 0x000003f0 */
  ca_uint32_t                              rsrvd253[3];
  XGPN_DSFP_portid242_ctl_xgem_t           portid242_ctl_xgem;            /* addr: 0x000003f4 */
  ca_uint32_t                              rsrvd254[3];
  XGPN_DSFP_portid243_ctl_xgem_t           portid243_ctl_xgem;            /* addr: 0x000003f8 */
  ca_uint32_t                              rsrvd255[3];
  XGPN_DSFP_portid244_ctl_xgem_t           portid244_ctl_xgem;            /* addr: 0x000003fc */
  ca_uint32_t                              rsrvd256[3];
  XGPN_DSFP_portid245_ctl_xgem_t           portid245_ctl_xgem;            /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd257[3];
  XGPN_DSFP_portid246_ctl_xgem_t           portid246_ctl_xgem;            /* addr: 0x00000404 */
  ca_uint32_t                              rsrvd258[3];
  XGPN_DSFP_portid247_ctl_xgem_t           portid247_ctl_xgem;            /* addr: 0x00000408 */
  ca_uint32_t                              rsrvd259[3];
  XGPN_DSFP_portid248_ctl_xgem_t           portid248_ctl_xgem;            /* addr: 0x0000040c */
  ca_uint32_t                              rsrvd260[3];
  XGPN_DSFP_portid249_ctl_xgem_t           portid249_ctl_xgem;            /* addr: 0x00000410 */
  ca_uint32_t                              rsrvd261[3];
  XGPN_DSFP_portid250_ctl_xgem_t           portid250_ctl_xgem;            /* addr: 0x00000414 */
  ca_uint32_t                              rsrvd262[3];
  XGPN_DSFP_portid251_ctl_xgem_t           portid251_ctl_xgem;            /* addr: 0x00000418 */
  ca_uint32_t                              rsrvd263[3];
  XGPN_DSFP_portid252_ctl_xgem_t           portid252_ctl_xgem;            /* addr: 0x0000041c */
  ca_uint32_t                              rsrvd264[3];
  XGPN_DSFP_portid253_ctl_xgem_t           portid253_ctl_xgem;            /* addr: 0x00000420 */
  ca_uint32_t                              rsrvd265[3];
  XGPN_DSFP_portid254_ctl_xgem_t           portid254_ctl_xgem;            /* addr: 0x00000424 */
  ca_uint32_t                              rsrvd266[3];
  XGPN_DSFP_portid255_ctl_xgem_t           portid255_ctl_xgem;            /* addr: 0x00000428 */
  ca_uint32_t                              rsrvd267[3];
  XGPN_DSFP_ds_sync_t                      ds_sync;                       /* addr: 0x0000042c */
  ca_uint32_t                              rsrvd268[3];
  XGPN_DSFP_superframe1_t                  superframe1;                   /* addr: 0x00000430 */
  ca_uint32_t                              rsrvd269[3];
  XGPN_DSFP_superframe0_t                  superframe0;                   /* addr: 0x00000434 */
  ca_uint32_t                              rsrvd270[3];
  XGPN_DSFP_OC_body1_t                     OC_body1;                      /* addr: 0x00000438 */
  ca_uint32_t                              rsrvd271[3];
  XGPN_DSFP_OC_body0_t                     OC_body0;                      /* addr: 0x0000043c */
  ca_uint32_t                              rsrvd272[3];
  XGPN_DSFP_bip_32_dw1_t                   bip_32_dw1;                    /* addr: 0x00000440 */
  ca_uint32_t                              rsrvd273[3];
  XGPN_DSFP_bip_32_dw0_t                   bip_32_dw0;                    /* addr: 0x00000444 */
  ca_uint32_t                              rsrvd274[3];
  XGPN_DSFP_bip_32_err_t                   bip_32_err;                    /* addr: 0x00000448 */
  ca_uint32_t                              rsrvd275[3];
  XGPN_DSFP_psbd_hec_err_t                 psbd_hec_err;                  /* addr: 0x0000044c */
  ca_uint32_t                              rsrvd276[3];
  XGPN_DSFP_sfc_hec_corrected_t            sfc_hec_corrected;             /* addr: 0x00000450 */
  ca_uint32_t                              rsrvd277[3];
  XGPN_DSFP_sfc_hec_uncorrected_mib_t      sfc_hec_uncorrected_mib;       /* addr: 0x00000454 */
  ca_uint32_t                              rsrvd278[3];
  XGPN_DSFP_ponid_hec_corrected_t          ponid_hec_corrected;           /* addr: 0x00000458 */
  ca_uint32_t                              rsrvd279[3];
  XGPN_DSFP_ponid_hec_uncorrected_mib_t    ponid_hec_uncorrected_mib;     /* addr: 0x0000045c */
  ca_uint32_t                              rsrvd280[3];
  XGPN_DSFP_psbd_hec_uncorrected_mib_t     psbd_hec_uncorrected_mib;      /* addr: 0x00000460 */
  ca_uint32_t                              rsrvd281[3];
  XGPN_DSFP_bwmap_hec_corrected_t          bwmap_hec_corrected;           /* addr: 0x00000464 */
  ca_uint32_t                              rsrvd282[3];
  XGPN_DSFP_bwmap_hec_uncorrected_mib_t    bwmap_hec_uncorrected_mib;     /* addr: 0x00000468 */
  ca_uint32_t                              rsrvd283[3];
  XGPN_DSFP_xgtc_err_t                     xgtc_err;                      /* addr: 0x0000046c */
  ca_uint32_t                              rsrvd284[3];
  XGPN_DSFP_xgtc_frame_t                   xgtc_frame;                    /* addr: 0x00000470 */
  ca_uint32_t                              rsrvd285[3];
  XGPN_DSFP_xgtc_hec_corrected_t           xgtc_hec_corrected;            /* addr: 0x00000474 */
  ca_uint32_t                              rsrvd286[3];
  XGPN_DSFP_xgtc_hec_uncorrected_mib_t     xgtc_hec_uncorrected_mib;      /* addr: 0x00000478 */
  ca_uint32_t                              rsrvd287[3];
  XGPN_DSFP_xgem_err0_t                    xgem_err0;                     /* addr: 0x0000047c */
  ca_uint32_t                              rsrvd288[3];
  XGPN_DSFP_xgem_err1_t                    xgem_err1;                     /* addr: 0x00000480 */
  ca_uint32_t                              rsrvd289[3];
  XGPN_DSFP_xgem_frame_t                   xgem_frame;                    /* addr: 0x00000484 */
  ca_uint32_t                              rsrvd290[3];
  XGPN_DSFP_xgem_hec_corrected_t           xgem_hec_corrected;            /* addr: 0x00000488 */
  ca_uint32_t                              rsrvd291[3];
  XGPN_DSFP_xgem_hec_uncorrected_mib_t     xgem_hec_uncorrected_mib;      /* addr: 0x0000048c */
  ca_uint32_t                              rsrvd292[3];
  XGPN_DSFP_xgem_nolf_mib_t                xgem_nolf_mib;                 /* addr: 0x00000490 */
  ca_uint32_t                              rsrvd293[3];
  XGPN_DSFP_xgem_los_word_mib_t            xgem_los_word_mib;             /* addr: 0x00000494 */
  ca_uint32_t                              rsrvd294[3];
  XGPN_DSFP_xgem_err_key_mib_t             xgem_err_key_mib;              /* addr: 0x00000498 */
  ca_uint32_t                              rsrvd295[3];
  XGPN_DSFP_rxmac_xgem_frame_t             rxmac_xgem_frame;              /* addr: 0x0000049c */
  ca_uint32_t                              rsrvd296[3];
  XGPN_DSFP_rxmac_omci_frame_t             rxmac_omci_frame;              /* addr: 0x000004a0 */
  ca_uint32_t                              rsrvd297[3];
  XGPN_DSFP_rxmac_pkt_frame_t              rxmac_pkt_frame;               /* addr: 0x000004a4 */
  ca_uint32_t                              rsrvd298[3];
  XGPN_DSFP_rxmac_pkt_crc_err_t            rxmac_pkt_crc_err;             /* addr: 0x000004a8 */
  ca_uint32_t                              rsrvd299[3];
  XGPN_DSFP_rxmac_xgem_frame_status_t      rxmac_xgem_frame_status;       /* addr: 0x000004ac */
  ca_uint32_t                              rsrvd300[3];
  XGPN_DSFP_async_ff_status_t              async_ff_status;               /* addr: 0x000004b0 */
  ca_uint32_t                              rsrvd301[3];
  XGPN_DSFP_MIB_RAM_STATUS_REG_t           MIB_RAM_STATUS_REG;            /* addr: 0x000004b4 */
  ca_uint32_t                              rsrvd302[3];
  XGPN_DSFP_PORTID_XGEM_MIB_ACCESS_t       PORTID_XGEM_MIB_ACCESS;        /* addr: 0x000004b8 */
  ca_uint32_t                              rsrvd303[3];
  XGPN_DSFP_PORTID_XGEM_MIB_DATA3_t        PORTID_XGEM_MIB_DATA3;         /* addr: 0x000004bc */
  ca_uint32_t                              rsrvd304[3];
  XGPN_DSFP_PORTID_XGEM_MIB_DATA2_t        PORTID_XGEM_MIB_DATA2;         /* addr: 0x000004c0 */
  ca_uint32_t                              rsrvd305[3];
  XGPN_DSFP_PORTID_XGEM_MIB_DATA1_t        PORTID_XGEM_MIB_DATA1;         /* addr: 0x000004c4 */
  ca_uint32_t                              rsrvd306[3];
  XGPN_DSFP_PORTID_XGEM_MIB_DATA0_t        PORTID_XGEM_MIB_DATA0;         /* addr: 0x000004c8 */
} APB7_XGPN_DSFP_t;
#endif /* !__ASSEMBLER__ */


/*
 * usbg
 */

#define XGPN_USBG_GBL_CTRL                       0xf5504600
#define XGPN_USBG_GBL_CTRL_dft                   0x000000c3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgtc_en              :  1 ; /* bits 0:0 */
    ca_uint32_t scramble_en          :  1 ; /* bits 1:1 */
    ca_uint32_t laser_on             :  1 ; /* bits 2:2 */
    ca_uint32_t laser_polarity       :  1 ; /* bits 3:3 */
    ca_uint32_t swap_tx_bus          :  2 ; /* bits 5:4 */
    ca_uint32_t pf_align_mode        :  1 ; /* bits 6:6 */
    ca_uint32_t aes_encrypt_en       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t laser_on_align       :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_GBL_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGTC_CTRL                      0xf5504604
#define XGPN_USBG_XGTC_CTRL_dft                  0x00000017

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t xgem_en              :  1 ; /* bits 0:0 */
    ca_uint32_t dbru_en              :  1 ; /* bits 1:1 */
    ca_uint32_t ploam_en             :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t O7_plmp_off          :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGTC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_GUARD_TM_CFG                   0xf5504608
#define XGPN_USBG_GUARD_TM_CFG_dft               0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t time                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_GUARD_TM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_IDLE_FM_CFG                    0xf550460c
#define XGPN_USBG_IDLE_FM_CFG_dft                0x80000040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t size                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 17 ;
    ca_uint32_t mode                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_IDLE_FM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGTC_HD_IND_CFG                0xf5504610
#define XGPN_USBG_XGTC_HD_IND_CFG_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dg                   :  1 ; /* bits 0:0 */
    ca_uint32_t rsv                  :  7 ; /* bits 7:1 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGTC_HD_IND_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_AES_UNI_KEY_IDX_CTRL           0xf5504614
#define XGPN_USBG_AES_UNI_KEY_IDX_CTRL_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key_idx              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_AES_UNI_KEY_IDX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGEM_PID_TBL_ACCESS            0xf5504618
#define XGPN_USBG_XGEM_PID_TBL_ACCESS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGEM_PID_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGEM_PID_TBL_DATA              0xf550461c
#define XGPN_USBG_XGEM_PID_TBL_DATA_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t XGEM_PortID          : 16 ; /* bits 15:0 */
    ca_uint32_t port_en              :  1 ; /* bits 16:16 */
    ca_uint32_t aes_mode             :  1 ; /* bits 17:17 */
    ca_uint32_t MC_flag              :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd1               : 13 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGEM_PID_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGEM_BUF_CFG                   0xf5504620
#define XGPN_USBG_XGEM_BUF_CFG_dft               0x03e00040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lo_threshold         :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t hi_threshold         : 10 ; /* bits 25:16 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGEM_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_DBRU_CFG                       0xf5504624
#define XGPN_USBG_DBRU_CFG_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 30 ;
    ca_uint32_t tcon_residue_en      :  1 ; /* bits 30:30 */
    ca_uint32_t mode                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_DBRU_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PLOAMU_QU_CFG                  0xf5504628
#define XGPN_USBG_PLOAMU_QU_CFG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t no_empty             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 30 ;
    ca_uint32_t mode                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PLOAMU_QU_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_FRAG_FF_DUMP_CFG               0xf550462c
#define XGPN_USBG_FRAG_FF_DUMP_CFG_dft           0x8002ab70

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dump_time            : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t dump_en              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_FRAG_FF_DUMP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGTC_ERR_DUMP_CFG              0xf5504630
#define XGPN_USBG_XGTC_ERR_DUMP_CFG_dft          0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dly_time             :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGTC_ERR_DUMP_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_DBRU_RPT_MAX_CFG               0xf5504634
#define XGPN_USBG_DBRU_RPT_MAX_CFG_dft           0x001ffffe

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t val                  : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_DBRU_RPT_MAX_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_DBRU_BUFOCC_TBL_ACCESS         0xf5504638
#define XGPN_USBG_DBRU_BUFOCC_TBL_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t Select               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 13 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_DBRU_BUFOCC_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_DBRU_BUFOCC_TBL_DATA           0xf550463c
#define XGPN_USBG_DBRU_BUFOCC_TBL_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BufOcc               : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_DBRU_BUFOCC_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_INTERRUPT                      0xf5504640
#define XGPN_USBG_INTERRUPT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buf_empty_pop_intI   :  1 ; /* bits 0:0 */
    ca_uint32_t st_chk_err_intI      :  1 ; /* bits 1:1 */
    ca_uint32_t xgem_ff_of_intI      :  1 ; /* bits 2:2 */
    ca_uint32_t xgem_ff_uf_intI      :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t xgem_port_disable_intI :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t xgem_mc_port_intI    :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_INTERRUPTE0                    0xf5504644
#define XGPN_USBG_INTERRUPTE0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buf_empty_pop_intIE  :  1 ; /* bits 0:0 */
    ca_uint32_t st_chk_err_intIE     :  1 ; /* bits 1:1 */
    ca_uint32_t xgem_ff_of_intIE     :  1 ; /* bits 2:2 */
    ca_uint32_t xgem_ff_uf_intIE     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t xgem_port_disable_intIE :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t xgem_mc_port_intIE   :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_INTERRUPTE1                    0xf5504648
#define XGPN_USBG_INTERRUPTE1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buf_empty_pop_intIE  :  1 ; /* bits 0:0 */
    ca_uint32_t st_chk_err_intIE     :  1 ; /* bits 1:1 */
    ca_uint32_t xgem_ff_of_intIE     :  1 ; /* bits 2:2 */
    ca_uint32_t xgem_ff_uf_intIE     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t xgem_port_disable_intIE :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t xgem_mc_port_intIE   :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd3               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_INIT_STS                       0xf550464c
#define XGPN_USBG_INIT_STS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t init_done            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_INIT_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF0_INFOR_STS            0xf5504650
#define XGPN_USBG_BURST_PF0_INFOR_STS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 :  8 ; /* bits 7:0 */
    ca_uint32_t plen                 :  4 ; /* bits 11:8 */
    ca_uint32_t dlen                 :  4 ; /* bits 15:12 */
    ca_uint32_t oh_len               : 10 ; /* bits 25:16 */
    ca_uint32_t fecu                 :  1 ; /* bits 26:26 */
    ca_uint32_t ver                  :  4 ; /* bits 30:27 */
    ca_uint32_t vld                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF0_INFOR_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF0_DP_H32_STS           0xf5504654
#define XGPN_USBG_BURST_PF0_DP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF0_DP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF0_DP_L32_STS           0xf5504658
#define XGPN_USBG_BURST_PF0_DP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF0_DP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF0_PP_H32_STS           0xf550465c
#define XGPN_USBG_BURST_PF0_PP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF0_PP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF0_PP_L32_STS           0xf5504660
#define XGPN_USBG_BURST_PF0_PP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF0_PP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF1_INFOR_STS            0xf5504664
#define XGPN_USBG_BURST_PF1_INFOR_STS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 :  8 ; /* bits 7:0 */
    ca_uint32_t plen                 :  4 ; /* bits 11:8 */
    ca_uint32_t dlen                 :  4 ; /* bits 15:12 */
    ca_uint32_t oh_len               : 10 ; /* bits 25:16 */
    ca_uint32_t fecu                 :  1 ; /* bits 26:26 */
    ca_uint32_t ver                  :  4 ; /* bits 30:27 */
    ca_uint32_t vld                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF1_INFOR_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF1_DP_H32_STS           0xf5504668
#define XGPN_USBG_BURST_PF1_DP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF1_DP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF1_DP_L32_STS           0xf550466c
#define XGPN_USBG_BURST_PF1_DP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF1_DP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF1_PP_H32_STS           0xf5504670
#define XGPN_USBG_BURST_PF1_PP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF1_PP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF1_PP_L32_STS           0xf5504674
#define XGPN_USBG_BURST_PF1_PP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF1_PP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF2_INFOR_STS            0xf5504678
#define XGPN_USBG_BURST_PF2_INFOR_STS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 :  8 ; /* bits 7:0 */
    ca_uint32_t plen                 :  4 ; /* bits 11:8 */
    ca_uint32_t dlen                 :  4 ; /* bits 15:12 */
    ca_uint32_t oh_len               : 10 ; /* bits 25:16 */
    ca_uint32_t fecu                 :  1 ; /* bits 26:26 */
    ca_uint32_t ver                  :  4 ; /* bits 30:27 */
    ca_uint32_t vld                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF2_INFOR_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF2_DP_H32_STS           0xf550467c
#define XGPN_USBG_BURST_PF2_DP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF2_DP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF2_DP_L32_STS           0xf5504680
#define XGPN_USBG_BURST_PF2_DP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF2_DP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF2_PP_H32_STS           0xf5504684
#define XGPN_USBG_BURST_PF2_PP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF2_PP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF2_PP_L32_STS           0xf5504688
#define XGPN_USBG_BURST_PF2_PP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF2_PP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF3_INFOR_STS            0xf550468c
#define XGPN_USBG_BURST_PF3_INFOR_STS_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 :  8 ; /* bits 7:0 */
    ca_uint32_t plen                 :  4 ; /* bits 11:8 */
    ca_uint32_t dlen                 :  4 ; /* bits 15:12 */
    ca_uint32_t oh_len               : 10 ; /* bits 25:16 */
    ca_uint32_t fecu                 :  1 ; /* bits 26:26 */
    ca_uint32_t ver                  :  4 ; /* bits 30:27 */
    ca_uint32_t vld                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF3_INFOR_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF3_DP_H32_STS           0xf5504690
#define XGPN_USBG_BURST_PF3_DP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF3_DP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF3_DP_L32_STS           0xf5504694
#define XGPN_USBG_BURST_PF3_DP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF3_DP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF3_PP_H32_STS           0xf5504698
#define XGPN_USBG_BURST_PF3_PP_H32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF3_PP_H32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BURST_PF3_PP_L32_STS           0xf550469c
#define XGPN_USBG_BURST_PF3_PP_L32_STS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pp                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BURST_PF3_PP_L32_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_BP_VER_OL_STS                  0xf55046a0
#define XGPN_USBG_BP_VER_OL_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ind0                 :  1 ; /* bits 0:0 */
    ca_uint32_t ind1                 :  1 ; /* bits 1:1 */
    ca_uint32_t ind2                 :  1 ; /* bits 2:2 */
    ca_uint32_t ind3                 :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_BP_VER_OL_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_MIB_RAM_STATUS_REG             0xf55046a4
#define XGPN_USBG_MIB_RAM_STATUS_REG_dft         0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_initdone         :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_MIB_RAM_STATUS_REG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_MIB_CTL                        0xf55046a8
#define XGPN_USBG_MIB_CTL_dft                    0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ram_clr_en           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_MIB_CTL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PORTID_XGEM_MIB_ACCESS         0xf55046ac
#define XGPN_USBG_PORTID_XGEM_MIB_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PORTID_XGEM_MIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PORTID_XGEM_MIB_DATA3          0xf55046b0
#define XGPN_USBG_PORTID_XGEM_MIB_DATA3_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t byte_cnt             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PORTID_XGEM_MIB_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PORTID_XGEM_MIB_DATA2          0xf55046b4
#define XGPN_USBG_PORTID_XGEM_MIB_DATA2_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t byte_cnt             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PORTID_XGEM_MIB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PORTID_XGEM_MIB_DATA1          0xf55046b8
#define XGPN_USBG_PORTID_XGEM_MIB_DATA1_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gem_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PORTID_XGEM_MIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PORTID_XGEM_MIB_DATA0          0xf55046bc
#define XGPN_USBG_PORTID_XGEM_MIB_DATA0_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_cnt              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PORTID_XGEM_MIB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGEM_LF0                       0xf55046c0
#define XGPN_USBG_XGEM_LF0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGEM_LF0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGTC_FM_CNT                    0xf55046c4
#define XGPN_USBG_XGTC_FM_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGTC_FM_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_XGTC_FEC_BLK_CNT               0xf55046c8
#define XGPN_USBG_XGTC_FEC_BLK_CNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t blk                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_XGTC_FEC_BLK_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_PLM_FM_CNT                     0xf55046cc
#define XGPN_USBG_PLM_FM_CNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_PLM_FM_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_IDLE_XGEM_FRAME_CNT            0xf55046d0
#define XGPN_USBG_IDLE_XGEM_FRAME_CNT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_IDLE_XGEM_FRAME_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_IDLE_XGEM_BYTE_CNT1            0xf55046d4
#define XGPN_USBG_IDLE_XGEM_BYTE_CNT1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_IDLE_XGEM_BYTE_CNT1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_IDLE_XGEM_BYTE_CNT0            0xf55046d8
#define XGPN_USBG_IDLE_XGEM_BYTE_CNT0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_IDLE_XGEM_BYTE_CNT0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_IDLE_GEM_PAYLOAD_H             0xf55046dc
#define XGPN_USBG_IDLE_GEM_PAYLOAD_H_dft         0x5a5a6969

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pattern              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_IDLE_GEM_PAYLOAD_H_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_USBG_IDLE_GEM_PAYLOAD_L             0xf55046e0
#define XGPN_USBG_IDLE_GEM_PAYLOAD_L_dft         0xa5a53c3c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pattern              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_USBG_IDLE_GEM_PAYLOAD_L_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* usbg */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_USBG_GBL_CTRL_t                     GBL_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_USBG_XGTC_CTRL_t                    XGTC_CTRL;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_USBG_GUARD_TM_CFG_t                 GUARD_TM_CFG;                  /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_USBG_IDLE_FM_CFG_t                  IDLE_FM_CFG;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_USBG_XGTC_HD_IND_CFG_t              XGTC_HD_IND_CFG;               /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_USBG_AES_UNI_KEY_IDX_CTRL_t         AES_UNI_KEY_IDX_CTRL;          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_USBG_XGEM_PID_TBL_ACCESS_t          XGEM_PID_TBL_ACCESS;           /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_USBG_XGEM_PID_TBL_DATA_t            XGEM_PID_TBL_DATA;             /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_USBG_XGEM_BUF_CFG_t                 XGEM_BUF_CFG;                  /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_USBG_DBRU_CFG_t                     DBRU_CFG;                      /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_USBG_PLOAMU_QU_CFG_t                PLOAMU_QU_CFG;                 /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_USBG_FRAG_FF_DUMP_CFG_t             FRAG_FF_DUMP_CFG;              /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_USBG_XGTC_ERR_DUMP_CFG_t            XGTC_ERR_DUMP_CFG;             /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_USBG_DBRU_RPT_MAX_CFG_t             DBRU_RPT_MAX_CFG;              /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_USBG_DBRU_BUFOCC_TBL_ACCESS_t       DBRU_BUFOCC_TBL_ACCESS;        /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_USBG_DBRU_BUFOCC_TBL_DATA_t         DBRU_BUFOCC_TBL_DATA;          /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_USBG_INTERRUPT_t                    INTERRUPT;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_USBG_INTERRUPTE0_t                  INTERRUPTE0;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_USBG_INTERRUPTE1_t                  INTERRUPTE1;                   /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  XGPN_USBG_INIT_STS_t                     INIT_STS;                      /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  XGPN_USBG_BURST_PF0_INFOR_STS_t          BURST_PF0_INFOR_STS;           /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  XGPN_USBG_BURST_PF0_DP_H32_STS_t         BURST_PF0_DP_H32_STS;          /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  XGPN_USBG_BURST_PF0_DP_L32_STS_t         BURST_PF0_DP_L32_STS;          /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  XGPN_USBG_BURST_PF0_PP_H32_STS_t         BURST_PF0_PP_H32_STS;          /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  XGPN_USBG_BURST_PF0_PP_L32_STS_t         BURST_PF0_PP_L32_STS;          /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  XGPN_USBG_BURST_PF1_INFOR_STS_t          BURST_PF1_INFOR_STS;           /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  XGPN_USBG_BURST_PF1_DP_H32_STS_t         BURST_PF1_DP_H32_STS;          /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  XGPN_USBG_BURST_PF1_DP_L32_STS_t         BURST_PF1_DP_L32_STS;          /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  XGPN_USBG_BURST_PF1_PP_H32_STS_t         BURST_PF1_PP_H32_STS;          /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  XGPN_USBG_BURST_PF1_PP_L32_STS_t         BURST_PF1_PP_L32_STS;          /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  XGPN_USBG_BURST_PF2_INFOR_STS_t          BURST_PF2_INFOR_STS;           /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  XGPN_USBG_BURST_PF2_DP_H32_STS_t         BURST_PF2_DP_H32_STS;          /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  XGPN_USBG_BURST_PF2_DP_L32_STS_t         BURST_PF2_DP_L32_STS;          /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  XGPN_USBG_BURST_PF2_PP_H32_STS_t         BURST_PF2_PP_H32_STS;          /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  XGPN_USBG_BURST_PF2_PP_L32_STS_t         BURST_PF2_PP_L32_STS;          /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  XGPN_USBG_BURST_PF3_INFOR_STS_t          BURST_PF3_INFOR_STS;           /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  XGPN_USBG_BURST_PF3_DP_H32_STS_t         BURST_PF3_DP_H32_STS;          /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  XGPN_USBG_BURST_PF3_DP_L32_STS_t         BURST_PF3_DP_L32_STS;          /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  XGPN_USBG_BURST_PF3_PP_H32_STS_t         BURST_PF3_PP_H32_STS;          /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  XGPN_USBG_BURST_PF3_PP_L32_STS_t         BURST_PF3_PP_L32_STS;          /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  XGPN_USBG_BP_VER_OL_STS_t                BP_VER_OL_STS;                 /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  XGPN_USBG_MIB_RAM_STATUS_REG_t           MIB_RAM_STATUS_REG;            /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  XGPN_USBG_MIB_CTL_t                      MIB_CTL;                       /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  XGPN_USBG_PORTID_XGEM_MIB_ACCESS_t       PORTID_XGEM_MIB_ACCESS;        /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  XGPN_USBG_PORTID_XGEM_MIB_DATA3_t        PORTID_XGEM_MIB_DATA3;         /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  XGPN_USBG_PORTID_XGEM_MIB_DATA2_t        PORTID_XGEM_MIB_DATA2;         /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  XGPN_USBG_PORTID_XGEM_MIB_DATA1_t        PORTID_XGEM_MIB_DATA1;         /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  XGPN_USBG_PORTID_XGEM_MIB_DATA0_t        PORTID_XGEM_MIB_DATA0;         /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  XGPN_USBG_XGEM_LF0_t                     XGEM_LF0;                      /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  XGPN_USBG_XGTC_FM_CNT_t                  XGTC_FM_CNT;                   /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  XGPN_USBG_XGTC_FEC_BLK_CNT_t             XGTC_FEC_BLK_CNT;              /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  XGPN_USBG_PLM_FM_CNT_t                   PLM_FM_CNT;                    /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  XGPN_USBG_IDLE_XGEM_FRAME_CNT_t          IDLE_XGEM_FRAME_CNT;           /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  XGPN_USBG_IDLE_XGEM_BYTE_CNT1_t          IDLE_XGEM_BYTE_CNT1;           /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  XGPN_USBG_IDLE_XGEM_BYTE_CNT0_t          IDLE_XGEM_BYTE_CNT0;           /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  XGPN_USBG_IDLE_GEM_PAYLOAD_H_t           IDLE_GEM_PAYLOAD_H;            /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  XGPN_USBG_IDLE_GEM_PAYLOAD_L_t           IDLE_GEM_PAYLOAD_L;            /* addr: 0x000000e0 */
} APB7_XGPN_USBG_t;
#endif /* !__ASSEMBLER__ */


/*
 * bwmp
 */

#define XGPN_BWMP_GBL_CTRL                       0xf5504800
#define XGPN_BWMP_GBL_CTRL_dft                   0x00000619

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fltr_en           :  1 ; /* bits 0:0 */
    ca_uint32_t grant_src_mode       :  1 ; /* bits 1:1 */
    ca_uint32_t st_out_chk_en        :  1 ; /* bits 2:2 */
    ca_uint32_t pre_st_out_chk_en    :  1 ; /* bits 3:3 */
    ca_uint32_t grt_always_drop_num  :  3 ; /* bits 6:4 */
    ca_uint32_t grt_always_drop_en   :  1 ; /* bits 7:7 */
    ca_uint32_t scope_remove         :  1 ; /* bits 8:8 */
    ca_uint32_t max_burst_per_bwmap  :  4 ; /* bits 12:9 */
    ca_uint32_t bst_end_ov_drop_en   :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GBL_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_RSP_TM_CFG                     0xf5504804
#define XGPN_BWMP_RSP_TM_CFG_dft                 0x00001543

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t time                 : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_RSP_TM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BST_MG_CFG                     0xf5504808
#define XGPN_BWMP_BST_MG_CFG_dft                 0x00000100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t time                 :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BST_MG_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_SEQ_TM_CTRL                    0xf550480c
#define XGPN_BWMP_SEQ_TM_CTRL_dft                0x000001ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t map_lead_tm          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_SEQ_TM_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_GRT_MSG_CTL                    0xf5504810
#define XGPN_BWMP_GRT_MSG_CTL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 31 ;
    ca_uint32_t access_wr            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GRT_MSG_CTL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_GRT_MSG_DATA0                  0xf5504814
#define XGPN_BWMP_GRT_MSG_DATA0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t infor                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GRT_MSG_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_GRT_MSG_DATA1                  0xf5504818
#define XGPN_BWMP_GRT_MSG_DATA1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t infor                : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GRT_MSG_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_GRT_FF_CTL                     0xf550481c
#define XGPN_BWMP_GRT_FF_CTL_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t grant_ff_sel         :  2 ; /* bits 30:29 */
    ca_uint32_t access_rd            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GRT_FF_CTL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_GRT_FF_DATA0                   0xf5504820
#define XGPN_BWMP_GRT_FF_DATA0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t grant_size           : 16 ; /* bits 15:0 */
    ca_uint32_t st_tm                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GRT_FF_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_GRT_FF_DATA1                   0xf5504824
#define XGPN_BWMP_GRT_FF_DATA1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bp_ind               :  2 ; /* bits 1:0 */
    ca_uint32_t fecu                 :  1 ; /* bits 2:2 */
    ca_uint32_t ploamu               :  1 ; /* bits 3:3 */
    ca_uint32_t dbru                 :  1 ; /* bits 4:4 */
    ca_uint32_t tcont_id             :  5 ; /* bits 9:5 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t tcont_en             :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_GRT_FF_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BM_BUF_CFG                     0xf5504828
#define XGPN_BWMP_BM_BUF_CFG_dft                 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_threshold         :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BM_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_INTERRUPT                      0xf550482c
#define XGPN_BWMP_INTERRUPT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bwmap_lmt_intI       :  1 ; /* bits 0:0 */
    ca_uint32_t hec_chk_err_intI     :  1 ; /* bits 1:1 */
    ca_uint32_t allocid_tbl_full_drop_intI :  1 ; /* bits 2:2 */
    ca_uint32_t unk_allco_series_intI :  1 ; /* bits 3:3 */
    ca_uint32_t burst_profile_invld_intI :  1 ; /* bits 4:4 */
    ca_uint32_t bw_grnt_ff_of_intI   :  1 ; /* bits 5:5 */
    ca_uint32_t bw_grnt_ff_uf_intI   :  1 ; /* bits 6:6 */
    ca_uint32_t bm_grnt_ff_of_intI   :  1 ; /* bits 7:7 */
    ca_uint32_t bm_grnt_ff_uf_intI   :  1 ; /* bits 8:8 */
    ca_uint32_t xgtc_grnt_ff_of_intI :  1 ; /* bits 9:9 */
    ca_uint32_t xgtc_grnt_ff_uf_intI :  1 ; /* bits 10:10 */
    ca_uint32_t gs_less4_drop_intI   :  1 ; /* bits 11:11 */
    ca_uint32_t st_chk_err_intI      :  1 ; /* bits 12:12 */
    ca_uint32_t grt_drop_ff_full_intI :  1 ; /* bits 13:13 */
    ca_uint32_t xg_ov_clash_err_intI :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t UNK_PF_MIBSat        :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t eqd_reduce_drop_intI :  1 ; /* bits 26:26 */
    ca_uint32_t alloc_id_remove_intI :  1 ; /* bits 27:27 */
    ca_uint32_t alloc_id_add_intI    :  1 ; /* bits 28:28 */
    ca_uint32_t pre_sn_grant_intI    :  1 ; /* bits 29:29 */
    ca_uint32_t pre_rang_grant_intI  :  1 ; /* bits 30:30 */
    ca_uint32_t fwi_intI             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_INTERRUPTE0                    0xf5504830
#define XGPN_BWMP_INTERRUPTE0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bwmap_lmt_intIE      :  1 ; /* bits 0:0 */
    ca_uint32_t hec_chk_err_intIE    :  1 ; /* bits 1:1 */
    ca_uint32_t allocid_tbl_full_drop_intIE :  1 ; /* bits 2:2 */
    ca_uint32_t unk_allco_series_intIE :  1 ; /* bits 3:3 */
    ca_uint32_t burst_profile_invld_intIE :  1 ; /* bits 4:4 */
    ca_uint32_t bw_grnt_ff_of_intIE  :  1 ; /* bits 5:5 */
    ca_uint32_t bw_grnt_ff_uf_intIE  :  1 ; /* bits 6:6 */
    ca_uint32_t bm_grnt_ff_of_intIE  :  1 ; /* bits 7:7 */
    ca_uint32_t bm_grnt_ff_uf_intIE  :  1 ; /* bits 8:8 */
    ca_uint32_t xgtc_grnt_ff_of_intIE :  1 ; /* bits 9:9 */
    ca_uint32_t xgtc_grnt_ff_uf_intIE :  1 ; /* bits 10:10 */
    ca_uint32_t gs_less4_drop_intIE  :  1 ; /* bits 11:11 */
    ca_uint32_t st_chk_err_intIE     :  1 ; /* bits 12:12 */
    ca_uint32_t grt_drop_ff_full_intIE :  1 ; /* bits 13:13 */
    ca_uint32_t xg_ov_clash_err_intIE :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t UNK_PF_MIBSatE       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t eqd_reduce_drop_intIE :  1 ; /* bits 26:26 */
    ca_uint32_t alloc_id_remove_intIE :  1 ; /* bits 27:27 */
    ca_uint32_t alloc_id_add_intIE   :  1 ; /* bits 28:28 */
    ca_uint32_t pre_sn_grant_intIE   :  1 ; /* bits 29:29 */
    ca_uint32_t pre_rang_grant_intIE :  1 ; /* bits 30:30 */
    ca_uint32_t fwi_intIE            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_INTERRUPTE1                    0xf5504834
#define XGPN_BWMP_INTERRUPTE1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bwmap_lmt_intIE      :  1 ; /* bits 0:0 */
    ca_uint32_t hec_chk_err_intIE    :  1 ; /* bits 1:1 */
    ca_uint32_t allocid_tbl_full_drop_intIE :  1 ; /* bits 2:2 */
    ca_uint32_t unk_allco_series_intIE :  1 ; /* bits 3:3 */
    ca_uint32_t burst_profile_invld_intIE :  1 ; /* bits 4:4 */
    ca_uint32_t bw_grnt_ff_of_intIE  :  1 ; /* bits 5:5 */
    ca_uint32_t bw_grnt_ff_uf_intIE  :  1 ; /* bits 6:6 */
    ca_uint32_t bm_grnt_ff_of_intIE  :  1 ; /* bits 7:7 */
    ca_uint32_t bm_grnt_ff_uf_intIE  :  1 ; /* bits 8:8 */
    ca_uint32_t xgtc_grnt_ff_of_intIE :  1 ; /* bits 9:9 */
    ca_uint32_t xgtc_grnt_ff_uf_intIE :  1 ; /* bits 10:10 */
    ca_uint32_t gs_less4_drop_intIE  :  1 ; /* bits 11:11 */
    ca_uint32_t st_chk_err_intIE     :  1 ; /* bits 12:12 */
    ca_uint32_t grt_drop_ff_full_intIE :  1 ; /* bits 13:13 */
    ca_uint32_t xg_ov_clash_err_intIE :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t UNK_PF_MIBSatE       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               :  9 ;
    ca_uint32_t eqd_reduce_drop_intIE :  1 ; /* bits 26:26 */
    ca_uint32_t alloc_id_remove_intIE :  1 ; /* bits 27:27 */
    ca_uint32_t alloc_id_add_intIE   :  1 ; /* bits 28:28 */
    ca_uint32_t pre_sn_grant_intIE   :  1 ; /* bits 29:29 */
    ca_uint32_t pre_rang_grant_intIE :  1 ; /* bits 30:30 */
    ca_uint32_t fwi_intIE            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_ALLOC_LUT_ACCESS               0xf5504838
#define XGPN_BWMP_ALLOC_LUT_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tcontID              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t uwlchID              :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t array                :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  9 ;
    ca_uint32_t rnw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_ALLOC_LUT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_ALLOC_LUT_DATA                 0xf550483c
#define XGPN_BWMP_ALLOC_LUT_DATA_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t allocation_ID        : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t omci_en              :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ploam_en             :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_ALLOC_LUT_DATA_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_ALLOC_LUT_DEBUG                0xf5504840
#define XGPN_BWMP_ALLOC_LUT_DEBUG_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t allocID              : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t tcontID              :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd2               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_ALLOC_LUT_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_EQD_STS                        0xf5504844
#define XGPN_BWMP_EQD_STS_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_EQD_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_RANDOM_DLY_STS                 0xf5504848
#define XGPN_BWMP_RANDOM_DLY_STS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_RANDOM_DLY_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_LMT_DROP_SRC_STS               0xf550484c
#define XGPN_BWMP_LMT_DROP_SRC_STS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t total_alloc_num_os   :  1 ; /* bits 0:0 */
    ca_uint32_t per_bst_alloc_num_os :  1 ; /* bits 1:1 */
    ca_uint32_t bst_series_num_os    :  1 ; /* bits 2:2 */
    ca_uint32_t bst_sz_sum_os        :  1 ; /* bits 3:3 */
    ca_uint32_t alloc_sz_chk_vld_os  :  1 ; /* bits 4:4 */
    ca_uint32_t st_chk_fail          :  1 ; /* bits 5:5 */
    ca_uint32_t bst_end_time_os      :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_LMT_DROP_SRC_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_GRT_FF_STS               0xf5504850
#define XGPN_BWMP_BWMAP_GRT_FF_STS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_ptr               :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t wr_sel               :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t rd_ptr               :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rd_sel               :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd4               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_GRT_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_XGTC_GRT_FF_STS                0xf5504854
#define XGPN_BWMP_XGTC_GRT_FF_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_ptr               :  6 ; /* bits 5:0 */
    ca_uint32_t wr_sel               :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rd_ptr               :  6 ; /* bits 13:8 */
    ca_uint32_t rd_sel               :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_XGTC_GRT_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BM_GRT_FF_STS                  0xf5504858
#define XGPN_BWMP_BM_GRT_FF_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wr_ptr               :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rd_ptr               :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BM_GRT_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_UNK_PF_MIB                     0xf550485c
#define XGPN_BWMP_UNK_PF_MIB_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_UNK_PF_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_AS_CNT                         0xf5504860
#define XGPN_BWMP_AS_CNT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t entry                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_AS_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_AS_HEC_ERR_CNT                 0xf5504864
#define XGPN_BWMP_AS_HEC_ERR_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t entry                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_AS_HEC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_CNT_CTRL                 0xf5504868
#define XGPN_BWMP_BWMAP_CNT_CTRL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t latch                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_CNT_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_DS_FM_SYNC_CNT                 0xf550486c
#define XGPN_BWMP_DS_FM_SYNC_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_DS_FM_SYNC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_US_MAP_CNT                     0xf5504870
#define XGPN_BWMP_US_MAP_CNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_US_MAP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_US_XGEM_CNT                    0xf5504874
#define XGPN_BWMP_US_XGEM_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_US_XGEM_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_US_XGTC_CNT                    0xf5504878
#define XGPN_BWMP_US_XGTC_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_US_XGTC_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_CTRL                 0xf550487c
#define XGPN_BWMP_BWMAP_MON_CTRL_dft             0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_STS                  0xf5504880
#define XGPN_BWMP_BWMAP_MON_STS_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t last_frm             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t last_sfc             : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_PTR_0                0xf5504884
#define XGPN_BWMP_BWMAP_MON_PTR_0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrptr_0              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t wrptr_1              :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t wrptr_2              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t wrptr_3              :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_PTR_0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_PTR_1                0xf5504888
#define XGPN_BWMP_BWMAP_MON_PTR_1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrptr_4              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t wrptr_5              :  6 ; /* bits 13:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t wrptr_6              :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t wrptr_7              :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_PTR_1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_TBL_ACCESS           0xf550488c
#define XGPN_BWMP_BWMAP_MON_TBL_ACCESS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 21 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_TBL_DATA1            0xf5504890
#define XGPN_BWMP_BWMAP_MON_TBL_DATA1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Burst_prfl           :  2 ; /* bits 1:0 */
    ca_uint32_t FECu                 :  1 ; /* bits 2:2 */
    ca_uint32_t PLOAMu               :  1 ; /* bits 3:3 */
    ca_uint32_t DBRu                 :  1 ; /* bits 4:4 */
    ca_uint32_t TCONT_IDX            :  5 ; /* bits 9:5 */
    ca_uint32_t TCONT_EN             :  1 ; /* bits 10:10 */
    ca_uint32_t sub_idx              :  1 ; /* bits 11:11 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_BWMP_BWMAP_MON_TBL_DATA0            0xf5504894
#define XGPN_BWMP_BWMAP_MON_TBL_DATA0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Grant_size           : 16 ; /* bits 15:0 */
    ca_uint32_t Start_time           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_BWMP_BWMAP_MON_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* bwmp */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_BWMP_GBL_CTRL_t                     GBL_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_BWMP_RSP_TM_CFG_t                   RSP_TM_CFG;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_BWMP_BST_MG_CFG_t                   BST_MG_CFG;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_BWMP_SEQ_TM_CTRL_t                  SEQ_TM_CTRL;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_BWMP_GRT_MSG_CTL_t                  GRT_MSG_CTL;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_BWMP_GRT_MSG_DATA0_t                GRT_MSG_DATA0;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_BWMP_GRT_MSG_DATA1_t                GRT_MSG_DATA1;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_BWMP_GRT_FF_CTL_t                   GRT_FF_CTL;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_BWMP_GRT_FF_DATA0_t                 GRT_FF_DATA0;                  /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_BWMP_GRT_FF_DATA1_t                 GRT_FF_DATA1;                  /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_BWMP_BM_BUF_CFG_t                   BM_BUF_CFG;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_BWMP_INTERRUPT_t                    INTERRUPT;                     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_BWMP_INTERRUPTE0_t                  INTERRUPTE0;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_BWMP_INTERRUPTE1_t                  INTERRUPTE1;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_BWMP_ALLOC_LUT_ACCESS_t             ALLOC_LUT_ACCESS;              /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_BWMP_ALLOC_LUT_DATA_t               ALLOC_LUT_DATA;                /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_BWMP_ALLOC_LUT_DEBUG_t              ALLOC_LUT_DEBUG;               /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_BWMP_EQD_STS_t                      EQD_STS;                       /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_BWMP_RANDOM_DLY_STS_t               RANDOM_DLY_STS;                /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  XGPN_BWMP_LMT_DROP_SRC_STS_t             LMT_DROP_SRC_STS;              /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  XGPN_BWMP_BWMAP_GRT_FF_STS_t             BWMAP_GRT_FF_STS;              /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  XGPN_BWMP_XGTC_GRT_FF_STS_t              XGTC_GRT_FF_STS;               /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  XGPN_BWMP_BM_GRT_FF_STS_t                BM_GRT_FF_STS;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  XGPN_BWMP_UNK_PF_MIB_t                   UNK_PF_MIB;                    /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  XGPN_BWMP_AS_CNT_t                       AS_CNT;                        /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  XGPN_BWMP_AS_HEC_ERR_CNT_t               AS_HEC_ERR_CNT;                /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  XGPN_BWMP_BWMAP_CNT_CTRL_t               BWMAP_CNT_CTRL;                /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  XGPN_BWMP_DS_FM_SYNC_CNT_t               DS_FM_SYNC_CNT;                /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  XGPN_BWMP_US_MAP_CNT_t                   US_MAP_CNT;                    /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  XGPN_BWMP_US_XGEM_CNT_t                  US_XGEM_CNT;                   /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  XGPN_BWMP_US_XGTC_CNT_t                  US_XGTC_CNT;                   /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  XGPN_BWMP_BWMAP_MON_CTRL_t               BWMAP_MON_CTRL;                /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  XGPN_BWMP_BWMAP_MON_STS_t                BWMAP_MON_STS;                 /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  XGPN_BWMP_BWMAP_MON_PTR_0_t              BWMAP_MON_PTR_0;               /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  XGPN_BWMP_BWMAP_MON_PTR_1_t              BWMAP_MON_PTR_1;               /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  XGPN_BWMP_BWMAP_MON_TBL_ACCESS_t         BWMAP_MON_TBL_ACCESS;          /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  XGPN_BWMP_BWMAP_MON_TBL_DATA1_t          BWMAP_MON_TBL_DATA1;           /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  XGPN_BWMP_BWMAP_MON_TBL_DATA0_t          BWMAP_MON_TBL_DATA0;           /* addr: 0x00000094 */
} APB7_XGPN_BWMP_t;
#endif /* !__ASSEMBLER__ */


/*
 * plmp
 */

#define XGPN_PLMP_CTRL                           0xf5504a00
#define XGPN_PLMP_CTRL_dft                       0x0000007a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sw_mode_en           :  1 ; /* bits 0:0 */
    ca_uint32_t dereg_rst_en         :  1 ; /* bits 1:1 */
    ca_uint32_t resrv_bc_en          :  1 ; /* bits 2:2 */
    ca_uint32_t resrv_id_sel         :  2 ; /* bits 4:3 */
    ca_uint32_t tuning_rst_en        :  1 ; /* bits 5:5 */
    ca_uint32_t tuning_mic_rst_en    :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DS_CTRL                        0xf5504a04
#define XGPN_PLMP_DS_CTRL_dft                    0x06000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mic_chk_dis          :  1 ; /* bits 0:0 */
    ca_uint32_t seq_chk_dis          :  1 ; /* bits 1:1 */
    ca_uint32_t onuid_flt_dis        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t capt_msg_en          :  1 ; /* bits 4:4 */
    ca_uint32_t capt_msg_type        :  8 ; /* bits 12:5 */
    ca_uint32_t capt_onu_id          : 10 ; /* bits 22:13 */
    ca_uint32_t extension_en         :  1 ; /* bits 23:23 */
    ca_uint32_t unkwn_msg_type_en    :  1 ; /* bits 24:24 */
    ca_uint32_t dozing_filter_en     :  1 ; /* bits 25:25 */
    ca_uint32_t o7_filter_en         :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t pktgen_rdy_chk_en    :  1 ; /* bits 29:29 */
    ca_uint32_t extension_msg_type_en :  1 ; /* bits 30:30 */
    ca_uint32_t capt_msg_bpressure_en :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DS_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RX_CAPTURE                     0xf5504a08
#define XGPN_PLMP_RX_CAPTURE_dft                 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t msg_en               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RX_CAPTURE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_US_CTRL                        0xf5504a0c
#define XGPN_PLMP_US_CTRL_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mic_gen_dis          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t hw_key_new           :  1 ; /* bits 2:2 */
    ca_uint32_t hw_key_confirm       :  1 ; /* bits 3:3 */
    ca_uint32_t busy_ack_at_key_new  :  1 ; /* bits 4:4 */
    ca_uint32_t busy_ack_at_key_new_grant :  1 ; /* bits 5:5 */
    ca_uint32_t ploamu_qstat_key_new :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t busy_ack_at_key_confirm :  1 ; /* bits 8:8 */
    ca_uint32_t busy_ack_at_key_confirm_grant :  1 ; /* bits 9:9 */
    ca_uint32_t ploamu_qstat_key_confirm :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd3               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_US_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_VENDOR_ID_CFG                  0xf5504a10
#define XGPN_PLMP_VENDOR_ID_CFG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_VENDOR_ID_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_VSSN_CFG                       0xf5504a14
#define XGPN_PLMP_VSSN_CFG_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_VSSN_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RAND_CFG                       0xf5504a18
#define XGPN_PLMP_RAND_CFG_dft                   0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seed                 : 31 ; /* bits 30:0 */
    ca_uint32_t en                   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RAND_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CORRELATION                    0xf5504a1c
#define XGPN_PLMP_CORRELATION_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CORRELATION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_US_PON_ID                      0xf5504a20
#define XGPN_PLMP_US_PON_ID_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_US_PON_ID_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CALIBRATION_EVEN               0xf5504a24
#define XGPN_PLMP_CALIBRATION_EVEN_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t record               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CALIBRATION_EVEN_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CALIBRATION_ODD                0xf5504a28
#define XGPN_PLMP_CALIBRATION_ODD_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t record               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CALIBRATION_ODD_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TUNING_PARAMETER               0xf5504a2c
#define XGPN_PLMP_TUNING_PARAMETER_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t granularity          :  8 ; /* bits 7:0 */
    ca_uint32_t time                 :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TUNING_PARAMETER_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ATTENUATION                    0xf5504a30
#define XGPN_PLMP_ATTENUATION_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t level                :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t capability           :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ATTENUATION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG0                   0xf5504a34
#define XGPN_PLMP_RGST_ID_CFG0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG1                   0xf5504a38
#define XGPN_PLMP_RGST_ID_CFG1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG2                   0xf5504a3c
#define XGPN_PLMP_RGST_ID_CFG2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG3                   0xf5504a40
#define XGPN_PLMP_RGST_ID_CFG3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG4                   0xf5504a44
#define XGPN_PLMP_RGST_ID_CFG4_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG4_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG5                   0xf5504a48
#define XGPN_PLMP_RGST_ID_CFG5_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG5_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG6                   0xf5504a4c
#define XGPN_PLMP_RGST_ID_CFG6_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG6_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG7                   0xf5504a50
#define XGPN_PLMP_RGST_ID_CFG7_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG7_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RGST_ID_CFG8                   0xf5504a54
#define XGPN_PLMP_RGST_ID_CFG8_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RGST_ID_CFG8_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TUNING_CONFIG                  0xf5504a58
#define XGPN_PLMP_TUNING_CONFIG_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t request_schedule_sfc : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t skip_rx              :  1 ; /* bits 22:22 */
    ca_uint32_t rollback_allow       :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t request_lead_sfc     :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TUNING_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SW_RESPONSE                    0xf5504a5c
#define XGPN_PLMP_SW_RESPONSE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tuning_request       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t tuning_operation_code :  4 ; /* bits 7:4 */
    ca_uint32_t seqno                :  8 ; /* bits 15:8 */
    ca_uint32_t tuning_response_code : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SW_RESPONSE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_EQD_THRSHLD                    0xf5504a60
#define XGPN_PLMP_EQD_THRSHLD_dft                0x00097e00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_EQD_THRSHLD_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_PLOAM_NO_MSG0              0xf5504a64
#define XGPN_PLMP_ACK_PLOAM_NO_MSG0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mic                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_PLOAM_NO_MSG0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_PLOAM_NO_MSG1              0xf5504a68
#define XGPN_PLMP_ACK_PLOAM_NO_MSG1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mic                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_PLOAM_NO_MSG1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_PLOAM_BUSY_MSG_CFG         0xf5504a6c
#define XGPN_PLMP_ACK_PLOAM_BUSY_MSG_CFG_dft     0x00020000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seq                  :  8 ; /* bits 7:0 */
    ca_uint32_t start                :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t complt_code          :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  7 ;
    ca_uint32_t ok                   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_PLOAM_BUSY_MSG_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_PLOAM_BUSY_MSG0            0xf5504a70
#define XGPN_PLMP_ACK_PLOAM_BUSY_MSG0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mic                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_PLOAM_BUSY_MSG0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_PLOAM_BUSY_MSG1            0xf5504a74
#define XGPN_PLMP_ACK_PLOAM_BUSY_MSG1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mic                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_PLOAM_BUSY_MSG1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG                      0xf5504a78
#define XGPN_PLMP_PLOAM_CFG_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t done                 :  1 ; /* bits 0:0 */
    ca_uint32_t msg_type             :  8 ; /* bits 8:1 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA0                0xf5504a7c
#define XGPN_PLMP_PLOAM_CFG_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA1                0xf5504a80
#define XGPN_PLMP_PLOAM_CFG_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA2                0xf5504a84
#define XGPN_PLMP_PLOAM_CFG_DATA2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA3                0xf5504a88
#define XGPN_PLMP_PLOAM_CFG_DATA3_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA4                0xf5504a8c
#define XGPN_PLMP_PLOAM_CFG_DATA4_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA5                0xf5504a90
#define XGPN_PLMP_PLOAM_CFG_DATA5_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA6                0xf5504a94
#define XGPN_PLMP_PLOAM_CFG_DATA6_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA7                0xf5504a98
#define XGPN_PLMP_PLOAM_CFG_DATA7_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_CFG_DATA8                0xf5504a9c
#define XGPN_PLMP_PLOAM_CFG_DATA8_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_CFG_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_EXCHG_THRSHD               0xf5504aa0
#define XGPN_PLMP_KEY_EXCHG_THRSHD_dft           0x032000a0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tk5_timeout          :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t tk4_timeout          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_EXCHG_THRSHD_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_INTERRUPT                      0xf5504aa4
#define XGPN_PLMP_INTERRUPT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrong_onuid_intI     :  1 ; /* bits 0:0 */
    ca_uint32_t bc_seq_mismch_intI   :  1 ; /* bits 1:1 */
    ca_uint32_t uc_seq_mismch_intI   :  1 ; /* bits 2:2 */
    ca_uint32_t mic_chk_fail_intI    :  1 ; /* bits 3:3 */
    ca_uint32_t wrong_ploam_intI     :  1 ; /* bits 4:4 */
    ca_uint32_t key_exchg_tk4_timeout_intI :  1 ; /* bits 5:5 */
    ca_uint32_t key_exchg_tk5_timeout_intI :  1 ; /* bits 6:6 */
    ca_uint32_t key_ctrl_intI        :  1 ; /* bits 7:7 */
    ca_uint32_t sleep_allow_intI     :  1 ; /* bits 8:8 */
    ca_uint32_t sleep_req_done_intI  :  1 ; /* bits 9:9 */
    ca_uint32_t eqd_err_intI         :  1 ; /* bits 10:10 */
    ca_uint32_t busy_err_intI        :  1 ; /* bits 11:11 */
    ca_uint32_t registration_msg_intI :  1 ; /* bits 12:12 */
    ca_uint32_t burst_prfl_intI      :  1 ; /* bits 13:13 */
    ca_uint32_t reboot_onu_intI      :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tuning_request       :  1 ; /* bits 16:16 */
    ca_uint32_t protection_ctrl      :  1 ; /* bits 17:17 */
    ca_uint32_t chng_pwr_level       :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t mib_sat              :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t sw_ploamd_overlap_drop :  1 ; /* bits 28:28 */
    ca_uint32_t sw_ploamd_full_drop  :  1 ; /* bits 29:29 */
    ca_uint32_t rxbuf0_rdy_intI      :  1 ; /* bits 30:30 */
    ca_uint32_t rxbuf1_rdy_intI      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_INTERRUPTE0                    0xf5504aa8
#define XGPN_PLMP_INTERRUPTE0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrong_onuid_intIE    :  1 ; /* bits 0:0 */
    ca_uint32_t bc_seq_mismch_intIE  :  1 ; /* bits 1:1 */
    ca_uint32_t uc_seq_mismch_intIE  :  1 ; /* bits 2:2 */
    ca_uint32_t mic_chk_fail_intIE   :  1 ; /* bits 3:3 */
    ca_uint32_t wrong_ploam_intIE    :  1 ; /* bits 4:4 */
    ca_uint32_t key_exchg_tk4_timeout_intIE :  1 ; /* bits 5:5 */
    ca_uint32_t key_exchg_tk5_timeout_intIE :  1 ; /* bits 6:6 */
    ca_uint32_t key_ctrl_intIE       :  1 ; /* bits 7:7 */
    ca_uint32_t sleep_allow_intIE    :  1 ; /* bits 8:8 */
    ca_uint32_t sleep_req_done_intIE :  1 ; /* bits 9:9 */
    ca_uint32_t eqd_err_intIE        :  1 ; /* bits 10:10 */
    ca_uint32_t busy_err_intIE       :  1 ; /* bits 11:11 */
    ca_uint32_t registration_msg_intIE :  1 ; /* bits 12:12 */
    ca_uint32_t burst_prfl_intIE     :  1 ; /* bits 13:13 */
    ca_uint32_t reboot_onu_intIE     :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tuning_requestE      :  1 ; /* bits 16:16 */
    ca_uint32_t protection_ctrlE     :  1 ; /* bits 17:17 */
    ca_uint32_t chng_pwr_levelE      :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t mib_satE             :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t sw_ploamd_overlap_dropE :  1 ; /* bits 28:28 */
    ca_uint32_t sw_ploamd_full_dropE :  1 ; /* bits 29:29 */
    ca_uint32_t rxbuf0_rdy_intIE     :  1 ; /* bits 30:30 */
    ca_uint32_t rxbuf1_rdy_intIE     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_INTERRUPTE1                    0xf5504aac
#define XGPN_PLMP_INTERRUPTE1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrong_onuid_intIE    :  1 ; /* bits 0:0 */
    ca_uint32_t bc_seq_mismch_intIE  :  1 ; /* bits 1:1 */
    ca_uint32_t uc_seq_mismch_intIE  :  1 ; /* bits 2:2 */
    ca_uint32_t mic_chk_fail_intIE   :  1 ; /* bits 3:3 */
    ca_uint32_t wrong_ploam_intIE    :  1 ; /* bits 4:4 */
    ca_uint32_t key_exchg_tk4_timeout_intIE :  1 ; /* bits 5:5 */
    ca_uint32_t key_exchg_tk5_timeout_intIE :  1 ; /* bits 6:6 */
    ca_uint32_t key_ctrl_intIE       :  1 ; /* bits 7:7 */
    ca_uint32_t sleep_allow_intIE    :  1 ; /* bits 8:8 */
    ca_uint32_t sleep_req_done_intIE :  1 ; /* bits 9:9 */
    ca_uint32_t eqd_err_intIE        :  1 ; /* bits 10:10 */
    ca_uint32_t busy_err_intIE       :  1 ; /* bits 11:11 */
    ca_uint32_t registration_msg_intIE :  1 ; /* bits 12:12 */
    ca_uint32_t burst_prfl_intIE     :  1 ; /* bits 13:13 */
    ca_uint32_t reboot_onu_intIE     :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tuning_requestE      :  1 ; /* bits 16:16 */
    ca_uint32_t protection_ctrlE     :  1 ; /* bits 17:17 */
    ca_uint32_t chng_pwr_levelE      :  1 ; /* bits 18:18 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t mib_satE             :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t sw_ploamd_overlap_dropE :  1 ; /* bits 28:28 */
    ca_uint32_t sw_ploamd_full_dropE :  1 ; /* bits 29:29 */
    ca_uint32_t rxbuf0_rdy_intIE     :  1 ; /* bits 30:30 */
    ca_uint32_t rxbuf1_rdy_intIE     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_MIB_SAT_INT                    0xf5504ab0
#define XGPN_PLMP_MIB_SAT_INT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MIC_ERR_mib_sat      :  1 ; /* bits 0:0 */
    ca_uint32_t DS_RX_mib_sat        :  1 ; /* bits 1:1 */
    ca_uint32_t SYSTEM_PRFL_mib_sat  :  1 ; /* bits 2:2 */
    ca_uint32_t CHANNEL_PRFL_mib_sat :  1 ; /* bits 3:3 */
    ca_uint32_t PRFL_mib_sat         :  1 ; /* bits 4:4 */
    ca_uint32_t ASSGN_ONUID_mib_sat  :  1 ; /* bits 5:5 */
    ca_uint32_t RANGING_TIME_mib_sat :  1 ; /* bits 6:6 */
    ca_uint32_t PROTECT_CTRL_mib_sat :  1 ; /* bits 7:7 */
    ca_uint32_t ADJ_TX_WVLN_mib_sat  :  1 ; /* bits 8:8 */
    ca_uint32_t DEACTV_ONU_mib_sat   :  1 ; /* bits 9:9 */
    ca_uint32_t DISABLE_SN_mib_sat   :  1 ; /* bits 10:10 */
    ca_uint32_t REQ_REGST_mib_sat    :  1 ; /* bits 11:11 */
    ca_uint32_t ASSGN_ALLCTID_mib_sat :  1 ; /* bits 12:12 */
    ca_uint32_t KEY_CTRL_mib_sat     :  1 ; /* bits 13:13 */
    ca_uint32_t SLEEP_ALLW_mib_sat   :  1 ; /* bits 14:14 */
    ca_uint32_t TUNING_CTRL_REQ_mib_sat :  1 ; /* bits 15:15 */
    ca_uint32_t TUNING_CTRL_CMPLT_mib_sat :  1 ; /* bits 16:16 */
    ca_uint32_t CALIBRT_REQ_mib_sat  :  1 ; /* bits 17:17 */
    ca_uint32_t US_TX_mib_sat        :  1 ; /* bits 18:18 */
    ca_uint32_t SN_ONU_mib_sat       :  1 ; /* bits 19:19 */
    ca_uint32_t REGST_mib_sat        :  1 ; /* bits 20:20 */
    ca_uint32_t ACK_mib_sat          :  1 ; /* bits 21:21 */
    ca_uint32_t KEY_REPORT_mib_sat   :  1 ; /* bits 22:22 */
    ca_uint32_t SLEEP_REQ_mib_sat    :  1 ; /* bits 23:23 */
    ca_uint32_t TUN_REQ_RSP_mib_sat  :  1 ; /* bits 24:24 */
    ca_uint32_t TUN_CMPLTU_mib_sat   :  1 ; /* bits 25:25 */
    ca_uint32_t PWR_CNSMPT_RPT_mib_sat :  1 ; /* bits 26:26 */
    ca_uint32_t SW_PLOAMD_FULL_DROP_mib_sat :  1 ; /* bits 27:27 */
    ca_uint32_t SW_PLOAMD_OVERLAP_DROP_mib_sat :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_MIB_SAT_INT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_MIB_SAT_INTE                   0xf5504ab4
#define XGPN_PLMP_MIB_SAT_INTE_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MIC_ERR_mib_satE     :  1 ; /* bits 0:0 */
    ca_uint32_t DS_RX_mib_satE       :  1 ; /* bits 1:1 */
    ca_uint32_t SYSTEM_PRFL_mib_satE :  1 ; /* bits 2:2 */
    ca_uint32_t CHANNEL_PRFL_mib_satE :  1 ; /* bits 3:3 */
    ca_uint32_t PRFL_mib_satE        :  1 ; /* bits 4:4 */
    ca_uint32_t ASSGN_ONUID_mib_satE :  1 ; /* bits 5:5 */
    ca_uint32_t RANGING_TIME_mib_satE :  1 ; /* bits 6:6 */
    ca_uint32_t PROTECT_CTRL_mib_satE :  1 ; /* bits 7:7 */
    ca_uint32_t ADJ_TX_WVLN_mib_satE :  1 ; /* bits 8:8 */
    ca_uint32_t DEACTV_ONU_mib_satE  :  1 ; /* bits 9:9 */
    ca_uint32_t DISABLE_SN_mib_satE  :  1 ; /* bits 10:10 */
    ca_uint32_t REQ_REGST_mib_satE   :  1 ; /* bits 11:11 */
    ca_uint32_t ASSGN_ALLCTID_mib_satE :  1 ; /* bits 12:12 */
    ca_uint32_t KEY_CTRL_mib_satE    :  1 ; /* bits 13:13 */
    ca_uint32_t SLEEP_ALLW_mib_satE  :  1 ; /* bits 14:14 */
    ca_uint32_t TUNING_CTRL_REQ_mib_satE :  1 ; /* bits 15:15 */
    ca_uint32_t TUNING_CTRL_CMPLT_mib_satE :  1 ; /* bits 16:16 */
    ca_uint32_t CALIBRT_REQ_mib_satE :  1 ; /* bits 17:17 */
    ca_uint32_t US_TX_mib_satE       :  1 ; /* bits 18:18 */
    ca_uint32_t SN_ONU_mib_satE      :  1 ; /* bits 19:19 */
    ca_uint32_t REGST_mib_satE       :  1 ; /* bits 20:20 */
    ca_uint32_t ACK_mib_satE         :  1 ; /* bits 21:21 */
    ca_uint32_t KEY_REPORT_mib_satE  :  1 ; /* bits 22:22 */
    ca_uint32_t SLEEP_REQ_mib_satE   :  1 ; /* bits 23:23 */
    ca_uint32_t TUN_REQ_RSP_mib_satE :  1 ; /* bits 24:24 */
    ca_uint32_t TUN_CMPLTU_mib_satE  :  1 ; /* bits 25:25 */
    ca_uint32_t PWR_CNSMPT_RPT_mib_satE :  1 ; /* bits 26:26 */
    ca_uint32_t SW_PLOAMD_FULL_DROP_mib_satE :  1 ; /* bits 27:27 */
    ca_uint32_t SW_PLOAMD_OVERLAP_DROP_mib_satE :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_MIB_SAT_INTE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_CTRL_STAT                  0xf5504ab8
#define XGPN_PLMP_KEY_CTRL_STAT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seq                  :  8 ; /* bits 7:0 */
    ca_uint32_t type                 :  8 ; /* bits 15:8 */
    ca_uint32_t index                :  8 ; /* bits 23:16 */
    ca_uint32_t length               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_CTRL_STAT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_REPORT                     0xf5504abc
#define XGPN_PLMP_KEY_REPORT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seq                  :  8 ; /* bits 7:0 */
    ca_uint32_t type                 :  8 ; /* bits 15:8 */
    ca_uint32_t index                :  8 ; /* bits 23:16 */
    ca_uint32_t fragment_num         :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rdy                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_REPORT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_REPORT_FRAG0               0xf5504ac0
#define XGPN_PLMP_KEY_REPORT_FRAG0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_REPORT_FRAG0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_REPORT_FRAG1               0xf5504ac4
#define XGPN_PLMP_KEY_REPORT_FRAG1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_REPORT_FRAG1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_REPORT_FRAG2               0xf5504ac8
#define XGPN_PLMP_KEY_REPORT_FRAG2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_REPORT_FRAG2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_REPORT_FRAG3               0xf5504acc
#define XGPN_PLMP_KEY_REPORT_FRAG3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_REPORT_FRAG3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SLEEP_ALLOW_STAT               0xf5504ad0
#define XGPN_PLMP_SLEEP_ALLOW_STAT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t seq                  :  8 ; /* bits 7:0 */
    ca_uint32_t type                 :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SLEEP_ALLOW_STAT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SLEEP_REQ                      0xf5504ad4
#define XGPN_PLMP_SLEEP_REQ_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t activity_level       :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rdy                  :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SLEEP_REQ_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SW_ACK                         0xf5504ad8
#define XGPN_PLMP_SW_ACK_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t complt_code          :  8 ; /* bits 7:0 */
    ca_uint32_t seqno                :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t chng_pwr_level       :  1 ; /* bits 30:30 */
    ca_uint32_t protect_ctrl         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SW_ACK_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH0_POWER_CONSUMPTION          0xf5504adc
#define XGPN_PLMP_CH0_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH0_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH1_POWER_CONSUMPTION          0xf5504ae0
#define XGPN_PLMP_CH1_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH1_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH2_POWER_CONSUMPTION          0xf5504ae4
#define XGPN_PLMP_CH2_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH2_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH3_POWER_CONSUMPTION          0xf5504ae8
#define XGPN_PLMP_CH3_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH3_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH4_POWER_CONSUMPTION          0xf5504aec
#define XGPN_PLMP_CH4_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH4_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH5_POWER_CONSUMPTION          0xf5504af0
#define XGPN_PLMP_CH5_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH5_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH6_POWER_CONSUMPTION          0xf5504af4
#define XGPN_PLMP_CH6_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH6_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CH7_POWER_CONSUMPTION          0xf5504af8
#define XGPN_PLMP_CH7_POWER_CONSUMPTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t indicate             : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CH7_POWER_CONSUMPTION_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_CTRL                     0xf5504afc
#define XGPN_PLMP_TXBUF_CTRL_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t defkey               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 30 ;
    ca_uint32_t pkt_rdy              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA0                    0xf5504b00
#define XGPN_PLMP_TXBUF_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA1                    0xf5504b04
#define XGPN_PLMP_TXBUF_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA2                    0xf5504b08
#define XGPN_PLMP_TXBUF_DATA2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA3                    0xf5504b0c
#define XGPN_PLMP_TXBUF_DATA3_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA4                    0xf5504b10
#define XGPN_PLMP_TXBUF_DATA4_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA5                    0xf5504b14
#define XGPN_PLMP_TXBUF_DATA5_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA6                    0xf5504b18
#define XGPN_PLMP_TXBUF_DATA6_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA7                    0xf5504b1c
#define XGPN_PLMP_TXBUF_DATA7_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA8                    0xf5504b20
#define XGPN_PLMP_TXBUF_DATA8_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA8_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TXBUF_DATA9                    0xf5504b24
#define XGPN_PLMP_TXBUF_DATA9_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TXBUF_DATA9_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RXBUF0_STAT                    0xf5504b28
#define XGPN_PLMP_RXBUF0_STAT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t mic_err              :  1 ; /* bits 15:15 */
    ca_uint32_t rx_sfc               :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t turn                 :  1 ; /* bits 30:30 */
    ca_uint32_t pkt_rdy              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RXBUF0_STAT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RXBUF1_STAT                    0xf5504b2c
#define XGPN_PLMP_RXBUF1_STAT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t mic_err              :  1 ; /* bits 15:15 */
    ca_uint32_t rx_sfc               :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t turn                 :  1 ; /* bits 30:30 */
    ca_uint32_t pkt_rdy              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RXBUF1_STAT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RXBUF                          0xf5504b80
#define XGPN_PLMP_RXBUF_STRIDE                   4
#define XGPN_PLMP_RXBUF_COUNT                    24
#define XGPN_PLMP_RXBUF_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RXBUF_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_MIB_CTRL                       0xf5504c00
#define XGPN_PLMP_MIB_CTRL_dft                   0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t plmp_prfl_1023_en    :  1 ; /* bits 0:0 */
    ca_uint32_t plmp_prfl_1022_en    :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_MIB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_MIC_ERR_MIB                    0xf5504c04
#define XGPN_PLMP_MIC_ERR_MIB_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_MIC_ERR_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DS_RX_MIB                      0xf5504c08
#define XGPN_PLMP_DS_RX_MIB_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DS_RX_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SYSTEM_PRFL_MIB                0xf5504c0c
#define XGPN_PLMP_SYSTEM_PRFL_MIB_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SYSTEM_PRFL_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CHANNEL_PRFL_MIB               0xf5504c10
#define XGPN_PLMP_CHANNEL_PRFL_MIB_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CHANNEL_PRFL_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PRFL_MIB                       0xf5504c14
#define XGPN_PLMP_PRFL_MIB_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PRFL_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ASSGN_ONUID_MIB                0xf5504c18
#define XGPN_PLMP_ASSGN_ONUID_MIB_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ASSGN_ONUID_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RANGING_TIME_MIB               0xf5504c1c
#define XGPN_PLMP_RANGING_TIME_MIB_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RANGING_TIME_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PROTECT_CTRL_MIB               0xf5504c20
#define XGPN_PLMP_PROTECT_CTRL_MIB_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PROTECT_CTRL_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ADJ_TX_WVLN_MIB                0xf5504c24
#define XGPN_PLMP_ADJ_TX_WVLN_MIB_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ADJ_TX_WVLN_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DEACTV_ONU_MIB                 0xf5504c28
#define XGPN_PLMP_DEACTV_ONU_MIB_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DEACTV_ONU_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DISABLE_SN_MIB                 0xf5504c2c
#define XGPN_PLMP_DISABLE_SN_MIB_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DISABLE_SN_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_REQ_REGST_MIB                  0xf5504c30
#define XGPN_PLMP_REQ_REGST_MIB_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_REQ_REGST_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ASSGN_ALLCTID_MIB              0xf5504c34
#define XGPN_PLMP_ASSGN_ALLCTID_MIB_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ASSGN_ALLCTID_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_CTRL_MIB                   0xf5504c38
#define XGPN_PLMP_KEY_CTRL_MIB_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_CTRL_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SLEEP_ALLW_MIB                 0xf5504c3c
#define XGPN_PLMP_SLEEP_ALLW_MIB_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SLEEP_ALLW_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TUNING_CTRL_REQ_MIB            0xf5504c40
#define XGPN_PLMP_TUNING_CTRL_REQ_MIB_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TUNING_CTRL_REQ_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TUNING_CTRL_CMPLT_MIB          0xf5504c44
#define XGPN_PLMP_TUNING_CTRL_CMPLT_MIB_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TUNING_CTRL_CMPLT_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_CALIBRT_REQ_MIB                0xf5504c48
#define XGPN_PLMP_CALIBRT_REQ_MIB_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_CALIBRT_REQ_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_US_TX_MIB                      0xf5504c4c
#define XGPN_PLMP_US_TX_MIB_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_US_TX_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SN_ONU_MIB                     0xf5504c50
#define XGPN_PLMP_SN_ONU_MIB_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SN_ONU_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_REGST_MIB                      0xf5504c54
#define XGPN_PLMP_REGST_MIB_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_REGST_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_MIB                        0xf5504c58
#define XGPN_PLMP_ACK_MIB_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_KEY_REPORT_MIB                 0xf5504c5c
#define XGPN_PLMP_KEY_REPORT_MIB_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_KEY_REPORT_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SLEEP_REQ_MIB                  0xf5504c60
#define XGPN_PLMP_SLEEP_REQ_MIB_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SLEEP_REQ_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TUN_REQ_RSP_MIB                0xf5504c64
#define XGPN_PLMP_TUN_REQ_RSP_MIB_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TUN_REQ_RSP_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_TUN_CMPLTU_MIB                 0xf5504c68
#define XGPN_PLMP_TUN_CMPLTU_MIB_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_TUN_CMPLTU_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PWR_CNSMPT_RPT_MIB             0xf5504c6c
#define XGPN_PLMP_PWR_CNSMPT_RPT_MIB_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PWR_CNSMPT_RPT_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DEBUG_STS0                     0xf5504c70
#define XGPN_PLMP_DEBUG_STS0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sn_random_delay      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DEBUG_STS0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DEBUG_STS1                     0xf5504c74
#define XGPN_PLMP_DEBUG_STS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pon_tag_low          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DEBUG_STS1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DEBUG_STS2                     0xf5504c78
#define XGPN_PLMP_DEBUG_STS2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pon_tag_high         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DEBUG_STS2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_BC_PLOAM_SEQ                   0xf5504c7c
#define XGPN_PLMP_BC_PLOAM_SEQ_dft               0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t number               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_BC_PLOAM_SEQ_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_UC_PLOAM_SEQ                   0xf5504c80
#define XGPN_PLMP_UC_PLOAM_SEQ_dft               0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t number               :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_UC_PLOAM_SEQ_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_BC_MSG_CNT                     0xf5504c84
#define XGPN_PLMP_BC_MSG_CNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t deact_onu_pkt        :  4 ; /* bits 3:0 */
    ca_uint32_t assgn_eqd_pkt        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_BC_MSG_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ENABLE_ONU_CNT                 0xf5504c88
#define XGPN_PLMP_ENABLE_ONU_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ENABLE_ONU_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_UC_UPDT_PRFL_CNT               0xf5504c8c
#define XGPN_PLMP_UC_UPDT_PRFL_CNT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_UC_UPDT_PRFL_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_EXTENSION_CNT                  0xf5504c90
#define XGPN_PLMP_EXTENSION_CNT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_EXTENSION_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_REGST_CNT                      0xf5504c94
#define XGPN_PLMP_REGST_CNT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rang_gnt_pkt         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_REGST_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_OK_CNT                     0xf5504c98
#define XGPN_PLMP_ACK_OK_CNT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_OK_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAMD_ERR_CNT                 0xf5504c9c
#define XGPN_PLMP_PLOAMD_ERR_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAMD_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DS_TX_CNT                      0xf5504ca0
#define XGPN_PLMP_DS_TX_CNT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DS_TX_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DS_DROP_CNT                    0xf5504ca4
#define XGPN_PLMP_DS_DROP_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bc_pkt               : 16 ; /* bits 15:0 */
    ca_uint32_t uc_pkt               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DS_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_RX_FF_DROP_CNT                 0xf5504ca8
#define XGPN_PLMP_RX_FF_DROP_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_RX_FF_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_EXTEN_DROP_CNT                 0xf5504cac
#define XGPN_PLMP_EXTEN_DROP_CNT_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_EXTEN_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_US_RX_CNT                      0xf5504cb0
#define XGPN_PLMP_US_RX_CNT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_US_RX_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_US_SW_TX_CNT                   0xf5504cb4
#define XGPN_PLMP_US_SW_TX_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_US_SW_TX_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_DS_SW_RX_CNT                   0xf5504cb8
#define XGPN_PLMP_DS_SW_RX_CNT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_DS_SW_RX_CNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_EXTENSION_MSG_TYPE             0xf5504cbc
#define XGPN_PLMP_EXTENSION_MSG_TYPE_dft         0xfffbd985

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_EXTENSION_MSG_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_PKT_GEN_FIFO_CTRL        0xf5504cc0
#define XGPN_PLMP_PLOAM_PKT_GEN_FIFO_CTRL_dft    0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_PKT_GEN_FIFO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_MSG_DROP_CNTR            0xf5504cc4
#define XGPN_PLMP_PLOAM_MSG_DROP_CNTR_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_MSG_DROP_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SW_PLOAMD_FULL_DROP_MIB        0xf5504cc8
#define XGPN_PLMP_SW_PLOAMD_FULL_DROP_MIB_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SW_PLOAMD_FULL_DROP_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_SW_PLOAMD_OVERLAP_DROP_MIB     0xf5504ccc
#define XGPN_PLMP_SW_PLOAMD_OVERLAP_DROP_MIB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_SW_PLOAMD_OVERLAP_DROP_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_PLOAM_SEQ                      0xf5504cd0
#define XGPN_PLMP_PLOAM_SEQ_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bc                   :  8 ; /* bits 7:0 */
    ca_uint32_t uc                   :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_PLOAM_SEQ_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_ACK_BUSY_MIB                   0xf5504cd4
#define XGPN_PLMP_ACK_BUSY_MIB_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_ACK_BUSY_MIB_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PLMP_AMD_REG                        0xf5504cd8
#define XGPN_PLMP_AMD_REG_dft                    0x00010003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Cross_profile_en     :  1 ; /* bits 0:0 */
    ca_uint32_t SN_dbg_info_en       :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t SN_dbg_info          :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PLMP_AMD_REG_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* plmp */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_PLMP_CTRL_t                         CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_PLMP_DS_CTRL_t                      DS_CTRL;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_PLMP_RX_CAPTURE_t                   RX_CAPTURE;                    /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_PLMP_US_CTRL_t                      US_CTRL;                       /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_PLMP_VENDOR_ID_CFG_t                VENDOR_ID_CFG;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_PLMP_VSSN_CFG_t                     VSSN_CFG;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_PLMP_RAND_CFG_t                     RAND_CFG;                      /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_PLMP_CORRELATION_t                  CORRELATION;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_PLMP_US_PON_ID_t                    US_PON_ID;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_PLMP_CALIBRATION_EVEN_t             CALIBRATION_EVEN;              /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_PLMP_CALIBRATION_ODD_t              CALIBRATION_ODD;               /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_PLMP_TUNING_PARAMETER_t             TUNING_PARAMETER;              /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_PLMP_ATTENUATION_t                  ATTENUATION;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_PLMP_RGST_ID_CFG0_t                 RGST_ID_CFG0;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_PLMP_RGST_ID_CFG1_t                 RGST_ID_CFG1;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_PLMP_RGST_ID_CFG2_t                 RGST_ID_CFG2;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_PLMP_RGST_ID_CFG3_t                 RGST_ID_CFG3;                  /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_PLMP_RGST_ID_CFG4_t                 RGST_ID_CFG4;                  /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_PLMP_RGST_ID_CFG5_t                 RGST_ID_CFG5;                  /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  XGPN_PLMP_RGST_ID_CFG6_t                 RGST_ID_CFG6;                  /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  XGPN_PLMP_RGST_ID_CFG7_t                 RGST_ID_CFG7;                  /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  XGPN_PLMP_RGST_ID_CFG8_t                 RGST_ID_CFG8;                  /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  XGPN_PLMP_TUNING_CONFIG_t                TUNING_CONFIG;                 /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  XGPN_PLMP_SW_RESPONSE_t                  SW_RESPONSE;                   /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  XGPN_PLMP_EQD_THRSHLD_t                  EQD_THRSHLD;                   /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  XGPN_PLMP_ACK_PLOAM_NO_MSG0_t            ACK_PLOAM_NO_MSG0;             /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  XGPN_PLMP_ACK_PLOAM_NO_MSG1_t            ACK_PLOAM_NO_MSG1;             /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  XGPN_PLMP_ACK_PLOAM_BUSY_MSG_CFG_t       ACK_PLOAM_BUSY_MSG_CFG;        /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  XGPN_PLMP_ACK_PLOAM_BUSY_MSG0_t          ACK_PLOAM_BUSY_MSG0;           /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  XGPN_PLMP_ACK_PLOAM_BUSY_MSG1_t          ACK_PLOAM_BUSY_MSG1;           /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  XGPN_PLMP_PLOAM_CFG_t                    PLOAM_CFG;                     /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  XGPN_PLMP_PLOAM_CFG_DATA0_t              PLOAM_CFG_DATA0;               /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  XGPN_PLMP_PLOAM_CFG_DATA1_t              PLOAM_CFG_DATA1;               /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  XGPN_PLMP_PLOAM_CFG_DATA2_t              PLOAM_CFG_DATA2;               /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  XGPN_PLMP_PLOAM_CFG_DATA3_t              PLOAM_CFG_DATA3;               /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  XGPN_PLMP_PLOAM_CFG_DATA4_t              PLOAM_CFG_DATA4;               /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  XGPN_PLMP_PLOAM_CFG_DATA5_t              PLOAM_CFG_DATA5;               /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  XGPN_PLMP_PLOAM_CFG_DATA6_t              PLOAM_CFG_DATA6;               /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  XGPN_PLMP_PLOAM_CFG_DATA7_t              PLOAM_CFG_DATA7;               /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  XGPN_PLMP_PLOAM_CFG_DATA8_t              PLOAM_CFG_DATA8;               /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  XGPN_PLMP_KEY_EXCHG_THRSHD_t             KEY_EXCHG_THRSHD;              /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  XGPN_PLMP_INTERRUPT_t                    INTERRUPT;                     /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  XGPN_PLMP_INTERRUPTE0_t                  INTERRUPTE0;                   /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  XGPN_PLMP_INTERRUPTE1_t                  INTERRUPTE1;                   /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  XGPN_PLMP_MIB_SAT_INT_t                  MIB_SAT_INT;                   /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  XGPN_PLMP_MIB_SAT_INTE_t                 MIB_SAT_INTE;                  /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  XGPN_PLMP_KEY_CTRL_STAT_t                KEY_CTRL_STAT;                 /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  XGPN_PLMP_KEY_REPORT_t                   KEY_REPORT;                    /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  XGPN_PLMP_KEY_REPORT_FRAG0_t             KEY_REPORT_FRAG0;              /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  XGPN_PLMP_KEY_REPORT_FRAG1_t             KEY_REPORT_FRAG1;              /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  XGPN_PLMP_KEY_REPORT_FRAG2_t             KEY_REPORT_FRAG2;              /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  XGPN_PLMP_KEY_REPORT_FRAG3_t             KEY_REPORT_FRAG3;              /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  XGPN_PLMP_SLEEP_ALLOW_STAT_t             SLEEP_ALLOW_STAT;              /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  XGPN_PLMP_SLEEP_REQ_t                    SLEEP_REQ;                     /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  XGPN_PLMP_SW_ACK_t                       SW_ACK;                        /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  XGPN_PLMP_CH0_POWER_CONSUMPTION_t        CH0_POWER_CONSUMPTION;         /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  XGPN_PLMP_CH1_POWER_CONSUMPTION_t        CH1_POWER_CONSUMPTION;         /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  XGPN_PLMP_CH2_POWER_CONSUMPTION_t        CH2_POWER_CONSUMPTION;         /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  XGPN_PLMP_CH3_POWER_CONSUMPTION_t        CH3_POWER_CONSUMPTION;         /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  XGPN_PLMP_CH4_POWER_CONSUMPTION_t        CH4_POWER_CONSUMPTION;         /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  XGPN_PLMP_CH5_POWER_CONSUMPTION_t        CH5_POWER_CONSUMPTION;         /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  XGPN_PLMP_CH6_POWER_CONSUMPTION_t        CH6_POWER_CONSUMPTION;         /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  XGPN_PLMP_CH7_POWER_CONSUMPTION_t        CH7_POWER_CONSUMPTION;         /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  XGPN_PLMP_TXBUF_CTRL_t                   TXBUF_CTRL;                    /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  XGPN_PLMP_TXBUF_DATA0_t                  TXBUF_DATA0;                   /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  XGPN_PLMP_TXBUF_DATA1_t                  TXBUF_DATA1;                   /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  XGPN_PLMP_TXBUF_DATA2_t                  TXBUF_DATA2;                   /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  XGPN_PLMP_TXBUF_DATA3_t                  TXBUF_DATA3;                   /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  XGPN_PLMP_TXBUF_DATA4_t                  TXBUF_DATA4;                   /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  XGPN_PLMP_TXBUF_DATA5_t                  TXBUF_DATA5;                   /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  XGPN_PLMP_TXBUF_DATA6_t                  TXBUF_DATA6;                   /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  XGPN_PLMP_TXBUF_DATA7_t                  TXBUF_DATA7;                   /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  XGPN_PLMP_TXBUF_DATA8_t                  TXBUF_DATA8;                   /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  XGPN_PLMP_TXBUF_DATA9_t                  TXBUF_DATA9;                   /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  XGPN_PLMP_RXBUF0_STAT_t                  RXBUF0_STAT;                   /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  XGPN_PLMP_RXBUF1_STAT_t                  RXBUF1_STAT;                   /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[83];
  XGPN_PLMP_RXBUF_t                        RXBUF[24];                     /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd77[104];
  XGPN_PLMP_MIB_CTRL_t                     MIB_CTRL;                      /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd78[3];
  XGPN_PLMP_MIC_ERR_MIB_t                  MIC_ERR_MIB;                   /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd79[3];
  XGPN_PLMP_DS_RX_MIB_t                    DS_RX_MIB;                     /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd80[3];
  XGPN_PLMP_SYSTEM_PRFL_MIB_t              SYSTEM_PRFL_MIB;               /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd81[3];
  XGPN_PLMP_CHANNEL_PRFL_MIB_t             CHANNEL_PRFL_MIB;              /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd82[3];
  XGPN_PLMP_PRFL_MIB_t                     PRFL_MIB;                      /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd83[3];
  XGPN_PLMP_ASSGN_ONUID_MIB_t              ASSGN_ONUID_MIB;               /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd84[3];
  XGPN_PLMP_RANGING_TIME_MIB_t             RANGING_TIME_MIB;              /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd85[3];
  XGPN_PLMP_PROTECT_CTRL_MIB_t             PROTECT_CTRL_MIB;              /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd86[3];
  XGPN_PLMP_ADJ_TX_WVLN_MIB_t              ADJ_TX_WVLN_MIB;               /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd87[3];
  XGPN_PLMP_DEACTV_ONU_MIB_t               DEACTV_ONU_MIB;                /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd88[3];
  XGPN_PLMP_DISABLE_SN_MIB_t               DISABLE_SN_MIB;                /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd89[3];
  XGPN_PLMP_REQ_REGST_MIB_t                REQ_REGST_MIB;                 /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd90[3];
  XGPN_PLMP_ASSGN_ALLCTID_MIB_t            ASSGN_ALLCTID_MIB;             /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd91[3];
  XGPN_PLMP_KEY_CTRL_MIB_t                 KEY_CTRL_MIB;                  /* addr: 0x00000238 */
  ca_uint32_t                              rsrvd92[3];
  XGPN_PLMP_SLEEP_ALLW_MIB_t               SLEEP_ALLW_MIB;                /* addr: 0x0000023c */
  ca_uint32_t                              rsrvd93[3];
  XGPN_PLMP_TUNING_CTRL_REQ_MIB_t          TUNING_CTRL_REQ_MIB;           /* addr: 0x00000240 */
  ca_uint32_t                              rsrvd94[3];
  XGPN_PLMP_TUNING_CTRL_CMPLT_MIB_t        TUNING_CTRL_CMPLT_MIB;         /* addr: 0x00000244 */
  ca_uint32_t                              rsrvd95[3];
  XGPN_PLMP_CALIBRT_REQ_MIB_t              CALIBRT_REQ_MIB;               /* addr: 0x00000248 */
  ca_uint32_t                              rsrvd96[3];
  XGPN_PLMP_US_TX_MIB_t                    US_TX_MIB;                     /* addr: 0x0000024c */
  ca_uint32_t                              rsrvd97[3];
  XGPN_PLMP_SN_ONU_MIB_t                   SN_ONU_MIB;                    /* addr: 0x00000250 */
  ca_uint32_t                              rsrvd98[3];
  XGPN_PLMP_REGST_MIB_t                    REGST_MIB;                     /* addr: 0x00000254 */
  ca_uint32_t                              rsrvd99[3];
  XGPN_PLMP_ACK_MIB_t                      ACK_MIB;                       /* addr: 0x00000258 */
  ca_uint32_t                              rsrvd100[3];
  XGPN_PLMP_KEY_REPORT_MIB_t               KEY_REPORT_MIB;                /* addr: 0x0000025c */
  ca_uint32_t                              rsrvd101[3];
  XGPN_PLMP_SLEEP_REQ_MIB_t                SLEEP_REQ_MIB;                 /* addr: 0x00000260 */
  ca_uint32_t                              rsrvd102[3];
  XGPN_PLMP_TUN_REQ_RSP_MIB_t              TUN_REQ_RSP_MIB;               /* addr: 0x00000264 */
  ca_uint32_t                              rsrvd103[3];
  XGPN_PLMP_TUN_CMPLTU_MIB_t               TUN_CMPLTU_MIB;                /* addr: 0x00000268 */
  ca_uint32_t                              rsrvd104[3];
  XGPN_PLMP_PWR_CNSMPT_RPT_MIB_t           PWR_CNSMPT_RPT_MIB;            /* addr: 0x0000026c */
  ca_uint32_t                              rsrvd105[3];
  XGPN_PLMP_DEBUG_STS0_t                   DEBUG_STS0;                    /* addr: 0x00000270 */
  ca_uint32_t                              rsrvd106[3];
  XGPN_PLMP_DEBUG_STS1_t                   DEBUG_STS1;                    /* addr: 0x00000274 */
  ca_uint32_t                              rsrvd107[3];
  XGPN_PLMP_DEBUG_STS2_t                   DEBUG_STS2;                    /* addr: 0x00000278 */
  ca_uint32_t                              rsrvd108[3];
  XGPN_PLMP_BC_PLOAM_SEQ_t                 BC_PLOAM_SEQ;                  /* addr: 0x0000027c */
  ca_uint32_t                              rsrvd109[3];
  XGPN_PLMP_UC_PLOAM_SEQ_t                 UC_PLOAM_SEQ;                  /* addr: 0x00000280 */
  ca_uint32_t                              rsrvd110[3];
  XGPN_PLMP_BC_MSG_CNT_t                   BC_MSG_CNT;                    /* addr: 0x00000284 */
  ca_uint32_t                              rsrvd111[3];
  XGPN_PLMP_ENABLE_ONU_CNT_t               ENABLE_ONU_CNT;                /* addr: 0x00000288 */
  ca_uint32_t                              rsrvd112[3];
  XGPN_PLMP_UC_UPDT_PRFL_CNT_t             UC_UPDT_PRFL_CNT;              /* addr: 0x0000028c */
  ca_uint32_t                              rsrvd113[3];
  XGPN_PLMP_EXTENSION_CNT_t                EXTENSION_CNT;                 /* addr: 0x00000290 */
  ca_uint32_t                              rsrvd114[3];
  XGPN_PLMP_REGST_CNT_t                    REGST_CNT;                     /* addr: 0x00000294 */
  ca_uint32_t                              rsrvd115[3];
  XGPN_PLMP_ACK_OK_CNT_t                   ACK_OK_CNT;                    /* addr: 0x00000298 */
  ca_uint32_t                              rsrvd116[3];
  XGPN_PLMP_PLOAMD_ERR_CNT_t               PLOAMD_ERR_CNT;                /* addr: 0x0000029c */
  ca_uint32_t                              rsrvd117[3];
  XGPN_PLMP_DS_TX_CNT_t                    DS_TX_CNT;                     /* addr: 0x000002a0 */
  ca_uint32_t                              rsrvd118[3];
  XGPN_PLMP_DS_DROP_CNT_t                  DS_DROP_CNT;                   /* addr: 0x000002a4 */
  ca_uint32_t                              rsrvd119[3];
  XGPN_PLMP_RX_FF_DROP_CNT_t               RX_FF_DROP_CNT;                /* addr: 0x000002a8 */
  ca_uint32_t                              rsrvd120[3];
  XGPN_PLMP_EXTEN_DROP_CNT_t               EXTEN_DROP_CNT;                /* addr: 0x000002ac */
  ca_uint32_t                              rsrvd121[3];
  XGPN_PLMP_US_RX_CNT_t                    US_RX_CNT;                     /* addr: 0x000002b0 */
  ca_uint32_t                              rsrvd122[3];
  XGPN_PLMP_US_SW_TX_CNT_t                 US_SW_TX_CNT;                  /* addr: 0x000002b4 */
  ca_uint32_t                              rsrvd123[3];
  XGPN_PLMP_DS_SW_RX_CNT_t                 DS_SW_RX_CNT;                  /* addr: 0x000002b8 */
  ca_uint32_t                              rsrvd124[3];
  XGPN_PLMP_EXTENSION_MSG_TYPE_t           EXTENSION_MSG_TYPE;            /* addr: 0x000002bc */
  ca_uint32_t                              rsrvd125[3];
  XGPN_PLMP_PLOAM_PKT_GEN_FIFO_CTRL_t      PLOAM_PKT_GEN_FIFO_CTRL;       /* addr: 0x000002c0 */
  ca_uint32_t                              rsrvd126[3];
  XGPN_PLMP_PLOAM_MSG_DROP_CNTR_t          PLOAM_MSG_DROP_CNTR;           /* addr: 0x000002c4 */
  ca_uint32_t                              rsrvd127[3];
  XGPN_PLMP_SW_PLOAMD_FULL_DROP_MIB_t      SW_PLOAMD_FULL_DROP_MIB;       /* addr: 0x000002c8 */
  ca_uint32_t                              rsrvd128[3];
  XGPN_PLMP_SW_PLOAMD_OVERLAP_DROP_MIB_t   SW_PLOAMD_OVERLAP_DROP_MIB;    /* addr: 0x000002cc */
  ca_uint32_t                              rsrvd129[3];
  XGPN_PLMP_PLOAM_SEQ_t                    PLOAM_SEQ;                     /* addr: 0x000002d0 */
  ca_uint32_t                              rsrvd130[3];
  XGPN_PLMP_ACK_BUSY_MIB_t                 ACK_BUSY_MIB;                  /* addr: 0x000002d4 */
  ca_uint32_t                              rsrvd131[3];
  XGPN_PLMP_AMD_REG_t                      AMD_REG;                       /* addr: 0x000002d8 */
} APB7_XGPN_PLMP_t;
#endif /* !__ASSEMBLER__ */


/*
 * actp
 */

#define XGPN_ACTP_CTRL                           0xf5504d00
#define XGPN_ACTP_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sw_mode              :  1 ; /* bits 0:0 */
    ca_uint32_t sw_discard_all       :  1 ; /* bits 1:1 */
    ca_uint32_t sw_discard_brstpf    :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t response_threshold   :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t wlcp_enable          :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_SYNC_HUNT                      0xf5504d04
#define XGPN_ACTP_SYNC_HUNT_dft                  0x00000320

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_SYNC_HUNT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_TOZ                            0xf5504d08
#define XGPN_ACTP_TOZ_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_TOZ_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_TO1                            0xf5504d0c
#define XGPN_ACTP_TO1_dft                        0x00013880

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_TO1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_TO23                           0xf5504d10
#define XGPN_ACTP_TO23_dft                       0x00000320

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_TO23_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_TO4                            0xf5504d14
#define XGPN_ACTP_TO4_dft                        0x00013880

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_TO4_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_TO5                            0xf5504d18
#define XGPN_ACTP_TO5_dft                        0x00013880

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_TO5_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_INTERRUPT                      0xf5504d1c
#define XGPN_ACTP_INTERRUPT_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_state_change     :  1 ; /* bits 0:0 */
    ca_uint32_t hunt_sync_expire     :  1 ; /* bits 1:1 */
    ca_uint32_t profile_learning     :  1 ; /* bits 2:2 */
    ca_uint32_t tx_response_cross    :  1 ; /* bits 3:3 */
    ca_uint32_t O7_hunt_sync_expire  :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_INTERRUPTE0                    0xf5504d20
#define XGPN_ACTP_INTERRUPTE0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_state_changeE    :  1 ; /* bits 0:0 */
    ca_uint32_t hunt_sync_expireE    :  1 ; /* bits 1:1 */
    ca_uint32_t profile_learningE    :  1 ; /* bits 2:2 */
    ca_uint32_t tx_response_crossE   :  1 ; /* bits 3:3 */
    ca_uint32_t O7_hunt_sync_expireE :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_INTERRUPTE1                    0xf5504d24
#define XGPN_ACTP_INTERRUPTE1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_state_changeE    :  1 ; /* bits 0:0 */
    ca_uint32_t hunt_sync_expireE    :  1 ; /* bits 1:1 */
    ca_uint32_t profile_learningE    :  1 ; /* bits 2:2 */
    ca_uint32_t tx_response_crossE   :  1 ; /* bits 3:3 */
    ca_uint32_t O7_hunt_sync_expireE :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_ST_CHG_INT                     0xf5504d28
#define XGPN_ACTP_ST_CHG_INT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t deregst              :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t loss_sync            :  1 ; /* bits 6:6 */
    ca_uint32_t ds_synced            :  1 ; /* bits 7:7 */
    ca_uint32_t DWLCH_appropriate    :  1 ; /* bits 8:8 */
    ca_uint32_t DWLCH_inappropriate  :  1 ; /* bits 9:9 */
    ca_uint32_t disable_SN           :  1 ; /* bits 10:10 */
    ca_uint32_t deactivate_OID       :  1 ; /* bits 11:11 */
    ca_uint32_t assign_OID           :  1 ; /* bits 12:12 */
    ca_uint32_t calibr_req_mismatch  :  1 ; /* bits 13:13 */
    ca_uint32_t TOZ_expire           :  1 ; /* bits 14:14 */
    ca_uint32_t TO1_expire           :  1 ; /* bits 15:15 */
    ca_uint32_t assign_OID_inconsist :  1 ; /* bits 16:16 */
    ca_uint32_t assign_EqD           :  1 ; /* bits 17:17 */
    ca_uint32_t tuning_request_ack   :  1 ; /* bits 18:18 */
    ca_uint32_t tuning_request_tx    :  1 ; /* bits 19:19 */
    ca_uint32_t tuning_request_rx    :  1 ; /* bits 20:20 */
    ca_uint32_t enable_SN            :  1 ; /* bits 21:21 */
    ca_uint32_t us_tuning_confirm    :  1 ; /* bits 22:22 */
    ca_uint32_t TO2_expire           :  1 ; /* bits 23:23 */
    ca_uint32_t TO3_expire           :  1 ; /* bits 24:24 */
    ca_uint32_t TO4_expire           :  1 ; /* bits 25:25 */
    ca_uint32_t TO5_expire           :  1 ; /* bits 26:26 */
    ca_uint32_t ds_synced_O6         :  1 ; /* bits 27:27 */
    ca_uint32_t TO6_expire           :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_ST_CHG_INT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_ST_CHG_INTE                    0xf5504d2c
#define XGPN_ACTP_ST_CHG_INTE_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t deregstE             :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t loss_syncE           :  1 ; /* bits 6:6 */
    ca_uint32_t ds_syncedE           :  1 ; /* bits 7:7 */
    ca_uint32_t DWLCH_appropriateE   :  1 ; /* bits 8:8 */
    ca_uint32_t DWLCH_inappropriateE :  1 ; /* bits 9:9 */
    ca_uint32_t disable_SNE          :  1 ; /* bits 10:10 */
    ca_uint32_t deactivate_OIDE      :  1 ; /* bits 11:11 */
    ca_uint32_t assign_OIDE          :  1 ; /* bits 12:12 */
    ca_uint32_t calibr_req_mismatchE :  1 ; /* bits 13:13 */
    ca_uint32_t TOZ_expireE          :  1 ; /* bits 14:14 */
    ca_uint32_t TO1_expireE          :  1 ; /* bits 15:15 */
    ca_uint32_t assign_OID_inconsistE :  1 ; /* bits 16:16 */
    ca_uint32_t assign_EqDE          :  1 ; /* bits 17:17 */
    ca_uint32_t tuning_request_ackE  :  1 ; /* bits 18:18 */
    ca_uint32_t tuning_request_txE   :  1 ; /* bits 19:19 */
    ca_uint32_t tuning_request_rxE   :  1 ; /* bits 20:20 */
    ca_uint32_t enable_SNE           :  1 ; /* bits 21:21 */
    ca_uint32_t us_tuning_confirmE   :  1 ; /* bits 22:22 */
    ca_uint32_t TO2_expireE          :  1 ; /* bits 23:23 */
    ca_uint32_t TO3_expireE          :  1 ; /* bits 24:24 */
    ca_uint32_t TO4_expireE          :  1 ; /* bits 25:25 */
    ca_uint32_t TO5_expireE          :  1 ; /* bits 26:26 */
    ca_uint32_t ds_synced_O6E        :  1 ; /* bits 27:27 */
    ca_uint32_t TO6_expireE          :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd3               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_ST_CHG_INTE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_STS                            0xf5504d30
#define XGPN_ACTP_STS_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_state            :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t onu_sub_state        :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t previous_onu_state   :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t previous_sub_state   :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t profile_learning     :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd5               :  6 ;
    ca_uint32_t rx_optical_tuning    :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd6               :  3 ;
    ca_uint32_t tx_optical_tuning    :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd7               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_DEREG_STS                      0xf5504d34
#define XGPN_ACTP_DEREG_STS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_state            :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_DEREG_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_AMD_REG                        0xf5504d38
#define XGPN_ACTP_AMD_REG_dft                    0x00000006

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TO6_enable           :  1 ; /* bits 0:0 */
    ca_uint32_t TO4_rollback_enable  :  1 ; /* bits 1:1 */
    ca_uint32_t TO5_rollback_enable  :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_AMD_REG_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_ACTP_TO6                            0xf5504d3c
#define XGPN_ACTP_TO6_dft                        0x00013880

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t threshold            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_ACTP_TO6_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* actp */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_ACTP_CTRL_t                         CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_ACTP_SYNC_HUNT_t                    SYNC_HUNT;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_ACTP_TOZ_t                          TOZ;                           /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_ACTP_TO1_t                          TO1;                           /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_ACTP_TO23_t                         TO23;                          /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_ACTP_TO4_t                          TO4;                           /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_ACTP_TO5_t                          TO5;                           /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_ACTP_INTERRUPT_t                    INTERRUPT;                     /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_ACTP_INTERRUPTE0_t                  INTERRUPTE0;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_ACTP_INTERRUPTE1_t                  INTERRUPTE1;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_ACTP_ST_CHG_INT_t                   ST_CHG_INT;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_ACTP_ST_CHG_INTE_t                  ST_CHG_INTE;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_ACTP_STS_t                          STS;                           /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_ACTP_DEREG_STS_t                    DEREG_STS;                     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_ACTP_AMD_REG_t                      AMD_REG;                       /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_ACTP_TO6_t                          TO6;                           /* addr: 0x0000003c */
} APB7_XGPN_ACTP_t;
#endif /* !__ASSEMBLER__ */


/*
 * xgfec
 */

#define XGPN_XGFEC_RXINT                         0xf5504d80
#define XGPN_XGFEC_RXINT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CorrByteMsb          :  1 ; /* bits 0:0 */
    ca_uint32_t CorrCodeMsb          :  1 ; /* bits 1:1 */
    ca_uint32_t UncorCodeMsb         :  1 ; /* bits 2:2 */
    ca_uint32_t TotalCodeMsb         :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t CorrByteSat          :  1 ; /* bits 16:16 */
    ca_uint32_t CorrCodeSat          :  1 ; /* bits 17:17 */
    ca_uint32_t UncorCodeSat         :  1 ; /* bits 18:18 */
    ca_uint32_t TotalCodeSat         :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_RXINT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_RXINTE0                       0xf5504d84
#define XGPN_XGFEC_RXINTE0_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CorrByteMsbE         :  1 ; /* bits 0:0 */
    ca_uint32_t CorrCodeMsbE         :  1 ; /* bits 1:1 */
    ca_uint32_t UncorCodeMsbE        :  1 ; /* bits 2:2 */
    ca_uint32_t TotalCodeMsbE        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t CorrByteSatE         :  1 ; /* bits 16:16 */
    ca_uint32_t CorrCodeSatE         :  1 ; /* bits 17:17 */
    ca_uint32_t UncorCodeSatE        :  1 ; /* bits 18:18 */
    ca_uint32_t TotalCodeSatE        :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_RXINTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_RXINTE1                       0xf5504d88
#define XGPN_XGFEC_RXINTE1_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CorrByteMsbE         :  1 ; /* bits 0:0 */
    ca_uint32_t CorrCodeMsbE         :  1 ; /* bits 1:1 */
    ca_uint32_t UncorCodeMsbE        :  1 ; /* bits 2:2 */
    ca_uint32_t TotalCodeMsbE        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t CorrByteSatE         :  1 ; /* bits 16:16 */
    ca_uint32_t CorrCodeSatE         :  1 ; /* bits 17:17 */
    ca_uint32_t UncorCodeSatE        :  1 ; /* bits 18:18 */
    ca_uint32_t TotalCodeSatE        :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd2               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_RXINTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FECCORRBYTE                   0xf5504d8c
#define XGPN_XGFEC_FECCORRBYTE_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FECCORRBYTE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FECTOTALCODE                  0xf5504d90
#define XGPN_XGFEC_FECTOTALCODE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FECTOTALCODE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FECCORRCODE                   0xf5504d94
#define XGPN_XGFEC_FECCORRCODE_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FECCORRCODE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FECUNCORCODE                  0xf5504d98
#define XGPN_XGFEC_FECUNCORCODE_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FECUNCORCODE_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FECCNTRL                      0xf5504d9c
#define XGPN_XGFEC_FECCNTRL_dft                  0x00080000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t fec_dec_corr_disable :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rx_fec_bypass_delay_mode :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FECCNTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_TXDISFEC                      0xf5504da0
#define XGPN_XGFEC_TXDISFEC_dft                  0x0001f000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t disableFEC           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t swap_before_fec_encoder :  1 ; /* bits 2:2 */
    ca_uint32_t swap_after_fec_encoder :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t error_inject_count   :  4 ; /* bits 15:12 */
    ca_uint32_t tx_fec_bypass_delay_mode :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_TXDISFEC_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FEC_MASK_MEM_SW_ACCESS        0xf5504da4
#define XGPN_XGFEC_FEC_MASK_MEM_SW_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MASK_MEM_ADDR        :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t w_rdn                :  1 ; /* bits 30:30 */
    ca_uint32_t ACCESS               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FEC_MASK_MEM_SW_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FEC_MASK_MEM_SW_DATA          0xf5504da8
#define XGPN_XGFEC_FEC_MASK_MEM_SW_DATA_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MASK_MEM_DATA        : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FEC_MASK_MEM_SW_DATA_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_XGFEC_FEC_ERROR_INJECT              0xf5504dac
#define XGPN_XGFEC_FEC_ERROR_INJECT_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_XGFEC_FEC_ERROR_INJECT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgfec */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_XGFEC_RXINT_t                       RXINT;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_XGFEC_RXINTE0_t                     RXINTE0;                       /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_XGFEC_RXINTE1_t                     RXINTE1;                       /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_XGFEC_FECCORRBYTE_t                 FECCORRBYTE;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_XGFEC_FECTOTALCODE_t                FECTOTALCODE;                  /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_XGFEC_FECCORRCODE_t                 FECCORRCODE;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_XGFEC_FECUNCORCODE_t                FECUNCORCODE;                  /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_XGFEC_FECCNTRL_t                    FECCNTRL;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_XGFEC_TXDISFEC_t                    TXDISFEC;                      /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_XGFEC_FEC_MASK_MEM_SW_ACCESS_t      FEC_MASK_MEM_SW_ACCESS;        /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_XGFEC_FEC_MASK_MEM_SW_DATA_t        FEC_MASK_MEM_SW_DATA;          /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_XGFEC_FEC_ERROR_INJECT_t            FEC_ERROR_INJECT;              /* addr: 0x0000002c */
} APB7_XGPN_XGFEC_t;
#endif /* !__ASSEMBLER__ */


/*
 * aes_plmp
 */

#define XGPN_AES_PLMP_GBL_CTRL                   0xf5504e00
#define XGPN_AES_PLMP_GBL_CTRL_dft               0x00000050

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key_len              :  5 ; /* bits 4:0 */
    ca_uint32_t msk_reg_id_src_sel   :  1 ; /* bits 5:5 */
    ca_uint32_t key_hw_mode          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t sma_mode             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_GBL_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_SUBKEY_CTRL                0xf5504e04
#define XGPN_AES_PLMP_SUBKEY_CTRL_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gene_st              :  1 ; /* bits 0:0 */
    ca_uint32_t sk_sw_st             :  1 ; /* bits 1:1 */
    ca_uint32_t ik_sw_st             :  1 ; /* bits 2:2 */
    ca_uint32_t mic_k12_sw_st        :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_SUBKEY_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_INTERRUPT                  0xf5504e08
#define XGPN_AES_PLMP_INTERRUPT_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req_nokey_intI       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_INTERRUPTE0                0xf5504e0c
#define XGPN_AES_PLMP_INTERRUPTE0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req_nokey_intIE      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_INTERRUPTE1                0xf5504e10
#define XGPN_AES_PLMP_INTERRUPTE1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req_nokey_intIE      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MSK3_STS                   0xf5504e14
#define XGPN_AES_PLMP_MSK3_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MSK3_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MSK2_STS                   0xf5504e18
#define XGPN_AES_PLMP_MSK2_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MSK2_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MSK1_STS                   0xf5504e1c
#define XGPN_AES_PLMP_MSK1_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MSK1_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MSK0_STS                   0xf5504e20
#define XGPN_AES_PLMP_MSK0_STS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MSK0_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_SK3_STS                    0xf5504e24
#define XGPN_AES_PLMP_SK3_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_SK3_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_SK2_STS                    0xf5504e28
#define XGPN_AES_PLMP_SK2_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_SK2_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_SK1_STS                    0xf5504e2c
#define XGPN_AES_PLMP_SK1_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_SK1_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_SK0_STS                    0xf5504e30
#define XGPN_AES_PLMP_SK0_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_SK0_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_IK3_STS                    0xf5504e34
#define XGPN_AES_PLMP_IK3_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_IK3_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_IK2_STS                    0xf5504e38
#define XGPN_AES_PLMP_IK2_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_IK2_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_IK1_STS                    0xf5504e3c
#define XGPN_AES_PLMP_IK1_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_IK1_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_IK0_STS                    0xf5504e40
#define XGPN_AES_PLMP_IK0_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_IK0_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MIC3_K1_STS                0xf5504e44
#define XGPN_AES_PLMP_MIC3_K1_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MIC3_K1_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MIC2_K1_STS                0xf5504e48
#define XGPN_AES_PLMP_MIC2_K1_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MIC2_K1_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MIC1_K1_STS                0xf5504e4c
#define XGPN_AES_PLMP_MIC1_K1_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MIC1_K1_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_PLMP_MIC0_K1_STS                0xf5504e50
#define XGPN_AES_PLMP_MIC0_K1_STS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_PLMP_MIC0_K1_STS_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* aes_plmp */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_AES_PLMP_GBL_CTRL_t                 GBL_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_AES_PLMP_SUBKEY_CTRL_t              SUBKEY_CTRL;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_AES_PLMP_INTERRUPT_t                INTERRUPT;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_AES_PLMP_INTERRUPTE0_t              INTERRUPTE0;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_AES_PLMP_INTERRUPTE1_t              INTERRUPTE1;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_AES_PLMP_MSK3_STS_t                 MSK3_STS;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_AES_PLMP_MSK2_STS_t                 MSK2_STS;                      /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_AES_PLMP_MSK1_STS_t                 MSK1_STS;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_AES_PLMP_MSK0_STS_t                 MSK0_STS;                      /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_AES_PLMP_SK3_STS_t                  SK3_STS;                       /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_AES_PLMP_SK2_STS_t                  SK2_STS;                       /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_AES_PLMP_SK1_STS_t                  SK1_STS;                       /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_AES_PLMP_SK0_STS_t                  SK0_STS;                       /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_AES_PLMP_IK3_STS_t                  IK3_STS;                       /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_AES_PLMP_IK2_STS_t                  IK2_STS;                       /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_AES_PLMP_IK1_STS_t                  IK1_STS;                       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_AES_PLMP_IK0_STS_t                  IK0_STS;                       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_AES_PLMP_MIC3_K1_STS_t              MIC3_K1_STS;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_AES_PLMP_MIC2_K1_STS_t              MIC2_K1_STS;                   /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  XGPN_AES_PLMP_MIC1_K1_STS_t              MIC1_K1_STS;                   /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  XGPN_AES_PLMP_MIC0_K1_STS_t              MIC0_K1_STS;                   /* addr: 0x00000050 */
} APB7_XGPN_AES_PLMP_t;
#endif /* !__ASSEMBLER__ */


/*
 * aes
 */

#define XGPN_AES_UC_KEY03                        0xf5504f00
#define XGPN_AES_UC_KEY03_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY03_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY02                        0xf5504f04
#define XGPN_AES_UC_KEY02_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY02_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY01                        0xf5504f08
#define XGPN_AES_UC_KEY01_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY01_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY00                        0xf5504f0c
#define XGPN_AES_UC_KEY00_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY00_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY13                        0xf5504f10
#define XGPN_AES_UC_KEY13_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY13_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY12                        0xf5504f14
#define XGPN_AES_UC_KEY12_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY12_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY11                        0xf5504f18
#define XGPN_AES_UC_KEY11_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY11_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_UC_KEY10                        0xf5504f1c
#define XGPN_AES_UC_KEY10_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_UC_KEY10_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY03                        0xf5504f20
#define XGPN_AES_MC_KEY03_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY03_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY02                        0xf5504f24
#define XGPN_AES_MC_KEY02_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY02_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY01                        0xf5504f28
#define XGPN_AES_MC_KEY01_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY01_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY00                        0xf5504f2c
#define XGPN_AES_MC_KEY00_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY00_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY13                        0xf5504f30
#define XGPN_AES_MC_KEY13_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY13_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY12                        0xf5504f34
#define XGPN_AES_MC_KEY12_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY12_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY11                        0xf5504f38
#define XGPN_AES_MC_KEY11_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY11_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_MC_KEY10                        0xf5504f3c
#define XGPN_AES_MC_KEY10_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_MC_KEY10_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_INTERRUPT                       0xf5504f40
#define XGPN_AES_INTERRUPT_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t us_aescore_nofree_intI :  1 ; /* bits 0:0 */
    ca_uint32_t ds_aescore_nofree_intI :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_INTERRUPTE0                     0xf5504f44
#define XGPN_AES_INTERRUPTE0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t us_aescore_nofree_intIE :  1 ; /* bits 0:0 */
    ca_uint32_t ds_aescore_nofree_intIE :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_AES_INTERRUPTE1                     0xf5504f48
#define XGPN_AES_INTERRUPTE1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t us_aescore_nofree_intIE :  1 ; /* bits 0:0 */
    ca_uint32_t ds_aescore_nofree_intIE :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_AES_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* aes */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_AES_UC_KEY03_t                      UC_KEY03;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_AES_UC_KEY02_t                      UC_KEY02;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_AES_UC_KEY01_t                      UC_KEY01;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_AES_UC_KEY00_t                      UC_KEY00;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_AES_UC_KEY13_t                      UC_KEY13;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_AES_UC_KEY12_t                      UC_KEY12;                      /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_AES_UC_KEY11_t                      UC_KEY11;                      /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_AES_UC_KEY10_t                      UC_KEY10;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_AES_MC_KEY03_t                      MC_KEY03;                      /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_AES_MC_KEY02_t                      MC_KEY02;                      /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_AES_MC_KEY01_t                      MC_KEY01;                      /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_AES_MC_KEY00_t                      MC_KEY00;                      /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_AES_MC_KEY13_t                      MC_KEY13;                      /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  XGPN_AES_MC_KEY12_t                      MC_KEY12;                      /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  XGPN_AES_MC_KEY11_t                      MC_KEY11;                      /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  XGPN_AES_MC_KEY10_t                      MC_KEY10;                      /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  XGPN_AES_INTERRUPT_t                     INTERRUPT;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  XGPN_AES_INTERRUPTE0_t                   INTERRUPTE0;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  XGPN_AES_INTERRUPTE1_t                   INTERRUPTE1;                   /* addr: 0x00000048 */
} APB7_XGPN_AES_t;
#endif /* !__ASSEMBLER__ */


/*
 * rxctl
 */

#define XGPN_RXCTL_rx_port                       0xf5504f80
#define XGPN_RXCTL_rx_port_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spid                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_rx_port_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_rx_pkt_ctl                    0xf5504f84
#define XGPN_RXCTL_rx_pkt_ctl_dft                0x2008007f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t frame_oversize_drop_en :  1 ; /* bits 0:0 */
    ca_uint32_t frame_runt_drop_en   :  1 ; /* bits 1:1 */
    ca_uint32_t frame_length_mismatch_drop_en :  1 ; /* bits 2:2 */
    ca_uint32_t frame_fcs_error_drop_en :  1 ; /* bits 3:3 */
    ca_uint32_t frame_ffoverflow_drop_en :  1 ; /* bits 4:4 */
    ca_uint32_t fragment_drop_en     :  1 ; /* bits 5:5 */
    ca_uint32_t omci_runt_drop_en    :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t drop_ptp_pkt_type    : 10 ; /* bits 17:8 */
    ca_uint32_t ptp_da_en            :  1 ; /* bits 18:18 */
    ca_uint32_t ptp_mode_sel         :  1 ; /* bits 19:19 */
    ca_uint32_t ptp_ing_ts_cmp       :  5 ; /* bits 24:20 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t cripple_frame_drop_en :  1 ; /* bits 28:28 */
    ca_uint32_t omci_pad_en          :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd3               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_rx_pkt_ctl_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_ptp_lay1                      0xf5504f88
#define XGPN_RXCTL_ptp_lay1_dft                  0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan0                : 16 ; /* bits 15:0 */
    ca_uint32_t vlan1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_ptp_lay1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_ptp_lay2                      0xf5504f8c
#define XGPN_RXCTL_ptp_lay2_dft                  0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vlan0                : 16 ; /* bits 15:0 */
    ca_uint32_t vlan1                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_ptp_lay2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_INTERRUPT                     0xf5504f90
#define XGPN_RXCTL_INTERRUPT_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t discarded_frames_msbi :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ff_overflow          :  1 ; /* bits 8:8 */
    ca_uint32_t ing_ptp_pkt_rptI     :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t frame_oversize_drop  :  1 ; /* bits 16:16 */
    ca_uint32_t frame_runt_drop      :  1 ; /* bits 17:17 */
    ca_uint32_t frame_length_mismatch_drop :  1 ; /* bits 18:18 */
    ca_uint32_t frame_fcs_error_drop :  1 ; /* bits 19:19 */
    ca_uint32_t frame_ffoverflow_drop :  1 ; /* bits 20:20 */
    ca_uint32_t fragment_drop        :  1 ; /* bits 21:21 */
    ca_uint32_t omci_runt_drop       :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd3               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_INTERRUPTE0                   0xf5504f94
#define XGPN_RXCTL_INTERRUPTE0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t discarded_frames_msbiE :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ff_overflowE         :  1 ; /* bits 8:8 */
    ca_uint32_t ing_ptp_pkt_rptIE    :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t frame_oversize_dropE :  1 ; /* bits 16:16 */
    ca_uint32_t frame_runt_dropE     :  1 ; /* bits 17:17 */
    ca_uint32_t frame_length_mismatch_dropE :  1 ; /* bits 18:18 */
    ca_uint32_t frame_fcs_error_dropE :  1 ; /* bits 19:19 */
    ca_uint32_t frame_ffoverflow_dropE :  1 ; /* bits 20:20 */
    ca_uint32_t fragment_dropE       :  1 ; /* bits 21:21 */
    ca_uint32_t omci_runt_dropE      :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd3               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_INTERRUPTE0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_INTERRUPTE1                   0xf5504f98
#define XGPN_RXCTL_INTERRUPTE1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t discarded_frames_msbiE :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t ff_overflowE         :  1 ; /* bits 8:8 */
    ca_uint32_t ing_ptp_pkt_rptIE    :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t frame_oversize_dropE :  1 ; /* bits 16:16 */
    ca_uint32_t frame_runt_dropE     :  1 ; /* bits 17:17 */
    ca_uint32_t frame_length_mismatch_dropE :  1 ; /* bits 18:18 */
    ca_uint32_t frame_fcs_error_dropE :  1 ; /* bits 19:19 */
    ca_uint32_t frame_ffoverflow_dropE :  1 ; /* bits 20:20 */
    ca_uint32_t fragment_dropE       :  1 ; /* bits 21:21 */
    ca_uint32_t omci_runt_dropE      :  1 ; /* bits 22:22 */
    ca_uint32_t rsrvd3               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_INTERRUPTE1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_ptp_status0                   0xf5504f9c
#define XGPN_RXCTL_ptp_status0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ts                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_ptp_status0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_ptp_status1                   0xf5504fa0
#define XGPN_RXCTL_ptp_status1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_ptp_status1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_discarded_frames              0xf5504fa4
#define XGPN_RXCTL_discarded_frames_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_discarded_frames_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_rc_status1                    0xf5504fa8
#define XGPN_RXCTL_rc_status1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rcff_pktnum          :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_rc_status1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_rc_status2                    0xf5504fac
#define XGPN_RXCTL_rc_status2_dft                0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ff                   :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_rc_status2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_RXCTL_usbg_dbg                      0xf5504fb0
#define XGPN_RXCTL_usbg_dbg_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t state                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_RXCTL_usbg_dbg_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rxctl */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_RXCTL_rx_port_t                     rx_port;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_RXCTL_rx_pkt_ctl_t                  rx_pkt_ctl;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_RXCTL_ptp_lay1_t                    ptp_lay1;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_RXCTL_ptp_lay2_t                    ptp_lay2;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_RXCTL_INTERRUPT_t                   INTERRUPT;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_RXCTL_INTERRUPTE0_t                 INTERRUPTE0;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_RXCTL_INTERRUPTE1_t                 INTERRUPTE1;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  XGPN_RXCTL_ptp_status0_t                 ptp_status0;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  XGPN_RXCTL_ptp_status1_t                 ptp_status1;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  XGPN_RXCTL_discarded_frames_t            discarded_frames;              /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  XGPN_RXCTL_rc_status1_t                  rc_status1;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  XGPN_RXCTL_rc_status2_t                  rc_status2;                    /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  XGPN_RXCTL_usbg_dbg_t                    usbg_dbg;                      /* addr: 0x00000030 */
} APB7_XGPN_RXCTL_t;
#endif /* !__ASSEMBLER__ */


/*
 * pucif
 */

#define XGPN_PUCIF_CTRL                          0xf5504fe0
#define XGPN_PUCIF_CTRL_dft                      0x1040a100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr_tconid          :  5 ; /* bits 4:0 */
    ca_uint32_t cntr_tconid_en       :  1 ; /* bits 5:5 */
    ca_uint32_t cntr0_event_sel      :  3 ; /* bits 8:6 */
    ca_uint32_t cntr1_event_sel      :  3 ; /* bits 11:9 */
    ca_uint32_t cntr2_event_sel      :  3 ; /* bits 14:12 */
    ca_uint32_t single_thread        :  1 ; /* bits 15:15 */
    ca_uint32_t sch_to_threshold     : 12 ; /* bits 27:16 */
    ca_uint32_t sch_early_end        :  1 ; /* bits 28:28 */
    ca_uint32_t cntr_inccfg          :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PUCIF_CNTR0                         0xf5504fe4
#define XGPN_PUCIF_CNTR0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_CNTR0_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PUCIF_CNTR1                         0xf5504fe8
#define XGPN_PUCIF_CNTR1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_CNTR1_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PUCIF_CNTR2                         0xf5504fec
#define XGPN_PUCIF_CNTR2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_CNTR2_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PUCIF_STS                           0xf5504ff0
#define XGPN_PUCIF_STS_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sch_tconid           :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t data_tconid          :  5 ; /* bits 12:8 */
    ca_uint32_t data_gemid           :  8 ; /* bits 20:13 */
    ca_uint32_t rsrvd2               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_STS_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PUCIF_PROTECT                       0xf5504ff4
#define XGPN_PUCIF_PROTECT_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucif_hang           :  1 ; /* bits 0:0 */
    ca_uint32_t pucif_hang_tcon_id   :  5 ; /* bits 5:1 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_PROTECT_t;
#endif /* !__ASSEMBLER__ */


#define XGPN_PUCIF_CTRL1                         0xf5504ff8
#define XGPN_PUCIF_CTRL1_dft                     0x0000003a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t afifo_thresh_hi      :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} XGPN_PUCIF_CTRL1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pucif */
#ifndef __ASSEMBLER__
typedef struct {
  XGPN_PUCIF_CTRL_t                        CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  XGPN_PUCIF_CNTR0_t                       CNTR0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  XGPN_PUCIF_CNTR1_t                       CNTR1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  XGPN_PUCIF_CNTR2_t                       CNTR2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  XGPN_PUCIF_STS_t                         STS;                           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  XGPN_PUCIF_PROTECT_t                     PROTECT;                       /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  XGPN_PUCIF_CTRL1_t                       CTRL1;                         /* addr: 0x00000018 */
} APB7_XGPN_PUCIF_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGPN */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_XGPN_XGPN_GLB_t            xgpn_glb;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[211];
  APB7_XGPN_DSFP_t                dsfp;                          /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd2[667];
  APB7_XGPN_USBG_t                usbg;                          /* addr: 0x00000600 */
  ca_uint32_t                              rsrvd3[399];
  APB7_XGPN_BWMP_t                bwmp;                          /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd4[437];
  APB7_XGPN_PLMP_t                plmp;                          /* addr: 0x00000a00 */
  ca_uint32_t                              rsrvd5[403];
  APB7_XGPN_ACTP_t                actp;                          /* addr: 0x00000d00 */
  ca_uint32_t                              rsrvd6[97];
  APB7_XGPN_XGFEC_t               xgfec;                         /* addr: 0x00000d80 */
  ca_uint32_t                              rsrvd7[105];
  APB7_XGPN_AES_PLMP_t            aes_plmp;                      /* addr: 0x00000e00 */
  ca_uint32_t                              rsrvd8[215];
  APB7_XGPN_AES_t                 aes;                           /* addr: 0x00000f00 */
  ca_uint32_t                              rsrvd9[91];
  APB7_XGPN_RXCTL_t               rxctl;                         /* addr: 0x00000f80 */
  ca_uint32_t                              rsrvd10[71];
  APB7_XGPN_PUCIF_t               pucif;                         /* addr: 0x00000fe0 */
} APB7_XGPN_t;
#endif /* !__ASSEMBLER__ */


/*
 * GPON_MAC
 */

/*
 * gpon
 */

#define GPON_MAC_GPON_ds                         0xf5506000
#define GPON_MAC_GPON_ds_dft                     0x3a983352

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pre_sync_threshold   :  4 ; /* bits 3:0 */
    ca_uint32_t miss_sync_threshold  :  4 ; /* bits 7:4 */
    ca_uint32_t los_timer_threshold  :  4 ; /* bits 11:8 */
    ca_uint32_t fec_switch_threshold :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t max_packet_size      : 14 ; /* bits 29:16 */
    ca_uint32_t tag_exclude          :  1 ; /* bits 30:30 */
    ca_uint32_t stop_gpn_fe          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_act                        0xf5506004
#define GPON_MAC_GPON_act_dft                    0x32013880

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t to1_timer_threshold  : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t to2_timer_threshold  : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_act_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_sn                         0xf5506008
#define GPON_MAC_GPON_sn_dft                     0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req_threshold        :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rspnd_extend         :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_sn_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_us                         0xf550600c
#define GPON_MAC_GPON_us_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t frame_var            :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t eqd_select           :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_us_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_signal                     0xf5506010
#define GPON_MAC_GPON_signal_dft                 0x00003333

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fail_threshold       :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fail_remove_threshold :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t degrade_threshold    :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t degrade_remove_threshold :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_signal_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_vendor                     0xf5506014
#define GPON_MAC_GPON_vendor_dft                 0x20202020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_vendor_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_vendor_spec                0xf5506018
#define GPON_MAC_GPON_vendor_spec_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sn                   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_vendor_spec_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_pfrag0                     0xf550601c
#define GPON_MAC_GPON_pfrag0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t password             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_pfrag0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_pfrag1                     0xf5506020
#define GPON_MAC_GPON_pfrag1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t password             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_pfrag1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_pfrag2                     0xf5506024
#define GPON_MAC_GPON_pfrag2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t password             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_pfrag2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_power_down                 0xf5506028
#define GPON_MAC_GPON_power_down_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t on                   :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_power_down_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ploamd_ctrl                0xf550602c
#define GPON_MAC_GPON_ploamd_ctrl_dft            0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hw_key_switch        :  1 ; /* bits 0:0 */
    ca_uint32_t dying_gasp_extra     :  2 ; /* bits 2:1 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t key_index0           :  8 ; /* bits 23:16 */
    ca_uint32_t key_index1           :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ploamd_ctrl_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key0_frag0                 0xf5506030
#define GPON_MAC_GPON_key0_frag0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key0_frag0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key0_frag1                 0xf5506034
#define GPON_MAC_GPON_key0_frag1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key0_frag1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key0_frag2                 0xf5506038
#define GPON_MAC_GPON_key0_frag2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key0_frag2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key0_frag3                 0xf550603c
#define GPON_MAC_GPON_key0_frag3_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key0_frag3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key1_frag0                 0xf5506040
#define GPON_MAC_GPON_key1_frag0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key1_frag0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key1_frag1                 0xf5506044
#define GPON_MAC_GPON_key1_frag1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key1_frag1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key1_frag2                 0xf5506048
#define GPON_MAC_GPON_key1_frag2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key1_frag2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key1_frag3                 0xf550604c
#define GPON_MAC_GPON_key1_frag3_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t aes                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key1_frag3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_override                   0xf5506050
#define GPON_MAC_GPON_override_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t onu_state            :  3 ; /* bits 2:0 */
    ca_uint32_t onu_state_override   :  1 ; /* bits 3:3 */
    ca_uint32_t onu_state_hold       :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_override_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_onu_pst                    0xf5506054
#define GPON_MAC_GPON_onu_pst_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t line_num             :  1 ; /* bits 15:15 */
    ca_uint32_t k1                   :  8 ; /* bits 23:16 */
    ca_uint32_t k2                   :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_onu_pst_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bip_error                  0xf5506058
#define GPON_MAC_GPON_bip_error_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bip_error_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bip_error_accum            0xf550605c
#define GPON_MAC_GPON_bip_error_accum_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bip_error_accum_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bip_error_frame_count      0xf5506060
#define GPON_MAC_GPON_bip_error_frame_count_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bip_error_frame_count_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ds_omci_gem                0xf5506064
#define GPON_MAC_GPON_ds_omci_gem_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_omci_gem_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ds_omci_pkt                0xf5506068
#define GPON_MAC_GPON_ds_omci_pkt_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_omci_pkt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ds_pkt_crc                 0xf550606c
#define GPON_MAC_GPON_ds_pkt_crc_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_pkt_crc_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ds_udrsz_pkt               0xf5506070
#define GPON_MAC_GPON_ds_udrsz_pkt_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_udrsz_pkt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ds_ovrsz_pkt               0xf5506074
#define GPON_MAC_GPON_ds_ovrsz_pkt_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_ovrsz_pkt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ploamu                     0xf5506078
#define GPON_MAC_GPON_ploamu_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sn_rdm_dly           : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t rei_seq_num          :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t key_pointer          :  1 ; /* bits 24:24 */
    ca_uint32_t req_key_mask         :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd3               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ploamu_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_alarm                      0xf550607c
#define GPON_MAC_GPON_alarm_dft                  0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t los                  :  1 ; /* bits 0:0 */
    ca_uint32_t lof                  :  1 ; /* bits 1:1 */
    ca_uint32_t sf                   :  1 ; /* bits 2:2 */
    ca_uint32_t sd                   :  1 ; /* bits 3:3 */
    ca_uint32_t lcdg                 :  1 ; /* bits 4:4 */
    ca_uint32_t tf                   :  1 ; /* bits 5:5 */
    ca_uint32_t suf                  :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t dact                 :  1 ; /* bits 8:8 */
    ca_uint32_t dis                  :  1 ; /* bits 9:9 */
    ca_uint32_t mis                  :  1 ; /* bits 10:10 */
    ca_uint32_t pee                  :  1 ; /* bits 11:11 */
    ca_uint32_t rdi                  :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_alarm_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_int_sts                    0xf5506080
#define GPON_MAC_GPON_int_sts_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ploam_drop           :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_int_sts_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_interrupt_top              0xf5506084
#define GPON_MAC_GPON_interrupt_top_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INTERRUPTi           :  1 ; /* bits 0:0 */
    ca_uint32_t INTERRUPT2i          :  1 ; /* bits 1:1 */
    ca_uint32_t INTERRUPT3i          :  1 ; /* bits 2:2 */
    ca_uint32_t INTERRUPT4i          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_interrupt_top_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_int_top_en                 0xf5506088
#define GPON_MAC_GPON_int_top_en_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t INTERRUPTe           :  1 ; /* bits 0:0 */
    ca_uint32_t INTERRUPT2e          :  1 ; /* bits 1:1 */
    ca_uint32_t INTERRUPT3e          :  1 ; /* bits 2:2 */
    ca_uint32_t INTERRUPT4e          :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_int_top_en_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_interrupt                  0xf550608c
#define GPON_MAC_GPON_interrupt_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LOSi                 :  1 ; /* bits 0:0 */
    ca_uint32_t LOFi                 :  1 ; /* bits 1:1 */
    ca_uint32_t SFi                  :  1 ; /* bits 2:2 */
    ca_uint32_t SDi                  :  1 ; /* bits 3:3 */
    ca_uint32_t LCDGi                :  1 ; /* bits 4:4 */
    ca_uint32_t TFi                  :  1 ; /* bits 5:5 */
    ca_uint32_t SUFi                 :  1 ; /* bits 6:6 */
    ca_uint32_t MEMi                 :  1 ; /* bits 7:7 */
    ca_uint32_t DACTi                :  1 ; /* bits 8:8 */
    ca_uint32_t DISi                 :  1 ; /* bits 9:9 */
    ca_uint32_t MISi                 :  1 ; /* bits 10:10 */
    ca_uint32_t PEEi                 :  1 ; /* bits 11:11 */
    ca_uint32_t RDIi                 :  1 ; /* bits 12:12 */
    ca_uint32_t POPUPi               :  1 ; /* bits 13:13 */
    ca_uint32_t DS_FEC_ONi           :  1 ; /* bits 14:14 */
    ca_uint32_t DS_FEC_OFFi          :  1 ; /* bits 15:15 */
    ca_uint32_t ALLOCIDi             :  1 ; /* bits 16:16 */
    ca_uint32_t PORTIDi              :  1 ; /* bits 17:17 */
    ca_uint32_t CPLi                 :  1 ; /* bits 18:18 */
    ca_uint32_t KSWi                 :  1 ; /* bits 19:19 */
    ca_uint32_t PDROPi               :  1 ; /* bits 20:20 */
    ca_uint32_t HPLOAMUi             :  1 ; /* bits 21:21 */
    ca_uint32_t UNSYNCi              :  1 ; /* bits 22:22 */
    ca_uint32_t LF_UNDERi            :  1 ; /* bits 23:23 */
    ca_uint32_t DS_PKTi              :  1 ; /* bits 24:24 */
    ca_uint32_t DS_FRMi              :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ONU_IDi              :  1 ; /* bits 30:30 */
    ca_uint32_t ONU_ST_CHGi          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_interrupt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_int_en                     0xf5506090
#define GPON_MAC_GPON_int_en_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LOSe                 :  1 ; /* bits 0:0 */
    ca_uint32_t LOFe                 :  1 ; /* bits 1:1 */
    ca_uint32_t SFe                  :  1 ; /* bits 2:2 */
    ca_uint32_t SDe                  :  1 ; /* bits 3:3 */
    ca_uint32_t LCDGe                :  1 ; /* bits 4:4 */
    ca_uint32_t TFe                  :  1 ; /* bits 5:5 */
    ca_uint32_t SUFe                 :  1 ; /* bits 6:6 */
    ca_uint32_t MEMe                 :  1 ; /* bits 7:7 */
    ca_uint32_t DACTe                :  1 ; /* bits 8:8 */
    ca_uint32_t DISe                 :  1 ; /* bits 9:9 */
    ca_uint32_t MISe                 :  1 ; /* bits 10:10 */
    ca_uint32_t PEEe                 :  1 ; /* bits 11:11 */
    ca_uint32_t RDIe                 :  1 ; /* bits 12:12 */
    ca_uint32_t POPUPe               :  1 ; /* bits 13:13 */
    ca_uint32_t DS_FEC_ONe           :  1 ; /* bits 14:14 */
    ca_uint32_t DS_FEC_OFFe          :  1 ; /* bits 15:15 */
    ca_uint32_t ALLOCIDe             :  1 ; /* bits 16:16 */
    ca_uint32_t PORTIDe              :  1 ; /* bits 17:17 */
    ca_uint32_t CPLe                 :  1 ; /* bits 18:18 */
    ca_uint32_t KSWe                 :  1 ; /* bits 19:19 */
    ca_uint32_t PDROPe               :  1 ; /* bits 20:20 */
    ca_uint32_t HPLOAMUe             :  1 ; /* bits 21:21 */
    ca_uint32_t UNSYNCe              :  1 ; /* bits 22:22 */
    ca_uint32_t LF_UNDERe            :  1 ; /* bits 23:23 */
    ca_uint32_t DS_PKTe              :  1 ; /* bits 24:24 */
    ca_uint32_t DS_FRMe              :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t ONU_IDe              :  1 ; /* bits 30:30 */
    ca_uint32_t ONU_ST_CHGe          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_int_en_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_interrupt2                 0xf5506094
#define GPON_MAC_GPON_interrupt2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BAD_ONU_IDi          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t UFRAMEREQ_SECi       :  1 ; /* bits 26:26 */
    ca_uint32_t UFRAMEREQ_DEDi       :  1 ; /* bits 27:27 */
    ca_uint32_t TCPARSE_SECi         :  1 ; /* bits 28:28 */
    ca_uint32_t TCPARSE_DEDi         :  1 ; /* bits 29:29 */
    ca_uint32_t TCREQUE_SECi         :  1 ; /* bits 30:30 */
    ca_uint32_t TCREQUE_DEDi         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_interrupt2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_int2_en                    0xf5506098
#define GPON_MAC_GPON_int2_en_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BAD_ONU_IDe          :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t UFRAMEREQ_SECe       :  1 ; /* bits 26:26 */
    ca_uint32_t UFRAMEREQ_DEDe       :  1 ; /* bits 27:27 */
    ca_uint32_t TCPARSE_SECe         :  1 ; /* bits 28:28 */
    ca_uint32_t TCPARSE_DEDe         :  1 ; /* bits 29:29 */
    ca_uint32_t TCREQUE_SECe         :  1 ; /* bits 30:30 */
    ca_uint32_t TCREQUE_DEDe         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_int2_en_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_interrupt3                 0xf550609c
#define GPON_MAC_GPON_interrupt3_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LOSi                 :  1 ; /* bits 0:0 */
    ca_uint32_t LOFi                 :  1 ; /* bits 1:1 */
    ca_uint32_t SFi                  :  1 ; /* bits 2:2 */
    ca_uint32_t SDi                  :  1 ; /* bits 3:3 */
    ca_uint32_t LCDGi                :  1 ; /* bits 4:4 */
    ca_uint32_t TFi                  :  1 ; /* bits 5:5 */
    ca_uint32_t SUFi                 :  1 ; /* bits 6:6 */
    ca_uint32_t US_OMCC_cnt_msbi     :  1 ; /* bits 7:7 */
    ca_uint32_t DACTi                :  1 ; /* bits 8:8 */
    ca_uint32_t DISi                 :  1 ; /* bits 9:9 */
    ca_uint32_t MISi                 :  1 ; /* bits 10:10 */
    ca_uint32_t PEEi                 :  1 ; /* bits 11:11 */
    ca_uint32_t RDIi                 :  1 ; /* bits 12:12 */
    ca_uint32_t bwmap_corrected_biterr_msbi :  1 ; /* bits 13:13 */
    ca_uint32_t BWMAP_HWDONEi        :  1 ; /* bits 14:14 */
    ca_uint32_t ds_ovrsz_pkt_msbi    :  1 ; /* bits 15:15 */
    ca_uint32_t ds_udrsz_pkt_msbi    :  1 ; /* bits 16:16 */
    ca_uint32_t ds_pkt_crc_msbi      :  1 ; /* bits 17:17 */
    ca_uint32_t ds_omci_pkt_msbi     :  1 ; /* bits 18:18 */
    ca_uint32_t ds_omci_gem_msbi     :  1 ; /* bits 19:19 */
    ca_uint32_t bip_error_accum_msbi :  1 ; /* bits 20:20 */
    ca_uint32_t bip_error_frame_count_msbi :  1 ; /* bits 21:21 */
    ca_uint32_t plend_biterr_msbi    :  1 ; /* bits 22:22 */
    ca_uint32_t plend_err_msbi       :  1 ; /* bits 23:23 */
    ca_uint32_t omci_crc_msbi        :  1 ; /* bits 24:24 */
    ca_uint32_t bwmap_uncorrected_biterr_msbi :  1 ; /* bits 25:25 */
    ca_uint32_t o5_msbi              :  1 ; /* bits 26:26 */
    ca_uint32_t gem_frag_drop_msbi   :  1 ; /* bits 27:27 */
    ca_uint32_t gem_one_biterr_msbi  :  1 ; /* bits 28:28 */
    ca_uint32_t gem_two_biterr_msbi  :  1 ; /* bits 29:29 */
    ca_uint32_t gem_uncorrected_biterr_msbi :  1 ; /* bits 30:30 */
    ca_uint32_t bwmap_drop_msbi      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_interrupt3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_int3_en                    0xf55060a0
#define GPON_MAC_GPON_int3_en_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t LOSe                 :  1 ; /* bits 0:0 */
    ca_uint32_t LOFe                 :  1 ; /* bits 1:1 */
    ca_uint32_t SFe                  :  1 ; /* bits 2:2 */
    ca_uint32_t SDe                  :  1 ; /* bits 3:3 */
    ca_uint32_t LCDGe                :  1 ; /* bits 4:4 */
    ca_uint32_t TFe                  :  1 ; /* bits 5:5 */
    ca_uint32_t SUFe                 :  1 ; /* bits 6:6 */
    ca_uint32_t US_OMCC_cnt_msbe     :  1 ; /* bits 7:7 */
    ca_uint32_t DACTe                :  1 ; /* bits 8:8 */
    ca_uint32_t DISe                 :  1 ; /* bits 9:9 */
    ca_uint32_t MISe                 :  1 ; /* bits 10:10 */
    ca_uint32_t PEEe                 :  1 ; /* bits 11:11 */
    ca_uint32_t RDIe                 :  1 ; /* bits 12:12 */
    ca_uint32_t bwmap_corrected_biterr_msbe :  1 ; /* bits 13:13 */
    ca_uint32_t BWMAP_HWDONEe        :  1 ; /* bits 14:14 */
    ca_uint32_t ds_ovrsz_pkt_msbe    :  1 ; /* bits 15:15 */
    ca_uint32_t ds_udrsz_pkt_msbe    :  1 ; /* bits 16:16 */
    ca_uint32_t ds_pkt_crc_msbe      :  1 ; /* bits 17:17 */
    ca_uint32_t ds_omci_pkt_msbe     :  1 ; /* bits 18:18 */
    ca_uint32_t ds_omci_gem_msbe     :  1 ; /* bits 19:19 */
    ca_uint32_t bip_error_accum_msbe :  1 ; /* bits 20:20 */
    ca_uint32_t bip_error_frame_count_msbe :  1 ; /* bits 21:21 */
    ca_uint32_t plend_biterr_msbe    :  1 ; /* bits 22:22 */
    ca_uint32_t plend_err_msbe       :  1 ; /* bits 23:23 */
    ca_uint32_t omci_crc_msbe        :  1 ; /* bits 24:24 */
    ca_uint32_t bwmap_uncorrected_biterr_msbe :  1 ; /* bits 25:25 */
    ca_uint32_t o5_msbe              :  1 ; /* bits 26:26 */
    ca_uint32_t gem_frag_drop_msbe   :  1 ; /* bits 27:27 */
    ca_uint32_t gem_one_biterr_msbe  :  1 ; /* bits 28:28 */
    ca_uint32_t gem_two_biterr_msbe  :  1 ; /* bits 29:29 */
    ca_uint32_t gem_uncorrected_biterr_msbe :  1 ; /* bits 30:30 */
    ca_uint32_t bwmap_drop_msbe      :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_int3_en_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_interrupt4                 0xf55060a4
#define GPON_MAC_GPON_interrupt4_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fec_corr_blk_cntmsbi :  1 ; /* bits 0:0 */
    ca_uint32_t fec_uncorr_blk_cntmsbi :  1 ; /* bits 1:1 */
    ca_uint32_t fec_noerr_blk_cntmsbi :  1 ; /* bits 2:2 */
    ca_uint32_t fec_tot_blk_cntmsbi  :  1 ; /* bits 3:3 */
    ca_uint32_t fec_corr_byt_cntmsbi :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_interrupt4_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_int4_en                    0xf55060a8
#define GPON_MAC_GPON_int4_en_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fec_corr_blk_cntmsbe :  1 ; /* bits 0:0 */
    ca_uint32_t fec_uncorr_blk_cntmsbe :  1 ; /* bits 1:1 */
    ca_uint32_t fec_noerr_blk_cntmsbe :  1 ; /* bits 2:2 */
    ca_uint32_t fec_tot_blk_cntmsbe  :  1 ; /* bits 3:3 */
    ca_uint32_t fec_corr_byt_cntmsbe :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_int4_en_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bits                       0xf55060ac
#define GPON_MAC_GPON_bits_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t guard                :  8 ; /* bits 7:0 */
    ca_uint32_t t1_preamble          :  8 ; /* bits 15:8 */
    ca_uint32_t t2_preamble          :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bits_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_pattern                    0xf55060b0
#define GPON_MAC_GPON_pattern_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t t3_preamble          :  8 ; /* bits 7:0 */
    ca_uint32_t delimiter            : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_pattern_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_sn_acquire                 0xf55060b4
#define GPON_MAC_GPON_sn_acquire_dft             0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mask_en              :  1 ; /* bits 0:0 */
    ca_uint32_t en                   :  1 ; /* bits 1:1 */
    ca_uint32_t extra                :  2 ; /* bits 3:2 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_sn_acquire_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_pre_assign                 0xf55060b8
#define GPON_MAC_GPON_pre_assign_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eqd                  : 16 ; /* bits 15:0 */
    ca_uint32_t eqd_en               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_pre_assign_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_onu                        0xf55060bc
#define GPON_MAC_GPON_onu_dft                    0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id                   :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t state                :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t gpn_fe_mask          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t power_level          :  2 ; /* bits 29:28 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_onu_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_main                       0xf55060c0
#define GPON_MAC_GPON_main_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eqd                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_main_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_protection                 0xf55060c4
#define GPON_MAC_GPON_protection_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t eqd                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_protection_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_omci_port                  0xf55060c8
#define GPON_MAC_GPON_omci_port_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id                   : 12 ; /* bits 11:0 */
    ca_uint32_t en                   :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_omci_port_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_olt_pst                    0xf55060cc
#define GPON_MAC_GPON_olt_pst_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t line_num             :  1 ; /* bits 15:15 */
    ca_uint32_t k1                   :  8 ; /* bits 23:16 */
    ca_uint32_t k2                   :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_olt_pst_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ber                        0xf55060d0
#define GPON_MAC_GPON_ber_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t interval             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ber_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_key_switching              0xf55060d4
#define GPON_MAC_GPON_key_switching_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t time                 : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_key_switching_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_t3_preamble                0xf55060d8
#define GPON_MAC_GPON_t3_preamble_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pre_range            :  8 ; /* bits 7:0 */
    ca_uint32_t ranged               :  8 ; /* bits 15:8 */
    ca_uint32_t extend               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_t3_preamble_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_superframe                 0xf55060dc
#define GPON_MAC_GPON_superframe_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter              : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_superframe_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_hi_ploamu                  0xf55060e0
#define GPON_MAC_GPON_hi_ploamu_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t req                  :  1 ; /* bits 0:0 */
    ca_uint32_t reqd                 :  1 ; /* bits 1:1 */
    ca_uint32_t reqd_ignore_state    :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_hi_ploamu_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_hi_ploamu0                 0xf55060e4
#define GPON_MAC_GPON_hi_ploamu0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t message              :  8 ; /* bits 7:0 */
    ca_uint32_t onu                  :  8 ; /* bits 15:8 */
    ca_uint32_t data                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_hi_ploamu0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_hi_ploamu1                 0xf55060e8
#define GPON_MAC_GPON_hi_ploamu1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_hi_ploamu1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_hi_ploamu2                 0xf55060ec
#define GPON_MAC_GPON_hi_ploamu2_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_hi_ploamu2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_panic                      0xf55060f0
#define GPON_MAC_GPON_panic_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t state                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_panic_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMD_FF_CTL              0xf55060f4
#define GPON_MAC_GPON_PLOAMD_FF_CTL_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pop                  :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMD_FF_CTL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMD_FIFO3               0xf55060f8
#define GPON_MAC_GPON_PLOAMD_FIFO3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data3                :  8 ; /* bits 7:0 */
    ca_uint32_t entry3               :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMD_FIFO3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMD_FIFO2               0xf55060fc
#define GPON_MAC_GPON_PLOAMD_FIFO2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMD_FIFO2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMD_FIFO1               0xf5506100
#define GPON_MAC_GPON_PLOAMD_FIFO1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMD_FIFO1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMD_FIFO0               0xf5506104
#define GPON_MAC_GPON_PLOAMD_FIFO0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMD_FIFO0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMU_STS2                0xf5506108
#define GPON_MAC_GPON_PLOAMU_STS2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t message2             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMU_STS2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMU_STS1                0xf550610c
#define GPON_MAC_GPON_PLOAMU_STS1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t message1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMU_STS1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLOAMU_STS0                0xf5506110
#define GPON_MAC_GPON_PLOAMU_STS0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t message0             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLOAMU_STS0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_onu_ctl                    0xf5506114
#define GPON_MAC_GPON_onu_ctl_dft                0x00460060

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t no_up                :  1 ; /* bits 0:0 */
    ca_uint32_t en                   :  1 ; /* bits 1:1 */
    ca_uint32_t stop                 :  1 ; /* bits 2:2 */
    ca_uint32_t omcc_padding         :  1 ; /* bits 3:3 */
    ca_uint32_t dpath_rst            :  1 ; /* bits 4:4 */
    ca_uint32_t aes_en               :  1 ; /* bits 5:5 */
    ca_uint32_t ploam_crc_en         :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pm_mode              :  2 ; /* bits 9:8 */
    ca_uint32_t plen_match           :  1 ; /* bits 10:10 */
    ca_uint32_t stop_us_wr           :  1 ; /* bits 11:11 */
    ca_uint32_t stop_hw_plu          :  1 ; /* bits 12:12 */
    ca_uint32_t sleep_mode           :  2 ; /* bits 14:13 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sch_lead_time        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_onu_ctl_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_onu_cfg                    0xf5506118
#define GPON_MAC_GPON_onu_cfg_dft                0x00100780

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t omci_crc_dis         :  1 ; /* bits 0:0 */
    ca_uint32_t us_scramb_dis        :  1 ; /* bits 1:1 */
    ca_uint32_t ds_scramb_dis        :  1 ; /* bits 2:2 */
    ca_uint32_t dbru_blk_size        :  3 ; /* bits 5:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t laser_pre_bias       :  5 ; /* bits 11:7 */
    ca_uint32_t laser_on             :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t plmd_ff_wr_ext       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t deactive_flush_en    :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t laser_on_align       :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_onu_cfg_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ploamd_disable             0xf550611c
#define GPON_MAC_GPON_ploamd_disable_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mask                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ploamd_disable_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ploamd_fifo_wr             0xf5506120
#define GPON_MAC_GPON_ploamd_fifo_wr_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mask                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ploamd_fifo_wr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ploamu_disable             0xf5506124
#define GPON_MAC_GPON_ploamu_disable_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mask                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ploamu_disable_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_PROCESS                 0xf5506128
#define GPON_MAC_GPON_DS_PROCESS_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  8 ;
    ca_uint32_t cfm_check_da         :  1 ; /* bits 8:8 */
    ca_uint32_t ptp_check_da         :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t cfm_en               :  4 ; /* bits 15:12 */
    ca_uint32_t ptp_en               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_PROCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_TCONT_ACCESS               0xf550612c
#define GPON_MAC_GPON_TCONT_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t alloc_id             : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sw_plm_en            :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 13 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_TCONT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_TCONT_DATA                 0xf5506130
#define GPON_MAC_GPON_TCONT_DATA_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ploam_en             :  1 ; /* bits 0:0 */
    ca_uint32_t omci_en              :  1 ; /* bits 1:1 */
    ca_uint32_t index                :  5 ; /* bits 6:2 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_TCONT_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_GEM_PORT_ACCESS         0xf5506134
#define GPON_MAC_GPON_DS_GEM_PORT_ACCESS_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id                   : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t sw_aes               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 13 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_GEM_PORT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_GEM_PORT_DATA           0xf5506138
#define GPON_MAC_GPON_DS_GEM_PORT_DATA_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vld                  :  1 ; /* bits 0:0 */
    ca_uint32_t aes                  :  1 ; /* bits 1:1 */
    ca_uint32_t tdm                  :  1 ; /* bits 2:2 */
    ca_uint32_t index                :  8 ; /* bits 10:3 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_GEM_PORT_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_PORT_ACCESS             0xf550613c
#define GPON_MAC_GPON_DS_PORT_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_PORT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_PORT_DATA3              0xf5506140
#define GPON_MAC_GPON_DS_PORT_DATA3_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_PORT_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_PORT_DATA2              0xf5506144
#define GPON_MAC_GPON_DS_PORT_DATA2_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_PORT_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_PORT_DATA1              0xf5506148
#define GPON_MAC_GPON_DS_PORT_DATA1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_PORT_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DS_PORT_DATA0              0xf550614c
#define GPON_MAC_GPON_DS_PORT_DATA0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DS_PORT_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_MIB_ACCESS              0xf5506150
#define GPON_MAC_GPON_US_MIB_ACCESS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 20 ;
    ca_uint32_t op_code              :  2 ; /* bits 29:28 */
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_MIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_MIB_DATA3               0xf5506154
#define GPON_MAC_GPON_US_MIB_DATA3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_MIB_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_MIB_DATA2               0xf5506158
#define GPON_MAC_GPON_US_MIB_DATA2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_MIB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_MIB_DATA1               0xf550615c
#define GPON_MAC_GPON_US_MIB_DATA1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_MIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_MIB_DATA0               0xf5506160
#define GPON_MAC_GPON_US_MIB_DATA0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_MIB_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_PLM_MIB_ACCESS             0xf5506164
#define GPON_MAC_GPON_PLM_MIB_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t op_code              :  2 ; /* bits 29:28 */
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLM_MIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define     sel_PLMuID00Cnt                               0x0
#define     sel_PLMuIDffCnt                               0xff
#define     sel_PLMdID00Cnt                               0x100
#define     sel_PLMdIDffCnt                               0x1ff
#define     sel_PLMdCRCERRCnt                             0x200

#define GPON_MAC_GPON_PLM_MIB_DATA               0xf5506168
#define GPON_MAC_GPON_PLM_MIB_DATA_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_PLM_MIB_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_MIB_INIT                   0xf550616c
#define GPON_MAC_GPON_MIB_INIT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t us                   :  1 ; /* bits 0:0 */
    ca_uint32_t ds                   :  1 ; /* bits 1:1 */
    ca_uint32_t plm                  :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_MIB_INIT_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_PORT_ID_ACCESS          0xf5506170
#define GPON_MAC_GPON_US_PORT_ID_ACCESS_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_PORT_ID_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_US_PORT_ID_DATA            0xf5506174
#define GPON_MAC_GPON_US_PORT_ID_DATA_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t id                   : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_US_PORT_ID_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bwmap_ctl                  0xf5506178
#define GPON_MAC_GPON_bwmap_ctl_dft              0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t enable               :  1 ; /* bits 0:0 */
    ca_uint32_t mode                 :  1 ; /* bits 1:1 */
    ca_uint32_t hwdone               :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t count                :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bwmap_ctl_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bwmap_data0                0xf550617c
#define GPON_MAC_GPON_bwmap_data0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bwmap_data0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bwmap_data1                0xf5506180
#define GPON_MAC_GPON_bwmap_data1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bwmap_data1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_up                         0xf5506184
#define GPON_MAC_GPON_up_dft                     0x0000f000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gpf_low_threshold    :  8 ; /* bits 7:0 */
    ca_uint32_t gpf_high_threshold   :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_up_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_o5                         0xf5506188
#define GPON_MAC_GPON_o5_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_o5_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_gem_frag_drop              0xf550618c
#define GPON_MAC_GPON_gem_frag_drop_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_gem_frag_drop_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_gem_one_biterr             0xf5506190
#define GPON_MAC_GPON_gem_one_biterr_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_gem_one_biterr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_gem_two_biterr             0xf5506194
#define GPON_MAC_GPON_gem_two_biterr_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_gem_two_biterr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_gem_uncorrected_biterr     0xf5506198
#define GPON_MAC_GPON_gem_uncorrected_biterr_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_gem_uncorrected_biterr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bwmap_drop                 0xf550619c
#define GPON_MAC_GPON_bwmap_drop_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bwmap_drop_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_omci_crc                   0xf55061a0
#define GPON_MAC_GPON_omci_crc_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_omci_crc_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_plend_err                  0xf55061a4
#define GPON_MAC_GPON_plend_err_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_plend_err_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_plend_biterr               0xf55061a8
#define GPON_MAC_GPON_plend_biterr_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_plend_biterr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_ds_asmbl_fifo_drop_cnt     0xf55061ac
#define GPON_MAC_GPON_ds_asmbl_fifo_drop_cnt_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t drop_cnt             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_ds_asmbl_fifo_drop_cnt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bypass                     0xf55061b0
#define GPON_MAC_GPON_bypass_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t omci_cos             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t omci_dpid            :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t ptp_cos              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t ptp_dpid             :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t sw_cos               :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t sw_dpid              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t sw_en                :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd7               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bypass_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_sw_dbru                    0xf55061b4
#define GPON_MAC_GPON_sw_dbru_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 16 ; /* bits 15:0 */
    ca_uint32_t enble                :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t tcon_residue_en      :  1 ; /* bits 30:30 */
    ca_uint32_t bufocc_mode          :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_sw_dbru_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_scratch                    0xf55061b8
#define GPON_MAC_GPON_scratch_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t scratch              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_scratch_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DBRU_BUFOCC_TBL_ACCESS     0xf55061bc
#define GPON_MAC_GPON_DBRU_BUFOCC_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Addr                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t Select               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 13 ;
    ca_uint32_t rw                   :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DBRU_BUFOCC_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DBRU_BUFOCC_TBL_DATA       0xf55061c0
#define GPON_MAC_GPON_DBRU_BUFOCC_TBL_DATA_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t BufOcc               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DBRU_BUFOCC_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_CTRL                       0xf55061c4
#define GPON_MAC_GPON_CTRL_dft                   0x00430000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 16 ;
    ca_uint32_t sw_random_en         :  1 ; /* bits 16:16 */
    ca_uint32_t pti_omci             :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t mapper_contiguous_frame_no_wait_stt :  1 ; /* bits 22:22 */
    ca_uint32_t mapper_frame_no_wait_stt :  1 ; /* bits 23:23 */
    ca_uint32_t flush_id             :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sw_reset_pmac        :  1 ; /* bits 30:30 */
    ca_uint32_t flush_en             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SUPER_FRAME_MATCH_VAL      0xf55061c8
#define GPON_MAC_GPON_SUPER_FRAME_MATCH_VAL_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sfc                  : 30 ; /* bits 29:0 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SUPER_FRAME_MATCH_VAL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DEBUG_CTRL                 0xf55061cc
#define GPON_MAC_GPON_DEBUG_CTRL_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DEBUG_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DEBUG_STATUS0              0xf55061d0
#define GPON_MAC_GPON_DEBUG_STATUS0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DEBUG_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_DEBUG_STATUS1              0xf55061d4
#define GPON_MAC_GPON_DEBUG_STATUS1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_DEBUG_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bwmap_uncorrected_biterr   0xf55061d8
#define GPON_MAC_GPON_bwmap_uncorrected_biterr_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bwmap_uncorrected_biterr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_bwmap_corrected_biterr     0xf55061dc
#define GPON_MAC_GPON_bwmap_corrected_biterr_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t count                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_bwmap_corrected_biterr_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_us_omcc_cnt                0xf55061e0
#define GPON_MAC_GPON_us_omcc_cnt_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_us_omcc_cnt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_0        0xf55061e4
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_0_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_1        0xf55061e8
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_1_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_2        0xf55061ec
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_2_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_3        0xf55061f0
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_3_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_4        0xf55061f4
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_4_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_4_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_5        0xf55061f8
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_5_dft    0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rm2                  :  4 ; /* bits 19:16 */
    ca_uint32_t rme2                 :  1 ; /* bits 20:20 */
    ca_uint32_t test2                :  1 ; /* bits 21:21 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rm3                  :  4 ; /* bits 27:24 */
    ca_uint32_t rme3                 :  1 ; /* bits 28:28 */
    ca_uint32_t test3                :  1 ; /* bits 29:29 */
    ca_uint32_t rsrvd4               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_5_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_GPON_SRAM_TEST_CONTROL_6        0xf55061fc
#define GPON_MAC_GPON_SRAM_TEST_CONTROL_6_dft    0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rm0                  :  4 ; /* bits 3:0 */
    ca_uint32_t rme0                 :  1 ; /* bits 4:4 */
    ca_uint32_t test0                :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rm1                  :  4 ; /* bits 11:8 */
    ca_uint32_t rme1                 :  1 ; /* bits 12:12 */
    ca_uint32_t test1                :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_GPON_SRAM_TEST_CONTROL_6_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* gpon */
#ifndef __ASSEMBLER__
typedef struct {
  GPON_MAC_GPON_ds_t                       ds;                            /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  GPON_MAC_GPON_act_t                      act;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  GPON_MAC_GPON_sn_t                       sn;                            /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  GPON_MAC_GPON_us_t                       us;                            /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  GPON_MAC_GPON_signal_t                   signal;                        /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  GPON_MAC_GPON_vendor_t                   vendor;                        /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  GPON_MAC_GPON_vendor_spec_t              vendor_spec;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  GPON_MAC_GPON_pfrag0_t                   pfrag0;                        /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  GPON_MAC_GPON_pfrag1_t                   pfrag1;                        /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  GPON_MAC_GPON_pfrag2_t                   pfrag2;                        /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  GPON_MAC_GPON_power_down_t               power_down;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  GPON_MAC_GPON_ploamd_ctrl_t              ploamd_ctrl;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  GPON_MAC_GPON_key0_frag0_t               key0_frag0;                    /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  GPON_MAC_GPON_key0_frag1_t               key0_frag1;                    /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  GPON_MAC_GPON_key0_frag2_t               key0_frag2;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  GPON_MAC_GPON_key0_frag3_t               key0_frag3;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  GPON_MAC_GPON_key1_frag0_t               key1_frag0;                    /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  GPON_MAC_GPON_key1_frag1_t               key1_frag1;                    /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  GPON_MAC_GPON_key1_frag2_t               key1_frag2;                    /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  GPON_MAC_GPON_key1_frag3_t               key1_frag3;                    /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  GPON_MAC_GPON_override_t                 override;                      /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  GPON_MAC_GPON_onu_pst_t                  onu_pst;                       /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  GPON_MAC_GPON_bip_error_t                bip_error;                     /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  GPON_MAC_GPON_bip_error_accum_t          bip_error_accum;               /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  GPON_MAC_GPON_bip_error_frame_count_t    bip_error_frame_count;         /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  GPON_MAC_GPON_ds_omci_gem_t              ds_omci_gem;                   /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  GPON_MAC_GPON_ds_omci_pkt_t              ds_omci_pkt;                   /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  GPON_MAC_GPON_ds_pkt_crc_t               ds_pkt_crc;                    /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  GPON_MAC_GPON_ds_udrsz_pkt_t             ds_udrsz_pkt;                  /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  GPON_MAC_GPON_ds_ovrsz_pkt_t             ds_ovrsz_pkt;                  /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  GPON_MAC_GPON_ploamu_t                   ploamu;                        /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  GPON_MAC_GPON_alarm_t                    alarm;                         /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  GPON_MAC_GPON_int_sts_t                  int_sts;                       /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  GPON_MAC_GPON_interrupt_top_t            interrupt_top;                 /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  GPON_MAC_GPON_int_top_en_t               int_top_en;                    /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  GPON_MAC_GPON_interrupt_t                interrupt;                     /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  GPON_MAC_GPON_int_en_t                   int_en;                        /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  GPON_MAC_GPON_interrupt2_t               interrupt2;                    /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  GPON_MAC_GPON_int2_en_t                  int2_en;                       /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  GPON_MAC_GPON_interrupt3_t               interrupt3;                    /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  GPON_MAC_GPON_int3_en_t                  int3_en;                       /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  GPON_MAC_GPON_interrupt4_t               interrupt4;                    /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  GPON_MAC_GPON_int4_en_t                  int4_en;                       /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  GPON_MAC_GPON_bits_t                     bits;                          /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  GPON_MAC_GPON_pattern_t                  pattern;                       /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  GPON_MAC_GPON_sn_acquire_t               sn_acquire;                    /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  GPON_MAC_GPON_pre_assign_t               pre_assign;                    /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  GPON_MAC_GPON_onu_t                      onu;                           /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  GPON_MAC_GPON_main_t                     main;                          /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  GPON_MAC_GPON_protection_t               protection;                    /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  GPON_MAC_GPON_omci_port_t                omci_port;                     /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  GPON_MAC_GPON_olt_pst_t                  olt_pst;                       /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  GPON_MAC_GPON_ber_t                      ber;                           /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  GPON_MAC_GPON_key_switching_t            key_switching;                 /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  GPON_MAC_GPON_t3_preamble_t              t3_preamble;                   /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  GPON_MAC_GPON_superframe_t               superframe;                    /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  GPON_MAC_GPON_hi_ploamu_t                hi_ploamu;                     /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  GPON_MAC_GPON_hi_ploamu0_t               hi_ploamu0;                    /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  GPON_MAC_GPON_hi_ploamu1_t               hi_ploamu1;                    /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  GPON_MAC_GPON_hi_ploamu2_t               hi_ploamu2;                    /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  GPON_MAC_GPON_panic_t                    panic;                         /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  GPON_MAC_GPON_PLOAMD_FF_CTL_t            PLOAMD_FF_CTL;                 /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  GPON_MAC_GPON_PLOAMD_FIFO3_t             PLOAMD_FIFO3;                  /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  GPON_MAC_GPON_PLOAMD_FIFO2_t             PLOAMD_FIFO2;                  /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  GPON_MAC_GPON_PLOAMD_FIFO1_t             PLOAMD_FIFO1;                  /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  GPON_MAC_GPON_PLOAMD_FIFO0_t             PLOAMD_FIFO0;                  /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  GPON_MAC_GPON_PLOAMU_STS2_t              PLOAMU_STS2;                   /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  GPON_MAC_GPON_PLOAMU_STS1_t              PLOAMU_STS1;                   /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  GPON_MAC_GPON_PLOAMU_STS0_t              PLOAMU_STS0;                   /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  GPON_MAC_GPON_onu_ctl_t                  onu_ctl;                       /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  GPON_MAC_GPON_onu_cfg_t                  onu_cfg;                       /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  GPON_MAC_GPON_ploamd_disable_t           ploamd_disable;                /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  GPON_MAC_GPON_ploamd_fifo_wr_t           ploamd_fifo_wr;                /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  GPON_MAC_GPON_ploamu_disable_t           ploamu_disable;                /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  GPON_MAC_GPON_DS_PROCESS_t               DS_PROCESS;                    /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  GPON_MAC_GPON_TCONT_ACCESS_t             TCONT_ACCESS;                  /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  GPON_MAC_GPON_TCONT_DATA_t               TCONT_DATA;                    /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  GPON_MAC_GPON_DS_GEM_PORT_ACCESS_t       DS_GEM_PORT_ACCESS;            /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  GPON_MAC_GPON_DS_GEM_PORT_DATA_t         DS_GEM_PORT_DATA;              /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  GPON_MAC_GPON_DS_PORT_ACCESS_t           DS_PORT_ACCESS;                /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  GPON_MAC_GPON_DS_PORT_DATA3_t            DS_PORT_DATA3;                 /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  GPON_MAC_GPON_DS_PORT_DATA2_t            DS_PORT_DATA2;                 /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  GPON_MAC_GPON_DS_PORT_DATA1_t            DS_PORT_DATA1;                 /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  GPON_MAC_GPON_DS_PORT_DATA0_t            DS_PORT_DATA0;                 /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  GPON_MAC_GPON_US_MIB_ACCESS_t            US_MIB_ACCESS;                 /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  GPON_MAC_GPON_US_MIB_DATA3_t             US_MIB_DATA3;                  /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  GPON_MAC_GPON_US_MIB_DATA2_t             US_MIB_DATA2;                  /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  GPON_MAC_GPON_US_MIB_DATA1_t             US_MIB_DATA1;                  /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  GPON_MAC_GPON_US_MIB_DATA0_t             US_MIB_DATA0;                  /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  GPON_MAC_GPON_PLM_MIB_ACCESS_t           PLM_MIB_ACCESS;                /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  GPON_MAC_GPON_PLM_MIB_DATA_t             PLM_MIB_DATA;                  /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  GPON_MAC_GPON_MIB_INIT_t                 MIB_INIT;                      /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  GPON_MAC_GPON_US_PORT_ID_ACCESS_t        US_PORT_ID_ACCESS;             /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  GPON_MAC_GPON_US_PORT_ID_DATA_t          US_PORT_ID_DATA;               /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  GPON_MAC_GPON_bwmap_ctl_t                bwmap_ctl;                     /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  GPON_MAC_GPON_bwmap_data0_t              bwmap_data0;                   /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  GPON_MAC_GPON_bwmap_data1_t              bwmap_data1;                   /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  GPON_MAC_GPON_up_t                       up;                            /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  GPON_MAC_GPON_o5_t                       o5;                            /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  GPON_MAC_GPON_gem_frag_drop_t            gem_frag_drop;                 /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  GPON_MAC_GPON_gem_one_biterr_t           gem_one_biterr;                /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  GPON_MAC_GPON_gem_two_biterr_t           gem_two_biterr;                /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  GPON_MAC_GPON_gem_uncorrected_biterr_t   gem_uncorrected_biterr;        /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  GPON_MAC_GPON_bwmap_drop_t               bwmap_drop;                    /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  GPON_MAC_GPON_omci_crc_t                 omci_crc;                      /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  GPON_MAC_GPON_plend_err_t                plend_err;                     /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  GPON_MAC_GPON_plend_biterr_t             plend_biterr;                  /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  GPON_MAC_GPON_ds_asmbl_fifo_drop_cnt_t   ds_asmbl_fifo_drop_cnt;        /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  GPON_MAC_GPON_bypass_t                   bypass;                        /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  GPON_MAC_GPON_sw_dbru_t                  sw_dbru;                       /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  GPON_MAC_GPON_scratch_t                  scratch;                       /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  GPON_MAC_GPON_DBRU_BUFOCC_TBL_ACCESS_t   DBRU_BUFOCC_TBL_ACCESS;        /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  GPON_MAC_GPON_DBRU_BUFOCC_TBL_DATA_t     DBRU_BUFOCC_TBL_DATA;          /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  GPON_MAC_GPON_CTRL_t                     CTRL;                          /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  GPON_MAC_GPON_SUPER_FRAME_MATCH_VAL_t    SUPER_FRAME_MATCH_VAL;         /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  GPON_MAC_GPON_DEBUG_CTRL_t               DEBUG_CTRL;                    /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd116[3];
  GPON_MAC_GPON_DEBUG_STATUS0_t            DEBUG_STATUS0;                 /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd117[3];
  GPON_MAC_GPON_DEBUG_STATUS1_t            DEBUG_STATUS1;                 /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd118[3];
  GPON_MAC_GPON_bwmap_uncorrected_biterr_t bwmap_uncorrected_biterr;      /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd119[3];
  GPON_MAC_GPON_bwmap_corrected_biterr_t   bwmap_corrected_biterr;        /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd120[3];
  GPON_MAC_GPON_us_omcc_cnt_t              us_omcc_cnt;                   /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd121[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_0_t      SRAM_TEST_CONTROL_0;           /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd122[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_1_t      SRAM_TEST_CONTROL_1;           /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd123[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_2_t      SRAM_TEST_CONTROL_2;           /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd124[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_3_t      SRAM_TEST_CONTROL_3;           /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd125[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_4_t      SRAM_TEST_CONTROL_4;           /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd126[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_5_t      SRAM_TEST_CONTROL_5;           /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd127[3];
  GPON_MAC_GPON_SRAM_TEST_CONTROL_6_t      SRAM_TEST_CONTROL_6;           /* addr: 0x000001fc */
} APB7_GPON_MAC_GPON_t;
#endif /* !__ASSEMBLER__ */


/*
 * aes
 */

#define GPON_MAC_AES_AES_MODE_CTL                0xf5506400
#define GPON_MAC_AES_AES_MODE_CTL_dft            0x3f800000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t CntDiff              : 16 ; /* bits 15:0 */
    ca_uint32_t CntIncDec            :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t loc_cnt_debug        :  1 ; /* bits 22:22 */
    ca_uint32_t mc_grp_preamble      :  7 ; /* bits 29:23 */
    ca_uint32_t AesModeSel           :  2 ; /* bits 31:30 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_AES_MODE_CTL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_CURR_KEY_INDEX              0xf5506404
#define GPON_MAC_AES_CURR_KEY_INDEX_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MULTI_INDEX          :  8 ; /* bits 7:0 */
    ca_uint32_t UNICAST              :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_CURR_KEY_INDEX_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS0               0xf5506408
#define GPON_MAC_AES_MC_TBL_TRANS0_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx0             :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld0             :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx1             :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld1             :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx2             :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld2             :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx3             :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld3             :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx4             :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld4             :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx5             :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld5             :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx6             :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld6             :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx7             :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld7             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS1               0xf550640c
#define GPON_MAC_AES_MC_TBL_TRANS1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx8             :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld8             :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx9             :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld9             :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx10            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld10            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx11            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld11            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx12            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld12            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx13            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld13            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx14            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld14            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx15            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld15            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS2               0xf5506410
#define GPON_MAC_AES_MC_TBL_TRANS2_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx16            :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld16            :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx17            :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld17            :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx18            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld18            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx19            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld19            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx20            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld20            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx21            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld21            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx22            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld22            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx23            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld23            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS3               0xf5506414
#define GPON_MAC_AES_MC_TBL_TRANS3_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx24            :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld24            :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx25            :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld25            :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx26            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld26            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx27            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld27            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx28            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld28            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx29            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld29            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx30            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld30            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx31            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld31            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS4               0xf5506418
#define GPON_MAC_AES_MC_TBL_TRANS4_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx32            :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld32            :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx33            :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld33            :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx34            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld34            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx35            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld35            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx36            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld36            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx37            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld37            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx38            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld38            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx39            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld39            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS4_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS5               0xf550641c
#define GPON_MAC_AES_MC_TBL_TRANS5_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx40            :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld40            :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx41            :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld41            :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx42            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld42            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx43            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld43            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx44            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld44            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx45            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld45            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx46            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld46            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx47            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld47            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS5_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS6               0xf5506420
#define GPON_MAC_AES_MC_TBL_TRANS6_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx48            :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld48            :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx49            :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld49            :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx50            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld50            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx51            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld51            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx52            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld52            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx53            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld53            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx54            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld54            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx55            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld55            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS6_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_TBL_TRANS7               0xf5506424
#define GPON_MAC_AES_MC_TBL_TRANS7_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbl_idx56            :  3 ; /* bits 2:0 */
    ca_uint32_t tbl_vld56            :  1 ; /* bits 3:3 */
    ca_uint32_t tbl_idx57            :  3 ; /* bits 6:4 */
    ca_uint32_t tbl_vld57            :  1 ; /* bits 7:7 */
    ca_uint32_t tbl_idx58            :  3 ; /* bits 10:8 */
    ca_uint32_t tbl_vld58            :  1 ; /* bits 11:11 */
    ca_uint32_t tbl_idx59            :  3 ; /* bits 14:12 */
    ca_uint32_t tbl_vld59            :  1 ; /* bits 15:15 */
    ca_uint32_t tbl_idx60            :  3 ; /* bits 18:16 */
    ca_uint32_t tbl_vld60            :  1 ; /* bits 19:19 */
    ca_uint32_t tbl_idx61            :  3 ; /* bits 22:20 */
    ca_uint32_t tbl_vld61            :  1 ; /* bits 23:23 */
    ca_uint32_t tbl_idx62            :  3 ; /* bits 26:24 */
    ca_uint32_t tbl_vld62            :  1 ; /* bits 27:27 */
    ca_uint32_t tbl_idx63            :  3 ; /* bits 30:28 */
    ca_uint32_t tbl_vld63            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_TBL_TRANS7_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY03                    0xf5506428
#define GPON_MAC_AES_UC_KEY03_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key03                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY03_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY02                    0xf550642c
#define GPON_MAC_AES_UC_KEY02_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key02                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY02_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY01                    0xf5506430
#define GPON_MAC_AES_UC_KEY01_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key01                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY01_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY00                    0xf5506434
#define GPON_MAC_AES_UC_KEY00_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key00                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY00_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY13                    0xf5506438
#define GPON_MAC_AES_UC_KEY13_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key13                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY13_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY12                    0xf550643c
#define GPON_MAC_AES_UC_KEY12_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key12                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY12_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY11                    0xf5506440
#define GPON_MAC_AES_UC_KEY11_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key11                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY11_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_UC_KEY10                    0xf5506444
#define GPON_MAC_AES_UC_KEY10_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key10                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_UC_KEY10_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_KEY3                     0xf5506500
#define GPON_MAC_AES_MC_KEY3_STRIDE              16
#define GPON_MAC_AES_MC_KEY3_COUNT               16
#define GPON_MAC_AES_MC_KEY3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data3                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_KEY3_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_KEY2                     0xf5506504
#define GPON_MAC_AES_MC_KEY2_STRIDE              16
#define GPON_MAC_AES_MC_KEY2_COUNT               16
#define GPON_MAC_AES_MC_KEY2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_KEY2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_KEY1                     0xf5506508
#define GPON_MAC_AES_MC_KEY1_STRIDE              16
#define GPON_MAC_AES_MC_KEY1_COUNT               16
#define GPON_MAC_AES_MC_KEY1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_KEY1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_MC_KEY0                     0xf550650c
#define GPON_MAC_AES_MC_KEY0_STRIDE              16
#define GPON_MAC_AES_MC_KEY0_COUNT               16
#define GPON_MAC_AES_MC_KEY0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_MC_KEY0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_uc_dec_dbg_cnt              0xf5506600
#define GPON_MAC_AES_uc_dec_dbg_cnt_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mpcp_cnt_dbg         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_uc_dec_dbg_cnt_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY03                    0xf5506604
#define GPON_MAC_AES_SW_KEY03_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY03_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY02                    0xf5506608
#define GPON_MAC_AES_SW_KEY02_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY02_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY01                    0xf550660c
#define GPON_MAC_AES_SW_KEY01_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY01_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY00                    0xf5506610
#define GPON_MAC_AES_SW_KEY00_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY00_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY13                    0xf5506614
#define GPON_MAC_AES_SW_KEY13_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key3                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY13_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY12                    0xf5506618
#define GPON_MAC_AES_SW_KEY12_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key2                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY12_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY11                    0xf550661c
#define GPON_MAC_AES_SW_KEY11_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key1                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY11_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_AES_SW_KEY10                    0xf5506620
#define GPON_MAC_AES_SW_KEY10_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t key0                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_AES_SW_KEY10_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* aes */
#ifndef __ASSEMBLER__
typedef struct {
  GPON_MAC_AES_AES_MODE_CTL_t              AES_MODE_CTL;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  GPON_MAC_AES_CURR_KEY_INDEX_t            CURR_KEY_INDEX;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  GPON_MAC_AES_MC_TBL_TRANS0_t             MC_TBL_TRANS0;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  GPON_MAC_AES_MC_TBL_TRANS1_t             MC_TBL_TRANS1;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  GPON_MAC_AES_MC_TBL_TRANS2_t             MC_TBL_TRANS2;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  GPON_MAC_AES_MC_TBL_TRANS3_t             MC_TBL_TRANS3;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  GPON_MAC_AES_MC_TBL_TRANS4_t             MC_TBL_TRANS4;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  GPON_MAC_AES_MC_TBL_TRANS5_t             MC_TBL_TRANS5;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  GPON_MAC_AES_MC_TBL_TRANS6_t             MC_TBL_TRANS6;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  GPON_MAC_AES_MC_TBL_TRANS7_t             MC_TBL_TRANS7;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  GPON_MAC_AES_UC_KEY03_t                  UC_KEY03;                      /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  GPON_MAC_AES_UC_KEY02_t                  UC_KEY02;                      /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  GPON_MAC_AES_UC_KEY01_t                  UC_KEY01;                      /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  GPON_MAC_AES_UC_KEY00_t                  UC_KEY00;                      /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  GPON_MAC_AES_UC_KEY13_t                  UC_KEY13;                      /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  GPON_MAC_AES_UC_KEY12_t                  UC_KEY12;                      /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  GPON_MAC_AES_UC_KEY11_t                  UC_KEY11;                      /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  GPON_MAC_AES_UC_KEY10_t                  UC_KEY10;                      /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[187];
  GPON_MAC_AES_MC_KEY3_t                   MC_KEY3;                       /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd19[3];
  GPON_MAC_AES_MC_KEY2_t                   MC_KEY2;                       /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd20[3];
  GPON_MAC_AES_MC_KEY1_t                   MC_KEY1;                       /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd21[3];
  GPON_MAC_AES_MC_KEY0_t                   MC_KEY0;                       /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd22[243];
  GPON_MAC_AES_uc_dec_dbg_cnt_t            uc_dec_dbg_cnt;                /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd23[3];
  GPON_MAC_AES_SW_KEY03_t                  SW_KEY03;                      /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd24[3];
  GPON_MAC_AES_SW_KEY02_t                  SW_KEY02;                      /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd25[3];
  GPON_MAC_AES_SW_KEY01_t                  SW_KEY01;                      /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd26[3];
  GPON_MAC_AES_SW_KEY00_t                  SW_KEY00;                      /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd27[3];
  GPON_MAC_AES_SW_KEY13_t                  SW_KEY13;                      /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd28[3];
  GPON_MAC_AES_SW_KEY12_t                  SW_KEY12;                      /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd29[3];
  GPON_MAC_AES_SW_KEY11_t                  SW_KEY11;                      /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd30[3];
  GPON_MAC_AES_SW_KEY10_t                  SW_KEY10;                      /* addr: 0x00000220 */
} APB7_GPON_MAC_AES_t;
#endif /* !__ASSEMBLER__ */


/*
 * fec
 */

#define GPON_MAC_FEC_FEC_CTRL                    0xf5506800
#define GPON_MAC_FEC_FEC_CTRL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t unc_ctr_clr          :  1 ; /* bits 5:5 */
    ca_uint32_t cor_ctr_clr          :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t halt_unc             :  1 ; /* bits 8:8 */
    ca_uint32_t halt_cor             :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd3               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_FEC_FEC_MISC_STATUS             0xf5506804
#define GPON_MAC_FEC_FEC_MISC_STATUS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  7 ;
    ca_uint32_t fec_errors           :  4 ; /* bits 10:7 */
    ca_uint32_t fec_uncorr           :  1 ; /* bits 11:11 */
    ca_uint32_t fec_dacor_ack_q      :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_MISC_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_FEC_FEC_Block_Correctable_Error_Counter 0xf5506808
#define GPON_MAC_FEC_FEC_Block_Correctable_Error_Counter_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_RCNT             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_Block_Correctable_Error_Counter_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_FEC_FEC_Block_Uncorrectable_Error_Counter 0xf550680c
#define GPON_MAC_FEC_FEC_Block_Uncorrectable_Error_Counter_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_UCNT             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_Block_Uncorrectable_Error_Counter_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_FEC_FEC_Block_No_Error_Counter  0xf5506810
#define GPON_MAC_FEC_FEC_Block_No_Error_Counter_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_NOERR            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_Block_No_Error_Counter_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_FEC_FEC_Block_Counter           0xf5506814
#define GPON_MAC_FEC_FEC_Block_Counter_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_BLK_CNT          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_Block_Counter_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_FEC_FEC_Corr_Byte_Counter       0xf5506818
#define GPON_MAC_FEC_FEC_Corr_Byte_Counter_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FEC_CORR_BYTE_CNT    : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_FEC_FEC_Corr_Byte_Counter_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* fec */
#ifndef __ASSEMBLER__
typedef struct {
  GPON_MAC_FEC_FEC_CTRL_t                  FEC_CTRL;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  GPON_MAC_FEC_FEC_MISC_STATUS_t           FEC_MISC_STATUS;               /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  GPON_MAC_FEC_FEC_Block_Correctable_Error_Counter_t FEC_Block_Correctable_Error_Counter; /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  GPON_MAC_FEC_FEC_Block_Uncorrectable_Error_Counter_t FEC_Block_Uncorrectable_Error_Counter; /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  GPON_MAC_FEC_FEC_Block_No_Error_Counter_t FEC_Block_No_Error_Counter;    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  GPON_MAC_FEC_FEC_Block_Counter_t         FEC_Block_Counter;             /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  GPON_MAC_FEC_FEC_Corr_Byte_Counter_t     FEC_Corr_Byte_Counter;         /* addr: 0x00000018 */
} APB7_GPON_MAC_FEC_t;
#endif /* !__ASSEMBLER__ */


/*
 * pucif
 */

#define GPON_MAC_PUCIF_CTRL                      0xf5506e00
#define GPON_MAC_PUCIF_CTRL_dft                  0x0040a100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr_tconid          :  5 ; /* bits 4:0 */
    ca_uint32_t cntr_tconid_en       :  1 ; /* bits 5:5 */
    ca_uint32_t cntr0_event_sel      :  3 ; /* bits 8:6 */
    ca_uint32_t cntr1_event_sel      :  3 ; /* bits 11:9 */
    ca_uint32_t cntr2_event_sel      :  3 ; /* bits 14:12 */
    ca_uint32_t single_thread        :  1 ; /* bits 15:15 */
    ca_uint32_t sch_to_threshold     : 12 ; /* bits 27:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t cntr_inccfg          :  3 ; /* bits 31:29 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_PUCIF_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_PUCIF_CNTR0                     0xf5506e04
#define GPON_MAC_PUCIF_CNTR0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_PUCIF_CNTR0_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_PUCIF_CNTR1                     0xf5506e08
#define GPON_MAC_PUCIF_CNTR1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_PUCIF_CNTR1_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_PUCIF_CNTR2                     0xf5506e0c
#define GPON_MAC_PUCIF_CNTR2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt                  : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_PUCIF_CNTR2_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_PUCIF_STS                       0xf5506e10
#define GPON_MAC_PUCIF_STS_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sch_tconid           :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t data_tconid          :  5 ; /* bits 12:8 */
    ca_uint32_t data_gemid           :  8 ; /* bits 20:13 */
    ca_uint32_t rsrvd2               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_PUCIF_STS_t;
#endif /* !__ASSEMBLER__ */


#define GPON_MAC_PUCIF_PROTECT                   0xf5506e14
#define GPON_MAC_PUCIF_PROTECT_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucif_hang           :  1 ; /* bits 0:0 */
    ca_uint32_t pucif_hang_tcon_id   :  5 ; /* bits 5:1 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} GPON_MAC_PUCIF_PROTECT_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pucif */
#ifndef __ASSEMBLER__
typedef struct {
  GPON_MAC_PUCIF_CTRL_t                    CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  GPON_MAC_PUCIF_CNTR0_t                   CNTR0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  GPON_MAC_PUCIF_CNTR1_t                   CNTR1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  GPON_MAC_PUCIF_CNTR2_t                   CNTR2;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  GPON_MAC_PUCIF_STS_t                     STS;                           /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  GPON_MAC_PUCIF_PROTECT_t                 PROTECT;                       /* addr: 0x00000014 */
} APB7_GPON_MAC_PUCIF_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GPON_MAC */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_GPON_MAC_GPON_t            gpon;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[769];
  APB7_GPON_MAC_AES_t             aes;                           /* addr: 0x00000400 */
  ca_uint32_t                              rsrvd2[751];
  APB7_GPON_MAC_FEC_t             fec;                           /* addr: 0x00000800 */
  ca_uint32_t                              rsrvd3[1523];
  APB7_GPON_MAC_PUCIF_t           pucif;                         /* addr: 0x00000e00 */
} APB7_GPON_MAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * PUC
 */

#define PUC_PVTBL_ACCESS                         0xf5508000
#define PUC_PVTBL_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PVTBL_DATA4                          0xf5508004
#define PUC_PVTBL_DATA4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrrratio6            :  8 ; /* bits 7:0 */
    ca_uint32_t wrrratio7            :  8 ; /* bits 15:8 */
    ca_uint32_t nxtptr               :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t nxtptrvld            :  1 ; /* bits 23:23 */
    ca_uint32_t rsrvd2               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PVTBL_DATA3                          0xf5508008
#define PUC_PVTBL_DATA3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wrrratio2            :  8 ; /* bits 7:0 */
    ca_uint32_t wrrratio3            :  8 ; /* bits 15:8 */
    ca_uint32_t wrrratio4            :  8 ; /* bits 23:16 */
    ca_uint32_t wrrratio5            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PVTBL_DATA2                          0xf550800c
#define PUC_PVTBL_DATA2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq7                 :  8 ; /* bits 7:0 */
    ca_uint32_t schmode              :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t entryvld             :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t wrrratio0            :  8 ; /* bits 23:16 */
    ca_uint32_t wrrratio1            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PVTBL_DATA1                          0xf5508010
#define PUC_PVTBL_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq3                 :  4 ; /* bits 3:0 */
    ca_uint32_t voq4                 :  9 ; /* bits 12:4 */
    ca_uint32_t voq5                 :  9 ; /* bits 21:13 */
    ca_uint32_t voq6                 :  9 ; /* bits 30:22 */
    ca_uint32_t voq7                 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PVTBL_DATA0                          0xf5508014
#define PUC_PVTBL_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq0                 :  9 ; /* bits 8:0 */
    ca_uint32_t voq1                 :  9 ; /* bits 17:9 */
    ca_uint32_t voq2                 :  9 ; /* bits 26:18 */
    ca_uint32_t voq3                 :  5 ; /* bits 31:27 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_HPMEM_ACCESS                         0xf5508018
#define PUC_HPMEM_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_HPMEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_HPMEM_DATA                           0xf550801c
#define PUC_HPMEM_DATA_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hptr                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_HPMEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BCMEM_ACCESS                         0xf5508020
#define PUC_BCMEM_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BCMEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BCMEM_DATA1                          0xf5508024
#define PUC_BCMEM_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bufcnt               :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BCMEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BCMEM_DATA0                          0xf5508028
#define PUC_BCMEM_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bytecnt              : 21 ; /* bits 20:0 */
    ca_uint32_t bufcnt               : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BCMEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_TQMEM_ACCESS                         0xf550802c
#define PUC_TQMEM_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_TQMEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_TQMEM_DATA1                          0xf5508030
#define PUC_TQMEM_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pktcnt               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_TQMEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_TQMEM_DATA0                          0xf5508034
#define PUC_TQMEM_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bytecnt              : 21 ; /* bits 20:0 */
    ca_uint32_t pktcnt               : 11 ; /* bits 31:21 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_TQMEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_OPMEM_ACCESS                         0xf5508038
#define PUC_OPMEM_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 25 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_OPMEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_OPMEM_DATA                           0xf550803c
#define PUC_OPMEM_DATA_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bytecnt              : 14 ; /* bits 13:0 */
    ca_uint32_t voqid                :  8 ; /* bits 21:14 */
    ca_uint32_t gempid               :  8 ; /* bits 29:22 */
    ca_uint32_t rsrvd1               :  2 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_OPMEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BPMEM_ACCESS                         0xf5508040
#define PUC_BPMEM_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BPMEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BPMEM_DATA                           0xf5508044
#define PUC_BPMEM_DATA_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t nptr                 : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BPMEM_DATA_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQSCHCFG                            0xf5508048
#define PUC_VOQSCHCFG_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t basesel              :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t ratecomp             :  5 ; /* bits 8:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t dwrrunit             :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t pkgbsch              :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t pkgbschmode          :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd5               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQSCHCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQMAPCFG                            0xf550804c
#define PUC_VOQMAPCFG_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voqmapsel            :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQMAPCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BTCCFG                               0xf5508050
#define PUC_BTCCFG_dft                           0x41000114

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pfovrhd              :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t schmode              :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t ethmode              :  1 ; /* bits 11:11 */
    ca_uint32_t wdaligned            :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t lrgfrmfragen         :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t pyld1gfecon          :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd5               :  3 ;
    ca_uint32_t schen                :  1 ; /* bits 24:24 */
    ca_uint32_t sch2en               :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t minrmnwindowsz       :  5 ; /* bits 31:27 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BTCCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTCFG                               0xf5508054
#define PUC_RPTCFG_dft                           0x1000c081

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t numqsets             :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t rptpreamblovhd       :  6 ; /* bits 9:4 */
    ca_uint32_t rsrvd2               :  2 ;
    ca_uint32_t rptipgovhd           :  5 ; /* bits 16:12 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t rpt1gfecon           :  1 ; /* bits 20:20 */
    ca_uint32_t adjqmrpt             :  3 ; /* bits 23:21 */
    ca_uint32_t firstqstot           :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t noemptyqsetreport    :  1 ; /* bits 27:27 */
    ca_uint32_t lastqstot            :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t pkgarpt              :  1 ; /* bits 30:30 */
    ca_uint32_t aggrth               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_NTTCFG                               0xf5508058
#define PUC_NTTCFG_dft                           0x00020000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t zeroqth              : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t zeroqrpten           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_NTTCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PVTCFG                               0xf550805c
#define PUC_PVTCFG_dft                           0x00280010

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkgbrptceil          :  1 ; /* bits 0:0 */
    ca_uint32_t pucfmrosel           :  3 ; /* bits 3:1 */
    ca_uint32_t pkgboptschen         :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t pmacschszadj         :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t freebufnibplowth     : 15 ; /* bits 30:16 */
    ca_uint32_t freebufnibpen        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PVTCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VSTBL_ACCESS                         0xf5508060
#define PUC_VSTBL_ACCESS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VSTBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VSTBL_DATA4                          0xf5508064
#define PUC_VSTBL_DATA4_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc6                 : 12 ; /* bits 11:0 */
    ca_uint32_t tbc7                 : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VSTBL_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VSTBL_DATA3                          0xf5508068
#define PUC_VSTBL_DATA3_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc4                 :  4 ; /* bits 3:0 */
    ca_uint32_t tbc5                 : 20 ; /* bits 23:4 */
    ca_uint32_t tbc6                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VSTBL_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VSTBL_DATA2                          0xf550806c
#define PUC_VSTBL_DATA2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc3                 : 16 ; /* bits 15:0 */
    ca_uint32_t tbc4                 : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VSTBL_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VSTBL_DATA1                          0xf5508070
#define PUC_VSTBL_DATA1_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc1                 :  8 ; /* bits 7:0 */
    ca_uint32_t tbc2                 : 20 ; /* bits 27:8 */
    ca_uint32_t tbc3                 :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VSTBL_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VSTBL_DATA0                          0xf5508074
#define PUC_VSTBL_DATA0_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc0                 : 20 ; /* bits 19:0 */
    ca_uint32_t tbc1                 : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VSTBL_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTQSCFG12                           0xf5508078
#define PUC_RPTQSCFG12_dft                       0x07d003e8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qs1th                : 16 ; /* bits 15:0 */
    ca_uint32_t qs2th                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTQSCFG12_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTQSCFG23                           0xf550807c
#define PUC_RPTQSCFG23_dft                       0x0fa00bb8

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qs3th                : 16 ; /* bits 15:0 */
    ca_uint32_t qs4th                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTQSCFG23_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SLLIDVOQ74CFG                        0xf5508080
#define PUC_SLLIDVOQ74CFG_dft                    0x87868584

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq4                 :  7 ; /* bits 6:0 */
    ca_uint32_t voq4vld              :  1 ; /* bits 7:7 */
    ca_uint32_t voq5                 :  7 ; /* bits 14:8 */
    ca_uint32_t voq5vld              :  1 ; /* bits 15:15 */
    ca_uint32_t voq6                 :  7 ; /* bits 22:16 */
    ca_uint32_t voq6vld              :  1 ; /* bits 23:23 */
    ca_uint32_t voq7                 :  7 ; /* bits 30:24 */
    ca_uint32_t voq7vld              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SLLIDVOQ74CFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SLLIDVOQ30CFG                        0xf5508084
#define PUC_SLLIDVOQ30CFG_dft                    0x83828180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq0                 :  7 ; /* bits 6:0 */
    ca_uint32_t voq0vld              :  1 ; /* bits 7:7 */
    ca_uint32_t voq1                 :  7 ; /* bits 14:8 */
    ca_uint32_t voq1vld              :  1 ; /* bits 15:15 */
    ca_uint32_t voq2                 :  7 ; /* bits 22:16 */
    ca_uint32_t voq2vld              :  1 ; /* bits 23:23 */
    ca_uint32_t voq3                 :  7 ; /* bits 30:24 */
    ca_uint32_t voq3vld              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SLLIDVOQ30CFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMSTS                                0xf5508088
#define PUC_BMSTS_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bpmem_initdone       :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMSTS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PUCCFG                               0xf550808c
#define PUC_PUCCFG_dft                           0x84040001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crccntl              :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t inccfg               :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t pkt_gap_ifd          :  3 ; /* bits 27:25 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t invalid_voqdrop_enable :  1 ; /* bits 30:30 */
    ca_uint32_t sllidmode            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PUCCFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL015000                 0xf5508090
#define PUC_VOQBUFLIMITSEL015000_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL015000_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL031016                 0xf5508094
#define PUC_VOQBUFLIMITSEL031016_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL031016_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL047032                 0xf5508098
#define PUC_VOQBUFLIMITSEL047032_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL047032_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL063048                 0xf550809c
#define PUC_VOQBUFLIMITSEL063048_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL063048_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL079064                 0xf55080a0
#define PUC_VOQBUFLIMITSEL079064_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL079064_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL095080                 0xf55080a4
#define PUC_VOQBUFLIMITSEL095080_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL095080_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL111096                 0xf55080a8
#define PUC_VOQBUFLIMITSEL111096_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL111096_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL127112                 0xf55080ac
#define PUC_VOQBUFLIMITSEL127112_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL127112_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL143128                 0xf55080b0
#define PUC_VOQBUFLIMITSEL143128_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL143128_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL159144                 0xf55080b4
#define PUC_VOQBUFLIMITSEL159144_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL159144_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL175160                 0xf55080b8
#define PUC_VOQBUFLIMITSEL175160_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL175160_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL191176                 0xf55080bc
#define PUC_VOQBUFLIMITSEL191176_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL191176_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL207192                 0xf55080c0
#define PUC_VOQBUFLIMITSEL207192_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL207192_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL223208                 0xf55080c4
#define PUC_VOQBUFLIMITSEL223208_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL223208_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL239224                 0xf55080c8
#define PUC_VOQBUFLIMITSEL239224_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL239224_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMITSEL255240                 0xf55080cc
#define PUC_VOQBUFLIMITSEL255240_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimitsel          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMITSEL255240_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMIT_A                        0xf55080d0
#define PUC_VOQBUFLIMIT_A_dft                    0x00003fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimit             : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMIT_A_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMIT_B                        0xf55080d4
#define PUC_VOQBUFLIMIT_B_dft                    0x00003fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimit             : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMIT_B_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBUFLIMIT_C                        0xf55080d8
#define PUC_VOQBUFLIMIT_C_dft                    0x00003fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buflimit             : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBUFLIMIT_C_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQFLUSH                             0xf55080dc
#define PUC_VOQFLUSH_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voqid                :  8 ; /* bits 7:0 */
    ca_uint32_t tcontid              :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t openpktflushen       :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 14 ;
    ca_uint32_t start                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQFLUSH_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQDROP                              0xf55080e0
#define PUC_VOQDROP_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voqid                :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t enable               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQDROP_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BPCNTL                               0xf55080e4
#define PUC_BPCNTL_dft                           0x02000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bpen                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t dropen               :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 11 ;
    ca_uint32_t bpth                 : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BPCNTL_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBPREMAP_ACCESS                    0xf55080e8
#define PUC_VOQBPREMAP_ACCESS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ADDR                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBPREMAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQBPREMAP_DATA                      0xf55080ec
#define PUC_VOQBPREMAP_DATA_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tqmvoqid             :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQBPREMAP_DATA_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PONCNTL_INTERRUPT                    0xf55080f0
#define PUC_PONCNTL_INTERRUPT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bpmeminitdone_intI   :  1 ; /* bits 0:0 */
    ca_uint32_t voqflushdone_intI    :  1 ; /* bits 1:1 */
    ca_uint32_t gnttoosmall_intI     :  1 ; /* bits 2:2 */
    ca_uint32_t opm_correctedeccerr_intI :  1 ; /* bits 3:3 */
    ca_uint32_t lfram_correctedeccerr_intI :  1 ; /* bits 4:4 */
    ca_uint32_t tqm_correctedeccerr_intI :  1 ; /* bits 5:5 */
    ca_uint32_t bcm_correctedeccerr_intI :  1 ; /* bits 6:6 */
    ca_uint32_t pllm_correctedeccerr_intI :  1 ; /* bits 7:7 */
    ca_uint32_t bpmem_correctedeccerr_intI :  1 ; /* bits 8:8 */
    ca_uint32_t invalid_voq_drop_intI :  1 ; /* bits 9:9 */
    ca_uint32_t omci_length_err_intI :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t bmc_pe_fifo_overflow_intI :  1 ; /* bits 16:16 */
    ca_uint32_t bmc_data_fifo_overflow_intI :  1 ; /* bits 17:17 */
    ca_uint32_t bmc_front_fifo_overflow_intI :  1 ; /* bits 18:18 */
    ca_uint32_t bmc_rx_err_pkt_intI  :  1 ; /* bits 19:19 */
    ca_uint32_t bmc_length_err_pkt_intI :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t opm_eccerr_intI      :  1 ; /* bits 26:26 */
    ca_uint32_t lfram_eccerr_intI    :  1 ; /* bits 27:27 */
    ca_uint32_t tqm_eccerr_intI      :  1 ; /* bits 28:28 */
    ca_uint32_t bcm_eccerr_intI      :  1 ; /* bits 29:29 */
    ca_uint32_t pllm_eccerr_intI     :  1 ; /* bits 30:30 */
    ca_uint32_t bpmem_eccerr_intI    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PONCNTL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PONCNTL_INTENABLE                    0xf55080f4
#define PUC_PONCNTL_INTENABLE_dft                0xfc1f03fa

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bpmeminitdone_intE   :  1 ; /* bits 0:0 */
    ca_uint32_t voqflushdone_intE    :  1 ; /* bits 1:1 */
    ca_uint32_t gnttoosmall_intE     :  1 ; /* bits 2:2 */
    ca_uint32_t opm_correctedeccerr_intE :  1 ; /* bits 3:3 */
    ca_uint32_t lfram_correctedeccerr_intE :  1 ; /* bits 4:4 */
    ca_uint32_t tqm_correctedeccerr_intE :  1 ; /* bits 5:5 */
    ca_uint32_t bcm_correctedeccerr_intE :  1 ; /* bits 6:6 */
    ca_uint32_t pllm_correctedeccerr_intE :  1 ; /* bits 7:7 */
    ca_uint32_t bpmem_correctedeccerr_intE :  1 ; /* bits 8:8 */
    ca_uint32_t invalid_voq_drop_intE :  1 ; /* bits 9:9 */
    ca_uint32_t omci_length_err_intE :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t bmc_pe_fifo_overflow_intE :  1 ; /* bits 16:16 */
    ca_uint32_t bmc_data_fifo_overflow_intE :  1 ; /* bits 17:17 */
    ca_uint32_t bmc_front_fifo_overflow_intE :  1 ; /* bits 18:18 */
    ca_uint32_t bmc_rx_err_pkt_intE  :  1 ; /* bits 19:19 */
    ca_uint32_t bmc_length_err_pkt_intE :  1 ; /* bits 20:20 */
    ca_uint32_t rsrvd2               :  5 ;
    ca_uint32_t opm_eccerr_intE      :  1 ; /* bits 26:26 */
    ca_uint32_t lfram_eccerr_intE    :  1 ; /* bits 27:27 */
    ca_uint32_t tqm_eccerr_intE      :  1 ; /* bits 28:28 */
    ca_uint32_t bcm_eccerr_intE      :  1 ; /* bits 29:29 */
    ca_uint32_t pllm_eccerr_intE     :  1 ; /* bits 30:30 */
    ca_uint32_t bpmem_eccerr_intE    :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PONCNTL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTADJCFG1                           0xf55080f8
#define PUC_RPTADJCFG1_dft                       0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rptadjpid            :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t rptadjqnum           :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rptadjqsnum          :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  9 ;
    ca_uint32_t rptgapcnten          :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd4               :  3 ;
    ca_uint32_t rptadjbuffullen      :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd5               :  2 ;
    ca_uint32_t rptadjunibursten     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTADJCFG1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTADJCFG2                           0xf55080fc
#define PUC_RPTADJCFG2_dft                       0x09c40040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rptadjfbloth         : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rptadjval10us        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTADJCFG2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTADJCFG3                           0xf5508100
#define PUC_RPTADJCFG3_dft                       0x7a1230d4

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rptadjval100us       : 16 ; /* bits 15:0 */
    ca_uint32_t rptadjval500us       : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTADJCFG3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPTGAPVAL                            0xf5508104
#define PUC_RPTGAPVAL_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rptgapval            : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPTGAPVAL_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PKGBGNTINFO                          0xf5508108
#define PUC_PKGBGNTINFO_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbawindowcntr        : 16 ; /* bits 15:0 */
    ca_uint32_t gntmismatchcntr      : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PKGBGNTINFO_t;
#endif /* !__ASSEMBLER__ */


#define PUC_MICROSECCLKCNT                       0xf550810c
#define PUC_MICROSECCLKCNT_dft                   0x0000014d

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t microsecclkcnt       :  9 ; /* bits 8:0 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_MICROSECCLKCNT_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMDBGFBCNT                           0xf5508110
#define PUC_BMDBGFBCNT_dft                       0x40004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fbpacnt              : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fbpbcnt              : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMDBGFBCNT_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMDBGFBPA                            0xf5508114
#define PUC_BMDBGFBPA_dft                        0x00004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fbcnta               : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fbphptra             : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMDBGFBPA_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMDBGFBPB                            0xf5508118
#define PUC_BMDBGFBPB_dft                        0x40004000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fbcntb               : 15 ; /* bits 14:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t fbphptrb             : 15 ; /* bits 30:16 */
    ca_uint32_t rsrvd2               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMDBGFBPB_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BTCDBG1                              0xf550811c
#define PUC_BTCDBG1_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pmacschreqcnt        : 16 ; /* bits 15:0 */
    ca_uint32_t pucschdonecnt        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BTCDBG1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BTCDBG2                              0xf5508120
#define PUC_BTCDBG2_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pmacschsize          : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t pmacschpid           :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BTCDBG2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BTCDBG3                              0xf5508124
#define PUC_BTCDBG3_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t btcstate             :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BTCDBG3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_DQMDBG1                              0xf5508128
#define PUC_DQMDBG1_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucsobcnt            : 16 ; /* bits 15:0 */
    ca_uint32_t puceobcnt            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_DQMDBG1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_DQMDBG2                              0xf550812c
#define PUC_DQMDBG2_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucsofcnt            : 16 ; /* bits 15:0 */
    ca_uint32_t puceofcnt            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_DQMDBG2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_DQMDBG3                              0xf5508130
#define PUC_DQMDBG3_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pucpid               :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t pmacpucrdy           :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t dqrffull             :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               :  7 ;
    ca_uint32_t lfdepth              :  7 ; /* bits 30:24 */
    ca_uint32_t rsrvd4               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_DQMDBG3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPCDBG1                              0xf5508134
#define PUC_RPCDBG1_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pmacrptreqcnt        : 16 ; /* bits 15:0 */
    ca_uint32_t pucrptdonecnt        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPCDBG1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RPCDBG2                              0xf5508138
#define PUC_RPCDBG2_dft                          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rpcstate             :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 11 ;
    ca_uint32_t pmacrptpid           :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd2               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RPCDBG2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_CTRL                                 0xf550813c
#define PUC_CTRL_dft                             0x3300007c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_mode_class0_cnt  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pkt_mode_class1_cnt  :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t pm_mode              :  2 ; /* bits 22:21 */
    ca_uint32_t rl_force_init_done   :  1 ; /* bits 23:23 */
    ca_uint32_t rl_addtok_en         :  1 ; /* bits 24:24 */
    ca_uint32_t rl_subtok_en         :  1 ; /* bits 25:25 */
    ca_uint32_t rl_en                :  1 ; /* bits 26:26 */
    ca_uint32_t force_init_done      :  1 ; /* bits 27:27 */
    ca_uint32_t addtok_en            :  1 ; /* bits 28:28 */
    ca_uint32_t subtok_en            :  1 ; /* bits 29:29 */
    ca_uint32_t shp_en               :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd3               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PUC_CTRL1                                0xf5508140
#define PUC_CTRL1_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rlovhd               :  5 ; /* bits 4:0 */
    ca_uint32_t shpovhd              :  5 ; /* bits 9:5 */
    ca_uint32_t agrshpovhd           :  5 ; /* bits 14:10 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_CTRL2                                0xf5508144
#define PUC_CTRL2_dft                            0x03000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pirovhd              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 18 ;
    ca_uint32_t pir_force_init_done  :  1 ; /* bits 23:23 */
    ca_uint32_t pir_addtok_en        :  1 ; /* bits 24:24 */
    ca_uint32_t pir_subtok_en        :  1 ; /* bits 25:25 */
    ca_uint32_t pir_en               :  1 ; /* bits 26:26 */
    ca_uint32_t rsrvd2               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_CTRL2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_STS                                  0xf5508148
#define PUC_STS_dft                              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t shp_fifo_overflow    :  1 ; /* bits 1:1 */
    ca_uint32_t shp_fifo_empty       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               : 10 ;
    ca_uint32_t pir_fifo_overflow    :  1 ; /* bits 13:13 */
    ca_uint32_t pir_fifo_empty       :  1 ; /* bits 14:14 */
    ca_uint32_t pir_init_done        :  1 ; /* bits 15:15 */
    ca_uint32_t rl_fifo_overflow     :  1 ; /* bits 16:16 */
    ca_uint32_t rl_fifo_empty        :  1 ; /* bits 17:17 */
    ca_uint32_t rl_init_done         :  1 ; /* bits 18:18 */
    ca_uint32_t rl_dcnt_init_done    :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd3               : 11 ;
    ca_uint32_t shp_init_done        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_STS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_GLOBAL_DA_SA2                        0xf550814c
#define PUC_GLOBAL_DA_SA2_dft                    0x00132500

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dasa2                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_GLOBAL_DA_SA2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_GLOBAL_DA_SA1                        0xf5508150
#define PUC_GLOBAL_DA_SA1_dft                    0x00000013

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dasa1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_GLOBAL_DA_SA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_GLOBAL_DA_SA0                        0xf5508154
#define PUC_GLOBAL_DA_SA0_dft                    0x25000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dasa0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_GLOBAL_DA_SA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_GLOBAL_MAC_TYPE                      0xf5508158
#define PUC_GLOBAL_MAC_TYPE_dft                  0xfff00000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_GLOBAL_MAC_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define PUC_GLOBAL_LNK_TYPE                      0xf550815c
#define PUC_GLOBAL_LNK_TYPE_dft                  0xfff10000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t type                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_GLOBAL_LNK_TYPE_t;
#endif /* !__ASSEMBLER__ */


#define PUC_US_OMCI_HDR_A_CFG                    0xf5508160
#define PUC_US_OMCI_HDR_A_CFG_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gemid_replacement    :  8 ; /* bits 7:0 */
    ca_uint32_t cos_replacement      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t tcont_replacement    :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               :  8 ;
    ca_uint32_t enable_data_pkt_replacement :  1 ; /* bits 30:30 */
    ca_uint32_t enable_replacement   :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_US_OMCI_HDR_A_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_US_OMCI_HP_HDR_A_CFG                 0xf5508164
#define PUC_US_OMCI_HP_HDR_A_CFG_dft             0x00000101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t gemid_replacement    :  8 ; /* bits 7:0 */
    ca_uint32_t cos_replacement      :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t tcont_replacement    :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd2               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_US_OMCI_HP_HDR_A_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_GLOBAL_PLOAM_CFG                     0xf5508168
#define PUC_GLOBAL_PLOAM_CFG_dft                 0x0e20f760

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t us_ploam_msg_gen_en  :  1 ; /* bits 0:0 */
    ca_uint32_t ds_ploam_pkt_gen_en  :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t us_ploam_omci_hdr_a_compare_en :  1 ; /* bits 3:3 */
    ca_uint32_t us_omci_hdr_a_field  :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t us_ploam_hdr_a_field :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t us_mpcp_cos_replace_en :  1 ; /* bits 12:12 */
    ca_uint32_t us_mpcp_cos_replacement :  3 ; /* bits 15:13 */
    ca_uint32_t us_hdr_min_size      :  6 ; /* bits 21:16 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t us_ext_omci_min_length :  6 ; /* bits 29:24 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t us_ext_omci_en       :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_GLOBAL_PLOAM_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_DS_PLOAM_HDR_A_CFG1                  0xf550816c
#define PUC_DS_PLOAM_HDR_A_CFG1_dft              0x00002000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data1                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_DS_PLOAM_HDR_A_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_DS_PLOAM_HDR_A_CFG0                  0xf5508170
#define PUC_DS_PLOAM_HDR_A_CFG0_dft              0x00220e37

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data0                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_DS_PLOAM_HDR_A_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_CONTROL_PKT_CNTR_mac             0xf5508174
#define PUC_BMC_CONTROL_PKT_CNTR_mac_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_CONTROL_PKT_CNTR_mac_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_CONTROL_PKT_CNTR_lnk             0xf5508178
#define PUC_BMC_CONTROL_PKT_CNTR_lnk_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_CONTROL_PKT_CNTR_lnk_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_RX_PKT                           0xf550817c
#define PUC_BMC_RX_PKT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ni_cntr              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_RX_PKT_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_RX_PKT_enq                       0xf5508180
#define PUC_BMC_RX_PKT_enq_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_RX_PKT_enq_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_FORCE_DROP                       0xf5508184
#define PUC_BMC_FORCE_DROP_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_FORCE_DROP_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_LENGTH_ERROR                     0xf5508188
#define PUC_BMC_LENGTH_ERROR_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_LENGTH_ERROR_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_DEBUG                            0xf550818c
#define PUC_BMC_DEBUG_dft                        0x00014000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe_status            : 16 ; /* bits 15:0 */
    ca_uint32_t intf_status          :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_DEBUG_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_FIFO_STS                         0xf5508190
#define PUC_BMC_FIFO_STS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t intf_fifo_depth      :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t intf_fifo_overflow   :  1 ; /* bits 6:6 */
    ca_uint32_t intf_fifo_front_overflow :  1 ; /* bits 7:7 */
    ca_uint32_t intf_fifo_front_depth :  4 ; /* bits 11:8 */
    ca_uint32_t wqf_data_fifo_depth  :  4 ; /* bits 15:12 */
    ca_uint32_t buf_link_fifo_depth  :  4 ; /* bits 19:16 */
    ca_uint32_t wqf_cmd_fifo_depth   :  3 ; /* bits 22:20 */
    ca_uint32_t rqf_cmd_fifo_depth   :  3 ; /* bits 25:23 */
    ca_uint32_t bmc_pe               :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_PKT_HDR1                         0xf5508194
#define PUC_BMC_PKT_HDR1_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_PKT_HDR1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_PKT_HDR0                         0xf5508198
#define PUC_BMC_PKT_HDR0_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdr_a0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_PKT_HDR0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_BMC_MTU                              0xf550819c
#define PUC_BMC_MTU_dft                          0x00002ee0

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t size                 : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_BMC_MTU_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq7                           0xf55081a0
#define PUC_valid_voq7_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid7               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq7_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq6                           0xf55081a4
#define PUC_valid_voq6_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid6               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq6_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq5                           0xf55081a8
#define PUC_valid_voq5_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid5               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq5_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq4                           0xf55081ac
#define PUC_valid_voq4_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid4               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq4_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq3                           0xf55081b0
#define PUC_valid_voq3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid3               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq2                           0xf55081b4
#define PUC_valid_voq2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid2               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq1                           0xf55081b8
#define PUC_valid_voq1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid1               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_valid_voq0                           0xf55081bc
#define PUC_valid_voq0_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t valid0               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_valid_voq0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_soft_reset                           0xf55081c0
#define PUC_soft_reset_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_soft_reset_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQ_TBC_MEM_ACCESS                   0xf55081c4
#define PUC_VOQ_TBC_MEM_ACCESS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQ_TBC_MEM_DATA1                    0xf55081c8
#define PUC_VOQ_TBC_MEM_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_VOQ_TBC_MEM_DATA0                    0xf55081cc
#define PUC_VOQ_TBC_MEM_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_TBC_MEM_ACCESS                0xf55081d0
#define PUC_RL_VOQ_TBC_MEM_ACCESS_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_TBC_MEM_DATA1                 0xf55081d4
#define PUC_RL_VOQ_TBC_MEM_DATA1_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_TBC_MEM_DATA0                 0xf55081d8
#define PUC_RL_VOQ_TBC_MEM_DATA0_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_DCNT_MEM_ACCESS               0xf55081dc
#define PUC_RL_VOQ_DCNT_MEM_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_DCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_DCNT_MEM_DATA2                0xf55081e0
#define PUC_RL_VOQ_DCNT_MEM_DATA2_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcnt                 :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_DCNT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_DCNT_MEM_DATA1                0xf55081e4
#define PUC_RL_VOQ_DCNT_MEM_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_DCNT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_RL_VOQ_DCNT_MEM_DATA0                0xf55081e8
#define PUC_RL_VOQ_DCNT_MEM_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pcnt                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_RL_VOQ_DCNT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PIR_VOQ_TBC_MEM_ACCESS               0xf55081ec
#define PUC_PIR_VOQ_TBC_MEM_ACCESS_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PIR_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PIR_VOQ_TBC_MEM_DATA1                0xf55081f0
#define PUC_PIR_VOQ_TBC_MEM_DATA1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PIR_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_PIR_VOQ_TBC_MEM_DATA0                0xf55081f4
#define PUC_PIR_VOQ_TBC_MEM_DATA0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_PIR_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_AGR_SHP_CTRL1                        0xf55081f8
#define PUC_AGR_SHP_CTRL1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cbs                  : 10 ; /* bits 9:0 */
    ca_uint32_t enb                  :  2 ; /* bits 11:10 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_AGR_SHP_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_AGR_SHP_CTRL0                        0xf55081fc
#define PUC_AGR_SHP_CTRL0_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_AGR_SHP_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_AGR_SHP_STS                          0xf5508200
#define PUC_AGR_SHP_STS_dft                      0x00100000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tbc                  : 21 ; /* bits 20:0 */
    ca_uint32_t rsrvd1               : 11 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_AGR_SHP_STS_t;
#endif /* !__ASSEMBLER__ */


#define PUC_TB_CTRL                              0xf5508204
#define PUC_TB_CTRL_dft                          0x2ff3e720

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t upd_cnt_lmt          :  4 ; /* bits 7:4 */
    ca_uint32_t cyc_cnt_lmt          : 12 ; /* bits 19:8 */
    ca_uint32_t last_upd_cyc         : 12 ; /* bits 31:20 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PUC_TB_CTRL1                             0xf5508208
#define PUC_TB_CTRL1_dft                         0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t k_cnt_lmt            : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc1_0             0xf550820c
#define PUC_SRAM_TEST_CONTROL_puc1_0_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc1_0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc1_1             0xf5508210
#define PUC_SRAM_TEST_CONTROL_puc1_1_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc1_1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc1_2             0xf5508214
#define PUC_SRAM_TEST_CONTROL_puc1_2_dft         0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc1_2_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc2_0             0xf5508218
#define PUC_SRAM_TEST_CONTROL_puc2_0_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc2_0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc2_1             0xf550821c
#define PUC_SRAM_TEST_CONTROL_puc2_1_dft         0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc2_1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc2b_0            0xf5508220
#define PUC_SRAM_TEST_CONTROL_puc2b_0_dft        0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc2b_0_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc2b_1            0xf5508224
#define PUC_SRAM_TEST_CONTROL_puc2b_1_dft        0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc2b_1_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc3               0xf5508228
#define PUC_SRAM_TEST_CONTROL_puc3_dft           0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc3_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SRAM_TEST_CONTROL_puc1_2p            0xf550822c
#define PUC_SRAM_TEST_CONTROL_puc1_2p_dft        0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SRAM_TEST_CONTROL_puc1_2p_t;
#endif /* !__ASSEMBLER__ */


#define PUC_Q2PQSRCFG01                          0xf5508230
#define PUC_Q2PQSRCFG01_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm_rpt_lv0           : 16 ; /* bits 15:0 */
    ca_uint32_t qm_rpt_lv1           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_Q2PQSRCFG01_t;
#endif /* !__ASSEMBLER__ */


#define PUC_Q2PQSRCFG23                          0xf5508234
#define PUC_Q2PQSRCFG23_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qm_rpt_lv2           : 16 ; /* bits 15:0 */
    ca_uint32_t qm_rpt_lv3           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PUC_Q2PQSRCFG23_t;
#endif /* !__ASSEMBLER__ */


#define PUC_SHORT_PKT_GAP                        0xf5508238
#define PUC_SHORT_PKT_GAP_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t single_buf_gap       :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} PUC_SHORT_PKT_GAP_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PUC */
#ifndef __ASSEMBLER__
typedef struct {
  PUC_PVTBL_ACCESS_t                       PVTBL_ACCESS;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PUC_PVTBL_DATA4_t                        PVTBL_DATA4;                   /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PUC_PVTBL_DATA3_t                        PVTBL_DATA3;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PUC_PVTBL_DATA2_t                        PVTBL_DATA2;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PUC_PVTBL_DATA1_t                        PVTBL_DATA1;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PUC_PVTBL_DATA0_t                        PVTBL_DATA0;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PUC_HPMEM_ACCESS_t                       HPMEM_ACCESS;                  /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PUC_HPMEM_DATA_t                         HPMEM_DATA;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PUC_BCMEM_ACCESS_t                       BCMEM_ACCESS;                  /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PUC_BCMEM_DATA1_t                        BCMEM_DATA1;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PUC_BCMEM_DATA0_t                        BCMEM_DATA0;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PUC_TQMEM_ACCESS_t                       TQMEM_ACCESS;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PUC_TQMEM_DATA1_t                        TQMEM_DATA1;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PUC_TQMEM_DATA0_t                        TQMEM_DATA0;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PUC_OPMEM_ACCESS_t                       OPMEM_ACCESS;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PUC_OPMEM_DATA_t                         OPMEM_DATA;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PUC_BPMEM_ACCESS_t                       BPMEM_ACCESS;                  /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PUC_BPMEM_DATA_t                         BPMEM_DATA;                    /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PUC_VOQSCHCFG_t                          VOQSCHCFG;                     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PUC_VOQMAPCFG_t                          VOQMAPCFG;                     /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PUC_BTCCFG_t                             BTCCFG;                        /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PUC_RPTCFG_t                             RPTCFG;                        /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PUC_NTTCFG_t                             NTTCFG;                        /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PUC_PVTCFG_t                             PVTCFG;                        /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PUC_VSTBL_ACCESS_t                       VSTBL_ACCESS;                  /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PUC_VSTBL_DATA4_t                        VSTBL_DATA4;                   /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PUC_VSTBL_DATA3_t                        VSTBL_DATA3;                   /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PUC_VSTBL_DATA2_t                        VSTBL_DATA2;                   /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PUC_VSTBL_DATA1_t                        VSTBL_DATA1;                   /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PUC_VSTBL_DATA0_t                        VSTBL_DATA0;                   /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PUC_RPTQSCFG12_t                         RPTQSCFG12;                    /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PUC_RPTQSCFG23_t                         RPTQSCFG23;                    /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PUC_SLLIDVOQ74CFG_t                      SLLIDVOQ74CFG;                 /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PUC_SLLIDVOQ30CFG_t                      SLLIDVOQ30CFG;                 /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PUC_BMSTS_t                              BMSTS;                         /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  PUC_PUCCFG_t                             PUCCFG;                        /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  PUC_VOQBUFLIMITSEL015000_t               VOQBUFLIMITSEL015000;          /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  PUC_VOQBUFLIMITSEL031016_t               VOQBUFLIMITSEL031016;          /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  PUC_VOQBUFLIMITSEL047032_t               VOQBUFLIMITSEL047032;          /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  PUC_VOQBUFLIMITSEL063048_t               VOQBUFLIMITSEL063048;          /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  PUC_VOQBUFLIMITSEL079064_t               VOQBUFLIMITSEL079064;          /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  PUC_VOQBUFLIMITSEL095080_t               VOQBUFLIMITSEL095080;          /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  PUC_VOQBUFLIMITSEL111096_t               VOQBUFLIMITSEL111096;          /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  PUC_VOQBUFLIMITSEL127112_t               VOQBUFLIMITSEL127112;          /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  PUC_VOQBUFLIMITSEL143128_t               VOQBUFLIMITSEL143128;          /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  PUC_VOQBUFLIMITSEL159144_t               VOQBUFLIMITSEL159144;          /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  PUC_VOQBUFLIMITSEL175160_t               VOQBUFLIMITSEL175160;          /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  PUC_VOQBUFLIMITSEL191176_t               VOQBUFLIMITSEL191176;          /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  PUC_VOQBUFLIMITSEL207192_t               VOQBUFLIMITSEL207192;          /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  PUC_VOQBUFLIMITSEL223208_t               VOQBUFLIMITSEL223208;          /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  PUC_VOQBUFLIMITSEL239224_t               VOQBUFLIMITSEL239224;          /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  PUC_VOQBUFLIMITSEL255240_t               VOQBUFLIMITSEL255240;          /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  PUC_VOQBUFLIMIT_A_t                      VOQBUFLIMIT_A;                 /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  PUC_VOQBUFLIMIT_B_t                      VOQBUFLIMIT_B;                 /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  PUC_VOQBUFLIMIT_C_t                      VOQBUFLIMIT_C;                 /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  PUC_VOQFLUSH_t                           VOQFLUSH;                      /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  PUC_VOQDROP_t                            VOQDROP;                       /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd57[3];
  PUC_BPCNTL_t                             BPCNTL;                        /* addr: 0x000000e4 */
  ca_uint32_t                              rsrvd58[3];
  PUC_VOQBPREMAP_ACCESS_t                  VOQBPREMAP_ACCESS;             /* addr: 0x000000e8 */
  ca_uint32_t                              rsrvd59[3];
  PUC_VOQBPREMAP_DATA_t                    VOQBPREMAP_DATA;               /* addr: 0x000000ec */
  ca_uint32_t                              rsrvd60[3];
  PUC_PONCNTL_INTERRUPT_t                  PONCNTL_INTERRUPT;             /* addr: 0x000000f0 */
  ca_uint32_t                              rsrvd61[3];
  PUC_PONCNTL_INTENABLE_t                  PONCNTL_INTENABLE;             /* addr: 0x000000f4 */
  ca_uint32_t                              rsrvd62[3];
  PUC_RPTADJCFG1_t                         RPTADJCFG1;                    /* addr: 0x000000f8 */
  ca_uint32_t                              rsrvd63[3];
  PUC_RPTADJCFG2_t                         RPTADJCFG2;                    /* addr: 0x000000fc */
  ca_uint32_t                              rsrvd64[3];
  PUC_RPTADJCFG3_t                         RPTADJCFG3;                    /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd65[3];
  PUC_RPTGAPVAL_t                          RPTGAPVAL;                     /* addr: 0x00000104 */
  ca_uint32_t                              rsrvd66[3];
  PUC_PKGBGNTINFO_t                        PKGBGNTINFO;                   /* addr: 0x00000108 */
  ca_uint32_t                              rsrvd67[3];
  PUC_MICROSECCLKCNT_t                     MICROSECCLKCNT;                /* addr: 0x0000010c */
  ca_uint32_t                              rsrvd68[3];
  PUC_BMDBGFBCNT_t                         BMDBGFBCNT;                    /* addr: 0x00000110 */
  ca_uint32_t                              rsrvd69[3];
  PUC_BMDBGFBPA_t                          BMDBGFBPA;                     /* addr: 0x00000114 */
  ca_uint32_t                              rsrvd70[3];
  PUC_BMDBGFBPB_t                          BMDBGFBPB;                     /* addr: 0x00000118 */
  ca_uint32_t                              rsrvd71[3];
  PUC_BTCDBG1_t                            BTCDBG1;                       /* addr: 0x0000011c */
  ca_uint32_t                              rsrvd72[3];
  PUC_BTCDBG2_t                            BTCDBG2;                       /* addr: 0x00000120 */
  ca_uint32_t                              rsrvd73[3];
  PUC_BTCDBG3_t                            BTCDBG3;                       /* addr: 0x00000124 */
  ca_uint32_t                              rsrvd74[3];
  PUC_DQMDBG1_t                            DQMDBG1;                       /* addr: 0x00000128 */
  ca_uint32_t                              rsrvd75[3];
  PUC_DQMDBG2_t                            DQMDBG2;                       /* addr: 0x0000012c */
  ca_uint32_t                              rsrvd76[3];
  PUC_DQMDBG3_t                            DQMDBG3;                       /* addr: 0x00000130 */
  ca_uint32_t                              rsrvd77[3];
  PUC_RPCDBG1_t                            RPCDBG1;                       /* addr: 0x00000134 */
  ca_uint32_t                              rsrvd78[3];
  PUC_RPCDBG2_t                            RPCDBG2;                       /* addr: 0x00000138 */
  ca_uint32_t                              rsrvd79[3];
  PUC_CTRL_t                               CTRL;                          /* addr: 0x0000013c */
  ca_uint32_t                              rsrvd80[3];
  PUC_CTRL1_t                              CTRL1;                         /* addr: 0x00000140 */
  ca_uint32_t                              rsrvd81[3];
  PUC_CTRL2_t                              CTRL2;                         /* addr: 0x00000144 */
  ca_uint32_t                              rsrvd82[3];
  PUC_STS_t                                STS;                           /* addr: 0x00000148 */
  ca_uint32_t                              rsrvd83[3];
  PUC_GLOBAL_DA_SA2_t                      GLOBAL_DA_SA2;                 /* addr: 0x0000014c */
  ca_uint32_t                              rsrvd84[3];
  PUC_GLOBAL_DA_SA1_t                      GLOBAL_DA_SA1;                 /* addr: 0x00000150 */
  ca_uint32_t                              rsrvd85[3];
  PUC_GLOBAL_DA_SA0_t                      GLOBAL_DA_SA0;                 /* addr: 0x00000154 */
  ca_uint32_t                              rsrvd86[3];
  PUC_GLOBAL_MAC_TYPE_t                    GLOBAL_MAC_TYPE;               /* addr: 0x00000158 */
  ca_uint32_t                              rsrvd87[3];
  PUC_GLOBAL_LNK_TYPE_t                    GLOBAL_LNK_TYPE;               /* addr: 0x0000015c */
  ca_uint32_t                              rsrvd88[3];
  PUC_US_OMCI_HDR_A_CFG_t                  US_OMCI_HDR_A_CFG;             /* addr: 0x00000160 */
  ca_uint32_t                              rsrvd89[3];
  PUC_US_OMCI_HP_HDR_A_CFG_t               US_OMCI_HP_HDR_A_CFG;          /* addr: 0x00000164 */
  ca_uint32_t                              rsrvd90[3];
  PUC_GLOBAL_PLOAM_CFG_t                   GLOBAL_PLOAM_CFG;              /* addr: 0x00000168 */
  ca_uint32_t                              rsrvd91[3];
  PUC_DS_PLOAM_HDR_A_CFG1_t                DS_PLOAM_HDR_A_CFG1;           /* addr: 0x0000016c */
  ca_uint32_t                              rsrvd92[3];
  PUC_DS_PLOAM_HDR_A_CFG0_t                DS_PLOAM_HDR_A_CFG0;           /* addr: 0x00000170 */
  ca_uint32_t                              rsrvd93[3];
  PUC_BMC_CONTROL_PKT_CNTR_mac_t           BMC_CONTROL_PKT_CNTR_mac;      /* addr: 0x00000174 */
  ca_uint32_t                              rsrvd94[3];
  PUC_BMC_CONTROL_PKT_CNTR_lnk_t           BMC_CONTROL_PKT_CNTR_lnk;      /* addr: 0x00000178 */
  ca_uint32_t                              rsrvd95[3];
  PUC_BMC_RX_PKT_t                         BMC_RX_PKT;                    /* addr: 0x0000017c */
  ca_uint32_t                              rsrvd96[3];
  PUC_BMC_RX_PKT_enq_t                     BMC_RX_PKT_enq;                /* addr: 0x00000180 */
  ca_uint32_t                              rsrvd97[3];
  PUC_BMC_FORCE_DROP_t                     BMC_FORCE_DROP;                /* addr: 0x00000184 */
  ca_uint32_t                              rsrvd98[3];
  PUC_BMC_LENGTH_ERROR_t                   BMC_LENGTH_ERROR;              /* addr: 0x00000188 */
  ca_uint32_t                              rsrvd99[3];
  PUC_BMC_DEBUG_t                          BMC_DEBUG;                     /* addr: 0x0000018c */
  ca_uint32_t                              rsrvd100[3];
  PUC_BMC_FIFO_STS_t                       BMC_FIFO_STS;                  /* addr: 0x00000190 */
  ca_uint32_t                              rsrvd101[3];
  PUC_BMC_PKT_HDR1_t                       BMC_PKT_HDR1;                  /* addr: 0x00000194 */
  ca_uint32_t                              rsrvd102[3];
  PUC_BMC_PKT_HDR0_t                       BMC_PKT_HDR0;                  /* addr: 0x00000198 */
  ca_uint32_t                              rsrvd103[3];
  PUC_BMC_MTU_t                            BMC_MTU;                       /* addr: 0x0000019c */
  ca_uint32_t                              rsrvd104[3];
  PUC_valid_voq7_t                         valid_voq7;                    /* addr: 0x000001a0 */
  ca_uint32_t                              rsrvd105[3];
  PUC_valid_voq6_t                         valid_voq6;                    /* addr: 0x000001a4 */
  ca_uint32_t                              rsrvd106[3];
  PUC_valid_voq5_t                         valid_voq5;                    /* addr: 0x000001a8 */
  ca_uint32_t                              rsrvd107[3];
  PUC_valid_voq4_t                         valid_voq4;                    /* addr: 0x000001ac */
  ca_uint32_t                              rsrvd108[3];
  PUC_valid_voq3_t                         valid_voq3;                    /* addr: 0x000001b0 */
  ca_uint32_t                              rsrvd109[3];
  PUC_valid_voq2_t                         valid_voq2;                    /* addr: 0x000001b4 */
  ca_uint32_t                              rsrvd110[3];
  PUC_valid_voq1_t                         valid_voq1;                    /* addr: 0x000001b8 */
  ca_uint32_t                              rsrvd111[3];
  PUC_valid_voq0_t                         valid_voq0;                    /* addr: 0x000001bc */
  ca_uint32_t                              rsrvd112[3];
  PUC_soft_reset_t                         soft_reset;                    /* addr: 0x000001c0 */
  ca_uint32_t                              rsrvd113[3];
  PUC_VOQ_TBC_MEM_ACCESS_t                 VOQ_TBC_MEM_ACCESS;            /* addr: 0x000001c4 */
  ca_uint32_t                              rsrvd114[3];
  PUC_VOQ_TBC_MEM_DATA1_t                  VOQ_TBC_MEM_DATA1;             /* addr: 0x000001c8 */
  ca_uint32_t                              rsrvd115[3];
  PUC_VOQ_TBC_MEM_DATA0_t                  VOQ_TBC_MEM_DATA0;             /* addr: 0x000001cc */
  ca_uint32_t                              rsrvd116[3];
  PUC_RL_VOQ_TBC_MEM_ACCESS_t              RL_VOQ_TBC_MEM_ACCESS;         /* addr: 0x000001d0 */
  ca_uint32_t                              rsrvd117[3];
  PUC_RL_VOQ_TBC_MEM_DATA1_t               RL_VOQ_TBC_MEM_DATA1;          /* addr: 0x000001d4 */
  ca_uint32_t                              rsrvd118[3];
  PUC_RL_VOQ_TBC_MEM_DATA0_t               RL_VOQ_TBC_MEM_DATA0;          /* addr: 0x000001d8 */
  ca_uint32_t                              rsrvd119[3];
  PUC_RL_VOQ_DCNT_MEM_ACCESS_t             RL_VOQ_DCNT_MEM_ACCESS;        /* addr: 0x000001dc */
  ca_uint32_t                              rsrvd120[3];
  PUC_RL_VOQ_DCNT_MEM_DATA2_t              RL_VOQ_DCNT_MEM_DATA2;         /* addr: 0x000001e0 */
  ca_uint32_t                              rsrvd121[3];
  PUC_RL_VOQ_DCNT_MEM_DATA1_t              RL_VOQ_DCNT_MEM_DATA1;         /* addr: 0x000001e4 */
  ca_uint32_t                              rsrvd122[3];
  PUC_RL_VOQ_DCNT_MEM_DATA0_t              RL_VOQ_DCNT_MEM_DATA0;         /* addr: 0x000001e8 */
  ca_uint32_t                              rsrvd123[3];
  PUC_PIR_VOQ_TBC_MEM_ACCESS_t             PIR_VOQ_TBC_MEM_ACCESS;        /* addr: 0x000001ec */
  ca_uint32_t                              rsrvd124[3];
  PUC_PIR_VOQ_TBC_MEM_DATA1_t              PIR_VOQ_TBC_MEM_DATA1;         /* addr: 0x000001f0 */
  ca_uint32_t                              rsrvd125[3];
  PUC_PIR_VOQ_TBC_MEM_DATA0_t              PIR_VOQ_TBC_MEM_DATA0;         /* addr: 0x000001f4 */
  ca_uint32_t                              rsrvd126[3];
  PUC_AGR_SHP_CTRL1_t                      AGR_SHP_CTRL1;                 /* addr: 0x000001f8 */
  ca_uint32_t                              rsrvd127[3];
  PUC_AGR_SHP_CTRL0_t                      AGR_SHP_CTRL0;                 /* addr: 0x000001fc */
  ca_uint32_t                              rsrvd128[3];
  PUC_AGR_SHP_STS_t                        AGR_SHP_STS;                   /* addr: 0x00000200 */
  ca_uint32_t                              rsrvd129[3];
  PUC_TB_CTRL_t                            TB_CTRL;                       /* addr: 0x00000204 */
  ca_uint32_t                              rsrvd130[3];
  PUC_TB_CTRL1_t                           TB_CTRL1;                      /* addr: 0x00000208 */
  ca_uint32_t                              rsrvd131[3];
  PUC_SRAM_TEST_CONTROL_puc1_0_t           SRAM_TEST_CONTROL_puc1_0;      /* addr: 0x0000020c */
  ca_uint32_t                              rsrvd132[3];
  PUC_SRAM_TEST_CONTROL_puc1_1_t           SRAM_TEST_CONTROL_puc1_1;      /* addr: 0x00000210 */
  ca_uint32_t                              rsrvd133[3];
  PUC_SRAM_TEST_CONTROL_puc1_2_t           SRAM_TEST_CONTROL_puc1_2;      /* addr: 0x00000214 */
  ca_uint32_t                              rsrvd134[3];
  PUC_SRAM_TEST_CONTROL_puc2_0_t           SRAM_TEST_CONTROL_puc2_0;      /* addr: 0x00000218 */
  ca_uint32_t                              rsrvd135[3];
  PUC_SRAM_TEST_CONTROL_puc2_1_t           SRAM_TEST_CONTROL_puc2_1;      /* addr: 0x0000021c */
  ca_uint32_t                              rsrvd136[3];
  PUC_SRAM_TEST_CONTROL_puc2b_0_t          SRAM_TEST_CONTROL_puc2b_0;     /* addr: 0x00000220 */
  ca_uint32_t                              rsrvd137[3];
  PUC_SRAM_TEST_CONTROL_puc2b_1_t          SRAM_TEST_CONTROL_puc2b_1;     /* addr: 0x00000224 */
  ca_uint32_t                              rsrvd138[3];
  PUC_SRAM_TEST_CONTROL_puc3_t             SRAM_TEST_CONTROL_puc3;        /* addr: 0x00000228 */
  ca_uint32_t                              rsrvd139[3];
  PUC_SRAM_TEST_CONTROL_puc1_2p_t          SRAM_TEST_CONTROL_puc1_2p;     /* addr: 0x0000022c */
  ca_uint32_t                              rsrvd140[3];
  PUC_Q2PQSRCFG01_t                        Q2PQSRCFG01;                   /* addr: 0x00000230 */
  ca_uint32_t                              rsrvd141[3];
  PUC_Q2PQSRCFG23_t                        Q2PQSRCFG23;                   /* addr: 0x00000234 */
  ca_uint32_t                              rsrvd142[3];
  PUC_SHORT_PKT_GAP_t                      SHORT_PKT_GAP;                 /* addr: 0x00000238 */
} APB7_PUC_t;
#endif /* !__ASSEMBLER__ */


/*
 * PDC
 */

#define PDC_CNTR_CFG                             0xf5509000
#define PDC_CNTR_CFG_dft                         0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inccfg               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_CNTR_CFG_t;
#endif /* !__ASSEMBLER__ */


#define PDC_PKT_CNTR                             0xf5509004
#define PDC_PKT_CNTR_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PDC_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define PDC_ERR_PKT_CNTR                         0xf5509008
#define PDC_ERR_PKT_CNTR_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cntr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_ERR_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */


#define PDC_SPARE                                0xf550900c
#define PDC_SPARE_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define PDC_FIFO_STATUS                          0xf5509010
#define PDC_FIFO_STATUS_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t depth                :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t over_flow            :  1 ; /* bits 14:14 */
    ca_uint32_t map_fifo_over_flow   :  1 ; /* bits 15:15 */
    ca_uint32_t spare                : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PDC_FIFO_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PDC_CTRL                                 0xf5509014
#define PDC_CTRL_dft                             0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t nocrc_insert         :  1 ; /* bits 0:0 */
    ca_uint32_t pdc_map_mem_en       :  1 ; /* bits 1:1 */
    ca_uint32_t epon_insert_16byte_hdr :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t omci_hp_cos          :  3 ; /* bits 18:16 */
    ca_uint32_t omci_hp_ldpid        :  6 ; /* bits 24:19 */
    ca_uint32_t omci_hp_en           :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd2               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PDC_CONTROL_PKT_CNTR_mac                 0xf5509018
#define PDC_CONTROL_PKT_CNTR_mac_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_layer            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_CONTROL_PKT_CNTR_mac_t;
#endif /* !__ASSEMBLER__ */


#define PDC_CONTROL_PKT_CNTR_lnk                 0xf550901c
#define PDC_CONTROL_PKT_CNTR_lnk_dft             0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t link_layer           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_CONTROL_PKT_CNTR_lnk_t;
#endif /* !__ASSEMBLER__ */


#define PDC_PDC_MAP_MEM_ACCESS                   0xf5509020
#define PDC_PDC_MAP_MEM_ACCESS_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PDC_PDC_MAP_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PDC_PDC_MAP_MEM_DATA1                    0xf5509024
#define PDC_PDC_MAP_MEM_DATA1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mirror               :  1 ; /* bits 0:0 */
    ca_uint32_t mark                 :  1 ; /* bits 1:1 */
    ca_uint32_t pol_en               :  2 ; /* bits 3:2 */
    ca_uint32_t pol_id               :  9 ; /* bits 12:4 */
    ca_uint32_t pol_grp_id           :  3 ; /* bits 15:13 */
    ca_uint32_t deepq                :  1 ; /* bits 16:16 */
    ca_uint32_t rsvd                 :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_PDC_MAP_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define PDC_PDC_MAP_MEM_DATA0                    0xf5509028
#define PDC_PDC_MAP_MEM_DATA0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cos                  :  3 ; /* bits 2:0 */
    ca_uint32_t ldpid                :  6 ; /* bits 8:3 */
    ca_uint32_t lspid                :  6 ; /* bits 14:9 */
    ca_uint32_t fe_bypass            :  1 ; /* bits 15:15 */
    ca_uint32_t hdr_type             :  2 ; /* bits 17:16 */
    ca_uint32_t mcgid                :  8 ; /* bits 25:18 */
    ca_uint32_t drop_code            :  3 ; /* bits 28:26 */
    ca_uint32_t rx_pkt_type          :  2 ; /* bits 30:29 */
    ca_uint32_t no_drop              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PDC_PDC_MAP_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define PDC_soft_reset                           0xf550902c
#define PDC_soft_reset_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_soft_reset_t;
#endif /* !__ASSEMBLER__ */


#define PDC_DEBUG_CTRL                           0xf5509030
#define PDC_DEBUG_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_DEBUG_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PDC_DEBUG_STATUS                         0xf5509034
#define PDC_DEBUG_STATUS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_DEBUG_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PDC_SRAM_TEST_CONTROL_pdc_0              0xf5509038
#define PDC_SRAM_TEST_CONTROL_pdc_0_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_SRAM_TEST_CONTROL_pdc_0_t;
#endif /* !__ASSEMBLER__ */


#define PDC_SRAM_TEST_CONTROL_pdc_1              0xf550903c
#define PDC_SRAM_TEST_CONTROL_pdc_1_dft          0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               :  4 ;
    ca_uint32_t test_cfg2            :  4 ; /* bits 19:16 */
    ca_uint32_t rsrvd3               :  4 ;
    ca_uint32_t test_cfg3            :  4 ; /* bits 27:24 */
    ca_uint32_t rsrvd4               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_SRAM_TEST_CONTROL_pdc_1_t;
#endif /* !__ASSEMBLER__ */


#define PDC_SRAM_TEST_CONTROL_pdc_2              0xf5509040
#define PDC_SRAM_TEST_CONTROL_pdc_2_dft          0x00000202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t test_cfg1            :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd2               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PDC_SRAM_TEST_CONTROL_pdc_2_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PDC */
#ifndef __ASSEMBLER__
typedef struct {
  PDC_CNTR_CFG_t                           CNTR_CFG;                      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PDC_PKT_CNTR_t                           PKT_CNTR;                      /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PDC_ERR_PKT_CNTR_t                       ERR_PKT_CNTR;                  /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PDC_SPARE_t                              SPARE;                         /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PDC_FIFO_STATUS_t                        FIFO_STATUS;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PDC_CTRL_t                               CTRL;                          /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PDC_CONTROL_PKT_CNTR_mac_t               CONTROL_PKT_CNTR_mac;          /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PDC_CONTROL_PKT_CNTR_lnk_t               CONTROL_PKT_CNTR_lnk;          /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PDC_PDC_MAP_MEM_ACCESS_t                 PDC_MAP_MEM_ACCESS;            /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PDC_PDC_MAP_MEM_DATA1_t                  PDC_MAP_MEM_DATA1;             /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PDC_PDC_MAP_MEM_DATA0_t                  PDC_MAP_MEM_DATA0;             /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PDC_soft_reset_t                         soft_reset;                    /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PDC_DEBUG_CTRL_t                         DEBUG_CTRL;                    /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PDC_DEBUG_STATUS_t                       DEBUG_STATUS;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PDC_SRAM_TEST_CONTROL_pdc_0_t            SRAM_TEST_CONTROL_pdc_0;       /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PDC_SRAM_TEST_CONTROL_pdc_1_t            SRAM_TEST_CONTROL_pdc_1;       /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PDC_SRAM_TEST_CONTROL_pdc_2_t            SRAM_TEST_CONTROL_pdc_2;       /* addr: 0x00000040 */
} APB7_PDC_t;
#endif /* !__ASSEMBLER__ */


/*
 * PSDS_WRAP
 */

#define PSDS_PON_PRBS_CONTROL                    0xf550a000
#define PSDS_PON_PRBS_CONTROL_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_control         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_BEN_CNT                    0xf550a004
#define PSDS_PON_PRBS_BEN_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_ben_cnt         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_BEN_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_BEN_H                      0xf550a008
#define PSDS_PON_PRBS_BEN_H_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_ben_l           : 16 ; /* bits 15:0 */
    ca_uint32_t prbs_ben_h           : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_BEN_H_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_TX_H0                      0xf550a00c
#define PSDS_PON_PRBS_TX_H0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_tx_h0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_TX_H0_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_TX_H1                      0xf550a010
#define PSDS_PON_PRBS_TX_H1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_tx_h1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_TX_H1_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_TX_L0                      0xf550a014
#define PSDS_PON_PRBS_TX_L0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_tx_low0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_TX_L0_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_TX_L1                      0xf550a018
#define PSDS_PON_PRBS_TX_L1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_tx_low1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_TX_L1_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_STATUS0                    0xf550a01c
#define PSDS_PON_PRBS_STATUS0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_status0         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_STATUS0_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_STATUS1                    0xf550a020
#define PSDS_PON_PRBS_STATUS1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_status1         : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_STATUS1_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PON_PRBS_ERR_CNT                    0xf550a024
#define PSDS_PON_PRBS_ERR_CNT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_err_cnt         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PON_PRBS_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_RESET                               0xf550a028
#define PSDS_RESET_dft                           0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp_reset             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_RESET_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_MODE                                0xf550a02c
#define PSDS_MODE_dft                            0x0000045f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_mode_s0          :  5 ; /* bits 4:0 */
    ca_uint32_t usx_sub_mx_s0        :  5 ; /* bits 9:5 */
    ca_uint32_t sd_s0                :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_MODE_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_CH0_ABILITY                         0xf550a030
#define PSDS_CH0_ABILITY_dft                     0x00005cf5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_sds0_ablty     : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_CH0_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_MISC_CNTL_1                         0xf550a034
#define PSDS_MISC_CNTL_1_dft                     0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t auto_det_sg0_upd_en  :  1 ; /* bits 0:0 */
    ca_uint32_t cfg_fb_on            :  1 ; /* bits 1:1 */
    ca_uint32_t cfg_unidir_en_tgxr0  :  1 ; /* bits 2:2 */
    ca_uint32_t eee_lpi_tx_tgxr0     :  1 ; /* bits 3:3 */
    ca_uint32_t load_sys_par_s0      :  1 ; /* bits 4:4 */
    ca_uint32_t pdown_en_ini_tgr_s0  :  1 ; /* bits 5:5 */
    ca_uint32_t sds01_autoneg_en_ini_s0 :  1 ; /* bits 6:6 */
    ca_uint32_t sds01_autoneg_en_ini_s1 :  1 ; /* bits 7:7 */
    ca_uint32_t sds01_iso_on_s0      :  1 ; /* bits 8:8 */
    ca_uint32_t sds01_lpi_gmii_sel   :  1 ; /* bits 9:9 */
    ca_uint32_t sds01_pdown_en_ini_s0 :  1 ; /* bits 10:10 */
    ca_uint32_t sds01_pdown_en_ini_s1 :  1 ; /* bits 11:11 */
    ca_uint32_t sds01_sds_frc_ld_s0  :  1 ; /* bits 12:12 */
    ca_uint32_t sds01_sds_phy_mode   :  1 ; /* bits 13:13 */
    ca_uint32_t sds01_sds_rx_disable_s0 :  1 ; /* bits 14:14 */
    ca_uint32_t sds01_sds_rx_disable_s1 :  1 ; /* bits 15:15 */
    ca_uint32_t sds01_sds_tx_disable_s0 :  1 ; /* bits 16:16 */
    ca_uint32_t sds01_sds_tx_disable_s1 :  1 ; /* bits 17:17 */
    ca_uint32_t sds01_silent_en_ini_s0 :  1 ; /* bits 18:18 */
    ca_uint32_t sds01_silent_en_ini_s1 :  1 ; /* bits 19:19 */
    ca_uint32_t sds01_spdup_ini      :  1 ; /* bits 20:20 */
    ca_uint32_t sds01_unidir_tx_able_s0 :  1 ; /* bits 21:21 */
    ca_uint32_t sel_ori_312p5_tgr0   :  1 ; /* bits 22:22 */
    ca_uint32_t sds01_frc_reg4_en_s0 :  1 ; /* bits 23:23 */
    ca_uint32_t sds01_frc_reg4_fib100_s0 :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd1               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_MISC_CNTL_1_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_MISC_CNTL_2                         0xf550a038
#define PSDS_MISC_CNTL_2_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_pause_ini_s0   :  2 ; /* bits 1:0 */
    ca_uint32_t sds01_pause_ini_s1   :  2 ; /* bits 3:2 */
    ca_uint32_t sds01_revision_no    :  4 ; /* bits 7:4 */
    ca_uint32_t sds01_mac_trx_idle   :  8 ; /* bits 15:8 */
    ca_uint32_t sds01_cmd_stop_gli_clk :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_MISC_CNTL_2_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_MISC_CNTL_3                         0xf550a03c
#define PSDS_MISC_CNTL_3_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_phy_lpi_rx     :  8 ; /* bits 7:0 */
    ca_uint32_t sds01_mac_lpi_tx     :  8 ; /* bits 15:8 */
    ca_uint32_t sds01_model_no       :  6 ; /* bits 21:16 */
    ca_uint32_t model_no_tgr_s0      :  6 ; /* bits 27:22 */
    ca_uint32_t revision_no_tgr_s0   :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_MISC_CNTL_3_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_MISC_CNTL_4                         0xf550a040
#define PSDS_MISC_CNTL_4_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t realtek_oui_tgr_s0   : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_MISC_CNTL_4_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_MISC_CNTL_5                         0xf550a044
#define PSDS_MISC_CNTL_5_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_realtek_oui    : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_MISC_CNTL_5_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_IF_INTERRUPT                        0xf550a048
#define PSDS_IF_INTERRUPT_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_sym_err_tgxr0I    :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_sds_rx_sym_err_all_s0I :  1 ; /* bits 1:1 */
    ca_uint32_t eee_lpi_rx_tgxr0I    :  1 ; /* bits 2:2 */
    ca_uint32_t sds01_sds_link_okI   :  1 ; /* bits 3:3 */
    ca_uint32_t sds01_sds_sdet_out_s0I :  1 ; /* bits 4:4 */
    ca_uint32_t rxidle_d_s0I         :  1 ; /* bits 5:5 */
    ca_uint32_t link_ok_tgxr0I       :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_IF_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_IF_INTENABLE                        0xf550a04c
#define PSDS_IF_INTENABLE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_sym_err_tgxr0E    :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_sds_rx_sym_err_all_s0E :  1 ; /* bits 1:1 */
    ca_uint32_t eee_lpi_rx_tgxr0E    :  1 ; /* bits 2:2 */
    ca_uint32_t sds01_sds_link_okE   :  1 ; /* bits 3:3 */
    ca_uint32_t sds01_sds_sdet_out_s0E :  1 ; /* bits 4:4 */
    ca_uint32_t rxidle_d_s0E         :  1 ; /* bits 5:5 */
    ca_uint32_t link_ok_tgxr0E       :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_IF_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_IF_STATUS                           0xf550a050
#define PSDS_IF_STATUS_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_sym_err_tgxr0     :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_sds_rx_sym_err_all_s0 :  1 ; /* bits 1:1 */
    ca_uint32_t eee_lpi_rx_tgxr0     :  1 ; /* bits 2:2 */
    ca_uint32_t sds01_sds_link_ok    :  1 ; /* bits 3:3 */
    ca_uint32_t sds01_sds_sdet_out_s0 :  1 ; /* bits 4:4 */
    ca_uint32_t rxidle_d_s0          :  1 ; /* bits 5:5 */
    ca_uint32_t sds01_mac_lpi_rx     :  8 ; /* bits 13:6 */
    ca_uint32_t sds01_phy_lpi_tx     :  8 ; /* bits 21:14 */
    ca_uint32_t link_fault_tgxr0     :  3 ; /* bits 24:22 */
    ca_uint32_t wtg_reg_rdy          :  1 ; /* bits 25:25 */
    ca_uint32_t sds01_fib_iso_s0     :  1 ; /* bits 26:26 */
    ca_uint32_t intp_tgr0            :  1 ; /* bits 27:27 */
    ca_uint32_t link_ok_tgxr0        :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd1               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_IF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_IF_STATUS2                          0xf550a054
#define PSDS_IF_STATUS2_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_fib100_det_s0  :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_fib100_sdet_s0 :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_IF_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_IF_ABILITY                          0xf550a058
#define PSDS_IF_ABILITY_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wtg_sdsab_0_ablty    : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_IF_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_RGB0                                0xf550a05c
#define PSDS_RGB0_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RXIDLE_D_SEL         :  1 ; /* bits 0:0 */
    ca_uint32_t RX_DATA_EN_SEL       :  1 ; /* bits 1:1 */
    ca_uint32_t opt_rx_sd_sel        :  1 ; /* bits 2:2 */
    ca_uint32_t opt_rx_sd_in         :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_RGB0_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_RGB8                                0xf550a060
#define PSDS_RGB8_dft                            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RX_LOS               :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  9 ;
    ca_uint32_t CKRDY_RX             :  1 ; /* bits 10:10 */
    ca_uint32_t CKRDY_TX             :  1 ; /* bits 11:11 */
    ca_uint32_t CKRDY_MPCP           :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t RXIDLE               :  1 ; /* bits 14:14 */
    ca_uint32_t BER_NOTIFY           :  1 ; /* bits 15:15 */
    ca_uint32_t VTH_EN               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd3               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_RGB8_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_GBOX_CTRL                           0xf550a064
#define PSDS_GBOX_CTRL_dft                       0x00000454

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbs_rx_en           :  1 ; /* bits 0:0 */
    ca_uint32_t prbs_tx_en           :  1 ; /* bits 1:1 */
    ca_uint32_t tx_3p125g_bit_ordering :  1 ; /* bits 2:2 */
    ca_uint32_t tx_elst_ff_rsync_en  :  1 ; /* bits 3:3 */
    ca_uint32_t rx_bit_ordering      :  2 ; /* bits 5:4 */
    ca_uint32_t tx_bit_ordering      :  2 ; /* bits 7:6 */
    ca_uint32_t rx_elst_ff_rsync     :  1 ; /* bits 8:8 */
    ca_uint32_t tx_elst_ff_rsync     :  1 ; /* bits 9:9 */
    ca_uint32_t rx_1gepn_turbo_bit_ordering :  1 ; /* bits 10:10 */
    ca_uint32_t rxd_inv_en           :  1 ; /* bits 11:11 */
    ca_uint32_t txd_inv_en           :  1 ; /* bits 12:12 */
    ca_uint32_t lpbk_rx_tx_near_en   :  1 ; /* bits 13:13 */
    ca_uint32_t lpbk_tx_rx_en        :  1 ; /* bits 14:14 */
    ca_uint32_t lao_en               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_GBOX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PRBS_CTRL                           0xf550a068
#define PSDS_PRBS_CTRL_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_prbs_mode         :  2 ; /* bits 1:0 */
    ca_uint32_t tx_insertOneBitErrorOnce :  1 ; /* bits 2:2 */
    ca_uint32_t tx_insertOneBitError :  1 ; /* bits 3:3 */
    ca_uint32_t tx_invertPrbs        :  1 ; /* bits 4:4 */
    ca_uint32_t tx_insertErrorOnce   :  1 ; /* bits 5:5 */
    ca_uint32_t tx_insertError       :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rx_prbs_mode         :  2 ; /* bits 9:8 */
    ca_uint32_t rx_invertPrbs        :  1 ; /* bits 10:10 */
    ca_uint32_t rx_clrCnt            :  1 ; /* bits 11:11 */
    ca_uint32_t rx_prbsEnabled       :  1 ; /* bits 12:12 */
    ca_uint32_t rx_loadPrbsState     :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd2               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PRBS_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PRBS_INTR                           0xf550a06c
#define PSDS_PRBS_INTR_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t syncState            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PRBS_INTR_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PRBS_INTRE                          0xf550a070
#define PSDS_PRBS_INTRE_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t syncStateE           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PRBS_INTRE_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PRBS_STS                            0xf550a074
#define PSDS_PRBS_STS_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t syncState            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PRBS_STS_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PRBS_ERR_CNT_L                      0xf550a078
#define PSDS_PRBS_ERR_CNT_L_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbsErrCnt_l         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PRBS_ERR_CNT_L_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_PRBS_ERR_CNT_H                      0xf550a07c
#define PSDS_PRBS_ERR_CNT_H_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t prbsErrCnt_h         : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_PRBS_ERR_CNT_H_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_GBOX_ELST_FF_STS                    0xf550a080
#define PSDS_GBOX_ELST_FF_STS_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_elst_ff_pointer_adjust :  1 ; /* bits 0:0 */
    ca_uint32_t rx_elst_ff_pointer_adjust :  1 ; /* bits 1:1 */
    ca_uint32_t pon_los_reset_flag   :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_GBOX_ELST_FF_STS_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_CTRL                  0xf550a084
#define PSDS_DEBUG_MONITOR_CTRL_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_CLK156_EN        :  1 ; /* bits 0:0 */
    ca_uint32_t dbg_CLK161_EN        :  1 ; /* bits 1:1 */
    ca_uint32_t dbg_CLK250_EN        :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_0                     0xf550a088
#define PSDS_DEBUG_MONITOR_0_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_CK125M_FX100     :  1 ; /* bits 0:0 */
    ca_uint32_t dbg_CLKRD_156        :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t dbg_CLKRD_250        :  1 ; /* bits 3:3 */
    ca_uint32_t dbg_CLKWR_156        :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t dbg_CLKWR_250        :  1 ; /* bits 6:6 */
    ca_uint32_t rsrvd3               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_0_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_2                     0xf550a08c
#define PSDS_DEBUG_MONITOR_2_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_CMUTX_DEBUG_H    :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t dbg_DEBUG_CKREF      :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  6 ;
    ca_uint32_t dbg_RXSPD            :  2 ; /* bits 15:14 */
    ca_uint32_t rsrvd3               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_2_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_3                     0xf550a090
#define PSDS_DEBUG_MONITOR_3_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_LC_CMU_DEBUG_H   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_3_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_4                     0xf550a094
#define PSDS_DEBUG_MONITOR_4_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_LC_CMU_DEBUG_M   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_4_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_5                     0xf550a098
#define PSDS_DEBUG_MONITOR_5_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_LC_CMU_DEBUG_L   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_5_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_6                     0xf550a09c
#define PSDS_DEBUG_MONITOR_6_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_RX_DEBUG0_L      : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_6_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_7                     0xf550a0a0
#define PSDS_DEBUG_MONITOR_7_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_RX_DEBUG0_H      : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_7_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_8                     0xf550a0a4
#define PSDS_DEBUG_MONITOR_8_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_RING_CMU_DEBUG   :  3 ; /* bits 2:0 */
    ca_uint32_t dbg_S0_E2S_CK_AFE    :  1 ; /* bits 3:3 */
    ca_uint32_t dbg_S0_EYE_SCORE     :  8 ; /* bits 11:4 */
    ca_uint32_t dbg_S0_EYE_SCORE_VALID :  1 ; /* bits 12:12 */
    ca_uint32_t dbg_S0_LFPS_DET      :  1 ; /* bits 13:13 */
    ca_uint32_t dbg_S0_calib_ok      :  1 ; /* bits 14:14 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_8_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_9                     0xf550a0a8
#define PSDS_DEBUG_MONITOR_9_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_S0_DEBUG_OUT_L   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_9_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_10                    0xf550a0ac
#define PSDS_DEBUG_MONITOR_10_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_S0_DEBUG_OUT_H   : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_10_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_11                    0xf550a0b0
#define PSDS_DEBUG_MONITOR_11_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_S0_ST_CDR2_BIN_RO :  6 ; /* bits 5:0 */
    ca_uint32_t dbg_S0_ST_BIN_RO     :  6 ; /* bits 11:6 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_11_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_12                    0xf550a0b4
#define PSDS_DEBUG_MONITOR_12_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_S0_STEP_RO       :  5 ; /* bits 4:0 */
    ca_uint32_t dbg_S0_coef_data     :  8 ; /* bits 12:5 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_12_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_13                    0xf550a0b8
#define PSDS_DEBUG_MONITOR_13_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_S0_dout_eye_xor  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_13_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_14                    0xf550a0bc
#define PSDS_DEBUG_MONITOR_14_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_TX_DEBUG0        : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_14_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_15                    0xf550a0c0
#define PSDS_DEBUG_MONITOR_15_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_Z0_DEBUG_L       : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_15_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_MONITOR_16                    0xf550a0c4
#define PSDS_DEBUG_MONITOR_16_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_Z0_DEBUG_H       :  2 ; /* bits 1:0 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t dbg_S0_limit_data    :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_MONITOR_16_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_DEBUG_CTRL                          0xf550a0c8
#define PSDS_DEBUG_CTRL_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_DEBUG_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_REG_ACCESS                          0xf550a0cc
#define PSDS_REG_ACCESS_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_a                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t sds_we               :  1 ; /* bits 30:30 */
    ca_uint32_t sds_access           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_REG_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_REG_DATAIN                          0xf550a0d0
#define PSDS_REG_DATAIN_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_d_in             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_REG_DATAIN_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_REG_DATAOUT                         0xf550a0d4
#define PSDS_REG_DATAOUT_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_d_out            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_REG_DATAOUT_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_XG_PRMB_RCVY                        0xf550a0d8
#define PSDS_XG_PRMB_RCVY_dft                    0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_prmb_rcvy_en     :  1 ; /* bits 0:0 */
    ca_uint32_t cfg_prmb_6byte_mode  :  1 ; /* bits 1:1 */
    ca_uint32_t cfg_dbg_info_off     :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_XG_PRMB_RCVY_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_XG_PRMB_RCVY_DBG_0                  0xf550a0dc
#define PSDS_XG_PRMB_RCVY_DBG_0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_prmb_rcvy_0      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_XG_PRMB_RCVY_DBG_0_t;
#endif /* !__ASSEMBLER__ */


#define PSDS_XG_PRMB_RCVY_DBG_1                  0xf550a0e0
#define PSDS_XG_PRMB_RCVY_DBG_1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_prmb_rcvy_1      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} PSDS_XG_PRMB_RCVY_DBG_1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PSDS_WRAP */
#ifndef __ASSEMBLER__
typedef struct {
  PSDS_PON_PRBS_CONTROL_t                  PON_PRBS_CONTROL;              /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  PSDS_PON_PRBS_BEN_CNT_t                  PON_PRBS_BEN_CNT;              /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  PSDS_PON_PRBS_BEN_H_t                    PON_PRBS_BEN_H;                /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  PSDS_PON_PRBS_TX_H0_t                    PON_PRBS_TX_H0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  PSDS_PON_PRBS_TX_H1_t                    PON_PRBS_TX_H1;                /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  PSDS_PON_PRBS_TX_L0_t                    PON_PRBS_TX_L0;                /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  PSDS_PON_PRBS_TX_L1_t                    PON_PRBS_TX_L1;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  PSDS_PON_PRBS_STATUS0_t                  PON_PRBS_STATUS0;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  PSDS_PON_PRBS_STATUS1_t                  PON_PRBS_STATUS1;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  PSDS_PON_PRBS_ERR_CNT_t                  PON_PRBS_ERR_CNT;              /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  PSDS_RESET_t                             RESET;                         /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  PSDS_MODE_t                              MODE;                          /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  PSDS_CH0_ABILITY_t                       CH0_ABILITY;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  PSDS_MISC_CNTL_1_t                       MISC_CNTL_1;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  PSDS_MISC_CNTL_2_t                       MISC_CNTL_2;                   /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  PSDS_MISC_CNTL_3_t                       MISC_CNTL_3;                   /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  PSDS_MISC_CNTL_4_t                       MISC_CNTL_4;                   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  PSDS_MISC_CNTL_5_t                       MISC_CNTL_5;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  PSDS_IF_INTERRUPT_t                      IF_INTERRUPT;                  /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  PSDS_IF_INTENABLE_t                      IF_INTENABLE;                  /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  PSDS_IF_STATUS_t                         IF_STATUS;                     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  PSDS_IF_STATUS2_t                        IF_STATUS2;                    /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  PSDS_IF_ABILITY_t                        IF_ABILITY;                    /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  PSDS_RGB0_t                              RGB0;                          /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  PSDS_RGB8_t                              RGB8;                          /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  PSDS_GBOX_CTRL_t                         GBOX_CTRL;                     /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  PSDS_PRBS_CTRL_t                         PRBS_CTRL;                     /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  PSDS_PRBS_INTR_t                         PRBS_INTR;                     /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  PSDS_PRBS_INTRE_t                        PRBS_INTRE;                    /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  PSDS_PRBS_STS_t                          PRBS_STS;                      /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  PSDS_PRBS_ERR_CNT_L_t                    PRBS_ERR_CNT_L;                /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  PSDS_PRBS_ERR_CNT_H_t                    PRBS_ERR_CNT_H;                /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  PSDS_GBOX_ELST_FF_STS_t                  GBOX_ELST_FF_STS;              /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  PSDS_DEBUG_MONITOR_CTRL_t                DEBUG_MONITOR_CTRL;            /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  PSDS_DEBUG_MONITOR_0_t                   DEBUG_MONITOR_0;               /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  PSDS_DEBUG_MONITOR_2_t                   DEBUG_MONITOR_2;               /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  PSDS_DEBUG_MONITOR_3_t                   DEBUG_MONITOR_3;               /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  PSDS_DEBUG_MONITOR_4_t                   DEBUG_MONITOR_4;               /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  PSDS_DEBUG_MONITOR_5_t                   DEBUG_MONITOR_5;               /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  PSDS_DEBUG_MONITOR_6_t                   DEBUG_MONITOR_6;               /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  PSDS_DEBUG_MONITOR_7_t                   DEBUG_MONITOR_7;               /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  PSDS_DEBUG_MONITOR_8_t                   DEBUG_MONITOR_8;               /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  PSDS_DEBUG_MONITOR_9_t                   DEBUG_MONITOR_9;               /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  PSDS_DEBUG_MONITOR_10_t                  DEBUG_MONITOR_10;              /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  PSDS_DEBUG_MONITOR_11_t                  DEBUG_MONITOR_11;              /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  PSDS_DEBUG_MONITOR_12_t                  DEBUG_MONITOR_12;              /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  PSDS_DEBUG_MONITOR_13_t                  DEBUG_MONITOR_13;              /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  PSDS_DEBUG_MONITOR_14_t                  DEBUG_MONITOR_14;              /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  PSDS_DEBUG_MONITOR_15_t                  DEBUG_MONITOR_15;              /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  PSDS_DEBUG_MONITOR_16_t                  DEBUG_MONITOR_16;              /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  PSDS_DEBUG_CTRL_t                        DEBUG_CTRL;                    /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  PSDS_REG_ACCESS_t                        REG_ACCESS;                    /* addr: 0x000000cc */
  ca_uint32_t                              rsrvd52[3];
  PSDS_REG_DATAIN_t                        REG_DATAIN;                    /* addr: 0x000000d0 */
  ca_uint32_t                              rsrvd53[3];
  PSDS_REG_DATAOUT_t                       REG_DATAOUT;                   /* addr: 0x000000d4 */
  ca_uint32_t                              rsrvd54[3];
  PSDS_XG_PRMB_RCVY_t                      XG_PRMB_RCVY;                  /* addr: 0x000000d8 */
  ca_uint32_t                              rsrvd55[3];
  PSDS_XG_PRMB_RCVY_DBG_0_t                XG_PRMB_RCVY_DBG_0;            /* addr: 0x000000dc */
  ca_uint32_t                              rsrvd56[3];
  PSDS_XG_PRMB_RCVY_DBG_1_t                XG_PRMB_RCVY_DBG_1;            /* addr: 0x000000e0 */
} APB7_PSDS_WRAP_t;
#endif /* !__ASSEMBLER__ */


/*
 * ACT_ETH
 */

/*
 * ACT_ETH_GLB
 */

#define ACT_ETH_ACT_ETH_GLB_CTL                  0xf550a800
#define ACT_ETH_ACT_ETH_GLB_CTL_dft              0x00000030

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t active_eth_mode      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t inf_sel              :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd2               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_CTL_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_RESET_CTRL           0xf550a804
#define ACT_ETH_ACT_ETH_GLB_RESET_CTRL_dft       0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reset                :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_RESET_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_FLOW_CTRL            0xf550a808
#define ACT_ETH_ACT_ETH_GLB_FLOW_CTRL_dft        0x01ff011c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t qbb_tx_en            :  1 ; /* bits 0:0 */
    ca_uint32_t qbb_rx_en            :  1 ; /* bits 1:1 */
    ca_uint32_t pau_tx_en            :  1 ; /* bits 2:2 */
    ca_uint32_t pau_rx_en            :  1 ; /* bits 3:3 */
    ca_uint32_t adjust_pause_cnt     : 12 ; /* bits 15:4 */
    ca_uint32_t qbb_qen              :  8 ; /* bits 23:16 */
    ca_uint32_t rx_drp_pau_en        :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t txstop_sel           :  1 ; /* bits 28:28 */
    ca_uint32_t rsrvd2               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_FLOW_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_TX_REPEAT_CNT        0xf550a80c
#define ACT_ETH_ACT_ETH_GLB_TX_REPEAT_CNT_dft    0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t repeat_cnt           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_TX_REPEAT_CNT_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_FLOW_MISC            0xf550a810
#define ACT_ETH_ACT_ETH_GLB_FLOW_MISC_dft        0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t en_tqm_txpfc         :  1 ; /* bits 0:0 */
    ca_uint32_t en_l2tm_txpfc        :  1 ; /* bits 1:1 */
    ca_uint32_t en_ni_txfc           :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t tx_sw_pausereq       :  1 ; /* bits 16:16 */
    ca_uint32_t en_tx_sw_pause       :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd2               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_FLOW_MISC_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA0           0xf550a814
#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA0_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta0        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta1        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_TX_QUANTA0_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA1           0xf550a818
#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA1_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta2        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta3        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_TX_QUANTA1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA2           0xf550a81c
#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA2_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta4        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta5        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_TX_QUANTA2_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA3           0xf550a820
#define ACT_ETH_ACT_ETH_GLB_TX_QUANTA3_dft       0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pause_quanta6        : 16 ; /* bits 15:0 */
    ca_uint32_t pause_quanta7        : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_TX_QUANTA3_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_QBB_WAIT_TIME        0xf550a824
#define ACT_ETH_ACT_ETH_GLB_QBB_WAIT_TIME_dft    0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wait_cnt             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_QBB_WAIT_TIME_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_PAUSE_SA_0           0xf550a828
#define ACT_ETH_ACT_ETH_GLB_PAUSE_SA_0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_l                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_PAUSE_SA_0_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_PAUSE_SA_1           0xf550a82c
#define ACT_ETH_ACT_ETH_GLB_PAUSE_SA_1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t mac_h                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_PAUSE_SA_1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_HDR_A_L              0xf550a830
#define ACT_ETH_ACT_ETH_GLB_HDR_A_L_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdra_l               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_HDR_A_L_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_ACT_ETH_GLB_HDR_A_H              0xf550a834
#define ACT_ETH_ACT_ETH_GLB_HDR_A_H_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdra_h               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_ACT_ETH_GLB_HDR_A_H_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ACT_ETH_GLB */
#ifndef __ASSEMBLER__
typedef struct {
  ACT_ETH_ACT_ETH_GLB_CTL_t                CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  ACT_ETH_ACT_ETH_GLB_RESET_CTRL_t         RESET_CTRL;                    /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  ACT_ETH_ACT_ETH_GLB_FLOW_CTRL_t          FLOW_CTRL;                     /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  ACT_ETH_ACT_ETH_GLB_TX_REPEAT_CNT_t      TX_REPEAT_CNT;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  ACT_ETH_ACT_ETH_GLB_FLOW_MISC_t          FLOW_MISC;                     /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  ACT_ETH_ACT_ETH_GLB_TX_QUANTA0_t         TX_QUANTA0;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  ACT_ETH_ACT_ETH_GLB_TX_QUANTA1_t         TX_QUANTA1;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  ACT_ETH_ACT_ETH_GLB_TX_QUANTA2_t         TX_QUANTA2;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  ACT_ETH_ACT_ETH_GLB_TX_QUANTA3_t         TX_QUANTA3;                    /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  ACT_ETH_ACT_ETH_GLB_QBB_WAIT_TIME_t      QBB_WAIT_TIME;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  ACT_ETH_ACT_ETH_GLB_PAUSE_SA_0_t         PAUSE_SA_0;                    /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  ACT_ETH_ACT_ETH_GLB_PAUSE_SA_1_t         PAUSE_SA_1;                    /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  ACT_ETH_ACT_ETH_GLB_HDR_A_L_t            HDR_A_L;                       /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  ACT_ETH_ACT_ETH_GLB_HDR_A_H_t            HDR_A_H;                       /* addr: 0x00000034 */
} APB7_ACT_ETH_ACT_ETH_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * XGE
 */

/*
 * MAC
 */

#define ACT_ETH_XGE_MAC_CFG_COM                  0xf550a900
#define ACT_ETH_XGE_MAC_CFG_COM_dft              0x0000e018

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rpr_mode             :  1 ; /* bits 0:0 */
    ca_uint32_t stack_en             :  1 ; /* bits 1:1 */
    ca_uint32_t clronread            :  1 ; /* bits 2:2 */
    ca_uint32_t rt_mib_en            :  1 ; /* bits 3:3 */
    ca_uint32_t stats_err_order      :  3 ; /* bits 6:4 */
    ca_uint32_t stats_drop_en        :  1 ; /* bits 7:7 */
    ca_uint32_t core_tx2rx_lb        :  1 ; /* bits 8:8 */
    ca_uint32_t core_rx2tx_lb        :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t cntr_rst             :  1 ; /* bits 13:13 */
    ca_uint32_t rx_rst               :  1 ; /* bits 14:14 */
    ca_uint32_t tx_rst               :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_CFG_COM_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_CFG_RX                   0xf550a904
#define ACT_ETH_XGE_MAC_CFG_RX_dft               0x00000bc1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t promis_mode          :  1 ; /* bits 0:0 */
    ca_uint32_t drop_short           :  1 ; /* bits 1:1 */
    ca_uint32_t strip                :  2 ; /* bits 3:2 */
    ca_uint32_t pause_term           :  1 ; /* bits 4:4 */
    ca_uint32_t pause_extract        :  1 ; /* bits 5:5 */
    ca_uint32_t len_chk_en           :  1 ; /* bits 6:6 */
    ca_uint32_t len_chk_en_pause     :  1 ; /* bits 7:7 */
    ca_uint32_t len_chk_en_pad       :  1 ; /* bits 8:8 */
    ca_uint32_t fcs_chk_en           :  1 ; /* bits 9:9 */
    ca_uint32_t IFG_mode_rx          :  1 ; /* bits 10:10 */
    ca_uint32_t crc_err_fatal        :  1 ; /* bits 11:11 */
    ca_uint32_t maxlen_mode          :  1 ; /* bits 12:12 */
    ca_uint32_t prmbl_sfd_gmii_err   :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_CFG_RX_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_CFG_TX                   0xf550a908
#define ACT_ETH_XGE_MAC_CFG_TX_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t IFG_mode_tx          :  2 ; /* bits 1:0 */
    ca_uint32_t halt                 :  1 ; /* bits 2:2 */
    ca_uint32_t insSA                :  1 ; /* bits 3:3 */
    ca_uint32_t pause_req_en         :  1 ; /* bits 4:4 */
    ca_uint32_t pause_req_auto_xon   :  1 ; /* bits 5:5 */
    ca_uint32_t lf_auto_flush_en     :  1 ; /* bits 6:6 */
    ca_uint32_t vlan_pad_mode        :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_CFG_TX_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_CFG_TX_2                 0xf550a90c
#define ACT_ETH_XGE_MAC_CFG_TX_2_dft             0x0000060e

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fifo1_thr_afull      :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t fifo1_read_thr       :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_CFG_TX_2_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_CFG_TX_IFG               0xf550a910
#define ACT_ETH_XGE_MAC_CFG_TX_IFG_dft           0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ifg                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_CFG_TX_IFG_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAC_ADDR_A               0xf550a914
#define ACT_ETH_XGE_MAC_MAC_ADDR_A_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAC_ADDR_A_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAC_ADDR_B               0xf550a918
#define ACT_ETH_XGE_MAC_MAC_ADDR_B_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAC_ADDR_B_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAC_ADDR_C               0xf550a91c
#define ACT_ETH_XGE_MAC_MAC_ADDR_C_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAC_ADDR_C_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_VLAN_TAG1                0xf550a920
#define ACT_ETH_XGE_MAC_VLAN_TAG1_dft            0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_VLAN_TAG1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_VLAN_TAG2                0xf550a924
#define ACT_ETH_XGE_MAC_VLAN_TAG2_dft            0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_VLAN_TAG2_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_VLAN_TAG3                0xf550a928
#define ACT_ETH_XGE_MAC_VLAN_TAG3_dft            0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tag                  : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_VLAN_TAG3_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MINLEN                   0xf550a92c
#define ACT_ETH_XGE_MAC_MINLEN_dft               0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t minlen               :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MINLEN_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAXLEN                   0xf550a930
#define ACT_ETH_XGE_MAC_MAXLEN_dft               0x000023f1

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t maxlen               : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAXLEN_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_PAUSE_ADDR_A             0xf550a934
#define ACT_ETH_XGE_MAC_PAUSE_ADDR_A_dft         0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_PAUSE_ADDR_A_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_PAUSE_ADDR_B             0xf550a938
#define ACT_ETH_XGE_MAC_PAUSE_ADDR_B_dft         0x0000c200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_PAUSE_ADDR_B_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_PAUSE_ADDR_C             0xf550a93c
#define ACT_ETH_XGE_MAC_PAUSE_ADDR_C_dft         0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_PAUSE_ADDR_C_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_PQUANTA                  0xf550a940
#define ACT_ETH_XGE_MAC_PQUANTA_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pq                   : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_PQUANTA_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_PAUSE_TX_CMD             0xf550a944
#define ACT_ETH_XGE_MAC_PAUSE_TX_CMD_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t X_GEN                :  1 ; /* bits 0:0 */
    ca_uint32_t XON_XOFF             :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_PAUSE_TX_CMD_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_INTERRUPT                0xf550a948
#define ACT_ETH_XGE_MAC_INTERRUPT_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t miscI                :  1 ; /* bits 0:0 */
    ca_uint32_t stats1I              :  1 ; /* bits 1:1 */
    ca_uint32_t stats2I              :  1 ; /* bits 2:2 */
    ca_uint32_t stats3I              :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_INTENABLE                0xf550a94c
#define ACT_ETH_XGE_MAC_INTENABLE_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t miscE                :  1 ; /* bits 0:0 */
    ca_uint32_t stats1E              :  1 ; /* bits 1:1 */
    ca_uint32_t stats2E              :  1 ; /* bits 2:2 */
    ca_uint32_t stats3E              :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MISC_INTERRUPT           0xf550a950
#define ACT_ETH_XGE_MAC_MISC_INTERRUPT_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo1_uflwI       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fifo1_oflwI       :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_doneI       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t rx_no_sfdI           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MISC_INTENABLE           0xf550a954
#define ACT_ETH_XGE_MAC_MISC_INTENABLE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fifo1_uflwE       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_fifo1_oflwE       :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_doneE       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t rx_no_sfdE           :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd2               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_INTERRUPT1         0xf550a958
#define ACT_ETH_XGE_MAC_STATS_INTERRUPT1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_good_framesI      :  1 ; /* bits 0:0 */
    ca_uint32_t tx_good_octetsI      :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_framesI     :  1 ; /* bits 2:2 */
    ca_uint32_t rx_good_framesI      :  1 ; /* bits 3:3 */
    ca_uint32_t rx_good_octetsI      :  1 ; /* bits 4:4 */
    ca_uint32_t rx_pause_framesI     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_crcerr_framesI    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_alignerr_framesI  :  1 ; /* bits 7:7 */
    ca_uint32_t tx_ucast_framesI     :  1 ; /* bits 8:8 */
    ca_uint32_t tx_mcast_framesI     :  1 ; /* bits 9:9 */
    ca_uint32_t tx_bcast_framesI     :  1 ; /* bits 10:10 */
    ca_uint32_t tx_err_framesI       :  1 ; /* bits 11:11 */
    ca_uint32_t rx_ucast_framesI     :  1 ; /* bits 12:12 */
    ca_uint32_t rx_mcast_framesI     :  1 ; /* bits 13:13 */
    ca_uint32_t rx_bcast_framesI     :  1 ; /* bits 14:14 */
    ca_uint32_t rx_err_framesI       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_INTERRUPT1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_INTENABLE1         0xf550a95c
#define ACT_ETH_XGE_MAC_STATS_INTENABLE1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_good_framesE      :  1 ; /* bits 0:0 */
    ca_uint32_t tx_good_octetsE      :  1 ; /* bits 1:1 */
    ca_uint32_t tx_pause_framesE     :  1 ; /* bits 2:2 */
    ca_uint32_t rx_good_framesE      :  1 ; /* bits 3:3 */
    ca_uint32_t rx_good_octetsE      :  1 ; /* bits 4:4 */
    ca_uint32_t rx_pause_framesE     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_crcerr_framesE    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_alignerr_framesE  :  1 ; /* bits 7:7 */
    ca_uint32_t tx_ucast_framesE     :  1 ; /* bits 8:8 */
    ca_uint32_t tx_mcast_framesE     :  1 ; /* bits 9:9 */
    ca_uint32_t tx_bcast_framesE     :  1 ; /* bits 10:10 */
    ca_uint32_t tx_err_framesE       :  1 ; /* bits 11:11 */
    ca_uint32_t rx_ucast_framesE     :  1 ; /* bits 12:12 */
    ca_uint32_t rx_mcast_framesE     :  1 ; /* bits 13:13 */
    ca_uint32_t rx_bcast_framesE     :  1 ; /* bits 14:14 */
    ca_uint32_t rx_err_framesE       :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_INTENABLE1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_INTERRUPT2         0xf550a960
#define ACT_ETH_XGE_MAC_STATS_INTERRUPT2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_octetsI           :  1 ; /* bits 0:0 */
    ca_uint32_t rx_framesI           :  1 ; /* bits 1:1 */
    ca_uint32_t rx_runt_framesI      :  1 ; /* bits 2:2 */
    ca_uint32_t rx_short_framesI     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_undersize_framesI :  1 ; /* bits 4:4 */
    ca_uint32_t rx_giant_framesI     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_jabber_framesI    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_64b_framesI       :  1 ; /* bits 7:7 */
    ca_uint32_t rx_65b_to_127b_framesI :  1 ; /* bits 8:8 */
    ca_uint32_t rx_128b_to_255b_framesI :  1 ; /* bits 9:9 */
    ca_uint32_t rx_256b_to_511b_framesI :  1 ; /* bits 10:10 */
    ca_uint32_t rx_512b_to_1023b_framesI :  1 ; /* bits 11:11 */
    ca_uint32_t rx_1024b_to_1518b_framesI :  1 ; /* bits 12:12 */
    ca_uint32_t rx_1519b_to_maxb_framesI :  1 ; /* bits 13:13 */
    ca_uint32_t tx_octetsI           :  1 ; /* bits 14:14 */
    ca_uint32_t tx_framesI           :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_INTERRUPT2_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_INTENABLE2         0xf550a964
#define ACT_ETH_XGE_MAC_STATS_INTENABLE2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_octetsE           :  1 ; /* bits 0:0 */
    ca_uint32_t rx_framesE           :  1 ; /* bits 1:1 */
    ca_uint32_t rx_runt_framesE      :  1 ; /* bits 2:2 */
    ca_uint32_t rx_short_framesE     :  1 ; /* bits 3:3 */
    ca_uint32_t rx_undersize_framesE :  1 ; /* bits 4:4 */
    ca_uint32_t rx_giant_framesE     :  1 ; /* bits 5:5 */
    ca_uint32_t rx_jabber_framesE    :  1 ; /* bits 6:6 */
    ca_uint32_t rx_64b_framesE       :  1 ; /* bits 7:7 */
    ca_uint32_t rx_65b_to_127b_framesE :  1 ; /* bits 8:8 */
    ca_uint32_t rx_128b_to_255b_framesE :  1 ; /* bits 9:9 */
    ca_uint32_t rx_256b_to_511b_framesE :  1 ; /* bits 10:10 */
    ca_uint32_t rx_512b_to_1023b_framesE :  1 ; /* bits 11:11 */
    ca_uint32_t rx_1024b_to_1518b_framesE :  1 ; /* bits 12:12 */
    ca_uint32_t rx_1519b_to_maxb_framesE :  1 ; /* bits 13:13 */
    ca_uint32_t tx_octetsE           :  1 ; /* bits 14:14 */
    ca_uint32_t tx_framesE           :  1 ; /* bits 15:15 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_INTENABLE2_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_INTERRUPT3         0xf550a968
#define ACT_ETH_XGE_MAC_STATS_INTERRUPT3_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_64b_framesI       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_65b_to_127b_framesI :  1 ; /* bits 1:1 */
    ca_uint32_t tx_128b_to_255b_framesI :  1 ; /* bits 2:2 */
    ca_uint32_t tx_256b_to_511b_framesI :  1 ; /* bits 3:3 */
    ca_uint32_t tx_512b_to_1023b_framesI :  1 ; /* bits 4:4 */
    ca_uint32_t tx_1024b_to_1518b_framesI :  1 ; /* bits 5:5 */
    ca_uint32_t tx_1519b_framesI     :  1 ; /* bits 6:6 */
    ca_uint32_t drop_rx_crcerr_framesI :  1 ; /* bits 7:7 */
    ca_uint32_t drop_rx_alignerr_framesI :  1 ; /* bits 8:8 */
    ca_uint32_t rx_pfc_framesI       :  1 ; /* bits 9:9 */
    ca_uint32_t tx_pfc_framesI       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_INTERRUPT3_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_INTENABLE3         0xf550a96c
#define ACT_ETH_XGE_MAC_STATS_INTENABLE3_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_64b_framesE       :  1 ; /* bits 0:0 */
    ca_uint32_t tx_65b_to_127b_framesE :  1 ; /* bits 1:1 */
    ca_uint32_t tx_128b_to_255b_framesE :  1 ; /* bits 2:2 */
    ca_uint32_t tx_256b_to_511b_framesE :  1 ; /* bits 3:3 */
    ca_uint32_t tx_512b_to_1023b_framesE :  1 ; /* bits 4:4 */
    ca_uint32_t tx_1024b_to_1518b_framesE :  1 ; /* bits 5:5 */
    ca_uint32_t tx_1519b_framesE     :  1 ; /* bits 6:6 */
    ca_uint32_t drop_rx_crcerr_framesE :  1 ; /* bits 7:7 */
    ca_uint32_t drop_rx_alignerr_framesE :  1 ; /* bits 8:8 */
    ca_uint32_t rx_pfc_framesE       :  1 ; /* bits 9:9 */
    ca_uint32_t tx_pfc_framesE       :  1 ; /* bits 10:10 */
    ca_uint32_t rsrvd1               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_INTENABLE3_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_ACCESS             0xf550a970
#define ACT_ETH_XGE_MAC_STATS_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cnt_id               :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t dbg_write            :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_DATA1              0xf550a974
#define ACT_ETH_XGE_MAC_STATS_DATA1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_STATS_DATA0              0xf550a978
#define ACT_ETH_XGE_MAC_STATS_DATA0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_STATS_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY2         0xf550a97c
#define ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY2_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY2_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY1         0xf550a980
#define ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY1_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY0         0xf550a984
#define ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY0_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_TL_BOUNDARY              0xf550a988
#define ACT_ETH_XGE_MAC_TL_BOUNDARY_dft          0x00000600

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t boundary             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_TL_BOUNDARY_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MAC_FMRO                     0xf550a98c
#define ACT_ETH_XGE_MAC_FMRO_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data_sel             :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t clk_sel              :  2 ; /* bits 9:8 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MAC_FMRO_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MAC */
#ifndef __ASSEMBLER__
typedef struct {
  ACT_ETH_XGE_MAC_CFG_COM_t                CFG_COM;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  ACT_ETH_XGE_MAC_CFG_RX_t                 CFG_RX;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  ACT_ETH_XGE_MAC_CFG_TX_t                 CFG_TX;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  ACT_ETH_XGE_MAC_CFG_TX_2_t               CFG_TX_2;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  ACT_ETH_XGE_MAC_CFG_TX_IFG_t             CFG_TX_IFG;                    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  ACT_ETH_XGE_MAC_MAC_ADDR_A_t             MAC_ADDR_A;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  ACT_ETH_XGE_MAC_MAC_ADDR_B_t             MAC_ADDR_B;                    /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  ACT_ETH_XGE_MAC_MAC_ADDR_C_t             MAC_ADDR_C;                    /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  ACT_ETH_XGE_MAC_VLAN_TAG1_t              VLAN_TAG1;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  ACT_ETH_XGE_MAC_VLAN_TAG2_t              VLAN_TAG2;                     /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  ACT_ETH_XGE_MAC_VLAN_TAG3_t              VLAN_TAG3;                     /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  ACT_ETH_XGE_MAC_MINLEN_t                 MINLEN;                        /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  ACT_ETH_XGE_MAC_MAXLEN_t                 MAXLEN;                        /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  ACT_ETH_XGE_MAC_PAUSE_ADDR_A_t           PAUSE_ADDR_A;                  /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  ACT_ETH_XGE_MAC_PAUSE_ADDR_B_t           PAUSE_ADDR_B;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  ACT_ETH_XGE_MAC_PAUSE_ADDR_C_t           PAUSE_ADDR_C;                  /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  ACT_ETH_XGE_MAC_PQUANTA_t                PQUANTA;                       /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  ACT_ETH_XGE_MAC_PAUSE_TX_CMD_t           PAUSE_TX_CMD;                  /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  ACT_ETH_XGE_MAC_INTERRUPT_t              INTERRUPT;                     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  ACT_ETH_XGE_MAC_INTENABLE_t              INTENABLE;                     /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  ACT_ETH_XGE_MAC_MISC_INTERRUPT_t         MISC_INTERRUPT;                /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  ACT_ETH_XGE_MAC_MISC_INTENABLE_t         MISC_INTENABLE;                /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  ACT_ETH_XGE_MAC_STATS_INTERRUPT1_t       STATS_INTERRUPT1;              /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  ACT_ETH_XGE_MAC_STATS_INTENABLE1_t       STATS_INTENABLE1;              /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  ACT_ETH_XGE_MAC_STATS_INTERRUPT2_t       STATS_INTERRUPT2;              /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  ACT_ETH_XGE_MAC_STATS_INTENABLE2_t       STATS_INTENABLE2;              /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  ACT_ETH_XGE_MAC_STATS_INTERRUPT3_t       STATS_INTERRUPT3;              /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  ACT_ETH_XGE_MAC_STATS_INTENABLE3_t       STATS_INTENABLE3;              /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  ACT_ETH_XGE_MAC_STATS_ACCESS_t           STATS_ACCESS;                  /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  ACT_ETH_XGE_MAC_STATS_DATA1_t            STATS_DATA1;                   /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  ACT_ETH_XGE_MAC_STATS_DATA0_t            STATS_DATA0;                   /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY2_t       MAC_ADDR_RDONLY2;              /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY1_t       MAC_ADDR_RDONLY1;              /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  ACT_ETH_XGE_MAC_MAC_ADDR_RDONLY0_t       MAC_ADDR_RDONLY0;              /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  ACT_ETH_XGE_MAC_TL_BOUNDARY_t            TL_BOUNDARY;                   /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  ACT_ETH_XGE_MAC_FMRO_t                   FMRO;                          /* addr: 0x0000008c */
} APB7_ACT_ETH_XGE_MAC_t;
#endif /* !__ASSEMBLER__ */


/*
 * misc
 */

#define ACT_ETH_XGE_MISC_INTERRUPT               0xf550a9a0
#define ACT_ETH_XGE_MISC_INTERRUPT_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macI                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MISC_INTENABLE               0xf550a9a4
#define ACT_ETH_XGE_MISC_INTENABLE_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t macE                 :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MISC_CONFIG                  0xf550a9a8
#define ACT_ETH_XGE_MISC_CONFIG_dft              0x300000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spare                : 14 ; /* bits 13:0 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t inf_sel              :  2 ; /* bits 29:28 */
    ca_uint32_t mode322              :  1 ; /* bits 30:30 */
    ca_uint32_t gige_mode            :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MISC_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define ACT_ETH_XGE_MISC_FMRO                    0xf550a9ac
#define ACT_ETH_XGE_MISC_FMRO_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sel                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} ACT_ETH_XGE_MISC_FMRO_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* misc */
#ifndef __ASSEMBLER__
typedef struct {
  ACT_ETH_XGE_MISC_INTERRUPT_t             INTERRUPT;                     /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  ACT_ETH_XGE_MISC_INTENABLE_t             INTENABLE;                     /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  ACT_ETH_XGE_MISC_CONFIG_t                CONFIG;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  ACT_ETH_XGE_MISC_FMRO_t                  FMRO;                          /* addr: 0x0000000c */
} APB7_ACT_ETH_XGE_MISC_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGE */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_ACT_ETH_XGE_MAC_t          MAC;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[89];
  APB7_ACT_ETH_XGE_MISC_t         misc;                          /* addr: 0x000000a0 */
} APB7_ACT_ETH_XGE_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ACT_ETH */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_ACT_ETH_ACT_ETH_GLB_t      ACT_ETH_GLB;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[229];
  APB7_ACT_ETH_XGE_t              XGE;                           /* addr: 0x00000100 */
} APB7_ACT_ETH_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* WRAP_PON */

#ifndef __ASSEMBLER__
#endif /* !__ASSEMBLER__ */


/*
 * OTP_MEM
 */

#define TAURUS_OTP_MAIN_CFG                       0xf550b000
#define TAURUS_OTP_MAIN_CFG_dft                   0x00000013

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t crypto_key_read_en   :  1 ; /* bits 0:0 */
    ca_uint32_t otp_autoload_en      :  1 ; /* bits 1:1 */
    ca_uint32_t ef_stby              :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t use_cmd_ef_slv_rf    :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t cfg_ef_slv_rf        :  4 ; /* bits 11:8 */
    ca_uint32_t cfg_rep_blk_sel      :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t otp_read_polarity_chg :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd4               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_MAIN_CFG_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_CTRL0                      0xf550b004
#define TAURUS_OTP_DBG_CTRL0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_clk_en    :  1 ; /* bits 0:0 */
    ca_uint32_t cfg_otpdbg_mg        :  1 ; /* bits 1:1 */
    ca_uint32_t cfg_otpdbg_type      :  2 ; /* bits 3:2 */
    ca_uint32_t cfg_otpdbg_clk_ptr   :  5 ; /* bits 8:4 */
    ca_uint32_t cfg_otpdbg_srate     :  3 ; /* bits 11:9 */
    ca_uint32_t cfg_otpdbg_bsel      :  2 ; /* bits 13:12 */
    ca_uint32_t cfg_otpdbg_mode      :  2 ; /* bits 15:14 */
    ca_uint32_t cfg_otpdbg_endtime   :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd1               : 10 ;
    ca_uint32_t cfg_otpdbg_start     :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_CTRL1                      0xf550b008
#define TAURUS_OTP_DBG_CTRL1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_msk       : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_CTRL2                      0xf550b00c
#define TAURUS_OTP_DBG_CTRL2_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cmp_val   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_CTRL2_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_CTRL3                      0xf550b010
#define TAURUS_OTP_DBG_CTRL3_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_sel_otp          : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_CTRL3_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_STATUS                         0xf550b014
#define TAURUS_OTP_STATUS_dft                     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_autoload_done    :  1 ; /* bits 0:0 */
    ca_uint32_t crypto_key1_written  :  1 ; /* bits 1:1 */
    ca_uint32_t crypto_key2_written  :  1 ; /* bits 2:2 */
    ca_uint32_t record_data_ready    :  1 ; /* bits 3:3 */
    ca_uint32_t ef_slv_we            :  1 ; /* bits 4:4 */
    ca_uint32_t ef_slv_busy          :  1 ; /* bits 5:5 */
    ca_uint32_t ef_slv_rslt          :  2 ; /* bits 7:6 */
    ca_uint32_t ef_slv_q             :  8 ; /* bits 15:8 */
    ca_uint32_t ef_slv_a             : 12 ; /* bits 27:16 */
    ca_uint32_t ef_slv_rf            :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_BOND_OPTION0                   0xf550b018
#define TAURUS_OTP_BOND_OPTION0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_al_bond_option_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_BOND_OPTION0_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_BOND_OPTION1                   0xf550b01c
#define TAURUS_OTP_BOND_OPTION1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_al_bond_option_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_BOND_OPTION1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_BOND_OPTION2                   0xf550b020
#define TAURUS_OTP_BOND_OPTION2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_al_bond_option_2 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_BOND_OPTION2_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_SEC_LOCK_INDEX0                0xf550b024
#define TAURUS_OTP_SEC_LOCK_INDEX0_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_al_sector_lock_0 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_SEC_LOCK_INDEX0_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_SEC_LOCK_INDEX1                0xf550b028
#define TAURUS_OTP_SEC_LOCK_INDEX1_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_al_sector_lock_1 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_SEC_LOCK_INDEX1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA0                      0xf550b02c
#define TAURUS_OTP_DBG_DATA0_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x0_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA1                      0xf550b030
#define TAURUS_OTP_DBG_DATA1_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x1_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA2                      0xf550b034
#define TAURUS_OTP_DBG_DATA2_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x2_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA3                      0xf550b038
#define TAURUS_OTP_DBG_DATA3_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x3_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA3_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA4                      0xf550b03c
#define TAURUS_OTP_DBG_DATA4_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x4_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA4_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA5                      0xf550b040
#define TAURUS_OTP_DBG_DATA5_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x5_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA5_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA6                      0xf550b044
#define TAURUS_OTP_DBG_DATA6_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x6_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA6_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA7                      0xf550b048
#define TAURUS_OTP_DBG_DATA7_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cap_dt_x7_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA7_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_DATA_CUR                   0xf550b04c
#define TAURUS_OTP_DBG_DATA_CUR_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_otpdbg_cur_val_di : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_DATA_CUR_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_STATUS                     0xf550b050
#define TAURUS_OTP_DBG_STATUS_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otpdbg_ack           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t dbg_otp_autoload_o   : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_DBG_BUS_OUT                    0xf550b054
#define TAURUS_OTP_DBG_BUS_OUT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_otp_o            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_DBG_BUS_OUT_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_TIME_OUT                       0xf550b058
#define TAURUS_OTP_TIME_OUT_dft                   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t record_time_out      :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_TIME_OUT_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_KEY1                           0xf550b05c
#define TAURUS_OTP_KEY1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_key1             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_KEY1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_KEY2                           0xf550b060
#define TAURUS_OTP_KEY2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t otp_key2             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_KEY2_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_OTP_TIMEOUT_CTRL                   0xf550b064
#define TAURUS_OTP_TIMEOUT_CTRL_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t selection            :  3 ; /* bits 2:0 */
    ca_uint32_t disable              :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_OTP_TIMEOUT_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_0                    0xf550b7c0
#define TAURUS_FPGA_OTP_KEY1_0_dft                0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_0   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_0_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_1                    0xf550b7c4
#define TAURUS_FPGA_OTP_KEY1_1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_1   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_2                    0xf550b7c8
#define TAURUS_FPGA_OTP_KEY1_2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_2   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_2_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_3                    0xf550b7cc
#define TAURUS_FPGA_OTP_KEY1_3_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_3   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_3_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_4                    0xf550b7d0
#define TAURUS_FPGA_OTP_KEY1_4_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_4   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_4_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_5                    0xf550b7d4
#define TAURUS_FPGA_OTP_KEY1_5_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_5   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_5_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_6                    0xf550b7d8
#define TAURUS_FPGA_OTP_KEY1_6_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_6   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_6_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY1_7                    0xf550b7dc
#define TAURUS_FPGA_OTP_KEY1_7_dft                0xa5a5a5a5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key1_7   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY1_7_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_0                    0xf550b7e0
#define TAURUS_FPGA_OTP_KEY2_0_dft                0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_0   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_0_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_1                    0xf550b7e4
#define TAURUS_FPGA_OTP_KEY2_1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_1   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_1_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_2                    0xf550b7e8
#define TAURUS_FPGA_OTP_KEY2_2_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_2   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_2_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_3                    0xf550b7ec
#define TAURUS_FPGA_OTP_KEY2_3_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_3   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_3_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_4                    0xf550b7f0
#define TAURUS_FPGA_OTP_KEY2_4_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_4   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_4_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_5                    0xf550b7f4
#define TAURUS_FPGA_OTP_KEY2_5_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_5   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_5_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_6                    0xf550b7f8
#define TAURUS_FPGA_OTP_KEY2_6_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_6   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_6_t;
#endif /* !__ASSEMBLER__ */


#define TAURUS_FPGA_OTP_KEY2_7                    0xf550b7fc
#define TAURUS_FPGA_OTP_KEY2_7_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t fpga_crypto_key2_7   : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} TAURUS_FPGA_OTP_KEY2_7_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* OTP_MEM */
#ifndef __ASSEMBLER__
typedef struct {
  TAURUS_OTP_MAIN_CFG_t                     OTP_MAIN_CFG;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  TAURUS_OTP_DBG_CTRL0_t                    OTP_DBG_CTRL0;                 /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  TAURUS_OTP_DBG_CTRL1_t                    OTP_DBG_CTRL1;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  TAURUS_OTP_DBG_CTRL2_t                    OTP_DBG_CTRL2;                 /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  TAURUS_OTP_DBG_CTRL3_t                    OTP_DBG_CTRL3;                 /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  TAURUS_OTP_STATUS_t                       OTP_STATUS;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  TAURUS_OTP_BOND_OPTION0_t                 OTP_BOND_OPTION0;              /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  TAURUS_OTP_BOND_OPTION1_t                 OTP_BOND_OPTION1;              /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  TAURUS_OTP_BOND_OPTION2_t                 OTP_BOND_OPTION2;              /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  TAURUS_OTP_SEC_LOCK_INDEX0_t              OTP_SEC_LOCK_INDEX0;           /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  TAURUS_OTP_SEC_LOCK_INDEX1_t              OTP_SEC_LOCK_INDEX1;           /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  TAURUS_OTP_DBG_DATA0_t                    OTP_DBG_DATA0;                 /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  TAURUS_OTP_DBG_DATA1_t                    OTP_DBG_DATA1;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  TAURUS_OTP_DBG_DATA2_t                    OTP_DBG_DATA2;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  TAURUS_OTP_DBG_DATA3_t                    OTP_DBG_DATA3;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  TAURUS_OTP_DBG_DATA4_t                    OTP_DBG_DATA4;                 /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  TAURUS_OTP_DBG_DATA5_t                    OTP_DBG_DATA5;                 /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  TAURUS_OTP_DBG_DATA6_t                    OTP_DBG_DATA6;                 /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  TAURUS_OTP_DBG_DATA7_t                    OTP_DBG_DATA7;                 /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  TAURUS_OTP_DBG_DATA_CUR_t                 OTP_DBG_DATA_CUR;              /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  TAURUS_OTP_DBG_STATUS_t                   OTP_DBG_STATUS;                /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  TAURUS_OTP_DBG_BUS_OUT_t                  OTP_DBG_BUS_OUT;               /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  TAURUS_OTP_TIME_OUT_t                     OTP_TIME_OUT;                  /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  TAURUS_OTP_KEY1_t                         OTP_KEY1;                      /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  TAURUS_OTP_KEY2_t                         OTP_KEY2;                      /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  TAURUS_OTP_TIMEOUT_CTRL_t                 OTP_TIMEOUT_CTRL;              /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[1883];
  TAURUS_FPGA_OTP_KEY1_0_t                  FPGA_OTP_KEY1_0;               /* addr: 0x000007c0 */
  ca_uint32_t                              rsrvd27[3];
  TAURUS_FPGA_OTP_KEY1_1_t                  FPGA_OTP_KEY1_1;               /* addr: 0x000007c4 */
  ca_uint32_t                              rsrvd28[3];
  TAURUS_FPGA_OTP_KEY1_2_t                  FPGA_OTP_KEY1_2;               /* addr: 0x000007c8 */
  ca_uint32_t                              rsrvd29[3];
  TAURUS_FPGA_OTP_KEY1_3_t                  FPGA_OTP_KEY1_3;               /* addr: 0x000007cc */
  ca_uint32_t                              rsrvd30[3];
  TAURUS_FPGA_OTP_KEY1_4_t                  FPGA_OTP_KEY1_4;               /* addr: 0x000007d0 */
  ca_uint32_t                              rsrvd31[3];
  TAURUS_FPGA_OTP_KEY1_5_t                  FPGA_OTP_KEY1_5;               /* addr: 0x000007d4 */
  ca_uint32_t                              rsrvd32[3];
  TAURUS_FPGA_OTP_KEY1_6_t                  FPGA_OTP_KEY1_6;               /* addr: 0x000007d8 */
  ca_uint32_t                              rsrvd33[3];
  TAURUS_FPGA_OTP_KEY1_7_t                  FPGA_OTP_KEY1_7;               /* addr: 0x000007dc */
  ca_uint32_t                              rsrvd34[3];
  TAURUS_FPGA_OTP_KEY2_0_t                  FPGA_OTP_KEY2_0;               /* addr: 0x000007e0 */
  ca_uint32_t                              rsrvd35[3];
  TAURUS_FPGA_OTP_KEY2_1_t                  FPGA_OTP_KEY2_1;               /* addr: 0x000007e4 */
  ca_uint32_t                              rsrvd36[3];
  TAURUS_FPGA_OTP_KEY2_2_t                  FPGA_OTP_KEY2_2;               /* addr: 0x000007e8 */
  ca_uint32_t                              rsrvd37[3];
  TAURUS_FPGA_OTP_KEY2_3_t                  FPGA_OTP_KEY2_3;               /* addr: 0x000007ec */
  ca_uint32_t                              rsrvd38[3];
  TAURUS_FPGA_OTP_KEY2_4_t                  FPGA_OTP_KEY2_4;               /* addr: 0x000007f0 */
  ca_uint32_t                              rsrvd39[3];
  TAURUS_FPGA_OTP_KEY2_5_t                  FPGA_OTP_KEY2_5;               /* addr: 0x000007f4 */
  ca_uint32_t                              rsrvd40[3];
  TAURUS_FPGA_OTP_KEY2_6_t                  FPGA_OTP_KEY2_6;               /* addr: 0x000007f8 */
  ca_uint32_t                              rsrvd41[3];
  TAURUS_FPGA_OTP_KEY2_7_t                  FPGA_OTP_KEY2_7;               /* addr: 0x000007fc */
} APB7_OTP_MEM_t;
#endif /* !__ASSEMBLER__ */


/*
 * WRAP_OTP
 */



/*
 * WRAP_SFI
 */

/*
 * qx
 */

#define QX_RESET                                 0xf550d000
#define QX_RESET_dft                             0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dp_reset             :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_RESET_t;
#endif /* !__ASSEMBLER__ */


#define QX_MODE                                  0xf550d004
#define QX_MODE_dft                              0x0000105f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_mode_s0          :  5 ; /* bits 4:0 */
    ca_uint32_t usx_sub_mx_s0        :  5 ; /* bits 9:5 */
    ca_uint32_t use_wtg              :  1 ; /* bits 10:10 */
    ca_uint32_t use_wtg_dp           :  1 ; /* bits 11:11 */
    ca_uint32_t sd_s0                :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_MODE_t;
#endif /* !__ASSEMBLER__ */


#define QX_CH0_ABILITY                           0xf550d008
#define QX_CH0_ABILITY_dft                       0x00005cf5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_sds0_ablty     : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_CH0_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define QX_CH1_ABILITY                           0xf550d00c
#define QX_CH1_ABILITY_dft                       0x00005cf5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_sds1_ablty     : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_CH1_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define QX_CH2_ABILITY                           0xf550d010
#define QX_CH2_ABILITY_dft                       0x00005cf5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_sds2_ablty     : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_CH2_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define QX_CH3_ABILITY                           0xf550d014
#define QX_CH3_ABILITY_dft                       0x00005cf5

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_sds3_ablty     : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_CH3_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define QX_MISC_CNTL_1                           0xf550d018
#define QX_MISC_CNTL_1_dft                       0x00002000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t auto_det_sg0_upd_en  :  1 ; /* bits 0:0 */
    ca_uint32_t cfg_fb_on            :  1 ; /* bits 1:1 */
    ca_uint32_t cfg_unidir_en_tgxr0  :  1 ; /* bits 2:2 */
    ca_uint32_t eee_lpi_tx_tgxr0     :  1 ; /* bits 3:3 */
    ca_uint32_t load_sys_par_s0      :  1 ; /* bits 4:4 */
    ca_uint32_t load_sys_par_s1      :  1 ; /* bits 5:5 */
    ca_uint32_t load_sys_par_s2      :  1 ; /* bits 6:6 */
    ca_uint32_t load_sys_par_s3      :  1 ; /* bits 7:7 */
    ca_uint32_t pdown_en_ini_tgr_s0  :  1 ; /* bits 8:8 */
    ca_uint32_t sds01_autoneg_en_ini_s0 :  1 ; /* bits 9:9 */
    ca_uint32_t sds01_autoneg_en_ini_s1 :  1 ; /* bits 10:10 */
    ca_uint32_t sds01_iso_on_s0      :  1 ; /* bits 11:11 */
    ca_uint32_t sds01_iso_on_s1      :  1 ; /* bits 12:12 */
    ca_uint32_t sds01_lpi_gmii_sel   :  1 ; /* bits 13:13 */
    ca_uint32_t sds01_pdown_en_ini_s0 :  1 ; /* bits 14:14 */
    ca_uint32_t sds01_pdown_en_ini_s1 :  1 ; /* bits 15:15 */
    ca_uint32_t sds01_sds_frc_ld_s0  :  1 ; /* bits 16:16 */
    ca_uint32_t sds01_sds_phy_mode   :  1 ; /* bits 17:17 */
    ca_uint32_t sds01_sds_rx_disable_s0 :  1 ; /* bits 18:18 */
    ca_uint32_t sds01_sds_rx_disable_s1 :  1 ; /* bits 19:19 */
    ca_uint32_t sds01_sds_tx_disable_s0 :  1 ; /* bits 20:20 */
    ca_uint32_t sds01_sds_tx_disable_s1 :  1 ; /* bits 21:21 */
    ca_uint32_t sds01_silent_en_ini_s0 :  1 ; /* bits 22:22 */
    ca_uint32_t sds01_silent_en_ini_s1 :  1 ; /* bits 23:23 */
    ca_uint32_t sds01_spdup_ini      :  1 ; /* bits 24:24 */
    ca_uint32_t sds01_unidir_tx_able_s0 :  1 ; /* bits 25:25 */
    ca_uint32_t sds23_iso_on_s0      :  1 ; /* bits 26:26 */
    ca_uint32_t sds23_iso_on_s1      :  1 ; /* bits 27:27 */
    ca_uint32_t sel_ori_312p5_tgr0   :  1 ; /* bits 28:28 */
    ca_uint32_t tgr_ecc_en           :  1 ; /* bits 29:29 */
    ca_uint32_t sds01_frc_reg4_en_s0 :  1 ; /* bits 30:30 */
    ca_uint32_t sds01_frc_reg4_fib100_s0 :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QX_MISC_CNTL_1_t;
#endif /* !__ASSEMBLER__ */


#define QX_MISC_CNTL_2                           0xf550d01c
#define QX_MISC_CNTL_2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_pause_ini_s0   :  2 ; /* bits 1:0 */
    ca_uint32_t sds01_pause_ini_s1   :  2 ; /* bits 3:2 */
    ca_uint32_t sds01_revision_no    :  4 ; /* bits 7:4 */
    ca_uint32_t sds01_mac_trx_idle   :  8 ; /* bits 15:8 */
    ca_uint32_t sds01_cmd_stop_gli_clk :  8 ; /* bits 23:16 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_MISC_CNTL_2_t;
#endif /* !__ASSEMBLER__ */


#define QX_MISC_CNTL_3                           0xf550d020
#define QX_MISC_CNTL_3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_phy_lpi_rx     :  8 ; /* bits 7:0 */
    ca_uint32_t sds01_mac_lpi_tx     :  8 ; /* bits 15:8 */
    ca_uint32_t sds01_model_no       :  6 ; /* bits 21:16 */
    ca_uint32_t model_no_tgr_s0      :  6 ; /* bits 27:22 */
    ca_uint32_t revision_no_tgr_s0   :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} QX_MISC_CNTL_3_t;
#endif /* !__ASSEMBLER__ */


#define QX_MISC_CNTL_4                           0xf550d024
#define QX_MISC_CNTL_4_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t realtek_oui_tgr_s0   : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_MISC_CNTL_4_t;
#endif /* !__ASSEMBLER__ */


#define QX_MISC_CNTL_5                           0xf550d028
#define QX_MISC_CNTL_5_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_realtek_oui    : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_MISC_CNTL_5_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_INTERRUPT                          0xf550d02c
#define QX_IF_INTERRUPT_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_sym_err_tgxr0I    :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_sds_rx_sym_err_all_s0I :  1 ; /* bits 1:1 */
    ca_uint32_t eee_lpi_rx_tgxr0I    :  1 ; /* bits 2:2 */
    ca_uint32_t sds01_sds_link_ok_0I :  1 ; /* bits 3:3 */
    ca_uint32_t sds01_sds_link_ok_1I :  1 ; /* bits 4:4 */
    ca_uint32_t sds01_sds_link_ok_2I :  1 ; /* bits 5:5 */
    ca_uint32_t sds01_sds_link_ok_3I :  1 ; /* bits 6:6 */
    ca_uint32_t sds01_sds_sdet_out_s0I :  1 ; /* bits 7:7 */
    ca_uint32_t rxidle_d_s0I         :  1 ; /* bits 8:8 */
    ca_uint32_t link_ok_tgxr0I       :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_INTENABLE                          0xf550d030
#define QX_IF_INTENABLE_dft                      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_sym_err_tgxr0E    :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_sds_rx_sym_err_all_s0E :  1 ; /* bits 1:1 */
    ca_uint32_t eee_lpi_rx_tgxr0E    :  1 ; /* bits 2:2 */
    ca_uint32_t sds01_sds_link_ok_0E :  1 ; /* bits 3:3 */
    ca_uint32_t sds01_sds_link_ok_1E :  1 ; /* bits 4:4 */
    ca_uint32_t sds01_sds_link_ok_2E :  1 ; /* bits 5:5 */
    ca_uint32_t sds01_sds_link_ok_3E :  1 ; /* bits 6:6 */
    ca_uint32_t sds01_sds_sdet_out_s0E :  1 ; /* bits 7:7 */
    ca_uint32_t rxidle_d_s0E         :  1 ; /* bits 8:8 */
    ca_uint32_t link_ok_tgxr0E       :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_STATUS                             0xf550d034
#define QX_IF_STATUS_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_sym_err_tgxr0     :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_sds_rx_sym_err_all_s0 :  1 ; /* bits 1:1 */
    ca_uint32_t eee_lpi_rx_tgxr0     :  1 ; /* bits 2:2 */
    ca_uint32_t sds01_sds_link_ok_0  :  1 ; /* bits 3:3 */
    ca_uint32_t sds01_sds_link_ok_1  :  1 ; /* bits 4:4 */
    ca_uint32_t sds01_sds_link_ok_2  :  1 ; /* bits 5:5 */
    ca_uint32_t sds01_sds_link_ok_3  :  1 ; /* bits 6:6 */
    ca_uint32_t sds01_sds_sdet_out_s0 :  1 ; /* bits 7:7 */
    ca_uint32_t rxidle_d_s0          :  1 ; /* bits 8:8 */
    ca_uint32_t sds01_mac_lpi_rx     :  8 ; /* bits 16:9 */
    ca_uint32_t sds01_phy_lpi_tx     :  8 ; /* bits 24:17 */
    ca_uint32_t link_fault_tgxr0     :  3 ; /* bits 27:25 */
    ca_uint32_t wtg_reg_rdy          :  1 ; /* bits 28:28 */
    ca_uint32_t sds01_fib_iso_s0     :  1 ; /* bits 29:29 */
    ca_uint32_t intp_tgr0            :  1 ; /* bits 30:30 */
    ca_uint32_t link_ok_tgxr0        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_STATUS2                            0xf550d038
#define QX_IF_STATUS2_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds01_fib100_det_s0  :  1 ; /* bits 0:0 */
    ca_uint32_t sds01_fib100_sdet_s0 :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_STATUS2_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_ABILITY                            0xf550d03c
#define QX_IF_ABILITY_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wtg_sdsab_0_ablty    : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_ABILITY_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_ABILITY1                           0xf550d040
#define QX_IF_ABILITY1_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wtg_sdsab_1_ablty    : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_ABILITY1_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_ABILITY2                           0xf550d044
#define QX_IF_ABILITY2_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wtg_sdsab_2_ablty    : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_ABILITY2_t;
#endif /* !__ASSEMBLER__ */


#define QX_IF_ABILITY3                           0xf550d048
#define QX_IF_ABILITY3_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t wtg_sdsab_3_ablty    : 17 ; /* bits 16:0 */
    ca_uint32_t rsrvd1               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_IF_ABILITY3_t;
#endif /* !__ASSEMBLER__ */


#define QX_REG_ACCESS                            0xf550d04c
#define QX_REG_ACCESS_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_a                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 14 ;
    ca_uint32_t sds_we               :  1 ; /* bits 30:30 */
    ca_uint32_t sds_access           :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} QX_REG_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define QX_REG_DATAIN                            0xf550d050
#define QX_REG_DATAIN_dft                        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_d_in             : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_REG_DATAIN_t;
#endif /* !__ASSEMBLER__ */


#define QX_REG_DATAOUT                           0xf550d054
#define QX_REG_DATAOUT_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sds_d_out            : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_REG_DATAOUT_t;
#endif /* !__ASSEMBLER__ */


#define QX_SDS_STATE                             0xf550d058
#define QX_SDS_STATE_dft                         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t CKRDY                :  1 ; /* bits 13:13 */
    ca_uint32_t RXIDLE               :  1 ; /* bits 14:14 */
    ca_uint32_t BER_NOTIFY           :  1 ; /* bits 15:15 */
    ca_uint32_t VTH_EN               :  1 ; /* bits 16:16 */
    ca_uint32_t rsrvd2               : 15 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_SDS_STATE_t;
#endif /* !__ASSEMBLER__ */


#define QX_XG_PRMB_RCVY                          0xf550d05c
#define QX_XG_PRMB_RCVY_dft                      0x00000009

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cfg_prmb_rcvy_en     :  1 ; /* bits 0:0 */
    ca_uint32_t cfg_prmb_6byte_mode  :  1 ; /* bits 1:1 */
    ca_uint32_t cfg_dbg_info_off     :  1 ; /* bits 2:2 */
    ca_uint32_t cfg_burstact_6_det_en :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} QX_XG_PRMB_RCVY_t;
#endif /* !__ASSEMBLER__ */


#define QX_XG_PRMB_RCVY_DBG_0                    0xf550d060
#define QX_XG_PRMB_RCVY_DBG_0_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_prmb_rcvy_0      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QX_XG_PRMB_RCVY_DBG_0_t;
#endif /* !__ASSEMBLER__ */


#define QX_XG_PRMB_RCVY_DBG_1                    0xf550d064
#define QX_XG_PRMB_RCVY_DBG_1_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dbg_prmb_rcvy_1      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} QX_XG_PRMB_RCVY_DBG_1_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* qx */
#ifndef __ASSEMBLER__
typedef struct {
  QX_RESET_t                               RESET;                         /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  QX_MODE_t                                MODE;                          /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  QX_CH0_ABILITY_t                         CH0_ABILITY;                   /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  QX_CH1_ABILITY_t                         CH1_ABILITY;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  QX_CH2_ABILITY_t                         CH2_ABILITY;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  QX_CH3_ABILITY_t                         CH3_ABILITY;                   /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  QX_MISC_CNTL_1_t                         MISC_CNTL_1;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  QX_MISC_CNTL_2_t                         MISC_CNTL_2;                   /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  QX_MISC_CNTL_3_t                         MISC_CNTL_3;                   /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  QX_MISC_CNTL_4_t                         MISC_CNTL_4;                   /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  QX_MISC_CNTL_5_t                         MISC_CNTL_5;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  QX_IF_INTERRUPT_t                        IF_INTERRUPT;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  QX_IF_INTENABLE_t                        IF_INTENABLE;                  /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  QX_IF_STATUS_t                           IF_STATUS;                     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  QX_IF_STATUS2_t                          IF_STATUS2;                    /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  QX_IF_ABILITY_t                          IF_ABILITY;                    /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  QX_IF_ABILITY1_t                         IF_ABILITY1;                   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  QX_IF_ABILITY2_t                         IF_ABILITY2;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  QX_IF_ABILITY3_t                         IF_ABILITY3;                   /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  QX_REG_ACCESS_t                          REG_ACCESS;                    /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  QX_REG_DATAIN_t                          REG_DATAIN;                    /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  QX_REG_DATAOUT_t                         REG_DATAOUT;                   /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  QX_SDS_STATE_t                           SDS_STATE;                     /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  QX_XG_PRMB_RCVY_t                        XG_PRMB_RCVY;                  /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  QX_XG_PRMB_RCVY_DBG_0_t                  XG_PRMB_RCVY_DBG_0;            /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  QX_XG_PRMB_RCVY_DBG_1_t                  XG_PRMB_RCVY_DBG_1;            /* addr: 0x00000064 */
} APB7_QX_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* WRAP_SFI */

#ifndef __ASSEMBLER__
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB7 */

#ifndef __ASSEMBLER__
typedef struct {
  APB7_EPON_t                     EPON;                          /* addr: 0x00000000 */
  ca_uint32_t                              APB7_rsrvd1[8041];
  APB7_XGPN_t                     XGPN;                          /* addr: 0x00004000 */
  ca_uint32_t                              APB7_rsrvd2[4115];
  APB7_GPON_MAC_t                 GPON_MAC;                      /* addr: 0x00006000 */
  ca_uint32_t                              APB7_rsrvd3[4597];
  APB7_PUC_t                      PUC;                           /* addr: 0x00008000 */
  ca_uint32_t                              APB7_rsrvd4[3811];
  APB7_PDC_t                      PDC;                           /* addr: 0x00009000 */
  ca_uint32_t                              APB7_rsrvd5[4063];
  APB7_PSDS_WRAP_t                PSDS_WRAP;                     /* addr: 0x0000a000 */
  ca_uint32_t                              APB7_rsrvd6[1935];
  APB7_ACT_ETH_t                  ACT_ETH;                       /* addr: 0x0000a800 */
  ca_uint32_t                              rsrvd1[1625];
  APB7_OTP_MEM_t                           OTP_MEM;                       /* addr: 0x0000b000 */
  ca_uint32_t                              rsrvd2[7169];
  APB7_QX_t                                qx;                            /* addr: 0x00000000 */
} APB7_t;
#endif /* !__ASSEMBLER__ */


/*
 * APB6
 */

/*
 * DMA_GLB
 */

#define DMA_SEC_DMA_GLB_DMA_LSO_CTRL             0xf7001000
#define DMA_SEC_DMA_GLB_DMA_LSO_CTRL_dft         0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_dma_enable        :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t tx_burst_len         :  2 ; /* bits 3:2 */
    ca_uint32_t lspid_keep           :  1 ; /* bits 4:4 */
    ca_uint32_t lso_padding_en       :  1 ; /* bits 5:5 */
    ca_uint32_t ss_unit_sel          :  2 ; /* bits 7:6 */
    ca_uint32_t dma_lso_sreset       :  1 ; /* bits 8:8 */
    ca_uint32_t dma_pktcnt_sel       :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd2               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_LSO_INTERRUPT            0xf7001004
#define DMA_SEC_DMA_GLB_LSO_INTERRUPT_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipv4_dec_err         :  1 ; /* bits 0:0 */
    ca_uint32_t ipv6_dec_err         :  1 ; /* bits 1:1 */
    ca_uint32_t tcp_dec_err          :  1 ; /* bits 2:2 */
    ca_uint32_t udp_dec_err          :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_len_err          :  1 ; /* bits 4:4 */
    ca_uint32_t dma_aft_int          :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_LSO_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_LSO_INTENABLE            0xf7001008
#define DMA_SEC_DMA_GLB_LSO_INTENABLE_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipv4_dec_err_en      :  1 ; /* bits 0:0 */
    ca_uint32_t ipv6_dec_err_en      :  1 ; /* bits 1:1 */
    ca_uint32_t tcp_dec_err_en       :  1 ; /* bits 2:2 */
    ca_uint32_t udp_dec_err_en       :  1 ; /* bits 3:3 */
    ca_uint32_t pkt_len_err_en       :  1 ; /* bits 4:4 */
    ca_uint32_t dma_aft_int_en       :  1 ; /* bits 5:5 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_LSO_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0   0xf700100c
#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t enable               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1   0xf7001010
#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t value                : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t enable               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0    0xf7001014
#define DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t vp0_rd_pat           :  2 ; /* bits 1:0 */
    ca_uint32_t vp1_rd_pat           :  2 ; /* bits 3:2 */
    ca_uint32_t vp2_rd_pat           :  2 ; /* bits 5:4 */
    ca_uint32_t vp3_rd_pat           :  2 ; /* bits 7:6 */
    ca_uint32_t vp4_rd_pat           :  2 ; /* bits 9:8 */
    ca_uint32_t vp5_rd_pat           :  2 ; /* bits 11:10 */
    ca_uint32_t vp6_rd_pat           :  2 ; /* bits 13:12 */
    ca_uint32_t vp7_rd_pat           :  2 ; /* bits 15:14 */
    ca_uint32_t vp8_rd_pat           :  2 ; /* bits 17:16 */
    ca_uint32_t vp9_rd_pat           :  2 ; /* bits 19:18 */
    ca_uint32_t vp10_rd_pat          :  2 ; /* bits 21:20 */
    ca_uint32_t vp11_rd_pat          :  2 ; /* bits 23:22 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_AXI_USER_PAT0            0xf7001018
#define DMA_SEC_DMA_GLB_AXI_USER_PAT0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usr_pat0             : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_AXI_USER_PAT0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_AXI_USER_PAT1            0xf700101c
#define DMA_SEC_DMA_GLB_AXI_USER_PAT1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usr_pat1             : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_AXI_USER_PAT1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_AXI_USER_PAT2            0xf7001020
#define DMA_SEC_DMA_GLB_AXI_USER_PAT2_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usr_pat2             : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_AXI_USER_PAT2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_AXI_USER_PAT3            0xf7001024
#define DMA_SEC_DMA_GLB_AXI_USER_PAT3_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t usr_pat3             : 26 ; /* bits 25:0 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_AXI_USER_PAT3_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_FAST_REG_PE0             0xf7001028
#define DMA_SEC_DMA_GLB_FAST_REG_PE0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe0_en               : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_FAST_REG_PE0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_FAST_REG_PE1             0xf700102c
#define DMA_SEC_DMA_GLB_FAST_REG_PE1_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pe1_en               : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 20 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_FAST_REG_PE1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0    0xf7001030
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fdaddr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1    0xf7001034
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fdaddr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0    0xf7001038
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_cdaddr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1    0xf700103c
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_cdaddr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0     0xf7001040
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1     0xf7001044
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0   0xf7001048
#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 22 ; /* bits 21:0 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1   0xf700104c
#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 18 ; /* bits 17:0 */
    ca_uint32_t rsrvd1               : 14 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0           0xf7001050
#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0_dft       0x01000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dmatx_cs             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t desc_cs              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t txfer_cs             :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t dat_cs               :  2 ; /* bits 13:12 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t txfout_cs            :  4 ; /* bits 19:16 */
    ca_uint32_t base_cs              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t pktcnt_cs            :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd6               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1           0xf7001054
#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dmaif_fifo_cs        :  5 ; /* bits 4:0 */
    ca_uint32_t dmaif_state          :  4 ; /* bits 8:5 */
    ca_uint32_t outctl_fout_cs       :  4 ; /* bits 12:9 */
    ca_uint32_t outctl_fin_cs        :  3 ; /* bits 15:13 */
    ca_uint32_t inctl_fout_cs        :  4 ; /* bits 19:16 */
    ca_uint32_t inctl_fin_cs         :  2 ; /* bits 21:20 */
    ca_uint32_t rsrvd1               : 10 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2           0xf7001058
#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t udp_cs               :  4 ; /* bits 3:0 */
    ca_uint32_t tcp_cs               :  4 ; /* bits 7:4 */
    ca_uint32_t ip_cs                :  4 ; /* bits 11:8 */
    ca_uint32_t macif_macIF_st       :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd1               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE0           0xf700105c
#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_spare0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_SPARE0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE1           0xf7001060
#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_spare1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_LSO_SPARE1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL          0xf7001064
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_dma_enable        :  1 ; /* bits 0:0 */
    ca_uint32_t rx_check_own         :  1 ; /* bits 1:1 */
    ca_uint32_t rxdes_update_en      :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL          0xf7001068
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_dma_enable        :  1 ; /* bits 0:0 */
    ca_uint32_t tx_check_own         :  1 ; /* bits 1:1 */
    ca_uint32_t txdes_update_en      :  1 ; /* bits 2:2 */
    ca_uint32_t dma_ssp_sreset       :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               : 28 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0    0xf700106c
#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t q5_rd_pat            :  2 ; /* bits 1:0 */
    ca_uint32_t q6_rd_pat            :  2 ; /* bits 3:2 */
    ca_uint32_t q7_rd_pat            :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1    0xf7001070
#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t q5_wr_pat            :  2 ; /* bits 1:0 */
    ca_uint32_t q6_wr_pat            :  2 ; /* bits 3:2 */
    ca_uint32_t q7_wr_pat            :  2 ; /* bits 5:4 */
    ca_uint32_t rsrvd1               : 26 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0    0xf7001074
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fdaddr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1    0xf7001078
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_fdaddr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0    0xf700107c
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_cdaddr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1    0xf7001080
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rx_cdaddr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0     0xf7001084
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1     0xf7001088
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0    0xf700108c
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fdaddr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1    0xf7001090
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_fdaddr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0    0xf7001094
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_cdaddr            : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1    0xf7001098
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tx_cdaddr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0     0xf700109c
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1     0xf70010a0
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0           0xf70010a4
#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxsch_cs             :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t dmarx_cs             :  5 ; /* bits 8:4 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t rxfer_cs             :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t rxfin_cs             :  2 ; /* bits 17:16 */
    ca_uint32_t rsrvd4               :  2 ;
    ca_uint32_t rxfout_cs            :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  9 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1           0xf70010a8
#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sp_cs                :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rr1_cs               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t dmatx_cs             :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t txfer_cs             :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t txfout_cs            :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t mux_cs               :  3 ; /* bits 26:24 */
    ca_uint32_t mmc_cs               :  2 ; /* bits 28:27 */
    ca_uint32_t rsrvd6               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2           0xf70010ac
#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t flash_cs             :  2 ; /* bits 1:0 */
    ca_uint32_t ssptx_cs             :  3 ; /* bits 4:2 */
    ca_uint32_t ssprx_cs             :  2 ; /* bits 6:5 */
    ca_uint32_t rsrvd1               : 25 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE0           0xf70010b0
#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_spare0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_SPARE0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE1           0xf70010b4
#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE1_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_spare1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_DMA_SSP_SPARE1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_0      0xf70010b8
#define DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_0_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_1      0xf70010bc
#define DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_1_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_2      0xf70010c0
#define DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_2_dft  0x02020202

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t test_cfg0            :  8 ; /* bits 7:0 */
    ca_uint32_t test_cfg1            :  8 ; /* bits 15:8 */
    ca_uint32_t test_cfg2            :  8 ; /* bits 23:16 */
    ca_uint32_t test_cfg3            :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_SRAM_LS_CONTROL          0xf70010c4
#define DMA_SEC_DMA_GLB_SRAM_LS_CONTROL_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_lso_sramls       : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_SRAM_LS_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_CCI_MAP                  0xf70010c8
#define DMA_SEC_DMA_GLB_CCI_MAP_dft              0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cci_map              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_CCI_MAP_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_GLB_CFG_LENFIX_EN            0xf70010cc
#define DMA_SEC_DMA_GLB_CFG_LENFIX_EN_dft        0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lenfix_en            :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_GLB_CFG_LENFIX_EN_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_GLB */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA_GLB_DMA_LSO_CTRL_t           DMA_LSO_CTRL;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_DMA_GLB_LSO_INTERRUPT_t          LSO_INTERRUPT;                 /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_DMA_GLB_LSO_INTENABLE_t          LSO_INTENABLE;                 /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0_t DMA_LSO_VLAN_TAG_TYPE0;        /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1_t DMA_LSO_VLAN_TAG_TYPE1;        /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0_t  DMA_LSO_AXI_USER_SEL0;         /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_SEC_DMA_GLB_AXI_USER_PAT0_t          AXI_USER_PAT0;                 /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_SEC_DMA_GLB_AXI_USER_PAT1_t          AXI_USER_PAT1;                 /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_SEC_DMA_GLB_AXI_USER_PAT2_t          AXI_USER_PAT2;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_SEC_DMA_GLB_AXI_USER_PAT3_t          AXI_USER_PAT3;                 /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_SEC_DMA_GLB_FAST_REG_PE0_t           FAST_REG_PE0;                  /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_SEC_DMA_GLB_FAST_REG_PE1_t           FAST_REG_PE1;                  /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0_t  DMA_LSO_TX_FDES_ADDR0;         /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1_t  DMA_LSO_TX_FDES_ADDR1;         /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0_t  DMA_LSO_TX_CDES_ADDR0;         /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1_t  DMA_LSO_TX_CDES_ADDR1;         /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0_t   DMA_LSO_TX_DES_WORD0;          /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1_t   DMA_LSO_TX_DES_WORD1;          /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0_t DMA_LSO_LSO_PARA_WORD0;        /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1_t DMA_LSO_LSO_PARA_WORD1;        /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0_t         DMA_LSO_DEBUG0;                /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1_t         DMA_LSO_DEBUG1;                /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2_t         DMA_LSO_DEBUG2;                /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  DMA_SEC_DMA_GLB_DMA_LSO_SPARE0_t         DMA_LSO_SPARE0;                /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  DMA_SEC_DMA_GLB_DMA_LSO_SPARE1_t         DMA_LSO_SPARE1;                /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL_t        DMA_SSP_RX_CTRL;               /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL_t        DMA_SSP_TX_CTRL;               /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0_t  DMA_SSP_AXI_USER_SEL0;         /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1_t  DMA_SSP_AXI_USER_SEL1;         /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0_t  DMA_SSP_RX_FDES_ADDR0;         /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1_t  DMA_SSP_RX_FDES_ADDR1;         /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0_t  DMA_SSP_RX_CDES_ADDR0;         /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1_t  DMA_SSP_RX_CDES_ADDR1;         /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0_t   DMA_SSP_RX_DES_WORD0;          /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd34[3];
  DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1_t   DMA_SSP_RX_DES_WORD1;          /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd35[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0_t  DMA_SSP_TX_FDES_ADDR0;         /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd36[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1_t  DMA_SSP_TX_FDES_ADDR1;         /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd37[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0_t  DMA_SSP_TX_CDES_ADDR0;         /* addr: 0x00000094 */
  ca_uint32_t                              rsrvd38[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1_t  DMA_SSP_TX_CDES_ADDR1;         /* addr: 0x00000098 */
  ca_uint32_t                              rsrvd39[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0_t   DMA_SSP_TX_DES_WORD0;          /* addr: 0x0000009c */
  ca_uint32_t                              rsrvd40[3];
  DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1_t   DMA_SSP_TX_DES_WORD1;          /* addr: 0x000000a0 */
  ca_uint32_t                              rsrvd41[3];
  DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0_t         DMA_SSP_DEBUG0;                /* addr: 0x000000a4 */
  ca_uint32_t                              rsrvd42[3];
  DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1_t         DMA_SSP_DEBUG1;                /* addr: 0x000000a8 */
  ca_uint32_t                              rsrvd43[3];
  DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2_t         DMA_SSP_DEBUG2;                /* addr: 0x000000ac */
  ca_uint32_t                              rsrvd44[3];
  DMA_SEC_DMA_GLB_DMA_SSP_SPARE0_t         DMA_SSP_SPARE0;                /* addr: 0x000000b0 */
  ca_uint32_t                              rsrvd45[3];
  DMA_SEC_DMA_GLB_DMA_SSP_SPARE1_t         DMA_SSP_SPARE1;                /* addr: 0x000000b4 */
  ca_uint32_t                              rsrvd46[3];
  DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_0_t    SRAM_TEST_CONTROL_0;           /* addr: 0x000000b8 */
  ca_uint32_t                              rsrvd47[3];
  DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_1_t    SRAM_TEST_CONTROL_1;           /* addr: 0x000000bc */
  ca_uint32_t                              rsrvd48[3];
  DMA_SEC_DMA_GLB_SRAM_TEST_CONTROL_2_t    SRAM_TEST_CONTROL_2;           /* addr: 0x000000c0 */
  ca_uint32_t                              rsrvd49[3];
  DMA_SEC_DMA_GLB_SRAM_LS_CONTROL_t        SRAM_LS_CONTROL;               /* addr: 0x000000c4 */
  ca_uint32_t                              rsrvd50[3];
  DMA_SEC_DMA_GLB_CCI_MAP_t                CCI_MAP;                       /* addr: 0x000000c8 */
  ca_uint32_t                              rsrvd51[3];
  DMA_SEC_DMA_GLB_CFG_LENFIX_EN_t          CFG_LENFIX_EN;                 /* addr: 0x000000cc */
} DMA_SEC_DMA_GLB_t;
#endif /* !__ASSEMBLER__ */


/*
 * DMA0_STRM_ID_TBL
 */

#define DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_ACCESS 0xf70010e0
#define DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 22 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_DATA 0xf70010e4
#define DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t deep_q               :  1 ; /* bits 0:0 */
    ca_uint32_t pol_id               :  8 ; /* bits 8:1 */
    ca_uint32_t cos                  :  3 ; /* bits 11:9 */
    ca_uint32_t ldpid                :  6 ; /* bits 17:12 */
    ca_uint32_t rsrvd1               : 13 ;
    ca_uint32_t en_flag              :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_DATA_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA0_STRM_ID_TBL */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_ACCESS_t STREAMID_TBL_CTRL_ACCESS;      /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_DMA0_STRM_ID_TBL_STREAMID_TBL_CTRL_DATA_t STREAMID_TBL_CTRL_DATA;        /* addr: 0x00000004 */
} DMA_SEC_DMA0_STRM_ID_TBL_t;
#endif /* !__ASSEMBLER__ */


/*
 * DMA_LSO_VP[0..11]
 */

#define DMA_SEC_DMA_LSO_VP_CONTROL               0xf7001100
#define DMA_SEC_DMA_LSO_VP_CONTROL_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq0_en              :  1 ; /* bits 0:0 */
    ca_uint32_t txq1_en              :  1 ; /* bits 1:1 */
    ca_uint32_t txq2_en              :  1 ; /* bits 2:2 */
    ca_uint32_t txq3_en              :  1 ; /* bits 3:3 */
    ca_uint32_t txq4_en              :  1 ; /* bits 4:4 */
    ca_uint32_t txq5_en              :  1 ; /* bits 5:5 */
    ca_uint32_t txq6_en              :  1 ; /* bits 6:6 */
    ca_uint32_t txq7_en              :  1 ; /* bits 7:7 */
    ca_uint32_t te_dma_bp_en         :  1 ; /* bits 8:8 */
    ca_uint32_t l2te_dma_bp_en       :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS 0xf7001104
#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_id               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1  0xf7001108
#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base_addr            :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0  0xf700110c
#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t depth                :  4 ; /* bits 3:0 */
    ca_uint32_t base_addr            : 28 ; /* bits 31:4 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS     0xf7001110
#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_id               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 27 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA       0xf7001114
#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_cnt              : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ0_WPTR             0xf7001118
#define DMA_SEC_DMA_LSO_VP_TXQ0_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ0_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ0_RPTR             0xf700111c
#define DMA_SEC_DMA_LSO_VP_TXQ0_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ0_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ1_WPTR             0xf7001120
#define DMA_SEC_DMA_LSO_VP_TXQ1_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ1_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ1_RPTR             0xf7001124
#define DMA_SEC_DMA_LSO_VP_TXQ1_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ1_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ2_WPTR             0xf7001128
#define DMA_SEC_DMA_LSO_VP_TXQ2_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ2_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ2_RPTR             0xf700112c
#define DMA_SEC_DMA_LSO_VP_TXQ2_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ2_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ3_WPTR             0xf7001130
#define DMA_SEC_DMA_LSO_VP_TXQ3_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ3_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ3_RPTR             0xf7001134
#define DMA_SEC_DMA_LSO_VP_TXQ3_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ3_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ4_WPTR             0xf7001138
#define DMA_SEC_DMA_LSO_VP_TXQ4_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ4_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ4_RPTR             0xf700113c
#define DMA_SEC_DMA_LSO_VP_TXQ4_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ4_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ5_WPTR             0xf7001140
#define DMA_SEC_DMA_LSO_VP_TXQ5_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ5_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ5_RPTR             0xf7001144
#define DMA_SEC_DMA_LSO_VP_TXQ5_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ5_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ6_WPTR             0xf7001148
#define DMA_SEC_DMA_LSO_VP_TXQ6_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ6_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ6_RPTR             0xf700114c
#define DMA_SEC_DMA_LSO_VP_TXQ6_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ6_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ7_WPTR             0xf7001150
#define DMA_SEC_DMA_LSO_VP_TXQ7_WPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ7_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_TXQ7_RPTR             0xf7001154
#define DMA_SEC_DMA_LSO_VP_TXQ7_RPTR_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_TXQ7_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_INT_COAL_SET          0xf7001158
#define DMA_SEC_DMA_LSO_VP_INT_COAL_SET_dft      0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t event_threshold      :  6 ; /* bits 5:0 */
    ca_uint32_t int_delay_time       : 20 ; /* bits 25:6 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_INT_COAL_SET_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_INT_COAL_SRC          0xf700115c
#define DMA_SEC_DMA_LSO_VP_INT_COAL_SRC_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq0_eof_en          :  1 ; /* bits 0:0 */
    ca_uint32_t txq1_eof_en          :  1 ; /* bits 1:1 */
    ca_uint32_t txq2_eof_en          :  1 ; /* bits 2:2 */
    ca_uint32_t txq3_eof_en          :  1 ; /* bits 3:3 */
    ca_uint32_t txq4_eof_en          :  1 ; /* bits 4:4 */
    ca_uint32_t txq5_eof_en          :  1 ; /* bits 5:5 */
    ca_uint32_t txq6_eof_en          :  1 ; /* bits 6:6 */
    ca_uint32_t txq7_eof_en          :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_INT_COAL_SRC_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_VP_INTERRUPT          0xf7001160
#define DMA_SEC_DMA_LSO_VP_VP_INTERRUPT_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MISC_INTERRUPTi      :  1 ; /* bits 0:0 */
    ca_uint32_t COAL_INTERRUPTi      :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_VP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_VP_INTENABLE          0xf7001164
#define DMA_SEC_DMA_LSO_VP_VP_INTENABLE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t MISC_INTERRUPTi_en   :  1 ; /* bits 0:0 */
    ca_uint32_t COAL_INTERRUPTi_en   :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_VP_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT        0xf7001168
#define DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq0_empty           :  1 ; /* bits 0:0 */
    ca_uint32_t txq0_pktcnt_overrun  :  1 ; /* bits 1:1 */
    ca_uint32_t txq0_des_err         :  1 ; /* bits 2:2 */
    ca_uint32_t txq1_empty           :  1 ; /* bits 3:3 */
    ca_uint32_t txq1_pktcnt_overrun  :  1 ; /* bits 4:4 */
    ca_uint32_t txq1_des_err         :  1 ; /* bits 5:5 */
    ca_uint32_t txq2_empty           :  1 ; /* bits 6:6 */
    ca_uint32_t txq2_pktcnt_overrun  :  1 ; /* bits 7:7 */
    ca_uint32_t txq2_des_err         :  1 ; /* bits 8:8 */
    ca_uint32_t txq3_empty           :  1 ; /* bits 9:9 */
    ca_uint32_t txq3_pktcnt_overrun  :  1 ; /* bits 10:10 */
    ca_uint32_t txq3_des_err         :  1 ; /* bits 11:11 */
    ca_uint32_t txq4_empty           :  1 ; /* bits 12:12 */
    ca_uint32_t txq4_pktcnt_overrun  :  1 ; /* bits 13:13 */
    ca_uint32_t txq4_des_err         :  1 ; /* bits 14:14 */
    ca_uint32_t txq5_empty           :  1 ; /* bits 15:15 */
    ca_uint32_t txq5_pktcnt_overrun  :  1 ; /* bits 16:16 */
    ca_uint32_t txq5_des_err         :  1 ; /* bits 17:17 */
    ca_uint32_t txq6_empty           :  1 ; /* bits 18:18 */
    ca_uint32_t txq6_pktcnt_overrun  :  1 ; /* bits 19:19 */
    ca_uint32_t txq6_des_err         :  1 ; /* bits 20:20 */
    ca_uint32_t txq7_empty           :  1 ; /* bits 21:21 */
    ca_uint32_t txq7_pktcnt_overrun  :  1 ; /* bits 22:22 */
    ca_uint32_t txq7_des_err         :  1 ; /* bits 23:23 */
    ca_uint32_t fbm_timeout_err      :  1 ; /* bits 24:24 */
    ca_uint32_t l2te_te_bp           :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_MISC_INTENABLE        0xf700116c
#define DMA_SEC_DMA_LSO_VP_MISC_INTENABLE_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq0_empty_en        :  1 ; /* bits 0:0 */
    ca_uint32_t txq0_pktcnt_overrun_en :  1 ; /* bits 1:1 */
    ca_uint32_t txq0_des_err_en      :  1 ; /* bits 2:2 */
    ca_uint32_t txq1_empty_en        :  1 ; /* bits 3:3 */
    ca_uint32_t txq1_pktcnt_overrun_en :  1 ; /* bits 4:4 */
    ca_uint32_t txq1_des_err_en      :  1 ; /* bits 5:5 */
    ca_uint32_t txq2_empty_en        :  1 ; /* bits 6:6 */
    ca_uint32_t txq2_pktcnt_overrun_en :  1 ; /* bits 7:7 */
    ca_uint32_t txq2_des_err_en      :  1 ; /* bits 8:8 */
    ca_uint32_t txq3_empty_en        :  1 ; /* bits 9:9 */
    ca_uint32_t txq3_pktcnt_overrun_en :  1 ; /* bits 10:10 */
    ca_uint32_t txq3_des_err_en      :  1 ; /* bits 11:11 */
    ca_uint32_t txq4_empty_en        :  1 ; /* bits 12:12 */
    ca_uint32_t txq4_pktcnt_overrun_en :  1 ; /* bits 13:13 */
    ca_uint32_t txq4_des_err_en      :  1 ; /* bits 14:14 */
    ca_uint32_t txq5_empty_en        :  1 ; /* bits 15:15 */
    ca_uint32_t txq5_pktcnt_overrun_en :  1 ; /* bits 16:16 */
    ca_uint32_t txq5_des_err_en      :  1 ; /* bits 17:17 */
    ca_uint32_t txq6_empty_en        :  1 ; /* bits 18:18 */
    ca_uint32_t txq6_pktcnt_overrun_en :  1 ; /* bits 19:19 */
    ca_uint32_t txq6_des_err_en      :  1 ; /* bits 20:20 */
    ca_uint32_t txq7_empty_en        :  1 ; /* bits 21:21 */
    ca_uint32_t txq7_pktcnt_overrun_en :  1 ; /* bits 22:22 */
    ca_uint32_t txq7_des_err_en      :  1 ; /* bits 23:23 */
    ca_uint32_t fbm_timeout_err_en   :  1 ; /* bits 24:24 */
    ca_uint32_t l2te_te_bp_en        :  1 ; /* bits 25:25 */
    ca_uint32_t rsrvd1               :  6 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT        0xf7001170
#define DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_eof              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_COAL_INTENABLE        0xf7001174
#define DMA_SEC_DMA_LSO_VP_COAL_INTENABLE_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_eof_en           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_COAL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_HDRA_CFG              0xf7001178
#define DMA_SEC_DMA_LSO_VP_HDRA_CFG_dft          0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t hdra_cos             :  3 ; /* bits 2:0 */
    ca_uint32_t hdra_ldpid           :  6 ; /* bits 8:3 */
    ca_uint32_t hdra_febypass        :  1 ; /* bits 9:9 */
    ca_uint32_t hdra_nodrop          :  1 ; /* bits 10:10 */
    ca_uint32_t hdra_mirror          :  1 ; /* bits 11:11 */
    ca_uint32_t hdra_deepq           :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_HDRA_CFG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_IPG_CFG0              0xf700117c
#define DMA_SEC_DMA_LSO_VP_IPG_CFG0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipg_txq0             :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ipg_txq1             :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ipg_txq2             :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t ipg_txq3             :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_IPG_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_IPG_CFG1              0xf7001180
#define DMA_SEC_DMA_LSO_VP_IPG_CFG1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ipg_txq4             :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t ipg_txq5             :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t ipg_txq6             :  5 ; /* bits 20:16 */
    ca_uint32_t rsrvd3               :  3 ;
    ca_uint32_t ipg_txq7             :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_LSO_VP_IPG_CFG1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_LSO_VP_STRIDE                160
#define DMA_SEC_DMA_LSO_VP_COUNT                 12



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_LSO_VP */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA_LSO_VP_CONTROL_t             CONTROL;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS_t TXQ_BASE_DEPTH_ACCESS;         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1_t TXQ_BASE_DEPTH_DATA1;          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0_t TXQ_BASE_DEPTH_DATA0;          /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS_t   TXQ_PKTCNT_ACCESS;             /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA_t     TXQ_PKTCNT_DATA;               /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_SEC_DMA_LSO_VP_TXQ0_WPTR_t           TXQ0_WPTR;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_SEC_DMA_LSO_VP_TXQ0_RPTR_t           TXQ0_RPTR;                     /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_SEC_DMA_LSO_VP_TXQ1_WPTR_t           TXQ1_WPTR;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_SEC_DMA_LSO_VP_TXQ1_RPTR_t           TXQ1_RPTR;                     /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_SEC_DMA_LSO_VP_TXQ2_WPTR_t           TXQ2_WPTR;                     /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_SEC_DMA_LSO_VP_TXQ2_RPTR_t           TXQ2_RPTR;                     /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DMA_SEC_DMA_LSO_VP_TXQ3_WPTR_t           TXQ3_WPTR;                     /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DMA_SEC_DMA_LSO_VP_TXQ3_RPTR_t           TXQ3_RPTR;                     /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DMA_SEC_DMA_LSO_VP_TXQ4_WPTR_t           TXQ4_WPTR;                     /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DMA_SEC_DMA_LSO_VP_TXQ4_RPTR_t           TXQ4_RPTR;                     /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DMA_SEC_DMA_LSO_VP_TXQ5_WPTR_t           TXQ5_WPTR;                     /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DMA_SEC_DMA_LSO_VP_TXQ5_RPTR_t           TXQ5_RPTR;                     /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  DMA_SEC_DMA_LSO_VP_TXQ6_WPTR_t           TXQ6_WPTR;                     /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  DMA_SEC_DMA_LSO_VP_TXQ6_RPTR_t           TXQ6_RPTR;                     /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  DMA_SEC_DMA_LSO_VP_TXQ7_WPTR_t           TXQ7_WPTR;                     /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  DMA_SEC_DMA_LSO_VP_TXQ7_RPTR_t           TXQ7_RPTR;                     /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  DMA_SEC_DMA_LSO_VP_INT_COAL_SET_t        INT_COAL_SET;                  /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  DMA_SEC_DMA_LSO_VP_INT_COAL_SRC_t        INT_COAL_SRC;                  /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  DMA_SEC_DMA_LSO_VP_VP_INTERRUPT_t        VP_INTERRUPT;                  /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  DMA_SEC_DMA_LSO_VP_VP_INTENABLE_t        VP_INTENABLE;                  /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT_t      MISC_INTERRUPT;                /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  DMA_SEC_DMA_LSO_VP_MISC_INTENABLE_t      MISC_INTENABLE;                /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT_t      COAL_INTERRUPT;                /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  DMA_SEC_DMA_LSO_VP_COAL_INTENABLE_t      COAL_INTENABLE;                /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  DMA_SEC_DMA_LSO_VP_HDRA_CFG_t            HDRA_CFG;                      /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  DMA_SEC_DMA_LSO_VP_IPG_CFG0_t            IPG_CFG0;                      /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
  DMA_SEC_DMA_LSO_VP_IPG_CFG1_t            IPG_CFG1;                      /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd33[31];
} DMA_SEC_DMA_LSO_VP_t;
#endif /* !__ASSEMBLER__ */


/*
 * SS
 */

#define DMA_SEC_SS_CTRL                          0xf7001900
#define DMA_SEC_SS_CTRL_dft                      0x30000fff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t cpu_en               : 12 ; /* bits 11:0 */
    ca_uint32_t rsrvd1               : 15 ;
    ca_uint32_t force_init_done      :  1 ; /* bits 27:27 */
    ca_uint32_t addtok_en            :  1 ; /* bits 28:28 */
    ca_uint32_t subtok_en            :  1 ; /* bits 29:29 */
    ca_uint32_t shp_en               :  1 ; /* bits 30:30 */
    ca_uint32_t tx_en                :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_STS                           0xf7001904
#define DMA_SEC_SS_STS_dft                       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sch_fifo_overflow    :  1 ; /* bits 0:0 */
    ca_uint32_t shp_fifo_overflow    :  1 ; /* bits 1:1 */
    ca_uint32_t shp_fifo_empty       :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 28 ;
    ca_uint32_t shp_init_done        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_STS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_DRR_WEIGHT_BASE               0xf7001908
#define DMA_SEC_SS_DRR_WEIGHT_BASE_dft           0x00000380

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t w_rate               :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t sch_mode             :  1 ; /* bits 7:7 */
    ca_uint32_t base_select          :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd2               : 21 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_DRR_WEIGHT_BASE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG      0xf700190c
#define DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG_dft  0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port0                :  8 ; /* bits 7:0 */
    ca_uint32_t port1                :  8 ; /* bits 15:8 */
    ca_uint32_t port2                :  8 ; /* bits 23:16 */
    ca_uint32_t port3                :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG      0xf7001910
#define DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG_dft  0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port4                :  8 ; /* bits 7:0 */
    ca_uint32_t port5                :  8 ; /* bits 15:8 */
    ca_uint32_t port6                :  8 ; /* bits 23:16 */
    ca_uint32_t port7                :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG     0xf7001914
#define DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t port8                :  8 ; /* bits 7:0 */
    ca_uint32_t port9                :  8 ; /* bits 15:8 */
    ca_uint32_t port10               :  8 ; /* bits 23:16 */
    ca_uint32_t port11               :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0      0xf7001918
#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_STRIDE 8
#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_COUNT 12
#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq0                 :  8 ; /* bits 7:0 */
    ca_uint32_t voq1                 :  8 ; /* bits 15:8 */
    ca_uint32_t voq2                 :  8 ; /* bits 23:16 */
    ca_uint32_t voq3                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0      0xf700191c
#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_STRIDE 8
#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_COUNT 12
#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_dft  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t voq4                 :  8 ; /* bits 7:0 */
    ca_uint32_t voq5                 :  8 ; /* bits 15:8 */
    ca_uint32_t voq6                 :  8 ; /* bits 23:16 */
    ca_uint32_t voq7                 :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_CTRL                      0xf7001978
#define DMA_SEC_SS_SHP_CTRL_dft                  0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t pkt_mode_class0_cnt  :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t pkt_mode_class1_cnt  :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS       0xf700197c
#define DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS_dft   0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  4 ; /* bits 3:0 */
    ca_uint32_t rsrvd1               : 26 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1        0xf7001980
#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0        0xf7001984
#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS        0xf7001988
#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS_dft    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t address              :  7 ; /* bits 6:0 */
    ca_uint32_t rsrvd1               : 23 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1         0xf700198c
#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t bs                   :  6 ; /* bits 5:0 */
    ca_uint32_t enb                  :  2 ; /* bits 7:6 */
    ca_uint32_t mode                 :  1 ; /* bits 8:8 */
    ca_uint32_t tbc                  : 21 ; /* bits 29:9 */
    ca_uint32_t pkt_mode_class_sel   :  1 ; /* bits 30:30 */
    ca_uint32_t rsrvd1               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0         0xf7001990
#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0_dft     0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rate_k               : 10 ; /* bits 9:0 */
    ca_uint32_t rate_m               : 16 ; /* bits 25:10 */
    ca_uint32_t bs                   :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SS_HDM_WRITE_PROTECTION          0xf7001994
#define DMA_SEC_SS_HDM_WRITE_PROTECTION_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t passwd               : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SS_HDM_WRITE_PROTECTION_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SS */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_SS_CTRL_t                        CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_SS_STS_t                         STS;                           /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_SS_DRR_WEIGHT_BASE_t             DRR_WEIGHT_BASE;               /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG_t    PORT3_0_WEIGHT_RATIO_CFG;      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG_t    PORT7_4_WEIGHT_RATIO_CFG;      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG_t   PORT11_8_WEIGHT_RATIO_CFG;     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_t    VOQ3_0_WEIGHT_RATIO_CFG0;      /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_t    VOQ7_4_WEIGHT_RATIO_CFG0;      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[91];
  DMA_SEC_SS_SHP_CTRL_t                    SHP_CTRL;                      /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd9[3];
  DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS_t     SHP_PORT_TBC_MEM_ACCESS;       /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd10[3];
  DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1_t      SHP_PORT_TBC_MEM_DATA1;        /* addr: 0x00000080 */
  ca_uint32_t                              rsrvd11[3];
  DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0_t      SHP_PORT_TBC_MEM_DATA0;        /* addr: 0x00000084 */
  ca_uint32_t                              rsrvd12[3];
  DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS_t      SHP_VOQ_TBC_MEM_ACCESS;        /* addr: 0x00000088 */
  ca_uint32_t                              rsrvd13[3];
  DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1_t       SHP_VOQ_TBC_MEM_DATA1;         /* addr: 0x0000008c */
  ca_uint32_t                              rsrvd14[3];
  DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0_t       SHP_VOQ_TBC_MEM_DATA0;         /* addr: 0x00000090 */
  ca_uint32_t                              rsrvd15[3];
  DMA_SEC_SS_HDM_WRITE_PROTECTION_t        HDM_WRITE_PROTECTION;          /* addr: 0x00000094 */
} DMA_SEC_SS_t;
#endif /* !__ASSEMBLER__ */


/*
 * DMA_SSP_Q[0..2]
 */

#define DMA_SEC_DMA_SSP_Q_RXQ_CONTROL            0xf7001a00
#define DMA_SEC_DMA_SSP_Q_RXQ_CONTROL_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rxq_flush_en         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t burst_size           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t rxq_packet_threshold :  6 ; /* bits 11:6 */
    ca_uint32_t rxq_tmr              : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH         0xf7001a04
#define DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH_dft     0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t depth                :  4 ; /* bits 3:0 */
    ca_uint32_t base                 : 28 ; /* bits 31:4 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_BASE               0xf7001a08
#define DMA_SEC_DMA_SSP_Q_RXQ_BASE_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_BASE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_WPTR               0xf7001a0c
#define DMA_SEC_DMA_SSP_Q_RXQ_WPTR_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_RPTR               0xf7001a10
#define DMA_SEC_DMA_SSP_Q_RXQ_RPTR_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT             0xf7001a14
#define DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter              : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_CONTROL            0xf7001a18
#define DMA_SEC_DMA_SSP_Q_TXQ_CONTROL_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_en               :  1 ; /* bits 0:0 */
    ca_uint32_t txq_flush_en         :  1 ; /* bits 1:1 */
    ca_uint32_t txq_sp_en            :  1 ; /* bits 2:2 */
    ca_uint32_t burst_size           :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t txq_packet_threshold :  6 ; /* bits 11:6 */
    ca_uint32_t txq_tmr              : 20 ; /* bits 31:12 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_CONTROL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH         0xf7001a1c
#define DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH_dft     0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t depth                :  4 ; /* bits 3:0 */
    ca_uint32_t base                 : 28 ; /* bits 31:4 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_BASE               0xf7001a20
#define DMA_SEC_DMA_SSP_Q_TXQ_BASE_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t base                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_BASE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_WPTR               0xf7001a24
#define DMA_SEC_DMA_SSP_Q_TXQ_WPTR_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_WPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_RPTR               0xf7001a28
#define DMA_SEC_DMA_SSP_Q_TXQ_RPTR_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t index                : 13 ; /* bits 12:0 */
    ca_uint32_t rsrvd1               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_RPTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT             0xf7001a2c
#define DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t counter              : 24 ; /* bits 23:0 */
    ca_uint32_t rsrvd1               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT          0xf7001a30
#define DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RXQ_MISC_INTERRUPTi  :  1 ; /* bits 0:0 */
    ca_uint32_t RXQ_COAL_INTERRUPTi  :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE          0xf7001a34
#define DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RXQ_MISC_INTERRUPTi_en :  1 ; /* bits 0:0 */
    ca_uint32_t RXQ_COAL_INTERRUPTi_en :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT          0xf7001a38
#define DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TXQ_MISC_INTERRUPTi  :  1 ; /* bits 0:0 */
    ca_uint32_t TXQ_COAL_INTERRUPTi  :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE          0xf7001a3c
#define DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TXQ_MISC_INTERRUPTi_en :  1 ; /* bits 0:0 */
    ca_uint32_t TXQ_COAL_INTERRUPTi_en :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT     0xf7001a40
#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxq_full             :  1 ; /* bits 0:0 */
    ca_uint32_t rxq_overrun          :  1 ; /* bits 1:1 */
    ca_uint32_t rxq_desc_err         :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE     0xf7001a44
#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxq_full_en          :  1 ; /* bits 0:0 */
    ca_uint32_t rxq_overrun_en       :  1 ; /* bits 1:1 */
    ca_uint32_t rxq_desc_err_en      :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT     0xf7001a48
#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_empty            :  1 ; /* bits 0:0 */
    ca_uint32_t txq_overrun          :  1 ; /* bits 1:1 */
    ca_uint32_t txq_desc_err         :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE     0xf7001a4c
#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_empty_en         :  1 ; /* bits 0:0 */
    ca_uint32_t txq_overrun_en       :  1 ; /* bits 1:1 */
    ca_uint32_t txq_desc_err_en      :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT     0xf7001a50
#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxq_eof              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE     0xf7001a54
#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxq_eof_en           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT     0xf7001a58
#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_eof              :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE     0xf7001a5c
#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t txq_eof_en           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0    0xf7001a60
#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1    0xf7001a64
#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE     0xf7001a68
#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buffersize           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0    0xf7001a6c
#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1    0xf7001a70
#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t data                 :  8 ; /* bits 7:0 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE     0xf7001a74
#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t buffersize           : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_0            0xf7001a78
#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_0_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_spare0           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_DMA_SPARE_0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_1            0xf7001a7c
#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_1_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t dma_spare1           : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_SSP_Q_DMA_SPARE_1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_SSP_Q_STRIDE                 128
#define DMA_SEC_DMA_SSP_Q_COUNT                  3



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_SSP_Q */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA_SSP_Q_RXQ_CONTROL_t          RXQ_CONTROL;                   /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH_t       RXQ_BASE_DEPTH;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_DMA_SSP_Q_RXQ_BASE_t             RXQ_BASE;                      /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_DMA_SSP_Q_RXQ_WPTR_t             RXQ_WPTR;                      /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_SEC_DMA_SSP_Q_RXQ_RPTR_t             RXQ_RPTR;                      /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT_t           RXQ_PKTCNT;                    /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_SEC_DMA_SSP_Q_TXQ_CONTROL_t          TXQ_CONTROL;                   /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH_t       TXQ_BASE_DEPTH;                /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_SEC_DMA_SSP_Q_TXQ_BASE_t             TXQ_BASE;                      /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_SEC_DMA_SSP_Q_TXQ_WPTR_t             TXQ_WPTR;                      /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_SEC_DMA_SSP_Q_TXQ_RPTR_t             TXQ_RPTR;                      /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT_t           TXQ_PKTCNT;                    /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT_t        RXQ_INTERRUPT;                 /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE_t        RXQ_INTENABLE;                 /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT_t        TXQ_INTERRUPT;                 /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE_t        TXQ_INTENABLE;                 /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT_t   RXQ_MISC_INTERRUPT;            /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE_t   RXQ_MISC_INTENABLE;            /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT_t   TXQ_MISC_INTERRUPT;            /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE_t   TXQ_MISC_INTENABLE;            /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT_t   RXQ_COAL_INTERRUPT;            /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE_t   RXQ_COAL_INTENABLE;            /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT_t   TXQ_COAL_INTERRUPT;            /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE_t   TXQ_COAL_INTENABLE;            /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0_t  RXQ_FRAG_BUFF_ADDR0;           /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1_t  RXQ_FRAG_BUFF_ADDR1;           /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[3];
  DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE_t   RXQ_FRAG_BUFF_SIZE;            /* addr: 0x00000068 */
  ca_uint32_t                              rsrvd27[3];
  DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0_t  TXQ_FRAG_BUFF_ADDR0;           /* addr: 0x0000006c */
  ca_uint32_t                              rsrvd28[3];
  DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1_t  TXQ_FRAG_BUFF_ADDR1;           /* addr: 0x00000070 */
  ca_uint32_t                              rsrvd29[3];
  DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE_t   TXQ_FRAG_BUFF_SIZE;            /* addr: 0x00000074 */
  ca_uint32_t                              rsrvd30[3];
  DMA_SEC_DMA_SSP_Q_DMA_SPARE_0_t          DMA_SPARE_0;                   /* addr: 0x00000078 */
  ca_uint32_t                              rsrvd31[3];
  DMA_SEC_DMA_SSP_Q_DMA_SPARE_1_t          DMA_SPARE_1;                   /* addr: 0x0000007c */
  ca_uint32_t                              rsrvd32[3];
} DMA_SEC_DMA_SSP_Q_t;
#endif /* !__ASSEMBLER__ */


/*
 * SSP[0..1]
 */

#define DMA_SEC_SSP_ID                           0xf7001b80
#define DMA_SEC_SSP_ID_dft                       0x00010300

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t REV_ID               :  8 ; /* bits 7:0 */
    ca_uint32_t DEV_ID               : 24 ; /* bits 31:8 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_ID_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_CTRL0                        0xf7001b84
#define DMA_SEC_SSP_CTRL0_dft                    0x001f0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rxChByteSwap         :  1 ; /* bits 0:0 */
    ca_uint32_t txChByteSwap         :  1 ; /* bits 1:1 */
    ca_uint32_t loop_en              :  1 ; /* bits 2:2 */
    ca_uint32_t forceTC              :  1 ; /* bits 3:3 */
    ca_uint32_t txleft_24bitswap     :  1 ; /* bits 4:4 */
    ca_uint32_t txright_24bitswap    :  1 ; /* bits 5:5 */
    ca_uint32_t rxleft_24bitswap     :  1 ; /* bits 6:6 */
    ca_uint32_t rxright_24bitswap    :  1 ; /* bits 7:7 */
    ca_uint32_t spdif_enable         :  1 ; /* bits 8:8 */
    ca_uint32_t s_enable             :  1 ; /* bits 9:9 */
    ca_uint32_t spdif_fourBitShift   :  1 ; /* bits 10:10 */
    ca_uint32_t spdif_byteShift      :  1 ; /* bits 11:11 */
    ca_uint32_t spdif_preambleIns    :  1 ; /* bits 12:12 */
    ca_uint32_t spdif_mode4WordEn    :  1 ; /* bits 13:13 */
    ca_uint32_t zsi_sel_en           :  1 ; /* bits 14:14 */
    ca_uint32_t isi_en               :  1 ; /* bits 15:15 */
    ca_uint32_t spdif_dma_wtMk       :  7 ; /* bits 22:16 */
    ca_uint32_t spdif_dll_en         :  1 ; /* bits 23:23 */
    ca_uint32_t pcm_slv_en           :  1 ; /* bits 24:24 */
    ca_uint32_t spi_sel              :  3 ; /* bits 27:25 */
    ca_uint32_t rsrvd1               :  4 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_CTRL1                        0xf7001b88
#define DMA_SEC_SSP_CTRL1_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t startProc            :  1 ; /* bits 0:0 */
    ca_uint32_t i2s_rxstartProc      :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_FRAME_CTRL0                  0xf7001b8c
#define DMA_SEC_SSP_FRAME_CTRL0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t reserved             : 16 ; /* bits 15:0 */
    ca_uint32_t FSCFreeRun           :  1 ; /* bits 16:16 */
    ca_uint32_t extClkSel            :  1 ; /* bits 17:17 */
    ca_uint32_t sClkPol              :  1 ; /* bits 18:18 */
    ca_uint32_t sClkPhase            :  1 ; /* bits 19:19 */
    ca_uint32_t sClkOffOnIdle        :  1 ; /* bits 20:20 */
    ca_uint32_t extSClkSel           :  1 ; /* bits 21:21 */
    ca_uint32_t doubleClock          :  1 ; /* bits 22:22 */
    ca_uint32_t lsbFirst             :  1 ; /* bits 23:23 */
    ca_uint32_t txEdge               :  1 ; /* bits 24:24 */
    ca_uint32_t pll_49M_en           :  1 ; /* bits 25:25 */
    ca_uint32_t rxEdge               :  1 ; /* bits 26:26 */
    ca_uint32_t clk_src_pol          :  1 ; /* bits 27:27 */
    ca_uint32_t FSPol                :  1 ; /* bits 28:28 */
    ca_uint32_t FSEdge               :  1 ; /* bits 29:29 */
    ca_uint32_t mclkSel              :  1 ; /* bits 30:30 */
    ca_uint32_t bypass_clkDiv        :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_FRAME_CTRL0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_FRAME_CTRL1                  0xf7001b90
#define DMA_SEC_SSP_FRAME_CTRL1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t FSLen                : 10 ; /* bits 9:0 */
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t slot2FS              :  4 ; /* bits 15:12 */
    ca_uint32_t numOfSlots           :  7 ; /* bits 22:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t slot2Slot            :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t FS2Slot              :  4 ; /* bits 31:28 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_FRAME_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_BAUDRATE_CTRL                0xf7001b94
#define DMA_SEC_SSP_BAUDRATE_CTRL_dft            0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sumValue             : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_BAUDRATE_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_FIFO_CTRL                    0xf7001b98
#define DMA_SEC_SSP_FIFO_CTRL_dft                0x07f0007f

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rfrWtMkLvl           :  8 ; /* bits 7:0 */
    ca_uint32_t rfwWtMkLvl           :  4 ; /* bits 11:8 */
    ca_uint32_t rsrvd1               :  4 ;
    ca_uint32_t tfrWtMkLvl           :  4 ; /* bits 19:16 */
    ca_uint32_t tfwWtMkLvl           :  8 ; /* bits 27:20 */
    ca_uint32_t frame2Frame          :  3 ; /* bits 30:28 */
    ca_uint32_t reserved             :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_FIFO_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_FIFO_PTR                     0xf7001b9c
#define DMA_SEC_SSP_FIFO_PTR_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tfWrPtr              :  8 ; /* bits 7:0 */
    ca_uint32_t tfRdPtr              :  8 ; /* bits 15:8 */
    ca_uint32_t rfWrPtr              :  8 ; /* bits 23:16 */
    ca_uint32_t rfRdPtr              :  8 ; /* bits 31:24 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_FIFO_PTR_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_INTERRUPT                    0xf7001ba0
#define DMA_SEC_SSP_INTERRUPT_dft                0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tfsFull              :  1 ; /* bits 0:0 */
    ca_uint32_t tfsEmpty             :  1 ; /* bits 1:1 */
    ca_uint32_t tfwWtMk              :  1 ; /* bits 2:2 */
    ca_uint32_t tfsUndRun            :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rfsFull              :  1 ; /* bits 5:5 */
    ca_uint32_t rfsEmpty             :  1 ; /* bits 6:6 */
    ca_uint32_t rfrWtMk              :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rfsOvrRun            :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t spdif_int            :  1 ; /* bits 16:16 */
    ca_uint32_t spdifFifoFull_int    :  1 ; /* bits 17:17 */
    ca_uint32_t slic_int             :  1 ; /* bits 18:18 */
    ca_uint32_t pcm_slv_disc         :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd4               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_INT_ENABLE                   0xf7001ba4
#define DMA_SEC_SSP_INT_ENABLE_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tfsFull_int_en       :  1 ; /* bits 0:0 */
    ca_uint32_t tfsEmpty_int_en      :  1 ; /* bits 1:1 */
    ca_uint32_t tfwWtMk_int_en       :  1 ; /* bits 2:2 */
    ca_uint32_t tfsUndRun_int_en     :  1 ; /* bits 3:3 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t rfsFull_int_en       :  1 ; /* bits 5:5 */
    ca_uint32_t rfsEmpty_int_en      :  1 ; /* bits 6:6 */
    ca_uint32_t rfrWtMk_int_en       :  1 ; /* bits 7:7 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t rfsOvrRun_int_en     :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd3               :  6 ;
    ca_uint32_t spdif_int_en         :  1 ; /* bits 16:16 */
    ca_uint32_t spdifFifoFull_int_en :  1 ; /* bits 17:17 */
    ca_uint32_t slic_int_en          :  1 ; /* bits 18:18 */
    ca_uint32_t pcm_slv_disc_en      :  1 ; /* bits 19:19 */
    ca_uint32_t rsrvd4               : 12 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_INT_ENABLE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_TXSLOT_VLD0                  0xf7001ba8
#define DMA_SEC_SSP_TXSLOT_VLD0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_TXSLOT_VLD0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_TXSLOT_VLD1                  0xf7001bac
#define DMA_SEC_SSP_TXSLOT_VLD1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_TXSLOT_VLD1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_TXSLOT_VLD2                  0xf7001bb0
#define DMA_SEC_SSP_TXSLOT_VLD2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_TXSLOT_VLD2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_TXSLOT_VLD3                  0xf7001bb4
#define DMA_SEC_SSP_TXSLOT_VLD3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_TXSLOT_VLD3_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_RXSLOT_VLD0                  0xf7001bb8
#define DMA_SEC_SSP_RXSLOT_VLD0_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_RXSLOT_VLD0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_RXSLOT_VLD1                  0xf7001bbc
#define DMA_SEC_SSP_RXSLOT_VLD1_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_RXSLOT_VLD1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_RXSLOT_VLD2                  0xf7001bc0
#define DMA_SEC_SSP_RXSLOT_VLD2_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_RXSLOT_VLD2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_RXSLOT_VLD3                  0xf7001bc4
#define DMA_SEC_SSP_RXSLOT_VLD3_dft              0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t SlotVld              : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_RXSLOT_VLD3_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SLOT_SIZE0                   0xf7001bc8
#define DMA_SEC_SSP_SLOT_SIZE0_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sSize0               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sSize1               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sSize2               :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sSize3               :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t sSize4               :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t sSize5               :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t sSize6               :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t sSize7               :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SLOT_SIZE0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SLOT_SIZE1                   0xf7001bcc
#define DMA_SEC_SSP_SLOT_SIZE1_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sSize8               :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sSize9               :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sSize10              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sSize11              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t sSize12              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t sSize13              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t sSize14              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t sSize15              :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SLOT_SIZE1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SLOT_SIZE2                   0xf7001bd0
#define DMA_SEC_SSP_SLOT_SIZE2_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sSize16              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sSize17              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sSize18              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sSize19              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t sSize20              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t sSize21              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t sSize22              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t sSize23              :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SLOT_SIZE2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SLOT_SIZE3                   0xf7001bd4
#define DMA_SEC_SSP_SLOT_SIZE3_dft               0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t sSize24              :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t sSize25              :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t sSize26              :  3 ; /* bits 10:8 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t sSize27              :  3 ; /* bits 14:12 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t sSize28              :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd5               :  1 ;
    ca_uint32_t sSize29              :  3 ; /* bits 22:20 */
    ca_uint32_t rsrvd6               :  1 ;
    ca_uint32_t sSize30              :  3 ; /* bits 26:24 */
    ca_uint32_t rsrvd7               :  1 ;
    ca_uint32_t sSize31              :  3 ; /* bits 30:28 */
    ca_uint32_t rsrvd8               :  1 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SLOT_SIZE3_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_BAUDRATE_CTRL1               0xf7001bd8
#define DMA_SEC_SSP_BAUDRATE_CTRL1_dft           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t baud_cnt_upbond      : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_BAUDRATE_CTRL1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SPDIF_RX_CTRL                0xf7001bdc
#define DMA_SEC_SSP_SPDIF_RX_CTRL_dft            0x00001f00

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spdif_rx_enable      :  1 ; /* bits 0:0 */
    ca_uint32_t spdif_rx_4wordMode   :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               :  6 ;
    ca_uint32_t spdif_rx_dma_wtMk    :  7 ; /* bits 14:8 */
    ca_uint32_t rsrvd2               : 17 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SPDIF_RX_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SPDIF_RX_STATUS              0xf7001be0
#define DMA_SEC_SSP_SPDIF_RX_STATUS_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t spdif_rx_unit_interval : 12 ; /* bits 11:0 */
    ca_uint32_t spdif_rx_sync        :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t sTxfrState           :  3 ; /* bits 18:16 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t slv_cs_p             :  4 ; /* bits 23:20 */
    ca_uint32_t rsrvd3               :  8 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SPDIF_RX_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_SPARE                        0xf7001be4
#define DMA_SEC_SSP_SPARE_dft                    0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t Spare                : 32 ; /* bits 31:0 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_SSP_SPARE_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_SSP_STRIDE                       128
#define DMA_SEC_SSP_COUNT                        2



/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SSP */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_SSP_ID_t                         ID;                            /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_SSP_CTRL0_t                      CTRL0;                         /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_SSP_CTRL1_t                      CTRL1;                         /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_SSP_FRAME_CTRL0_t                FRAME_CTRL0;                   /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_SEC_SSP_FRAME_CTRL1_t                FRAME_CTRL1;                   /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_SEC_SSP_BAUDRATE_CTRL_t              BAUDRATE_CTRL;                 /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_SEC_SSP_FIFO_CTRL_t                  FIFO_CTRL;                     /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_SEC_SSP_FIFO_PTR_t                   FIFO_PTR;                      /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_SEC_SSP_INTERRUPT_t                  INTERRUPT;                     /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_SEC_SSP_INT_ENABLE_t                 INT_ENABLE;                    /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_SEC_SSP_TXSLOT_VLD0_t                TXSLOT_VLD0;                   /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_SEC_SSP_TXSLOT_VLD1_t                TXSLOT_VLD1;                   /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DMA_SEC_SSP_TXSLOT_VLD2_t                TXSLOT_VLD2;                   /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DMA_SEC_SSP_TXSLOT_VLD3_t                TXSLOT_VLD3;                   /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DMA_SEC_SSP_RXSLOT_VLD0_t                RXSLOT_VLD0;                   /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DMA_SEC_SSP_RXSLOT_VLD1_t                RXSLOT_VLD1;                   /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DMA_SEC_SSP_RXSLOT_VLD2_t                RXSLOT_VLD2;                   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DMA_SEC_SSP_RXSLOT_VLD3_t                RXSLOT_VLD3;                   /* addr: 0x00000044 */
  ca_uint32_t                              rsrvd18[3];
  DMA_SEC_SSP_SLOT_SIZE0_t                 SLOT_SIZE0;                    /* addr: 0x00000048 */
  ca_uint32_t                              rsrvd19[3];
  DMA_SEC_SSP_SLOT_SIZE1_t                 SLOT_SIZE1;                    /* addr: 0x0000004c */
  ca_uint32_t                              rsrvd20[3];
  DMA_SEC_SSP_SLOT_SIZE2_t                 SLOT_SIZE2;                    /* addr: 0x00000050 */
  ca_uint32_t                              rsrvd21[3];
  DMA_SEC_SSP_SLOT_SIZE3_t                 SLOT_SIZE3;                    /* addr: 0x00000054 */
  ca_uint32_t                              rsrvd22[3];
  DMA_SEC_SSP_BAUDRATE_CTRL1_t             BAUDRATE_CTRL1;                /* addr: 0x00000058 */
  ca_uint32_t                              rsrvd23[3];
  DMA_SEC_SSP_SPDIF_RX_CTRL_t              SPDIF_RX_CTRL;                 /* addr: 0x0000005c */
  ca_uint32_t                              rsrvd24[3];
  DMA_SEC_SSP_SPDIF_RX_STATUS_t            SPDIF_RX_STATUS;               /* addr: 0x00000060 */
  ca_uint32_t                              rsrvd25[3];
  DMA_SEC_SSP_SPARE_t                      SPARE;                         /* addr: 0x00000064 */
  ca_uint32_t                              rsrvd26[27];
} DMA_SEC_SSP_t;
#endif /* !__ASSEMBLER__ */


/*
 * SPDIF
 */



/*
 * AXIM2
 */

#define DMA_SEC_AXIM2_CONFIG                     0xf7001d80
#define DMA_SEC_AXIM2_CONFIG_dft                 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t axi_write_outtrans_num :  4 ; /* bits 3:0 */
    ca_uint32_t axi_read_outtrans_num :  4 ; /* bits 7:4 */
    ca_uint32_t axi_xbus_len         :  3 ; /* bits 10:8 */
    ca_uint32_t write_cacheline_trans_en :  1 ; /* bits 11:11 */
    ca_uint32_t write_cacheline_trans_size :  1 ; /* bits 12:12 */
    ca_uint32_t read_cacheline_trans_en :  1 ; /* bits 13:13 */
    ca_uint32_t read_cacheline_trans_size :  1 ; /* bits 14:14 */
    ca_uint32_t arcache_eos_en       :  1 ; /* bits 15:15 */
    ca_uint32_t awcache_eos_en       :  1 ; /* bits 16:16 */
    ca_uint32_t reserved             : 15 ; /* bits 31:17 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_AXIM2_TIMEOUT_THRESHOLD          0xf7001d84
#define DMA_SEC_AXIM2_TIMEOUT_THRESHOLD_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_channel_threshold :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t write_channel_threshold :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd2               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_AXIM2_INTERRUPT_STATUS           0xf7001d88
#define DMA_SEC_AXIM2_INTERRUPT_STATUS_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_AXIM2_INTERRUPT_ENABLE           0xf7001d8c
#define DMA_SEC_AXIM2_INTERRUPT_ENABLE_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t read_trans_resp_timeout_int_en :  1 ; /* bits 0:0 */
    ca_uint32_t read_trans_resp_err_int_en :  1 ; /* bits 1:1 */
    ca_uint32_t write_trans_resp_timeout_int_en :  1 ; /* bits 2:2 */
    ca_uint32_t write_trans_resp_err_int_en :  1 ; /* bits 3:3 */
    ca_uint32_t read_trans_resp_ace_err_int_en :  1 ; /* bits 4:4 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_AXIM2_CONFIG_t                   CONFIG;                        /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_AXIM2_TIMEOUT_THRESHOLD_t        TIMEOUT_THRESHOLD;             /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_AXIM2_INTERRUPT_STATUS_t         INTERRUPT_STATUS;              /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_AXIM2_INTERRUPT_ENABLE_t         INTERRUPT_ENABLE;              /* addr: 0x0000000c */
} DMA_SEC_AXIM2_t;
#endif /* !__ASSEMBLER__ */


/*
 * DMA_INT
 */

#define DMA_SEC_DMA_INT_DMA_LSO_INT0             0xf7001e00
#define DMA_SEC_DMA_INT_DMA_LSO_INT0_STRIDE      16
#define DMA_SEC_DMA_INT_DMA_LSO_INT0_COUNT       8
#define DMA_SEC_DMA_INT_DMA_LSO_INT0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VP0_INTERRUPTi       :  1 ; /* bits 0:0 */
    ca_uint32_t VP1_INTERRUPTi       :  1 ; /* bits 1:1 */
    ca_uint32_t VP2_INTERRUPTi       :  1 ; /* bits 2:2 */
    ca_uint32_t VP3_INTERRUPTi       :  1 ; /* bits 3:3 */
    ca_uint32_t VP4_INTERRUPTi       :  1 ; /* bits 4:4 */
    ca_uint32_t VP5_INTERRUPTi       :  1 ; /* bits 5:5 */
    ca_uint32_t VP6_INTERRUPTi       :  1 ; /* bits 6:6 */
    ca_uint32_t VP7_INTERRUPTi       :  1 ; /* bits 7:7 */
    ca_uint32_t VP8_INTERRUPTi       :  1 ; /* bits 8:8 */
    ca_uint32_t VP9_INTERRUPTi       :  1 ; /* bits 9:9 */
    ca_uint32_t VP10_INTERRUPTi      :  1 ; /* bits 10:10 */
    ca_uint32_t VP11_INTERRUPTi      :  1 ; /* bits 11:11 */
    ca_uint32_t LSO_INTERRUPTi       :  1 ; /* bits 12:12 */
    ca_uint32_t SS_INTERRUPTi        :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_INT_DMA_LSO_INT0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_INT_DMA_LSO_INTEN0           0xf7001e04
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN0_STRIDE    16
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN0_COUNT     8
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t VP0_INTERRUPTi_en    :  1 ; /* bits 0:0 */
    ca_uint32_t VP1_INTERRUPTi_en    :  1 ; /* bits 1:1 */
    ca_uint32_t VP2_INTERRUPTi_en    :  1 ; /* bits 2:2 */
    ca_uint32_t VP3_INTERRUPTi_en    :  1 ; /* bits 3:3 */
    ca_uint32_t VP4_INTERRUPTi_en    :  1 ; /* bits 4:4 */
    ca_uint32_t VP5_INTERRUPTi_en    :  1 ; /* bits 5:5 */
    ca_uint32_t VP6_INTERRUPTi_en    :  1 ; /* bits 6:6 */
    ca_uint32_t VP7_INTERRUPTi_en    :  1 ; /* bits 7:7 */
    ca_uint32_t VP8_INTERRUPTi_en    :  1 ; /* bits 8:8 */
    ca_uint32_t VP9_INTERRUPTi_en    :  1 ; /* bits 9:9 */
    ca_uint32_t VP10_INTERRUPTi_en   :  1 ; /* bits 10:10 */
    ca_uint32_t VP11_INTERRUPTi_en   :  1 ; /* bits 11:11 */
    ca_uint32_t LSO_INTERRUPTi_en    :  1 ; /* bits 12:12 */
    ca_uint32_t SS_INTERRUPTi_en     :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd1               : 18 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_INT_DMA_SSP_INT0             0xf7001e08
#define DMA_SEC_DMA_INT_DMA_SSP_INT0_STRIDE      16
#define DMA_SEC_DMA_INT_DMA_SSP_INT0_COUNT       8
#define DMA_SEC_DMA_INT_DMA_SSP_INT0_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TXQ5_INTERRUPTi      :  1 ; /* bits 0:0 */
    ca_uint32_t RXQ5_INTERRUPTi      :  1 ; /* bits 1:1 */
    ca_uint32_t TXQ6_INTERRUPTi      :  1 ; /* bits 2:2 */
    ca_uint32_t RXQ6_INTERRUPTi      :  1 ; /* bits 3:3 */
    ca_uint32_t TXQ7_INTERRUPTi      :  1 ; /* bits 4:4 */
    ca_uint32_t RXQ7_INTERRUPTi      :  1 ; /* bits 5:5 */
    ca_uint32_t SSP0_INTERRUPTi      :  1 ; /* bits 6:6 */
    ca_uint32_t SSP1_INTERRUPTi      :  1 ; /* bits 7:7 */
    ca_uint32_t AXIM_INTERRUPTi      :  1 ; /* bits 8:8 */
    ca_uint32_t SPDIF_INTERRUPTi     :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_INT_DMA_SSP_INT0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_INT_DMA_SSP_INTEN0           0xf7001e0c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN0_STRIDE    16
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN0_COUNT     8
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN0_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t TXQ5_INTERRUPTi_en   :  1 ; /* bits 0:0 */
    ca_uint32_t RXQ5_INTERRUPTi_en   :  1 ; /* bits 1:1 */
    ca_uint32_t TXQ6_INTERRUPTi_en   :  1 ; /* bits 2:2 */
    ca_uint32_t RXQ6_INTERRUPTi_en   :  1 ; /* bits 3:3 */
    ca_uint32_t TXQ7_INTERRUPTi_en   :  1 ; /* bits 4:4 */
    ca_uint32_t RXQ7_INTERRUPTi_en   :  1 ; /* bits 5:5 */
    ca_uint32_t SSP0_INTERRUPTi_en   :  1 ; /* bits 6:6 */
    ca_uint32_t SSP1_INTERRUPTi_en   :  1 ; /* bits 7:7 */
    ca_uint32_t AXIM_INTERRUPTi_en   :  1 ; /* bits 8:8 */
    ca_uint32_t SPDIF_INTERRUPTi_en  :  1 ; /* bits 9:9 */
    ca_uint32_t rsrvd1               : 22 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_INT */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA_INT_DMA_LSO_INT0_t           DMA_LSO_INT0;                  /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_DMA_INT_DMA_LSO_INTEN0_t         DMA_LSO_INTEN0;                /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_DMA_INT_DMA_SSP_INT0_t           DMA_SSP_INT0;                  /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_DMA_INT_DMA_SSP_INTEN0_t         DMA_SSP_INTEN0;                /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[50];
} DMA_SEC_DMA_INT_t;
#endif /* !__ASSEMBLER__ */


/*
 * DMA_AFT
 */

#define DMA_SEC_DMA_AFT_CTRL                     0xf7001f00
#define DMA_SEC_DMA_AFT_CTRL_dft                 0x00000400

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t padding_en           :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t padding_size         : 14 ; /* bits 17:4 */
    ca_uint32_t rsrvd2               : 13 ;
    ca_uint32_t sw_rst               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_TPID_0                   0xf7001f04
#define DMA_SEC_DMA_AFT_TPID_0_dft               0x88a88100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid_0               : 16 ; /* bits 15:0 */
    ca_uint32_t tpid_1               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_TPID_0_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_TPID_1                   0xf7001f08
#define DMA_SEC_DMA_AFT_TPID_1_dft               0x92009100

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t tpid_2               : 16 ; /* bits 15:0 */
    ca_uint32_t tpid_3               : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_TPID_1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_TPID_CTRL                0xf7001f0c
#define DMA_SEC_DMA_AFT_TPID_CTRL_dft            0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t top_vlan_en          :  4 ; /* bits 3:0 */
    ca_uint32_t inner_vlan_en        :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd1               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_TPID_CTRL_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_PPPOE_PUSH               0xf7001f10
#define DMA_SEC_DMA_AFT_PPPOE_PUSH_dft           0xc0210011

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t ver                  :  4 ; /* bits 3:0 */
    ca_uint32_t type                 :  4 ; /* bits 7:4 */
    ca_uint32_t code                 :  8 ; /* bits 15:8 */
    ca_uint32_t protocol_id          : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_PPPOE_PUSH_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_PPPOE_POP                0xf7001f14
#define DMA_SEC_DMA_AFT_PPPOE_POP_dft            0x00009999

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t protocol_id          : 16 ; /* bits 15:0 */
    ca_uint32_t rsrvd1               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_PPPOE_POP_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_LF_FF_CTRL_REG           0xf7001f18
#define DMA_SEC_DMA_AFT_LF_FF_CTRL_REG_dft       0x00000f0a

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t low_thr              :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t high_thr             :  5 ; /* bits 12:8 */
    ca_uint32_t rsrvd2               : 19 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_LF_FF_CTRL_REG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_LF_FF_ENTRY_CNT          0xf7001f1c
#define DMA_SEC_DMA_AFT_LF_FF_ENTRY_CNT_dft      0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  5 ; /* bits 4:0 */
    ca_uint32_t rsrvd1               : 27 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_LF_FF_ENTRY_CNT_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_LF_FF_STS_REG            0xf7001f20
#define DMA_SEC_DMA_AFT_LF_FF_STS_REG_dft        0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t underflow_ind        :  1 ; /* bits 0:0 */
    ca_uint32_t overflow_ind         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_LF_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_CMD_FF_CTRL_REG          0xf7001f24
#define DMA_SEC_DMA_AFT_CMD_FF_CTRL_REG_dft      0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t thr                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               : 29 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_CMD_FF_CTRL_REG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_CMD_FF_ENTRY             0xf7001f28
#define DMA_SEC_DMA_AFT_CMD_FF_ENTRY_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t num                  :  3 ; /* bits 2:0 */
    ca_uint32_t rsrvd1               :  1 ;
    ca_uint32_t valid                :  4 ; /* bits 7:4 */
    ca_uint32_t rsrvd2               : 24 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_CMD_FF_ENTRY_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_CMD_FF_STS_REG           0xf7001f2c
#define DMA_SEC_DMA_AFT_CMD_FF_STS_REG_dft       0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t underflow_ind        :  1 ; /* bits 0:0 */
    ca_uint32_t overflow_ind         :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_CMD_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_STS                      0xf7001f30
#define DMA_SEC_DMA_AFT_STS_dft                  0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t lt_cmd_ff_mismatch   :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_STS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_STS1                     0xf7001f34
#define DMA_SEC_DMA_AFT_STS1_dft                 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t in_pkt_sop_eop_mismatch :  1 ; /* bits 0:0 */
    ca_uint32_t rsrvd1               : 31 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_STS1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_L2FIB_ACCESS             0xf7001f38
#define DMA_SEC_DMA_AFT_L2FIB_ACCESS_dft         0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t addr                 :  6 ; /* bits 5:0 */
    ca_uint32_t rsrvd1               : 24 ;
    ca_uint32_t rbw                  :  1 ; /* bits 30:30 */
    ca_uint32_t access               :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_L2FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_L2FIB_DATA2              0xf7001f3c
#define DMA_SEC_DMA_AFT_L2FIB_DATA2_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t top_tpid_sel         :  1 ; /* bits 0:0 */
    ca_uint32_t top_tpid_enc         :  3 ; /* bits 3:1 */
    ca_uint32_t inner_vlan_cmd       :  2 ; /* bits 5:4 */
    ca_uint32_t vlan_cnt             :  2 ; /* bits 7:6 */
    ca_uint32_t vlan_vld             :  1 ; /* bits 8:8 */
    ca_uint32_t rsrvd1               : 23 ;
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_L2FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_L2FIB_DATA1              0xf7001f40
#define DMA_SEC_DMA_AFT_L2FIB_DATA1_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t inner_vid            :  6 ; /* bits 5:0 */
    ca_uint32_t inner_tpid_sel       :  2 ; /* bits 7:6 */
    ca_uint32_t inner_tpid_enc       :  3 ; /* bits 10:8 */
    ca_uint32_t top_1p_sel           :  2 ; /* bits 12:11 */
    ca_uint32_t top_802_1p           :  3 ; /* bits 15:13 */
    ca_uint32_t top_dei_sel          :  2 ; /* bits 17:16 */
    ca_uint32_t top_dei              :  1 ; /* bits 18:18 */
    ca_uint32_t top_vid              : 12 ; /* bits 30:19 */
    ca_uint32_t top_tpid_sel         :  1 ; /* bits 31:31 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_L2FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */


#define DMA_SEC_DMA_AFT_L2FIB_DATA0              0xf7001f44
#define DMA_SEC_DMA_AFT_L2FIB_DATA0_dft          0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t session_id           : 16 ; /* bits 15:0 */
    ca_uint32_t pppoe_cmd            :  2 ; /* bits 17:16 */
    ca_uint32_t inner_1p_sel         :  2 ; /* bits 19:18 */
    ca_uint32_t inner_802_1p         :  3 ; /* bits 22:20 */
    ca_uint32_t inner_dei_sel        :  2 ; /* bits 24:23 */
    ca_uint32_t inner_dei            :  1 ; /* bits 25:25 */
    ca_uint32_t inner_vid            :  6 ; /* bits 31:26 */
  } bf ;
  ca_uint32_t     wrd ;
} DMA_SEC_DMA_AFT_L2FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_AFT */
#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA_AFT_CTRL_t                   CTRL;                          /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  DMA_SEC_DMA_AFT_TPID_0_t                 TPID_0;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  DMA_SEC_DMA_AFT_TPID_1_t                 TPID_1;                        /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  DMA_SEC_DMA_AFT_TPID_CTRL_t              TPID_CTRL;                     /* addr: 0x0000000c */
  ca_uint32_t                              rsrvd4[3];
  DMA_SEC_DMA_AFT_PPPOE_PUSH_t             PPPOE_PUSH;                    /* addr: 0x00000010 */
  ca_uint32_t                              rsrvd5[3];
  DMA_SEC_DMA_AFT_PPPOE_POP_t              PPPOE_POP;                     /* addr: 0x00000014 */
  ca_uint32_t                              rsrvd6[3];
  DMA_SEC_DMA_AFT_LF_FF_CTRL_REG_t         LF_FF_CTRL_REG;                /* addr: 0x00000018 */
  ca_uint32_t                              rsrvd7[3];
  DMA_SEC_DMA_AFT_LF_FF_ENTRY_CNT_t        LF_FF_ENTRY_CNT;               /* addr: 0x0000001c */
  ca_uint32_t                              rsrvd8[3];
  DMA_SEC_DMA_AFT_LF_FF_STS_REG_t          LF_FF_STS_REG;                 /* addr: 0x00000020 */
  ca_uint32_t                              rsrvd9[3];
  DMA_SEC_DMA_AFT_CMD_FF_CTRL_REG_t        CMD_FF_CTRL_REG;               /* addr: 0x00000024 */
  ca_uint32_t                              rsrvd10[3];
  DMA_SEC_DMA_AFT_CMD_FF_ENTRY_t           CMD_FF_ENTRY;                  /* addr: 0x00000028 */
  ca_uint32_t                              rsrvd11[3];
  DMA_SEC_DMA_AFT_CMD_FF_STS_REG_t         CMD_FF_STS_REG;                /* addr: 0x0000002c */
  ca_uint32_t                              rsrvd12[3];
  DMA_SEC_DMA_AFT_STS_t                    STS;                           /* addr: 0x00000030 */
  ca_uint32_t                              rsrvd13[3];
  DMA_SEC_DMA_AFT_STS1_t                   STS1;                          /* addr: 0x00000034 */
  ca_uint32_t                              rsrvd14[3];
  DMA_SEC_DMA_AFT_L2FIB_ACCESS_t           L2FIB_ACCESS;                  /* addr: 0x00000038 */
  ca_uint32_t                              rsrvd15[3];
  DMA_SEC_DMA_AFT_L2FIB_DATA2_t            L2FIB_DATA2;                   /* addr: 0x0000003c */
  ca_uint32_t                              rsrvd16[3];
  DMA_SEC_DMA_AFT_L2FIB_DATA1_t            L2FIB_DATA1;                   /* addr: 0x00000040 */
  ca_uint32_t                              rsrvd17[3];
  DMA_SEC_DMA_AFT_L2FIB_DATA0_t            L2FIB_DATA0;                   /* addr: 0x00000044 */
} DMA_SEC_DMA_AFT_t;
#endif /* !__ASSEMBLER__ */




/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB6 */

#ifndef __ASSEMBLER__
typedef struct {
  DMA_SEC_DMA_GLB_t                        DMA_GLB;                       /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[121];
  DMA_SEC_DMA0_STRM_ID_TBL_t               DMA0_STRM_ID_TBL;              /* addr: 0x000000e0 */
  ca_uint32_t                              rsrvd2[29];
  DMA_SEC_DMA_LSO_VP_t                     DMA_LSO_VP[12];                /* addr: 0x00000100 */
  ca_uint32_t                              rsrvd3[128];
  DMA_SEC_SS_t                             SS;                            /* addr: 0x00000900 */
  ca_uint32_t                              rsrvd4[181];
  DMA_SEC_DMA_SSP_Q_t                      DMA_SSP_Q[3];                  /* addr: 0x00000a00 */
  DMA_SEC_SSP_t                            SSP[2];                        /* addr: 0x00000b80 */
  ca_uint32_t                              rsrvd5[256];
  DMA_SEC_AXIM2_t                          AXIM2;                         /* addr: 0x00000d80 */
  ca_uint32_t                              rsrvd6[121];
  DMA_SEC_DMA_INT_t                        DMA_INT;                       /* addr: 0x00000e00 */
  ca_uint32_t                              rsrvd7[193];
  DMA_SEC_DMA_AFT_t                        DMA_AFT;                       /* addr: 0x00000f00 */
} APB6_t;
#endif /* !__ASSEMBLER__ */


/*
 * ROMOTP
 */

#define OTP_CTL                                  0xfff80800
#define OTP_CTL_dft                              0x00201000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               : 12 ;
    ca_uint32_t RESETB               :  1 ; /* bits 12:12 */
    ca_uint32_t rsrvd2               :  3 ;
    ca_uint32_t PWR                  :  1 ; /* bits 16:16 */
    ca_uint32_t AXIPREVENT           :  1 ; /* bits 17:17 */
    ca_uint32_t rsrvd3               :  2 ;
    ca_uint32_t SRAMTEST             :  4 ; /* bits 23:20 */
    ca_uint32_t SPACE                :  5 ; /* bits 28:24 */
    ca_uint32_t rsrvd4               :  3 ;
  } bf ;
  ca_uint32_t     wrd ;
} OTP_CTL_t;
#endif /* !__ASSEMBLER__ */

#define     SPACE_DEFAULT                                 0x0
#define     SPACE_TDECBIST                                0x8
#define     SPACE_WRTSBIST                                0xa
#define     SPACE_LOCK                                    0xb
#define     SPACE_RGSTR                                   0xd
#define     SPACE_BLNKBISR                                0xe

#define OTP_STATUS                               0xfff80804
#define OTP_STATUS_dft                           0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t RDOPEN_STATE         :  1 ; /* bits 0:0 */
    ca_uint32_t WROPEN_STATE         :  1 ; /* bits 1:1 */
    ca_uint32_t LOCK                 :  1 ; /* bits 2:2 */
    ca_uint32_t SRESP                :  2 ; /* bits 4:3 */
    ca_uint32_t rsrvd1               :  3 ;
    ca_uint32_t SDATA                :  8 ; /* bits 15:8 */
    ca_uint32_t rsrvd2               : 16 ;
  } bf ;
  ca_uint32_t     wrd ;
} OTP_STATUS_t;
#endif /* !__ASSEMBLER__ */


#define OTP_PROT                                 0xfff80808
#define OTP_PROT_dft                             0x008b0000

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t START                : 11 ; /* bits 10:0 */
    ca_uint32_t rsrvd1               :  5 ;
    ca_uint32_t END                  : 11 ; /* bits 26:16 */
    ca_uint32_t rsrvd2               :  5 ;
  } bf ;
  ca_uint32_t     wrd ;
} OTP_PROT_t;
#endif /* !__ASSEMBLER__ */


#define OTP_PROTEN                               0xfff8080c
#define OTP_PROTEN_dft                           0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t EN                   :  1 ; /* bits 0:0 */
    ca_uint32_t PROG                 :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} OTP_PROTEN_t;
#endif /* !__ASSEMBLER__ */





/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ROMOTP */
#ifndef __ASSEMBLER__
typedef struct {
  OTP_CTL_t                                CTL;                           /* addr: 0x00000000 */
  ca_uint32_t                              rsrvd1[3];
  OTP_STATUS_t                             STATUS;                        /* addr: 0x00000004 */
  ca_uint32_t                              rsrvd2[3];
  OTP_PROT_t                               PROT;                          /* addr: 0x00000008 */
  ca_uint32_t                              rsrvd3[3];
  OTP_PROTEN_t                             PROTEN;                        /* addr: 0x0000000c */
} ROMOTP_t;
#endif /* !__ASSEMBLER__ */


/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* TAURUS */
#ifndef __ASSEMBLER__
#if 0 //Software not use it.
typedef struct {
  ca_uint32_t                              rsrvd1[2419064832];
  APB1_t                                   APB1;                          /* addr: 0x90300000 */
  ca_uint32_t                              rsrvd2[1677709243];
  APB0_t                                   APB0;                          /* addr: 0xf4300000 */
  ca_uint32_t                              rsrvd3[8101];
  DDR_CTRL_t                               DDR_CTRL;                      /* addr: 0xf4310000 */
  ca_uint32_t                              rsrvd4[50667];
  APB2_t                                   APB2;                          /* addr: 0xf4320000 */
  ca_uint32_t                              rsrvd5[3840];
  APB3_t                                   APB3;                          /* addr: 0xf4330000 */
  ca_uint32_t                              rsrvd6[2904063];
  APB8_t                                   APB8;                          /* addr: 0xf4600000 */
  ca_uint32_t                              rsrvd7[9437119];
  GPV0_t                                   GPV0;                          /* addr: 0xf5000000 */
  ca_uint32_t                              rsrvd8[1048575];
  GPV1_t                                   GPV1;                          /* addr: 0xf5100000 */
  ca_uint32_t                              rsrvd9[1048575];
  GPV2_t                                   GPV2;                          /* addr: 0xf5200000 */
  ca_uint32_t                              rsrvd10[1048575];
  GPV3_t                                   GPV3;                          /* addr: 0xf5300000 */
  ca_uint32_t                              rsrvd11[1048575];
  GPV4_t                                   GPV4;                          /* addr: 0xf5400000 */
  ca_uint32_t                              rsrvd12[1048575];
  APB7_t                                   APB7;                          /* addr: 0xf5500000 */
  ca_uint32_t                              rsrvd13[28262349];
  APB6_t                                   APB6;                          /* addr: 0xf7001000 */
  ca_uint32_t                              rsrvd14[150464733];
  ROMOTP_t                                 ROMOTP;                        /* addr: 0xfff80800 */
} TAURUS_t;
#endif
#ifndef RTK_TAURUS_ASIC
/*
 * DDR_SCH
 */
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0     0xf4328c00
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_dft 0x00000000
#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t limit_addr           : 16 ; /* bits 15:0 */
    ca_uint32_t base_addr            : 16 ; /* bits 31:16 */
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_t;
#endif /* !__ASSEMBLER__ */
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN  0xf4328c04
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN_dft 0x00000000
#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t write                :  1 ; /* bits 0:0 */
    ca_uint32_t read                 :  1 ; /* bits 1:1 */
    ca_uint32_t rsrvd1               : 30 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN_t;
#endif /* !__ASSEMBLER__ */
#define DDR_CTRL_DDR_SCH_CTRL                    0xf4328c64
#define DDR_CTRL_DDR_SCH_CTRL_dft                0x01b70020
#ifndef __ASSEMBLER__
typedef volatile union {
  struct {
    ca_uint32_t rsrvd1               :  2 ;
    ca_uint32_t col_size             :  1 ; /* bits 2:2 */
    ca_uint32_t rsrvd2               :  1 ;
    ca_uint32_t row_size             :  3 ; /* bits 6:4 */
    ca_uint32_t rsrvd3               :  1 ;
    ca_uint32_t all_bufferable       :  1 ; /* bits 8:8 */
    ca_uint32_t all_nonbuf           :  1 ; /* bits 9:9 */
    ca_uint32_t dis_rd_deny_err      :  1 ; /* bits 10:10 */
    ca_uint32_t dis_wr_deny_err      :  1 ; /* bits 11:11 */
    ca_uint32_t fair_pri_group       :  1 ; /* bits 12:12 */
    ca_uint32_t qid_use_pri          :  1 ; /* bits 13:13 */
    ca_uint32_t rsrvd4               :  1 ;
    ca_uint32_t disable_hazard_chk   :  1 ; /* bits 15:15 */
    ca_uint32_t swap_bank_bits       :  4 ; /* bits 19:16 */
    ca_uint32_t read_interleave      :  1 ; /* bits 20:20 */
    ca_uint32_t modifiable_buf       :  1 ; /* bits 21:21 */
    ca_uint32_t fpga_mode            :  1 ; /* bits 22:22 */
    ca_uint32_t fpga_dis_cs1         :  1 ; /* bits 23:23 */
    ca_uint32_t pctl_clk_is_sync     :  1 ; /* bits 24:24 */
    ca_uint32_t rsrvd5               :  7 ;
  } bf ;
  ca_uint32_t     wrd ;
} DDR_CTRL_DDR_SCH_CTRL_t;
#endif /* !__ASSEMBLER__ */
#endif /* !RTK_TAURUS_ASIC */
#endif /* !__ASSEMBLER__ */
#ifdef CA_DEBUG_WORKAROUND
#define DEBUG CA_DEBUG_WORKAROUND
#undef CA_DEBUG_WORKAROUND
#endif /* CA_DEBUG_WORKAROUND */
#endif /* _CA8277_REGISTERS_H_ */
