/*
 * REGISTERS.h
 *
 * THIS FILE WAS AUTOMATICALLY GENERATED BY /auto/project/bin/rdb2tt.pl
 * -config ./reg_generator/rdb2h.yml -db reg.db
 *
 */
#ifndef _CA77XX_REGISTERS_H_
#define _CA77XX_REGISTERS_H_

#include "ca_types.h"

/* work around DEBUG being defined in the build overriding
 * registers named DEBUG in structures below
 *
 */
#ifdef DEBUG
#	define CA_DEBUG_WORKAROUND DEBUG
#	undef DEBUG
#endif /* DEBUG */

/******************************************************************
 *
 * Each register in the map is defined as a struct with bitfields.
 *
 ******************************************************************/

/*
 * APB0
 */

/*
 * L2FE
 */

/*
 * GLB
 */

#define L2FE_GLB_VER_CTRL 0xf4301000
#define L2FE_GLB_VER_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rev_id : 16; /* bits 15:0 */
		ca_uint32_t ver_id : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_VER_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_CTRL 0xf4301004
#define L2FE_GLB_CTRL_dft 0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t soft_reset : 1; /* bits 0:0 */
		ca_uint32_t pipeline_clk_num : 5; /* bits 5:1 */
		ca_uint32_t change_ip_if_pop_en : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_INTERRUPT 0xf4301008
#define L2FE_GLB_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t lf_overflow_intI : 1; /* bits 1:1 */
		ca_uint32_t ple_hd_ff_overflow_intI : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t port_mac_lmt_excd_intI : 1; /* bits 8:8 */
		ca_uint32_t l2e_hash_collision_intI : 1; /* bits 9:9 */
		ca_uint32_t rsrvd3 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_INTERRUPTE 0xf430100c
#define L2FE_GLB_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t lf_overflow_intIE : 1; /* bits 1:1 */
		ca_uint32_t ple_hd_ff_overflow_intIE : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t port_mac_lmt_excd_intIE : 1; /* bits 8:8 */
		ca_uint32_t l2e_hash_collision_intIE : 1; /* bits 9:9 */
		ca_uint32_t rsrvd3 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_STTS 0xf4301010
#define L2FE_GLB_STTS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l2fe_init_done : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_STTS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_L2FE_CFG_SPARE 0xf4301014
#define L2FE_GLB_L2FE_CFG_SPARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bit : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_L2FE_CFG_SPARE_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_L2FE_STTS_SPARE 0xf4301018
#define L2FE_GLB_L2FE_STTS_SPARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bit : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_L2FE_STTS_SPARE_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_GLB_DEBUG 0xf430101c
#define L2FE_GLB_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bus_sel : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_GLB_DEBUG_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_GLB_VER_CTRL_t VER_CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_GLB_CTRL_t CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_GLB_INTERRUPT_t INTERRUPT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_GLB_INTERRUPTE_t INTERRUPTE; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_GLB_STTS_t STTS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_GLB_L2FE_CFG_SPARE_t L2FE_CFG_SPARE; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_GLB_L2FE_STTS_SPARE_t L2FE_STTS_SPARE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_GLB_DEBUG_t DEBUG; /* addr: 0x0000001c */
} APB0_L2FE_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * PP
 */

#define L2FE_PP_PPID_ATTR_CFG 0xf4301100
#define L2FE_PP_PPID_ATTR_CFG_dft 0x009d0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ppid0 : 2; /* bits 1:0 */
		ca_uint32_t ppid1 : 2; /* bits 3:2 */
		ca_uint32_t ppid2 : 2; /* bits 5:4 */
		ca_uint32_t ppid3 : 2; /* bits 7:6 */
		ca_uint32_t ppid4 : 2; /* bits 9:8 */
		ca_uint32_t ppid5 : 2; /* bits 11:10 */
		ca_uint32_t ppid6 : 2; /* bits 13:12 */
		ca_uint32_t ppid7 : 2; /* bits 15:14 */
		ca_uint32_t ppid8 : 2; /* bits 17:16 */
		ca_uint32_t ppid9 : 2; /* bits 19:18 */
		ca_uint32_t ppid10 : 2; /* bits 21:20 */
		ca_uint32_t ppid11 : 2; /* bits 23:22 */
		ca_uint32_t ppid12 : 2; /* bits 25:24 */
		ca_uint32_t ppid13 : 2; /* bits 27:26 */
		ca_uint32_t ppid14 : 2; /* bits 29:28 */
		ca_uint32_t ppid15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_PPID_ATTR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_DPB_CTRL 0xf4301104
#define L2FE_PP_DPB_CTRL_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid_pattern : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_DPB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_TPID_CMP_S 0xf4301108
#define L2FE_PP_TPID_CMP_S_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_TPID_CMP_S_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_TPID_CMP_C 0xf430110c
#define L2FE_PP_TPID_CMP_C_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_TPID_CMP_C_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_TPID_CMP_O 0xf4301110
#define L2FE_PP_TPID_CMP_O_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_TPID_CMP_O_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HELLO_PKT_ENABLE_DA_LOW 0xf4301114
#define L2FE_PP_HELLO_PKT_ENABLE_DA_LOW_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HELLO_PKT_ENABLE_DA_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HELLO_PKT_ENABLE_DA_HI 0xf4301118
#define L2FE_PP_HELLO_PKT_ENABLE_DA_HI_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HELLO_PKT_ENABLE_DA_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HELLO_PKT_DA_LOW 0xf430111c
#define L2FE_PP_HELLO_PKT_DA_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HELLO_PKT_DA_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HELLO_PKT_DA_HI 0xf4301120
#define L2FE_PP_HELLO_PKT_DA_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HELLO_PKT_DA_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_ENABLE_DA_0_LOW 0xf4301124
#define L2FE_PP_SPECIAL_ENABLE_DA_0_LOW_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_ENABLE_DA_0_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_ENABLE_DA_0_HI 0xf4301128
#define L2FE_PP_SPECIAL_ENABLE_DA_0_HI_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_ENABLE_DA_0_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_DA_0_LOW 0xf430112c
#define L2FE_PP_SPECIAL_DA_0_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_DA_0_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_DA_0_HI 0xf4301130
#define L2FE_PP_SPECIAL_DA_0_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_DA_0_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_EV2PT 0xf4301134
#define L2FE_PP_SPECIAL_EV2PT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ev2pt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_EV2PT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_ENABLE_DA_1_LOW 0xf4301138
#define L2FE_PP_SPECIAL_ENABLE_DA_1_LOW_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_ENABLE_DA_1_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_ENABLE_DA_1_HI 0xf430113c
#define L2FE_PP_SPECIAL_ENABLE_DA_1_HI_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_ENABLE_DA_1_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_DA_1_LOW 0xf4301140
#define L2FE_PP_SPECIAL_DA_1_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_DA_1_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_DA_1_HI 0xf4301144
#define L2FE_PP_SPECIAL_DA_1_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_DA_1_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_VLAN 0xf4301148
#define L2FE_PP_SPECIAL_VLAN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vlan : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_VLAN_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MY_MAC_LOW 0xf430114c
#define L2FE_PP_MY_MAC_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MY_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MY_MAC_HI 0xf4301150
#define L2FE_PP_MY_MAC_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MY_MAC_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MY_MAC_ENABLE_LOW 0xf4301154
#define L2FE_PP_MY_MAC_ENABLE_LOW_dft 0x00ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MY_MAC_ENABLE_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MY_MAC_LOW_1 0xf4301158
#define L2FE_PP_MY_MAC_LOW_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MY_MAC_LOW_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MY_MAC_HI_1 0xf430115c
#define L2FE_PP_MY_MAC_HI_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MY_MAC_HI_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MY_MAC_ENABLE_LOW_1 0xf4301160
#define L2FE_PP_MY_MAC_ENABLE_LOW_1_dft 0x00ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MY_MAC_ENABLE_LOW_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_MAC_MC_LOW 0xf4301164
#define L2FE_PP_RSV_MAC_MC_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_MAC_MC_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_MAC_MC_HI 0xf4301168
#define L2FE_PP_RSV_MAC_MC_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_MAC_MC_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_ENABLE_MC_LOW 0xf430116c
#define L2FE_PP_RSV_ENABLE_MC_LOW_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_ENABLE_MC_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_ENABLE_MC_HI 0xf4301170
#define L2FE_PP_RSV_ENABLE_MC_HI_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_ENABLE_MC_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_GROUP_MAC_LOW 0xf4301174
#define L2FE_PP_RSV_GROUP_MAC_LOW_dft 0xc2000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_GROUP_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_GROUP_MAC_HI 0xf4301178
#define L2FE_PP_RSV_GROUP_MAC_HI_dft 0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_GROUP_MAC_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_GROUP_ENABLE_LOW 0xf430117c
#define L2FE_PP_RSV_GROUP_ENABLE_LOW_dft 0xfffffff0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_GROUP_ENABLE_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_RSV_GROUP_ENABLE_HI 0xf4301180
#define L2FE_PP_RSV_GROUP_ENABLE_HI_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_RSV_GROUP_ENABLE_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MEF_OAM_MAC_0_LOW 0xf4301184
#define L2FE_PP_MEF_OAM_MAC_0_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MEF_OAM_MAC_0_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MEF_OAM_MAC_0_HI 0xf4301188
#define L2FE_PP_MEF_OAM_MAC_0_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MEF_OAM_MAC_0_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MEF_OAM_TYPE_0 0xf430118c
#define L2FE_PP_MEF_OAM_TYPE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MEF_OAM_TYPE_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MEF_OAM_MAC_1_LOW 0xf4301190
#define L2FE_PP_MEF_OAM_MAC_1_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MEF_OAM_MAC_1_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MEF_OAM_MAC_1_HI 0xf4301194
#define L2FE_PP_MEF_OAM_MAC_1_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MEF_OAM_MAC_1_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_MEF_OAM_TYPE_1 0xf4301198
#define L2FE_PP_MEF_OAM_TYPE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_MEF_OAM_TYPE_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_L7_OFFSET 0xf430119c
#define L2FE_PP_L7_OFFSET_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t offset : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_L7_OFFSET_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_ERR_STTS_0 0xf43011a0
#define L2FE_PP_NI_INTF_ERR_STTS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sop_eop_mismatch_0 : 1; /* bits 0:0 */
		ca_uint32_t sop_eop_mismatch_1 : 1; /* bits 1:1 */
		ca_uint32_t sop_eop_mismatch_2 : 1; /* bits 2:2 */
		ca_uint32_t sop_eop_mismatch_3 : 1; /* bits 3:3 */
		ca_uint32_t sop_eop_mismatch_4 : 1; /* bits 4:4 */
		ca_uint32_t sop_eop_mismatch_5 : 1; /* bits 5:5 */
		ca_uint32_t sop_eop_mismatch_6 : 1; /* bits 6:6 */
		ca_uint32_t sop_eop_mismatch_7 : 1; /* bits 7:7 */
		ca_uint32_t sop_eop_mismatch_8 : 1; /* bits 8:8 */
		ca_uint32_t sop_eop_mismatch_9 : 1; /* bits 9:9 */
		ca_uint32_t sop_eop_mismatch_10 : 1; /* bits 10:10 */
		ca_uint32_t sop_eop_mismatch_11 : 1; /* bits 11:11 */
		ca_uint32_t sop_eop_mismatch_12 : 1; /* bits 12:12 */
		ca_uint32_t sop_eop_mismatch_13 : 1; /* bits 13:13 */
		ca_uint32_t sop_eop_mismatch_14 : 1; /* bits 14:14 */
		ca_uint32_t sop_eop_mismatch_15 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_ERR_STTS_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_ERR_STTS_1 0xf43011a4
#define L2FE_PP_NI_INTF_ERR_STTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t runt_l2_pkt_0 : 1; /* bits 0:0 */
		ca_uint32_t runt_l2_pkt_1 : 1; /* bits 1:1 */
		ca_uint32_t runt_l2_pkt_2 : 1; /* bits 2:2 */
		ca_uint32_t runt_l2_pkt_3 : 1; /* bits 3:3 */
		ca_uint32_t runt_l2_pkt_4 : 1; /* bits 4:4 */
		ca_uint32_t runt_l2_pkt_5 : 1; /* bits 5:5 */
		ca_uint32_t runt_l2_pkt_6 : 1; /* bits 6:6 */
		ca_uint32_t runt_l2_pkt_7 : 1; /* bits 7:7 */
		ca_uint32_t runt_l2_pkt_8 : 1; /* bits 8:8 */
		ca_uint32_t runt_l2_pkt_9 : 1; /* bits 9:9 */
		ca_uint32_t runt_l2_pkt_10 : 1; /* bits 10:10 */
		ca_uint32_t runt_l2_pkt_11 : 1; /* bits 11:11 */
		ca_uint32_t runt_l2_pkt_12 : 1; /* bits 12:12 */
		ca_uint32_t runt_l2_pkt_13 : 1; /* bits 13:13 */
		ca_uint32_t runt_l2_pkt_14 : 1; /* bits 14:14 */
		ca_uint32_t runt_l2_pkt_15 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_ERR_STTS_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_ERR_STTS_2 0xf43011a8
#define L2FE_PP_NI_INTF_ERR_STTS_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sob_eob_mismatch_0 : 1; /* bits 0:0 */
		ca_uint32_t sob_eob_mismatch_1 : 1; /* bits 1:1 */
		ca_uint32_t sob_eob_mismatch_2 : 1; /* bits 2:2 */
		ca_uint32_t sob_eob_mismatch_3 : 1; /* bits 3:3 */
		ca_uint32_t sob_eob_mismatch_4 : 1; /* bits 4:4 */
		ca_uint32_t sob_eob_mismatch_5 : 1; /* bits 5:5 */
		ca_uint32_t sob_eob_mismatch_6 : 1; /* bits 6:6 */
		ca_uint32_t sob_eob_mismatch_7 : 1; /* bits 7:7 */
		ca_uint32_t sob_eob_mismatch_8 : 1; /* bits 8:8 */
		ca_uint32_t sob_eob_mismatch_9 : 1; /* bits 9:9 */
		ca_uint32_t sob_eob_mismatch_10 : 1; /* bits 10:10 */
		ca_uint32_t sob_eob_mismatch_11 : 1; /* bits 11:11 */
		ca_uint32_t sob_eob_mismatch_12 : 1; /* bits 12:12 */
		ca_uint32_t sob_eob_mismatch_13 : 1; /* bits 13:13 */
		ca_uint32_t sob_eob_mismatch_14 : 1; /* bits 14:14 */
		ca_uint32_t sob_eob_mismatch_15 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_ERR_STTS_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_ERR_STTS_3 0xf43011ac
#define L2FE_PP_NI_INTF_ERR_STTS_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sop_2_sop_gap : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_ERR_STTS_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_PINGPONG_STS 0xf43011b0
#define L2FE_PP_PINGPONG_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_PINGPONG_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_STS 0xf43011b4
#define L2FE_PP_NI_INTF_STS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdy : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_DROP_CNT 0xf43011b8
#define L2FE_PP_NI_INTF_DROP_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t drop : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_NI_INTF_PKT_CNT 0xf43011bc
#define L2FE_PP_NI_INTF_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eop : 16; /* bits 15:0 */
		ca_uint32_t sop : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_NI_INTF_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HEADER_A_LOW 0xf43011c0
#define L2FE_PP_HEADER_A_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HEADER_A_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HEADER_A_MID 0xf43011c4
#define L2FE_PP_HEADER_A_MID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HEADER_A_MID_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HEADER_A_HI 0xf43011c8
#define L2FE_PP_HEADER_A_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HEADER_A_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_PARSER_CTRL 0xf43011cc
#define L2FE_PP_PARSER_CTRL_dft 0xa03b0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t use_ip_addr_mc : 1; /* bits 14:14 */
		ca_uint32_t l3fe_to_l2fe_lrn_ctrl : 1; /* bits 15:15 */
		ca_uint32_t egr_ptp_pkt_no_drop_set : 1; /* bits 16:16 */
		ca_uint32_t ipv4_checksum_check_enable : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t detect_oam_subtype : 1; /* bits 19:19 */
		ca_uint32_t oam_subtype : 8; /* bits 27:20 */
		ca_uint32_t udf0_det_en : 1; /* bits 28:28 */
		ca_uint32_t udf0_det_type_en : 1; /* bits 29:29 */
		ca_uint32_t udf1_det_en : 1; /* bits 30:30 */
		ca_uint32_t udf1_det_vlan_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_PARSER_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_SPECIAL_PKT 0xf43011d0
#define L2FE_PP_SPECIAL_PKT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_SPECIAL_PKT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_DEBUG_BUS 0xf43011d4
#define L2FE_PP_DEBUG_BUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 4; /* bits 3:0 */
		ca_uint32_t ni2fe_pkt_cnt_wrap_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_IPPB_ACCESS 0xf43011d8
#define L2FE_PP_IPPB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_IPPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_IPPB_DATA 0xf43011dc
#define L2FE_PP_IPPB_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lspid : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_IPPB_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_ILPB_ACCESS 0xf43011e0
#define L2FE_PP_ILPB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_ILPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_ILPB_DATA4 0xf43011e4
#define L2FE_PP_ILPB_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ilpb_reserved_1 : 10; /* bits 9:0 */
		ca_uint32_t ilpb_wan_ind : 1; /* bits 10:10 */
		ca_uint32_t ilpb_reserved : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_ILPB_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_ILPB_DATA3 0xf43011e8
#define L2FE_PP_ILPB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ilpb_sc_ind : 1; /* bits 0:0 */
		ca_uint32_t ilpb_default_vlanid : 12; /* bits 12:1 */
		ca_uint32_t ilpb_unkwn_pol_idx : 3; /* bits 15:13 */
		ca_uint32_t ilpb_flowid_as_gemid : 1; /* bits 16:16 */
		ca_uint32_t ilpb_gemid_dynamic_mode : 1; /* bits 17:17 */
		ca_uint32_t ilpb_reserved_1 : 14; /* bits 31:18 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_ILPB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_ILPB_DATA2 0xf43011ec
#define L2FE_PP_ILPB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ilpb_other_tpid_match : 4; /* bits 3:0 */
		ca_uint32_t ilpb_inner_c_tpid_enable : 1; /* bits 4:4 */
		ca_uint32_t ilpb_inner_s_tpid_enable : 1; /* bits 5:5 */
		ca_uint32_t ilpb_top_c_tpid_enable : 1; /* bits 6:6 */
		ca_uint32_t ilpb_top_s_tpid_enable : 1; /* bits 7:7 */
		ca_uint32_t ilpb_c_tpid_match : 4; /* bits 11:8 */
		ca_uint32_t ilpb_s_tpid_match : 4; /* bits 15:12 */
		ca_uint32_t ilpb_drop_doubletagged_packet : 1; /* bits 16:16 */
		ca_uint32_t ilpb_drop_prytagged_packet : 1; /* bits 17:17 */
		ca_uint32_t ilpb_drop_untagged_packet : 1; /* bits 18:18 */
		ca_uint32_t ilpb_drop_ctag_packet : 1; /* bits 19:19 */
		ca_uint32_t ilpb_drop_stag_packet : 1; /* bits 20:20 */
		ca_uint32_t ilpb_drop_singletagged_packet : 1; /* bits 21:21 */
		ca_uint32_t ilpb_default_noninnertag_cmd : 1; /* bits 22:22 */
		ca_uint32_t ilpb_inner_vlan_cmd : 2; /* bits 24:23 */
		ca_uint32_t ilpb_inner_vid_sel_bm : 2; /* bits 26:25 */
		ca_uint32_t ilpb_default_untag_cmd : 1; /* bits 27:27 */
		ca_uint32_t ilpb_default_top_vlan_cmd : 2; /* bits 29:28 */
		ca_uint32_t ilpb_vlan_cmd_sel_bm : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_ILPB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_ILPB_DATA1 0xf43011f0
#define L2FE_PP_ILPB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ilpb_802_1p_mark_control_bm : 1; /* bits 0:0 */
		ca_uint32_t ilpb_change_1p_if_pop : 1; /* bits 1:1 */
		ca_uint32_t ilpb_top_802_1p_mode_sel : 2; /* bits 3:2 */
		ca_uint32_t ilpb_flowid_sel_bm : 3; /* bits 6:4 */
		ca_uint32_t ilpb_cls_length : 6; /* bits 12:7 */
		ca_uint32_t ilpb_cls_start : 8; /* bits 20:13 */
		ca_uint32_t ilpb_igr_cls_lookup_en : 1; /* bits 21:21 */
		ca_uint32_t ilpb_spcl_pkt_idx : 4; /* bits 25:22 */
		ca_uint32_t ilpb_da_sa_swap_en : 1; /* bits 26:26 */
		ca_uint32_t ilpb_loop_enable : 1; /* bits 27:27 */
		ca_uint32_t ilpb_sa_move_dis_fwd : 1; /* bits 28:28 */
		ca_uint32_t ilpb_station_move_en : 1; /* bits 29:29 */
		ca_uint32_t ilpb_stp_mode : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_ILPB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_ILPB_DATA0 0xf43011f4
#define L2FE_PP_ILPB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ilpb_dflt_premark : 1; /* bits 0:0 */
		ca_uint32_t ilpb_color_src_sel : 2; /* bits 2:1 */
		ca_uint32_t ilpb_ing_fltr_ena : 1; /* bits 3:3 */
		ca_uint32_t ilpb_default_cos : 3; /* bits 6:4 */
		ca_uint32_t ilpb_cos_control_bm : 3; /* bits 9:7 */
		ca_uint32_t ilpb_cos_mode_sel : 3; /* bits 12:10 */
		ca_uint32_t ilpb_default_dscp : 6; /* bits 18:13 */
		ca_uint32_t ilpb_dscp_mark_control_bm : 3; /* bits 21:19 */
		ca_uint32_t ilpb_dscp_mode_sel : 2; /* bits 23:22 */
		ca_uint32_t ilpb_dscp_markdown_en : 1; /* bits 24:24 */
		ca_uint32_t ilpb_default_802_1p : 3; /* bits 27:25 */
		ca_uint32_t ilpb_inner_802_1p_mode_sel : 2; /* bits 29:28 */
		ca_uint32_t ilpb_802_1p_mark_control_bm : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_ILPB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_DPB_ACCESS 0xf43011f8
#define L2FE_PP_DPB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_DPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_DPB_DATA 0xf43011fc
#define L2FE_PP_DPB_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cos : 3; /* bits 2:0 */
		ca_uint32_t ldpid : 6; /* bits 8:3 */
		ca_uint32_t bypass : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_DPB_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HTTP_LINK_0 0xf4301200
#define L2FE_PP_HTTP_LINK_0_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 2; /* bits 18:17 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HTTP_LINK_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HTTP_LINK_1 0xf4301204
#define L2FE_PP_HTTP_LINK_1_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 2; /* bits 18:17 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HTTP_LINK_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PP_HTTP_LINK_2 0xf4301208
#define L2FE_PP_HTTP_LINK_2_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 2; /* bits 18:17 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PP_HTTP_LINK_2_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PP */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_PP_PPID_ATTR_CFG_t PPID_ATTR_CFG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_PP_DPB_CTRL_t DPB_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_PP_TPID_CMP_S_t TPID_CMP_S; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_PP_TPID_CMP_C_t TPID_CMP_C; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_PP_TPID_CMP_O_t TPID_CMP_O; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_PP_HELLO_PKT_ENABLE_DA_LOW_t
	  HELLO_PKT_ENABLE_DA_LOW; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_PP_HELLO_PKT_ENABLE_DA_HI_t
	  HELLO_PKT_ENABLE_DA_HI; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_PP_HELLO_PKT_DA_LOW_t HELLO_PKT_DA_LOW; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_PP_HELLO_PKT_DA_HI_t HELLO_PKT_DA_HI; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_PP_SPECIAL_ENABLE_DA_0_LOW_t
	  SPECIAL_ENABLE_DA_0_LOW; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_PP_SPECIAL_ENABLE_DA_0_HI_t
	  SPECIAL_ENABLE_DA_0_HI; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_PP_SPECIAL_DA_0_LOW_t SPECIAL_DA_0_LOW; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_PP_SPECIAL_DA_0_HI_t SPECIAL_DA_0_HI; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_PP_SPECIAL_EV2PT_t SPECIAL_EV2PT; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_PP_SPECIAL_ENABLE_DA_1_LOW_t
	  SPECIAL_ENABLE_DA_1_LOW; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_PP_SPECIAL_ENABLE_DA_1_HI_t
	  SPECIAL_ENABLE_DA_1_HI; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_PP_SPECIAL_DA_1_LOW_t SPECIAL_DA_1_LOW; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_PP_SPECIAL_DA_1_HI_t SPECIAL_DA_1_HI; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_PP_SPECIAL_VLAN_t SPECIAL_VLAN; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_PP_MY_MAC_LOW_t MY_MAC_LOW; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_PP_MY_MAC_HI_t MY_MAC_HI; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_PP_MY_MAC_ENABLE_LOW_t MY_MAC_ENABLE_LOW; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2FE_PP_MY_MAC_LOW_1_t MY_MAC_LOW_1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2FE_PP_MY_MAC_HI_1_t MY_MAC_HI_1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L2FE_PP_MY_MAC_ENABLE_LOW_1_t MY_MAC_ENABLE_LOW_1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L2FE_PP_RSV_MAC_MC_LOW_t RSV_MAC_MC_LOW; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L2FE_PP_RSV_MAC_MC_HI_t RSV_MAC_MC_HI; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L2FE_PP_RSV_ENABLE_MC_LOW_t RSV_ENABLE_MC_LOW; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L2FE_PP_RSV_ENABLE_MC_HI_t RSV_ENABLE_MC_HI; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L2FE_PP_RSV_GROUP_MAC_LOW_t RSV_GROUP_MAC_LOW; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L2FE_PP_RSV_GROUP_MAC_HI_t RSV_GROUP_MAC_HI; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L2FE_PP_RSV_GROUP_ENABLE_LOW_t RSV_GROUP_ENABLE_LOW; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L2FE_PP_RSV_GROUP_ENABLE_HI_t RSV_GROUP_ENABLE_HI; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L2FE_PP_MEF_OAM_MAC_0_LOW_t MEF_OAM_MAC_0_LOW; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L2FE_PP_MEF_OAM_MAC_0_HI_t MEF_OAM_MAC_0_HI; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L2FE_PP_MEF_OAM_TYPE_0_t MEF_OAM_TYPE_0; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L2FE_PP_MEF_OAM_MAC_1_LOW_t MEF_OAM_MAC_1_LOW; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L2FE_PP_MEF_OAM_MAC_1_HI_t MEF_OAM_MAC_1_HI; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L2FE_PP_MEF_OAM_TYPE_1_t MEF_OAM_TYPE_1; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L2FE_PP_L7_OFFSET_t L7_OFFSET; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L2FE_PP_NI_INTF_ERR_STTS_0_t NI_INTF_ERR_STTS_0; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L2FE_PP_NI_INTF_ERR_STTS_1_t NI_INTF_ERR_STTS_1; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L2FE_PP_NI_INTF_ERR_STTS_2_t NI_INTF_ERR_STTS_2; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L2FE_PP_NI_INTF_ERR_STTS_3_t NI_INTF_ERR_STTS_3; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	L2FE_PP_PINGPONG_STS_t PINGPONG_STS; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	L2FE_PP_NI_INTF_STS_t NI_INTF_STS; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	L2FE_PP_NI_INTF_DROP_CNT_t NI_INTF_DROP_CNT; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	L2FE_PP_NI_INTF_PKT_CNT_t NI_INTF_PKT_CNT; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	L2FE_PP_HEADER_A_LOW_t HEADER_A_LOW; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	L2FE_PP_HEADER_A_MID_t HEADER_A_MID; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	L2FE_PP_HEADER_A_HI_t HEADER_A_HI; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	L2FE_PP_PARSER_CTRL_t PARSER_CTRL; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	L2FE_PP_SPECIAL_PKT_t SPECIAL_PKT; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	L2FE_PP_DEBUG_BUS_t DEBUG_BUS; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	L2FE_PP_IPPB_ACCESS_t IPPB_ACCESS; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	L2FE_PP_IPPB_DATA_t IPPB_DATA; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	L2FE_PP_ILPB_ACCESS_t ILPB_ACCESS; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	L2FE_PP_ILPB_DATA4_t ILPB_DATA4; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	L2FE_PP_ILPB_DATA3_t ILPB_DATA3; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	L2FE_PP_ILPB_DATA2_t ILPB_DATA2; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	L2FE_PP_ILPB_DATA1_t ILPB_DATA1; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	L2FE_PP_ILPB_DATA0_t ILPB_DATA0; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	L2FE_PP_DPB_ACCESS_t DPB_ACCESS; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	L2FE_PP_DPB_DATA_t DPB_DATA; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	L2FE_PP_HTTP_LINK_0_t HTTP_LINK_0; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	L2FE_PP_HTTP_LINK_1_t HTTP_LINK_1; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	L2FE_PP_HTTP_LINK_2_t HTTP_LINK_2; /* addr: 0x00000108 */
} APB0_L2FE_PP_t;
#endif /* !__ASSEMBLER__ */

/*
 * PLA
 */

#define L2FE_PLA_DEBUG_BUS 0xf4301300
#define L2FE_PLA_DEBUG_BUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_EV2_PT_CNVT_ACCESS 0xf4301304
#define L2FE_PLA_EV2_PT_CNVT_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_EV2_PT_CNVT_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_EV2_PT_CNVT_DATA 0xf4301308
#define L2FE_PLA_EV2_PT_CNVT_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ev2_pt_cnvt_encoded_value : 5; /* bits 4:0 */
		ca_uint32_t ev2_pt_cnvt_ethertype : 16; /* bits 20:5 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_EV2_PT_CNVT_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_SPB_ACCESS 0xf430130c
#define L2FE_PLA_SPB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_SPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_SPB_DATA 0xf4301310
#define L2FE_PLA_SPB_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spb_pkt_no_edit : 1; /* bits 0:0 */
		ca_uint32_t spb_keep_ts : 1; /* bits 1:1 */
		ca_uint32_t spb_bypass_sa_lrn_chk : 1; /* bits 2:2 */
		ca_uint32_t spb_limit_fwd_permit : 1; /* bits 3:3 */
		ca_uint32_t spb_learn_dis : 1; /* bits 4:4 */
		ca_uint32_t spb_dscp_mark_down : 1; /* bits 5:5 */
		ca_uint32_t spb_flowid : 12; /* bits 17:6 */
		ca_uint32_t spb_flow_en : 1; /* bits 18:18 */
		ca_uint32_t spb_rate_limit_bypass : 1; /* bits 19:19 */
		ca_uint32_t spb_cos : 3; /* bits 22:20 */
		ca_uint32_t spb_ldpid : 6; /* bits 28:23 */
		ca_uint32_t spb_spcl_fwd : 1; /* bits 29:29 */
		ca_uint32_t spb_pkt_no_drop : 1; /* bits 30:30 */
		ca_uint32_t spb_hash_cllsn_fwd_permit : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_SPB_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_DOT1P_MAP_ACCESS 0xf4301314
#define L2FE_PLA_DOT1P_MAP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_DOT1P_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_DOT1P_MAP_DATA 0xf4301318
#define L2FE_PLA_DOT1P_MAP_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dot1p_map_mapped_premark : 1; /* bits 0:0 */
		ca_uint32_t dot1p_map_mapped_cos : 3; /* bits 3:1 */
		ca_uint32_t dot1p_map_mapped_1p : 3; /* bits 6:4 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_DOT1P_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_DSCP_MAP_ACCESS 0xf430131c
#define L2FE_PLA_DSCP_MAP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_DSCP_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLA_DSCP_MAP_DATA 0xf4301320
#define L2FE_PLA_DSCP_MAP_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mapped_premark : 1; /* bits 0:0 */
		ca_uint32_t dscp_map_mapped_cos : 3; /* bits 3:1 */
		ca_uint32_t dscp_map_marked_flag : 1; /* bits 4:4 */
		ca_uint32_t dscp_map_mapped_dscp : 6; /* bits 10:5 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLA_DSCP_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PLA */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_PLA_DEBUG_BUS_t DEBUG_BUS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_PLA_EV2_PT_CNVT_ACCESS_t EV2_PT_CNVT_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_PLA_EV2_PT_CNVT_DATA_t EV2_PT_CNVT_DATA; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_PLA_SPB_ACCESS_t SPB_ACCESS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_PLA_SPB_DATA_t SPB_DATA; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_PLA_DOT1P_MAP_ACCESS_t DOT1P_MAP_ACCESS; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_PLA_DOT1P_MAP_DATA_t DOT1P_MAP_DATA; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_PLA_DSCP_MAP_ACCESS_t DSCP_MAP_ACCESS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_PLA_DSCP_MAP_DATA_t DSCP_MAP_DATA; /* addr: 0x00000020 */
} APB0_L2FE_PLA_t;
#endif /* !__ASSEMBLER__ */

/*
 * PLC
 */

#define L2FE_PLC_HASH_CTRL 0xf4301400
#define L2FE_PLC_HASH_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lan_sa_hashing_vid_sel : 1; /* bits 0:0 */
		ca_uint32_t lan_da_hashing_vid_sel : 1; /* bits 1:1 */
		ca_uint32_t lan_sa_learning_vid_sel : 1; /* bits 2:2 */
		ca_uint32_t wan_sa_hashing_vid_sel : 1; /* bits 3:3 */
		ca_uint32_t wan_da_hashing_vid_sel : 1; /* bits 4:4 */
		ca_uint32_t wan_sa_learning_vid_sel : 1; /* bits 5:5 */
		ca_uint32_t use_dot1p_l2e : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_HASH_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_DPID_FWD_CTRL 0xf4301404
#define L2FE_PLC_DPID_FWD_CTRL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vid_fff_fwd : 1; /* bits 0:0 */
		ca_uint32_t unkvlan_fwd : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_DPID_FWD_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_LRN_FWD_CTRL_0 0xf4301408
#define L2FE_PLC_LRN_FWD_CTRL_0_dft 0x02000210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l2_mac_sw_lrn_ldpid : 6; /* bits 5:0 */
		ca_uint32_t l2_mac_sw_lrn_cos : 3; /* bits 8:6 */
		ca_uint32_t l2_mac_sw_lrn_keep_old_wan : 1; /* bits 9:9 */
		ca_uint32_t l2_mac_sw_lrn_keep_old_lan : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t sa_miss_fwd : 1; /* bits 25:25 */
		ca_uint32_t nonstd_sa_all_zero_fwd : 1; /* bits 26:26 */
		ca_uint32_t nonstd_sa_all_one_fwd : 1; /* bits 27:27 */
		ca_uint32_t nonstd_sa_b40_is_one_fwd : 1; /* bits 28:28 */
		ca_uint32_t sm_static_entry_fwd : 1; /* bits 29:29 */
		ca_uint32_t sm_tmp_entry_fwd : 1; /* bits 30:30 */
		ca_uint32_t sm_sm_entry_fwd : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_LRN_FWD_CTRL_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_LRN_FWD_CTRL_1 0xf430140c
#define L2FE_PLC_LRN_FWD_CTRL_1_dft 0x08100810

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sa_limit_excd_ldpid : 6; /* bits 5:0 */
		ca_uint32_t sa_limit_excd_cos : 3; /* bits 8:6 */
		ca_uint32_t sa_limit_excd_fwd_ctrl : 2; /* bits 10:9 */
		ca_uint32_t sa_limit_excd_keep_old_wan : 1; /* bits 11:11 */
		ca_uint32_t sa_limit_excd_keep_old_lan : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t sa_hash_cllsn_ldpid : 6; /* bits 21:16 */
		ca_uint32_t sa_hash_cllsn_cos : 3; /* bits 24:22 */
		ca_uint32_t sa_hash_cllsn_fwd_ctrl : 2; /* bits 26:25 */
		ca_uint32_t sa_hash_cllsn_keep_old_wan : 1; /* bits 27:27 */
		ca_uint32_t sa_hash_cllsn_keep_old_lan : 1; /* bits 28:28 */
		ca_uint32_t swlrn_othr_pkt_fwd : 1; /* bits 29:29 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_LRN_FWD_CTRL_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_L2_LEARNING_CTRL 0xf4301410
#define L2FE_PLC_L2_LEARNING_CTRL_dft 0x00000046

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unkvlan_learn : 1; /* bits 0:0 */
		ca_uint32_t unk_ethtype_no_learn : 1; /* bits 1:1 */
		ca_uint32_t igr_dropped_pkt_no_learn : 1; /* bits 2:2 */
		ca_uint32_t non_std_sa_all_zero_learn : 1; /* bits 3:3 */
		ca_uint32_t non_std_sa_all_one_learn : 1; /* bits 4:4 */
		ca_uint32_t non_std_sa_b40_is_one_learn : 1; /* bits 5:5 */
		ca_uint32_t loop_pkt_no_learn : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_L2_LEARNING_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_VLAN_MODE_CTRL 0xf4301414
#define L2FE_PLC_VLAN_MODE_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l2e_glb_vlan_mode : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_VLAN_MODE_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_SA_CHK_CTL 0xf4301418
#define L2FE_PLC_SA_CHK_CTL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t skip_sa_chk : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_SA_CHK_CTL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_DEBUG 0xf430141c
#define L2FE_PLC_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bus_sel : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_DEBUG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_ELPB_ACCESS 0xf4301420
#define L2FE_PLC_ELPB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_ELPB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLC_ELPB_DATA 0xf4301424
#define L2FE_PLC_ELPB_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t elpb_egr_vlan_aware_mode : 1; /* bits 0:0 */
		ca_uint32_t elpb_egr_port_stp_status : 1; /* bits 1:1 */
		ca_uint32_t elpb_egr_ve_srch_en : 1; /* bits 2:2 */
		ca_uint32_t elpb_egr_dest_wan : 1; /* bits 3:3 */
		ca_uint32_t elpb_egr_cls_length : 6; /* bits 9:4 */
		ca_uint32_t elpb_egr_cls_start : 8; /* bits 17:10 */
		ca_uint32_t elpb_egr_cls_lookup_en : 1; /* bits 18:18 */
		ca_uint32_t elpb_egr_cls_flowid_sel : 1; /* bits 19:19 */
		ca_uint32_t elpb_egr_cls_cos_sel : 1; /* bits 20:20 */
		ca_uint32_t elpb_reserved : 3; /* bits 23:21 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLC_ELPB_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PLC */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_PLC_HASH_CTRL_t HASH_CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_PLC_DPID_FWD_CTRL_t DPID_FWD_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_PLC_LRN_FWD_CTRL_0_t LRN_FWD_CTRL_0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_PLC_LRN_FWD_CTRL_1_t LRN_FWD_CTRL_1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_PLC_L2_LEARNING_CTRL_t L2_LEARNING_CTRL; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_PLC_VLAN_MODE_CTRL_t VLAN_MODE_CTRL; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_PLC_SA_CHK_CTL_t SA_CHK_CTL; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_PLC_DEBUG_t DEBUG; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_PLC_ELPB_ACCESS_t ELPB_ACCESS; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_PLC_ELPB_DATA_t ELPB_DATA; /* addr: 0x00000024 */
} APB0_L2FE_PLC_t;
#endif /* !__ASSEMBLER__ */

/*
 * PLE
 */

#define L2FE_PLE_CTL_REG 0xf4301500
#define L2FE_PLE_CTL_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txvlan_membshp_chk_en_lan : 1; /* bits 0:0 */
		ca_uint32_t txvlan_membshp_chk_en_wan : 1; /* bits 1:1 */
		ca_uint32_t cos_l3_only : 1; /* bits 2:2 */
		ca_uint32_t skip_port_lpbk_chk : 1; /* bits 3:3 */
		ca_uint32_t pon_mode : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_CTL_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_DEFAULT_REG 0xf4301504
#define L2FE_PLE_DEFAULT_REG_dft 0x001b0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dflt_flow_en : 1; /* bits 0:0 */
		ca_uint32_t dflt_flowid : 12; /* bits 12:1 */
		ca_uint32_t dflt_markdown_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t dflt_mc_pid : 6; /* bits 21:16 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_DEFAULT_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_RX_UNKWN_VLAN_DFT 0xf4301508
#define L2FE_PLE_RX_UNKWN_VLAN_DFT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t memshp_bm : 16; /* bits 15:0 */
		ca_uint32_t vl_grp_id : 10; /* bits 25:16 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_RX_UNKWN_VLAN_DFT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TX_UNKWN_VLAN_DFT_1 0xf430150c
#define L2FE_PLE_TX_UNKWN_VLAN_DFT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stp_mode : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TX_UNKWN_VLAN_DFT_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TX_UNKWN_VLAN_DFT_2 0xf4301510
#define L2FE_PLE_TX_UNKWN_VLAN_DFT_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t memshp_bm : 16; /* bits 15:0 */
		ca_uint32_t untag_bm : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TX_UNKWN_VLAN_DFT_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_GRP_CTRL_0 0xf4301514
#define L2FE_PLE_TRUNK_GRP_CTRL_0_dft 0x00000012

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t trunk_hash_field_sel_mac_sa : 1; /* bits 0:0 */
		ca_uint32_t trunk_hash_field_sel_mac_da : 1; /* bits 1:1 */
		ca_uint32_t trunk_hash_field_sel_tx_top_vid : 1; /* bits 2:2 */
		ca_uint32_t trunk_hash_field_sel_ip_sa : 1; /* bits 3:3 */
		ca_uint32_t trunk_hash_field_sel_ip_da : 1; /* bits 4:4 */
		ca_uint32_t trunk_hash_field_sel_l4_sp : 1; /* bits 5:5 */
		ca_uint32_t trunk_hash_field_sel_l4_dp : 1; /* bits 6:6 */
		ca_uint32_t trunk_hash_field_sel_cos : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_GRP_CTRL_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_GRP_0_MEMBER_0 0xf4301518
#define L2FE_PLE_TRUNK_GRP_0_MEMBER_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t valid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_GRP_0_MEMBER_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_GRP_0_MEMBER_1 0xf430151c
#define L2FE_PLE_TRUNK_GRP_0_MEMBER_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t valid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_GRP_0_MEMBER_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_GRP_CTRL_1 0xf4301520
#define L2FE_PLE_TRUNK_GRP_CTRL_1_dft 0x00000012

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t trunk_hash_field_sel_mac_sa : 1; /* bits 0:0 */
		ca_uint32_t trunk_hash_field_sel_mac_da : 1; /* bits 1:1 */
		ca_uint32_t trunk_hash_field_sel_tx_top_vid : 1; /* bits 2:2 */
		ca_uint32_t trunk_hash_field_sel_ip_sa : 1; /* bits 3:3 */
		ca_uint32_t trunk_hash_field_sel_ip_da : 1; /* bits 4:4 */
		ca_uint32_t trunk_hash_field_sel_l4_sp : 1; /* bits 5:5 */
		ca_uint32_t trunk_hash_field_sel_l4_dp : 1; /* bits 6:6 */
		ca_uint32_t trunk_hash_field_sel_cos : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_GRP_CTRL_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_GRP_1_MEMBER_0 0xf4301524
#define L2FE_PLE_TRUNK_GRP_1_MEMBER_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t valid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_GRP_1_MEMBER_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_GRP_1_MEMBER_1 0xf4301528
#define L2FE_PLE_TRUNK_GRP_1_MEMBER_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t valid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_GRP_1_MEMBER_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_HD_FF_CTL_REG 0xf430152c
#define L2FE_PLE_HD_FF_CTL_REG_dft 0x00000610

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_thr : 6; /* bits 5:0 */
		ca_uint32_t high_thr : 6; /* bits 11:6 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_HD_FF_CTL_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_HD_FF_STS_REG 0xf4301530
#define L2FE_PLE_HD_FF_STS_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t overflow_ind : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_HD_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_HD_FF_HDR_CNT 0xf4301534
#define L2FE_PLE_HD_FF_HDR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_HD_FF_HDR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_DEBUG_BUS 0xf4301538
#define L2FE_PLE_DEBUG_BUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TX_DSCP_MAP_ACCESS 0xf430153c
#define L2FE_PLE_TX_DSCP_MAP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TX_DSCP_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TX_DSCP_MAP_DATA 0xf4301540
#define L2FE_PLE_TX_DSCP_MAP_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txdscp_map_mapped_cos : 3; /* bits 2:0 */
		ca_uint32_t txdscp_map_mapped_1p : 3; /* bits 5:3 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TX_DSCP_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TX_DOT1P_MAP_ACCESS 0xf4301544
#define L2FE_PLE_TX_DOT1P_MAP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TX_DOT1P_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TX_DOT1P_MAP_DATA 0xf4301548
#define L2FE_PLE_TX_DOT1P_MAP_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txdot1p_map_mapped_cos : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TX_DOT1P_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_DFT_FWD_ACCESS 0xf430154c
#define L2FE_PLE_DFT_FWD_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_DFT_FWD_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_DFT_FWD_DATA 0xf4301550
#define L2FE_PLE_DFT_FWD_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dft_fwd_deny : 1; /* bits 0:0 */
		ca_uint32_t dft_fwd_mc_group_id : 10; /* bits 10:1 */
		ca_uint32_t dft_fwd_redir_en : 1; /* bits 11:11 */
		ca_uint32_t dft_fwd_mc_group_id_valid : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_DFT_FWD_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS 0xf4301554
#define L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_MMSHP_CHK_ID_MAP_DATA 0xf4301558
#define L2FE_PLE_MMSHP_CHK_ID_MAP_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mmshp_chk_id_map_chk_id : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_MMSHP_CHK_ID_MAP_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_PORT_MMSHP_CHK_ACCESS 0xf430155c
#define L2FE_PLE_PORT_MMSHP_CHK_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_PORT_MMSHP_CHK_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_PORT_MMSHP_CHK_DATA1 0xf4301560
#define L2FE_PLE_PORT_MMSHP_CHK_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid_bm : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_PORT_MMSHP_CHK_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_PORT_MMSHP_CHK_DATA0 0xf4301564
#define L2FE_PLE_PORT_MMSHP_CHK_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid_bm : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_PORT_MMSHP_CHK_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS 0xf4301568
#define L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA 0xf430156c
#define L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PLE */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_PLE_CTL_REG_t CTL_REG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_PLE_DEFAULT_REG_t DEFAULT_REG; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_PLE_RX_UNKWN_VLAN_DFT_t RX_UNKWN_VLAN_DFT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_PLE_TX_UNKWN_VLAN_DFT_1_t TX_UNKWN_VLAN_DFT_1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_PLE_TX_UNKWN_VLAN_DFT_2_t TX_UNKWN_VLAN_DFT_2; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_PLE_TRUNK_GRP_CTRL_0_t TRUNK_GRP_CTRL_0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_PLE_TRUNK_GRP_0_MEMBER_0_t TRUNK_GRP_0_MEMBER_0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_PLE_TRUNK_GRP_0_MEMBER_1_t TRUNK_GRP_0_MEMBER_1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_PLE_TRUNK_GRP_CTRL_1_t TRUNK_GRP_CTRL_1; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_PLE_TRUNK_GRP_1_MEMBER_0_t TRUNK_GRP_1_MEMBER_0; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_PLE_TRUNK_GRP_1_MEMBER_1_t TRUNK_GRP_1_MEMBER_1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_PLE_HD_FF_CTL_REG_t HD_FF_CTL_REG; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_PLE_HD_FF_STS_REG_t HD_FF_STS_REG; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_PLE_HD_FF_HDR_CNT_t HD_FF_HDR_CNT; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_PLE_DEBUG_BUS_t DEBUG_BUS; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_PLE_TX_DSCP_MAP_ACCESS_t TX_DSCP_MAP_ACCESS; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_PLE_TX_DSCP_MAP_DATA_t TX_DSCP_MAP_DATA; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_PLE_TX_DOT1P_MAP_ACCESS_t TX_DOT1P_MAP_ACCESS; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_PLE_TX_DOT1P_MAP_DATA_t TX_DOT1P_MAP_DATA; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_PLE_DFT_FWD_ACCESS_t DFT_FWD_ACCESS; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_PLE_DFT_FWD_DATA_t DFT_FWD_DATA; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_PLE_MMSHP_CHK_ID_MAP_ACCESS_t
	  MMSHP_CHK_ID_MAP_ACCESS; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2FE_PLE_MMSHP_CHK_ID_MAP_DATA_t MMSHP_CHK_ID_MAP_DATA; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2FE_PLE_PORT_MMSHP_CHK_ACCESS_t PORT_MMSHP_CHK_ACCESS; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L2FE_PLE_PORT_MMSHP_CHK_DATA1_t PORT_MMSHP_CHK_DATA1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L2FE_PLE_PORT_MMSHP_CHK_DATA0_t PORT_MMSHP_CHK_DATA0; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L2FE_PLE_TRUNK_DEST_MAP_TBL_ACCESS_t
	  TRUNK_DEST_MAP_TBL_ACCESS; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L2FE_PLE_TRUNK_DEST_MAP_TBL_DATA_t
	  TRUNK_DEST_MAP_TBL_DATA; /* addr: 0x0000006c */
} APB0_L2FE_PLE_t;
#endif /* !__ASSEMBLER__ */

/*
 * ARB
 */

#define L2FE_ARB_ARB_CTRL 0xf4301600
#define L2FE_ARB_ARB_CTRL_dft 0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t drop_redir_keep_old : 1; /* bits 0:0 */
		ca_uint32_t dbuf_sel : 1; /* bits 1:1 */
		ca_uint32_t ip_ecn_en : 1; /* bits 2:2 */
		ca_uint32_t mc_idx_copy_en : 1; /* bits 3:3 */
		ca_uint32_t dbuf_dpid : 4; /* bits 7:4 */
		ca_uint32_t use_hdr_a_dbuf_en : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_ARB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_PER_COS_DONT_MARK_CTRL 0xf4301604
#define L2FE_ARB_PER_COS_DONT_MARK_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bitmap_dst_lan : 8; /* bits 7:0 */
		ca_uint32_t bitmap_dst_wan : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_PER_COS_DONT_MARK_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_ARB_DEBUG 0xf4301608
#define L2FE_ARB_ARB_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_ARB_DEBUG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS 0xf430160c
#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA 0xf4301610
#define L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdir_cos_vld : 1; /* bits 0:0 */
		ca_uint32_t rdir_cos : 3; /* bits 3:1 */
		ca_uint32_t rdir_ldpid : 6; /* bits 9:4 */
		ca_uint32_t rdir_en : 1; /* bits 10:10 */
		ca_uint32_t rdir_wan_dst : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS 0xf4301614
#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA 0xf4301618
#define L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdir_cos_vld : 1; /* bits 0:0 */
		ca_uint32_t rdir_cos : 3; /* bits 3:1 */
		ca_uint32_t rdir_ldpid : 6; /* bits 9:4 */
		ca_uint32_t rdir_en : 1; /* bits 10:10 */
		ca_uint32_t rdir_wan_dst : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS 0xf430161c
#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA 0xf4301620
#define L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flooding_pol_id : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS 0xf4301624
#define L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_DSCP_TE_MARK_TBL_DATA 0xf4301628
#define L2FE_ARB_DSCP_TE_MARK_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_value : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_DSCP_TE_MARK_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_MC_FIB_TBL_ACCESS 0xf430162c
#define L2FE_ARB_MC_FIB_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_MC_FIB_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_MC_FIB_TBL_DATA3 0xf4301630
#define L2FE_ARB_MC_FIB_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_en : 1; /* bits 0:0 */
		ca_uint32_t cos : 3; /* bits 3:1 */
		ca_uint32_t ldpid : 6; /* bits 9:4 */
		ca_uint32_t mac_sa_sel : 1; /* bits 10:10 */
		ca_uint32_t mac_sa_cmd : 1; /* bits 11:11 */
		ca_uint32_t permit_spid_en : 1; /* bits 12:12 */
		ca_uint32_t wan_dst : 1; /* bits 13:13 */
		ca_uint32_t cos_cmd : 1; /* bits 14:14 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_MC_FIB_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_MC_FIB_TBL_DATA2 0xf4301634
#define L2FE_ARB_MC_FIB_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vid : 5; /* bits 4:0 */
		ca_uint32_t vlan_cmd : 3; /* bits 7:5 */
		ca_uint32_t vlan_fltr_en : 1; /* bits 8:8 */
		ca_uint32_t mcgid : 10; /* bits 18:9 */
		ca_uint32_t mcgid_en : 1; /* bits 19:19 */
		ca_uint32_t pol_id : 9; /* bits 28:20 */
		ca_uint32_t pol_grp_id : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_MC_FIB_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_MC_FIB_TBL_DATA1 0xf4301638
#define L2FE_ARB_MC_FIB_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_da : 16; /* bits 15:0 */
		ca_uint32_t mac_cmd : 1; /* bits 16:16 */
		ca_uint32_t dei : 1; /* bits 17:17 */
		ca_uint32_t dei_cmd : 1; /* bits 18:18 */
		ca_uint32_t dot1p : 3; /* bits 21:19 */
		ca_uint32_t dot1p_cmd : 2; /* bits 23:22 */
		ca_uint32_t sc_ind : 1; /* bits 24:24 */
		ca_uint32_t vid : 7; /* bits 31:25 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_MC_FIB_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_MC_FIB_TBL_DATA0 0xf430163c
#define L2FE_ARB_MC_FIB_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_da : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_MC_FIB_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_FLOW_DBUF_TBL_ACCESS 0xf4301640
#define L2FE_ARB_FLOW_DBUF_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_FLOW_DBUF_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_FLOW_DBUF_TBL_DATA 0xf4301644
#define L2FE_ARB_FLOW_DBUF_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbuf_flg_0 : 1; /* bits 0:0 */
		ca_uint32_t dbuf_flg_1 : 1; /* bits 1:1 */
		ca_uint32_t dbuf_flg_2 : 1; /* bits 2:2 */
		ca_uint32_t dbuf_flg_3 : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_FLOW_DBUF_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_PORT_DBUF_TBL_ACCESS 0xf4301648
#define L2FE_ARB_PORT_DBUF_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_PORT_DBUF_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_PORT_DBUF_TBL_DATA 0xf430164c
#define L2FE_ARB_PORT_DBUF_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbuf_flg : 1; /* bits 0:0 */
		ca_uint32_t ldpid_vld : 1; /* bits 1:1 */
		ca_uint32_t ldpid : 6; /* bits 7:2 */
		ca_uint32_t lspid_vld : 1; /* bits 8:8 */
		ca_uint32_t lspid : 6; /* bits 14:9 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_PORT_DBUF_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_PDPID_MAP_TBL_ACCESS 0xf4301650
#define L2FE_ARB_PDPID_MAP_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_PDPID_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_ARB_PDPID_MAP_TBL_DATA 0xf4301654
#define L2FE_ARB_PDPID_MAP_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pdpid : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_ARB_PDPID_MAP_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ARB */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_ARB_ARB_CTRL_t ARB_CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_ARB_PER_COS_DONT_MARK_CTRL_t
	  PER_COS_DONT_MARK_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_ARB_ARB_DEBUG_t ARB_DEBUG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_ARB_REDIR_LDPID_CONFIG_TBL_ACCESS_t
	  REDIR_LDPID_CONFIG_TBL_ACCESS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_ARB_REDIR_LDPID_CONFIG_TBL_DATA_t
	  REDIR_LDPID_CONFIG_TBL_DATA; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_ACCESS_t
	  REDIR_DROP_SRC_CONFIG_TBL_ACCESS; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_ARB_REDIR_DROP_SRC_CONFIG_TBL_DATA_t
	  REDIR_DROP_SRC_CONFIG_TBL_DATA; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_ARB_NON_KNOWN_POL_MAP_TBL_ACCESS_t
	  NON_KNOWN_POL_MAP_TBL_ACCESS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_ARB_NON_KNOWN_POL_MAP_TBL_DATA_t
	  NON_KNOWN_POL_MAP_TBL_DATA; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_ARB_DSCP_TE_MARK_TBL_ACCESS_t
	  DSCP_TE_MARK_TBL_ACCESS; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_ARB_DSCP_TE_MARK_TBL_DATA_t DSCP_TE_MARK_TBL_DATA; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_ARB_MC_FIB_TBL_ACCESS_t MC_FIB_TBL_ACCESS; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_ARB_MC_FIB_TBL_DATA3_t MC_FIB_TBL_DATA3; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_ARB_MC_FIB_TBL_DATA2_t MC_FIB_TBL_DATA2; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_ARB_MC_FIB_TBL_DATA1_t MC_FIB_TBL_DATA1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_ARB_MC_FIB_TBL_DATA0_t MC_FIB_TBL_DATA0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_ARB_FLOW_DBUF_TBL_ACCESS_t FLOW_DBUF_TBL_ACCESS; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_ARB_FLOW_DBUF_TBL_DATA_t FLOW_DBUF_TBL_DATA; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_ARB_PORT_DBUF_TBL_ACCESS_t PORT_DBUF_TBL_ACCESS; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_ARB_PORT_DBUF_TBL_DATA_t PORT_DBUF_TBL_DATA; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_ARB_PDPID_MAP_TBL_ACCESS_t PDPID_MAP_TBL_ACCESS; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_ARB_PDPID_MAP_TBL_DATA_t PDPID_MAP_TBL_DATA; /* addr: 0x00000054 */
} APB0_L2FE_ARB_t;
#endif /* !__ASSEMBLER__ */

/*
 * PE
 */

#define L2FE_PE_CTRL 0xf4301700
#define L2FE_PE_CTRL_dft 0x000000f0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l2_padding_dis : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t wan_top_dei_keep_old : 1; /* bits 4:4 */
		ca_uint32_t lan_top_dei_keep_old : 1; /* bits 5:5 */
		ca_uint32_t wan_inner_dei_keep_old : 1; /* bits 6:6 */
		ca_uint32_t lan_inner_dei_keep_old : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CFG_VLAN_TPID_A 0xf4301704
#define L2FE_PE_CFG_VLAN_TPID_A_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CFG_VLAN_TPID_A_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CFG_VLAN_TPID_B 0xf4301708
#define L2FE_PE_CFG_VLAN_TPID_B_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CFG_VLAN_TPID_B_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CFG_VLAN_TPID_C 0xf430170c
#define L2FE_PE_CFG_VLAN_TPID_C_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CFG_VLAN_TPID_C_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CFG_VLAN_TPID_D 0xf4301710
#define L2FE_PE_CFG_VLAN_TPID_D_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CFG_VLAN_TPID_D_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_MY_MAC_LOW_0 0xf4301714
#define L2FE_PE_MY_MAC_LOW_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_MY_MAC_LOW_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_MY_MAC_HIGH_0 0xf4301718
#define L2FE_PE_MY_MAC_HIGH_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_MY_MAC_HIGH_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_MY_MAC_LOW_1 0xf430171c
#define L2FE_PE_MY_MAC_LOW_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_MY_MAC_LOW_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_MY_MAC_HIGH_1 0xf4301720
#define L2FE_PE_MY_MAC_HIGH_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_MY_MAC_HIGH_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CMD_FF_CTL_REG 0xf4301724
#define L2FE_PE_CMD_FF_CTL_REG_dft 0x00004343

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_thr_mir : 4; /* bits 3:0 */
		ca_uint32_t high_thr_mir : 4; /* bits 7:4 */
		ca_uint32_t low_thr_ppl : 4; /* bits 11:8 */
		ca_uint32_t high_thr_ppl : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CMD_FF_CTL_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CMD_FF_STS_REG 0xf4301728
#define L2FE_PE_CMD_FF_STS_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t overflow_ind_mir : 1; /* bits 0:0 */
		ca_uint32_t overflow_ind_ppl : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CMD_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_CMD_FF_CMD_CNT 0xf430172c
#define L2FE_PE_CMD_FF_CMD_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num_mir : 4; /* bits 3:0 */
		ca_uint32_t num_ppl : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_CMD_FF_CMD_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_TM_INTERFACE_PKT_CNT 0xf4301730
#define L2FE_PE_TM_INTERFACE_PKT_CNT_dft 0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_TM_INTERFACE_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_DROP_CNT_TBL_CLR 0xf4301734
#define L2FE_PE_DROP_CNT_TBL_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t set : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_DROP_CNT_TBL_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_HEADER_A_LOW 0xf4301738
#define L2FE_PE_HEADER_A_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_HEADER_A_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_HEADER_A_MID 0xf430173c
#define L2FE_PE_HEADER_A_MID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_HEADER_A_MID_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_HEADER_A_HI 0xf4301740
#define L2FE_PE_HEADER_A_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_HEADER_A_HI_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_DROP_CNT_GEAR_FF_CNT 0xf4301744
#define L2FE_PE_DROP_CNT_GEAR_FF_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_DROP_CNT_GEAR_FF_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_DROP_CNT_GEAR_FF_STS 0xf4301748
#define L2FE_PE_DROP_CNT_GEAR_FF_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_DROP_CNT_GEAR_FF_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_DEBUG 0xf430174c
#define L2FE_PE_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bus_sel : 4; /* bits 3:0 */
		ca_uint32_t fe2tm_pkt_cnt_wrap_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_DEBUG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_DROP_STTS_ACCESS 0xf4301750
#define L2FE_PE_DROP_STTS_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_DROP_STTS_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_DROP_STTS_DATA 0xf4301754
#define L2FE_PE_DROP_STTS_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_DROP_STTS_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS 0xf4301758
#define L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_PE_TPID_SEL_CONFIG_TBL_DATA 0xf430175c
#define L2FE_PE_TPID_SEL_CONFIG_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ctag : 2; /* bits 1:0 */
		ca_uint32_t stag : 2; /* bits 3:2 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_PE_TPID_SEL_CONFIG_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_PE_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_PE_CFG_VLAN_TPID_A_t CFG_VLAN_TPID_A; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_PE_CFG_VLAN_TPID_B_t CFG_VLAN_TPID_B; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_PE_CFG_VLAN_TPID_C_t CFG_VLAN_TPID_C; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_PE_CFG_VLAN_TPID_D_t CFG_VLAN_TPID_D; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_PE_MY_MAC_LOW_0_t MY_MAC_LOW_0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_PE_MY_MAC_HIGH_0_t MY_MAC_HIGH_0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_PE_MY_MAC_LOW_1_t MY_MAC_LOW_1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_PE_MY_MAC_HIGH_1_t MY_MAC_HIGH_1; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_PE_CMD_FF_CTL_REG_t CMD_FF_CTL_REG; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_PE_CMD_FF_STS_REG_t CMD_FF_STS_REG; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_PE_CMD_FF_CMD_CNT_t CMD_FF_CMD_CNT; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_PE_TM_INTERFACE_PKT_CNT_t TM_INTERFACE_PKT_CNT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_PE_DROP_CNT_TBL_CLR_t DROP_CNT_TBL_CLR; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_PE_HEADER_A_LOW_t HEADER_A_LOW; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_PE_HEADER_A_MID_t HEADER_A_MID; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_PE_HEADER_A_HI_t HEADER_A_HI; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_PE_DROP_CNT_GEAR_FF_CNT_t DROP_CNT_GEAR_FF_CNT; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_PE_DROP_CNT_GEAR_FF_STS_t DROP_CNT_GEAR_FF_STS; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_PE_DEBUG_t DEBUG; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_PE_DROP_STTS_ACCESS_t DROP_STTS_ACCESS; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_PE_DROP_STTS_DATA_t DROP_STTS_DATA; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2FE_PE_TPID_SEL_CONFIG_TBL_ACCESS_t
	  TPID_SEL_CONFIG_TBL_ACCESS; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2FE_PE_TPID_SEL_CONFIG_TBL_DATA_t
	  TPID_SEL_CONFIG_TBL_DATA; /* addr: 0x0000005c */
} APB0_L2FE_PE_t;
#endif /* !__ASSEMBLER__ */

/*
 * LF
 */

#define L2FE_LF_THRESHOLD 0xf4301900
#define L2FE_LF_THRESHOLD_dft 0x0001d8b4

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low : 9; /* bits 8:0 */
		ca_uint32_t high : 9; /* bits 17:9 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} L2FE_LF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_LF_CNT 0xf4301904
#define L2FE_LF_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry_cnt : 9; /* bits 8:0 */
		ca_uint32_t seg_cnt : 7; /* bits 15:9 */
		ca_uint32_t extra_store_cnt : 2; /* bits 17:16 */
		ca_uint32_t data_ltched : 1; /* bits 18:18 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} L2FE_LF_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_LF_STS 0xf4301908
#define L2FE_LF_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_LF_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_LF_DEBUG 0xf430190c
#define L2FE_LF_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_LF_DEBUG_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LF */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_LF_THRESHOLD_t THRESHOLD; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_LF_CNT_t CNT; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_LF_STS_t STS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_LF_DEBUG_t DEBUG; /* addr: 0x0000000c */
} APB0_L2FE_LF_t;
#endif /* !__ASSEMBLER__ */

/*
 * VE
 */

#define L2FE_VE_DEBUG_BUS 0xf4301a00
#define L2FE_VE_DEBUG_BUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_IDX_ACCESS 0xf4301a04
#define L2FE_VE_WAN_SVL_IDX_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 18;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_IDX_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_IDX_DATA 0xf4301a08
#define L2FE_VE_WAN_SVL_IDX_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_svl_idx_entry_vld : 1; /* bits 0:0 */
		ca_uint32_t wan_svl_idx_fib_idx : 7; /* bits 7:1 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_IDX_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_FIB_ACCESS 0xf4301a0c
#define L2FE_VE_WAN_SVL_FIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_FIB_DATA3 0xf4301a10
#define L2FE_VE_WAN_SVL_FIB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_svl_fib_vid : 8; /* bits 7:0 */
		ca_uint32_t wan_svl_fib_do_inner_vid_lookup : 1; /* bits 8:8 */
		ca_uint32_t wan_svl_fib_reserved : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_FIB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_FIB_DATA2 0xf4301a14
#define L2FE_VE_WAN_SVL_FIB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_svl_fib_dscp : 6; /* bits 5:0 */
		ca_uint32_t wan_svl_fib_802_1p : 3; /* bits 8:6 */
		ca_uint32_t wan_svl_fib_ldpid_vld : 1; /* bits 9:9 */
		ca_uint32_t wan_svl_fib_ldpid : 6; /* bits 15:10 */
		ca_uint32_t wan_svl_fib_mc_vlan_ind : 1; /* bits 16:16 */
		ca_uint32_t wan_svl_fib_stp_mode : 2; /* bits 18:17 */
		ca_uint32_t wan_svl_fib_inner_cmd_valid : 1; /* bits 19:19 */
		ca_uint32_t wan_svl_fib_innervid_usel2 : 1; /* bits 20:20 */
		ca_uint32_t wan_svl_fib_inner_vlan_cmd : 2; /* bits 22:21 */
		ca_uint32_t wan_svl_fib_top_cmd_valid : 1; /* bits 23:23 */
		ca_uint32_t wan_svl_fib_topvid_usel2 : 1; /* bits 24:24 */
		ca_uint32_t wan_svl_fib_top_vlan_cmd : 2; /* bits 26:25 */
		ca_uint32_t wan_svl_fib_sc_ind : 1; /* bits 27:27 */
		ca_uint32_t wan_svl_fib_vid : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_FIB_DATA1 0xf4301a18
#define L2FE_VE_WAN_SVL_FIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_svl_fib_vl_group_id : 10; /* bits 9:0 */
		ca_uint32_t wan_svl_fib_da_sa_swap : 1; /* bits 10:10 */
		ca_uint32_t wan_svl_fib_permit : 1; /* bits 11:11 */
		ca_uint32_t wan_svl_fib_markdown_en : 1; /* bits 12:12 */
		ca_uint32_t wan_svl_fib_flowid_valid : 1; /* bits 13:13 */
		ca_uint32_t wan_svl_fib_flowid : 12; /* bits 25:14 */
		ca_uint32_t wan_svl_fib_cos_valid : 1; /* bits 26:26 */
		ca_uint32_t wan_svl_fib_dscp_valid : 1; /* bits 27:27 */
		ca_uint32_t wan_svl_fib_802_1p_valid : 1; /* bits 28:28 */
		ca_uint32_t wan_svl_fib_cos : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_SVL_FIB_DATA0 0xf4301a1c
#define L2FE_VE_WAN_SVL_FIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_svl_fib_egress_top_untag_bm : 16; /* bits 15:0 */
		ca_uint32_t wan_svl_fib_membership_bm : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_SVL_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_IDX_ACCESS 0xf4301a20
#define L2FE_VE_WAN_CVL_IDX_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 18;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_IDX_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_IDX_DATA 0xf4301a24
#define L2FE_VE_WAN_CVL_IDX_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_cvl_idx_entry_vld : 1; /* bits 0:0 */
		ca_uint32_t wan_cvl_idx_fib_idx : 7; /* bits 7:1 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_IDX_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_FIB_ACCESS 0xf4301a28
#define L2FE_VE_WAN_CVL_FIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_FIB_DATA3 0xf4301a2c
#define L2FE_VE_WAN_CVL_FIB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_cvl_fib_vid : 8; /* bits 7:0 */
		ca_uint32_t wan_cvl_fib_reserved : 2; /* bits 9:8 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_FIB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_FIB_DATA2 0xf4301a30
#define L2FE_VE_WAN_CVL_FIB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_cvl_fib_dscp : 6; /* bits 5:0 */
		ca_uint32_t wan_cvl_fib_802_1p : 3; /* bits 8:6 */
		ca_uint32_t wan_cvl_fib_ldpid_vld : 1; /* bits 9:9 */
		ca_uint32_t wan_cvl_fib_ldpid : 6; /* bits 15:10 */
		ca_uint32_t wan_cvl_fib_mc_vlan_ind : 1; /* bits 16:16 */
		ca_uint32_t wan_cvl_fib_stp_mode : 2; /* bits 18:17 */
		ca_uint32_t wan_cvl_fib_inner_cmd_valid : 1; /* bits 19:19 */
		ca_uint32_t wan_cvl_fib_innervid_usel2 : 1; /* bits 20:20 */
		ca_uint32_t wan_cvl_fib_inner_vlan_cmd : 2; /* bits 22:21 */
		ca_uint32_t wan_cvl_fib_top_cmd_valid : 1; /* bits 23:23 */
		ca_uint32_t wan_cvl_fib_topvid_usel2 : 1; /* bits 24:24 */
		ca_uint32_t wan_cvl_fib_top_vlan_cmd : 2; /* bits 26:25 */
		ca_uint32_t wan_cvl_fib_sc_ind : 1; /* bits 27:27 */
		ca_uint32_t wan_cvl_fib_vid : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_FIB_DATA1 0xf4301a34
#define L2FE_VE_WAN_CVL_FIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_cvl_fib_vl_group_id : 10; /* bits 9:0 */
		ca_uint32_t wan_cvl_fib_da_sa_swap : 1; /* bits 10:10 */
		ca_uint32_t wan_cvl_fib_permit : 1; /* bits 11:11 */
		ca_uint32_t wan_cvl_fib_markdown_en : 1; /* bits 12:12 */
		ca_uint32_t wan_cvl_fib_flowid_valid : 1; /* bits 13:13 */
		ca_uint32_t wan_cvl_fib_flowid : 12; /* bits 25:14 */
		ca_uint32_t wan_cvl_fib_cos_valid : 1; /* bits 26:26 */
		ca_uint32_t wan_cvl_fib_dscp_valid : 1; /* bits 27:27 */
		ca_uint32_t wan_cvl_fib_802_1p_valid : 1; /* bits 28:28 */
		ca_uint32_t wan_cvl_fib_cos : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_WAN_CVL_FIB_DATA0 0xf4301a38
#define L2FE_VE_WAN_CVL_FIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wan_cvl_fib_egress_top_untag_bm : 16; /* bits 15:0 */
		ca_uint32_t wan_cvl_fib_membership_bm : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_WAN_CVL_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_IDX_ACCESS 0xf4301a3c
#define L2FE_VE_LAN_VL_IDX_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 18;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_IDX_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_IDX_DATA 0xf4301a40
#define L2FE_VE_LAN_VL_IDX_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lan_vl_idx_entry_vld : 1; /* bits 0:0 */
		ca_uint32_t lan_vl_idx_fib_idx : 7; /* bits 7:1 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_IDX_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_FIB_ACCESS 0xf4301a44
#define L2FE_VE_LAN_VL_FIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_FIB_DATA3 0xf4301a48
#define L2FE_VE_LAN_VL_FIB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lan_vl_fib_vid : 6; /* bits 5:0 */
		ca_uint32_t lan_vl_fib_reserved : 4; /* bits 9:6 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_FIB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_FIB_DATA2 0xf4301a4c
#define L2FE_VE_LAN_VL_FIB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lan_vl_fib_dscp : 6; /* bits 5:0 */
		ca_uint32_t lan_vl_fib_802_1p : 3; /* bits 8:6 */
		ca_uint32_t lan_vl_fib_ldpid_vld : 1; /* bits 9:9 */
		ca_uint32_t lan_vl_fib_ldpid : 6; /* bits 15:10 */
		ca_uint32_t lan_vl_fib_mc_vlan_ind : 1; /* bits 16:16 */
		ca_uint32_t lan_vl_fib_stp_mode : 2; /* bits 18:17 */
		ca_uint32_t lan_vl_fib_inner_cmd_valid : 1; /* bits 19:19 */
		ca_uint32_t lan_vl_fib_inner_vlan_cmd : 2; /* bits 21:20 */
		ca_uint32_t lan_vl_fib_top_cmd_valid : 1; /* bits 22:22 */
		ca_uint32_t lan_vl_fib_top_vlan_cmd : 2; /* bits 24:23 */
		ca_uint32_t lan_vl_fib_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t lan_vl_fib_vid : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_FIB_DATA1 0xf4301a50
#define L2FE_VE_LAN_VL_FIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lan_vl_fib_vl_group_id : 10; /* bits 9:0 */
		ca_uint32_t lan_vl_fib_da_sa_swap : 1; /* bits 10:10 */
		ca_uint32_t lan_vl_fib_permit : 1; /* bits 11:11 */
		ca_uint32_t lan_vl_fib_markdown_en : 1; /* bits 12:12 */
		ca_uint32_t lan_vl_fib_flowid_valid : 1; /* bits 13:13 */
		ca_uint32_t lan_vl_fib_flowid : 12; /* bits 25:14 */
		ca_uint32_t lan_vl_fib_cos_valid : 1; /* bits 26:26 */
		ca_uint32_t lan_vl_fib_dscp_valid : 1; /* bits 27:27 */
		ca_uint32_t lan_vl_fib_802_1p_valid : 1; /* bits 28:28 */
		ca_uint32_t lan_vl_fib_cos : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_VE_LAN_VL_FIB_DATA0 0xf4301a54
#define L2FE_VE_LAN_VL_FIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lan_vl_fib_egress_top_untag_bm : 16; /* bits 15:0 */
		ca_uint32_t lan_vl_fib_membership_bm : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2FE_VE_LAN_VL_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* VE */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_VE_DEBUG_BUS_t DEBUG_BUS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_VE_WAN_SVL_IDX_ACCESS_t WAN_SVL_IDX_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_VE_WAN_SVL_IDX_DATA_t WAN_SVL_IDX_DATA; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_VE_WAN_SVL_FIB_ACCESS_t WAN_SVL_FIB_ACCESS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_VE_WAN_SVL_FIB_DATA3_t WAN_SVL_FIB_DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_VE_WAN_SVL_FIB_DATA2_t WAN_SVL_FIB_DATA2; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_VE_WAN_SVL_FIB_DATA1_t WAN_SVL_FIB_DATA1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_VE_WAN_SVL_FIB_DATA0_t WAN_SVL_FIB_DATA0; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_VE_WAN_CVL_IDX_ACCESS_t WAN_CVL_IDX_ACCESS; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_VE_WAN_CVL_IDX_DATA_t WAN_CVL_IDX_DATA; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_VE_WAN_CVL_FIB_ACCESS_t WAN_CVL_FIB_ACCESS; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_VE_WAN_CVL_FIB_DATA3_t WAN_CVL_FIB_DATA3; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_VE_WAN_CVL_FIB_DATA2_t WAN_CVL_FIB_DATA2; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_VE_WAN_CVL_FIB_DATA1_t WAN_CVL_FIB_DATA1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_VE_WAN_CVL_FIB_DATA0_t WAN_CVL_FIB_DATA0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_VE_LAN_VL_IDX_ACCESS_t LAN_VL_IDX_ACCESS; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_VE_LAN_VL_IDX_DATA_t LAN_VL_IDX_DATA; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_VE_LAN_VL_FIB_ACCESS_t LAN_VL_FIB_ACCESS; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_VE_LAN_VL_FIB_DATA3_t LAN_VL_FIB_DATA3; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_VE_LAN_VL_FIB_DATA2_t LAN_VL_FIB_DATA2; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_VE_LAN_VL_FIB_DATA1_t LAN_VL_FIB_DATA1; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_VE_LAN_VL_FIB_DATA0_t LAN_VL_FIB_DATA0; /* addr: 0x00000054 */
} APB0_L2FE_VE_t;
#endif /* !__ASSEMBLER__ */

/*
 * CLE
 */

#define L2FE_CLE_CTRL 0xf4301b00
#define L2FE_CLE_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t igr_use_frst_hit : 1; /* bits 0:0 */
		ca_uint32_t egr_use_frst_hit : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_CONFG_STTS1 0xf4301b04
#define L2FE_CLE_CONFG_STTS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t igr_configured_length_over_size : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_CONFG_STTS1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_CONFG_STTS2 0xf4301b08
#define L2FE_CLE_CONFG_STTS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t egr_configured_length_over_size : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_CONFG_STTS2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_DEBUG 0xf4301b0c
#define L2FE_CLE_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t igr_cls_bus_sel : 2; /* bits 1:0 */
		ca_uint32_t egr_cls_bus_sel : 2; /* bits 3:2 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_DEBUG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_ACCESS 0xf4301b10
#define L2FE_CLE_IGR_KEY_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA12 0xf4301b14
#define L2FE_CLE_IGR_KEY_DATA12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_entry_type : 1; /* bits 0:0 */
		ca_uint32_t cl_key_valid : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA12_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA11 0xf4301b18
#define L2FE_CLE_IGR_KEY_DATA11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_mac_da : 8; /* bits 7:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_ecn_mask : 1; /* bits 8:8 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_ecn : 2; /* bits 10:9 */
		ca_uint32_t cl_key_orhr_ipv4e_reserved : 19; /* bits 29:11 */
		ca_uint32_t cl_key_orhr_ipv6_valid : 1; /* bits 30:30 */
		ca_uint32_t cl_key_entry_type : 1; /* bits 31:31 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 27; /* bits 26:0 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_ecn_mask : 1; /* bits 27:27 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_ecn : 2; /* bits 29:28 */
		ca_uint32_t cl_key_tre_rule_hinge : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_da : 19; /* bits 18:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_reserved : 7; /* bits 25:19 */
		ca_uint32_t cl_key_tre_rule_type_1 : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_rule_type_0 : 2; /* bits 29:28 */
		ca_uint32_t rsrvd1 : 2;
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_da : 19; /* bits 18:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_reserved : 7; /* bits 25:19 */
		ca_uint32_t rsrvd1 : 6;
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_da : 19; /* bits 18:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_reserved : 7; /* bits 25:19 */
		ca_uint32_t rsrvd1 : 6;
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_da : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_l3rl2r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_da : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_l3rl3r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_da : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_l3rcmr_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_cmrl2r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_cmrl3r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_cmrcmr_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA11_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA10 0xf4301b1c
#define L2FE_CLE_IGR_KEY_DATA10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_mac_da : 32; /* bits 31:0 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_da : 29; /* bits 31:3 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_da : 29; /* bits 31:3 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_da : 29; /* bits 31:3 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_sa : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_da : 15; /* bits 31:17 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_sa : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_da : 15; /* bits 31:17 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_sa : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_da : 15; /* bits 31:17 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr : 31; /* bits 31:1 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr : 31; /* bits 31:1 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr : 31; /* bits 31:1 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA10_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA9 0xf4301b20
#define L2FE_CLE_IGR_KEY_DATA9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_mac_sa : 24; /* bits 23:0 */
		ca_uint32_t cl_key_orhr_ipv4e_mac_da : 8; /* bits 31:24 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 32; /* bits 31:0 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 32; /* bits 31:0 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 32; /* bits 31:0 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_flags : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_fragment : 1; /* bits 1:1 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_option : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ip_tos : 6; /* bits 8:3 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ip_pt : 8; /* bits 16:9 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_sa : 15; /* bits 31:17 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_flags : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_fragment : 1; /* bits 1:1 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_option : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ip_tos : 6; /* bits 8:3 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ip_pt : 8; /* bits 16:9 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_sa : 15; /* bits 31:17 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_flags : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_fragment : 1; /* bits 1:1 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_option : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ip_tos : 6; /* bits 8:3 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ip_pt : 8; /* bits 16:9 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_sa : 15; /* bits 31:17 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr : 31; /* bits 31:1 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr : 31; /* bits 31:1 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr : 31; /* bits 31:1 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA9_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA8 0xf4301b24
#define L2FE_CLE_IGR_KEY_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_top_vid : 8; /* bits 7:0 */
		ca_uint32_t cl_key_orhr_ipv4e_mac_sa : 24; /* bits 31:8 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_vid : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_top_sc_ind : 1; /* bits 6:6 */
		ca_uint32_t cl_key_tre_l2rl2r_1_top_vid : 12; /* bits 18:7 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 13; /* bits 31:19 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_vid : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_top_sc_ind : 1; /* bits 6:6 */
		ca_uint32_t cl_key_tre_l2rl3r_1_top_vid : 12; /* bits 18:7 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 13; /* bits 31:19 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_vid : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_top_sc_ind : 1; /* bits 6:6 */
		ca_uint32_t cl_key_tre_l2rcmr_1_top_vid : 12; /* bits 18:7 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 13; /* bits 31:19 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_inner_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_top_sc_ind : 1; /* bits 12:12 */
		ca_uint32_t cl_key_tre_l3rl2r_1_top_vid : 12; /* bits 24:13 */
		ca_uint32_t cl_key_tre_l3rl2r_1_special_pkt_code : 5; /* bits 29:25 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_flags : 2; /* bits 31:30 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_inner_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_top_sc_ind : 1; /* bits 12:12 */
		ca_uint32_t cl_key_tre_l3rl3r_1_top_vid : 12; /* bits 24:13 */
		ca_uint32_t cl_key_tre_l3rl3r_1_special_pkt_code : 5; /* bits 29:25 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_flags : 2; /* bits 31:30 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_inner_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_top_sc_ind : 1; /* bits 12:12 */
		ca_uint32_t cl_key_tre_l3rcmr_1_top_vid : 12; /* bits 24:13 */
		ca_uint32_t cl_key_tre_l3rcmr_1_special_pkt_code : 5; /* bits 29:25 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_flags : 2; /* bits 31:30 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_top_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ip_pt : 7; /* bits 31:25 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_top_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ip_pt : 7; /* bits 31:25 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_top_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ip_pt : 7; /* bits 31:25 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA8_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA7 0xf4301b28
#define L2FE_CLE_IGR_KEY_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_da : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ev2_pt : 5; /* bits 5:1 */
		ca_uint32_t cl_key_orhr_ipv4e_tag_num : 2; /* bits 7:6 */
		ca_uint32_t cl_key_orhr_ipv4e_inner_802_1p : 3; /* bits 10:8 */
		ca_uint32_t cl_key_orhr_ipv4e_top_802_1p : 3; /* bits 13:11 */
		ca_uint32_t cl_key_orhr_ipv4e_inner_sc_ind : 1; /* bits 14:14 */
		ca_uint32_t cl_key_orhr_ipv4e_inner_vid : 12; /* bits 26:15 */
		ca_uint32_t cl_key_orhr_ipv4e_top_sc_ind : 1; /* bits 27:27 */
		ca_uint32_t cl_key_orhr_ipv4e_top_vid : 4; /* bits 31:28 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 27; /* bits 26:0 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 5; /* bits 31:27 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_dp : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_ev2_pt : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rl2r_1_tag_num : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_802_1p : 3; /* bits 21:19 */
		ca_uint32_t cl_key_tre_l2rl2r_1_top_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_vid : 6; /* bits 31:26 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_dp : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_ev2_pt : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rl3r_1_tag_num : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_802_1p : 3; /* bits 21:19 */
		ca_uint32_t cl_key_tre_l2rl3r_1_top_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_vid : 6; /* bits 31:26 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_dp : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_ev2_pt : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rcmr_1_tag_num : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_802_1p : 3; /* bits 21:19 */
		ca_uint32_t cl_key_tre_l2rcmr_1_top_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_vid : 6; /* bits 31:26 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_l3rl2r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_l3rl2r_1_inner_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rl2r_1_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rl2r_1_inner_sc_ind : 1; /* bits 31:31 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_l3rl3r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_l3rl3r_1_inner_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rl3r_1_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rl3r_1_inner_sc_ind : 1; /* bits 31:31 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_l3rcmr_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_l3rcmr_1_inner_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rcmr_1_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rcmr_1_inner_sc_ind : 1; /* bits 31:31 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_cmrl2r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_cmrl2r_1_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrl2r_1_top_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrl2r_1_top_vid : 3; /* bits 31:29 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_cmrl3r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_cmrl3r_1_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrl3r_1_top_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrl3r_1_top_vid : 3; /* bits 31:29 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_cmrcmr_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_cmrcmr_1_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrcmr_1_top_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrcmr_1_top_vid : 3; /* bits 31:29 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA6 0xf4301b2c
#define L2FE_CLE_IGR_KEY_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_sa : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_da : 31; /* bits 31:1 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mask : 2; /* bits 2:1 */
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_ctrl : 3; /* bits 5:3 */
		ca_uint32_t cl_key_tre_l2rl2r_1_dot1p_ctrl : 2; /* bits 7:6 */
		ca_uint32_t cl_key_tre_l2rl2r_1_vid_ctrl : 2; /* bits 9:8 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_ctrl : 2; /* bits 11:10 */
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_sp : 16; /* bits 27:12 */
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_dp : 4; /* bits 31:28 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mask : 2; /* bits 2:1 */
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_ctrl : 3; /* bits 5:3 */
		ca_uint32_t cl_key_tre_l2rl3r_1_dot1p_ctrl : 2; /* bits 7:6 */
		ca_uint32_t cl_key_tre_l2rl3r_1_vid_ctrl : 2; /* bits 9:8 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_ctrl : 2; /* bits 11:10 */
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_sp : 16; /* bits 27:12 */
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_dp : 4; /* bits 31:28 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mask : 2; /* bits 2:1 */
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_ctrl : 3; /* bits 5:3 */
		ca_uint32_t cl_key_tre_l2rcmr_1_dot1p_ctrl : 2; /* bits 7:6 */
		ca_uint32_t cl_key_tre_l2rcmr_1_vid_ctrl : 2; /* bits 9:8 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_ctrl : 2; /* bits 11:10 */
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_sp : 16; /* bits 27:12 */
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_dp : 4; /* bits 31:28 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_mask : 8; /* bits 8:1 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_ctrl : 3; /* bits 11:9 */
		ca_uint32_t cl_key_tre_l3rl2r_1_dot1p_ctrl : 2; /* bits 13:12 */
		ca_uint32_t cl_key_tre_l3rl2r_1_vid_ctrl : 2; /* bits 15:14 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ip_ctrl : 2; /* bits 17:16 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_sp : 14; /* bits 31:18 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_mask : 8; /* bits 8:1 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_ctrl : 3; /* bits 11:9 */
		ca_uint32_t cl_key_tre_l3rl3r_1_dot1p_ctrl : 2; /* bits 13:12 */
		ca_uint32_t cl_key_tre_l3rl3r_1_vid_ctrl : 2; /* bits 15:14 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ip_ctrl : 2; /* bits 17:16 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_sp : 14; /* bits 31:18 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_mask : 8; /* bits 8:1 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_ctrl : 3; /* bits 11:9 */
		ca_uint32_t cl_key_tre_l3rcmr_1_dot1p_ctrl : 2; /* bits 13:12 */
		ca_uint32_t cl_key_tre_l3rcmr_1_vid_ctrl : 2; /* bits 15:14 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ip_ctrl : 2; /* bits 17:16 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_sp : 14; /* bits 31:18 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_mask : 12; /* bits 12:1 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_ctrl : 3; /* bits 15:13 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr_sel : 1; /* bits 16:16 */
		ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr_sel : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_sp : 14; /* bits 31:18 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_mask : 12; /* bits 12:1 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_ctrl : 3; /* bits 15:13 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr_sel : 1; /* bits 16:16 */
		ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr_sel : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_sp : 14; /* bits 31:18 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_mask : 12; /* bits 12:1 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_ctrl : 3; /* bits 15:13 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr_sel : 1; /* bits 16:16 */
		ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr_sel : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_sp : 14; /* bits 31:18 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA5 0xf4301b30
#define L2FE_CLE_IGR_KEY_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_sa : 31; /* bits 31:1 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_da : 22; /* bits 21:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_reserved : 7; /* bits 28:22 */
		ca_uint32_t cl_key_tre_l2rl2r_1_prcd : 3; /* bits 31:29 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_da : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l2rl3r_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l2rl3r_1_prcd : 3; /* bits 31:29 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l2rcmr_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l2rcmr_1_prcd : 3; /* bits 31:29 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_da : 22; /* bits 21:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_reserved : 7; /* bits 28:22 */
		ca_uint32_t cl_key_tre_l3rl2r_1_prcd : 3; /* bits 31:29 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_da : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l3rl3r_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l3rl3r_1_prcd : 3; /* bits 31:29 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l3rcmr_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l3rcmr_1_prcd : 3; /* bits 31:29 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_da : 22; /* bits 21:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_reserved : 7; /* bits 28:22 */
		ca_uint32_t cl_key_tre_cmrl2r_1_prcd : 3; /* bits 31:29 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_da : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_cmrl3r_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_cmrl3r_1_prcd : 3; /* bits 31:29 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_cmrcmr_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_cmrcmr_1_prcd : 3; /* bits 31:29 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA4 0xf4301b34
#define L2FE_CLE_IGR_KEY_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_low : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_high : 16; /* bits 16:1 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_orhr_ipv4e_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_orhr_ipv4e_ip_pt : 7; /* bits 31:25 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_da : 26; /* bits 31:6 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_sa : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_da : 12; /* bits 31:20 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr : 28; /* bits 31:4 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_da : 26; /* bits 31:6 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_sa : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_da : 12; /* bits 31:20 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr : 28; /* bits 31:4 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_da : 26; /* bits 31:6 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_sa : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_da : 12; /* bits 31:20 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr : 28; /* bits 31:4 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA3 0xf4301b38
#define L2FE_CLE_IGR_KEY_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_low : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_high : 16; /* bits 16:1 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_low : 15; /* bits 31:17 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ip_tos : 5; /* bits 4:0 */
		ca_uint32_t cl_key_orhr_ipv6e_ip_pt : 8; /* bits 12:5 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_mask : 14; /* bits 26:13 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 5; /* bits 31:27 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 32; /* bits 31:0 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_special_pkt_code : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_flags : 3; /* bits 3:1 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_fragment : 1; /* bits 4:4 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_option : 1; /* bits 5:5 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ip_tos : 6; /* bits 11:6 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ip_pt : 8; /* bits 19:12 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_sa : 12; /* bits 31:20 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_ip_pt : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr : 28; /* bits 31:4 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 32; /* bits 31:0 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_special_pkt_code : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_flags : 3; /* bits 3:1 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_fragment : 1; /* bits 4:4 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_option : 1; /* bits 5:5 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ip_tos : 6; /* bits 11:6 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ip_pt : 8; /* bits 19:12 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_sa : 12; /* bits 31:20 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_ip_pt : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr : 28; /* bits 31:4 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 32; /* bits 31:0 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_special_pkt_code : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_flags : 3; /* bits 3:1 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_fragment : 1; /* bits 4:4 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_option : 1; /* bits 5:5 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ip_tos : 6; /* bits 11:6 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ip_pt : 8; /* bits 19:12 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_sa : 12; /* bits 31:20 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_ip_pt : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr : 28; /* bits 31:4 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA2 0xf4301b3c
#define L2FE_CLE_IGR_KEY_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_global_key : 9; /* bits 8:0 */
		ca_uint32_t cl_key_orhr_ipv4e_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_low : 15; /* bits 31:17 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_l4_dp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_orhr_ipv6e_tag_num : 2; /* bits 6:5 */
		ca_uint32_t cl_key_orhr_ipv6e_top_802_1p : 3; /* bits 9:7 */
		ca_uint32_t cl_key_orhr_ipv6e_top_sc_ind : 1; /* bits 10:10 */
		ca_uint32_t cl_key_orhr_ipv6e_top_vid : 12; /* bits 22:11 */
		ca_uint32_t cl_key_orhr_ipv6e_special_pkt_code : 5; /* bits 27:23 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_flags : 3; /* bits 30:28 */
		ca_uint32_t cl_key_orhr_ipv6e_ip_tos : 1; /* bits 31:31 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_top_sc_ind : 1; /* bits 9:9 */
		ca_uint32_t cl_key_tre_l2rl2r_2_top_vid : 12; /* bits 21:10 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 10; /* bits 31:22 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_top_802_1p : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_inner_sc_ind : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l2rl3r_2_inner_vid : 12; /* bits 14:3 */
		ca_uint32_t cl_key_tre_l2rl3r_2_top_sc_ind : 1; /* bits 15:15 */
		ca_uint32_t cl_key_tre_l2rl3r_2_top_vid : 12; /* bits 27:16 */
		ca_uint32_t cl_key_tre_l2rl3r_2_special_pkt_code : 4; /* bits 31:28 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_top_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_special_pkt_code : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_flags : 3; /* bits 19:17 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_fragment : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_option : 1; /* bits 21:21 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ip_tos : 6; /* bits 27:22 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ip_pt : 4; /* bits 31:28 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_top_sc_ind : 1; /* bits 9:9 */
		ca_uint32_t cl_key_tre_l3rl2r_2_top_vid : 12; /* bits 21:10 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 10; /* bits 31:22 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_top_802_1p : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_inner_sc_ind : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rl3r_2_inner_vid : 12; /* bits 14:3 */
		ca_uint32_t cl_key_tre_l3rl3r_2_top_sc_ind : 1; /* bits 15:15 */
		ca_uint32_t cl_key_tre_l3rl3r_2_top_vid : 12; /* bits 27:16 */
		ca_uint32_t cl_key_tre_l3rl3r_2_special_pkt_code : 4; /* bits 31:28 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_top_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_special_pkt_code : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_flags : 3; /* bits 19:17 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_fragment : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_option : 1; /* bits 21:21 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ip_tos : 6; /* bits 27:22 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ip_pt : 4; /* bits 31:28 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_top_sc_ind : 1; /* bits 9:9 */
		ca_uint32_t cl_key_tre_cmrl2r_2_top_vid : 12; /* bits 21:10 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 10; /* bits 31:22 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_top_802_1p : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_inner_sc_ind : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_cmrl3r_2_inner_vid : 12; /* bits 14:3 */
		ca_uint32_t cl_key_tre_cmrl3r_2_top_sc_ind : 1; /* bits 15:15 */
		ca_uint32_t cl_key_tre_cmrl3r_2_top_vid : 12; /* bits 27:16 */
		ca_uint32_t cl_key_tre_cmrl3r_2_special_pkt_code : 4; /* bits 31:28 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_top_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_special_pkt_code : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_flags : 3; /* bits 19:17 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_fragment : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_option : 1; /* bits 21:21 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ip_tos : 6; /* bits 27:22 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ip_pt : 4; /* bits 31:28 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA1 0xf4301b40
#define L2FE_CLE_IGR_KEY_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ip_ctrl : 3; /* bits 2:0 */
		ca_uint32_t cl_key_orhr_ipv4e_dot1p_ctrl : 2; /* bits 4:3 */
		ca_uint32_t cl_key_orhr_ipv4e_vid_ctrl : 2; /* bits 6:5 */
		ca_uint32_t cl_key_orhr_ipv4e_mac_ctrl : 2; /* bits 8:7 */
		ca_uint32_t cl_key_orhr_ipv4e_global_key : 23; /* bits 31:9 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_flow_label : 5; /* bits 4:0 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_sp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_dp : 11; /* bits 31:21 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_dp : 15; /* bits 14:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_ev2_pt : 5; /* bits 19:15 */
		ca_uint32_t cl_key_tre_l2rl2r_2_tag_num : 2; /* bits 21:20 */
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rl2r_2_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_vid : 3; /* bits 31:29 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l2rl3r_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l2rl3r_2_inner_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l2rl3r_2_top_802_1p : 1; /* bits 31:31 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l2rcmr_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l2rcmr_2_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l2rcmr_2_top_sc_ind : 1; /* bits 31:31 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_dp : 15; /* bits 14:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_ev2_pt : 5; /* bits 19:15 */
		ca_uint32_t cl_key_tre_l3rl2r_2_tag_num : 2; /* bits 21:20 */
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l3rl2r_2_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_vid : 3; /* bits 31:29 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l3rl3r_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l3rl3r_2_inner_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rl3r_2_top_802_1p : 1; /* bits 31:31 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l3rcmr_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l3rcmr_2_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rcmr_2_top_sc_ind : 1; /* bits 31:31 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_dp : 15; /* bits 14:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_ev2_pt : 5; /* bits 19:15 */
		ca_uint32_t cl_key_tre_cmrl2r_2_tag_num : 2; /* bits 21:20 */
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_cmrl2r_2_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_vid : 3; /* bits 31:29 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_cmrl3r_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_cmrl3r_2_inner_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_cmrl3r_2_top_802_1p : 1; /* bits 31:31 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_cmrcmr_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_cmrcmr_2_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_cmrcmr_2_top_sc_ind : 1; /* bits 31:31 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_KEY_DATA0 0xf4301b44
#define L2FE_CLE_IGR_KEY_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_orhr_ipv4e_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_orhr_ipv4e_mask : 22; /* bits 25:4 */
		ca_uint32_t cl_key_orhr_ipv4e_l7_ctrl : 2; /* bits 27:26 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_ctrl : 2; /* bits 29:28 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_ctrl : 2; /* bits 31:30 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_orhr_ipv6e_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_orhr_ipv6e_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_orhr_ipv6e_ip_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_orhr_ipv6e_flow_label : 15; /* bits 31:17 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mask : 2; /* bits 5:4 */
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_ctrl : 3; /* bits 8:6 */
		ca_uint32_t cl_key_tre_l2rl2r_2_dot1p_ctrl : 2; /* bits 10:9 */
		ca_uint32_t cl_key_tre_l2rl2r_2_vid_ctrl : 2; /* bits 12:11 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_ctrl : 2; /* bits 14:13 */
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_sp : 16; /* bits 30:15 */
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_dp : 1; /* bits 31:31 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l2rl3r_2_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_tre_l2rl3r_2_dot1p_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_tre_l2rl3r_2_vid_ctrl : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ip_ctrl : 2; /* bits 20:19 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_sp : 11; /* bits 31:21 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l2rcmr_2_mask : 12; /* bits 15:4 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_ctrl : 3; /* bits 18:16 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr_sel : 1; /* bits 19:19 */
		ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr_sel : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_sp : 11; /* bits 31:21 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mask : 2; /* bits 5:4 */
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_ctrl : 3; /* bits 8:6 */
		ca_uint32_t cl_key_tre_l3rl2r_2_dot1p_ctrl : 2; /* bits 10:9 */
		ca_uint32_t cl_key_tre_l3rl2r_2_vid_ctrl : 2; /* bits 12:11 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_ctrl : 2; /* bits 14:13 */
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_sp : 16; /* bits 30:15 */
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_dp : 1; /* bits 31:31 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l3rl3r_2_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_tre_l3rl3r_2_dot1p_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_tre_l3rl3r_2_vid_ctrl : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ip_ctrl : 2; /* bits 20:19 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_sp : 11; /* bits 31:21 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l3rcmr_2_mask : 12; /* bits 15:4 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_ctrl : 3; /* bits 18:16 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr_sel : 1; /* bits 19:19 */
		ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr_sel : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_sp : 11; /* bits 31:21 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mask : 2; /* bits 5:4 */
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_ctrl : 3; /* bits 8:6 */
		ca_uint32_t cl_key_tre_cmrl2r_2_dot1p_ctrl : 2; /* bits 10:9 */
		ca_uint32_t cl_key_tre_cmrl2r_2_vid_ctrl : 2; /* bits 12:11 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_ctrl : 2; /* bits 14:13 */
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_sp : 16; /* bits 30:15 */
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_dp : 1; /* bits 31:31 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_cmrl3r_2_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_tre_cmrl3r_2_dot1p_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_tre_cmrl3r_2_vid_ctrl : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ip_ctrl : 2; /* bits 20:19 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_sp : 11; /* bits 31:21 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_cmrcmr_2_mask : 12; /* bits 15:4 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_ctrl : 3; /* bits 18:16 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr_sel : 1; /* bits 19:19 */
		ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr_sel : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_sp : 11; /* bits 31:21 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_KEY_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_ACCESS 0xf4301b48
#define L2FE_CLE_EGR_KEY_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA12 0xf4301b4c
#define L2FE_CLE_EGR_KEY_DATA12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_entry_type : 1; /* bits 0:0 */
		ca_uint32_t cl_key_valid : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA12_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA11 0xf4301b50
#define L2FE_CLE_EGR_KEY_DATA11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_mac_da : 8; /* bits 7:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_ecn_mask : 1; /* bits 8:8 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_ecn : 2; /* bits 10:9 */
		ca_uint32_t cl_key_orhr_ipv4e_reserved : 19; /* bits 29:11 */
		ca_uint32_t cl_key_orhr_ipv6_valid : 1; /* bits 30:30 */
		ca_uint32_t cl_key_entry_type : 1; /* bits 31:31 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 27; /* bits 26:0 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_ecn_mask : 1; /* bits 27:27 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_ecn : 2; /* bits 29:28 */
		ca_uint32_t cl_key_tre_rule_hinge : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_da : 19; /* bits 18:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_reserved : 7; /* bits 25:19 */
		ca_uint32_t cl_key_tre_rule_type_1 : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_rule_type_0 : 2; /* bits 29:28 */
		ca_uint32_t rsrvd1 : 2;
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_da : 19; /* bits 18:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_reserved : 7; /* bits 25:19 */
		ca_uint32_t rsrvd1 : 6;
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_da : 19; /* bits 18:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_reserved : 7; /* bits 25:19 */
		ca_uint32_t rsrvd1 : 6;
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_da : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_l3rl2r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_da : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_l3rl3r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_da : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_l3rcmr_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_cmrl2r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_cmrl3r_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ecn_mask : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ecn : 2; /* bits 19:18 */
		ca_uint32_t cl_key_tre_cmrcmr_1_reserved : 6; /* bits 25:20 */
		ca_uint32_t rsrvd1 : 6;
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA11_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA10 0xf4301b54
#define L2FE_CLE_EGR_KEY_DATA10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_mac_da : 32; /* bits 31:0 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_da : 29; /* bits 31:3 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_da : 29; /* bits 31:3 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_da : 29; /* bits 31:3 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_sa : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_da : 15; /* bits 31:17 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_sa : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_da : 15; /* bits 31:17 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_sa : 17; /* bits 16:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_da : 15; /* bits 31:17 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr : 31; /* bits 31:1 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr : 31; /* bits 31:1 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr : 31; /* bits 31:1 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA10_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA9 0xf4301b58
#define L2FE_CLE_EGR_KEY_DATA9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_mac_sa : 24; /* bits 23:0 */
		ca_uint32_t cl_key_orhr_ipv4e_mac_da : 8; /* bits 31:24 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 32; /* bits 31:0 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 32; /* bits 31:0 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 32; /* bits 31:0 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_flags : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_fragment : 1; /* bits 1:1 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_option : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ip_tos : 6; /* bits 8:3 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ip_pt : 8; /* bits 16:9 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ipv4_sa : 15; /* bits 31:17 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_flags : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_fragment : 1; /* bits 1:1 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_option : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ip_tos : 6; /* bits 8:3 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ip_pt : 8; /* bits 16:9 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ipv4_sa : 15; /* bits 31:17 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_flags : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_fragment : 1; /* bits 1:1 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_option : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ip_tos : 6; /* bits 8:3 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ip_pt : 8; /* bits 16:9 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ipv4_sa : 15; /* bits 31:17 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr : 31; /* bits 31:1 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr : 31; /* bits 31:1 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr : 31; /* bits 31:1 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA9_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA8 0xf4301b5c
#define L2FE_CLE_EGR_KEY_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_top_vid : 8; /* bits 7:0 */
		ca_uint32_t cl_key_orhr_ipv4e_mac_sa : 24; /* bits 31:8 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_vid : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_top_sc_ind : 1; /* bits 6:6 */
		ca_uint32_t cl_key_tre_l2rl2r_1_top_vid : 12; /* bits 18:7 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_sa : 13; /* bits 31:19 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_vid : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_top_sc_ind : 1; /* bits 6:6 */
		ca_uint32_t cl_key_tre_l2rl3r_1_top_vid : 12; /* bits 18:7 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_sa : 13; /* bits 31:19 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_vid : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_top_sc_ind : 1; /* bits 6:6 */
		ca_uint32_t cl_key_tre_l2rcmr_1_top_vid : 12; /* bits 18:7 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_sa : 13; /* bits 31:19 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_inner_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_top_sc_ind : 1; /* bits 12:12 */
		ca_uint32_t cl_key_tre_l3rl2r_1_top_vid : 12; /* bits 24:13 */
		ca_uint32_t cl_key_tre_l3rl2r_1_special_pkt_code : 5; /* bits 29:25 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_flags : 2; /* bits 31:30 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_inner_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_top_sc_ind : 1; /* bits 12:12 */
		ca_uint32_t cl_key_tre_l3rl3r_1_top_vid : 12; /* bits 24:13 */
		ca_uint32_t cl_key_tre_l3rl3r_1_special_pkt_code : 5; /* bits 29:25 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_flags : 2; /* bits 31:30 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_inner_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_top_sc_ind : 1; /* bits 12:12 */
		ca_uint32_t cl_key_tre_l3rcmr_1_top_vid : 12; /* bits 24:13 */
		ca_uint32_t cl_key_tre_l3rcmr_1_special_pkt_code : 5; /* bits 29:25 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_flags : 2; /* bits 31:30 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_top_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ip_pt : 7; /* bits 31:25 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_top_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ip_pt : 7; /* bits 31:25 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_top_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ip_pt : 7; /* bits 31:25 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA8_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA7 0xf4301b60
#define L2FE_CLE_EGR_KEY_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_da : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ev2_pt : 5; /* bits 5:1 */
		ca_uint32_t cl_key_orhr_ipv4e_tag_num : 2; /* bits 7:6 */
		ca_uint32_t cl_key_orhr_ipv4e_inner_802_1p : 3; /* bits 10:8 */
		ca_uint32_t cl_key_orhr_ipv4e_top_802_1p : 3; /* bits 13:11 */
		ca_uint32_t cl_key_orhr_ipv4e_inner_sc_ind : 1; /* bits 14:14 */
		ca_uint32_t cl_key_orhr_ipv4e_inner_vid : 12; /* bits 26:15 */
		ca_uint32_t cl_key_orhr_ipv4e_top_sc_ind : 1; /* bits 27:27 */
		ca_uint32_t cl_key_orhr_ipv4e_top_vid : 4; /* bits 31:28 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 27; /* bits 26:0 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_da : 5; /* bits 31:27 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_dp : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_ev2_pt : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rl2r_1_tag_num : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_802_1p : 3; /* bits 21:19 */
		ca_uint32_t cl_key_tre_l2rl2r_1_top_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t cl_key_tre_l2rl2r_1_inner_vid : 6; /* bits 31:26 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_dp : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_ev2_pt : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rl3r_1_tag_num : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_802_1p : 3; /* bits 21:19 */
		ca_uint32_t cl_key_tre_l2rl3r_1_top_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t cl_key_tre_l2rl3r_1_inner_vid : 6; /* bits 31:26 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_dp : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_ev2_pt : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rcmr_1_tag_num : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_802_1p : 3; /* bits 21:19 */
		ca_uint32_t cl_key_tre_l2rcmr_1_top_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_sc_ind : 1; /* bits 25:25 */
		ca_uint32_t cl_key_tre_l2rcmr_1_inner_vid : 6; /* bits 31:26 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_l3rl2r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_l3rl2r_1_inner_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rl2r_1_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rl2r_1_inner_sc_ind : 1; /* bits 31:31 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_l3rl3r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_l3rl3r_1_inner_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rl3r_1_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rl3r_1_inner_sc_ind : 1; /* bits 31:31 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_l3rcmr_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_l3rcmr_1_inner_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rcmr_1_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rcmr_1_inner_sc_ind : 1; /* bits 31:31 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_cmrl2r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_cmrl2r_1_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrl2r_1_top_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrl2r_1_top_vid : 3; /* bits 31:29 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_cmrl3r_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_cmrl3r_1_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrl3r_1_top_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrl3r_1_top_vid : 3; /* bits 31:29 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_sp : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_dp : 16; /* bits 17:2 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ev2_pt : 5; /* bits 22:18 */
		ca_uint32_t cl_key_tre_cmrcmr_1_tag_num : 2; /* bits 24:23 */
		ca_uint32_t cl_key_tre_cmrcmr_1_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrcmr_1_top_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrcmr_1_top_vid : 3; /* bits 31:29 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA6 0xf4301b64
#define L2FE_CLE_EGR_KEY_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_sa : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_da : 31; /* bits 31:1 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mask : 2; /* bits 2:1 */
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_ctrl : 3; /* bits 5:3 */
		ca_uint32_t cl_key_tre_l2rl2r_1_dot1p_ctrl : 2; /* bits 7:6 */
		ca_uint32_t cl_key_tre_l2rl2r_1_vid_ctrl : 2; /* bits 9:8 */
		ca_uint32_t cl_key_tre_l2rl2r_1_mac_ctrl : 2; /* bits 11:10 */
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_sp : 16; /* bits 27:12 */
		ca_uint32_t cl_key_tre_l2rl2r_1_l4_dp : 4; /* bits 31:28 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mask : 2; /* bits 2:1 */
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_ctrl : 3; /* bits 5:3 */
		ca_uint32_t cl_key_tre_l2rl3r_1_dot1p_ctrl : 2; /* bits 7:6 */
		ca_uint32_t cl_key_tre_l2rl3r_1_vid_ctrl : 2; /* bits 9:8 */
		ca_uint32_t cl_key_tre_l2rl3r_1_mac_ctrl : 2; /* bits 11:10 */
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_sp : 16; /* bits 27:12 */
		ca_uint32_t cl_key_tre_l2rl3r_1_l4_dp : 4; /* bits 31:28 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mask : 2; /* bits 2:1 */
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_ctrl : 3; /* bits 5:3 */
		ca_uint32_t cl_key_tre_l2rcmr_1_dot1p_ctrl : 2; /* bits 7:6 */
		ca_uint32_t cl_key_tre_l2rcmr_1_vid_ctrl : 2; /* bits 9:8 */
		ca_uint32_t cl_key_tre_l2rcmr_1_mac_ctrl : 2; /* bits 11:10 */
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_sp : 16; /* bits 27:12 */
		ca_uint32_t cl_key_tre_l2rcmr_1_l4_dp : 4; /* bits 31:28 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl2r_1_mask : 8; /* bits 8:1 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_ctrl : 3; /* bits 11:9 */
		ca_uint32_t cl_key_tre_l3rl2r_1_dot1p_ctrl : 2; /* bits 13:12 */
		ca_uint32_t cl_key_tre_l3rl2r_1_vid_ctrl : 2; /* bits 15:14 */
		ca_uint32_t cl_key_tre_l3rl2r_1_ip_ctrl : 2; /* bits 17:16 */
		ca_uint32_t cl_key_tre_l3rl2r_1_l4_sp : 14; /* bits 31:18 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl3r_1_mask : 8; /* bits 8:1 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_ctrl : 3; /* bits 11:9 */
		ca_uint32_t cl_key_tre_l3rl3r_1_dot1p_ctrl : 2; /* bits 13:12 */
		ca_uint32_t cl_key_tre_l3rl3r_1_vid_ctrl : 2; /* bits 15:14 */
		ca_uint32_t cl_key_tre_l3rl3r_1_ip_ctrl : 2; /* bits 17:16 */
		ca_uint32_t cl_key_tre_l3rl3r_1_l4_sp : 14; /* bits 31:18 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rcmr_1_mask : 8; /* bits 8:1 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_ctrl : 3; /* bits 11:9 */
		ca_uint32_t cl_key_tre_l3rcmr_1_dot1p_ctrl : 2; /* bits 13:12 */
		ca_uint32_t cl_key_tre_l3rcmr_1_vid_ctrl : 2; /* bits 15:14 */
		ca_uint32_t cl_key_tre_l3rcmr_1_ip_ctrl : 2; /* bits 17:16 */
		ca_uint32_t cl_key_tre_l3rcmr_1_l4_sp : 14; /* bits 31:18 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl2r_1_mask : 12; /* bits 12:1 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_ctrl : 3; /* bits 15:13 */
		ca_uint32_t cl_key_tre_cmrl2r_1_ipv4_addr_sel : 1; /* bits 16:16 */
		ca_uint32_t cl_key_tre_cmrl2r_1_mac_addr_sel : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl2r_1_l4_sp : 14; /* bits 31:18 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_1_mask : 12; /* bits 12:1 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_ctrl : 3; /* bits 15:13 */
		ca_uint32_t cl_key_tre_cmrl3r_1_ipv4_addr_sel : 1; /* bits 16:16 */
		ca_uint32_t cl_key_tre_cmrl3r_1_mac_addr_sel : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrl3r_1_l4_sp : 14; /* bits 31:18 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_1_fields_operator : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrcmr_1_mask : 12; /* bits 12:1 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_ctrl : 3; /* bits 15:13 */
		ca_uint32_t cl_key_tre_cmrcmr_1_ipv4_addr_sel : 1; /* bits 16:16 */
		ca_uint32_t cl_key_tre_cmrcmr_1_mac_addr_sel : 1; /* bits 17:17 */
		ca_uint32_t cl_key_tre_cmrcmr_1_l4_sp : 14; /* bits 31:18 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA5 0xf4301b68
#define L2FE_CLE_EGR_KEY_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ip_pt : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_sa : 31; /* bits 31:1 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_da : 22; /* bits 21:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_reserved : 7; /* bits 28:22 */
		ca_uint32_t cl_key_tre_l2rl2r_1_prcd : 3; /* bits 31:29 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_da : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l2rl3r_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l2rl3r_1_prcd : 3; /* bits 31:29 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l2rcmr_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l2rcmr_1_prcd : 3; /* bits 31:29 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_da : 22; /* bits 21:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_reserved : 7; /* bits 28:22 */
		ca_uint32_t cl_key_tre_l3rl2r_1_prcd : 3; /* bits 31:29 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_da : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l3rl3r_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l3rl3r_1_prcd : 3; /* bits 31:29 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_l3rcmr_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_l3rcmr_1_prcd : 3; /* bits 31:29 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_da : 22; /* bits 21:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_reserved : 7; /* bits 28:22 */
		ca_uint32_t cl_key_tre_cmrl2r_1_prcd : 3; /* bits 31:29 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_da : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_cmrl3r_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_cmrl3r_1_prcd : 3; /* bits 31:29 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ecn_mask : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ecn : 2; /* bits 22:21 */
		ca_uint32_t cl_key_tre_cmrcmr_2_reserved : 6; /* bits 28:23 */
		ca_uint32_t cl_key_tre_cmrcmr_1_prcd : 3; /* bits 31:29 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA4 0xf4301b6c
#define L2FE_CLE_EGR_KEY_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_low : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_high : 16; /* bits 16:1 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_fragment : 1; /* bits 17:17 */
		ca_uint32_t cl_key_orhr_ipv4e_ipv4_option : 1; /* bits 18:18 */
		ca_uint32_t cl_key_orhr_ipv4e_ip_tos : 6; /* bits 24:19 */
		ca_uint32_t cl_key_orhr_ipv4e_ip_pt : 7; /* bits 31:25 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 32; /* bits 31:0 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_da : 26; /* bits 31:6 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_sa : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_da : 12; /* bits 31:20 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr : 28; /* bits 31:4 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_da : 26; /* bits 31:6 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_sa : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_da : 12; /* bits 31:20 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr : 28; /* bits 31:4 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 6; /* bits 5:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_da : 26; /* bits 31:6 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_sa : 20; /* bits 19:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_da : 12; /* bits 31:20 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr : 28; /* bits 31:4 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA3 0xf4301b70
#define L2FE_CLE_EGR_KEY_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_low : 1; /* bits 0:0 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_high : 16; /* bits 16:1 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_low : 15; /* bits 31:17 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_ip_tos : 5; /* bits 4:0 */
		ca_uint32_t cl_key_orhr_ipv6e_ip_pt : 8; /* bits 12:5 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_mask : 14; /* bits 26:13 */
		ca_uint32_t cl_key_orhr_ipv6e_ipv6_sa : 5; /* bits 31:27 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 32; /* bits 31:0 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_special_pkt_code : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_flags : 3; /* bits 3:1 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_fragment : 1; /* bits 4:4 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_option : 1; /* bits 5:5 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ip_tos : 6; /* bits 11:6 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ip_pt : 8; /* bits 19:12 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ipv4_sa : 12; /* bits 31:20 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_ip_pt : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr : 28; /* bits 31:4 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 32; /* bits 31:0 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_special_pkt_code : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_flags : 3; /* bits 3:1 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_fragment : 1; /* bits 4:4 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_option : 1; /* bits 5:5 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ip_tos : 6; /* bits 11:6 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ip_pt : 8; /* bits 19:12 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ipv4_sa : 12; /* bits 31:20 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_ip_pt : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr : 28; /* bits 31:4 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 32; /* bits 31:0 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_special_pkt_code : 1; /* bits 0:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_flags : 3; /* bits 3:1 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_fragment : 1; /* bits 4:4 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_option : 1; /* bits 5:5 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ip_tos : 6; /* bits 11:6 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ip_pt : 8; /* bits 19:12 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ipv4_sa : 12; /* bits 31:20 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_ip_pt : 4; /* bits 3:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr : 28; /* bits 31:4 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA2 0xf4301b74
#define L2FE_CLE_EGR_KEY_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_global_key : 9; /* bits 8:0 */
		ca_uint32_t cl_key_orhr_ipv4e_special_pkt_code : 5; /* bits 13:9 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_flags : 3; /* bits 16:14 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_low : 15; /* bits 31:17 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_l4_dp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_orhr_ipv6e_tag_num : 2; /* bits 6:5 */
		ca_uint32_t cl_key_orhr_ipv6e_top_802_1p : 3; /* bits 9:7 */
		ca_uint32_t cl_key_orhr_ipv6e_top_sc_ind : 1; /* bits 10:10 */
		ca_uint32_t cl_key_orhr_ipv6e_top_vid : 12; /* bits 22:11 */
		ca_uint32_t cl_key_orhr_ipv6e_special_pkt_code : 5; /* bits 27:23 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_flags : 3; /* bits 30:28 */
		ca_uint32_t cl_key_orhr_ipv6e_ip_tos : 1; /* bits 31:31 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_top_sc_ind : 1; /* bits 9:9 */
		ca_uint32_t cl_key_tre_l2rl2r_2_top_vid : 12; /* bits 21:10 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_sa : 10; /* bits 31:22 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_top_802_1p : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_inner_sc_ind : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l2rl3r_2_inner_vid : 12; /* bits 14:3 */
		ca_uint32_t cl_key_tre_l2rl3r_2_top_sc_ind : 1; /* bits 15:15 */
		ca_uint32_t cl_key_tre_l2rl3r_2_top_vid : 12; /* bits 27:16 */
		ca_uint32_t cl_key_tre_l2rl3r_2_special_pkt_code : 4; /* bits 31:28 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_top_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_special_pkt_code : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_flags : 3; /* bits 19:17 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_fragment : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_option : 1; /* bits 21:21 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ip_tos : 6; /* bits 27:22 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ip_pt : 4; /* bits 31:28 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_top_sc_ind : 1; /* bits 9:9 */
		ca_uint32_t cl_key_tre_l3rl2r_2_top_vid : 12; /* bits 21:10 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_sa : 10; /* bits 31:22 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_top_802_1p : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_inner_sc_ind : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_l3rl3r_2_inner_vid : 12; /* bits 14:3 */
		ca_uint32_t cl_key_tre_l3rl3r_2_top_sc_ind : 1; /* bits 15:15 */
		ca_uint32_t cl_key_tre_l3rl3r_2_top_vid : 12; /* bits 27:16 */
		ca_uint32_t cl_key_tre_l3rl3r_2_special_pkt_code : 4; /* bits 31:28 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_top_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_special_pkt_code : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_flags : 3; /* bits 19:17 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_fragment : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_option : 1; /* bits 21:21 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ip_tos : 6; /* bits 27:22 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ip_pt : 4; /* bits 31:28 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_vid : 9; /* bits 8:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_top_sc_ind : 1; /* bits 9:9 */
		ca_uint32_t cl_key_tre_cmrl2r_2_top_vid : 12; /* bits 21:10 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_sa : 10; /* bits 31:22 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_top_802_1p : 2; /* bits 1:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_inner_sc_ind : 1; /* bits 2:2 */
		ca_uint32_t cl_key_tre_cmrl3r_2_inner_vid : 12; /* bits 14:3 */
		ca_uint32_t cl_key_tre_cmrl3r_2_top_sc_ind : 1; /* bits 15:15 */
		ca_uint32_t cl_key_tre_cmrl3r_2_top_vid : 12; /* bits 27:16 */
		ca_uint32_t cl_key_tre_cmrl3r_2_special_pkt_code : 4; /* bits 31:28 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_top_vid : 12; /* bits 11:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_special_pkt_code : 5; /* bits 16:12 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_flags : 3; /* bits 19:17 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_fragment : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_option : 1; /* bits 21:21 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ip_tos : 6; /* bits 27:22 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ip_pt : 4; /* bits 31:28 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA1 0xf4301b78
#define L2FE_CLE_EGR_KEY_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_ip_ctrl : 3; /* bits 2:0 */
		ca_uint32_t cl_key_orhr_ipv4e_dot1p_ctrl : 2; /* bits 4:3 */
		ca_uint32_t cl_key_orhr_ipv4e_vid_ctrl : 2; /* bits 6:5 */
		ca_uint32_t cl_key_orhr_ipv4e_mac_ctrl : 2; /* bits 8:7 */
		ca_uint32_t cl_key_orhr_ipv4e_global_key : 23; /* bits 31:9 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_flow_label : 5; /* bits 4:0 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_sp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_dp : 11; /* bits 31:21 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_dp : 15; /* bits 14:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_ev2_pt : 5; /* bits 19:15 */
		ca_uint32_t cl_key_tre_l2rl2r_2_tag_num : 2; /* bits 21:20 */
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l2rl2r_2_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_l2rl2r_2_inner_vid : 3; /* bits 31:29 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l2rl3r_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l2rl3r_2_inner_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l2rl3r_2_top_802_1p : 1; /* bits 31:31 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l2rcmr_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l2rcmr_2_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l2rcmr_2_top_sc_ind : 1; /* bits 31:31 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_dp : 15; /* bits 14:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_ev2_pt : 5; /* bits 19:15 */
		ca_uint32_t cl_key_tre_l3rl2r_2_tag_num : 2; /* bits 21:20 */
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_l3rl2r_2_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_l3rl2r_2_inner_vid : 3; /* bits 31:29 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l3rl3r_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l3rl3r_2_inner_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rl3r_2_top_802_1p : 1; /* bits 31:31 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_l3rcmr_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_l3rcmr_2_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_l3rcmr_2_top_sc_ind : 1; /* bits 31:31 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_dp : 15; /* bits 14:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_ev2_pt : 5; /* bits 19:15 */
		ca_uint32_t cl_key_tre_cmrl2r_2_tag_num : 2; /* bits 21:20 */
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_802_1p : 3; /* bits 24:22 */
		ca_uint32_t cl_key_tre_cmrl2r_2_top_802_1p : 3; /* bits 27:25 */
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_sc_ind : 1; /* bits 28:28 */
		ca_uint32_t cl_key_tre_cmrl2r_2_inner_vid : 3; /* bits 31:29 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_cmrl3r_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_cmrl3r_2_inner_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_cmrl3r_2_top_802_1p : 1; /* bits 31:31 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_sp : 5; /* bits 4:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_dp : 16; /* bits 20:5 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ev2_pt : 5; /* bits 25:21 */
		ca_uint32_t cl_key_tre_cmrcmr_2_tag_num : 2; /* bits 27:26 */
		ca_uint32_t cl_key_tre_cmrcmr_2_top_802_1p : 3; /* bits 30:28 */
		ca_uint32_t cl_key_tre_cmrcmr_2_top_sc_ind : 1; /* bits 31:31 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_KEY_DATA0 0xf4301b7c
#define L2FE_CLE_EGR_KEY_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_key_orhr_ipv4e_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_orhr_ipv4e_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_orhr_ipv4e_mask : 22; /* bits 25:4 */
		ca_uint32_t cl_key_orhr_ipv4e_l7_ctrl : 2; /* bits 27:26 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_sp_ctrl : 2; /* bits 29:28 */
		ca_uint32_t cl_key_orhr_ipv4e_l4_dp_ctrl : 2; /* bits 31:30 */
	} bf0;
	struct {
		ca_uint32_t cl_key_orhr_ipv6e_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_orhr_ipv6e_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_orhr_ipv6e_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_orhr_ipv6e_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_orhr_ipv6e_ip_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_orhr_ipv6e_flow_label : 15; /* bits 31:17 */
	} bf1;
	struct {
		ca_uint32_t cl_key_tre_l2rl2r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl2r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mask : 2; /* bits 5:4 */
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_ctrl : 3; /* bits 8:6 */
		ca_uint32_t cl_key_tre_l2rl2r_2_dot1p_ctrl : 2; /* bits 10:9 */
		ca_uint32_t cl_key_tre_l2rl2r_2_vid_ctrl : 2; /* bits 12:11 */
		ca_uint32_t cl_key_tre_l2rl2r_2_mac_ctrl : 2; /* bits 14:13 */
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_sp : 16; /* bits 30:15 */
		ca_uint32_t cl_key_tre_l2rl2r_2_l4_dp : 1; /* bits 31:31 */
	} bf2;
	struct {
		ca_uint32_t cl_key_tre_l2rl3r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rl3r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l2rl3r_2_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_tre_l2rl3r_2_dot1p_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_tre_l2rl3r_2_vid_ctrl : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l2rl3r_2_ip_ctrl : 2; /* bits 20:19 */
		ca_uint32_t cl_key_tre_l2rl3r_2_l4_sp : 11; /* bits 31:21 */
	} bf3;
	struct {
		ca_uint32_t cl_key_tre_l2rcmr_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l2rcmr_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l2rcmr_2_mask : 12; /* bits 15:4 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_ctrl : 3; /* bits 18:16 */
		ca_uint32_t cl_key_tre_l2rcmr_2_ipv4_addr_sel : 1; /* bits 19:19 */
		ca_uint32_t cl_key_tre_l2rcmr_2_mac_addr_sel : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l2rcmr_2_l4_sp : 11; /* bits 31:21 */
	} bf4;
	struct {
		ca_uint32_t cl_key_tre_l3rl2r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l3rl2r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mask : 2; /* bits 5:4 */
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_ctrl : 3; /* bits 8:6 */
		ca_uint32_t cl_key_tre_l3rl2r_2_dot1p_ctrl : 2; /* bits 10:9 */
		ca_uint32_t cl_key_tre_l3rl2r_2_vid_ctrl : 2; /* bits 12:11 */
		ca_uint32_t cl_key_tre_l3rl2r_2_mac_ctrl : 2; /* bits 14:13 */
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_sp : 16; /* bits 30:15 */
		ca_uint32_t cl_key_tre_l3rl2r_2_l4_dp : 1; /* bits 31:31 */
	} bf5;
	struct {
		ca_uint32_t cl_key_tre_l3rl3r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l3rl3r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l3rl3r_2_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_tre_l3rl3r_2_dot1p_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_tre_l3rl3r_2_vid_ctrl : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_l3rl3r_2_ip_ctrl : 2; /* bits 20:19 */
		ca_uint32_t cl_key_tre_l3rl3r_2_l4_sp : 11; /* bits 31:21 */
	} bf6;
	struct {
		ca_uint32_t cl_key_tre_l3rcmr_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_l3rcmr_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_l3rcmr_2_mask : 12; /* bits 15:4 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_ctrl : 3; /* bits 18:16 */
		ca_uint32_t cl_key_tre_l3rcmr_2_ipv4_addr_sel : 1; /* bits 19:19 */
		ca_uint32_t cl_key_tre_l3rcmr_2_mac_addr_sel : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_l3rcmr_2_l4_sp : 11; /* bits 31:21 */
	} bf7;
	struct {
		ca_uint32_t cl_key_tre_cmrl2r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_cmrl2r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mask : 2; /* bits 5:4 */
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_ctrl : 3; /* bits 8:6 */
		ca_uint32_t cl_key_tre_cmrl2r_2_dot1p_ctrl : 2; /* bits 10:9 */
		ca_uint32_t cl_key_tre_cmrl2r_2_vid_ctrl : 2; /* bits 12:11 */
		ca_uint32_t cl_key_tre_cmrl2r_2_mac_ctrl : 2; /* bits 14:13 */
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_sp : 16; /* bits 30:15 */
		ca_uint32_t cl_key_tre_cmrl2r_2_l4_dp : 1; /* bits 31:31 */
	} bf8;
	struct {
		ca_uint32_t cl_key_tre_cmrl3r_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_cmrl3r_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_cmrl3r_2_mask : 8; /* bits 11:4 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_ctrl : 3; /* bits 14:12 */
		ca_uint32_t cl_key_tre_cmrl3r_2_dot1p_ctrl : 2; /* bits 16:15 */
		ca_uint32_t cl_key_tre_cmrl3r_2_vid_ctrl : 2; /* bits 18:17 */
		ca_uint32_t cl_key_tre_cmrl3r_2_ip_ctrl : 2; /* bits 20:19 */
		ca_uint32_t cl_key_tre_cmrl3r_2_l4_sp : 11; /* bits 31:21 */
	} bf9;
	struct {
		ca_uint32_t cl_key_tre_cmrcmr_2_prcd : 3; /* bits 2:0 */
		ca_uint32_t cl_key_tre_cmrcmr_2_fields_operator : 1; /* bits 3:3 */
		ca_uint32_t cl_key_tre_cmrcmr_2_mask : 12; /* bits 15:4 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_ctrl : 3; /* bits 18:16 */
		ca_uint32_t cl_key_tre_cmrcmr_2_ipv4_addr_sel : 1; /* bits 19:19 */
		ca_uint32_t cl_key_tre_cmrcmr_2_mac_addr_sel : 1; /* bits 20:20 */
		ca_uint32_t cl_key_tre_cmrcmr_2_l4_sp : 11; /* bits 31:21 */
	} bf10;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_KEY_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_FIB_ACCESS 0xf4301b80
#define L2FE_CLE_IGR_FIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_FIB_DATA4 0xf4301b84
#define L2FE_CLE_IGR_FIB_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_inner_vid_0 : 3; /* bits 2:0 */
		ca_uint32_t cl_fib_xr_top_cmd_valid_0 : 1; /* bits 3:3 */
		ca_uint32_t cl_fib_xr_top_vlan_cmd_0 : 2; /* bits 5:4 */
		ca_uint32_t cl_fib_xr_top_sc_ind_0 : 1; /* bits 6:6 */
		ca_uint32_t cl_fib_xr_top_vid_0 : 12; /* bits 18:7 */
		ca_uint32_t cl_fib_xr_pkt_no_drop_0 : 1; /* bits 19:19 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_FIB_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_FIB_DATA3 0xf4301b88
#define L2FE_CLE_IGR_FIB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_ldpid_0 : 4; /* bits 3:0 */
		ca_uint32_t cl_fib_xr_cos_valid_0 : 1; /* bits 4:4 */
		ca_uint32_t cl_fib_xr_dscp_valid_0 : 1; /* bits 5:5 */
		ca_uint32_t cl_fib_xr_802_1p_valid_0 : 1; /* bits 6:6 */
		ca_uint32_t cl_fib_xr_cos_0 : 3; /* bits 9:7 */
		ca_uint32_t cl_fib_xr_dscp_0 : 6; /* bits 15:10 */
		ca_uint32_t cl_fib_xr_802_1p_0 : 3; /* bits 18:16 */
		ca_uint32_t cl_fib_xr_inner_cmd_valid_0 : 1; /* bits 19:19 */
		ca_uint32_t cl_fib_xr_inner_vlan_cmd_0 : 2; /* bits 21:20 */
		ca_uint32_t cl_fib_xr_inner_sc_ind_0 : 1; /* bits 22:22 */
		ca_uint32_t cl_fib_xr_inner_vid_0 : 9; /* bits 31:23 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_FIB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_FIB_DATA2 0xf4301b8c
#define L2FE_CLE_IGR_FIB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_top_vid_1 : 9; /* bits 8:0 */
		ca_uint32_t cl_fib_xr_pkt_no_drop_1 : 1; /* bits 9:9 */
		ca_uint32_t cl_fib_xr_stp_mode_0 : 2; /* bits 11:10 */
		ca_uint32_t cl_fib_xr_permit_valid_0 : 1; /* bits 12:12 */
		ca_uint32_t cl_fib_xr_permit_0 : 1; /* bits 13:13 */
		ca_uint32_t cl_fib_xr_premarked_0 : 1; /* bits 14:14 */
		ca_uint32_t cl_fib_xr_dscp_markdown_0 : 1; /* bits 15:15 */
		ca_uint32_t cl_fib_xr_mark_en_0 : 1; /* bits 16:16 */
		ca_uint32_t cl_fib_xr_flowid_0 : 12; /* bits 28:17 */
		ca_uint32_t cl_fib_xr_dp_valid_0 : 1; /* bits 29:29 */
		ca_uint32_t cl_fib_xr_ldpid_0 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_FIB_DATA1 0xf4301b90
#define L2FE_CLE_IGR_FIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_dscp_1 : 6; /* bits 5:0 */
		ca_uint32_t cl_fib_xr_802_1p_1 : 3; /* bits 8:6 */
		ca_uint32_t cl_fib_xr_inner_cmd_valid_1 : 1; /* bits 9:9 */
		ca_uint32_t cl_fib_xr_inner_vlan_cmd_1 : 2; /* bits 11:10 */
		ca_uint32_t cl_fib_xr_inner_sc_ind_1 : 1; /* bits 12:12 */
		ca_uint32_t cl_fib_xr_inner_vid_1 : 12; /* bits 24:13 */
		ca_uint32_t cl_fib_xr_top_cmd_valid_1 : 1; /* bits 25:25 */
		ca_uint32_t cl_fib_xr_top_vlan_cmd_1 : 2; /* bits 27:26 */
		ca_uint32_t cl_fib_xr_top_sc_ind_1 : 1; /* bits 28:28 */
		ca_uint32_t cl_fib_xr_top_vid_1 : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_IGR_FIB_DATA0 0xf4301b94
#define L2FE_CLE_IGR_FIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_stp_mode_1 : 2; /* bits 1:0 */
		ca_uint32_t cl_fib_xr_permit_valid_1 : 1; /* bits 2:2 */
		ca_uint32_t cl_fib_xr_permit_1 : 1; /* bits 3:3 */
		ca_uint32_t cl_fib_xr_premarked_1 : 1; /* bits 4:4 */
		ca_uint32_t cl_fib_xr_dscp_markdown_1 : 1; /* bits 5:5 */
		ca_uint32_t cl_fib_xr_mark_en_1 : 1; /* bits 6:6 */
		ca_uint32_t cl_fib_xr_flowid_1 : 12; /* bits 18:7 */
		ca_uint32_t cl_fib_xr_dp_valid_1 : 1; /* bits 19:19 */
		ca_uint32_t cl_fib_xr_ldpid_1 : 6; /* bits 25:20 */
		ca_uint32_t cl_fib_xr_cos_valid_1 : 1; /* bits 26:26 */
		ca_uint32_t cl_fib_xr_dscp_valid_1 : 1; /* bits 27:27 */
		ca_uint32_t cl_fib_xr_802_1p_valid_1 : 1; /* bits 28:28 */
		ca_uint32_t cl_fib_xr_cos_1 : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_IGR_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_FIB_ACCESS 0xf4301b98
#define L2FE_CLE_EGR_FIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_FIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_FIB_DATA4 0xf4301b9c
#define L2FE_CLE_EGR_FIB_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_inner_vid_0 : 3; /* bits 2:0 */
		ca_uint32_t cl_fib_xr_top_cmd_valid_0 : 1; /* bits 3:3 */
		ca_uint32_t cl_fib_xr_top_vlan_cmd_0 : 2; /* bits 5:4 */
		ca_uint32_t cl_fib_xr_top_sc_ind_0 : 1; /* bits 6:6 */
		ca_uint32_t cl_fib_xr_top_vid_0 : 12; /* bits 18:7 */
		ca_uint32_t cl_fib_xr_pkt_no_drop_0 : 1; /* bits 19:19 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_FIB_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_FIB_DATA3 0xf4301ba0
#define L2FE_CLE_EGR_FIB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_ldpid_0 : 4; /* bits 3:0 */
		ca_uint32_t cl_fib_xr_cos_valid_0 : 1; /* bits 4:4 */
		ca_uint32_t cl_fib_xr_dscp_valid_0 : 1; /* bits 5:5 */
		ca_uint32_t cl_fib_xr_802_1p_valid_0 : 1; /* bits 6:6 */
		ca_uint32_t cl_fib_xr_cos_0 : 3; /* bits 9:7 */
		ca_uint32_t cl_fib_xr_dscp_0 : 6; /* bits 15:10 */
		ca_uint32_t cl_fib_xr_802_1p_0 : 3; /* bits 18:16 */
		ca_uint32_t cl_fib_xr_inner_cmd_valid_0 : 1; /* bits 19:19 */
		ca_uint32_t cl_fib_xr_inner_vlan_cmd_0 : 2; /* bits 21:20 */
		ca_uint32_t cl_fib_xr_inner_sc_ind_0 : 1; /* bits 22:22 */
		ca_uint32_t cl_fib_xr_inner_vid_0 : 9; /* bits 31:23 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_FIB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_FIB_DATA2 0xf4301ba4
#define L2FE_CLE_EGR_FIB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_top_vid_1 : 9; /* bits 8:0 */
		ca_uint32_t cl_fib_xr_pkt_no_drop_1 : 1; /* bits 9:9 */
		ca_uint32_t cl_fib_xr_stp_mode_0 : 2; /* bits 11:10 */
		ca_uint32_t cl_fib_xr_permit_valid_0 : 1; /* bits 12:12 */
		ca_uint32_t cl_fib_xr_permit_0 : 1; /* bits 13:13 */
		ca_uint32_t cl_fib_xr_premarked_0 : 1; /* bits 14:14 */
		ca_uint32_t cl_fib_xr_dscp_markdown_0 : 1; /* bits 15:15 */
		ca_uint32_t cl_fib_xr_mark_en_0 : 1; /* bits 16:16 */
		ca_uint32_t cl_fib_xr_flowid_0 : 12; /* bits 28:17 */
		ca_uint32_t cl_fib_xr_dp_valid_0 : 1; /* bits 29:29 */
		ca_uint32_t cl_fib_xr_ldpid_0 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_FIB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_FIB_DATA1 0xf4301ba8
#define L2FE_CLE_EGR_FIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_dscp_1 : 6; /* bits 5:0 */
		ca_uint32_t cl_fib_xr_802_1p_1 : 3; /* bits 8:6 */
		ca_uint32_t cl_fib_xr_inner_cmd_valid_1 : 1; /* bits 9:9 */
		ca_uint32_t cl_fib_xr_inner_vlan_cmd_1 : 2; /* bits 11:10 */
		ca_uint32_t cl_fib_xr_inner_sc_ind_1 : 1; /* bits 12:12 */
		ca_uint32_t cl_fib_xr_inner_vid_1 : 12; /* bits 24:13 */
		ca_uint32_t cl_fib_xr_top_cmd_valid_1 : 1; /* bits 25:25 */
		ca_uint32_t cl_fib_xr_top_vlan_cmd_1 : 2; /* bits 27:26 */
		ca_uint32_t cl_fib_xr_top_sc_ind_1 : 1; /* bits 28:28 */
		ca_uint32_t cl_fib_xr_top_vid_1 : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_FIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_CLE_EGR_FIB_DATA0 0xf4301bac
#define L2FE_CLE_EGR_FIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_fib_xr_stp_mode_1 : 2; /* bits 1:0 */
		ca_uint32_t cl_fib_xr_permit_valid_1 : 1; /* bits 2:2 */
		ca_uint32_t cl_fib_xr_permit_1 : 1; /* bits 3:3 */
		ca_uint32_t cl_fib_xr_premarked_1 : 1; /* bits 4:4 */
		ca_uint32_t cl_fib_xr_dscp_markdown_1 : 1; /* bits 5:5 */
		ca_uint32_t cl_fib_xr_mark_en_1 : 1; /* bits 6:6 */
		ca_uint32_t cl_fib_xr_flowid_1 : 12; /* bits 18:7 */
		ca_uint32_t cl_fib_xr_dp_valid_1 : 1; /* bits 19:19 */
		ca_uint32_t cl_fib_xr_ldpid_1 : 6; /* bits 25:20 */
		ca_uint32_t cl_fib_xr_cos_valid_1 : 1; /* bits 26:26 */
		ca_uint32_t cl_fib_xr_dscp_valid_1 : 1; /* bits 27:27 */
		ca_uint32_t cl_fib_xr_802_1p_valid_1 : 1; /* bits 28:28 */
		ca_uint32_t cl_fib_xr_cos_1 : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} L2FE_CLE_EGR_FIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CLE */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_CLE_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_CLE_CONFG_STTS1_t CONFG_STTS1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_CLE_CONFG_STTS2_t CONFG_STTS2; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_CLE_DEBUG_t DEBUG; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_CLE_IGR_KEY_ACCESS_t IGR_KEY_ACCESS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_CLE_IGR_KEY_DATA12_t IGR_KEY_DATA12; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_CLE_IGR_KEY_DATA11_t IGR_KEY_DATA11; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_CLE_IGR_KEY_DATA10_t IGR_KEY_DATA10; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_CLE_IGR_KEY_DATA9_t IGR_KEY_DATA9; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_CLE_IGR_KEY_DATA8_t IGR_KEY_DATA8; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_CLE_IGR_KEY_DATA7_t IGR_KEY_DATA7; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_CLE_IGR_KEY_DATA6_t IGR_KEY_DATA6; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_CLE_IGR_KEY_DATA5_t IGR_KEY_DATA5; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_CLE_IGR_KEY_DATA4_t IGR_KEY_DATA4; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_CLE_IGR_KEY_DATA3_t IGR_KEY_DATA3; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_CLE_IGR_KEY_DATA2_t IGR_KEY_DATA2; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_CLE_IGR_KEY_DATA1_t IGR_KEY_DATA1; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_CLE_IGR_KEY_DATA0_t IGR_KEY_DATA0; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_CLE_EGR_KEY_ACCESS_t EGR_KEY_ACCESS; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_CLE_EGR_KEY_DATA12_t EGR_KEY_DATA12; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_CLE_EGR_KEY_DATA11_t EGR_KEY_DATA11; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_CLE_EGR_KEY_DATA10_t EGR_KEY_DATA10; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2FE_CLE_EGR_KEY_DATA9_t EGR_KEY_DATA9; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2FE_CLE_EGR_KEY_DATA8_t EGR_KEY_DATA8; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L2FE_CLE_EGR_KEY_DATA7_t EGR_KEY_DATA7; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L2FE_CLE_EGR_KEY_DATA6_t EGR_KEY_DATA6; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L2FE_CLE_EGR_KEY_DATA5_t EGR_KEY_DATA5; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L2FE_CLE_EGR_KEY_DATA4_t EGR_KEY_DATA4; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L2FE_CLE_EGR_KEY_DATA3_t EGR_KEY_DATA3; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L2FE_CLE_EGR_KEY_DATA2_t EGR_KEY_DATA2; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L2FE_CLE_EGR_KEY_DATA1_t EGR_KEY_DATA1; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L2FE_CLE_EGR_KEY_DATA0_t EGR_KEY_DATA0; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L2FE_CLE_IGR_FIB_ACCESS_t IGR_FIB_ACCESS; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L2FE_CLE_IGR_FIB_DATA4_t IGR_FIB_DATA4; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L2FE_CLE_IGR_FIB_DATA3_t IGR_FIB_DATA3; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L2FE_CLE_IGR_FIB_DATA2_t IGR_FIB_DATA2; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L2FE_CLE_IGR_FIB_DATA1_t IGR_FIB_DATA1; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L2FE_CLE_IGR_FIB_DATA0_t IGR_FIB_DATA0; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L2FE_CLE_EGR_FIB_ACCESS_t EGR_FIB_ACCESS; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L2FE_CLE_EGR_FIB_DATA4_t EGR_FIB_DATA4; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L2FE_CLE_EGR_FIB_DATA3_t EGR_FIB_DATA3; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L2FE_CLE_EGR_FIB_DATA2_t EGR_FIB_DATA2; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L2FE_CLE_EGR_FIB_DATA1_t EGR_FIB_DATA1; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L2FE_CLE_EGR_FIB_DATA0_t EGR_FIB_DATA0; /* addr: 0x000000ac */
} APB0_L2FE_CLE_t;
#endif /* !__ASSEMBLER__ */

/*
 * L2E
 */

#define L2FE_L2E_CTRL 0xf4301c00
#define L2FE_L2E_CTRL_dft 0x1ca00ff9

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aging_en : 1; /* bits 0:0 */
		ca_uint32_t tmp_entry_aging_dis : 1; /* bits 1:1 */
		ca_uint32_t aging_mode : 1; /* bits 2:2 */
		ca_uint32_t aging_start_val : 8; /* bits 10:3 */
		ca_uint32_t st_move_en : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t st_mv_window : 9; /* bits 21:13 */
		ca_uint32_t lrn_dis : 1; /* bits 22:22 */
		ca_uint32_t lrn_mode : 2; /* bits 24:23 */
		ca_uint32_t hash_collision_overwrite : 1; /* bits 25:25 */
		ca_uint32_t hashing_mode : 2; /* bits 27:26 */
		ca_uint32_t da_deny_dnt_lrn : 1; /* bits 28:28 */
		ca_uint32_t ovfl_entries_rcyc_en : 1; /* bits 29:29 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t cpu_opt_mode : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_AGING_CTRL 0xf4301c04
#define L2FE_L2E_AGING_CTRL_dft 0x77b0012c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aging_out_time : 19; /* bits 18:0 */
		ca_uint32_t cnt_to_1s : 13; /* bits 31:19 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_AGING_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_SW_AGING_CPT_ENTRY_3 0xf4301c08
#define L2FE_L2E_SW_AGING_CPT_ENTRY_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_SW_AGING_CPT_ENTRY_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_SW_AGING_CPT_ENTRY_2 0xf4301c0c
#define L2FE_L2E_SW_AGING_CPT_ENTRY_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_SW_AGING_CPT_ENTRY_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_SW_AGING_CPT_ENTRY_1 0xf4301c10
#define L2FE_L2E_SW_AGING_CPT_ENTRY_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_SW_AGING_CPT_ENTRY_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_SW_AGING_CPT_ENTRY_0 0xf4301c14
#define L2FE_L2E_SW_AGING_CPT_ENTRY_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_SW_AGING_CPT_ENTRY_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_CPU_CMD_WORD4 0xf4301c18
#define L2FE_L2E_FDB_CPU_CMD_WORD4_dft 0x00007fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t word : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_CPU_CMD_WORD4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_CPU_CMD_WORD3 0xf4301c1c
#define L2FE_L2E_FDB_CPU_CMD_WORD3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t word : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_CPU_CMD_WORD3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_CPU_CMD_WORD2 0xf4301c20
#define L2FE_L2E_FDB_CPU_CMD_WORD2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t word : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_CPU_CMD_WORD2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_CPU_CMD_WORD1 0xf4301c24
#define L2FE_L2E_FDB_CPU_CMD_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t word : 27; /* bits 26:0 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_CPU_CMD_WORD1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_CPU_CMD_WORD0 0xf4301c28
#define L2FE_L2E_FDB_CPU_CMD_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t word : 27; /* bits 26:0 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_CPU_CMD_WORD0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_CMD_RETURN 0xf4301c2c
#define L2FE_L2E_FDB_CMD_RETURN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 4; /* bits 3:0 */
		ca_uint32_t ext_status : 13; /* bits 16:4 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_CMD_RETURN_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_CNT_CMD_RETURN 0xf4301c30
#define L2FE_L2E_CNT_CMD_RETURN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_CNT_CMD_RETURN_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_PORT_MAC_CNT_STTS_0 0xf4301c34
#define L2FE_L2E_PORT_MAC_CNT_STTS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t underflow_0 : 1; /* bits 0:0 */
		ca_uint32_t underflow_1 : 1; /* bits 1:1 */
		ca_uint32_t underflow_2 : 1; /* bits 2:2 */
		ca_uint32_t underflow_3 : 1; /* bits 3:3 */
		ca_uint32_t underflow_4 : 1; /* bits 4:4 */
		ca_uint32_t underflow_5 : 1; /* bits 5:5 */
		ca_uint32_t underflow_6 : 1; /* bits 6:6 */
		ca_uint32_t underflow_7 : 1; /* bits 7:7 */
		ca_uint32_t underflow_8 : 1; /* bits 8:8 */
		ca_uint32_t underflow_9 : 1; /* bits 9:9 */
		ca_uint32_t underflow_10 : 1; /* bits 10:10 */
		ca_uint32_t underflow_11 : 1; /* bits 11:11 */
		ca_uint32_t underflow_12 : 1; /* bits 12:12 */
		ca_uint32_t underflow_13 : 1; /* bits 13:13 */
		ca_uint32_t underflow_14 : 1; /* bits 14:14 */
		ca_uint32_t underflow_15 : 1; /* bits 15:15 */
		ca_uint32_t underflow_16 : 1; /* bits 16:16 */
		ca_uint32_t underflow_17 : 1; /* bits 17:17 */
		ca_uint32_t underflow_18 : 1; /* bits 18:18 */
		ca_uint32_t underflow_19 : 1; /* bits 19:19 */
		ca_uint32_t underflow_20 : 1; /* bits 20:20 */
		ca_uint32_t underflow_21 : 1; /* bits 21:21 */
		ca_uint32_t underflow_22 : 1; /* bits 22:22 */
		ca_uint32_t underflow_23 : 1; /* bits 23:23 */
		ca_uint32_t underflow_24 : 1; /* bits 24:24 */
		ca_uint32_t underflow_25 : 1; /* bits 25:25 */
		ca_uint32_t underflow_26 : 1; /* bits 26:26 */
		ca_uint32_t underflow_27 : 1; /* bits 27:27 */
		ca_uint32_t underflow_28 : 1; /* bits 28:28 */
		ca_uint32_t underflow_29 : 1; /* bits 29:29 */
		ca_uint32_t underflow_30 : 1; /* bits 30:30 */
		ca_uint32_t underflow_31 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_PORT_MAC_CNT_STTS_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_PORT_MAC_CNT_STTS_1 0xf4301c38
#define L2FE_L2E_PORT_MAC_CNT_STTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t underflow_0 : 1; /* bits 0:0 */
		ca_uint32_t underflow_1 : 1; /* bits 1:1 */
		ca_uint32_t underflow_2 : 1; /* bits 2:2 */
		ca_uint32_t underflow_3 : 1; /* bits 3:3 */
		ca_uint32_t underflow_4 : 1; /* bits 4:4 */
		ca_uint32_t underflow_5 : 1; /* bits 5:5 */
		ca_uint32_t underflow_6 : 1; /* bits 6:6 */
		ca_uint32_t underflow_7 : 1; /* bits 7:7 */
		ca_uint32_t underflow_8 : 1; /* bits 8:8 */
		ca_uint32_t underflow_9 : 1; /* bits 9:9 */
		ca_uint32_t underflow_10 : 1; /* bits 10:10 */
		ca_uint32_t underflow_11 : 1; /* bits 11:11 */
		ca_uint32_t underflow_12 : 1; /* bits 12:12 */
		ca_uint32_t underflow_13 : 1; /* bits 13:13 */
		ca_uint32_t underflow_14 : 1; /* bits 14:14 */
		ca_uint32_t underflow_15 : 1; /* bits 15:15 */
		ca_uint32_t underflow_16 : 1; /* bits 16:16 */
		ca_uint32_t underflow_17 : 1; /* bits 17:17 */
		ca_uint32_t underflow_18 : 1; /* bits 18:18 */
		ca_uint32_t underflow_19 : 1; /* bits 19:19 */
		ca_uint32_t underflow_20 : 1; /* bits 20:20 */
		ca_uint32_t underflow_21 : 1; /* bits 21:21 */
		ca_uint32_t underflow_22 : 1; /* bits 22:22 */
		ca_uint32_t underflow_23 : 1; /* bits 23:23 */
		ca_uint32_t underflow_24 : 1; /* bits 24:24 */
		ca_uint32_t underflow_25 : 1; /* bits 25:25 */
		ca_uint32_t underflow_26 : 1; /* bits 26:26 */
		ca_uint32_t underflow_27 : 1; /* bits 27:27 */
		ca_uint32_t underflow_28 : 1; /* bits 28:28 */
		ca_uint32_t underflow_29 : 1; /* bits 29:29 */
		ca_uint32_t underflow_30 : 1; /* bits 30:30 */
		ca_uint32_t underflow_31 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_PORT_MAC_CNT_STTS_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0 0xf4301c3c
#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t excd_0 : 1; /* bits 0:0 */
		ca_uint32_t excd_1 : 1; /* bits 1:1 */
		ca_uint32_t excd_2 : 1; /* bits 2:2 */
		ca_uint32_t excd_3 : 1; /* bits 3:3 */
		ca_uint32_t excd_4 : 1; /* bits 4:4 */
		ca_uint32_t excd_5 : 1; /* bits 5:5 */
		ca_uint32_t excd_6 : 1; /* bits 6:6 */
		ca_uint32_t excd_7 : 1; /* bits 7:7 */
		ca_uint32_t excd_8 : 1; /* bits 8:8 */
		ca_uint32_t excd_9 : 1; /* bits 9:9 */
		ca_uint32_t excd_10 : 1; /* bits 10:10 */
		ca_uint32_t excd_11 : 1; /* bits 11:11 */
		ca_uint32_t excd_12 : 1; /* bits 12:12 */
		ca_uint32_t excd_13 : 1; /* bits 13:13 */
		ca_uint32_t excd_14 : 1; /* bits 14:14 */
		ca_uint32_t excd_15 : 1; /* bits 15:15 */
		ca_uint32_t excd_16 : 1; /* bits 16:16 */
		ca_uint32_t excd_17 : 1; /* bits 17:17 */
		ca_uint32_t excd_18 : 1; /* bits 18:18 */
		ca_uint32_t excd_19 : 1; /* bits 19:19 */
		ca_uint32_t excd_20 : 1; /* bits 20:20 */
		ca_uint32_t excd_21 : 1; /* bits 21:21 */
		ca_uint32_t excd_22 : 1; /* bits 22:22 */
		ca_uint32_t excd_23 : 1; /* bits 23:23 */
		ca_uint32_t excd_24 : 1; /* bits 24:24 */
		ca_uint32_t excd_25 : 1; /* bits 25:25 */
		ca_uint32_t excd_26 : 1; /* bits 26:26 */
		ca_uint32_t excd_27 : 1; /* bits 27:27 */
		ca_uint32_t excd_28 : 1; /* bits 28:28 */
		ca_uint32_t excd_29 : 1; /* bits 29:29 */
		ca_uint32_t excd_30 : 1; /* bits 30:30 */
		ca_uint32_t excd_31 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1 0xf4301c40
#define L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t excd_0 : 1; /* bits 0:0 */
		ca_uint32_t excd_1 : 1; /* bits 1:1 */
		ca_uint32_t excd_2 : 1; /* bits 2:2 */
		ca_uint32_t excd_3 : 1; /* bits 3:3 */
		ca_uint32_t excd_4 : 1; /* bits 4:4 */
		ca_uint32_t excd_5 : 1; /* bits 5:5 */
		ca_uint32_t excd_6 : 1; /* bits 6:6 */
		ca_uint32_t excd_7 : 1; /* bits 7:7 */
		ca_uint32_t excd_8 : 1; /* bits 8:8 */
		ca_uint32_t excd_9 : 1; /* bits 9:9 */
		ca_uint32_t excd_10 : 1; /* bits 10:10 */
		ca_uint32_t excd_11 : 1; /* bits 11:11 */
		ca_uint32_t excd_12 : 1; /* bits 12:12 */
		ca_uint32_t excd_13 : 1; /* bits 13:13 */
		ca_uint32_t excd_14 : 1; /* bits 14:14 */
		ca_uint32_t excd_15 : 1; /* bits 15:15 */
		ca_uint32_t excd_16 : 1; /* bits 16:16 */
		ca_uint32_t excd_17 : 1; /* bits 17:17 */
		ca_uint32_t excd_18 : 1; /* bits 18:18 */
		ca_uint32_t excd_19 : 1; /* bits 19:19 */
		ca_uint32_t excd_20 : 1; /* bits 20:20 */
		ca_uint32_t excd_21 : 1; /* bits 21:21 */
		ca_uint32_t excd_22 : 1; /* bits 22:22 */
		ca_uint32_t excd_23 : 1; /* bits 23:23 */
		ca_uint32_t excd_24 : 1; /* bits 24:24 */
		ca_uint32_t excd_25 : 1; /* bits 25:25 */
		ca_uint32_t excd_26 : 1; /* bits 26:26 */
		ca_uint32_t excd_27 : 1; /* bits 27:27 */
		ca_uint32_t excd_28 : 1; /* bits 28:28 */
		ca_uint32_t excd_29 : 1; /* bits 29:29 */
		ca_uint32_t excd_30 : 1; /* bits 30:30 */
		ca_uint32_t excd_31 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_HASH_CLLSN_STTS 0xf4301c44
#define L2FE_L2E_HASH_CLLSN_STTS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cllsn_det : 1; /* bits 0:0 */
		ca_uint32_t cllsn_addr : 9; /* bits 9:1 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_HASH_CLLSN_STTS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_L2E_LRN_STS 0xf4301c48
#define L2FE_L2E_L2E_LRN_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t loop_det : 1; /* bits 0:0 */
		ca_uint32_t hit_tmp_entry_sm : 1; /* bits 1:1 */
		ca_uint32_t hit_static_entry_sm : 1; /* bits 2:2 */
		ca_uint32_t hit_sm_entry_sm : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_L2E_LRN_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_SW_AGING_REPORT_FIFO_STTS 0xf4301c4c
#define L2FE_L2E_SW_AGING_REPORT_FIFO_STTS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cpt_entry_flg : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t cnt : 4; /* bits 7:4 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_SW_AGING_REPORT_FIFO_STTS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_POINTER_FF_STS_REG 0xf4301c50
#define L2FE_L2E_POINTER_FF_STS_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t overflow_ind : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_POINTER_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_POINTER_FF_CNT 0xf4301c54
#define L2FE_L2E_POINTER_FF_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_POINTER_FF_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_STS_REG 0xf4301c58
#define L2FE_L2E_INFO_FF_STS_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t overflow_ind : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_0 0xf4301c5c
#define L2FE_L2E_INFO_FF_CNT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_1 0xf4301c60
#define L2FE_L2E_INFO_FF_CNT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_2 0xf4301c64
#define L2FE_L2E_INFO_FF_CNT_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_3 0xf4301c68
#define L2FE_L2E_INFO_FF_CNT_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_4 0xf4301c6c
#define L2FE_L2E_INFO_FF_CNT_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_5 0xf4301c70
#define L2FE_L2E_INFO_FF_CNT_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_5_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_6 0xf4301c74
#define L2FE_L2E_INFO_FF_CNT_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_6_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_7 0xf4301c78
#define L2FE_L2E_INFO_FF_CNT_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_7_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_8 0xf4301c7c
#define L2FE_L2E_INFO_FF_CNT_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_8_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_9 0xf4301c80
#define L2FE_L2E_INFO_FF_CNT_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_9_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_10 0xf4301c84
#define L2FE_L2E_INFO_FF_CNT_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_10_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_11 0xf4301c88
#define L2FE_L2E_INFO_FF_CNT_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_11_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_12 0xf4301c8c
#define L2FE_L2E_INFO_FF_CNT_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_12_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_13 0xf4301c90
#define L2FE_L2E_INFO_FF_CNT_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_13_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_14 0xf4301c94
#define L2FE_L2E_INFO_FF_CNT_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_14_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_INFO_FF_CNT_15 0xf4301c98
#define L2FE_L2E_INFO_FF_CNT_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_INFO_FF_CNT_15_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_L3FE_RFSH_STS 0xf4301c9c
#define L2FE_L2E_L3FE_RFSH_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rfsh_entry_ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_L3FE_RFSH_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_DEBUG_BUS 0xf4301ca0
#define L2FE_L2E_DEBUG_BUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_DEBUG_BUS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_ACCESS 0xf4301ca4
#define L2FE_L2E_FDB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_DATA3 0xf4301ca8
#define L2FE_L2E_FDB_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_DATA2 0xf4301cac
#define L2FE_L2E_FDB_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_DATA1 0xf4301cb0
#define L2FE_L2E_FDB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lrned_vid : 3; /* bits 2:0 */
		ca_uint32_t key_dot1p : 3; /* bits 5:3 */
		ca_uint32_t key_scind : 1; /* bits 6:6 */
		ca_uint32_t key_vid : 12; /* bits 18:7 */
		ca_uint32_t mac_addr : 13; /* bits 31:19 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_FDB_DATA0 0xf4301cb4
#define L2FE_L2E_FDB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mcgid : 10; /* bits 9:0 */
		ca_uint32_t mc_flag : 1; /* bits 10:10 */
		ca_uint32_t aging_sts : 8; /* bits 18:11 */
		ca_uint32_t is_static : 1; /* bits 19:19 */
		ca_uint32_t da_permit : 1; /* bits 20:20 */
		ca_uint32_t sa_permit : 1; /* bits 21:21 */
		ca_uint32_t lrned_scind : 1; /* bits 22:22 */
		ca_uint32_t lrned_vid : 9; /* bits 31:23 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_FDB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS 0xf4301cb8
#define L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_PORT_MAC_CNT_LMT_DATA 0xf4301cbc
#define L2FE_L2E_PORT_MAC_CNT_LMT_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t val : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_PORT_MAC_CNT_LMT_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_L2E_AGING_CTRL_EXT 0xf4301cc0
#define L2FE_L2E_AGING_CTRL_EXT_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sw_lrn_aging_start_val : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2FE_L2E_AGING_CTRL_EXT_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L2E */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_L2E_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_L2E_AGING_CTRL_t AGING_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_L2E_SW_AGING_CPT_ENTRY_3_t SW_AGING_CPT_ENTRY_3; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_L2E_SW_AGING_CPT_ENTRY_2_t SW_AGING_CPT_ENTRY_2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_L2E_SW_AGING_CPT_ENTRY_1_t SW_AGING_CPT_ENTRY_1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_L2E_SW_AGING_CPT_ENTRY_0_t SW_AGING_CPT_ENTRY_0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_L2E_FDB_CPU_CMD_WORD4_t FDB_CPU_CMD_WORD4; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_L2E_FDB_CPU_CMD_WORD3_t FDB_CPU_CMD_WORD3; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_L2E_FDB_CPU_CMD_WORD2_t FDB_CPU_CMD_WORD2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_L2E_FDB_CPU_CMD_WORD1_t FDB_CPU_CMD_WORD1; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_L2E_FDB_CPU_CMD_WORD0_t FDB_CPU_CMD_WORD0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_L2E_FDB_CMD_RETURN_t FDB_CMD_RETURN; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_L2E_CNT_CMD_RETURN_t CNT_CMD_RETURN; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_L2E_PORT_MAC_CNT_STTS_0_t PORT_MAC_CNT_STTS_0; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_L2E_PORT_MAC_CNT_STTS_1_t PORT_MAC_CNT_STTS_1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_L2E_PORT_MAC_LMT_CHK_STTS_0_t
	  PORT_MAC_LMT_CHK_STTS_0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_L2E_PORT_MAC_LMT_CHK_STTS_1_t
	  PORT_MAC_LMT_CHK_STTS_1; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_L2E_HASH_CLLSN_STTS_t HASH_CLLSN_STTS; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_L2E_L2E_LRN_STS_t L2E_LRN_STS; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_L2E_SW_AGING_REPORT_FIFO_STTS_t
	  SW_AGING_REPORT_FIFO_STTS; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_L2E_POINTER_FF_STS_REG_t POINTER_FF_STS_REG; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2FE_L2E_POINTER_FF_CNT_t POINTER_FF_CNT; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2FE_L2E_INFO_FF_STS_REG_t INFO_FF_STS_REG; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2FE_L2E_INFO_FF_CNT_0_t INFO_FF_CNT_0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L2FE_L2E_INFO_FF_CNT_1_t INFO_FF_CNT_1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L2FE_L2E_INFO_FF_CNT_2_t INFO_FF_CNT_2; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L2FE_L2E_INFO_FF_CNT_3_t INFO_FF_CNT_3; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L2FE_L2E_INFO_FF_CNT_4_t INFO_FF_CNT_4; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L2FE_L2E_INFO_FF_CNT_5_t INFO_FF_CNT_5; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L2FE_L2E_INFO_FF_CNT_6_t INFO_FF_CNT_6; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L2FE_L2E_INFO_FF_CNT_7_t INFO_FF_CNT_7; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L2FE_L2E_INFO_FF_CNT_8_t INFO_FF_CNT_8; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L2FE_L2E_INFO_FF_CNT_9_t INFO_FF_CNT_9; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L2FE_L2E_INFO_FF_CNT_10_t INFO_FF_CNT_10; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L2FE_L2E_INFO_FF_CNT_11_t INFO_FF_CNT_11; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L2FE_L2E_INFO_FF_CNT_12_t INFO_FF_CNT_12; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L2FE_L2E_INFO_FF_CNT_13_t INFO_FF_CNT_13; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L2FE_L2E_INFO_FF_CNT_14_t INFO_FF_CNT_14; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L2FE_L2E_INFO_FF_CNT_15_t INFO_FF_CNT_15; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L2FE_L2E_L3FE_RFSH_STS_t L3FE_RFSH_STS; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L2FE_L2E_DEBUG_BUS_t DEBUG_BUS; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L2FE_L2E_FDB_ACCESS_t FDB_ACCESS; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L2FE_L2E_FDB_DATA3_t FDB_DATA3; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L2FE_L2E_FDB_DATA2_t FDB_DATA2; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	L2FE_L2E_FDB_DATA1_t FDB_DATA1; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	L2FE_L2E_FDB_DATA0_t FDB_DATA0; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	L2FE_L2E_PORT_MAC_CNT_LMT_ACCESS_t
	  PORT_MAC_CNT_LMT_ACCESS; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	L2FE_L2E_PORT_MAC_CNT_LMT_DATA_t PORT_MAC_CNT_LMT_DATA; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	L2FE_L2E_AGING_CTRL_EXT_t AGING_CTRL_EXT; /* addr: 0x000000c0 */
} APB0_L2FE_L2E_t;
#endif /* !__ASSEMBLER__ */

/*
 * IM3E
 */

#define L2FE_IM3E_CTRL 0xf4301e00
#define L2FE_IM3E_CTRL_dft 0x00000024

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t da_use_l2_addr : 1; /* bits 0:0 */
		ca_uint32_t sa_use_l2_addr : 1; /* bits 1:1 */
		ca_uint32_t use_l3mc_lkup : 1; /* bits 2:2 */
		ca_uint32_t igmp_no_vlan_srch : 1; /* bits 3:3 */
		ca_uint32_t mld_no_vlan_srch : 1; /* bits 4:4 */
		ca_uint32_t mcu_oprt_mode : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_TBL_INDRCT_ACCESS 0xf4301e04
#define L2FE_IM3E_MLDDA_TBL_INDRCT_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vld_entries_num : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_TBL_INDRCT_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_TBL_INDRCT_ACCESS 0xf4301e08
#define L2FE_IM3E_MLDSA_TBL_INDRCT_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vld_entries_num : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_TBL_INDRCT_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_STTS1 0xf4301e0c
#define L2FE_IM3E_STTS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t da_cmd_oprt_incmpted : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_STTS1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_STTS2 0xf4301e10
#define L2FE_IM3E_STTS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sa_cmd_oprt_incmpted : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_STTS2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_DEBUG 0xf4301e14
#define L2FE_IM3E_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bus_sel : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_DEBUG_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_ACCESS 0xf4301e18
#define L2FE_IM3E_MLDDA_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_DATA5 0xf4301e1c
#define L2FE_IM3E_MLDDA_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vid : 1; /* bits 0:0 */
		ca_uint32_t vlan_sc_ind : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_DATA4 0xf4301e20
#define L2FE_IM3E_MLDDA_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ip_da : 20; /* bits 19:0 */
		ca_uint32_t ipv6_flg : 1; /* bits 20:20 */
		ca_uint32_t vid : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_DATA3 0xf4301e24
#define L2FE_IM3E_MLDDA_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ip_da : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_DATA2 0xf4301e28
#define L2FE_IM3E_MLDDA_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ip_da : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_DATA1 0xf4301e2c
#define L2FE_IM3E_MLDDA_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ip_da : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDDA_DATA0 0xf4301e30
#define L2FE_IM3E_MLDDA_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry_valid : 1; /* bits 0:0 */
		ca_uint32_t mc_group_id : 10; /* bits 10:1 */
		ca_uint32_t v3_ind : 1; /* bits 11:11 */
		ca_uint32_t connection_id : 8; /* bits 19:12 */
		ca_uint32_t ip_da : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDDA_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_ACCESS 0xf4301e34
#define L2FE_IM3E_MLDSA_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_DATA4 0xf4301e38
#define L2FE_IM3E_MLDSA_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv6_sa : 11; /* bits 10:0 */
		ca_uint32_t connection_id : 8; /* bits 18:11 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_DATA3 0xf4301e3c
#define L2FE_IM3E_MLDSA_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv6_sa : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_DATA2 0xf4301e40
#define L2FE_IM3E_MLDSA_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv6_sa : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_DATA1 0xf4301e44
#define L2FE_IM3E_MLDSA_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv6_sa : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_IM3E_MLDSA_DATA0 0xf4301e48
#define L2FE_IM3E_MLDSA_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry_valid : 1; /* bits 0:0 */
		ca_uint32_t mc_group_id : 10; /* bits 10:1 */
		ca_uint32_t ipv6_sa : 21; /* bits 31:11 */
	} bf;
	ca_uint32_t wrd;
} L2FE_IM3E_MLDSA_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* IM3E */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_IM3E_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_IM3E_MLDDA_TBL_INDRCT_ACCESS_t
	  MLDDA_TBL_INDRCT_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_IM3E_MLDSA_TBL_INDRCT_ACCESS_t
	  MLDSA_TBL_INDRCT_ACCESS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_IM3E_STTS1_t STTS1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_IM3E_STTS2_t STTS2; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_IM3E_DEBUG_t DEBUG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_IM3E_MLDDA_ACCESS_t MLDDA_ACCESS; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_IM3E_MLDDA_DATA5_t MLDDA_DATA5; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_IM3E_MLDDA_DATA4_t MLDDA_DATA4; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_IM3E_MLDDA_DATA3_t MLDDA_DATA3; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_IM3E_MLDDA_DATA2_t MLDDA_DATA2; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_IM3E_MLDDA_DATA1_t MLDDA_DATA1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_IM3E_MLDDA_DATA0_t MLDDA_DATA0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_IM3E_MLDSA_ACCESS_t MLDSA_ACCESS; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_IM3E_MLDSA_DATA4_t MLDSA_DATA4; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_IM3E_MLDSA_DATA3_t MLDSA_DATA3; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_IM3E_MLDSA_DATA2_t MLDSA_DATA2; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_IM3E_MLDSA_DATA1_t MLDSA_DATA1; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_IM3E_MLDSA_DATA0_t MLDSA_DATA0; /* addr: 0x00000048 */
} APB0_L2FE_IM3E_t;
#endif /* !__ASSEMBLER__ */

/*
 * MIRE
 */

#define L2FE_MIRE_MIR_CTRL 0xf4301f00
#define L2FE_MIRE_MIR_CTRL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_drop_src_mir_en : 1; /* bits 0:0 */
		ca_uint32_t pkt_keep_old : 1; /* bits 1:1 */
		ca_uint32_t lspid_remap : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_RULE_SSID_0 0xf4301f04
#define L2FE_MIRE_MIR_RULE_SSID_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flowid : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t lspid : 6; /* bits 21:16 */
		ca_uint32_t mode : 3; /* bits 24:22 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_RULE_SSID_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_RULE_SSID_1 0xf4301f08
#define L2FE_MIRE_MIR_RULE_SSID_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flowid : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t lspid : 6; /* bits 21:16 */
		ca_uint32_t mode : 3; /* bits 24:22 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_RULE_SSID_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_RULE_SSID_2 0xf4301f0c
#define L2FE_MIRE_MIR_RULE_SSID_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flowid : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t lspid : 6; /* bits 21:16 */
		ca_uint32_t mode : 3; /* bits 24:22 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_RULE_SSID_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_RULE_SSID_3 0xf4301f10
#define L2FE_MIRE_MIR_RULE_SSID_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flowid : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t lspid : 6; /* bits 21:16 */
		ca_uint32_t mode : 3; /* bits 24:22 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_RULE_SSID_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_0_SSID_0 0xf4301f14
#define L2FE_MIRE_MIR_ACT_0_SSID_0_dft 0x0000433a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lspid : 6; /* bits 5:0 */
		ca_uint32_t pspid : 4; /* bits 9:6 */
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_0_SSID_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_0_SSID_1 0xf4301f18
#define L2FE_MIRE_MIR_ACT_0_SSID_1_dft 0x0000437b

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lspid : 6; /* bits 5:0 */
		ca_uint32_t pspid : 4; /* bits 9:6 */
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_0_SSID_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_0_SSID_2 0xf4301f1c
#define L2FE_MIRE_MIR_ACT_0_SSID_2_dft 0x000043bc

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lspid : 6; /* bits 5:0 */
		ca_uint32_t pspid : 4; /* bits 9:6 */
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_0_SSID_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_0_SSID_3 0xf4301f20
#define L2FE_MIRE_MIR_ACT_0_SSID_3_dft 0x000043fd

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lspid : 6; /* bits 5:0 */
		ca_uint32_t pspid : 4; /* bits 9:6 */
		ca_uint32_t ldpid : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_0_SSID_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_1_SSID_0 0xf4301f24
#define L2FE_MIRE_MIR_ACT_1_SSID_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dot1p : 3; /* bits 2:0 */
		ca_uint32_t sc_ind : 1; /* bits 3:3 */
		ca_uint32_t vid : 12; /* bits 15:4 */
		ca_uint32_t vlan_cmd : 1; /* bits 16:16 */
		ca_uint32_t cos_vld : 1; /* bits 17:17 */
		ca_uint32_t cos : 3; /* bits 20:18 */
		ca_uint32_t sv_tpid_sel : 2; /* bits 22:21 */
		ca_uint32_t cv_tpid_sel : 2; /* bits 24:23 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_1_SSID_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_1_SSID_1 0xf4301f28
#define L2FE_MIRE_MIR_ACT_1_SSID_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dot1p : 3; /* bits 2:0 */
		ca_uint32_t sc_ind : 1; /* bits 3:3 */
		ca_uint32_t vid : 12; /* bits 15:4 */
		ca_uint32_t vlan_cmd : 1; /* bits 16:16 */
		ca_uint32_t cos_vld : 1; /* bits 17:17 */
		ca_uint32_t cos : 3; /* bits 20:18 */
		ca_uint32_t sv_tpid_sel : 2; /* bits 22:21 */
		ca_uint32_t cv_tpid_sel : 2; /* bits 24:23 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_1_SSID_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_1_SSID_2 0xf4301f2c
#define L2FE_MIRE_MIR_ACT_1_SSID_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dot1p : 3; /* bits 2:0 */
		ca_uint32_t sc_ind : 1; /* bits 3:3 */
		ca_uint32_t vid : 12; /* bits 15:4 */
		ca_uint32_t vlan_cmd : 1; /* bits 16:16 */
		ca_uint32_t cos_vld : 1; /* bits 17:17 */
		ca_uint32_t cos : 3; /* bits 20:18 */
		ca_uint32_t sv_tpid_sel : 2; /* bits 22:21 */
		ca_uint32_t cv_tpid_sel : 2; /* bits 24:23 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_1_SSID_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_ACT_1_SSID_3 0xf4301f30
#define L2FE_MIRE_MIR_ACT_1_SSID_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dot1p : 3; /* bits 2:0 */
		ca_uint32_t sc_ind : 1; /* bits 3:3 */
		ca_uint32_t vid : 12; /* bits 15:4 */
		ca_uint32_t vlan_cmd : 1; /* bits 16:16 */
		ca_uint32_t cos_vld : 1; /* bits 17:17 */
		ca_uint32_t cos : 3; /* bits 20:18 */
		ca_uint32_t sv_tpid_sel : 2; /* bits 22:21 */
		ca_uint32_t cv_tpid_sel : 2; /* bits 24:23 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_ACT_1_SSID_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_STTS_0 0xf4301f34
#define L2FE_MIRE_MIR_STTS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pspid_vld : 1; /* bits 0:0 */
		ca_uint32_t pspid : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_STTS_0_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_STTS_1 0xf4301f38
#define L2FE_MIRE_MIR_STTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pspid_vld : 1; /* bits 0:0 */
		ca_uint32_t pspid : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_STTS_1_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_STTS_2 0xf4301f3c
#define L2FE_MIRE_MIR_STTS_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pspid_vld : 1; /* bits 0:0 */
		ca_uint32_t pspid : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_STTS_2_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_MIR_STTS_3 0xf4301f40
#define L2FE_MIRE_MIR_STTS_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pspid_vld : 1; /* bits 0:0 */
		ca_uint32_t pspid : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_MIR_STTS_3_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_PINGPONG_STS 0xf4301f44
#define L2FE_MIRE_PINGPONG_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_PINGPONG_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_DATA_FIFO_CNT 0xf4301f48
#define L2FE_MIRE_DATA_FIFO_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry_cnt : 7; /* bits 6:0 */
		ca_uint32_t seg_cnt : 4; /* bits 10:7 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t extra_store_cnt : 2; /* bits 17:16 */
		ca_uint32_t data_ltched : 1; /* bits 18:18 */
		ca_uint32_t rsrvd2 : 13;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_DATA_FIFO_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_DATA_FIFO_STTS 0xf4301f4c
#define L2FE_MIRE_DATA_FIFO_STTS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_DATA_FIFO_STTS_t;
#endif /* !__ASSEMBLER__ */

#define L2FE_MIRE_DEBUG 0xf4301f50
#define L2FE_MIRE_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2FE_MIRE_DEBUG_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MIRE */
#ifndef __ASSEMBLER__
typedef struct {
	L2FE_MIRE_MIR_CTRL_t MIR_CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2FE_MIRE_MIR_RULE_SSID_0_t MIR_RULE_SSID_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2FE_MIRE_MIR_RULE_SSID_1_t MIR_RULE_SSID_1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2FE_MIRE_MIR_RULE_SSID_2_t MIR_RULE_SSID_2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2FE_MIRE_MIR_RULE_SSID_3_t MIR_RULE_SSID_3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2FE_MIRE_MIR_ACT_0_SSID_0_t MIR_ACT_0_SSID_0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2FE_MIRE_MIR_ACT_0_SSID_1_t MIR_ACT_0_SSID_1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2FE_MIRE_MIR_ACT_0_SSID_2_t MIR_ACT_0_SSID_2; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2FE_MIRE_MIR_ACT_0_SSID_3_t MIR_ACT_0_SSID_3; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2FE_MIRE_MIR_ACT_1_SSID_0_t MIR_ACT_1_SSID_0; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2FE_MIRE_MIR_ACT_1_SSID_1_t MIR_ACT_1_SSID_1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2FE_MIRE_MIR_ACT_1_SSID_2_t MIR_ACT_1_SSID_2; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2FE_MIRE_MIR_ACT_1_SSID_3_t MIR_ACT_1_SSID_3; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2FE_MIRE_MIR_STTS_0_t MIR_STTS_0; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2FE_MIRE_MIR_STTS_1_t MIR_STTS_1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2FE_MIRE_MIR_STTS_2_t MIR_STTS_2; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2FE_MIRE_MIR_STTS_3_t MIR_STTS_3; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2FE_MIRE_PINGPONG_STS_t PINGPONG_STS; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2FE_MIRE_DATA_FIFO_CNT_t DATA_FIFO_CNT; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2FE_MIRE_DATA_FIFO_STTS_t DATA_FIFO_STTS; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2FE_MIRE_DEBUG_t DEBUG; /* addr: 0x00000050 */
} APB0_L2FE_MIRE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L2FE */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_L2FE_GLB_t GLB; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[241];
	APB0_L2FE_PP_t PP; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[379];
	APB0_L2FE_PLA_t PLA; /* addr: 0x00000300 */
	ca_uint32_t rsrvd3[239];
	APB0_L2FE_PLC_t PLC; /* addr: 0x00000400 */
	ca_uint32_t rsrvd4[237];
	APB0_L2FE_PLE_t PLE; /* addr: 0x00000500 */
	ca_uint32_t rsrvd5[201];
	APB0_L2FE_ARB_t ARB; /* addr: 0x00000600 */
	ca_uint32_t rsrvd6[213];
	APB0_L2FE_PE_t PE; /* addr: 0x00000700 */
	ca_uint32_t rsrvd7[465];
	APB0_L2FE_LF_t LF; /* addr: 0x00000900 */
	ca_uint32_t rsrvd8[249];
	APB0_L2FE_VE_t VE; /* addr: 0x00000a00 */
	ca_uint32_t rsrvd9[213];
	APB0_L2FE_CLE_t CLE; /* addr: 0x00000b00 */
	ca_uint32_t rsrvd10[169];
	APB0_L2FE_L2E_t L2E; /* addr: 0x00000c00 */
	ca_uint32_t rsrvd11[415];
	APB0_L2FE_IM3E_t IM3E; /* addr: 0x00000e00 */
	ca_uint32_t rsrvd12[219];
	APB0_L2FE_MIRE_t MIRE; /* addr: 0x00000f00 */
} APB0_L2FE_t;
#endif /* !__ASSEMBLER__ */

/*
 * L2TM
 */

/*
 * l2tm_glb
 */

#define L2TM_L2TM_GLB_REV_ID 0xf4302000
#define L2TM_L2TM_GLB_REV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minor : 16; /* bits 15:0 */
		ca_uint32_t major : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_REV_ID_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_GLB_INT 0xf4302004
#define L2TM_L2TM_GLB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bm : 1; /* bits 0:0 */
		ca_uint32_t qm : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_INT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_GLB_INTE 0xf4302008
#define L2TM_L2TM_GLB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bmE : 1; /* bits 0:0 */
		ca_uint32_t qmE : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_GLB_STS 0xf430200c
#define L2TM_L2TM_GLB_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t voqinfo_ram_init_done : 1; /* bits 14:14 */
		ca_uint32_t freeq_ram_init_done : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 14;
		ca_uint32_t idle : 1; /* bits 30:30 */
		ca_uint32_t init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_GLB_CTRL 0xf4302010
#define L2TM_L2TM_GLB_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 31;
		ca_uint32_t cntrcfg_clear_on_read : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_GLB_SPARE_CFG 0xf4302014
#define L2TM_L2TM_GLB_SPARE_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_GLB_SPARE_STS 0xf4302018
#define L2TM_L2TM_GLB_SPARE_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_glb */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TM_GLB_REV_ID_t REV_ID; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TM_GLB_INT_t INT; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TM_GLB_INTE_t INTE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TM_GLB_STS_t STS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TM_GLB_CTRL_t CTRL; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TM_GLB_SPARE_CFG_t SPARE_CFG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TM_GLB_SPARE_STS_t SPARE_STS; /* addr: 0x00000018 */
} APB0_L2TM_L2TM_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2tm_bm
 */

#define L2TM_L2TM_BM_INT 0xf4302100
#define L2TM_L2TM_BM_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sb_drop : 1; /* bits 0:0 */
		ca_uint32_t hdr_drop : 1; /* bits 1:1 */
		ca_uint32_t te_drop : 1; /* bits 2:2 */
		ca_uint32_t wvoqid : 1; /* bits 3:3 */
		ca_uint32_t szerr : 1; /* bits 4:4 */
		ca_uint32_t seglenerr : 1; /* bits 5:5 */
		ca_uint32_t seq_err : 1; /* bits 6:6 */
		ca_uint32_t fc_mirror_drop : 1; /* bits 7:7 */
		ca_uint32_t dq_sb_drop : 1; /* bits 8:8 */
		ca_uint32_t dq_hdr_drop : 1; /* bits 9:9 */
		ca_uint32_t dq_wvoqid : 1; /* bits 10:10 */
		ca_uint32_t dq_szerr : 1; /* bits 11:11 */
		ca_uint32_t dq_seglenerr : 1; /* bits 12:12 */
		ca_uint32_t dq_seq_err : 1; /* bits 13:13 */
		ca_uint32_t dq_ff_undrflo : 1; /* bits 14:14 */
		ca_uint32_t dq_ff_ovrflo : 1; /* bits 15:15 */
		ca_uint32_t dq_pack_ff_undrflo : 1; /* bits 16:16 */
		ca_uint32_t dq_pack_ff_ovrflo : 1; /* bits 17:17 */
		ca_uint32_t fe_ff_undrflo : 1; /* bits 18:18 */
		ca_uint32_t fe_ff_ovrflo : 1; /* bits 19:19 */
		ca_uint32_t pack_ff_undrflo : 1; /* bits 20:20 */
		ca_uint32_t pack_ff_ovrflo : 1; /* bits 21:21 */
		ca_uint32_t wdat_ff_undrflo : 1; /* bits 22:22 */
		ca_uint32_t wdat_ff_ovrflo : 1; /* bits 23:23 */
		ca_uint32_t wcmd_ff_undrflo : 1; /* bits 24:24 */
		ca_uint32_t wcmd_ff_ovrflo : 1; /* bits 25:25 */
		ca_uint32_t rdat_ff_undrflo : 1; /* bits 26:26 */
		ca_uint32_t rdat_ff_ovrflo : 1; /* bits 27:27 */
		ca_uint32_t rcmd_ff_undrflo : 1; /* bits 28:28 */
		ca_uint32_t rcmd_ff_ovrflo : 1; /* bits 29:29 */
		ca_uint32_t rcyc_ff_undrflo : 1; /* bits 30:30 */
		ca_uint32_t rcyc_ff_ovrflo : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_INT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_INTE 0xf4302104
#define L2TM_L2TM_BM_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sb_dropE : 1; /* bits 0:0 */
		ca_uint32_t hdr_dropE : 1; /* bits 1:1 */
		ca_uint32_t te_dropE : 1; /* bits 2:2 */
		ca_uint32_t wvoqidE : 1; /* bits 3:3 */
		ca_uint32_t szerrE : 1; /* bits 4:4 */
		ca_uint32_t seglenerrE : 1; /* bits 5:5 */
		ca_uint32_t seq_errE : 1; /* bits 6:6 */
		ca_uint32_t fc_mirror_dropE : 1; /* bits 7:7 */
		ca_uint32_t dq_sb_dropE : 1; /* bits 8:8 */
		ca_uint32_t dq_hdr_dropE : 1; /* bits 9:9 */
		ca_uint32_t dq_wvoqidE : 1; /* bits 10:10 */
		ca_uint32_t dq_szerrE : 1; /* bits 11:11 */
		ca_uint32_t dq_seglenerrE : 1; /* bits 12:12 */
		ca_uint32_t dq_seq_errE : 1; /* bits 13:13 */
		ca_uint32_t dq_ff_undrfloE : 1; /* bits 14:14 */
		ca_uint32_t dq_ff_ovrfloE : 1; /* bits 15:15 */
		ca_uint32_t dq_pack_ff_undrfloE : 1; /* bits 16:16 */
		ca_uint32_t dq_pack_ff_ovrfloE : 1; /* bits 17:17 */
		ca_uint32_t fe_ff_undrfloE : 1; /* bits 18:18 */
		ca_uint32_t fe_ff_ovrfloE : 1; /* bits 19:19 */
		ca_uint32_t pack_ff_undrfloE : 1; /* bits 20:20 */
		ca_uint32_t pack_ff_ovrfloE : 1; /* bits 21:21 */
		ca_uint32_t wdat_ff_undrfloE : 1; /* bits 22:22 */
		ca_uint32_t wdat_ff_ovrfloE : 1; /* bits 23:23 */
		ca_uint32_t wcmd_ff_undrfloE : 1; /* bits 24:24 */
		ca_uint32_t wcmd_ff_ovrfloE : 1; /* bits 25:25 */
		ca_uint32_t rdat_ff_undrfloE : 1; /* bits 26:26 */
		ca_uint32_t rdat_ff_ovrfloE : 1; /* bits 27:27 */
		ca_uint32_t rcmd_ff_undrfloE : 1; /* bits 28:28 */
		ca_uint32_t rcmd_ff_ovrfloE : 1; /* bits 29:29 */
		ca_uint32_t rcyc_ff_undrfloE : 1; /* bits 30:30 */
		ca_uint32_t rcyc_ff_ovrfloE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_INTE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_CTRL 0xf4302108
#define L2TM_L2TM_BM_CTRL_dft 0xc0000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_drop_cos : 3; /* bits 2:0 */
		ca_uint32_t rx_drop_pid : 4; /* bits 6:3 */
		ca_uint32_t rx_drop_en : 2; /* bits 8:7 */
		ca_uint32_t sb_drop_dis : 1; /* bits 9:9 */
		ca_uint32_t hdr_drop_code_upd_en : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 13;
		ca_uint32_t min_pktlen : 7; /* bits 30:24 */
		ca_uint32_t rx_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP 0xf430210c
#define L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP_dft 0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qsel_0 : 3; /* bits 2:0 */
		ca_uint32_t flag_0 : 1; /* bits 3:3 */
		ca_uint32_t qsel_1 : 3; /* bits 6:4 */
		ca_uint32_t flag_1 : 1; /* bits 7:7 */
		ca_uint32_t qsel_2 : 3; /* bits 10:8 */
		ca_uint32_t flag_2 : 1; /* bits 11:11 */
		ca_uint32_t qsel_3 : 3; /* bits 14:12 */
		ca_uint32_t flag_3 : 1; /* bits 15:15 */
		ca_uint32_t qsel_4 : 3; /* bits 18:16 */
		ca_uint32_t flag_4 : 1; /* bits 19:19 */
		ca_uint32_t qsel_5 : 3; /* bits 22:20 */
		ca_uint32_t flag_5 : 1; /* bits 23:23 */
		ca_uint32_t qsel_6 : 3; /* bits 26:24 */
		ca_uint32_t flag_6 : 1; /* bits 27:27 */
		ca_uint32_t qsel_7 : 3; /* bits 30:28 */
		ca_uint32_t flag_7 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP 0xf4302110
#define L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP_dft 0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qsel_0 : 3; /* bits 2:0 */
		ca_uint32_t flag_0 : 1; /* bits 3:3 */
		ca_uint32_t qsel_1 : 3; /* bits 6:4 */
		ca_uint32_t flag_1 : 1; /* bits 7:7 */
		ca_uint32_t qsel_2 : 3; /* bits 10:8 */
		ca_uint32_t flag_2 : 1; /* bits 11:11 */
		ca_uint32_t qsel_3 : 3; /* bits 14:12 */
		ca_uint32_t flag_3 : 1; /* bits 15:15 */
		ca_uint32_t qsel_4 : 3; /* bits 18:16 */
		ca_uint32_t flag_4 : 1; /* bits 19:19 */
		ca_uint32_t qsel_5 : 3; /* bits 22:20 */
		ca_uint32_t flag_5 : 1; /* bits 23:23 */
		ca_uint32_t qsel_6 : 3; /* bits 26:24 */
		ca_uint32_t flag_6 : 1; /* bits 27:27 */
		ca_uint32_t qsel_7 : 3; /* bits 30:28 */
		ca_uint32_t flag_7 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP 0xf4302114
#define L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP_dft 0x00000076

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qsel_0 : 3; /* bits 2:0 */
		ca_uint32_t flag_0 : 1; /* bits 3:3 */
		ca_uint32_t qsel_1 : 3; /* bits 6:4 */
		ca_uint32_t flag_1 : 1; /* bits 7:7 */
		ca_uint32_t rxpfc_0 : 1; /* bits 8:8 */
		ca_uint32_t rxpfc_1 : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP 0xf4302118
#define L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP_dft 0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qsel_0 : 3; /* bits 2:0 */
		ca_uint32_t flag_0 : 1; /* bits 3:3 */
		ca_uint32_t qsel_1 : 3; /* bits 6:4 */
		ca_uint32_t flag_1 : 1; /* bits 7:7 */
		ca_uint32_t qsel_2 : 3; /* bits 10:8 */
		ca_uint32_t flag_2 : 1; /* bits 11:11 */
		ca_uint32_t qsel_3 : 3; /* bits 14:12 */
		ca_uint32_t flag_3 : 1; /* bits 15:15 */
		ca_uint32_t qsel_4 : 3; /* bits 18:16 */
		ca_uint32_t flag_4 : 1; /* bits 19:19 */
		ca_uint32_t qsel_5 : 3; /* bits 22:20 */
		ca_uint32_t flag_5 : 1; /* bits 23:23 */
		ca_uint32_t qsel_6 : 3; /* bits 26:24 */
		ca_uint32_t flag_6 : 1; /* bits 27:27 */
		ca_uint32_t qsel_7 : 3; /* bits 30:28 */
		ca_uint32_t flag_7 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP 0xf430211c
#define L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP_dft 0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qsel_0 : 3; /* bits 2:0 */
		ca_uint32_t flag_0 : 1; /* bits 3:3 */
		ca_uint32_t qsel_1 : 3; /* bits 6:4 */
		ca_uint32_t flag_1 : 1; /* bits 7:7 */
		ca_uint32_t qsel_2 : 3; /* bits 10:8 */
		ca_uint32_t flag_2 : 1; /* bits 11:11 */
		ca_uint32_t qsel_3 : 3; /* bits 14:12 */
		ca_uint32_t flag_3 : 1; /* bits 15:15 */
		ca_uint32_t qsel_4 : 3; /* bits 18:16 */
		ca_uint32_t flag_4 : 1; /* bits 19:19 */
		ca_uint32_t qsel_5 : 3; /* bits 22:20 */
		ca_uint32_t flag_5 : 1; /* bits 23:23 */
		ca_uint32_t qsel_6 : 3; /* bits 26:24 */
		ca_uint32_t flag_6 : 1; /* bits 27:27 */
		ca_uint32_t qsel_7 : 3; /* bits 30:28 */
		ca_uint32_t flag_7 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP 0xf4302120
#define L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP_dft 0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tm_dpid_sel_0 : 4; /* bits 3:0 */
		ca_uint32_t tm_dpid_sel_1 : 4; /* bits 7:4 */
		ca_uint32_t tm_dpid_sel_2 : 4; /* bits 11:8 */
		ca_uint32_t tm_dpid_sel_3 : 4; /* bits 15:12 */
		ca_uint32_t tm_dpid_sel_4 : 4; /* bits 19:16 */
		ca_uint32_t tm_dpid_sel_5 : 4; /* bits 23:20 */
		ca_uint32_t tm_dpid_sel_6 : 4; /* bits 27:24 */
		ca_uint32_t tm_dpid_sel_7 : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_DQ_PCNT 0xf4302124
#define L2TM_L2TM_BM_RX_DQ_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_DQ_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_DQ_DPCNT 0xf4302128
#define L2TM_L2TM_BM_RX_DQ_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_DQ_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_PCNT 0xf430212c
#define L2TM_L2TM_BM_RX_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TX_PCNT 0xf4302130
#define L2TM_L2TM_BM_TX_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TX_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_SB_DPCNT 0xf4302134
#define L2TM_L2TM_BM_SB_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_SB_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_HDR_DPCNT 0xf4302138
#define L2TM_L2TM_BM_HDR_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_HDR_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TE_DPCNT 0xf430213c
#define L2TM_L2TM_BM_TE_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TE_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_ERR_DPCNT 0xf4302140
#define L2TM_L2TM_BM_ERR_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_ERR_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_FC_MIRROR0_DPCNT 0xf4302144
#define L2TM_L2TM_BM_FC_MIRROR0_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_FC_MIRROR0_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_FC_MIRROR1_DPCNT 0xf4302148
#define L2TM_L2TM_BM_FC_MIRROR1_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_FC_MIRROR1_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_FC_MIRROR2_DPCNT 0xf430214c
#define L2TM_L2TM_BM_FC_MIRROR2_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_FC_MIRROR2_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_FC_MIRROR3_DPCNT 0xf4302150
#define L2TM_L2TM_BM_FC_MIRROR3_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_FC_MIRROR3_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_DPCNT 0xf4302154
#define L2TM_L2TM_BM_RX_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_NOBUF_DPCNT 0xf4302158
#define L2TM_L2TM_BM_NOBUF_DPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_NOBUF_DPCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_FE_HEADER_31_0 0xf430215c
#define L2TM_L2TM_BM_RX_FE_HEADER_31_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_FE_HEADER_31_0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_FE_HEADER_63_32 0xf4302160
#define L2TM_L2TM_BM_RX_FE_HEADER_63_32_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_FE_HEADER_63_32_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_NI_HEADER_31_0 0xf4302164
#define L2TM_L2TM_BM_RX_NI_HEADER_31_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_NI_HEADER_31_0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_RX_NI_HEADER_63_32 0xf4302168
#define L2TM_L2TM_BM_RX_NI_HEADER_63_32_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_RX_NI_HEADER_63_32_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TX_NI_HEADER_31_0 0xf430216c
#define L2TM_L2TM_BM_TX_NI_HEADER_31_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TX_NI_HEADER_31_0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_TX_NI_HEADER_63_32 0xf4302170
#define L2TM_L2TM_BM_TX_NI_HEADER_63_32_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_TX_NI_HEADER_63_32_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_STS 0xf4302174
#define L2TM_L2TM_BM_STS_dft 0xff80000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fe_tm_vld : 1; /* bits 0:0 */
		ca_uint32_t tm_fe_rdy : 1; /* bits 1:1 */
		ca_uint32_t ni_tm_vld : 1; /* bits 2:2 */
		ca_uint32_t tm_ni_rdy : 1; /* bits 3:3 */
		ca_uint32_t tm_ni_vld : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 18;
		ca_uint32_t dq_ff_empty : 1; /* bits 23:23 */
		ca_uint32_t dq_pack_ff_empty : 1; /* bits 24:24 */
		ca_uint32_t fe_ff_empty : 1; /* bits 25:25 */
		ca_uint32_t pack_ff_empty : 1; /* bits 26:26 */
		ca_uint32_t wdat_ff_empty : 1; /* bits 27:27 */
		ca_uint32_t wcmd_ff_empty : 1; /* bits 28:28 */
		ca_uint32_t rdat_ff_empty : 1; /* bits 29:29 */
		ca_uint32_t rcmd_ff_empty : 1; /* bits 30:30 */
		ca_uint32_t rcyc_ff_empty : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_ACCESS 0xf4302178
#define L2TM_L2TM_BM_PKT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA7 0xf430217c
#define L2TM_L2TM_BM_PKT_MEM_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA6 0xf4302180
#define L2TM_L2TM_BM_PKT_MEM_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA5 0xf4302184
#define L2TM_L2TM_BM_PKT_MEM_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA4 0xf4302188
#define L2TM_L2TM_BM_PKT_MEM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA3 0xf430218c
#define L2TM_L2TM_BM_PKT_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA2 0xf4302190
#define L2TM_L2TM_BM_PKT_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA1 0xf4302194
#define L2TM_L2TM_BM_PKT_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_BM_PKT_MEM_DATA0 0xf4302198
#define L2TM_L2TM_BM_PKT_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_BM_PKT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_bm */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TM_BM_INT_t INT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TM_BM_INTE_t INTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TM_BM_CTRL_t CTRL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TM_BM_TM_TO_9THQ_QUEUE_MAP_t
	  TM_TO_9THQ_QUEUE_MAP; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TM_BM_TM_TO_CPUQ_QUEUE_MAP_t
	  TM_TO_CPUQ_QUEUE_MAP; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TM_BM_TM_TO_CPU256Q_QUEUE_MAP_t
	  TM_TO_CPU256Q_QUEUE_MAP; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TM_BM_TM_TO_DQ_QUEUE_MAP_t TM_TO_DQ_QUEUE_MAP; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TM_BM_DQ_TO_TM_QUEUE_MAP_t DQ_TO_TM_QUEUE_MAP; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TM_BM_DQ_TO_TM_PORT_MAP_t DQ_TO_TM_PORT_MAP; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TM_BM_RX_DQ_PCNT_t RX_DQ_PCNT; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TM_BM_RX_DQ_DPCNT_t RX_DQ_DPCNT; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TM_BM_RX_PCNT_t RX_PCNT; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TM_BM_TX_PCNT_t TX_PCNT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TM_BM_SB_DPCNT_t SB_DPCNT; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TM_BM_HDR_DPCNT_t HDR_DPCNT; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2TM_L2TM_BM_TE_DPCNT_t TE_DPCNT; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2TM_L2TM_BM_ERR_DPCNT_t ERR_DPCNT; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2TM_L2TM_BM_FC_MIRROR0_DPCNT_t FC_MIRROR0_DPCNT; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2TM_L2TM_BM_FC_MIRROR1_DPCNT_t FC_MIRROR1_DPCNT; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2TM_L2TM_BM_FC_MIRROR2_DPCNT_t FC_MIRROR2_DPCNT; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2TM_L2TM_BM_FC_MIRROR3_DPCNT_t FC_MIRROR3_DPCNT; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2TM_L2TM_BM_RX_DPCNT_t RX_DPCNT; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2TM_L2TM_BM_NOBUF_DPCNT_t NOBUF_DPCNT; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2TM_L2TM_BM_RX_FE_HEADER_31_0_t RX_FE_HEADER_31_0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L2TM_L2TM_BM_RX_FE_HEADER_63_32_t RX_FE_HEADER_63_32; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L2TM_L2TM_BM_RX_NI_HEADER_31_0_t RX_NI_HEADER_31_0; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L2TM_L2TM_BM_RX_NI_HEADER_63_32_t RX_NI_HEADER_63_32; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L2TM_L2TM_BM_TX_NI_HEADER_31_0_t TX_NI_HEADER_31_0; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L2TM_L2TM_BM_TX_NI_HEADER_63_32_t TX_NI_HEADER_63_32; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L2TM_L2TM_BM_STS_t STS; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L2TM_L2TM_BM_PKT_MEM_ACCESS_t PKT_MEM_ACCESS; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L2TM_L2TM_BM_PKT_MEM_DATA7_t PKT_MEM_DATA7; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L2TM_L2TM_BM_PKT_MEM_DATA6_t PKT_MEM_DATA6; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L2TM_L2TM_BM_PKT_MEM_DATA5_t PKT_MEM_DATA5; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L2TM_L2TM_BM_PKT_MEM_DATA4_t PKT_MEM_DATA4; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L2TM_L2TM_BM_PKT_MEM_DATA3_t PKT_MEM_DATA3; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L2TM_L2TM_BM_PKT_MEM_DATA2_t PKT_MEM_DATA2; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L2TM_L2TM_BM_PKT_MEM_DATA1_t PKT_MEM_DATA1; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L2TM_L2TM_BM_PKT_MEM_DATA0_t PKT_MEM_DATA0; /* addr: 0x00000098 */
} APB0_L2TM_L2TM_BM_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2tm_qm
 */

#define L2TM_L2TM_QM_INT 0xf4302200
#define L2TM_L2TM_QM_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t freeq_ecc_correctederr : 1; /* bits 0:0 */
		ca_uint32_t freeq_ecc_err : 1; /* bits 1:1 */
		ca_uint32_t voqinfo_ecc_correctederr : 1; /* bits 2:2 */
		ca_uint32_t voqinfo_ecc_err : 1; /* bits 3:3 */
		ca_uint32_t nobuf_drop : 1; /* bits 4:4 */
		ca_uint32_t bid_out_of_range : 1; /* bits 5:5 */
		ca_uint32_t wr_race_err : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t eq0_stack_err : 1; /* bits 16:16 */
		ca_uint32_t eq1_stack_err : 1; /* bits 17:17 */
		ca_uint32_t enq_ff_undrflo : 1; /* bits 18:18 */
		ca_uint32_t enq_ff_ovrflo : 1; /* bits 19:19 */
		ca_uint32_t deq_ff_undrflo : 1; /* bits 20:20 */
		ca_uint32_t deq_ff_ovrflo : 1; /* bits 21:21 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_INT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_INTE 0xf4302204
#define L2TM_L2TM_QM_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t freeq_ecc_correctederrE : 1; /* bits 0:0 */
		ca_uint32_t freeq_ecc_errE : 1; /* bits 1:1 */
		ca_uint32_t voqinfo_ecc_correctederrE : 1; /* bits 2:2 */
		ca_uint32_t voqinfo_ecc_errE : 1; /* bits 3:3 */
		ca_uint32_t nobuf_dropE : 1; /* bits 4:4 */
		ca_uint32_t bid_out_of_rangeE : 1; /* bits 5:5 */
		ca_uint32_t wr_race_errE : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t eq0_stack_errE : 1; /* bits 16:16 */
		ca_uint32_t eq1_stack_errE : 1; /* bits 17:17 */
		ca_uint32_t enq_ff_undrfloE : 1; /* bits 18:18 */
		ca_uint32_t enq_ff_ovrfloE : 1; /* bits 19:19 */
		ca_uint32_t deq_ff_undrfloE : 1; /* bits 20:20 */
		ca_uint32_t deq_ff_ovrfloE : 1; /* bits 21:21 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_INTE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ_CFG 0xf4302208
#define L2TM_L2TM_QM_EQ_CFG_dft 0x00040008

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq0_bufnum : 5; /* bits 4:0 */
		ca_uint32_t eq0_prvt : 11; /* bits 15:5 */
		ca_uint32_t eq1_bufnum : 4; /* bits 19:16 */
		ca_uint32_t eq1_prvt : 10; /* bits 29:20 */
		ca_uint32_t eq0_en : 1; /* bits 30:30 */
		ca_uint32_t eq1_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ_CFG1 0xf430220c
#define L2TM_L2TM_QM_EQ_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq0_buffer_weight : 1; /* bits 0:0 */
		ca_uint32_t eq1_buffer_weight : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_GLOB_BUF_CFG 0xf4302210
#define L2TM_L2TM_QM_GLOB_BUF_CFG_dft 0x90000020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nodrop : 15; /* bits 14:0 */
		ca_uint32_t drop_en : 1; /* bits 15:15 */
		ca_uint32_t noncong : 15; /* bits 30:16 */
		ca_uint32_t fe_bp_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_GLOB_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_GLOB_BUF_CFG1 0xf4302214
#define L2TM_L2TM_QM_GLOB_BUF_CFG1_dft 0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fe_bp_th : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_GLOB_BUF_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_PROFILE0 0xf4302218
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE0_dft 0x00100000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_even : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t cnt_odd : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_PROFILE1 0xf430221c
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE1_dft 0x00400020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_even : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t cnt_odd : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_PROFILE2 0xf4302220
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE2_dft 0x00c00080

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_even : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t cnt_odd : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_PROFILE3 0xf4302224
#define L2TM_L2TM_QM_PORT_PRVT_PROFILE3_dft 0x01400100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_even : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t cnt_odd : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_PROFILE3_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_SELECT0 0xf4302228
#define L2TM_L2TM_QM_PORT_PRVT_SELECT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0 : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t port1 : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t port2 : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t port3 : 3; /* bits 14:12 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t port4 : 3; /* bits 18:16 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t port5 : 3; /* bits 22:20 */
		ca_uint32_t rsrvd6 : 1;
		ca_uint32_t port6 : 3; /* bits 26:24 */
		ca_uint32_t rsrvd7 : 1;
		ca_uint32_t port7 : 3; /* bits 30:28 */
		ca_uint32_t rsrvd8 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_SELECT0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_SELECT1 0xf430222c
#define L2TM_L2TM_QM_PORT_PRVT_SELECT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0 : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t port1 : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t port2 : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t port3 : 3; /* bits 14:12 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t port4 : 3; /* bits 18:16 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t port5 : 3; /* bits 22:20 */
		ca_uint32_t rsrvd6 : 1;
		ca_uint32_t port6 : 3; /* bits 26:24 */
		ca_uint32_t rsrvd7 : 1;
		ca_uint32_t port7 : 3; /* bits 30:28 */
		ca_uint32_t rsrvd8 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_SELECT1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_NO_PRVT_STS 0xf4302230
#define L2TM_L2TM_QM_PORT_NO_PRVT_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pid : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_NO_PRVT_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ_GLB_FREECNT 0xf4302234
#define L2TM_L2TM_QM_EQ_GLB_FREECNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sum_of_eqcnt : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ_GLB_FREECNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ_COS0_BUFCNT 0xf4302238
#define L2TM_L2TM_QM_EQ_COS0_BUFCNT_STRIDE 4
#define L2TM_L2TM_QM_EQ_COS0_BUFCNT_COUNT 8
#define L2TM_L2TM_QM_EQ_COS0_BUFCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sum_of_eqcnt : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ_COS0_BUFCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS 0xf4302258
#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA 0xf430225c
#define L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ_FREECNT 0xf4302260
#define L2TM_L2TM_QM_EQ_FREECNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq0 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t eq1 : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ_FREECNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ_HEAD 0xf4302264
#define L2TM_L2TM_QM_EQ_HEAD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq0 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t eq1 : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ_HEAD_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ0_STACK_CFG 0xf4302268
#define L2TM_L2TM_QM_EQ0_STACK_CFG_dft 0x00302010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_ths : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t mid_ths : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t high_ths : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 10;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ0_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ0_STACK_CTRL 0xf430226c
#define L2TM_L2TM_QM_EQ0_STACK_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stack_unfill : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ0_STACK_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ0_STACK_STS 0xf4302270
#define L2TM_L2TM_QM_EQ0_STACK_STS_dft 0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stack_unfill_done : 1; /* bits 0:0 */
		ca_uint32_t stack_idle : 1; /* bits 1:1 */
		ca_uint32_t stack_empty : 1; /* bits 2:2 */
		ca_uint32_t stack_full : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t stack_cntr : 6; /* bits 21:16 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ0_STACK_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ1_STACK_CFG 0xf4302274
#define L2TM_L2TM_QM_EQ1_STACK_CFG_dft 0x00302010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_ths : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t mid_ths : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t high_ths : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 10;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ1_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ1_STACK_CTRL 0xf4302278
#define L2TM_L2TM_QM_EQ1_STACK_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stack_unfill : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ1_STACK_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_EQ1_STACK_STS 0xf430227c
#define L2TM_L2TM_QM_EQ1_STACK_STS_dft 0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stack_unfill_done : 1; /* bits 0:0 */
		ca_uint32_t stack_idle : 1; /* bits 1:1 */
		ca_uint32_t stack_empty : 1; /* bits 2:2 */
		ca_uint32_t stack_full : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t stack_cntr : 6; /* bits 21:16 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_EQ1_STACK_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_CTRL 0xf4302280
#define L2TM_L2TM_QM_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 31;
		ca_uint32_t force_init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_STS 0xf4302284
#define L2TM_L2TM_QM_STS_dft 0x000c0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t plm_nempty : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t enq_ff_empty : 1; /* bits 18:18 */
		ca_uint32_t deq_ff_empty : 1; /* bits 19:19 */
		ca_uint32_t rsrvd2 : 12;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_STS1 0xf4302288
#define L2TM_L2TM_QM_STS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t init_adr : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t init_data : 8; /* bits 23:16 */
		ca_uint32_t freeq_cs : 3; /* bits 26:24 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t sm_reset : 1; /* bits 30:30 */
		ca_uint32_t init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_STS1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_STS2 0xf430228c
#define L2TM_L2TM_QM_STS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t init_adr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t init_data : 8; /* bits 23:16 */
		ca_uint32_t voqinfo_cs : 3; /* bits 26:24 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t sm_reset : 1; /* bits 30:30 */
		ca_uint32_t init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_STS2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_FREEQ_MEM_ACCESS 0xf4302290
#define L2TM_L2TM_QM_FREEQ_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_FREEQ_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_FREEQ_MEM_DATA1 0xf4302294
#define L2TM_L2TM_QM_FREEQ_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ecc : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_FREEQ_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_FREEQ_MEM_DATA0 0xf4302298
#define L2TM_L2TM_QM_FREEQ_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t blen : 7; /* bits 6:0 */
		ca_uint32_t eqid : 1; /* bits 7:7 */
		ca_uint32_t eop : 1; /* bits 8:8 */
		ca_uint32_t sop : 1; /* bits 9:9 */
		ca_uint32_t cpu : 1; /* bits 10:10 */
		ca_uint32_t prvt : 1; /* bits 11:11 */
		ca_uint32_t nxt_ptr : 15; /* bits 26:12 */
		ca_uint32_t ecc : 5; /* bits 31:27 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_FREEQ_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_VOQINFO_MEM_ACCESS 0xf430229c
#define L2TM_L2TM_QM_VOQINFO_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_VOQINFO_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_VOQINFO_MEM_DATA1 0xf43022a0
#define L2TM_L2TM_QM_VOQINFO_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tail_ptr : 10; /* bits 9:0 */
		ca_uint32_t vallid : 1; /* bits 10:10 */
		ca_uint32_t ecc : 7; /* bits 17:11 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_VOQINFO_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_VOQINFO_MEM_DATA0 0xf43022a4
#define L2TM_L2TM_QM_VOQINFO_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t blen : 7; /* bits 6:0 */
		ca_uint32_t eqid : 1; /* bits 7:7 */
		ca_uint32_t eop : 1; /* bits 8:8 */
		ca_uint32_t sop : 1; /* bits 9:9 */
		ca_uint32_t cpu : 1; /* bits 10:10 */
		ca_uint32_t prvt : 1; /* bits 11:11 */
		ca_uint32_t head_ptr : 15; /* bits 26:12 */
		ca_uint32_t tail_ptr : 5; /* bits 31:27 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_VOQINFO_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS 0xf43022a8
#define L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA 0xf43022ac
#define L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_qm */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TM_QM_INT_t INT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TM_QM_INTE_t INTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TM_QM_EQ_CFG_t EQ_CFG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TM_QM_EQ_CFG1_t EQ_CFG1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TM_QM_GLOB_BUF_CFG_t GLOB_BUF_CFG; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TM_QM_GLOB_BUF_CFG1_t GLOB_BUF_CFG1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TM_QM_PORT_PRVT_PROFILE0_t PORT_PRVT_PROFILE0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TM_QM_PORT_PRVT_PROFILE1_t PORT_PRVT_PROFILE1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TM_QM_PORT_PRVT_PROFILE2_t PORT_PRVT_PROFILE2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TM_QM_PORT_PRVT_PROFILE3_t PORT_PRVT_PROFILE3; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TM_QM_PORT_PRVT_SELECT0_t PORT_PRVT_SELECT0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TM_QM_PORT_PRVT_SELECT1_t PORT_PRVT_SELECT1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TM_QM_PORT_NO_PRVT_STS_t PORT_NO_PRVT_STS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TM_QM_EQ_GLB_FREECNT_t EQ_GLB_FREECNT; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TM_QM_EQ_COS0_BUFCNT_t EQ_COS0_BUFCNT; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[31];
	L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_ACCESS_t
	  PORT_PRVT_BUFCNT_MEM_ACCESS; /* addr: 0x00000058 */
	ca_uint32_t rsrvd16[3];
	L2TM_L2TM_QM_PORT_PRVT_BUFCNT_MEM_DATA_t
	  PORT_PRVT_BUFCNT_MEM_DATA; /* addr: 0x0000005c */
	ca_uint32_t rsrvd17[3];
	L2TM_L2TM_QM_EQ_FREECNT_t EQ_FREECNT; /* addr: 0x00000060 */
	ca_uint32_t rsrvd18[3];
	L2TM_L2TM_QM_EQ_HEAD_t EQ_HEAD; /* addr: 0x00000064 */
	ca_uint32_t rsrvd19[3];
	L2TM_L2TM_QM_EQ0_STACK_CFG_t EQ0_STACK_CFG; /* addr: 0x00000068 */
	ca_uint32_t rsrvd20[3];
	L2TM_L2TM_QM_EQ0_STACK_CTRL_t EQ0_STACK_CTRL; /* addr: 0x0000006c */
	ca_uint32_t rsrvd21[3];
	L2TM_L2TM_QM_EQ0_STACK_STS_t EQ0_STACK_STS; /* addr: 0x00000070 */
	ca_uint32_t rsrvd22[3];
	L2TM_L2TM_QM_EQ1_STACK_CFG_t EQ1_STACK_CFG; /* addr: 0x00000074 */
	ca_uint32_t rsrvd23[3];
	L2TM_L2TM_QM_EQ1_STACK_CTRL_t EQ1_STACK_CTRL; /* addr: 0x00000078 */
	ca_uint32_t rsrvd24[3];
	L2TM_L2TM_QM_EQ1_STACK_STS_t EQ1_STACK_STS; /* addr: 0x0000007c */
	ca_uint32_t rsrvd25[3];
	L2TM_L2TM_QM_CTRL_t CTRL; /* addr: 0x00000080 */
	ca_uint32_t rsrvd26[3];
	L2TM_L2TM_QM_STS_t STS; /* addr: 0x00000084 */
	ca_uint32_t rsrvd27[3];
	L2TM_L2TM_QM_STS1_t STS1; /* addr: 0x00000088 */
	ca_uint32_t rsrvd28[3];
	L2TM_L2TM_QM_STS2_t STS2; /* addr: 0x0000008c */
	ca_uint32_t rsrvd29[3];
	L2TM_L2TM_QM_FREEQ_MEM_ACCESS_t FREEQ_MEM_ACCESS; /* addr: 0x00000090 */
	ca_uint32_t rsrvd30[3];
	L2TM_L2TM_QM_FREEQ_MEM_DATA1_t FREEQ_MEM_DATA1; /* addr: 0x00000094 */
	ca_uint32_t rsrvd31[3];
	L2TM_L2TM_QM_FREEQ_MEM_DATA0_t FREEQ_MEM_DATA0; /* addr: 0x00000098 */
	ca_uint32_t rsrvd32[3];
	L2TM_L2TM_QM_VOQINFO_MEM_ACCESS_t VOQINFO_MEM_ACCESS; /* addr: 0x0000009c */
	ca_uint32_t rsrvd33[3];
	L2TM_L2TM_QM_VOQINFO_MEM_DATA1_t VOQINFO_MEM_DATA1; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd34[3];
	L2TM_L2TM_QM_VOQINFO_MEM_DATA0_t VOQINFO_MEM_DATA0; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd35[3];
	L2TM_L2TM_QM_VOQ_PCNT_MEM_ACCESS_t VOQ_PCNT_MEM_ACCESS; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd36[3];
	L2TM_L2TM_QM_VOQ_PCNT_MEM_DATA_t VOQ_PCNT_MEM_DATA; /* addr: 0x000000ac */
} APB0_L2TM_L2TM_QM_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2tm_es
 */

#define L2TM_L2TM_ES_CTRL 0xf4302300
#define L2TM_L2TM_ES_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_port0_en : 1; /* bits 0:0 */
		ca_uint32_t tx_port1_en : 1; /* bits 1:1 */
		ca_uint32_t tx_port2_en : 1; /* bits 2:2 */
		ca_uint32_t tx_port3_en : 1; /* bits 3:3 */
		ca_uint32_t tx_port4_en : 1; /* bits 4:4 */
		ca_uint32_t tx_port5_en : 1; /* bits 5:5 */
		ca_uint32_t tx_port6_en : 1; /* bits 6:6 */
		ca_uint32_t tx_port7_en : 1; /* bits 7:7 */
		ca_uint32_t tx_port8_en : 1; /* bits 8:8 */
		ca_uint32_t tx_port9_en : 1; /* bits 9:9 */
		ca_uint32_t tx_port10_en : 1; /* bits 10:10 */
		ca_uint32_t tx_port11_en : 1; /* bits 11:11 */
		ca_uint32_t tx_port12_en : 1; /* bits 12:12 */
		ca_uint32_t tx_port13_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t tx_port15_en : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t tx_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_SCH_CFG0 0xf4302304
#define L2TM_L2TM_ES_SCH_CFG0_STRIDE 12
#define L2TM_L2TM_ES_SCH_CFG0_COUNT 15
#define L2TM_L2TM_ES_SCH_CFG0_dft 0x000400ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_en : 8; /* bits 7:0 */
		ca_uint32_t flush_voqid : 3; /* bits 10:8 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t flush_en : 1; /* bits 15:15 */
		ca_uint32_t speed : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_SCH_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0 0xf4302308
#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_STRIDE 12
#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_COUNT 15
#define L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq0 : 8; /* bits 7:0 */
		ca_uint32_t voq1 : 8; /* bits 15:8 */
		ca_uint32_t voq2 : 8; /* bits 23:16 */
		ca_uint32_t voq3 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0 0xf430230c
#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_STRIDE 12
#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_COUNT 15
#define L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq4 : 8; /* bits 7:0 */
		ca_uint32_t voq5 : 8; /* bits 15:8 */
		ca_uint32_t voq6 : 8; /* bits 23:16 */
		ca_uint32_t voq7 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG 0xf43023b8
#define L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0 : 8; /* bits 7:0 */
		ca_uint32_t port1 : 8; /* bits 15:8 */
		ca_uint32_t port2 : 8; /* bits 23:16 */
		ca_uint32_t port3 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG 0xf43023bc
#define L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port4 : 8; /* bits 7:0 */
		ca_uint32_t port5 : 8; /* bits 15:8 */
		ca_uint32_t port6 : 8; /* bits 23:16 */
		ca_uint32_t port7 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG 0xf43023c0
#define L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port8 : 8; /* bits 7:0 */
		ca_uint32_t port9 : 8; /* bits 15:8 */
		ca_uint32_t port10 : 8; /* bits 23:16 */
		ca_uint32_t port11 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG 0xf43023c4
#define L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG_dft 0x01000101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port12 : 8; /* bits 7:0 */
		ca_uint32_t port13 : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t port15 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_DRR_WEIGHT_BASE 0xf43023c8
#define L2TM_L2TM_ES_DRR_WEIGHT_BASE_dft 0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t w_rate : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t base_select : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t dwrr_unit : 1; /* bits 16:16 */
		ca_uint32_t rsrvd3 : 15;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_DRR_WEIGHT_BASE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_CFG 0xf43023cc
#define L2TM_L2TM_ES_CFG_dft 0x00000340

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sch_ack_len : 8; /* bits 7:0 */
		ca_uint32_t sch_sync_upd : 1; /* bits 8:8 */
		ca_uint32_t sch_rr_grant : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_STS 0xf43023d0
#define L2TM_L2TM_ES_STS_dft 0x00003fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ni_port_rdy : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_STS0 0xf43023d4
#define L2TM_L2TM_ES_VOQ_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_STS0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_STS1 0xf43023d8
#define L2TM_L2TM_ES_VOQ_STS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_STS1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_STS2 0xf43023dc
#define L2TM_L2TM_ES_VOQ_STS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_STS2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_STS3 0xf43023e0
#define L2TM_L2TM_ES_VOQ_STS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_STS3_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_OK_STS0 0xf43023e4
#define L2TM_L2TM_ES_VOQ_OK_STS0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_OK_STS0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_OK_STS1 0xf43023e8
#define L2TM_L2TM_ES_VOQ_OK_STS1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_OK_STS1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_OK_STS2 0xf43023ec
#define L2TM_L2TM_ES_VOQ_OK_STS2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_OK_STS2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_VOQ_OK_STS3 0xf43023f0
#define L2TM_L2TM_ES_VOQ_OK_STS3_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_VOQ_OK_STS3_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TM_ES_PORT_OK_STS 0xf43023f4
#define L2TM_L2TM_ES_PORT_OK_STS_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pid : 16; /* bits 15:0 */
		ca_uint32_t voq_grp : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TM_ES_PORT_OK_STS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2tm_es */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TM_ES_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TM_ES_SCH_CFG0_t SCH_CFG0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TM_ES_VOQ3_0_WEIGHT_RATIO_CFG0_t
	  VOQ3_0_WEIGHT_RATIO_CFG0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TM_ES_VOQ7_4_WEIGHT_RATIO_CFG0_t
	  VOQ7_4_WEIGHT_RATIO_CFG0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[171];
	L2TM_L2TM_ES_PORT3_0_WEIGHT_RATIO_CFG_t
	  PORT3_0_WEIGHT_RATIO_CFG; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TM_ES_PORT7_4_WEIGHT_RATIO_CFG_t
	  PORT7_4_WEIGHT_RATIO_CFG; /* addr: 0x000000bc */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TM_ES_PORT11_8_WEIGHT_RATIO_CFG_t
	  PORT11_8_WEIGHT_RATIO_CFG; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TM_ES_PORT15_12_WEIGHT_RATIO_CFG_t
	  PORT15_12_WEIGHT_RATIO_CFG; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TM_ES_DRR_WEIGHT_BASE_t DRR_WEIGHT_BASE; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TM_ES_CFG_t CFG; /* addr: 0x000000cc */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TM_ES_STS_t STS; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TM_ES_VOQ_STS0_t VOQ_STS0; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TM_ES_VOQ_STS1_t VOQ_STS1; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TM_ES_VOQ_STS2_t VOQ_STS2; /* addr: 0x000000dc */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TM_ES_VOQ_STS3_t VOQ_STS3; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd15[3];
	L2TM_L2TM_ES_VOQ_OK_STS0_t VOQ_OK_STS0; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd16[3];
	L2TM_L2TM_ES_VOQ_OK_STS1_t VOQ_OK_STS1; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd17[3];
	L2TM_L2TM_ES_VOQ_OK_STS2_t VOQ_OK_STS2; /* addr: 0x000000ec */
	ca_uint32_t rsrvd18[3];
	L2TM_L2TM_ES_VOQ_OK_STS3_t VOQ_OK_STS3; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd19[3];
	L2TM_L2TM_ES_PORT_OK_STS_t PORT_OK_STS; /* addr: 0x000000f4 */
} APB0_L2TM_L2TM_ES_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_glb
 */

#define L2TM_L2TE_GLB_REV_ID 0xf4302400
#define L2TM_L2TE_GLB_REV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minor : 16; /* bits 15:0 */
		ca_uint32_t major : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_REV_ID_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_CTRL 0xf4302404
#define L2TM_L2TE_GLB_CTRL_dft 0x07000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_en : 1; /* bits 0:0 */
		ca_uint32_t shp_en : 1; /* bits 1:1 */
		ca_uint32_t taildrop_en : 1; /* bits 2:2 */
		ca_uint32_t wred_en : 1; /* bits 3:3 */
		ca_uint32_t mark_ecn_en : 1; /* bits 4:4 */
		ca_uint32_t pol_ecn_en : 1; /* bits 5:5 */
		ca_uint32_t wred_ecn_en : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t glb_deepq_port_rdy_en : 8; /* bits 23:16 */
		ca_uint32_t glb_deepq_port_rdy_id : 3; /* bits 26:24 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t force_init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_INT 0xf4302408
#define L2TM_L2TE_GLB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_mark : 1; /* bits 0:0 */
		ca_uint32_t pol_drop : 1; /* bits 1:1 */
		ca_uint32_t tail_drop : 1; /* bits 2:2 */
		ca_uint32_t wred_y_drop : 1; /* bits 3:3 */
		ca_uint32_t wred_g_drop : 1; /* bits 4:4 */
		ca_uint32_t ecn : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t feio : 1; /* bits 14:14 */
		ca_uint32_t tmio : 1; /* bits 15:15 */
		ca_uint32_t cb : 1; /* bits 16:16 */
		ca_uint32_t fc : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 14;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_INT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_INTE 0xf430240c
#define L2TM_L2TE_GLB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_markE : 1; /* bits 0:0 */
		ca_uint32_t pol_dropE : 1; /* bits 1:1 */
		ca_uint32_t tail_dropE : 1; /* bits 2:2 */
		ca_uint32_t wred_y_dropE : 1; /* bits 3:3 */
		ca_uint32_t wred_g_dropE : 1; /* bits 4:4 */
		ca_uint32_t ecnE : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t feioE : 1; /* bits 14:14 */
		ca_uint32_t tmioE : 1; /* bits 15:15 */
		ca_uint32_t cbE : 1; /* bits 16:16 */
		ca_uint32_t fcE : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 14;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_STS 0xf4302410
#define L2TM_L2TE_GLB_STS_dft 0x07000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_fifo_ovrn : 1; /* bits 0:0 */
		ca_uint32_t l2io_fifo_ovrn : 1; /* bits 1:1 */
		ca_uint32_t qmio_enq_ovrn : 1; /* bits 2:2 */
		ca_uint32_t qmio_deq_ovrn : 1; /* bits 3:3 */
		ca_uint32_t qmio_shp_ovrn : 1; /* bits 4:4 */
		ca_uint32_t te_qm_nrdy : 1; /* bits 5:5 */
		ca_uint32_t ptp_fifo_err : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t pol_init_done : 1; /* bits 12:12 */
		ca_uint32_t shp_init_done : 1; /* bits 13:13 */
		ca_uint32_t cb_init_done : 1; /* bits 14:14 */
		ca_uint32_t wred_init_done : 1; /* bits 15:15 */
		ca_uint32_t feio_sm : 4; /* bits 19:16 */
		ca_uint32_t fe_te_req : 1; /* bits 20:20 */
		ca_uint32_t te_fe_ack : 1; /* bits 21:21 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t l2io_idle : 1; /* bits 24:24 */
		ca_uint32_t qmio_idle : 1; /* bits 25:25 */
		ca_uint32_t ptp_fifo_idle : 1; /* bits 26:26 */
		ca_uint32_t rsrvd3 : 4;
		ca_uint32_t init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_PTP_CFG 0xf4302414
#define L2TM_L2TE_GLB_PTP_CFG_dft 0x000007ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_id : 8; /* bits 7:0 */
		ca_uint32_t pol_grp_id : 3; /* bits 10:8 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t pol_en : 1; /* bits 12:12 */
		ca_uint32_t pol_grp_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd2 : 18;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_PTP_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_SPARE_CFG 0xf4302418
#define L2TM_L2TE_GLB_SPARE_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_GLB_SPARE_STS 0xf430241c
#define L2TM_L2TE_GLB_SPARE_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_glb */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_GLB_REV_ID_t REV_ID; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_GLB_CTRL_t CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_GLB_INT_t INT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TE_GLB_INTE_t INTE; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_GLB_STS_t STS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TE_GLB_PTP_CFG_t PTP_CFG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TE_GLB_SPARE_CFG_t SPARE_CFG; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TE_GLB_SPARE_STS_t SPARE_STS; /* addr: 0x0000001c */
} APB0_L2TM_L2TE_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_pol
 */

#define L2TM_L2TE_POL_PKT_TYPE_CTRL0 0xf4302500
#define L2TM_L2TE_POL_PKT_TYPE_CTRL0_STRIDE 4
#define L2TM_L2TE_POL_PKT_TYPE_CTRL0_COUNT 16
#define L2TM_L2TE_POL_PKT_TYPE_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS 0xf4302540
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2 0xf4302544
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1 0xf4302548
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0 0xf430254c
#define L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS 0xf4302550
#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1 0xf4302554
#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0 0xf4302558
#define L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_CTRL0 0xf430255c
#define L2TM_L2TE_POL_PORT_CTRL0_STRIDE 4
#define L2TM_L2TE_POL_PORT_CTRL0_COUNT 16
#define L2TM_L2TE_POL_PORT_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS 0xf430259c
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2 0xf43025a0
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1 0xf43025a4
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0 0xf43025a8
#define L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS 0xf43025ac
#define L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1 0xf43025b0
#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0 0xf43025b4
#define L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_GRP_CTRL0 0xf43025b8
#define L2TM_L2TE_POL_FLOW_GRP_CTRL0_STRIDE 4
#define L2TM_L2TE_POL_FLOW_GRP_CTRL0_COUNT 8
#define L2TM_L2TE_POL_FLOW_GRP_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_GRP_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_ACCESS 0xf43025d8
#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA2 0xf43025dc
#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA1 0xf43025e0
#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA0 0xf43025e4
#define L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_COUNTER_MEM_ACCESS 0xf43025e8
#define L2TM_L2TE_POL_FLOW_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA1 0xf43025ec
#define L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA0 0xf43025f0
#define L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_CTRL0 0xf43025f4
#define L2TM_L2TE_POL_AGRFLOW_CTRL0_STRIDE 4
#define L2TM_L2TE_POL_AGRFLOW_CTRL0_COUNT 8
#define L2TM_L2TE_POL_AGRFLOW_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS 0xf4302614
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2 0xf4302618
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1 0xf430261c
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0 0xf4302620
#define L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS 0xf4302624
#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1 0xf4302628
#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0 0xf430262c
#define L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_TB_CTRL 0xf4302630
#define L2TM_L2TE_POL_TB_CTRL_dft 0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addtok_en : 1; /* bits 0:0 */
		ca_uint32_t subtok_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t upd_cnt_lmt : 4; /* bits 7:4 */
		ca_uint32_t cyc_cnt_lmt : 12; /* bits 19:8 */
		ca_uint32_t last_upd_cyc : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_POL_TB_CTRL1 0xf4302634
#define L2TM_L2TE_POL_TB_CTRL1_dft 0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t k_cnt_lmt : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_POL_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_pol */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_POL_PKT_TYPE_CTRL0_t PKT_TYPE_CTRL0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[63];
	L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t
	  PKT_TYPE_PROFILE_MEM_ACCESS; /* addr: 0x00000040 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t
	  PKT_TYPE_PROFILE_MEM_DATA2; /* addr: 0x00000044 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t
	  PKT_TYPE_PROFILE_MEM_DATA1; /* addr: 0x00000048 */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t
	  PKT_TYPE_PROFILE_MEM_DATA0; /* addr: 0x0000004c */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t
	  PKT_TYPE_COUNTER_MEM_ACCESS; /* addr: 0x00000050 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t
	  PKT_TYPE_COUNTER_MEM_DATA1; /* addr: 0x00000054 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t
	  PKT_TYPE_COUNTER_MEM_DATA0; /* addr: 0x00000058 */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TE_POL_PORT_CTRL0_t PORT_CTRL0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd9[63];
	L2TM_L2TE_POL_PORT_PROFILE_MEM_ACCESS_t
	  PORT_PROFILE_MEM_ACCESS; /* addr: 0x0000009c */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA2_t
	  PORT_PROFILE_MEM_DATA2; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA1_t
	  PORT_PROFILE_MEM_DATA1; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TE_POL_PORT_PROFILE_MEM_DATA0_t
	  PORT_PROFILE_MEM_DATA0; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TE_POL_PORT_COUNTER_MEM_ACCESS_t
	  PORT_COUNTER_MEM_ACCESS; /* addr: 0x000000ac */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA1_t
	  PORT_COUNTER_MEM_DATA1; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd15[3];
	L2TM_L2TE_POL_PORT_COUNTER_MEM_DATA0_t
	  PORT_COUNTER_MEM_DATA0; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd16[3];
	L2TM_L2TE_POL_FLOW_GRP_CTRL0_t FLOW_GRP_CTRL0; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd17[31];
	L2TM_L2TE_POL_FLOW_PROFILE_MEM_ACCESS_t
	  FLOW_PROFILE_MEM_ACCESS; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd18[3];
	L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA2_t
	  FLOW_PROFILE_MEM_DATA2; /* addr: 0x000000dc */
	ca_uint32_t rsrvd19[3];
	L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA1_t
	  FLOW_PROFILE_MEM_DATA1; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd20[3];
	L2TM_L2TE_POL_FLOW_PROFILE_MEM_DATA0_t
	  FLOW_PROFILE_MEM_DATA0; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd21[3];
	L2TM_L2TE_POL_FLOW_COUNTER_MEM_ACCESS_t
	  FLOW_COUNTER_MEM_ACCESS; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd22[3];
	L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA1_t
	  FLOW_COUNTER_MEM_DATA1; /* addr: 0x000000ec */
	ca_uint32_t rsrvd23[3];
	L2TM_L2TE_POL_FLOW_COUNTER_MEM_DATA0_t
	  FLOW_COUNTER_MEM_DATA0; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd24[3];
	L2TM_L2TE_POL_AGRFLOW_CTRL0_t AGRFLOW_CTRL0; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd25[31];
	L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t
	  AGRFLOW_PROFILE_MEM_ACCESS; /* addr: 0x00000114 */
	ca_uint32_t rsrvd26[3];
	L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t
	  AGRFLOW_PROFILE_MEM_DATA2; /* addr: 0x00000118 */
	ca_uint32_t rsrvd27[3];
	L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t
	  AGRFLOW_PROFILE_MEM_DATA1; /* addr: 0x0000011c */
	ca_uint32_t rsrvd28[3];
	L2TM_L2TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t
	  AGRFLOW_PROFILE_MEM_DATA0; /* addr: 0x00000120 */
	ca_uint32_t rsrvd29[3];
	L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t
	  AGRFLOW_COUNTER_MEM_ACCESS; /* addr: 0x00000124 */
	ca_uint32_t rsrvd30[3];
	L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t
	  AGRFLOW_COUNTER_MEM_DATA1; /* addr: 0x00000128 */
	ca_uint32_t rsrvd31[3];
	L2TM_L2TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t
	  AGRFLOW_COUNTER_MEM_DATA0; /* addr: 0x0000012c */
	ca_uint32_t rsrvd32[3];
	L2TM_L2TE_POL_TB_CTRL_t TB_CTRL; /* addr: 0x00000130 */
	ca_uint32_t rsrvd33[3];
	L2TM_L2TE_POL_TB_CTRL1_t TB_CTRL1; /* addr: 0x00000134 */
} APB0_L2TM_L2TE_POL_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_shp
 */

#define L2TM_L2TE_SHP_IPG_PROFILE 0xf4302700
#define L2TM_L2TE_SHP_IPG_PROFILE_dft 0x14141414

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipg0 : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t ipg1 : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ipg2 : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t ipg3 : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_IPG_PROFILE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_PORT_IPG_SELECT0 0xf4302704
#define L2TM_L2TE_SHP_PORT_IPG_SELECT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pid0 : 2; /* bits 1:0 */
		ca_uint32_t pid1 : 2; /* bits 3:2 */
		ca_uint32_t pid2 : 2; /* bits 5:4 */
		ca_uint32_t pid3 : 2; /* bits 7:6 */
		ca_uint32_t pid4 : 2; /* bits 9:8 */
		ca_uint32_t pid5 : 2; /* bits 11:10 */
		ca_uint32_t pid6 : 2; /* bits 13:12 */
		ca_uint32_t pid7 : 2; /* bits 15:14 */
		ca_uint32_t pid8 : 2; /* bits 17:16 */
		ca_uint32_t pid9 : 2; /* bits 19:18 */
		ca_uint32_t pid10 : 2; /* bits 21:20 */
		ca_uint32_t pid11 : 2; /* bits 23:22 */
		ca_uint32_t pid12 : 2; /* bits 25:24 */
		ca_uint32_t pid13 : 2; /* bits 27:26 */
		ca_uint32_t pid14 : 2; /* bits 29:28 */
		ca_uint32_t pid15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_PORT_IPG_SELECT0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_SRP_CONFIG0 0xf4302708
#define L2TM_L2TE_SHP_SRP_CONFIG0_STRIDE 4
#define L2TM_L2TE_SHP_SRP_CONFIG0_COUNT 2
#define L2TM_L2TE_SHP_SRP_CONFIG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg0_enb : 1; /* bits 0:0 */
		ca_uint32_t cfg0_cos : 3; /* bits 3:1 */
		ca_uint32_t rsrvd1 : 11;
		ca_uint32_t cfg0_class_b : 1; /* bits 15:15 */
		ca_uint32_t cfg1_enb : 1; /* bits 16:16 */
		ca_uint32_t cfg1_cos : 3; /* bits 19:17 */
		ca_uint32_t rsrvd2 : 11;
		ca_uint32_t cfg1_class_b : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_SRP_CONFIG0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_SRP_CONFIG_EN 0xf4302710
#define L2TM_L2TE_SHP_SRP_CONFIG_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pid0 : 4; /* bits 3:0 */
		ca_uint32_t pid1 : 4; /* bits 7:4 */
		ca_uint32_t pid2 : 4; /* bits 11:8 */
		ca_uint32_t pid3 : 4; /* bits 15:12 */
		ca_uint32_t pid4 : 4; /* bits 19:16 */
		ca_uint32_t pid5 : 4; /* bits 23:20 */
		ca_uint32_t pid6 : 4; /* bits 27:24 */
		ca_uint32_t pid7 : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_SRP_CONFIG_EN_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_CTRL 0xf4302714
#define L2TM_L2TE_SHP_CTRL_dft 0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_mode_class0_cnt : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t pkt_mode_class1_cnt : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS 0xf4302718
#define L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1 0xf430271c
#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0 0xf4302720
#define L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS 0xf4302724
#define L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1 0xf4302728
#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0 0xf430272c
#define L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS 0xf4302730
#define L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1 0xf4302734
#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0 0xf4302738
#define L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_TB_CTRL 0xf430273c
#define L2TM_L2TE_SHP_TB_CTRL_dft 0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addtok_en : 1; /* bits 0:0 */
		ca_uint32_t subtok_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t upd_cnt_lmt : 4; /* bits 7:4 */
		ca_uint32_t cyc_cnt_lmt : 12; /* bits 19:8 */
		ca_uint32_t last_upd_cyc : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_SHP_TB_CTRL1 0xf4302740
#define L2TM_L2TE_SHP_TB_CTRL1_dft 0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t k_cnt_lmt : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_SHP_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_shp */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_SHP_IPG_PROFILE_t IPG_PROFILE; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_SHP_PORT_IPG_SELECT0_t PORT_IPG_SELECT0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_SHP_SRP_CONFIG0_t SRP_CONFIG0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[7];
	L2TM_L2TE_SHP_SRP_CONFIG_EN_t SRP_CONFIG_EN; /* addr: 0x00000010 */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_SHP_CTRL_t CTRL; /* addr: 0x00000014 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TE_SHP_PORT_TBC_MEM_ACCESS_t
	  PORT_TBC_MEM_ACCESS; /* addr: 0x00000018 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TE_SHP_PORT_TBC_MEM_DATA1_t PORT_TBC_MEM_DATA1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TE_SHP_PORT_TBC_MEM_DATA0_t PORT_TBC_MEM_DATA0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TE_SHP_GROUP_TBC_MEM_ACCESS_t
	  GROUP_TBC_MEM_ACCESS; /* addr: 0x00000024 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA1_t
	  GROUP_TBC_MEM_DATA1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TE_SHP_GROUP_TBC_MEM_DATA0_t
	  GROUP_TBC_MEM_DATA0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TE_SHP_VOQ_TBC_MEM_ACCESS_t VOQ_TBC_MEM_ACCESS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA1_t VOQ_TBC_MEM_DATA1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TE_SHP_VOQ_TBC_MEM_DATA0_t VOQ_TBC_MEM_DATA0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TE_SHP_TB_CTRL_t TB_CTRL; /* addr: 0x0000003c */
	ca_uint32_t rsrvd15[3];
	L2TM_L2TE_SHP_TB_CTRL1_t TB_CTRL1; /* addr: 0x00000040 */
} APB0_L2TM_L2TE_SHP_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_wred
 */

#define L2TM_L2TE_WRED_CTRL 0xf4302800
#define L2TM_L2TE_WRED_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t fast_decay : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t afgs_weight : 4; /* bits 7:4 */
		ca_uint32_t rsrvd3 : 24;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_AFGS_MEM_ACCESS 0xf4302804
#define L2TM_L2TE_WRED_AFGS_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 29;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_AFGS_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_AFGS_MEM_DATA 0xf4302808
#define L2TM_L2TE_WRED_AFGS_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t depth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_AFGS_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_ACCESS 0xf430280c
#define L2TM_L2TE_WRED_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA7 0xf4302810
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data_rsvd : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA6 0xf4302814
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_idx : 4; /* bits 3:0 */
		ca_uint32_t mark_idx : 4; /* bits 7:4 */
		ca_uint32_t data_rsvd : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA5 0xf4302818
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA4 0xf430281c
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA3 0xf4302820
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA2 0xf4302824
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA1 0xf4302828
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_MEM_DATA0 0xf430282c
#define L2TM_L2TE_WRED_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS 0xf4302830
#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1 0xf4302834
#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel6 : 3; /* bits 2:0 */
		ca_uint32_t sel7 : 5; /* bits 7:3 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0 0xf4302838
#define L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel0 : 5; /* bits 4:0 */
		ca_uint32_t sel1 : 5; /* bits 9:5 */
		ca_uint32_t sel2 : 5; /* bits 14:10 */
		ca_uint32_t sel3 : 5; /* bits 19:15 */
		ca_uint32_t sel4 : 5; /* bits 24:20 */
		ca_uint32_t sel5 : 5; /* bits 29:25 */
		ca_uint32_t sel6 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_wred */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_WRED_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_WRED_AFGS_MEM_ACCESS_t AFGS_MEM_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_WRED_AFGS_MEM_DATA_t AFGS_MEM_DATA; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TE_WRED_PROFILE_MEM_ACCESS_t PROFILE_MEM_ACCESS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA7_t PROFILE_MEM_DATA7; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA6_t PROFILE_MEM_DATA6; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA5_t PROFILE_MEM_DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA4_t PROFILE_MEM_DATA4; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA3_t PROFILE_MEM_DATA3; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA2_t PROFILE_MEM_DATA2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA1_t PROFILE_MEM_DATA1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TE_WRED_PROFILE_MEM_DATA0_t PROFILE_MEM_DATA0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TE_WRED_PROFILE_SELECT_MEM_ACCESS_t
	  PROFILE_SELECT_MEM_ACCESS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA1_t
	  PROFILE_SELECT_MEM_DATA1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TE_WRED_PROFILE_SELECT_MEM_DATA0_t
	  PROFILE_SELECT_MEM_DATA0; /* addr: 0x00000038 */
} APB0_L2TM_L2TE_WRED_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_fc_glb
 */

#define L2TM_L2TE_FC_GLB_INT 0xf4302900
#define L2TM_L2TE_FC_GLB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxflowcntl0 : 1; /* bits 0:0 */
		ca_uint32_t rxflowcntl1 : 1; /* bits 1:1 */
		ca_uint32_t rxflowcntl2 : 1; /* bits 2:2 */
		ca_uint32_t rxflowcntl3 : 1; /* bits 3:3 */
		ca_uint32_t rxflowcntl4 : 1; /* bits 4:4 */
		ca_uint32_t rxflowcntl5 : 1; /* bits 5:5 */
		ca_uint32_t rxflowcntl6 : 1; /* bits 6:6 */
		ca_uint32_t rxflowcntl7 : 1; /* bits 7:7 */
		ca_uint32_t rxflowcntl8 : 1; /* bits 8:8 */
		ca_uint32_t rxflowcntl9 : 1; /* bits 9:9 */
		ca_uint32_t rxflowcntl10 : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t rxflowcntl13 : 1; /* bits 13:13 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t txflowcntl0 : 1; /* bits 16:16 */
		ca_uint32_t txflowcntl1 : 1; /* bits 17:17 */
		ca_uint32_t txflowcntl2 : 1; /* bits 18:18 */
		ca_uint32_t txflowcntl3 : 1; /* bits 19:19 */
		ca_uint32_t txflowcntl4 : 1; /* bits 20:20 */
		ca_uint32_t txflowcntl5 : 1; /* bits 21:21 */
		ca_uint32_t txflowcntl6 : 1; /* bits 22:22 */
		ca_uint32_t txflowcntl7 : 1; /* bits 23:23 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t txflowcntl9 : 1; /* bits 25:25 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t txflowcntl11 : 1; /* bits 27:27 */
		ca_uint32_t txflowcntl12 : 1; /* bits 28:28 */
		ca_uint32_t txflowcntl13 : 1; /* bits 29:29 */
		ca_uint32_t txflowcntl14 : 1; /* bits 30:30 */
		ca_uint32_t txflowcntl15 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_INT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_GLB_INTE 0xf4302904
#define L2TM_L2TE_FC_GLB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxflowcntl0E : 1; /* bits 0:0 */
		ca_uint32_t rxflowcntl1E : 1; /* bits 1:1 */
		ca_uint32_t rxflowcntl2E : 1; /* bits 2:2 */
		ca_uint32_t rxflowcntl3E : 1; /* bits 3:3 */
		ca_uint32_t rxflowcntl4E : 1; /* bits 4:4 */
		ca_uint32_t rxflowcntl5E : 1; /* bits 5:5 */
		ca_uint32_t rxflowcntl6E : 1; /* bits 6:6 */
		ca_uint32_t rxflowcntl7E : 1; /* bits 7:7 */
		ca_uint32_t rxflowcntl8E : 1; /* bits 8:8 */
		ca_uint32_t rxflowcntl9E : 1; /* bits 9:9 */
		ca_uint32_t rxflowcntl10E : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t rxflowcntl13E : 1; /* bits 13:13 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t txflowcntl0E : 1; /* bits 16:16 */
		ca_uint32_t txflowcntl1E : 1; /* bits 17:17 */
		ca_uint32_t txflowcntl2E : 1; /* bits 18:18 */
		ca_uint32_t txflowcntl3E : 1; /* bits 19:19 */
		ca_uint32_t txflowcntl4E : 1; /* bits 20:20 */
		ca_uint32_t txflowcntl5E : 1; /* bits 21:21 */
		ca_uint32_t txflowcntl6E : 1; /* bits 22:22 */
		ca_uint32_t txflowcntl7E : 1; /* bits 23:23 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t txflowcntl9E : 1; /* bits 25:25 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t txflowcntl11E : 1; /* bits 27:27 */
		ca_uint32_t txflowcntl12E : 1; /* bits 28:28 */
		ca_uint32_t txflowcntl13E : 1; /* bits 29:29 */
		ca_uint32_t txflowcntl14E : 1; /* bits 30:30 */
		ca_uint32_t txflowcntl15E : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_GLB_CTRL 0xf4302908
#define L2TM_L2TE_FC_GLB_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t deepq_rxpfc_en : 8; /* bits 7:0 */
		ca_uint32_t cpu_rxpfc_en : 8; /* bits 15:8 */
		ca_uint32_t l3fewan_rxpfc_en : 8; /* bits 23:16 */
		ca_uint32_t l3felan_rxpfc_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_GLB_STS 0xf430290c
#define L2TM_L2TE_FC_GLB_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t deepq_rxpfc : 8; /* bits 7:0 */
		ca_uint32_t cpu_rxpfc : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_GLB_TIMER 0xf4302910
#define L2TM_L2TE_FC_GLB_TIMER_dft 0x000073ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num_of_cycles : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t cycle_unit : 3; /* bits 14:12 */
		ca_uint32_t rsrvd2 : 16;
		ca_uint32_t enable : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_TIMER_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_GLB_PFC_CTRL0 0xf4302914
#define L2TM_L2TE_FC_GLB_PFC_CTRL0_STRIDE 8
#define L2TM_L2TE_FC_GLB_PFC_CTRL0_COUNT 2
#define L2TM_L2TE_FC_GLB_PFC_CTRL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cos_bmap : 8; /* bits 7:0 */
		ca_uint32_t port_bmap : 8; /* bits 15:8 */
		ca_uint32_t rxpfc_en : 1; /* bits 16:16 */
		ca_uint32_t txpfc_en : 1; /* bits 17:17 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_PFC_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_GLB_PFC_CNT0 0xf4302918
#define L2TM_L2TE_FC_GLB_PFC_CNT0_STRIDE 8
#define L2TM_L2TE_FC_GLB_PFC_CNT0_COUNT 2
#define L2TM_L2TE_FC_GLB_PFC_CNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_GLB_PFC_CNT0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_fc_glb */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_FC_GLB_INT_t INT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_FC_GLB_INTE_t INTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_FC_GLB_CTRL_t CTRL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TE_FC_GLB_STS_t STS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_FC_GLB_TIMER_t TIMER; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TE_FC_GLB_PFC_CTRL0_t PFC_CTRL0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TE_FC_GLB_PFC_CNT0_t PFC_CNT0; /* addr: 0x00000018 */
} APB0_L2TM_L2TE_FC_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_fc[0..13]
 */

#define L2TM_L2TE_FC_CTRL 0xf4302980
#define L2TM_L2TE_FC_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_en : 1; /* bits 0:0 */
		ca_uint32_t tx_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t stat_pri_sel : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_STS 0xf4302984
#define L2TM_L2TE_FC_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxpfc : 8; /* bits 7:0 */
		ca_uint32_t txpfc : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_FC_STAT 0xf4302988
#define L2TM_L2TE_FC_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flag_num : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t voq : 7; /* bits 10:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t qm_voq : 9; /* bits 20:12 */
		ca_uint32_t rsrvd3 : 9;
		ca_uint32_t txpfc : 1; /* bits 30:30 */
		ca_uint32_t rxpfc : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_FC_STAT_t;
#endif /* !__ASSEMBLER__ */

#define APB0_L2TM_L2TE_FC_STRIDE 64
#define APB0_L2TM_L2TE_FC_COUNT 14

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_fc */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_FC_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_FC_STS_t STS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_FC_STAT_t STAT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[55];
} APB0_L2TM_L2TE_FC_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_cb
 */

#define L2TM_L2TE_CB_INT 0xf4302d00
#define L2TM_L2TE_CB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_bufcnt_udfl : 1; /* bits 0:0 */
		ca_uint32_t voq_bufcnt_ovfl : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t port_freecnt_udfl : 1; /* bits 4:4 */
		ca_uint32_t port_freecnt_ovfl : 1; /* bits 5:5 */
		ca_uint32_t rsrvd2 : 26;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_INT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_INTE 0xf4302d04
#define L2TM_L2TE_CB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_bufcnt_udflE : 1; /* bits 0:0 */
		ca_uint32_t voq_bufcnt_ovflE : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t port_freecnt_udflE : 1; /* bits 4:4 */
		ca_uint32_t port_freecnt_ovflE : 1; /* bits 5:5 */
		ca_uint32_t rsrvd2 : 26;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_ERR_INFO 0xf4302d08
#define L2TM_L2TE_CB_ERR_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_of_buferr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_ERR_INFO_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_CTRL 0xf4302d0c
#define L2TM_L2TE_CB_CTRL_dft 0x0003ff03

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t scan_cycle_per_run : 8; /* bits 7:0 */
		ca_uint32_t scan_cycle_unit : 10; /* bits 17:8 */
		ca_uint32_t rsrvd1 : 13;
		ca_uint32_t scan_enable : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0 0xf4302d10
#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_STRIDE 4
#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_COUNT 2
#define L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dqid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0 0xf4302d18
#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_STRIDE 4
#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_COUNT 2
#define L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dqid : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_TM_TAILDROP_STS0 0xf4302d20
#define L2TM_L2TE_CB_TM_TAILDROP_STS0_STRIDE 4
#define L2TM_L2TE_CB_TM_TAILDROP_STS0_COUNT 4
#define L2TM_L2TE_CB_TM_TAILDROP_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_TM_TAILDROP_STS0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_QM_TAILDROP_STS0 0xf4302d30
#define L2TM_L2TE_CB_QM_TAILDROP_STS0_STRIDE 4
#define L2TM_L2TE_CB_QM_TAILDROP_STS0_COUNT 12
#define L2TM_L2TE_CB_QM_TAILDROP_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_QM_TAILDROP_STS0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_GLOB_TD_STS 0xf4302d60
#define L2TM_L2TE_CB_GLOB_TD_STS_dft 0x0020ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t per_port_prvt_avl : 16; /* bits 15:0 */
		ca_uint32_t noncong_buf_avl : 1; /* bits 16:16 */
		ca_uint32_t common_buf_avl : 1; /* bits 17:17 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t fc_buf_usg_l : 1; /* bits 21:21 */
		ca_uint32_t fc_buf_usg_m : 1; /* bits 22:22 */
		ca_uint32_t fc_buf_usg_h : 1; /* bits 23:23 */
		ca_uint32_t pfc : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_GLOB_TD_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_PORT_TD_STS 0xf4302d64
#define L2TM_L2TE_CB_PORT_TD_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port : 16; /* bits 15:0 */
		ca_uint32_t src_port : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_PORT_TD_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_TD_STS0 0xf4302d68
#define L2TM_L2TE_CB_VOQ_TD_STS0_STRIDE 4
#define L2TM_L2TE_CB_VOQ_TD_STS0_COUNT 4
#define L2TM_L2TE_CB_VOQ_TD_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_TD_STS0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PRI_TD_STS 0xf4302d78
#define L2TM_L2TE_CB_SRC_PRI_TD_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t src_pri : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PRI_TD_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0 0xf4302d7c
#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0_STRIDE 8
#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_PORT_THRSH_PROFILE0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0 0xf4302d80
#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_STRIDE 8
#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t grplth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t grphth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_PORT_THRSH_SELECT 0xf4302d9c
#define L2TM_L2TE_CB_PORT_THRSH_SELECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thsel0 : 2; /* bits 1:0 */
		ca_uint32_t thsel1 : 2; /* bits 3:2 */
		ca_uint32_t thsel2 : 2; /* bits 5:4 */
		ca_uint32_t thsel3 : 2; /* bits 7:6 */
		ca_uint32_t thsel4 : 2; /* bits 9:8 */
		ca_uint32_t thsel5 : 2; /* bits 11:10 */
		ca_uint32_t thsel6 : 2; /* bits 13:12 */
		ca_uint32_t thsel7 : 2; /* bits 15:14 */
		ca_uint32_t thsel8 : 2; /* bits 17:16 */
		ca_uint32_t thsel9 : 2; /* bits 19:18 */
		ca_uint32_t thsel10 : 2; /* bits 21:20 */
		ca_uint32_t thsel11 : 2; /* bits 23:22 */
		ca_uint32_t thsel12 : 2; /* bits 25:24 */
		ca_uint32_t thsel13 : 2; /* bits 27:26 */
		ca_uint32_t thsel14 : 2; /* bits 29:28 */
		ca_uint32_t thsel15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4302da0
#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1 0xf4302da4
#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t grplth : 13; /* bits 12:0 */
		ca_uint32_t grphth : 15; /* bits 27:13 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0 0xf4302da8
#define L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t hth : 15; /* bits 29:15 */
		ca_uint32_t grplth : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS 0xf4302dac
#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA 0xf4302db0
#define L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS 0xf4302db4
#define L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA 0xf4302db8
#define L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 15; /* bits 14:0 */
		ca_uint32_t cnt0_msb : 1; /* bits 15:15 */
		ca_uint32_t cnt1 : 15; /* bits 30:16 */
		ca_uint32_t cnt1_msb : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS 0xf4302dbc
#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA 0xf4302dc0
#define L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 15; /* bits 14:0 */
		ca_uint32_t cnt0_rsvd : 1; /* bits 15:15 */
		ca_uint32_t cnt1 : 15; /* bits 30:16 */
		ca_uint32_t cnt1_rsvd : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS 0xf4302dc4
#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA 0xf4302dc8
#define L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_GLB_THRSH 0xf4302dcc
#define L2TM_L2TE_CB_GLB_THRSH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_GLB_THRSH_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_GLB_PRI_THRSH0 0xf4302dd0
#define L2TM_L2TE_CB_GLB_PRI_THRSH0_STRIDE 4
#define L2TM_L2TE_CB_GLB_PRI_THRSH0_COUNT 8
#define L2TM_L2TE_CB_GLB_PRI_THRSH0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_GLB_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_CTRL 0xf4302df0
#define L2TM_L2TE_CB_SRC_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t src0_pri_nspid : 3; /* bits 2:0 */
		ca_uint32_t src0_pri_en : 1; /* bits 3:3 */
		ca_uint32_t src1_pri_nspid : 3; /* bits 6:4 */
		ca_uint32_t src1_pri_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0 0xf4302df4
#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_STRIDE 4
#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT 0xf4302e04
#define L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thsel0 : 2; /* bits 1:0 */
		ca_uint32_t thsel1 : 2; /* bits 3:2 */
		ca_uint32_t thsel2 : 2; /* bits 5:4 */
		ca_uint32_t thsel3 : 2; /* bits 7:6 */
		ca_uint32_t thsel4 : 2; /* bits 9:8 */
		ca_uint32_t thsel5 : 2; /* bits 11:10 */
		ca_uint32_t thsel6 : 2; /* bits 13:12 */
		ca_uint32_t thsel7 : 2; /* bits 15:14 */
		ca_uint32_t thsel8 : 2; /* bits 17:16 */
		ca_uint32_t thsel9 : 2; /* bits 19:18 */
		ca_uint32_t thsel10 : 2; /* bits 21:20 */
		ca_uint32_t thsel11 : 2; /* bits 23:22 */
		ca_uint32_t thsel12 : 2; /* bits 25:24 */
		ca_uint32_t thsel13 : 2; /* bits 27:26 */
		ca_uint32_t thsel14 : 2; /* bits 29:28 */
		ca_uint32_t thsel15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC0_PRI_THRSH0 0xf4302e08
#define L2TM_L2TE_CB_SRC0_PRI_THRSH0_STRIDE 4
#define L2TM_L2TE_CB_SRC0_PRI_THRSH0_COUNT 8
#define L2TM_L2TE_CB_SRC0_PRI_THRSH0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC0_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC1_PRI_THRSH0 0xf4302e28
#define L2TM_L2TE_CB_SRC1_PRI_THRSH0_STRIDE 4
#define L2TM_L2TE_CB_SRC1_PRI_THRSH0_COUNT 8
#define L2TM_L2TE_CB_SRC1_PRI_THRSH0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC1_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS 0xf4302e48
#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA 0xf4302e4c
#define L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS 0xf4302e50
#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA 0xf4302e54
#define L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0 0xf4302e58
#define L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0_dft 0x00007fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t th0 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0 0xf4302e5c
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_STRIDE 4
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_COUNT 4
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_dft 0x7fff7fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hth : 15; /* bits 30:16 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT 0xf4302e6c
#define L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thsel0 : 2; /* bits 1:0 */
		ca_uint32_t thsel1 : 2; /* bits 3:2 */
		ca_uint32_t thsel2 : 2; /* bits 5:4 */
		ca_uint32_t thsel3 : 2; /* bits 7:6 */
		ca_uint32_t thsel4 : 2; /* bits 9:8 */
		ca_uint32_t thsel5 : 2; /* bits 11:10 */
		ca_uint32_t thsel6 : 2; /* bits 13:12 */
		ca_uint32_t thsel7 : 2; /* bits 15:14 */
		ca_uint32_t thsel8 : 2; /* bits 17:16 */
		ca_uint32_t thsel9 : 2; /* bits 19:18 */
		ca_uint32_t thsel10 : 2; /* bits 21:20 */
		ca_uint32_t thsel11 : 2; /* bits 23:22 */
		ca_uint32_t thsel12 : 2; /* bits 25:24 */
		ca_uint32_t thsel13 : 2; /* bits 27:26 */
		ca_uint32_t thsel14 : 2; /* bits 29:28 */
		ca_uint32_t thsel15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4302e70
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA 0xf4302e74
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 15; /* bits 14:0 */
		ca_uint32_t hth : 15; /* bits 29:15 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS 0xf4302e78
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA 0xf4302e7c
#define L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_cb */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_CB_INT_t INT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_CB_INTE_t INTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_CB_ERR_INFO_t ERR_INFO; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TE_CB_CTRL_t CTRL; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_CB_TM_DQSCH_HI_BUF_USG0_t
	  TM_DQSCH_HI_BUF_USG0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[7];
	L2TM_L2TE_CB_TM_DQSCH_MID_BUF_USG0_t
	  TM_DQSCH_MID_BUF_USG0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd6[7];
	L2TM_L2TE_CB_TM_TAILDROP_STS0_t TM_TAILDROP_STS0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd7[15];
	L2TM_L2TE_CB_QM_TAILDROP_STS0_t QM_TAILDROP_STS0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd8[47];
	L2TM_L2TE_CB_GLOB_TD_STS_t GLOB_TD_STS; /* addr: 0x00000060 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TE_CB_PORT_TD_STS_t PORT_TD_STS; /* addr: 0x00000064 */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TE_CB_VOQ_TD_STS0_t VOQ_TD_STS0; /* addr: 0x00000068 */
	ca_uint32_t rsrvd11[15];
	L2TM_L2TE_CB_SRC_PRI_TD_STS_t SRC_PRI_TD_STS; /* addr: 0x00000078 */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TE_CB_PORT_THRSH_PROFILE0_t PORT_THRSH_PROFILE0; /* addr: 0x0000007c */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TE_CB_PORT_GRPTHRSH_PROFILE0_t
	  PORT_GRPTHRSH_PROFILE0; /* addr: 0x00000080 */
	ca_uint32_t rsrvd14[27];
	L2TM_L2TE_CB_PORT_THRSH_SELECT_t PORT_THRSH_SELECT; /* addr: 0x0000009c */
	ca_uint32_t rsrvd15[3];
	L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t
	  VOQ_THRSH_PROFILE_MEM_ACCESS; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd16[3];
	L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t
	  VOQ_THRSH_PROFILE_MEM_DATA1; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd17[3];
	L2TM_L2TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t
	  VOQ_THRSH_PROFILE_MEM_DATA0; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd18[3];
	L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t
	  VOQ_THRSH_SELECT_MEM_ACCESS; /* addr: 0x000000ac */
	ca_uint32_t rsrvd19[3];
	L2TM_L2TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t
	  VOQ_THRSH_SELECT_MEM_DATA; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd20[3];
	L2TM_L2TE_CB_PORT_FREECNT_MEM_ACCESS_t
	  PORT_FREECNT_MEM_ACCESS; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd21[3];
	L2TM_L2TE_CB_PORT_FREECNT_MEM_DATA_t
	  PORT_FREECNT_MEM_DATA; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd22[3];
	L2TM_L2TE_CB_VOQ_BUFCNT_MEM_ACCESS_t
	  VOQ_BUFCNT_MEM_ACCESS; /* addr: 0x000000bc */
	ca_uint32_t rsrvd23[3];
	L2TM_L2TE_CB_VOQ_BUFCNT_MEM_DATA_t VOQ_BUFCNT_MEM_DATA; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd24[3];
	L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t
	  VOQ_MAX_BUFCNT_MEM_ACCESS; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd25[3];
	L2TM_L2TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t
	  VOQ_MAX_BUFCNT_MEM_DATA; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd26[3];
	L2TM_L2TE_CB_GLB_THRSH_t GLB_THRSH; /* addr: 0x000000cc */
	ca_uint32_t rsrvd27[3];
	L2TM_L2TE_CB_GLB_PRI_THRSH0_t GLB_PRI_THRSH0; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd28[31];
	L2TM_L2TE_CB_SRC_CTRL_t SRC_CTRL; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd29[3];
	L2TM_L2TE_CB_SRC_PORT_THRSH_PROFILE0_t
	  SRC_PORT_THRSH_PROFILE0; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd30[15];
	L2TM_L2TE_CB_SRC_PORT_THRSH_SELECT_t
	  SRC_PORT_THRSH_SELECT; /* addr: 0x00000104 */
	ca_uint32_t rsrvd31[3];
	L2TM_L2TE_CB_SRC0_PRI_THRSH0_t SRC0_PRI_THRSH0; /* addr: 0x00000108 */
	ca_uint32_t rsrvd32[31];
	L2TM_L2TE_CB_SRC1_PRI_THRSH0_t SRC1_PRI_THRSH0; /* addr: 0x00000128 */
	ca_uint32_t rsrvd33[31];
	L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t
	  SRC_PORT_BUFCNT_MEM_ACCESS; /* addr: 0x00000148 */
	ca_uint32_t rsrvd34[3];
	L2TM_L2TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t
	  SRC_PORT_BUFCNT_MEM_DATA; /* addr: 0x0000014c */
	ca_uint32_t rsrvd35[3];
	L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t
	  SRC_PRI_BUFCNT_MEM_ACCESS; /* addr: 0x00000150 */
	ca_uint32_t rsrvd36[3];
	L2TM_L2TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t
	  SRC_PRI_BUFCNT_MEM_DATA; /* addr: 0x00000154 */
	ca_uint32_t rsrvd37[3];
	L2TM_L2TE_CB_DQSCH_EQ_PROFILE_THRSH0_t
	  DQSCH_EQ_PROFILE_THRSH0; /* addr: 0x00000158 */
	ca_uint32_t rsrvd38[3];
	L2TM_L2TE_CB_DQSCH_PORT_THRSH_PROFILE0_t
	  DQSCH_PORT_THRSH_PROFILE0; /* addr: 0x0000015c */
	ca_uint32_t rsrvd39[15];
	L2TM_L2TE_CB_DQSCH_PORT_THRSH_SELECT_t
	  DQSCH_PORT_THRSH_SELECT; /* addr: 0x0000016c */
	ca_uint32_t rsrvd40[3];
	L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t
	  DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS; /* addr: 0x00000170 */
	ca_uint32_t rsrvd41[3];
	L2TM_L2TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t
	  DQSCH_VOQ_THRSH_PROFILE_MEM_DATA; /* addr: 0x00000174 */
	ca_uint32_t rsrvd42[3];
	L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t
	  DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS; /* addr: 0x00000178 */
	ca_uint32_t rsrvd43[3];
	L2TM_L2TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t
	  DQSCH_VOQ_THRSH_SELECT_MEM_DATA; /* addr: 0x0000017c */
} APB0_L2TM_L2TE_CB_t;
#endif /* !__ASSEMBLER__ */

/*
 * l2te_pm
 */

#define L2TM_L2TE_PM_CTRL 0xf4302f00
#define L2TM_L2TE_PM_CTRL_dft 0x00000ca0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_saturate : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t mem_saturate : 1; /* bits 4:4 */
		ca_uint32_t mem_auto_clr_on_read : 1; /* bits 5:5 */
		ca_uint32_t mem_init : 1; /* bits 6:6 */
		ca_uint32_t mem_disable : 1; /* bits 7:7 */
		ca_uint32_t cnt0_mem_event_sel : 1; /* bits 8:8 */
		ca_uint32_t cnt0_mem_id_sel : 1; /* bits 9:9 */
		ca_uint32_t cnt1_mem_event_sel : 1; /* bits 10:10 */
		ca_uint32_t cnt1_mem_id_sel : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 20;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_EVENT_CFG_0 0xf4302f04
#define L2TM_L2TE_PM_EVENT_CFG_0_dft 0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0_lo : 4; /* bits 3:0 */
		ca_uint32_t cnt0_hi : 4; /* bits 7:4 */
		ca_uint32_t cnt1_lo : 4; /* bits 11:8 */
		ca_uint32_t cnt1_hi : 4; /* bits 15:12 */
		ca_uint32_t cnt2_lo : 4; /* bits 19:16 */
		ca_uint32_t cnt2_hi : 4; /* bits 23:20 */
		ca_uint32_t cnt3_lo : 4; /* bits 27:24 */
		ca_uint32_t cnt3_hi : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_EVENT_CFG_0_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_EVENT_CFG_1 0xf4302f08
#define L2TM_L2TE_PM_EVENT_CFG_1_dft 0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0_lo : 4; /* bits 3:0 */
		ca_uint32_t cnt0_hi : 4; /* bits 7:4 */
		ca_uint32_t cnt1_lo : 4; /* bits 11:8 */
		ca_uint32_t cnt1_hi : 4; /* bits 15:12 */
		ca_uint32_t cnt2_lo : 4; /* bits 19:16 */
		ca_uint32_t cnt2_hi : 4; /* bits 23:20 */
		ca_uint32_t cnt3_lo : 4; /* bits 27:24 */
		ca_uint32_t cnt3_hi : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_EVENT_CFG_1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_STS 0xf4302f0c
#define L2TM_L2TE_PM_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcnt0_init_done : 1; /* bits 0:0 */
		ca_uint32_t pcnt1_init_done : 1; /* bits 1:1 */
		ca_uint32_t bcnt0_init_done : 1; /* bits 2:2 */
		ca_uint32_t bcnt1_init_done : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_STS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_PCNT 0xf4302f10
#define L2TM_L2TE_PM_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_PRE_MARK_PCNT 0xf4302f14
#define L2TM_L2TE_PM_PRE_MARK_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_PRE_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_POL_DROP_PCNT 0xf4302f18
#define L2TM_L2TE_PM_POL_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_POL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_TAIL_DROP_PCNT 0xf4302f1c
#define L2TM_L2TE_PM_TAIL_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_TAIL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_WRED_Y_DROP_PCNT 0xf4302f20
#define L2TM_L2TE_PM_WRED_Y_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_WRED_Y_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_WRED_G_DROP_PCNT 0xf4302f24
#define L2TM_L2TE_PM_WRED_G_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_WRED_G_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_MARK_PCNT 0xf4302f28
#define L2TM_L2TE_PM_MARK_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_POL_MARK_PCNT 0xf4302f2c
#define L2TM_L2TE_PM_POL_MARK_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_POL_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_BYPASS_PCNT 0xf4302f30
#define L2TM_L2TE_PM_BYPASS_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_BYPASS_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_BYPASS_FLOW_PCNT 0xf4302f34
#define L2TM_L2TE_PM_BYPASS_FLOW_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_BYPASS_FLOW_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CE_PCNT 0xf4302f38
#define L2TM_L2TE_PM_CE_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CE_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_ACCESS 0xf4302f3c
#define L2TM_L2TE_PM_CNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA8 0xf4302f40
#define L2TM_L2TE_PM_CNT_MEM_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt7 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA8_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA7 0xf4302f44
#define L2TM_L2TE_PM_CNT_MEM_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt6 : 12; /* bits 11:0 */
		ca_uint32_t cnt7 : 20; /* bits 31:12 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA6 0xf4302f48
#define L2TM_L2TE_PM_CNT_MEM_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt5 : 8; /* bits 7:0 */
		ca_uint32_t cnt6 : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA5 0xf4302f4c
#define L2TM_L2TE_PM_CNT_MEM_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt4 : 4; /* bits 3:0 */
		ca_uint32_t cnt5 : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA4 0xf4302f50
#define L2TM_L2TE_PM_CNT_MEM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA3 0xf4302f54
#define L2TM_L2TE_PM_CNT_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA2 0xf4302f58
#define L2TM_L2TE_PM_CNT_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA1 0xf4302f5c
#define L2TM_L2TE_PM_CNT_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L2TM_L2TE_PM_CNT_MEM_DATA0 0xf4302f60
#define L2TM_L2TE_PM_CNT_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L2TM_L2TE_PM_CNT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* l2te_pm */
#ifndef __ASSEMBLER__
typedef struct {
	L2TM_L2TE_PM_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L2TM_L2TE_PM_EVENT_CFG_0_t EVENT_CFG_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L2TM_L2TE_PM_EVENT_CFG_1_t EVENT_CFG_1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L2TM_L2TE_PM_STS_t STS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L2TM_L2TE_PM_PCNT_t PCNT; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L2TM_L2TE_PM_PRE_MARK_PCNT_t PRE_MARK_PCNT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L2TM_L2TE_PM_POL_DROP_PCNT_t POL_DROP_PCNT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L2TM_L2TE_PM_TAIL_DROP_PCNT_t TAIL_DROP_PCNT; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L2TM_L2TE_PM_WRED_Y_DROP_PCNT_t WRED_Y_DROP_PCNT; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L2TM_L2TE_PM_WRED_G_DROP_PCNT_t WRED_G_DROP_PCNT; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L2TM_L2TE_PM_MARK_PCNT_t MARK_PCNT; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L2TM_L2TE_PM_POL_MARK_PCNT_t POL_MARK_PCNT; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L2TM_L2TE_PM_BYPASS_PCNT_t BYPASS_PCNT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L2TM_L2TE_PM_BYPASS_FLOW_PCNT_t BYPASS_FLOW_PCNT; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L2TM_L2TE_PM_CE_PCNT_t CE_PCNT; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L2TM_L2TE_PM_CNT_MEM_ACCESS_t CNT_MEM_ACCESS; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L2TM_L2TE_PM_CNT_MEM_DATA8_t CNT_MEM_DATA8; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L2TM_L2TE_PM_CNT_MEM_DATA7_t CNT_MEM_DATA7; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L2TM_L2TE_PM_CNT_MEM_DATA6_t CNT_MEM_DATA6; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L2TM_L2TE_PM_CNT_MEM_DATA5_t CNT_MEM_DATA5; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L2TM_L2TE_PM_CNT_MEM_DATA4_t CNT_MEM_DATA4; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L2TM_L2TE_PM_CNT_MEM_DATA3_t CNT_MEM_DATA3; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L2TM_L2TE_PM_CNT_MEM_DATA2_t CNT_MEM_DATA2; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L2TM_L2TE_PM_CNT_MEM_DATA1_t CNT_MEM_DATA1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L2TM_L2TE_PM_CNT_MEM_DATA0_t CNT_MEM_DATA0; /* addr: 0x00000060 */
} APB0_L2TM_L2TE_PM_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L2TM */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_L2TM_L2TM_GLB_t l2tm_glb; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[243];
	APB0_L2TM_L2TM_BM_t l2tm_bm; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[179];
	APB0_L2TM_L2TM_QM_t l2tm_qm; /* addr: 0x00000200 */
	ca_uint32_t rsrvd3[169];
	APB0_L2TM_L2TM_ES_t l2tm_es; /* addr: 0x00000300 */
	ca_uint32_t rsrvd4[133];
	APB0_L2TM_L2TE_GLB_t l2te_glb; /* addr: 0x00000400 */
	ca_uint32_t rsrvd5[241];
	APB0_L2TM_L2TE_POL_t l2te_pol; /* addr: 0x00000500 */
	ca_uint32_t rsrvd6[357];
	APB0_L2TM_L2TE_SHP_t l2te_shp; /* addr: 0x00000700 */
	ca_uint32_t rsrvd7[223];
	APB0_L2TM_L2TE_WRED_t l2te_wred; /* addr: 0x00000800 */
	ca_uint32_t rsrvd8[227];
	APB0_L2TM_L2TE_FC_GLB_t l2te_fc_glb; /* addr: 0x00000900 */
	ca_uint32_t rsrvd9[111];
	APB0_L2TM_L2TE_FC_t l2te_fc[14]; /* addr: 0x00000980 */
	APB0_L2TM_L2TE_CB_t l2te_cb; /* addr: 0x00000d00 */
	ca_uint32_t rsrvd10[321];
	APB0_L2TM_L2TE_PM_t l2te_pm; /* addr: 0x00000f00 */
} APB0_L2TM_t;
#endif /* !__ASSEMBLER__ */

/*
 * L3FE
 */

/*
 * GLB
 */

#define L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS 0xf4303000
#define L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA2 0xf4303004
#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t PPPOE_SESSION_ID : 9; /* bits 8:0 */
		ca_uint32_t MAC_DA_VLD : 1; /* bits 9:9 */
		ca_uint32_t MAC_DA_AN_SEL : 4; /* bits 13:10 */
		ca_uint32_t MAC_SA_VLD : 1; /* bits 14:14 */
		ca_uint32_t MAC_SA_AN_SEL : 4; /* bits 18:15 */
		ca_uint32_t L2_FORMAT_VLD : 1; /* bits 19:19 */
		ca_uint32_t L2_FORMAT : 1; /* bits 20:20 */
		ca_uint32_t LDPID_VLD : 1; /* bits 21:21 */
		ca_uint32_t LDPID : 6; /* bits 27:22 */
		ca_uint32_t DEEP_Q : 1; /* bits 28:28 */
		ca_uint32_t STAGE3_CTRL_VLD : 1; /* bits 29:29 */
		ca_uint32_t STAGE3_CTRL : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_EGRESS_L3_IF_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA1 0xf4303008
#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t INNER_TPID_ENC : 3; /* bits 2:0 */
		ca_uint32_t TOP_DEI_SEL : 2; /* bits 4:3 */
		ca_uint32_t TOP_DEI : 1; /* bits 5:5 */
		ca_uint32_t TOP_VID : 12; /* bits 17:6 */
		ca_uint32_t TOP_TPID_ENC : 3; /* bits 20:18 */
		ca_uint32_t VLAN_CNT : 2; /* bits 22:21 */
		ca_uint32_t PPPOE_SET : 1; /* bits 23:23 */
		ca_uint32_t PPPOE_VLD : 1; /* bits 24:24 */
		ca_uint32_t PPPOE_SESSION_ID : 7; /* bits 31:25 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_EGRESS_L3_IF_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA0 0xf430300c
#define L3FE_GLB_EGRESS_L3_IF_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t MTU_VLD : 1; /* bits 0:0 */
		ca_uint32_t MTU_ENC : 2; /* bits 2:1 */
		ca_uint32_t INNER_802_1P_SEL : 3; /* bits 5:3 */
		ca_uint32_t INNER_802_1P : 3; /* bits 8:6 */
		ca_uint32_t TOP_802_1P_SEL : 3; /* bits 11:9 */
		ca_uint32_t TOP_802_1P : 3; /* bits 14:12 */
		ca_uint32_t QOS_802_1P_TABLE_SEL : 1; /* bits 15:15 */
		ca_uint32_t VLAN_VLD : 1; /* bits 16:16 */
		ca_uint32_t INNER_DEI_SEL : 2; /* bits 18:17 */
		ca_uint32_t INNER_DEI : 1; /* bits 19:19 */
		ca_uint32_t INNER_VID : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_EGRESS_L3_IF_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DSCP_MAP_TBL_ACCESS 0xf4303010
#define L3FE_GLB_DSCP_MAP_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DSCP_MAP_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DSCP_MAP_TBL_DATA1 0xf4303014
#define L3FE_GLB_DSCP_MAP_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dscp_2_pf1_dscp : 2; /* bits 1:0 */
		ca_uint32_t dscp_2_pf1_cos : 4; /* bits 5:2 */
		ca_uint32_t dscp_2_pf1_pol_id : 9; /* bits 14:6 */
		ca_uint32_t dscp_2_pf1_pol_grp_id : 3; /* bits 17:15 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DSCP_MAP_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DSCP_MAP_TBL_DATA0 0xf4303018
#define L3FE_GLB_DSCP_MAP_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dscp_2_pf0_dot1p : 3; /* bits 2:0 */
		ca_uint32_t dscp_2_pf0_dscp : 6; /* bits 8:3 */
		ca_uint32_t dscp_2_pf0_cos : 4; /* bits 12:9 */
		ca_uint32_t dscp_2_pf0_pol_id : 9; /* bits 21:13 */
		ca_uint32_t dscp_2_pf0_pol_grp_id : 3; /* bits 24:22 */
		ca_uint32_t dscp_2_pf1_dot1p : 3; /* bits 27:25 */
		ca_uint32_t dscp_2_pf1_dscp : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DSCP_MAP_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_0 0xf430301c
#define L3FE_GLB_DOT1P_MAPPING_0_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_0 0xf4303020
#define L3FE_GLB_DOT1P_MAPPING_1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_1 0xf4303024
#define L3FE_GLB_DOT1P_MAPPING_0_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_1 0xf4303028
#define L3FE_GLB_DOT1P_MAPPING_1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_2 0xf430302c
#define L3FE_GLB_DOT1P_MAPPING_0_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_2 0xf4303030
#define L3FE_GLB_DOT1P_MAPPING_1_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_3 0xf4303034
#define L3FE_GLB_DOT1P_MAPPING_0_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_3 0xf4303038
#define L3FE_GLB_DOT1P_MAPPING_1_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_4 0xf430303c
#define L3FE_GLB_DOT1P_MAPPING_0_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_4 0xf4303040
#define L3FE_GLB_DOT1P_MAPPING_1_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_5 0xf4303044
#define L3FE_GLB_DOT1P_MAPPING_0_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_5 0xf4303048
#define L3FE_GLB_DOT1P_MAPPING_1_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_6 0xf430304c
#define L3FE_GLB_DOT1P_MAPPING_0_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_6 0xf4303050
#define L3FE_GLB_DOT1P_MAPPING_1_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_0_7 0xf4303054
#define L3FE_GLB_DOT1P_MAPPING_0_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_0_7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DOT1P_MAPPING_1_7 0xf4303058
#define L3FE_GLB_DOT1P_MAPPING_1_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DOT1P_MAPPING_1_7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_0 0xf430305c
#define L3FE_GLB_COS_MAPPING_0_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_0 0xf4303060
#define L3FE_GLB_COS_MAPPING_1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_1 0xf4303064
#define L3FE_GLB_COS_MAPPING_0_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_1 0xf4303068
#define L3FE_GLB_COS_MAPPING_1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_2 0xf430306c
#define L3FE_GLB_COS_MAPPING_0_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_2 0xf4303070
#define L3FE_GLB_COS_MAPPING_1_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_3 0xf4303074
#define L3FE_GLB_COS_MAPPING_0_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_3 0xf4303078
#define L3FE_GLB_COS_MAPPING_1_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_4 0xf430307c
#define L3FE_GLB_COS_MAPPING_0_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_4 0xf4303080
#define L3FE_GLB_COS_MAPPING_1_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_5 0xf4303084
#define L3FE_GLB_COS_MAPPING_0_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_5 0xf4303088
#define L3FE_GLB_COS_MAPPING_1_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_6 0xf430308c
#define L3FE_GLB_COS_MAPPING_0_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_6 0xf4303090
#define L3FE_GLB_COS_MAPPING_1_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_0_7 0xf4303094
#define L3FE_GLB_COS_MAPPING_0_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_0_7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_COS_MAPPING_1_7 0xf4303098
#define L3FE_GLB_COS_MAPPING_1_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_COS_MAPPING_1_7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_FWD_CTRL_0 0xf430309c
#define L3FE_GLB_FWD_CTRL_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t change_to_llc : 1; /* bits 0:0 */
		ca_uint32_t ipv4_change_ipv6 : 1; /* bits 1:1 */
		ca_uint32_t llc_raw8023_change : 1; /* bits 2:2 */
		ca_uint32_t nonip_change_ip : 1; /* bits 3:3 */
		ca_uint32_t nonip_add_pppoe : 1; /* bits 4:4 */
		ca_uint32_t nonl4_change_l4 : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_FWD_CTRL_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_FWD_CTRL_1 0xf43030a0
#define L3FE_GLB_FWD_CTRL_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t change_to_llc : 1; /* bits 0:0 */
		ca_uint32_t ipv4_change_ipv6 : 1; /* bits 1:1 */
		ca_uint32_t llc_raw8023_change : 1; /* bits 2:2 */
		ca_uint32_t nonip_change_ip : 1; /* bits 3:3 */
		ca_uint32_t nonip_add_pppoe : 1; /* bits 4:4 */
		ca_uint32_t nonl4_change_l4 : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_FWD_CTRL_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_FWD_CTRL_2 0xf43030a4
#define L3FE_GLB_FWD_CTRL_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t change_to_llc : 1; /* bits 0:0 */
		ca_uint32_t ipv4_change_ipv6 : 1; /* bits 1:1 */
		ca_uint32_t llc_raw8023_change : 1; /* bits 2:2 */
		ca_uint32_t nonip_change_ip : 1; /* bits 3:3 */
		ca_uint32_t nonip_add_pppoe : 1; /* bits 4:4 */
		ca_uint32_t nonl4_change_l4 : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_FWD_CTRL_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_FWD_CTRL_3 0xf43030a8
#define L3FE_GLB_FWD_CTRL_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t change_to_llc : 1; /* bits 0:0 */
		ca_uint32_t ipv4_change_ipv6 : 1; /* bits 1:1 */
		ca_uint32_t llc_raw8023_change : 1; /* bits 2:2 */
		ca_uint32_t nonip_change_ip : 1; /* bits 3:3 */
		ca_uint32_t nonip_add_pppoe : 1; /* bits 4:4 */
		ca_uint32_t nonl4_change_l4 : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_FWD_CTRL_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_GLB_CFG 0xf43030ac
#define L3FE_GLB_GLB_CFG_dft 0x0001b000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t spcl_port : 6; /* bits 11:6 */
		ca_uint32_t mc_port : 6; /* bits 17:12 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ni_fe_12_bv : 1; /* bits 21:21 */
		ca_uint32_t pl_mode : 2; /* bits 23:22 */
		ca_uint32_t rsrvd3 : 7;
		ca_uint32_t l3fe_pon_mode : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_GLB_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_LF_CFG 0xf43030b0
#define L3FE_GLB_LF_CFG_dft 0x004641f4

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hi_threshold : 10; /* bits 9:0 */
		ca_uint32_t low_threshold : 10; /* bits 19:10 */
		ca_uint32_t wr_fifo_threshold : 4; /* bits 23:20 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_LF_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ILPB_01 0xf43030b4
#define L3FE_GLB_ILPB_01_STRIDE 8
#define L3FE_GLB_ILPB_01_COUNT 4
#define L3FE_GLB_ILPB_01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry1 : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ILPB_01_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ILPB_00 0xf43030b8
#define L3FE_GLB_ILPB_00_STRIDE 8
#define L3FE_GLB_ILPB_00_COUNT 4
#define L3FE_GLB_ILPB_00_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ILPB_00_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ILPB_LDPID 0xf43030d4
#define L3FE_GLB_ILPB_LDPID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t valid0 : 1; /* bits 0:0 */
		ca_uint32_t ldpid0 : 6; /* bits 6:1 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t valid1 : 1; /* bits 8:8 */
		ca_uint32_t ldpid1 : 6; /* bits 14:9 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t valid2 : 1; /* bits 16:16 */
		ca_uint32_t ldpid2 : 6; /* bits 22:17 */
		ca_uint32_t valid3 : 1; /* bits 23:23 */
		ca_uint32_t rsrvd3 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ILPB_LDPID_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ELPB1 0xf43030d8
#define L3FE_GLB_ELPB1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ELPB1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ELPB0 0xf43030dc
#define L3FE_GLB_ELPB0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t entry0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ELPB0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ELPB_DEEPQ_VLD1 0xf43030e0
#define L3FE_GLB_ELPB_DEEPQ_VLD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ELPB_DEEPQ_VLD1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ELPB_DEEPQ_VLD0 0xf43030e4
#define L3FE_GLB_ELPB_DEEPQ_VLD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ELPB_DEEPQ_VLD0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ELPB_DEEPQ1 0xf43030e8
#define L3FE_GLB_ELPB_DEEPQ1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ELPB_DEEPQ1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_ELPB_DEEPQ0 0xf43030ec
#define L3FE_GLB_ELPB_DEEPQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_ELPB_DEEPQ0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_L3FE_L2FE_LDPID 0xf43030f0
#define L3FE_GLB_L3FE_L2FE_LDPID_dft 0x00000019

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ldpid : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_L3FE_L2FE_LDPID_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_VE 0xf43030f4
#define L3FE_GLB_VE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stag_tpid_enc : 3; /* bits 2:0 */
		ca_uint32_t ctag_tpid_enc : 3; /* bits 5:3 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_VE_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_T5_OPTION 0xf43030f8
#define L3FE_GLB_T5_OPTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_T5_OPTION_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_TE_OPTION 0xf43030fc
#define L3FE_GLB_TE_OPTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_TE_OPTION_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_CLS_STG_MONITOR_CTRL 0xf4303100
#define L3FE_GLB_CLS_STG_MONITOR_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bus_sel : 8; /* bits 7:0 */
		ca_uint32_t enable : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_CLS_STG_MONITOR_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_CLS_STG_MONITOR_RETURN 0xf4303104
#define L3FE_GLB_CLS_STG_MONITOR_RETURN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_CLS_STG_MONITOR_RETURN_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DBG_IDX 0xf4303108
#define L3FE_GLB_DBG_IDX_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t idx : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DBG_IDX_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_GLB_DBG_DAT 0xf430310c
#define L3FE_GLB_DBG_DAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_GLB_DBG_DAT_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_GLB_EGRESS_L3_IF_TBL_ACCESS_t
	  EGRESS_L3_IF_TBL_ACCESS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_GLB_EGRESS_L3_IF_TBL_DATA2_t
	  EGRESS_L3_IF_TBL_DATA2; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_GLB_EGRESS_L3_IF_TBL_DATA1_t
	  EGRESS_L3_IF_TBL_DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_GLB_EGRESS_L3_IF_TBL_DATA0_t
	  EGRESS_L3_IF_TBL_DATA0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_GLB_DSCP_MAP_TBL_ACCESS_t DSCP_MAP_TBL_ACCESS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_GLB_DSCP_MAP_TBL_DATA1_t DSCP_MAP_TBL_DATA1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_GLB_DSCP_MAP_TBL_DATA0_t DSCP_MAP_TBL_DATA0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_GLB_DOT1P_MAPPING_0_0_t DOT1P_MAPPING_0_0; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_GLB_DOT1P_MAPPING_1_0_t DOT1P_MAPPING_1_0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_GLB_DOT1P_MAPPING_0_1_t DOT1P_MAPPING_0_1; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L3FE_GLB_DOT1P_MAPPING_1_1_t DOT1P_MAPPING_1_1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L3FE_GLB_DOT1P_MAPPING_0_2_t DOT1P_MAPPING_0_2; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L3FE_GLB_DOT1P_MAPPING_1_2_t DOT1P_MAPPING_1_2; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L3FE_GLB_DOT1P_MAPPING_0_3_t DOT1P_MAPPING_0_3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L3FE_GLB_DOT1P_MAPPING_1_3_t DOT1P_MAPPING_1_3; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L3FE_GLB_DOT1P_MAPPING_0_4_t DOT1P_MAPPING_0_4; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L3FE_GLB_DOT1P_MAPPING_1_4_t DOT1P_MAPPING_1_4; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L3FE_GLB_DOT1P_MAPPING_0_5_t DOT1P_MAPPING_0_5; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L3FE_GLB_DOT1P_MAPPING_1_5_t DOT1P_MAPPING_1_5; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L3FE_GLB_DOT1P_MAPPING_0_6_t DOT1P_MAPPING_0_6; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L3FE_GLB_DOT1P_MAPPING_1_6_t DOT1P_MAPPING_1_6; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L3FE_GLB_DOT1P_MAPPING_0_7_t DOT1P_MAPPING_0_7; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L3FE_GLB_DOT1P_MAPPING_1_7_t DOT1P_MAPPING_1_7; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L3FE_GLB_COS_MAPPING_0_0_t COS_MAPPING_0_0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L3FE_GLB_COS_MAPPING_1_0_t COS_MAPPING_1_0; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L3FE_GLB_COS_MAPPING_0_1_t COS_MAPPING_0_1; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L3FE_GLB_COS_MAPPING_1_1_t COS_MAPPING_1_1; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L3FE_GLB_COS_MAPPING_0_2_t COS_MAPPING_0_2; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L3FE_GLB_COS_MAPPING_1_2_t COS_MAPPING_1_2; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L3FE_GLB_COS_MAPPING_0_3_t COS_MAPPING_0_3; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L3FE_GLB_COS_MAPPING_1_3_t COS_MAPPING_1_3; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L3FE_GLB_COS_MAPPING_0_4_t COS_MAPPING_0_4; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L3FE_GLB_COS_MAPPING_1_4_t COS_MAPPING_1_4; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L3FE_GLB_COS_MAPPING_0_5_t COS_MAPPING_0_5; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L3FE_GLB_COS_MAPPING_1_5_t COS_MAPPING_1_5; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L3FE_GLB_COS_MAPPING_0_6_t COS_MAPPING_0_6; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L3FE_GLB_COS_MAPPING_1_6_t COS_MAPPING_1_6; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L3FE_GLB_COS_MAPPING_0_7_t COS_MAPPING_0_7; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L3FE_GLB_COS_MAPPING_1_7_t COS_MAPPING_1_7; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L3FE_GLB_FWD_CTRL_0_t FWD_CTRL_0; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L3FE_GLB_FWD_CTRL_1_t FWD_CTRL_1; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L3FE_GLB_FWD_CTRL_2_t FWD_CTRL_2; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L3FE_GLB_FWD_CTRL_3_t FWD_CTRL_3; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L3FE_GLB_GLB_CFG_t GLB_CFG; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	L3FE_GLB_LF_CFG_t LF_CFG; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	L3FE_GLB_ILPB_01_t ILPB_01; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	L3FE_GLB_ILPB_00_t ILPB_00; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[27];
	L3FE_GLB_ILPB_LDPID_t ILPB_LDPID; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd48[3];
	L3FE_GLB_ELPB1_t ELPB1; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd49[3];
	L3FE_GLB_ELPB0_t ELPB0; /* addr: 0x000000dc */
	ca_uint32_t rsrvd50[3];
	L3FE_GLB_ELPB_DEEPQ_VLD1_t ELPB_DEEPQ_VLD1; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd51[3];
	L3FE_GLB_ELPB_DEEPQ_VLD0_t ELPB_DEEPQ_VLD0; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd52[3];
	L3FE_GLB_ELPB_DEEPQ1_t ELPB_DEEPQ1; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd53[3];
	L3FE_GLB_ELPB_DEEPQ0_t ELPB_DEEPQ0; /* addr: 0x000000ec */
	ca_uint32_t rsrvd54[3];
	L3FE_GLB_L3FE_L2FE_LDPID_t L3FE_L2FE_LDPID; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd55[3];
	L3FE_GLB_VE_t VE; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd56[3];
	L3FE_GLB_T5_OPTION_t T5_OPTION; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd57[3];
	L3FE_GLB_TE_OPTION_t TE_OPTION; /* addr: 0x000000fc */
	ca_uint32_t rsrvd58[3];
	L3FE_GLB_CLS_STG_MONITOR_CTRL_t CLS_STG_MONITOR_CTRL; /* addr: 0x00000100 */
	ca_uint32_t rsrvd59[3];
	L3FE_GLB_CLS_STG_MONITOR_RETURN_t
	  CLS_STG_MONITOR_RETURN; /* addr: 0x00000104 */
	ca_uint32_t rsrvd60[3];
	L3FE_GLB_DBG_IDX_t DBG_IDX; /* addr: 0x00000108 */
	ca_uint32_t rsrvd61[3];
	L3FE_GLB_DBG_DAT_t DBG_DAT; /* addr: 0x0000010c */
} APB0_L3FE_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * PP
 */

#define L3FE_PP_FIELD_CAM_ACCESS 0xf4303200
#define L3FE_PP_FIELD_CAM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_FIELD_CAM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_FIELD_CAM_DATA4 0xf4303204
#define L3FE_PP_FIELD_CAM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_FIELD_CAM_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_FIELD_CAM_DATA3 0xf4303208
#define L3FE_PP_FIELD_CAM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_FIELD_CAM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_FIELD_CAM_DATA2 0xf430320c
#define L3FE_PP_FIELD_CAM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_FIELD_CAM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_FIELD_CAM_DATA1 0xf4303210
#define L3FE_PP_FIELD_CAM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_FIELD_CAM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_FIELD_CAM_DATA0 0xf4303214
#define L3FE_PP_FIELD_CAM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_FIELD_CAM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_SPCL_PKT_DETECTION_CFG 0xf4303218
#define L3FE_PP_SPCL_PKT_DETECTION_CFG_dft 0x0739dc24

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t check_arp_target_ip : 1; /* bits 0:0 */
		ca_uint32_t mpcp_opcode_en : 1; /* bits 1:1 */
		ca_uint32_t my_mac_enable : 1; /* bits 2:2 */
		ca_uint32_t type_0_en : 1; /* bits 3:3 */
		ca_uint32_t type_1_en : 1; /* bits 4:4 */
		ca_uint32_t udp_lite_enable : 1; /* bits 5:5 */
		ca_uint32_t user_def_spcl_0_en : 1; /* bits 6:6 */
		ca_uint32_t user_def_spcl_1_en : 1; /* bits 7:7 */
		ca_uint32_t user_def_spcl_2_en : 1; /* bits 8:8 */
		ca_uint32_t user_def_spcl_3_en : 1; /* bits 9:9 */
		ca_uint32_t l2_spcl_hdr_en : 1; /* bits 10:10 */
		ca_uint32_t l3_spcl_hdr_en : 1; /* bits 11:11 */
		ca_uint32_t l4_spcl_hdr_en : 1; /* bits 12:12 */
		ca_uint32_t user_define_hi_pri : 1; /* bits 13:13 */
		ca_uint32_t rdp_v1_detection_en : 1; /* bits 14:14 */
		ca_uint32_t ipv4_chksum_chk_enable : 1; /* bits 15:15 */
		ca_uint32_t l4_chksum_chk_enable : 1; /* bits 16:16 */
		ca_uint32_t l4_chksum_rh_chk_enable : 1; /* bits 17:17 */
		ca_uint32_t chksum_err_drop : 6; /* bits 23:18 */
		ca_uint32_t bpdu_mac_08_en : 1; /* bits 24:24 */
		ca_uint32_t subtype_en : 1; /* bits 25:25 */
		ca_uint32_t rdp_l4_msgs_det_en : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t drop_udp_ov_ip6_cs_zero_en : 1; /* bits 28:28 */
		ca_uint32_t ni2fe_pkt_cnt_wrap_en : 1; /* bits 29:29 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_SPCL_PKT_DETECTION_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_IPNIP_SPCL_PKT_DET_EN 0xf430321c
#define L3FE_PP_IPNIP_SPCL_PKT_DET_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dhcpv4 : 1; /* bits 0:0 */
		ca_uint32_t dhcpv6 : 1; /* bits 1:1 */
		ca_uint32_t l4ptp : 1; /* bits 2:2 */
		ca_uint32_t dns : 1; /* bits 3:3 */
		ca_uint32_t rip : 1; /* bits 4:4 */
		ca_uint32_t ssdp : 1; /* bits 5:5 */
		ca_uint32_t l4_msgs : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_IPNIP_SPCL_PKT_DET_EN_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_OFFSET_HDR 0xf4303220
#define L3FE_PP_OFFSET_HDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t offset : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_OFFSET_HDR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_LMT 0xf4303224
#define L3FE_PP_PARSING_LMT_dft 0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t offset : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_LMT_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_STTS_0 0xf4303228
#define L3FE_PP_PARSING_STTS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t parsing_err : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_STTS_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_STTS_1 0xf430322c
#define L3FE_PP_PARSING_STTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t parsing_err : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_STTS_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_ERR_FWD_0 0xf4303230
#define L3FE_PP_PARSING_ERR_FWD_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t ipv4_hdr_cs_err : 2; /* bits 11:10 */
		ca_uint32_t pkt_l2_size_err : 2; /* bits 13:12 */
		ca_uint32_t pkt_l3_total_len_err : 2; /* bits 15:14 */
		ca_uint32_t ip_hdr_err : 2; /* bits 17:16 */
		ca_uint32_t ipv4_total_len_err : 2; /* bits 19:18 */
		ca_uint32_t tcp_data_offset_err : 2; /* bits 21:20 */
		ca_uint32_t udp_total_len_err : 2; /* bits 23:22 */
		ca_uint32_t udp_lite_cs_cvrg_err : 2; /* bits 25:24 */
		ca_uint32_t rdp_hdr_len_err : 2; /* bits 27:26 */
		ca_uint32_t offset_l3_excd_255_err : 2; /* bits 29:28 */
		ca_uint32_t offset_l4_excd_255_err : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_ERR_FWD_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_ERR_FWD_1 0xf4303234
#define L3FE_PP_PARSING_ERR_FWD_1_dft 0x00005000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_inner_ip_hdr_cs_err : 2; /* bits 1:0 */
		ca_uint32_t pkt_inner_l3_total_len_err : 2; /* bits 3:2 */
		ca_uint32_t inner_ip_hdr_err : 2; /* bits 5:4 */
		ca_uint32_t dsl_inner_ipv4_total_len_err : 2; /* bits 7:6 */
		ca_uint32_t offset_l3_inner_excd_255_err : 2; /* bits 9:8 */
		ca_uint32_t udp_zero_chksum_err : 2; /* bits 11:10 */
		ca_uint32_t more_than_2_vlan_tags_flg : 2; /* bits 13:12 */
		ca_uint32_t l2tp_hdr_err : 2; /* bits 15:14 */
		ca_uint32_t rdp_ver_err : 2; /* bits 17:16 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_ERR_FWD_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_ERR_TRAP 0xf4303238
#define L3FE_PP_PARSING_ERR_TRAP_dft 0xfffffa10

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdir_ldpid : 6; /* bits 5:0 */
		ca_uint32_t rdir_cos : 3; /* bits 8:6 */
		ca_uint32_t keep_orig_pkt : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t t0_ctrl : 1; /* bits 11:11 */
		ca_uint32_t t1_ctrl : 4; /* bits 15:12 */
		ca_uint32_t t2_ctrl : 4; /* bits 19:16 */
		ca_uint32_t t3_ctrl : 4; /* bits 23:20 */
		ca_uint32_t t4_ctrl : 4; /* bits 27:24 */
		ca_uint32_t t5_ctrl : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_ERR_TRAP_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PARSING_OVER_VLAN_FWD_CTL 0xf430323c
#define L3FE_PP_PARSING_OVER_VLAN_FWD_CTL_dft 0xfffffa10

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdir_ldpid : 6; /* bits 5:0 */
		ca_uint32_t rdir_cos : 3; /* bits 8:6 */
		ca_uint32_t keep_orig_pkt : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t t0_ctrl : 1; /* bits 11:11 */
		ca_uint32_t t1_ctrl : 4; /* bits 15:12 */
		ca_uint32_t t2_ctrl : 4; /* bits 19:16 */
		ca_uint32_t t3_ctrl : 4; /* bits 23:20 */
		ca_uint32_t t4_ctrl : 4; /* bits 27:24 */
		ca_uint32_t t5_ctrl : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PARSING_OVER_VLAN_FWD_CTL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_TYPE_0 0xf4303240
#define L3FE_PP_USER_TYPE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_type_0 : 16; /* bits 15:0 */
		ca_uint32_t user_type_1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_TYPE_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_TYPE_1 0xf4303244
#define L3FE_PP_USER_TYPE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_type_2 : 16; /* bits 15:0 */
		ca_uint32_t user_type_3 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_TYPE_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_0_LOW 0xf4303248
#define L3FE_PP_USER_MAC_0_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_0_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_0_HI 0xf430324c
#define L3FE_PP_USER_MAC_0_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_0_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_1_LOW 0xf4303250
#define L3FE_PP_USER_MAC_1_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_1_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_1_HI 0xf4303254
#define L3FE_PP_USER_MAC_1_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_1_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_0_MASK_LOW 0xf4303258
#define L3FE_PP_USER_MAC_0_MASK_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_mask_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_0_MASK_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_0_MASK_HI 0xf430325c
#define L3FE_PP_USER_MAC_0_MASK_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_mask_0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_0_MASK_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_1_MASK_LOW 0xf4303260
#define L3FE_PP_USER_MAC_1_MASK_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_mask_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_1_MASK_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_USER_MAC_1_MASK_HI 0xf4303264
#define L3FE_PP_USER_MAC_1_MASK_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user_mac_mask_1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_USER_MAC_1_MASK_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_TPID_0 0xf4303268
#define L3FE_PP_TPID_0_dft 0x88a88100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid_0 : 16; /* bits 15:0 */
		ca_uint32_t tpid_1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_TPID_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_TPID_1 0xf430326c
#define L3FE_PP_TPID_1_dft 0x92009100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpid_2 : 16; /* bits 15:0 */
		ca_uint32_t tpid_3 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_TPID_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_TPID_CTRL 0xf4303270
#define L3FE_PP_TPID_CTRL_dft 0x00000077

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t top_vlan_en : 4; /* bits 3:0 */
		ca_uint32_t inner_vlan_en : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_TPID_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_ARP_TARGET_IP 0xf4303274
#define L3FE_PP_ARP_TARGET_IP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t target_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_ARP_TARGET_IP_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_OAM 0xf4303278
#define L3FE_PP_OAM_dft 0x00000803

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t subtype : 8; /* bits 7:0 */
		ca_uint32_t mymdlvl : 3; /* bits 10:8 */
		ca_uint32_t mymdlvl_det_en : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_OAM_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HELLO_MAC_LOW 0xf430327c
#define L3FE_PP_HELLO_MAC_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HELLO_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HELLO_MAC_HI 0xf4303280
#define L3FE_PP_HELLO_MAC_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HELLO_MAC_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_MY_MAC_LOW 0xf4303284
#define L3FE_PP_MY_MAC_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mymac : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_MY_MAC_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_MY_MAC_HI 0xf4303288
#define L3FE_PP_MY_MAC_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mymac : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_MY_MAC_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_MC_MAC_HI_RNG 0xf430328c
#define L3FE_PP_MC_MAC_HI_RNG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hi_rng_mac_low : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_MC_MAC_HI_RNG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_MC_MAC_LOW_RNG 0xf4303290
#define L3FE_PP_MC_MAC_LOW_RNG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_rng_mac_low : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_MC_MAC_LOW_RNG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_MC_MAC_RNG 0xf4303294
#define L3FE_PP_MC_MAC_RNG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_rng_mac_hi : 16; /* bits 15:0 */
		ca_uint32_t hi_rng_mac_hi : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_MC_MAC_RNG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HTTP_LINK_0 0xf4303298
#define L3FE_PP_HTTP_LINK_0_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 3; /* bits 19:17 */
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HTTP_LINK_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HTTP_LINK_1 0xf430329c
#define L3FE_PP_HTTP_LINK_1_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 3; /* bits 19:17 */
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HTTP_LINK_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HTTP_LINK_2 0xf43032a0
#define L3FE_PP_HTTP_LINK_2_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 3; /* bits 19:17 */
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HTTP_LINK_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HTTP_LINK_3 0xf43032a4
#define L3FE_PP_HTTP_LINK_3_dft 0x04000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_l4_pid : 16; /* bits 15:0 */
		ca_uint32_t rule_l4_pid_sel : 1; /* bits 16:16 */
		ca_uint32_t rule_l4_type : 3; /* bits 19:17 */
		ca_uint32_t rule_lspid : 6; /* bits 25:20 */
		ca_uint32_t rule_lspid_msk : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t rule_vld : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HTTP_LINK_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_PINGPONG_STS 0xf43032a8
#define L3FE_PP_PINGPONG_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_PINGPONG_STS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_NI_INTF_ERR_STTS_0 0xf43032ac
#define L3FE_PP_NI_INTF_ERR_STTS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sop_eop_mismatch : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_NI_INTF_ERR_STTS_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_NI_INTF_ERR_STTS_1 0xf43032b0
#define L3FE_PP_NI_INTF_ERR_STTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t runt_l2_pkt : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_NI_INTF_ERR_STTS_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_NI_INTF_STS 0xf43032b4
#define L3FE_PP_NI_INTF_STS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdy : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_NI_INTF_STS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_NI_INTF_PKT_CNT 0xf43032b8
#define L3FE_PP_NI_INTF_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eop : 16; /* bits 15:0 */
		ca_uint32_t sop : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_NI_INTF_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_L4_CS_ERR 0xf43032bc
#define L3FE_PP_L4_CS_ERR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_L4_CS_ERR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HEADER_A_LOW 0xf43032c0
#define L3FE_PP_HEADER_A_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HEADER_A_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HEADER_A_HI 0xf43032c4
#define L3FE_PP_HEADER_A_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HEADER_A_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HEADER_CPU_LOW 0xf43032c8
#define L3FE_PP_HEADER_CPU_LOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HEADER_CPU_LOW_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_HEADER_CPU_HI 0xf43032cc
#define L3FE_PP_HEADER_CPU_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_HEADER_CPU_HI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PP_NI2FE_INTF_FF_STS 0xf43032d0
#define L3FE_PP_NI2FE_INTF_FF_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PP_NI2FE_INTF_FF_STS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PP */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_PP_FIELD_CAM_ACCESS_t FIELD_CAM_ACCESS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_PP_FIELD_CAM_DATA4_t FIELD_CAM_DATA4; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_PP_FIELD_CAM_DATA3_t FIELD_CAM_DATA3; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_PP_FIELD_CAM_DATA2_t FIELD_CAM_DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_PP_FIELD_CAM_DATA1_t FIELD_CAM_DATA1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_PP_FIELD_CAM_DATA0_t FIELD_CAM_DATA0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_PP_SPCL_PKT_DETECTION_CFG_t
	  SPCL_PKT_DETECTION_CFG; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_PP_IPNIP_SPCL_PKT_DET_EN_t IPNIP_SPCL_PKT_DET_EN; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_PP_OFFSET_HDR_t OFFSET_HDR; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_PP_PARSING_LMT_t PARSING_LMT; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L3FE_PP_PARSING_STTS_0_t PARSING_STTS_0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L3FE_PP_PARSING_STTS_1_t PARSING_STTS_1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L3FE_PP_PARSING_ERR_FWD_0_t PARSING_ERR_FWD_0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L3FE_PP_PARSING_ERR_FWD_1_t PARSING_ERR_FWD_1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L3FE_PP_PARSING_ERR_TRAP_t PARSING_ERR_TRAP; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L3FE_PP_PARSING_OVER_VLAN_FWD_CTL_t
	  PARSING_OVER_VLAN_FWD_CTL; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L3FE_PP_USER_TYPE_0_t USER_TYPE_0; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L3FE_PP_USER_TYPE_1_t USER_TYPE_1; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L3FE_PP_USER_MAC_0_LOW_t USER_MAC_0_LOW; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L3FE_PP_USER_MAC_0_HI_t USER_MAC_0_HI; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L3FE_PP_USER_MAC_1_LOW_t USER_MAC_1_LOW; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L3FE_PP_USER_MAC_1_HI_t USER_MAC_1_HI; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L3FE_PP_USER_MAC_0_MASK_LOW_t USER_MAC_0_MASK_LOW; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L3FE_PP_USER_MAC_0_MASK_HI_t USER_MAC_0_MASK_HI; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L3FE_PP_USER_MAC_1_MASK_LOW_t USER_MAC_1_MASK_LOW; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L3FE_PP_USER_MAC_1_MASK_HI_t USER_MAC_1_MASK_HI; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L3FE_PP_TPID_0_t TPID_0; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L3FE_PP_TPID_1_t TPID_1; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L3FE_PP_TPID_CTRL_t TPID_CTRL; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L3FE_PP_ARP_TARGET_IP_t ARP_TARGET_IP; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L3FE_PP_OAM_t OAM; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L3FE_PP_HELLO_MAC_LOW_t HELLO_MAC_LOW; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L3FE_PP_HELLO_MAC_HI_t HELLO_MAC_HI; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L3FE_PP_MY_MAC_LOW_t MY_MAC_LOW; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L3FE_PP_MY_MAC_HI_t MY_MAC_HI; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L3FE_PP_MC_MAC_HI_RNG_t MC_MAC_HI_RNG; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L3FE_PP_MC_MAC_LOW_RNG_t MC_MAC_LOW_RNG; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L3FE_PP_MC_MAC_RNG_t MC_MAC_RNG; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L3FE_PP_HTTP_LINK_0_t HTTP_LINK_0; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L3FE_PP_HTTP_LINK_1_t HTTP_LINK_1; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L3FE_PP_HTTP_LINK_2_t HTTP_LINK_2; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L3FE_PP_HTTP_LINK_3_t HTTP_LINK_3; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L3FE_PP_PINGPONG_STS_t PINGPONG_STS; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L3FE_PP_NI_INTF_ERR_STTS_0_t NI_INTF_ERR_STTS_0; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	L3FE_PP_NI_INTF_ERR_STTS_1_t NI_INTF_ERR_STTS_1; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	L3FE_PP_NI_INTF_STS_t NI_INTF_STS; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	L3FE_PP_NI_INTF_PKT_CNT_t NI_INTF_PKT_CNT; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	L3FE_PP_L4_CS_ERR_t L4_CS_ERR; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	L3FE_PP_HEADER_A_LOW_t HEADER_A_LOW; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	L3FE_PP_HEADER_A_HI_t HEADER_A_HI; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	L3FE_PP_HEADER_CPU_LOW_t HEADER_CPU_LOW; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	L3FE_PP_HEADER_CPU_HI_t HEADER_CPU_HI; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	L3FE_PP_NI2FE_INTF_FF_STS_t NI2FE_INTF_FF_STS; /* addr: 0x000000d0 */
} APB0_L3FE_PP_t;
#endif /* !__ASSEMBLER__ */

/*
 * CLS
 */

#define L3FE_CLS_KEY_TBL_ACCESS 0xf4303300
#define L3FE_CLS_KEY_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA10 0xf4303304
#define L3FE_CLS_KEY_TBL_DATA10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 12; /* bits 11:0 */
		ca_uint32_t cl_entry_mode : 1; /* bits 12:12 */
		ca_uint32_t cl_pri : 4; /* bits 16:13 */
		ca_uint32_t cl_rslt_type : 1; /* bits 17:17 */
		ca_uint32_t cl_key_type : 3; /* bits 20:18 */
		ca_uint32_t cl_key_valid : 4; /* bits 24:21 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA10_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA9 0xf4303308
#define L3FE_CLS_KEY_TBL_DATA9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA9_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA8 0xf430330c
#define L3FE_CLS_KEY_TBL_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA8_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA7 0xf4303310
#define L3FE_CLS_KEY_TBL_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA6 0xf4303314
#define L3FE_CLS_KEY_TBL_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA5 0xf4303318
#define L3FE_CLS_KEY_TBL_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA4 0xf430331c
#define L3FE_CLS_KEY_TBL_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA3 0xf4303320
#define L3FE_CLS_KEY_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA2 0xf4303324
#define L3FE_CLS_KEY_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA1 0xf4303328
#define L3FE_CLS_KEY_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_KEY_TBL_DATA0 0xf430332c
#define L3FE_CLS_KEY_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_KEY_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_ACCESS 0xf4303330
#define L3FE_CLS_FIB_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA6 0xf4303334
#define L3FE_CLS_FIB_TBL_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA5 0xf4303338
#define L3FE_CLS_FIB_TBL_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA4 0xf430333c
#define L3FE_CLS_FIB_TBL_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA3 0xf4303340
#define L3FE_CLS_FIB_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA2 0xf4303344
#define L3FE_CLS_FIB_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA1 0xf4303348
#define L3FE_CLS_FIB_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_CLS_FIB_TBL_DATA0 0xf430334c
#define L3FE_CLS_FIB_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cl_entry : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_CLS_FIB_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CLS */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_CLS_KEY_TBL_ACCESS_t KEY_TBL_ACCESS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_CLS_KEY_TBL_DATA10_t KEY_TBL_DATA10; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_CLS_KEY_TBL_DATA9_t KEY_TBL_DATA9; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_CLS_KEY_TBL_DATA8_t KEY_TBL_DATA8; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_CLS_KEY_TBL_DATA7_t KEY_TBL_DATA7; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_CLS_KEY_TBL_DATA6_t KEY_TBL_DATA6; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_CLS_KEY_TBL_DATA5_t KEY_TBL_DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_CLS_KEY_TBL_DATA4_t KEY_TBL_DATA4; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_CLS_KEY_TBL_DATA3_t KEY_TBL_DATA3; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_CLS_KEY_TBL_DATA2_t KEY_TBL_DATA2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L3FE_CLS_KEY_TBL_DATA1_t KEY_TBL_DATA1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L3FE_CLS_KEY_TBL_DATA0_t KEY_TBL_DATA0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L3FE_CLS_FIB_TBL_ACCESS_t FIB_TBL_ACCESS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L3FE_CLS_FIB_TBL_DATA6_t FIB_TBL_DATA6; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L3FE_CLS_FIB_TBL_DATA5_t FIB_TBL_DATA5; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L3FE_CLS_FIB_TBL_DATA4_t FIB_TBL_DATA4; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L3FE_CLS_FIB_TBL_DATA3_t FIB_TBL_DATA3; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L3FE_CLS_FIB_TBL_DATA2_t FIB_TBL_DATA2; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L3FE_CLS_FIB_TBL_DATA1_t FIB_TBL_DATA1; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L3FE_CLS_FIB_TBL_DATA0_t FIB_TBL_DATA0; /* addr: 0x0000004c */
} APB0_L3FE_CLS_t;
#endif /* !__ASSEMBLER__ */

/*
 * STG0
 */

#define L3FE_STG0_CTRL 0xf4303380
#define L3FE_STG0_CTRL_dft 0x00047c7e

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lpb_idx_mode : 1; /* bits 0:0 */
		ca_uint32_t mac_fltr_fail_pkt_mru_chk_en : 1; /* bits 1:1 */
		ca_uint32_t mru_chk_fail_pkt_l2_lkup_dis : 1; /* bits 2:2 */
		ca_uint32_t other_mac_pkt_keep_lspid_en : 1; /* bits 3:3 */
		ca_uint32_t wan_lspid : 6; /* bits 9:4 */
		ca_uint32_t use_lspid_ovwr_o_lspid : 1; /* bits 10:10 */
		ca_uint32_t spcl_pkt_keep_old : 1; /* bits 11:11 */
		ca_uint32_t wan_lspid_1 : 6; /* bits 17:12 */
		ca_uint32_t msk_my_mac_match_en_for_lspid_upd : 1; /* bits 18:18 */
		ca_uint32_t keep_lspid_unchange : 1; /* bits 19:19 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LDPID_MAP 0xf4303384
#define L3FE_STG0_LDPID_MAP_dft 0x03591807

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rule_0 : 6; /* bits 5:0 */
		ca_uint32_t lpb_idx_0 : 2; /* bits 7:6 */
		ca_uint32_t rule_1 : 6; /* bits 13:8 */
		ca_uint32_t lpb_idx_1 : 2; /* bits 15:14 */
		ca_uint32_t rule_2 : 6; /* bits 21:16 */
		ca_uint32_t lpb_idx_2 : 2; /* bits 23:22 */
		ca_uint32_t lpb_idx_3 : 2; /* bits 25:24 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LDPID_MAP_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_LOW_0 0xf4303388
#define L3FE_STG0_LPB_TBL_LOW_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_LOW_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_MID_0 0xf430338c
#define L3FE_STG0_LPB_TBL_MID_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_MID_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_HIGH_0 0xf4303390
#define L3FE_STG0_LPB_TBL_HIGH_0_dft 0x18000190

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_HIGH_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_LOW_1 0xf4303394
#define L3FE_STG0_LPB_TBL_LOW_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_LOW_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_MID_1 0xf4303398
#define L3FE_STG0_LPB_TBL_MID_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_MID_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_HIGH_1 0xf430339c
#define L3FE_STG0_LPB_TBL_HIGH_1_dft 0x19000070

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_HIGH_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_LOW_2 0xf43033a0
#define L3FE_STG0_LPB_TBL_LOW_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_LOW_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_MID_2 0xf43033a4
#define L3FE_STG0_LPB_TBL_MID_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_MID_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_HIGH_2 0xf43033a8
#define L3FE_STG0_LPB_TBL_HIGH_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_HIGH_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_LOW_3 0xf43033ac
#define L3FE_STG0_LPB_TBL_LOW_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_LOW_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_MID_3 0xf43033b0
#define L3FE_STG0_LPB_TBL_MID_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_MID_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_TBL_HIGH_3 0xf43033b4
#define L3FE_STG0_LPB_TBL_HIGH_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_TBL_HIGH_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_IDX_TBL_ACCESS 0xf43033b8
#define L3FE_STG0_LPB_IDX_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_IDX_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_LPB_IDX_TBL_DATA 0xf43033bc
#define L3FE_STG0_LPB_IDX_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t idx : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_LPB_IDX_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_SPB_TBL_ACCESS 0xf43033c0
#define L3FE_STG0_SPB_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_SPB_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG0_SPB_TBL_DATA 0xf43033c4
#define L3FE_STG0_SPB_TBL_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 28; /* bits 27:0 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG0_SPB_TBL_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* STG0 */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_STG0_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_STG0_LDPID_MAP_t LDPID_MAP; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_STG0_LPB_TBL_LOW_0_t LPB_TBL_LOW_0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_STG0_LPB_TBL_MID_0_t LPB_TBL_MID_0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_STG0_LPB_TBL_HIGH_0_t LPB_TBL_HIGH_0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_STG0_LPB_TBL_LOW_1_t LPB_TBL_LOW_1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_STG0_LPB_TBL_MID_1_t LPB_TBL_MID_1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_STG0_LPB_TBL_HIGH_1_t LPB_TBL_HIGH_1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_STG0_LPB_TBL_LOW_2_t LPB_TBL_LOW_2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_STG0_LPB_TBL_MID_2_t LPB_TBL_MID_2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L3FE_STG0_LPB_TBL_HIGH_2_t LPB_TBL_HIGH_2; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L3FE_STG0_LPB_TBL_LOW_3_t LPB_TBL_LOW_3; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L3FE_STG0_LPB_TBL_MID_3_t LPB_TBL_MID_3; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L3FE_STG0_LPB_TBL_HIGH_3_t LPB_TBL_HIGH_3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L3FE_STG0_LPB_IDX_TBL_ACCESS_t LPB_IDX_TBL_ACCESS; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L3FE_STG0_LPB_IDX_TBL_DATA_t LPB_IDX_TBL_DATA; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L3FE_STG0_SPB_TBL_ACCESS_t SPB_TBL_ACCESS; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L3FE_STG0_SPB_TBL_DATA_t SPB_TBL_DATA; /* addr: 0x00000044 */
} APB0_L3FE_STG0_t;
#endif /* !__ASSEMBLER__ */

/*
 * STG1
 */

#define L3FE_STG1_IPNIP_CTRL_REG 0xf4303400
#define L3FE_STG1_IPNIP_CTRL_REG_dft 0x0f010e00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sixrd_ecn_keep_outer : 1; /* bits 0:0 */
		ca_uint32_t sixrd_dscp_keep_outer : 1; /* bits 1:1 */
		ca_uint32_t sixrd_ttl_keep_outer : 1; /* bits 2:2 */
		ca_uint32_t dsl_ecn_keep_outer : 1; /* bits 3:3 */
		ca_uint32_t dsl_dscp_keep_outer : 1; /* bits 4:4 */
		ca_uint32_t dsl_ttl_keep_outer : 1; /* bits 5:5 */
		ca_uint32_t dsl_rpf_chk_en : 1; /* bits 6:6 */
		ca_uint32_t dsl_ipmc_addr_consistency_chk_en : 1; /* bits 7:7 */
		ca_uint32_t dsl_ipmc_addr_prfx_chk_en : 1; /* bits 8:8 */
		ca_uint32_t dsl_ipmc_ext_det_en : 1; /* bits 9:9 */
		ca_uint32_t dsl_ipmc_ilg_chk_en : 1; /* bits 10:10 */
		ca_uint32_t sixrd_ipmc_ilg_chk_en : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t ecn_chk_fail_fwd_ctl : 1; /* bits 16:16 */
		ca_uint32_t intf_chk_fail_fwd_ctl : 2; /* bits 18:17 */
		ca_uint32_t sixrd_decap_chk_fail_fwd_ctl : 2; /* bits 20:19 */
		ca_uint32_t dsl_decap_chk_fail_fwd_ctl : 2; /* bits 22:21 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t sixrd_ipmc_fwd_ctl : 1; /* bits 24:24 */
		ca_uint32_t dsl_ipmc_fwd_ctl : 1; /* bits 25:25 */
		ca_uint32_t sixrd_ipmc_new_mac_en : 1; /* bits 26:26 */
		ca_uint32_t dsl_ipmc_new_mac_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_IPNIP_CTRL_REG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_ECN_FAIL_FWD_CTRL 0xf4303404
#define L3FE_STG1_ECN_FAIL_FWD_CTRL_dft 0x02f8ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t t2_ctrl : 4; /* bits 3:0 */
		ca_uint32_t t3_ctrl : 4; /* bits 7:4 */
		ca_uint32_t t4_ctrl : 4; /* bits 11:8 */
		ca_uint32_t t5_ctrl : 4; /* bits 15:12 */
		ca_uint32_t cos : 3; /* bits 18:16 */
		ca_uint32_t ldpid : 6; /* bits 24:19 */
		ca_uint32_t keep_orig_pkt : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_ECN_FAIL_FWD_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_IPNIP_FAIL_FWD_CTRL 0xf4303408
#define L3FE_STG1_IPNIP_FAIL_FWD_CTRL_dft 0x02f8ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t t2_ctrl : 4; /* bits 3:0 */
		ca_uint32_t t3_ctrl : 4; /* bits 7:4 */
		ca_uint32_t t4_ctrl : 4; /* bits 11:8 */
		ca_uint32_t t5_ctrl : 4; /* bits 15:12 */
		ca_uint32_t cos : 3; /* bits 18:16 */
		ca_uint32_t ldpid : 6; /* bits 24:19 */
		ca_uint32_t keep_orig_pkt : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_IPNIP_FAIL_FWD_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_SIXRD_IPMC_FWD_CTRL 0xf430340c
#define L3FE_STG1_SIXRD_IPMC_FWD_CTRL_dft 0x02c8ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t t2_ctrl : 4; /* bits 3:0 */
		ca_uint32_t t3_ctrl : 4; /* bits 7:4 */
		ca_uint32_t t4_ctrl : 4; /* bits 11:8 */
		ca_uint32_t t5_ctrl : 4; /* bits 15:12 */
		ca_uint32_t cos : 3; /* bits 18:16 */
		ca_uint32_t ldpid : 6; /* bits 24:19 */
		ca_uint32_t keep_orig_pkt : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_SIXRD_IPMC_FWD_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_DSL_IPMC_FWD_CTRL 0xf4303410
#define L3FE_STG1_DSL_IPMC_FWD_CTRL_dft 0x02c8ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t t2_ctrl : 4; /* bits 3:0 */
		ca_uint32_t t3_ctrl : 4; /* bits 7:4 */
		ca_uint32_t t4_ctrl : 4; /* bits 11:8 */
		ca_uint32_t t5_ctrl : 4; /* bits 15:12 */
		ca_uint32_t cos : 3; /* bits 18:16 */
		ca_uint32_t ldpid : 6; /* bits 24:19 */
		ca_uint32_t keep_orig_pkt : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_DSL_IPMC_FWD_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_SIXRD_IPMC_NEW_MAC_DA 0xf4303414
#define L3FE_STG1_SIXRD_IPMC_NEW_MAC_DA_dft 0x00003333

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_prfx : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_SIXRD_IPMC_NEW_MAC_DA_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_DSL_IPMC_NEW_MAC_DA 0xf4303418
#define L3FE_STG1_DSL_IPMC_NEW_MAC_DA_dft 0x000200bc

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_prfx : 25; /* bits 24:0 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_DSL_IPMC_NEW_MAC_DA_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_INTF_FF_CTL_REG 0xf430341c
#define L3FE_STG1_INTF_FF_CTL_REG_dft 0x00000032

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_thr : 4; /* bits 3:0 */
		ca_uint32_t high_thr : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_INTF_FF_CTL_REG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_INTF_FF_STS_REG 0xf4303420
#define L3FE_STG1_INTF_FF_STS_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ovfl_ind : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_INTF_FF_STS_REG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_STG1_INTF_FF_HDR_CNT 0xf4303424
#define L3FE_STG1_INTF_FF_HDR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} L3FE_STG1_INTF_FF_HDR_CNT_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* STG1 */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_STG1_IPNIP_CTRL_REG_t IPNIP_CTRL_REG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_STG1_ECN_FAIL_FWD_CTRL_t ECN_FAIL_FWD_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_STG1_IPNIP_FAIL_FWD_CTRL_t IPNIP_FAIL_FWD_CTRL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_STG1_SIXRD_IPMC_FWD_CTRL_t SIXRD_IPMC_FWD_CTRL; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_STG1_DSL_IPMC_FWD_CTRL_t DSL_IPMC_FWD_CTRL; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_STG1_SIXRD_IPMC_NEW_MAC_DA_t
	  SIXRD_IPMC_NEW_MAC_DA; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_STG1_DSL_IPMC_NEW_MAC_DA_t DSL_IPMC_NEW_MAC_DA; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_STG1_INTF_FF_CTL_REG_t INTF_FF_CTL_REG; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_STG1_INTF_FF_STS_REG_t INTF_FF_STS_REG; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_STG1_INTF_FF_HDR_CNT_t INTF_FF_HDR_CNT; /* addr: 0x00000024 */
} APB0_L3FE_STG1_t;
#endif /* !__ASSEMBLER__ */

/*
 * PE
 */

#define L3FE_PE_PPPOE_CFG 0xf4303500
#define L3FE_PE_PPPOE_CFG_dft 0x00000011

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sess_ver_type : 8; /* bits 7:0 */
		ca_uint32_t pppoe_code : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PPPOE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PPPOE_PROT_CFG 0xf4303504
#define L3FE_PE_PPPOE_PROT_CFG_dft 0x00570021

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv4_protocol : 16; /* bits 15:0 */
		ca_uint32_t ipv6_protocol : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PPPOE_PROT_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_MIB_CFG 0xf4303508
#define L3FE_PE_MIB_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t counter_wrap_around : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_MIB_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_PKT_CLR 0xf430350c
#define L3FE_PE_DROP_SRC_PKT_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_PKT_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_BYTE_CLR 0xf4303510
#define L3FE_PE_DROP_SRC_BYTE_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_BYTE_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CLR 0xf4303514
#define L3FE_PE_RX_IFID_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CLR 0xf4303518
#define L3FE_PE_TX_IFID_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PE_CFG 0xf430351c
#define L3FE_PE_PE_CFG_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stomp_crc : 1; /* bits 0:0 */
		ca_uint32_t bypass_crc_update : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ignore_tqm_fe_rdy : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 28;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_XRD_CLR 0xf4303520
#define L3FE_PE_XRD_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_XRD_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_CLR 0xf4303524
#define L3FE_PE_DSL_CLR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_CLR_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_0 0xf4303528
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_0_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_0 0xf430352c
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_1_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_0 0xf4303530
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_2_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_1 0xf4303534
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_0_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_1 0xf4303538
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_1_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_1 0xf430353c
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_2_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_2 0xf4303540
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_0_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_2 0xf4303544
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_1_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_2 0xf4303548
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_2_2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_3 0xf430354c
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_0_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_0_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_3 0xf4303550
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_1_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_1_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_3 0xf4303554
#define L3FE_PE_PORT_EGRESS_BEHAVIOR_2_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vct : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_PORT_EGRESS_BEHAVIOR_2_3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_MTU_SIZE_0 0xf4303558
#define L3FE_PE_MTU_SIZE_0_dft 0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mtu_0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t mtu_1 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_MTU_SIZE_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_MTU_SIZE_1 0xf430355c
#define L3FE_PE_MTU_SIZE_1_dft 0x05dc05dc

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mtu_2 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t mtu_3 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_MTU_SIZE_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_6RD_ENCAP_CFG 0xf4303560
#define L3FE_PE_DSL_6RD_ENCAP_CFG_dft 0x00002904

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nh_dsl_encap : 8; /* bits 7:0 */
		ca_uint32_t prot_6rd_encap : 8; /* bits 15:8 */
		ca_uint32_t df_6rd_encap : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_6RD_ENCAP_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_6RD_ENCAP_TYPE 0xf4303564
#define L3FE_PE_DSL_6RD_ENCAP_TYPE_dft 0x080086dd

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t etype_dsl_encap : 16; /* bits 15:0 */
		ca_uint32_t etype_6rd_encap : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_6RD_ENCAP_TYPE_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_6RD_DECAP_TYPE 0xf4303568
#define L3FE_PE_DSL_6RD_DECAP_TYPE_dft 0x86dd0800

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t etype_dsl_decap : 16; /* bits 15:0 */
		ca_uint32_t etype_6rd_decap : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_6RD_DECAP_TYPE_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_MIRROR_CFG 0xf430356c
#define L3FE_PE_MIRROR_CFG_dft 0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mirr_fifo_high_threshold : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t mirr_cos : 3; /* bits 18:16 */
		ca_uint32_t mirr_ldpid : 6; /* bits 24:19 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_MIRROR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_MIRROR_LEN_CFG 0xf4303570
#define L3FE_PE_MIRROR_LEN_CFG_dft 0x00000080

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mirr_len : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_MIRROR_LEN_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_ACCESS 0xf4303574
#define L3FE_PE_SIXRD_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA6 0xf4303578
#define L3FE_PE_SIXRD_TBL_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_ce_v4_ip : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA5 0xf430357c
#define L3FE_PE_SIXRD_TBL_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_v4_msk_len : 1; /* bits 0:0 */
		ca_uint32_t six_rd_ce_v4_ip : 31; /* bits 31:1 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA4 0xf4303580
#define L3FE_PE_SIXRD_TBL_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_v6_prfx : 22; /* bits 21:0 */
		ca_uint32_t six_rd_v6_prfx_len : 6; /* bits 27:22 */
		ca_uint32_t six_rd_v4_msk_len : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA3 0xf4303584
#define L3FE_PE_SIXRD_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_v6_prfx : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA2 0xf4303588
#define L3FE_PE_SIXRD_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_br_v4_ip : 22; /* bits 21:0 */
		ca_uint32_t six_rd_v6_prfx : 10; /* bits 31:22 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA1 0xf430358c
#define L3FE_PE_SIXRD_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_id_start : 4; /* bits 3:0 */
		ca_uint32_t six_rd_ttl_en : 1; /* bits 4:4 */
		ca_uint32_t six_rd_ttl : 8; /* bits 12:5 */
		ca_uint32_t six_rd_tos_en : 1; /* bits 13:13 */
		ca_uint32_t six_rd_tos : 8; /* bits 21:14 */
		ca_uint32_t six_rd_br_v4_ip : 10; /* bits 31:22 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_SIXRD_TBL_DATA0 0xf4303590
#define L3FE_PE_SIXRD_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t six_rd_valid : 1; /* bits 0:0 */
		ca_uint32_t six_rd_ingr_chk_en : 1; /* bits 1:1 */
		ca_uint32_t six_rd_br_only : 1; /* bits 2:2 */
		ca_uint32_t six_rd_ipsa_mtch : 1; /* bits 3:3 */
		ca_uint32_t six_rd_id_end : 16; /* bits 19:4 */
		ca_uint32_t six_rd_id_start : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_SIXRD_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_ACCESS 0xf4303594
#define L3FE_PE_DSL_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA9 0xf4303598
#define L3FE_PE_DSL_TBL_DATA9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_b4_ip : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA9_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA8 0xf430359c
#define L3FE_PE_DSL_TBL_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_b4_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA8_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA7 0xf43035a0
#define L3FE_PE_DSL_TBL_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_b4_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA6 0xf43035a4
#define L3FE_PE_DSL_TBL_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_b4_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA5 0xf43035a8
#define L3FE_PE_DSL_TBL_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_aftr_ip : 8; /* bits 7:0 */
		ca_uint32_t dsl_b4_ip : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA4 0xf43035ac
#define L3FE_PE_DSL_TBL_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_aftr_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA3 0xf43035b0
#define L3FE_PE_DSL_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_aftr_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA2 0xf43035b4
#define L3FE_PE_DSL_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_aftr_ip : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA1 0xf43035b8
#define L3FE_PE_DSL_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_tc : 8; /* bits 7:0 */
		ca_uint32_t dsl_aftr_ip : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DSL_TBL_DATA0 0xf43035bc
#define L3FE_PE_DSL_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dsl_valid : 1; /* bits 0:0 */
		ca_uint32_t dsl_mc : 1; /* bits 1:1 */
		ca_uint32_t dsl_flwlabel : 20; /* bits 21:2 */
		ca_uint32_t dsl_hoplimit_en : 1; /* bits 22:22 */
		ca_uint32_t dsl_hoplimit : 8; /* bits 30:23 */
		ca_uint32_t dsl_tc_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DSL_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS 0xf43035c0
#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1 0xf43035c4
#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0 0xf43035c8
#define L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS 0xf43035cc
#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1 0xf43035d0
#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0 0xf43035d4
#define L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_ACCESS 0xf43035d8
#define L3FE_PE_RX_IFID_CNT_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA7 0xf43035dc
#define L3FE_PE_RX_IFID_CNT_TBL_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA6 0xf43035e0
#define L3FE_PE_RX_IFID_CNT_TBL_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA5 0xf43035e4
#define L3FE_PE_RX_IFID_CNT_TBL_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA4 0xf43035e8
#define L3FE_PE_RX_IFID_CNT_TBL_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA3 0xf43035ec
#define L3FE_PE_RX_IFID_CNT_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA2 0xf43035f0
#define L3FE_PE_RX_IFID_CNT_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA1 0xf43035f4
#define L3FE_PE_RX_IFID_CNT_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_RX_IFID_CNT_TBL_DATA0 0xf43035f8
#define L3FE_PE_RX_IFID_CNT_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_RX_IFID_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_ACCESS 0xf43035fc
#define L3FE_PE_TX_IFID_CNT_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA6 0xf4303600
#define L3FE_PE_TX_IFID_CNT_TBL_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA5 0xf4303604
#define L3FE_PE_TX_IFID_CNT_TBL_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA4 0xf4303608
#define L3FE_PE_TX_IFID_CNT_TBL_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA3 0xf430360c
#define L3FE_PE_TX_IFID_CNT_TBL_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA2 0xf4303610
#define L3FE_PE_TX_IFID_CNT_TBL_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA1 0xf4303614
#define L3FE_PE_TX_IFID_CNT_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_PE_TX_IFID_CNT_TBL_DATA0 0xf4303618
#define L3FE_PE_TX_IFID_CNT_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_PE_TX_IFID_CNT_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_PE_PPPOE_CFG_t PPPOE_CFG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_PE_PPPOE_PROT_CFG_t PPPOE_PROT_CFG; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_PE_MIB_CFG_t MIB_CFG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_PE_DROP_SRC_PKT_CLR_t DROP_SRC_PKT_CLR; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_PE_DROP_SRC_BYTE_CLR_t DROP_SRC_BYTE_CLR; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_PE_RX_IFID_CLR_t RX_IFID_CLR; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_PE_TX_IFID_CLR_t TX_IFID_CLR; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_PE_PE_CFG_t PE_CFG; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_PE_XRD_CLR_t XRD_CLR; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_PE_DSL_CLR_t DSL_CLR; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_0_0_t
	  PORT_EGRESS_BEHAVIOR_0_0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_1_0_t
	  PORT_EGRESS_BEHAVIOR_1_0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_2_0_t
	  PORT_EGRESS_BEHAVIOR_2_0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_0_1_t
	  PORT_EGRESS_BEHAVIOR_0_1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_1_1_t
	  PORT_EGRESS_BEHAVIOR_1_1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_2_1_t
	  PORT_EGRESS_BEHAVIOR_2_1; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_0_2_t
	  PORT_EGRESS_BEHAVIOR_0_2; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_1_2_t
	  PORT_EGRESS_BEHAVIOR_1_2; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_2_2_t
	  PORT_EGRESS_BEHAVIOR_2_2; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_0_3_t
	  PORT_EGRESS_BEHAVIOR_0_3; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_1_3_t
	  PORT_EGRESS_BEHAVIOR_1_3; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L3FE_PE_PORT_EGRESS_BEHAVIOR_2_3_t
	  PORT_EGRESS_BEHAVIOR_2_3; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L3FE_PE_MTU_SIZE_0_t MTU_SIZE_0; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L3FE_PE_MTU_SIZE_1_t MTU_SIZE_1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L3FE_PE_DSL_6RD_ENCAP_CFG_t DSL_6RD_ENCAP_CFG; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L3FE_PE_DSL_6RD_ENCAP_TYPE_t DSL_6RD_ENCAP_TYPE; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L3FE_PE_DSL_6RD_DECAP_TYPE_t DSL_6RD_DECAP_TYPE; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L3FE_PE_MIRROR_CFG_t MIRROR_CFG; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L3FE_PE_MIRROR_LEN_CFG_t MIRROR_LEN_CFG; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L3FE_PE_SIXRD_TBL_ACCESS_t SIXRD_TBL_ACCESS; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L3FE_PE_SIXRD_TBL_DATA6_t SIXRD_TBL_DATA6; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L3FE_PE_SIXRD_TBL_DATA5_t SIXRD_TBL_DATA5; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L3FE_PE_SIXRD_TBL_DATA4_t SIXRD_TBL_DATA4; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L3FE_PE_SIXRD_TBL_DATA3_t SIXRD_TBL_DATA3; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L3FE_PE_SIXRD_TBL_DATA2_t SIXRD_TBL_DATA2; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L3FE_PE_SIXRD_TBL_DATA1_t SIXRD_TBL_DATA1; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L3FE_PE_SIXRD_TBL_DATA0_t SIXRD_TBL_DATA0; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L3FE_PE_DSL_TBL_ACCESS_t DSL_TBL_ACCESS; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L3FE_PE_DSL_TBL_DATA9_t DSL_TBL_DATA9; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L3FE_PE_DSL_TBL_DATA8_t DSL_TBL_DATA8; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L3FE_PE_DSL_TBL_DATA7_t DSL_TBL_DATA7; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L3FE_PE_DSL_TBL_DATA6_t DSL_TBL_DATA6; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L3FE_PE_DSL_TBL_DATA5_t DSL_TBL_DATA5; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L3FE_PE_DSL_TBL_DATA4_t DSL_TBL_DATA4; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	L3FE_PE_DSL_TBL_DATA3_t DSL_TBL_DATA3; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	L3FE_PE_DSL_TBL_DATA2_t DSL_TBL_DATA2; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	L3FE_PE_DSL_TBL_DATA1_t DSL_TBL_DATA1; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	L3FE_PE_DSL_TBL_DATA0_t DSL_TBL_DATA0; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	L3FE_PE_DROP_SRC_PKT_CNT_TBL_ACCESS_t
	  DROP_SRC_PKT_CNT_TBL_ACCESS; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA1_t
	  DROP_SRC_PKT_CNT_TBL_DATA1; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	L3FE_PE_DROP_SRC_PKT_CNT_TBL_DATA0_t
	  DROP_SRC_PKT_CNT_TBL_DATA0; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	L3FE_PE_DROP_SRC_BYTE_CNT_TBL_ACCESS_t
	  DROP_SRC_BYTE_CNT_TBL_ACCESS; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA1_t
	  DROP_SRC_BYTE_CNT_TBL_DATA1; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	L3FE_PE_DROP_SRC_BYTE_CNT_TBL_DATA0_t
	  DROP_SRC_BYTE_CNT_TBL_DATA0; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	L3FE_PE_RX_IFID_CNT_TBL_ACCESS_t
	  RX_IFID_CNT_TBL_ACCESS; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA7_t RX_IFID_CNT_TBL_DATA7; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA6_t RX_IFID_CNT_TBL_DATA6; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA5_t RX_IFID_CNT_TBL_DATA5; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA4_t RX_IFID_CNT_TBL_DATA4; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA3_t RX_IFID_CNT_TBL_DATA3; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA2_t RX_IFID_CNT_TBL_DATA2; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA1_t RX_IFID_CNT_TBL_DATA1; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	L3FE_PE_RX_IFID_CNT_TBL_DATA0_t RX_IFID_CNT_TBL_DATA0; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	L3FE_PE_TX_IFID_CNT_TBL_ACCESS_t
	  TX_IFID_CNT_TBL_ACCESS; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA6_t TX_IFID_CNT_TBL_DATA6; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA5_t TX_IFID_CNT_TBL_DATA5; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA4_t TX_IFID_CNT_TBL_DATA4; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA3_t TX_IFID_CNT_TBL_DATA3; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA2_t TX_IFID_CNT_TBL_DATA2; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA1_t TX_IFID_CNT_TBL_DATA1; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	L3FE_PE_TX_IFID_CNT_TBL_DATA0_t TX_IFID_CNT_TBL_DATA0; /* addr: 0x00000118 */
} APB0_L3FE_PE_t;
#endif /* !__ASSEMBLER__ */

/*
 * FE_L3E_HS
 */

#define L3FE_FE_L3E_HS_PROFILE0_INI 0xf4303800
#define L3FE_FE_L3E_HS_PROFILE0_INI_STRIDE 44
#define L3FE_FE_L3E_HS_PROFILE0_INI_COUNT 15
#define L3FE_FE_L3E_HS_PROFILE0_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpl_num : 4; /* bits 3:0 */
		ca_uint32_t default_sel_0e : 5; /* bits 8:4 */
		ca_uint32_t default_sel_0a : 5; /* bits 13:9 */
		ca_uint32_t default_sel_1e : 5; /* bits 18:14 */
		ca_uint32_t default_sel_1a : 5; /* bits 23:19 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_PROFILE0_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0 0xf4303804
#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0_STRIDE 44
#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0_COUNT 15
#define L3FE_FE_L3E_HS_PROFILE0_TUPLE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t maskptr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t pri : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t type : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 19;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_PROFILE0_TUPLE0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION 0xf4303824
#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_STRIDE 44
#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_COUNT 15
#define L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a_mask : 24; /* bits 23:0 */
		ca_uint32_t fetch_sz : 3; /* bits 26:24 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_HASH_INI 0xf4303a94
#define L3FE_FE_L3E_HS_HASH_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hb_size : 2; /* bits 1:0 */
		ca_uint32_t ht_size : 3; /* bits 4:2 */
		ca_uint32_t ha_width : 3; /* bits 7:5 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_HASH_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_MH1 0xf4303a98
#define L3FE_FE_L3E_HS_BA_MH1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ba1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_MH1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_MH0 0xf4303a9c
#define L3FE_FE_L3E_HS_BA_MH0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t ba0 : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_MH0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_MA1 0xf4303aa0
#define L3FE_FE_L3E_HS_BA_MA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ba1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_MA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_MA0 0xf4303aa4
#define L3FE_FE_L3E_HS_BA_MA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t ba0 : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_MA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_OVERFLOW_INI 0xf4303aa8
#define L3FE_FE_L3E_HS_OVERFLOW_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t oa_width : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_OVERFLOW_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_OA1 0xf4303aac
#define L3FE_FE_L3E_HS_BA_OA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ba1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_OA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_OA0 0xf4303ab0
#define L3FE_FE_L3E_HS_BA_OA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t ba0 : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_OA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_DEFAULT_INI 0xf4303ab4
#define L3FE_FE_L3E_HS_DEFAULT_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t da_width : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_DEFAULT_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_DA1 0xf4303ab8
#define L3FE_FE_L3E_HS_BA_DA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ba1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_DA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_DA0 0xf4303abc
#define L3FE_FE_L3E_HS_BA_DA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t ba0 : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_DA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0 0xf4303ac0
#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0_STRIDE 4
#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0_COUNT 32
#define L3FE_FE_L3E_HS_DEFAULT_ACTION_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a_mask : 24; /* bits 23:0 */
		ca_uint32_t fetch_sz : 3; /* bits 26:24 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_DEFAULT_ACTION_0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_INI 0xf4303b40
#define L3FE_FE_L3E_HS_CACHE_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ct_size : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t ca_width : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 21;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_CA1 0xf4303b44
#define L3FE_FE_L3E_HS_BA_CA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ba1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_CA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_BA_CA0 0xf4303b48
#define L3FE_FE_L3E_HS_BA_CA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t ba0 : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_BA_CA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_CTRL 0xf4303b4c
#define L3FE_FE_L3E_HS_CACHE_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slot : 5; /* bits 4:0 */
		ca_uint32_t crc16 : 16; /* bits 20:5 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t loc : 1; /* bits 24:24 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t age : 2; /* bits 27:26 */
		ca_uint32_t pri : 2; /* bits 29:28 */
		ca_uint32_t cmd : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_CTRL_REQ 0xf4303b50
#define L3FE_FE_L3E_HS_CACHE_CTRL_REQ_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t req_sts : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_CTRL_REQ_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_CTRL_STS 0xf4303b54
#define L3FE_FE_L3E_HS_CACHE_CTRL_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bsy : 1; /* bits 0:0 */
		ca_uint32_t err_hash : 1; /* bits 1:1 */
		ca_uint32_t err_free : 1; /* bits 2:2 */
		ca_uint32_t err_nch : 1; /* bits 3:3 */
		ca_uint32_t sts_match : 1; /* bits 4:4 */
		ca_uint32_t sts_match_loc : 1; /* bits 5:5 */
		ca_uint32_t sts_evict : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_CTRL_STS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_AGE10 0xf4303b58
#define L3FE_FE_L3E_HS_CACHE_AGE10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ut_t0 : 16; /* bits 15:0 */
		ca_uint32_t ut_t1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_AGE10_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_AGE32 0xf4303b5c
#define L3FE_FE_L3E_HS_CACHE_AGE32_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ut_t2 : 16; /* bits 15:0 */
		ca_uint32_t ut_t3 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_AGE32_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_CNT 0xf4303b60
#define L3FE_FE_L3E_HS_CACHE_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ut_cnt : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_CNT_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_MISC 0xf4303b64
#define L3FE_FE_L3E_HS_CACHE_MISC_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t s2_ra_en : 1; /* bits 26:26 */
		ca_uint32_t s2_ra_pri : 2; /* bits 28:27 */
		ca_uint32_t crep_en : 1; /* bits 29:29 */
		ca_uint32_t s3_loc_n : 1; /* bits 30:30 */
		ca_uint32_t s3_ra_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_MISC_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_AXI_CTRL_1 0xf4303b68
#define L3FE_FE_L3E_HS_AXI_CTRL_1_STRIDE 4
#define L3FE_FE_L3E_HS_AXI_CTRL_1_COUNT 4
#define L3FE_FE_L3E_HS_AXI_CTRL_1_dft 0x02000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 25; /* bits 24:0 */
		ca_uint32_t id : 4; /* bits 28:25 */
		ca_uint32_t ace : 1; /* bits 29:29 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_AXI_CTRL_1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_SWO_IDX 0xf4303b78
#define L3FE_FE_L3E_HS_SWO_IDX_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t idx : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_SWO_IDX_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_SWO_DAT 0xf4303b7c
#define L3FE_FE_L3E_HS_SWO_DAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_SWO_DAT_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_SWO_CTRL 0xf4303b80
#define L3FE_FE_L3E_HS_SWO_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cmd_sts : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_SWO_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_HASH_ACCESS 0xf4303b84
#define L3FE_FE_L3E_HS_CACHE_HASH_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 11; /* bits 10:0 */
		ca_uint32_t rsrvd1 : 19;
		ca_uint32_t r0w1 : 1; /* bits 30:30 */
		ca_uint32_t status : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_HASH_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_HASH_DATA1 0xf4303b88
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crc16 : 13; /* bits 12:0 */
		ca_uint32_t slot : 5; /* bits 17:13 */
		ca_uint32_t location : 1; /* bits 18:18 */
		ca_uint32_t pri : 2; /* bits 20:19 */
		ca_uint32_t age : 2; /* bits 22:21 */
		ca_uint32_t rsrvd1 : 9;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CACHE_HASH_DATA0 0xf4303b8c
#define L3FE_FE_L3E_HS_CACHE_HASH_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crc32 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CACHE_HASH_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS 0xf4303b90
#define L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t r0w1 : 1; /* bits 30:30 */
		ca_uint32_t status : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1 0xf4303b94
#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crc16 : 16; /* bits 15:0 */
		ca_uint32_t profile : 4; /* bits 19:16 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0 0xf4303b98
#define L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crc32 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_MASK_MEM_ACCESS 0xf4303b9c
#define L3FE_FE_L3E_HS_MASK_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t r0w1 : 1; /* bits 30:30 */
		ca_uint32_t status : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_MASK_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_MASK_MEM_MASK3 0xf4303ba0
#define L3FE_FE_L3E_HS_MASK_MEM_MASK3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_MASK_MEM_MASK3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_MASK_MEM_MASK2 0xf4303ba4
#define L3FE_FE_L3E_HS_MASK_MEM_MASK2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_MASK_MEM_MASK2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_MASK_MEM_MASK1 0xf4303ba8
#define L3FE_FE_L3E_HS_MASK_MEM_MASK1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_MASK_MEM_MASK1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_MASK_MEM_MASK0 0xf4303bac
#define L3FE_FE_L3E_HS_MASK_MEM_MASK0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_MASK_MEM_MASK0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_AGING_GRANULARITY 0xf4303bb0
#define L3FE_FE_L3E_HS_AGING_GRANULARITY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t timer : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_AGING_GRANULARITY_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS 0xf4303bb4
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 18;
		ca_uint32_t r0w1 : 1; /* bits 30:30 */
		ca_uint32_t age : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3 0xf4303bb8
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2 0xf4303bbc
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1 0xf4303bc0
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0 0xf4303bc4
#define L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_MEM_INI 0xf4303bc8
#define L3FE_FE_L3E_HS_MEM_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t req_sts : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_MEM_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_CHK_FAIL_CTRL 0xf4303bcc
#define L3FE_FE_L3E_HS_CHK_FAIL_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type0 : 8; /* bits 7:0 */
		ca_uint32_t type1 : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_CHK_FAIL_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_RSV0 0xf4303bd0
#define L3FE_FE_L3E_HS_RSV0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsv : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_RSV0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_RSV1 0xf4303bd4
#define L3FE_FE_L3E_HS_RSV1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsv : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_RSV1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FE_L3E_HS */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_FE_L3E_HS_PROFILE0_INI_t PROFILE0_INI; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_FE_L3E_HS_PROFILE0_TUPLE0_t PROFILE0_TUPLE0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[31];
	L3FE_FE_L3E_HS_PROFILE0_TYPE0_ACTION_t
	  PROFILE0_TYPE0_ACTION; /* addr: 0x00000024 */
	ca_uint32_t rsrvd3[623];
	L3FE_FE_L3E_HS_HASH_INI_t HASH_INI; /* addr: 0x00000294 */
	ca_uint32_t rsrvd4[3];
	L3FE_FE_L3E_HS_BA_MH1_t BA_MH1; /* addr: 0x00000298 */
	ca_uint32_t rsrvd5[3];
	L3FE_FE_L3E_HS_BA_MH0_t BA_MH0; /* addr: 0x0000029c */
	ca_uint32_t rsrvd6[3];
	L3FE_FE_L3E_HS_BA_MA1_t BA_MA1; /* addr: 0x000002a0 */
	ca_uint32_t rsrvd7[3];
	L3FE_FE_L3E_HS_BA_MA0_t BA_MA0; /* addr: 0x000002a4 */
	ca_uint32_t rsrvd8[3];
	L3FE_FE_L3E_HS_OVERFLOW_INI_t OVERFLOW_INI; /* addr: 0x000002a8 */
	ca_uint32_t rsrvd9[3];
	L3FE_FE_L3E_HS_BA_OA1_t BA_OA1; /* addr: 0x000002ac */
	ca_uint32_t rsrvd10[3];
	L3FE_FE_L3E_HS_BA_OA0_t BA_OA0; /* addr: 0x000002b0 */
	ca_uint32_t rsrvd11[3];
	L3FE_FE_L3E_HS_DEFAULT_INI_t DEFAULT_INI; /* addr: 0x000002b4 */
	ca_uint32_t rsrvd12[3];
	L3FE_FE_L3E_HS_BA_DA1_t BA_DA1; /* addr: 0x000002b8 */
	ca_uint32_t rsrvd13[3];
	L3FE_FE_L3E_HS_BA_DA0_t BA_DA0; /* addr: 0x000002bc */
	ca_uint32_t rsrvd14[3];
	L3FE_FE_L3E_HS_DEFAULT_ACTION_0_t DEFAULT_ACTION_0; /* addr: 0x000002c0 */
	ca_uint32_t rsrvd15[127];
	L3FE_FE_L3E_HS_CACHE_INI_t CACHE_INI; /* addr: 0x00000340 */
	ca_uint32_t rsrvd16[3];
	L3FE_FE_L3E_HS_BA_CA1_t BA_CA1; /* addr: 0x00000344 */
	ca_uint32_t rsrvd17[3];
	L3FE_FE_L3E_HS_BA_CA0_t BA_CA0; /* addr: 0x00000348 */
	ca_uint32_t rsrvd18[3];
	L3FE_FE_L3E_HS_CACHE_CTRL_t CACHE_CTRL; /* addr: 0x0000034c */
	ca_uint32_t rsrvd19[3];
	L3FE_FE_L3E_HS_CACHE_CTRL_REQ_t CACHE_CTRL_REQ; /* addr: 0x00000350 */
	ca_uint32_t rsrvd20[3];
	L3FE_FE_L3E_HS_CACHE_CTRL_STS_t CACHE_CTRL_STS; /* addr: 0x00000354 */
	ca_uint32_t rsrvd21[3];
	L3FE_FE_L3E_HS_CACHE_AGE10_t CACHE_AGE10; /* addr: 0x00000358 */
	ca_uint32_t rsrvd22[3];
	L3FE_FE_L3E_HS_CACHE_AGE32_t CACHE_AGE32; /* addr: 0x0000035c */
	ca_uint32_t rsrvd23[3];
	L3FE_FE_L3E_HS_CACHE_CNT_t CACHE_CNT; /* addr: 0x00000360 */
	ca_uint32_t rsrvd24[3];
	L3FE_FE_L3E_HS_CACHE_MISC_t CACHE_MISC; /* addr: 0x00000364 */
	ca_uint32_t rsrvd25[3];
	L3FE_FE_L3E_HS_AXI_CTRL_1_t AXI_CTRL_1; /* addr: 0x00000368 */
	ca_uint32_t rsrvd26[15];
	L3FE_FE_L3E_HS_SWO_IDX_t SWO_IDX; /* addr: 0x00000378 */
	ca_uint32_t rsrvd27[3];
	L3FE_FE_L3E_HS_SWO_DAT_t SWO_DAT; /* addr: 0x0000037c */
	ca_uint32_t rsrvd28[3];
	L3FE_FE_L3E_HS_SWO_CTRL_t SWO_CTRL; /* addr: 0x00000380 */
	ca_uint32_t rsrvd29[3];
	L3FE_FE_L3E_HS_CACHE_HASH_ACCESS_t CACHE_HASH_ACCESS; /* addr: 0x00000384 */
	ca_uint32_t rsrvd30[3];
	L3FE_FE_L3E_HS_CACHE_HASH_DATA1_t CACHE_HASH_DATA1; /* addr: 0x00000388 */
	ca_uint32_t rsrvd31[3];
	L3FE_FE_L3E_HS_CACHE_HASH_DATA0_t CACHE_HASH_DATA0; /* addr: 0x0000038c */
	ca_uint32_t rsrvd32[3];
	L3FE_FE_L3E_HS_OVERFLOW_HASH_ACCESS_t
	  OVERFLOW_HASH_ACCESS; /* addr: 0x00000390 */
	ca_uint32_t rsrvd33[3];
	L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA1_t
	  OVERFLOW_HASH_DATA1; /* addr: 0x00000394 */
	ca_uint32_t rsrvd34[3];
	L3FE_FE_L3E_HS_OVERFLOW_HASH_DATA0_t
	  OVERFLOW_HASH_DATA0; /* addr: 0x00000398 */
	ca_uint32_t rsrvd35[3];
	L3FE_FE_L3E_HS_MASK_MEM_ACCESS_t MASK_MEM_ACCESS; /* addr: 0x0000039c */
	ca_uint32_t rsrvd36[3];
	L3FE_FE_L3E_HS_MASK_MEM_MASK3_t MASK_MEM_MASK3; /* addr: 0x000003a0 */
	ca_uint32_t rsrvd37[3];
	L3FE_FE_L3E_HS_MASK_MEM_MASK2_t MASK_MEM_MASK2; /* addr: 0x000003a4 */
	ca_uint32_t rsrvd38[3];
	L3FE_FE_L3E_HS_MASK_MEM_MASK1_t MASK_MEM_MASK1; /* addr: 0x000003a8 */
	ca_uint32_t rsrvd39[3];
	L3FE_FE_L3E_HS_MASK_MEM_MASK0_t MASK_MEM_MASK0; /* addr: 0x000003ac */
	ca_uint32_t rsrvd40[3];
	L3FE_FE_L3E_HS_AGING_GRANULARITY_t AGING_GRANULARITY; /* addr: 0x000003b0 */
	ca_uint32_t rsrvd41[3];
	L3FE_FE_L3E_HS_HASH_AGE_MEM_ACCESS_t
	  HASH_AGE_MEM_ACCESS; /* addr: 0x000003b4 */
	ca_uint32_t rsrvd42[3];
	L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA3_t HASH_AGE_MEM_DATA3; /* addr: 0x000003b8 */
	ca_uint32_t rsrvd43[3];
	L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA2_t HASH_AGE_MEM_DATA2; /* addr: 0x000003bc */
	ca_uint32_t rsrvd44[3];
	L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA1_t HASH_AGE_MEM_DATA1; /* addr: 0x000003c0 */
	ca_uint32_t rsrvd45[3];
	L3FE_FE_L3E_HS_HASH_AGE_MEM_DATA0_t HASH_AGE_MEM_DATA0; /* addr: 0x000003c4 */
	ca_uint32_t rsrvd46[3];
	L3FE_FE_L3E_HS_MEM_INI_t MEM_INI; /* addr: 0x000003c8 */
	ca_uint32_t rsrvd47[3];
	L3FE_FE_L3E_HS_CHK_FAIL_CTRL_t CHK_FAIL_CTRL; /* addr: 0x000003cc */
	ca_uint32_t rsrvd48[3];
	L3FE_FE_L3E_HS_RSV0_t RSV0; /* addr: 0x000003d0 */
	ca_uint32_t rsrvd49[3];
	L3FE_FE_L3E_HS_RSV1_t RSV1; /* addr: 0x000003d4 */
} APB0_L3FE_FE_L3E_HS_t;
#endif /* !__ASSEMBLER__ */

/*
 * AXIM2
 */

#define L3FE_AXIM2_CONFIG 0xf4303c80
#define L3FE_AXIM2_CONFIG_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write_outtrans_num : 4; /* bits 3:0 */
		ca_uint32_t axi_read_outtrans_num : 4; /* bits 7:4 */
		ca_uint32_t axi_xbus_len : 3; /* bits 10:8 */
		ca_uint32_t write_cacheline_trans_en : 1; /* bits 11:11 */
		ca_uint32_t write_cacheline_trans_size : 1; /* bits 12:12 */
		ca_uint32_t read_cacheline_trans_en : 1; /* bits 13:13 */
		ca_uint32_t read_cacheline_trans_size : 1; /* bits 14:14 */
		ca_uint32_t arcache_eos_en : 1; /* bits 15:15 */
		ca_uint32_t awcache_eos_en : 1; /* bits 16:16 */
		ca_uint32_t reserved : 15; /* bits 31:17 */
	} bf;
	ca_uint32_t wrd;
} L3FE_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_AXIM2_TIMEOUT_THRESHOLD 0xf4303c84
#define L3FE_AXIM2_TIMEOUT_THRESHOLD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_channel_threshold : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t write_channel_threshold : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 27;
	} bf;
	ca_uint32_t wrd;
} L3FE_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_AXIM2_INTERRUPT_STATUS 0xf4303c88
#define L3FE_AXIM2_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L3FE_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_AXIM2_INTERRUPT_ENABLE 0xf4303c8c
#define L3FE_AXIM2_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int_en : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int_en : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int_en : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int_en : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} L3FE_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_AXIM2_CONFIG_t CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_AXIM2_TIMEOUT_THRESHOLD_t TIMEOUT_THRESHOLD; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_AXIM2_INTERRUPT_STATUS_t INTERRUPT_STATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_AXIM2_INTERRUPT_ENABLE_t INTERRUPT_ENABLE; /* addr: 0x0000000c */
} APB0_L3FE_AXIM2_t;
#endif /* !__ASSEMBLER__ */

/*
 * FE_L3E_HS_LIGHT
 */

#define L3FE_FE_L3E_HS_LIGHT_CFG 0xf4303d00
#define L3FE_FE_L3E_HS_LIGHT_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ht_size : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_CFG_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_EN 0xf4303d04
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_EN_STRIDE 12
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_EN_COUNT 14
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tpl_num : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t tpl_type : 8; /* bits 15:8 */
		ca_uint32_t default_sel_0e : 4; /* bits 19:16 */
		ca_uint32_t default_sel_0a : 4; /* bits 23:20 */
		ca_uint32_t default_sel_1e : 4; /* bits 27:24 */
		ca_uint32_t default_sel_1a : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_PROFILE0_EN_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR1 0xf4303d08
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR1_STRIDE 12
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR1_COUNT 14
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t maskptr41 : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t maskptr51 : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t maskptr61 : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t maskptr71 : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR0 0xf4303d0c
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR0_STRIDE 12
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR0_COUNT 14
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t maskptr00 : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t maskptr10 : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t maskptr20 : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t maskptr30 : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION 0xf4303dac
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_STRIDE 4
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_COUNT 14
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t act_mask_hit : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_TYPE1 0xf4303de4
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_TYPE1_STRIDE 4
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_TYPE1_COUNT 14
#define L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_TYPE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t act_mask_hit : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_TYPE1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_PROFILE14_ACTION 0xf4303e1c
#define L3FE_FE_L3E_HS_LIGHT_PROFILE14_ACTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t act_mask : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_PROFILE14_ACTION_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_DEFAULT_ACTION_MASK0 0xf4303e20
#define L3FE_FE_L3E_HS_LIGHT_DEFAULT_ACTION_MASK0_STRIDE 4
#define L3FE_FE_L3E_HS_LIGHT_DEFAULT_ACTION_MASK0_COUNT 16
#define L3FE_FE_L3E_HS_LIGHT_DEFAULT_ACTION_MASK0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t act_mask_dft : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_DEFAULT_ACTION_MASK0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_AGING_GRANULARITY 0xf4303e60
#define L3FE_FE_L3E_HS_LIGHT_AGING_GRANULARITY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t timer : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_AGING_GRANULARITY_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_ACCESS 0xf4303e64
#define L3FE_FE_L3E_HS_LIGHT_IND_X_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t r0w1 : 1; /* bits 30:30 */
		ca_uint32_t status : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA5 0xf4303e68
#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA4 0xf4303e6c
#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA3 0xf4303e70
#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA2 0xf4303e74
#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA1 0xf4303e78
#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA0 0xf4303e7c
#define L3FE_FE_L3E_HS_LIGHT_IND_X_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_IND_X_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_MEM_INI 0xf4303e80
#define L3FE_FE_L3E_HS_LIGHT_MEM_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t req_sts : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_MEM_INI_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_CHK_FAIL_CTRL 0xf4303e84
#define L3FE_FE_L3E_HS_LIGHT_CHK_FAIL_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type0 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_CHK_FAIL_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_HS_LIGHT_RSV0 0xf4303e88
#define L3FE_FE_L3E_HS_LIGHT_RSV0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsv : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_HS_LIGHT_RSV0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FE_L3E_HS_LIGHT */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_FE_L3E_HS_LIGHT_CFG_t CFG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_FE_L3E_HS_LIGHT_PROFILE0_EN_t PROFILE0_EN; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR1_t
	  PROFILE0_MASKPTR1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_FE_L3E_HS_LIGHT_PROFILE0_MASKPTR0_t
	  PROFILE0_MASKPTR0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[159];
	L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_t PROFILE0_ACTION; /* addr: 0x000000ac */
	ca_uint32_t rsrvd5[55];
	L3FE_FE_L3E_HS_LIGHT_PROFILE0_ACTION_TYPE1_t
	  PROFILE0_ACTION_TYPE1; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd6[55];
	L3FE_FE_L3E_HS_LIGHT_PROFILE14_ACTION_t
	  PROFILE14_ACTION; /* addr: 0x0000011c */
	ca_uint32_t rsrvd7[3];
	L3FE_FE_L3E_HS_LIGHT_DEFAULT_ACTION_MASK0_t
	  DEFAULT_ACTION_MASK0; /* addr: 0x00000120 */
	ca_uint32_t rsrvd8[63];
	L3FE_FE_L3E_HS_LIGHT_AGING_GRANULARITY_t
	  AGING_GRANULARITY; /* addr: 0x00000160 */
	ca_uint32_t rsrvd9[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_ACCESS_t IND_X_ACCESS; /* addr: 0x00000164 */
	ca_uint32_t rsrvd10[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_DATA5_t IND_X_DATA5; /* addr: 0x00000168 */
	ca_uint32_t rsrvd11[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_DATA4_t IND_X_DATA4; /* addr: 0x0000016c */
	ca_uint32_t rsrvd12[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_DATA3_t IND_X_DATA3; /* addr: 0x00000170 */
	ca_uint32_t rsrvd13[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_DATA2_t IND_X_DATA2; /* addr: 0x00000174 */
	ca_uint32_t rsrvd14[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_DATA1_t IND_X_DATA1; /* addr: 0x00000178 */
	ca_uint32_t rsrvd15[3];
	L3FE_FE_L3E_HS_LIGHT_IND_X_DATA0_t IND_X_DATA0; /* addr: 0x0000017c */
	ca_uint32_t rsrvd16[3];
	L3FE_FE_L3E_HS_LIGHT_MEM_INI_t MEM_INI; /* addr: 0x00000180 */
	ca_uint32_t rsrvd17[3];
	L3FE_FE_L3E_HS_LIGHT_CHK_FAIL_CTRL_t CHK_FAIL_CTRL; /* addr: 0x00000184 */
	ca_uint32_t rsrvd18[3];
	L3FE_FE_L3E_HS_LIGHT_RSV0_t RSV0; /* addr: 0x00000188 */
} APB0_L3FE_FE_L3E_HS_LIGHT_t;
#endif /* !__ASSEMBLER__ */

/*
 * FE_L3E_LPM
 */

#define L3FE_FE_L3E_LPM_CTRL_PF0 0xf4303f00
#define L3FE_FE_L3E_LPM_CTRL_PF0_dft 0x1f001c03

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t v4_inc_last_row : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t v6_dec_last_row : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t v4_inc_1st_row : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t v6_dec_1st_row : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_CTRL_PF0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_CTRL_PF1 0xf4303f04
#define L3FE_FE_L3E_LPM_CTRL_PF1_dft 0x1b041807

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t v4_inc_last_row : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t v6_dec_last_row : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t v4_inc_1st_row : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t v6_dec_1st_row : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_CTRL_PF1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_CTRL_PF2 0xf4303f08
#define L3FE_FE_L3E_LPM_CTRL_PF2_dft 0x1708140b

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t v4_inc_last_row : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t v6_dec_last_row : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t v4_inc_1st_row : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t v6_dec_1st_row : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_CTRL_PF2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_CTRL_PF3 0xf4303f0c
#define L3FE_FE_L3E_LPM_CTRL_PF3_dft 0x130c100f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t v4_inc_last_row : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t v6_dec_last_row : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t v4_inc_1st_row : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t v6_dec_1st_row : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_CTRL_PF3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL1 0xf4303f10
#define L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t t4_ctrl_01 : 4; /* bits 3:0 */
		ca_uint32_t t4_ctrl_11 : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL0 0xf4303f14
#define L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t default_idx0 : 12; /* bits 11:0 */
		ca_uint32_t default_ctrl0 : 4; /* bits 15:12 */
		ca_uint32_t default_dpid0 : 6; /* bits 21:16 */
		ca_uint32_t default_dpid_vld0 : 1; /* bits 22:22 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t default_stg0 : 2; /* bits 25:24 */
		ca_uint32_t default_stg_ud0 : 2; /* bits 27:26 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL1 0xf4303f18
#define L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t t4_ctrl_01 : 4; /* bits 3:0 */
		ca_uint32_t t4_ctrl_11 : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL0 0xf4303f1c
#define L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t default_idx0 : 12; /* bits 11:0 */
		ca_uint32_t default_ctrl0 : 4; /* bits 15:12 */
		ca_uint32_t default_dpid0 : 6; /* bits 21:16 */
		ca_uint32_t default_dpid_vld0 : 1; /* bits 22:22 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t default_stg0 : 2; /* bits 25:24 */
		ca_uint32_t default_stg_ud0 : 2; /* bits 27:26 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS31 0xf4303f20
#define L3FE_FE_L3E_LPM_STS31_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits31 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS31_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS30 0xf4303f24
#define L3FE_FE_L3E_LPM_STS30_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits30 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS30_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS29 0xf4303f28
#define L3FE_FE_L3E_LPM_STS29_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits29 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS29_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS28 0xf4303f2c
#define L3FE_FE_L3E_LPM_STS28_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits28 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS28_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS27 0xf4303f30
#define L3FE_FE_L3E_LPM_STS27_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits27 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS27_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS26 0xf4303f34
#define L3FE_FE_L3E_LPM_STS26_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits26 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS26_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS25 0xf4303f38
#define L3FE_FE_L3E_LPM_STS25_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits25 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS25_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS24 0xf4303f3c
#define L3FE_FE_L3E_LPM_STS24_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits24 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS24_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS23 0xf4303f40
#define L3FE_FE_L3E_LPM_STS23_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits23 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS23_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS22 0xf4303f44
#define L3FE_FE_L3E_LPM_STS22_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits22 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS22_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS21 0xf4303f48
#define L3FE_FE_L3E_LPM_STS21_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits21 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS21_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS20 0xf4303f4c
#define L3FE_FE_L3E_LPM_STS20_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits20 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS20_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS19 0xf4303f50
#define L3FE_FE_L3E_LPM_STS19_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits19 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS19_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS18 0xf4303f54
#define L3FE_FE_L3E_LPM_STS18_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits18 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS18_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS17 0xf4303f58
#define L3FE_FE_L3E_LPM_STS17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS17_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS16 0xf4303f5c
#define L3FE_FE_L3E_LPM_STS16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS16_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS15 0xf4303f60
#define L3FE_FE_L3E_LPM_STS15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS15_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS14 0xf4303f64
#define L3FE_FE_L3E_LPM_STS14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS14_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS13 0xf4303f68
#define L3FE_FE_L3E_LPM_STS13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS13_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS12 0xf4303f6c
#define L3FE_FE_L3E_LPM_STS12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS12_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS11 0xf4303f70
#define L3FE_FE_L3E_LPM_STS11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS11_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS10 0xf4303f74
#define L3FE_FE_L3E_LPM_STS10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS10_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS9 0xf4303f78
#define L3FE_FE_L3E_LPM_STS9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS9_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS8 0xf4303f7c
#define L3FE_FE_L3E_LPM_STS8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS8_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS7 0xf4303f80
#define L3FE_FE_L3E_LPM_STS7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS7_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS6 0xf4303f84
#define L3FE_FE_L3E_LPM_STS6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS6_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS5 0xf4303f88
#define L3FE_FE_L3E_LPM_STS5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS5_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS4 0xf4303f8c
#define L3FE_FE_L3E_LPM_STS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS4_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS3 0xf4303f90
#define L3FE_FE_L3E_LPM_STS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS3_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS2 0xf4303f94
#define L3FE_FE_L3E_LPM_STS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS2_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS1 0xf4303f98
#define L3FE_FE_L3E_LPM_STS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_STS0 0xf4303f9c
#define L3FE_FE_L3E_LPM_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_STS0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_DBG0 0xf4303fa0
#define L3FE_FE_L3E_LPM_DBG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bits : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_DBG0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_TBL_ACCESS 0xf4303fa4
#define L3FE_FE_L3E_LPM_TBL_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t r0w1 : 1; /* bits 30:30 */
		ca_uint32_t status : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_TBL_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_TBL_DATA1 0xf4303fa8
#define L3FE_FE_L3E_LPM_TBL_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mask : 6; /* bits 5:0 */
		ca_uint32_t attr : 2; /* bits 7:6 */
		ca_uint32_t rst_idx : 12; /* bits 19:8 */
		ca_uint32_t rst_ctrl : 1; /* bits 20:20 */
		ca_uint32_t valid : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_TBL_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_TBL_DATA0 0xf4303fac
#define L3FE_FE_L3E_LPM_TBL_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_TBL_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define L3FE_FE_L3E_LPM_MEM_INI 0xf4303fb0
#define L3FE_FE_L3E_LPM_MEM_INI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t req_sts : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} L3FE_FE_L3E_LPM_MEM_INI_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FE_L3E_LPM */
#ifndef __ASSEMBLER__
typedef struct {
	L3FE_FE_L3E_LPM_CTRL_PF0_t CTRL_PF0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	L3FE_FE_L3E_LPM_CTRL_PF1_t CTRL_PF1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	L3FE_FE_L3E_LPM_CTRL_PF2_t CTRL_PF2; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	L3FE_FE_L3E_LPM_CTRL_PF3_t CTRL_PF3; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL1_t IPV4_ACTION_CTRL1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	L3FE_FE_L3E_LPM_IPV4_ACTION_CTRL0_t IPV4_ACTION_CTRL0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL1_t IPV6_ACTION_CTRL1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	L3FE_FE_L3E_LPM_IPV6_ACTION_CTRL0_t IPV6_ACTION_CTRL0; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	L3FE_FE_L3E_LPM_STS31_t STS31; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	L3FE_FE_L3E_LPM_STS30_t STS30; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	L3FE_FE_L3E_LPM_STS29_t STS29; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	L3FE_FE_L3E_LPM_STS28_t STS28; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	L3FE_FE_L3E_LPM_STS27_t STS27; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	L3FE_FE_L3E_LPM_STS26_t STS26; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	L3FE_FE_L3E_LPM_STS25_t STS25; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	L3FE_FE_L3E_LPM_STS24_t STS24; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	L3FE_FE_L3E_LPM_STS23_t STS23; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	L3FE_FE_L3E_LPM_STS22_t STS22; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	L3FE_FE_L3E_LPM_STS21_t STS21; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	L3FE_FE_L3E_LPM_STS20_t STS20; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	L3FE_FE_L3E_LPM_STS19_t STS19; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	L3FE_FE_L3E_LPM_STS18_t STS18; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	L3FE_FE_L3E_LPM_STS17_t STS17; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	L3FE_FE_L3E_LPM_STS16_t STS16; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	L3FE_FE_L3E_LPM_STS15_t STS15; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	L3FE_FE_L3E_LPM_STS14_t STS14; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	L3FE_FE_L3E_LPM_STS13_t STS13; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	L3FE_FE_L3E_LPM_STS12_t STS12; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	L3FE_FE_L3E_LPM_STS11_t STS11; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	L3FE_FE_L3E_LPM_STS10_t STS10; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	L3FE_FE_L3E_LPM_STS9_t STS9; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	L3FE_FE_L3E_LPM_STS8_t STS8; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	L3FE_FE_L3E_LPM_STS7_t STS7; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	L3FE_FE_L3E_LPM_STS6_t STS6; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	L3FE_FE_L3E_LPM_STS5_t STS5; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	L3FE_FE_L3E_LPM_STS4_t STS4; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	L3FE_FE_L3E_LPM_STS3_t STS3; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	L3FE_FE_L3E_LPM_STS2_t STS2; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	L3FE_FE_L3E_LPM_STS1_t STS1; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	L3FE_FE_L3E_LPM_STS0_t STS0; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	L3FE_FE_L3E_LPM_DBG0_t DBG0; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	L3FE_FE_L3E_LPM_TBL_ACCESS_t TBL_ACCESS; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	L3FE_FE_L3E_LPM_TBL_DATA1_t TBL_DATA1; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	L3FE_FE_L3E_LPM_TBL_DATA0_t TBL_DATA0; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	L3FE_FE_L3E_LPM_MEM_INI_t MEM_INI; /* addr: 0x000000b0 */
} APB0_L3FE_FE_L3E_LPM_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* L3FE */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_L3FE_GLB_t GLB; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[377];
	APB0_L3FE_PP_t PP; /* addr: 0x00000200 */
	ca_uint32_t rsrvd2[151];
	APB0_L3FE_CLS_t CLS; /* addr: 0x00000300 */
	ca_uint32_t rsrvd3[89];
	APB0_L3FE_STG0_t STG0; /* addr: 0x00000380 */
	ca_uint32_t rsrvd4[93];
	APB0_L3FE_STG1_t STG1; /* addr: 0x00000400 */
	ca_uint32_t rsrvd5[237];
	APB0_L3FE_PE_t PE; /* addr: 0x00000500 */
	ca_uint32_t rsrvd6[627];
	APB0_L3FE_FE_L3E_HS_t FE_L3E_HS; /* addr: 0x00000800 */
	ca_uint32_t rsrvd7[661];
	APB0_L3FE_AXIM2_t AXIM2; /* addr: 0x00000c80 */
	ca_uint32_t rsrvd8[121];
	APB0_L3FE_FE_L3E_HS_LIGHT_t FE_L3E_HS_LIGHT; /* addr: 0x00000d00 */
	ca_uint32_t rsrvd9[315];
	APB0_L3FE_FE_L3E_LPM_t FE_L3E_LPM; /* addr: 0x00000f00 */
} APB0_L3FE_t;
#endif /* !__ASSEMBLER__ */

/*
 * NI_HV
 */

/*
 * GLB
 */

#define NI_HV_GLB_REVISION 0xf4304000
#define NI_HV_GLB_REVISION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minor : 16; /* bits 15:0 */
		ca_uint32_t major : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_REVISION_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_INIT_DONE 0xf4304004
#define NI_HV_GLB_INIT_DONE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ni_init_done : 1; /* bits 1:1 */
		ca_uint32_t rsrvd2 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_INIT_DONE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_INTF_RST_CONFIG 0xf4304008
#define NI_HV_GLB_INTF_RST_CONFIG_dft 0x000fffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intf_rst_p0 : 1; /* bits 0:0 */
		ca_uint32_t intf_rst_p1 : 1; /* bits 1:1 */
		ca_uint32_t intf_rst_p2 : 1; /* bits 2:2 */
		ca_uint32_t intf_rst_p3 : 1; /* bits 3:3 */
		ca_uint32_t intf_rst_p4 : 1; /* bits 4:4 */
		ca_uint32_t mac_rx_rst_p0 : 1; /* bits 5:5 */
		ca_uint32_t mac_rx_rst_p1 : 1; /* bits 6:6 */
		ca_uint32_t mac_rx_rst_p2 : 1; /* bits 7:7 */
		ca_uint32_t mac_rx_rst_p3 : 1; /* bits 8:8 */
		ca_uint32_t mac_rx_rst_p4 : 1; /* bits 9:9 */
		ca_uint32_t mac_tx_rst_p0 : 1; /* bits 10:10 */
		ca_uint32_t mac_tx_rst_p1 : 1; /* bits 11:11 */
		ca_uint32_t mac_tx_rst_p2 : 1; /* bits 12:12 */
		ca_uint32_t mac_tx_rst_p3 : 1; /* bits 13:13 */
		ca_uint32_t mac_tx_rst_p4 : 1; /* bits 14:14 */
		ca_uint32_t port_rst_p5 : 1; /* bits 15:15 */
		ca_uint32_t pcs_rst_p6 : 1; /* bits 16:16 */
		ca_uint32_t pcs_rst_p7 : 1; /* bits 17:17 */
		ca_uint32_t mac_rst_p6 : 1; /* bits 18:18 */
		ca_uint32_t mac_rst_p7 : 1; /* bits 19:19 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_INTF_RST_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_STATIC_CFG 0xf430400c
#define NI_HV_GLB_STATIC_CFG_dft 0x0220012f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port_to_cpu : 4; /* bits 3:0 */
		ca_uint32_t mgmt_pt_to_fe_also : 1; /* bits 4:4 */
		ca_uint32_t txcrc_chk_en : 1; /* bits 5:5 */
		ca_uint32_t p4_rgmii_tx_clk_phase : 2; /* bits 7:6 */
		ca_uint32_t p4_rgmii_tx_data_order : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t rxmib_mode : 1; /* bits 16:16 */
		ca_uint32_t txmib_mode : 1; /* bits 17:17 */
		ca_uint32_t eth_sch_rdy_pkt : 1; /* bits 18:18 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rxaui_mode : 2; /* bits 21:20 */
		ca_uint32_t rxaui_sigdet : 2; /* bits 23:22 */
		ca_uint32_t cnt_op_mode : 3; /* bits 26:24 */
		ca_uint32_t rsrvd3 : 5;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_STATIC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MAC_ADDR_CFG0 0xf4304010
#define NI_HV_GLB_MAC_ADDR_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MAC_ADDR_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MAC_ADDR_CFG1 0xf4304014
#define NI_HV_GLB_MAC_ADDR_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MAC_ADDR_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_WOL_PASSWD_0 0xf4304018
#define NI_HV_GLB_WOL_PASSWD_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wol_passwd0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_WOL_PASSWD_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_WOL_PASSWD_1 0xf430401c
#define NI_HV_GLB_WOL_PASSWD_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wol_passwd1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_WOL_PASSWD_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PKT_LEN_CFG 0xf4304020
#define NI_HV_GLB_PKT_LEN_CFG_dft 0x004023f1

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t max_pkt_size : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t min_pkt_size : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PKT_LEN_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PKT_STOR_LEN_CFG 0xf4304024
#define NI_HV_GLB_PKT_STOR_LEN_CFG_dft 0x00002454

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t max_stor_pkt_len : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PKT_STOR_LEN_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P5_BYPASS_CFG 0xf4304028
#define NI_HV_GLB_P5_BYPASS_CFG_dft 0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t byp_cos : 3; /* bits 2:0 */
		ca_uint32_t byp_dpq : 1; /* bits 3:3 */
		ca_uint32_t byp_dpid : 6; /* bits 9:4 */
		ca_uint32_t byp_mir : 1; /* bits 10:10 */
		ca_uint32_t byp_ndrp : 1; /* bits 11:11 */
		ca_uint32_t byp_en : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P5_BYPASS_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_BYPASS_CFG 0xf430402c
#define NI_HV_GLB_XGE_BYPASS_CFG_dft 0x00080008

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p6_byp_cos : 3; /* bits 2:0 */
		ca_uint32_t p6_byp_dpq : 1; /* bits 3:3 */
		ca_uint32_t p6_byp_dpid : 6; /* bits 9:4 */
		ca_uint32_t p6_byp_mir : 1; /* bits 10:10 */
		ca_uint32_t p6_byp_ndrp : 1; /* bits 11:11 */
		ca_uint32_t p6_byp_en : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t p7_byp_cos : 3; /* bits 18:16 */
		ca_uint32_t p7_byp_dpq : 1; /* bits 19:19 */
		ca_uint32_t p7_byp_dpid : 6; /* bits 25:20 */
		ca_uint32_t p7_byp_mir : 1; /* bits 26:26 */
		ca_uint32_t p7_byp_ndrp : 1; /* bits 27:27 */
		ca_uint32_t p7_byp_en : 1; /* bits 28:28 */
		ca_uint32_t p6_ts_fifo_rst : 1; /* bits 29:29 */
		ca_uint32_t p7_ts_fifo_rst : 1; /* bits 30:30 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_BYPASS_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_RXPAUSE_CFG 0xf4304030
#define NI_HV_GLB_XGE6_RXPAUSE_CFG_dft 0x0004b064

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thre_lo : 10; /* bits 9:0 */
		ca_uint32_t thre_hi : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_RXPAUSE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE7_RXFIFO_THRESHOLD 0xf4304034
#define NI_HV_GLB_XGE7_RXFIFO_THRESHOLD_dft 0x00264100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t free_buf_thre_lo : 10; /* bits 9:0 */
		ca_uint32_t free_buf_thre_hi : 10; /* bits 19:10 */
		ca_uint32_t xge7_12k_fifo_full_thre : 10; /* bits 29:20 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE7_RXFIFO_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_MAC_CFG1 0xf4304038
#define NI_HV_GLB_XGE6_MAC_CFG1_STRIDE 48
#define NI_HV_GLB_XGE6_MAC_CFG1_COUNT 2
#define NI_HV_GLB_XGE6_MAC_CFG1_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_MAC_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_MAC_CFG0 0xf430403c
#define NI_HV_GLB_XGE6_MAC_CFG0_STRIDE 48
#define NI_HV_GLB_XGE6_MAC_CFG0_COUNT 2
#define NI_HV_GLB_XGE6_MAC_CFG0_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_MAC_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_FLOW_CONTROL_CFG 0xf4304040
#define NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_STRIDE 48
#define NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_COUNT 2
#define NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_dft 0xc4ff011c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qbb_tx_en : 1; /* bits 0:0 */
		ca_uint32_t qbb_rx_en : 1; /* bits 1:1 */
		ca_uint32_t pau_tx_en : 1; /* bits 2:2 */
		ca_uint32_t pau_rx_en : 1; /* bits 3:3 */
		ca_uint32_t adjust_pause_cnt : 12; /* bits 15:4 */
		ca_uint32_t qbb_qen : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t tx_sw_pause_en : 1; /* bits 25:25 */
		ca_uint32_t rx_drp_pau_en : 1; /* bits 26:26 */
		ca_uint32_t tx_sw_pausereq : 1; /* bits 27:27 */
		ca_uint32_t internal_txstop_sel : 1; /* bits 28:28 */
		ca_uint32_t tx_remheader_dis : 1; /* bits 29:29 */
		ca_uint32_t rx_pausereq_sel : 1; /* bits 30:30 */
		ca_uint32_t te_pausereq_sel : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_TX_REPEAT_CNT 0xf4304044
#define NI_HV_GLB_XGE6_TX_REPEAT_CNT_STRIDE 48
#define NI_HV_GLB_XGE6_TX_REPEAT_CNT_COUNT 2
#define NI_HV_GLB_XGE6_TX_REPEAT_CNT_dft 0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t repeat_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_TX_REPEAT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_TX_QUANTA0 0xf4304048
#define NI_HV_GLB_XGE6_TX_QUANTA0_STRIDE 48
#define NI_HV_GLB_XGE6_TX_QUANTA0_COUNT 2
#define NI_HV_GLB_XGE6_TX_QUANTA0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta0 : 16; /* bits 15:0 */
		ca_uint32_t pause_quanta1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_TX_QUANTA0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_TX_QUANTA1 0xf430404c
#define NI_HV_GLB_XGE6_TX_QUANTA1_STRIDE 48
#define NI_HV_GLB_XGE6_TX_QUANTA1_COUNT 2
#define NI_HV_GLB_XGE6_TX_QUANTA1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta2 : 16; /* bits 15:0 */
		ca_uint32_t pause_quanta3 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_TX_QUANTA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_TX_QUANTA2 0xf4304050
#define NI_HV_GLB_XGE6_TX_QUANTA2_STRIDE 48
#define NI_HV_GLB_XGE6_TX_QUANTA2_COUNT 2
#define NI_HV_GLB_XGE6_TX_QUANTA2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta4 : 16; /* bits 15:0 */
		ca_uint32_t pause_quanta5 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_TX_QUANTA2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_TX_QUANTA3 0xf4304054
#define NI_HV_GLB_XGE6_TX_QUANTA3_STRIDE 48
#define NI_HV_GLB_XGE6_TX_QUANTA3_COUNT 2
#define NI_HV_GLB_XGE6_TX_QUANTA3_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta6 : 16; /* bits 15:0 */
		ca_uint32_t pause_quanta7 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_TX_QUANTA3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_QBB_WAIT_TIME 0xf4304058
#define NI_HV_GLB_XGE6_QBB_WAIT_TIME_STRIDE 48
#define NI_HV_GLB_XGE6_QBB_WAIT_TIME_COUNT 2
#define NI_HV_GLB_XGE6_QBB_WAIT_TIME_dft 0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wait_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_QBB_WAIT_TIME_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT 0xf430405c
#define NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_STRIDE 48
#define NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_COUNT 2
#define NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT 0xf4304060
#define NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_STRIDE 48
#define NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_COUNT 2
#define NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t err_paus_pkt_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT 0xf4304064
#define NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_STRIDE 48
#define NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_COUNT 2
#define NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1 0xf4304098
#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1_dft 0xe4e4e4e4

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_cal1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0 0xf430409c
#define NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0_dft 0xe4e4e4e4

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_cal0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_CTRL_CFG 0xf43040a0
#define NI_HV_GLB_RXMUX_CTRL_CFG_dft 0x100a09ba

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l3fe_pspid : 4; /* bits 3:0 */
		ca_uint32_t mce_pspid : 4; /* bits 7:4 */
		ca_uint32_t dma_pspid : 4; /* bits 11:8 */
		ca_uint32_t err_pkt_ok : 1; /* bits 12:12 */
		ca_uint32_t calendar_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t next_sop_delay : 12; /* bits 27:16 */
		ca_uint32_t dbg_sel : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_CTRL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_LAST_HDR_A2 0xf43040a4
#define NI_HV_GLB_RXMUX_LAST_HDR_A2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdra2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_LAST_HDR_A2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_LAST_HDR_A1 0xf43040a8
#define NI_HV_GLB_RXMUX_LAST_HDR_A1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdra1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_LAST_HDR_A1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_LAST_HDR_A0 0xf43040ac
#define NI_HV_GLB_RXMUX_LAST_HDR_A0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdra0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_LAST_HDR_A0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_PKTCNT 0xf43040b0
#define NI_HV_GLB_RXMUX_PKTCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_PKTCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG 0xf43040b4
#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_STRIDE 4
#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_COUNT 12
#define NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_dft 0x0000a014

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thre_lo : 10; /* bits 9:0 */
		ca_uint32_t thre_hi : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040e4
#define NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000fffc0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040e8
#define NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000eff80

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040ec
#define NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000dff40

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040f0
#define NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000cff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040f4
#define NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x000bfe00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040f8
#define NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0007fd80

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf43040fc
#define NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0005fd40

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf4304100
#define NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0004fd00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf4304104
#define NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0003fcc0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf4304108
#define NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0002fc80

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf430410c
#define NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0001fc40

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG 0xf4304110
#define NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG_dft 0x0000fc00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_ptr : 10; /* bits 9:0 */
		ca_uint32_t top_ptr : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE 0xf4304114
#define NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t load : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG 0xf4304118
#define NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0_vlan_tag_num : 2; /* bits 1:0 */
		ca_uint32_t p1_vlan_tag_num : 2; /* bits 3:2 */
		ca_uint32_t p2_vlan_tag_num : 2; /* bits 5:4 */
		ca_uint32_t p3_vlan_tag_num : 2; /* bits 7:6 */
		ca_uint32_t p4_vlan_tag_num : 2; /* bits 9:8 */
		ca_uint32_t p5_vlan_tag_num : 2; /* bits 11:10 */
		ca_uint32_t p6_vlan_tag_num : 2; /* bits 13:12 */
		ca_uint32_t p7_vlan_tag_num : 2; /* bits 15:14 */
		ca_uint32_t p8_vlan_tag_num : 2; /* bits 17:16 */
		ca_uint32_t p9_vlan_tag_num : 2; /* bits 19:18 */
		ca_uint32_t p10_vlan_tag_num : 2; /* bits 21:20 */
		ca_uint32_t p11_vlan_tag_num : 2; /* bits 23:22 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_HDR_BUF_STATUS 0xf430411c
#define NI_HV_GLB_RXMUX_HDR_BUF_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr_buf_empty : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_HDR_BUF_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_DATA_BUF_STATUS 0xf4304120
#define NI_HV_GLB_RXMUX_DATA_BUF_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t seg_buf_empty : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t seg_buf_full : 12; /* bits 27:16 */
		ca_uint32_t l2fe_ni_rdy : 1; /* bits 28:28 */
		ca_uint32_t rsrvd2 : 3;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_DATA_BUF_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_DBG_CFG 0xf4304124
#define NI_HV_GLB_RXMUX_DBG_CFG_dft 0x00000021

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0_sel : 4; /* bits 3:0 */
		ca_uint32_t cnt1_sel : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_DBG_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_OUT_CNT0 0xf4304128
#define NI_HV_GLB_RXMUX_OUT_CNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_OUT_CNT0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_OUT_CNT1 0xf430412c
#define NI_HV_GLB_RXMUX_OUT_CNT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_OUT_CNT1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_OUT_DRPCNT0 0xf4304130
#define NI_HV_GLB_RXMUX_OUT_DRPCNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_OUT_DRPCNT0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMUX_OUT_DRPCNT1 0xf4304134
#define NI_HV_GLB_RXMUX_OUT_DRPCNT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMUX_OUT_DRPCNT1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_XRAM_STS 0xf4304138
#define NI_HV_GLB_NIRX_XRAM_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sts : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_XRAM_STS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3QM_STS 0xf430413c
#define NI_HV_GLB_NIRX_L3QM_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sts : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3QM_STS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_STS 0xf4304140
#define NI_HV_GLB_NIRX_L3FE_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sts : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_STS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P0_RX_DROPCNT 0xf4304144
#define NI_HV_GLB_P0_RX_DROPCNT_STRIDE 4
#define NI_HV_GLB_P0_RX_DROPCNT_COUNT 8
#define NI_HV_GLB_P0_RX_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CNT : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P0_RX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG 0xf4304164
#define NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t max : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG 0xf4304168
#define NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0080

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t max : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG 0xf430416c
#define NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t max : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG 0xf4304170
#define NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0180

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t max : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG 0xf4304174
#define NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t max : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG 0xf4304178
#define NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG_dft 0x007f0280

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t max : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_DA_CFG0 0xf430417c
#define NI_HV_GLB_PG_DA_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_DA_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_DA_CFG1 0xf4304180
#define NI_HV_GLB_PG_DA_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_DA_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_SA_CFG0 0xf4304184
#define NI_HV_GLB_PG_SA_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_SA_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_SA_CFG1 0xf4304188
#define NI_HV_GLB_PG_SA_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mac_addr1 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_SA_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_CFG0 0xf430418c
#define NI_HV_GLB_PG_CFG0_dft 0x00648064

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pg_len : 11; /* bits 10:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t pg_len_data : 1; /* bits 15:15 */
		ca_uint32_t pg_frm_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_CFG1 0xf4304190
#define NI_HV_GLB_PG_CFG1_dft 0x81008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pg_vlan1_tpid : 16; /* bits 15:0 */
		ca_uint32_t pg_vlan2_tpid : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PG_FXPT_CFG 0xf4304194
#define NI_HV_GLB_PG_FXPT_CFG_dft 0xaaaa5555

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pg_fxpat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PG_FXPT_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_DA1 0xf4304198
#define NI_HV_GLB_PC_DA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_da4 : 8; /* bits 7:0 */
		ca_uint32_t pc_da3 : 8; /* bits 15:8 */
		ca_uint32_t pc_da2 : 8; /* bits 23:16 */
		ca_uint32_t pc_da1 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_DA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_DA2 0xf430419c
#define NI_HV_GLB_PC_DA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_da5 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_DA2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_SA1 0xf43041a0
#define NI_HV_GLB_PC_SA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_sa4 : 8; /* bits 7:0 */
		ca_uint32_t pc_sa3 : 8; /* bits 15:8 */
		ca_uint32_t pc_sa2 : 8; /* bits 23:16 */
		ca_uint32_t pc_sa1 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_SA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_SA2 0xf43041a4
#define NI_HV_GLB_PC_SA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_sa5 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_SA2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_CFG0 0xf43041a8
#define NI_HV_GLB_PC_CFG0_dft 0x00000064

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_len : 11; /* bits 10:0 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_CFG1 0xf43041ac
#define NI_HV_GLB_PC_CFG1_dft 0x81008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_vlan1_tpid : 16; /* bits 15:0 */
		ca_uint32_t pc_vlan2_tpid : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC_FXPT 0xf43041b0
#define NI_HV_GLB_PC_FXPT_dft 0xaaaa5555

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_fxpat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC_FXPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RM_CFG 0xf43041b4
#define NI_HV_GLB_RM_CFG_dft 0x2100000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rm_en : 1; /* bits 0:0 */
		ca_uint32_t rm_pid : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t rm_cntpkts : 1; /* bits 8:8 */
		ca_uint32_t rm_clrcnt : 1; /* bits 9:9 */
		ca_uint32_t rm_clrtb : 1; /* bits 10:10 */
		ca_uint32_t debug_mode : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 12;
		ca_uint32_t rm_tbinc : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RM_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RM_TBMAX 0xf43041b8
#define NI_HV_GLB_RM_TBMAX_dft 0x00ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rm_tbmax : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RM_TBMAX_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RM_CNTR 0xf43041bc
#define NI_HV_GLB_RM_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rm_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RM_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RM_LASTCNTR 0xf43041c0
#define NI_HV_GLB_RM_LASTCNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rm_lastcnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RM_LASTCNTR_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMIB_ACCESS 0xf43041c4
#define NI_HV_GLB_RXMIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t counter_id : 5; /* bits 4:0 */
		ca_uint32_t port_id : 3; /* bits 7:5 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t debug_mode : 1; /* bits 16:16 */
		ca_uint32_t rsrvd2 : 11;
		ca_uint32_t op_code : 2; /* bits 29:28 */
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define counter_id_RxUCPktCnt 0x0
#define counter_id_RxMCFrmCnt 0x1
#define counter_id_RxBCFrmCnt 0x2
#define counter_id_RxOAMFrmCnt 0x3
#define counter_id_RxJumboFrmCnt 0x4
#define counter_id_RxPauseFrmCnt 0x5
#define counter_id_RxPFCFrmCnt 0x6
#define counter_id_RxUnKnownOCFrmCnt 0x7
#define counter_id_RxCrcErrFrmCnt 0x8
#define counter_id_RxUndersizeFrmCnt 0x9
#define counter_id_RxRuntFrmCnt 0xa
#define counter_id_RxOvSizeFrmCnt 0xb
#define counter_id_RxJabberFrmCnt 0xc
#define counter_id_RxInvalidFrmCnt 0xd
#define counter_id_RxInvalidFlowFrmCnt 0xe
#define counter_id_RxStatsFrm64Oct 0xf
#define counter_id_RxStatsFrm65to127Oct 0x10
#define counter_id_RxStatsFrm128to255Oct 0x11
#define counter_id_RxStatsFrm256to511Oct 0x12
#define counter_id_RxStatsFrm512to1023Oct 0x13
#define counter_id_RxStatsFrm1024to1518Oct 0x14
#define counter_id_RxStatsFrm1519to2100Oct 0x15
#define counter_id_RxStatsFrm2101to9200Oct 0x16
#define counter_id_RxStatsFrm9201toMaxOct 0x17
#define counter_id_RxByteCount_Lo 0x18
#define counter_id_RxByteCount_Hi 0x19

#define NI_HV_GLB_RXMIB_DATA1 0xf43041c8
#define NI_HV_GLB_RXMIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_val_hi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXMIB_DATA0 0xf43041cc
#define NI_HV_GLB_RXMIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_val_lo : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXMIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXMIB_ACCESS 0xf43041d0
#define NI_HV_GLB_TXMIB_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t counter_id : 5; /* bits 4:0 */
		ca_uint32_t port_id : 3; /* bits 7:5 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t debug_mode : 1; /* bits 16:16 */
		ca_uint32_t rsrvd2 : 11;
		ca_uint32_t op_code : 2; /* bits 29:28 */
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXMIB_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define counter_id_TxUCPktCnt 0x0
#define counter_id_TxMCFrmCnt 0x1
#define counter_id_TxBCFrmCnt 0x2
#define counter_id_TxOAMFrmCnt 0x3
#define counter_id_TxJumboFrmCnt 0x4
#define counter_id_TxPauseFrmCnt 0x5
#define counter_id_TxPFCFrmCnt 0x6
#define counter_id_TxCrcErrFrmCnt 0x7
#define counter_id_TxOvSizeFrmCnt 0x8
#define counter_id_TxSingleColFrm 0x9
#define counter_id_TxMultiColFrm 0xa
#define counter_id_TxLateColFrm 0xb
#define counter_id_TxExessColFrm 0xd
#define counter_id_TxStatsFrm64Oct 0xe
#define counter_id_TxStatsFrm65to127Oct 0xf
#define counter_id_TxStatsFrm128to255Oct 0x10
#define counter_id_TxStatsFrm256to511Oct 0x11
#define counter_id_TxStatsFrm512to1023Oct 0x12
#define counter_id_TxStatsFrm1024to1518Oct 0x13
#define counter_id_TxStatsFrm1519to2100Oct 0x14
#define counter_id_TxStatsFrm2101to9200Oct 0x15
#define counter_id_TxStatsFrm9201toMaxOct 0x16
#define counter_id_TxByteCount_Lo 0x18
#define counter_id_TxByteCount_Hi 0x19

#define NI_HV_GLB_TXMIB_DATA1 0xf43041d4
#define NI_HV_GLB_TXMIB_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_val_hi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXMIB_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXMIB_DATA0 0xf43041d8
#define NI_HV_GLB_TXMIB_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_val_lo : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXMIB_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_INTERNAL_PORT_ID_CFG 0xf43041dc
#define NI_HV_GLB_INTERNAL_PORT_ID_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l3qmrx_demux_sel : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t wan_rxsel : 2; /* bits 23:22 */
		ca_uint32_t dma_to_l3fe : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_INTERNAL_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_INTERNAL_PORT_ID_CFG2 0xf43041e0
#define NI_HV_GLB_INTERNAL_PORT_ID_CFG2_dft 0x0024009b

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mce_lspid : 6; /* bits 5:0 */
		ca_uint32_t mce_dpq : 1; /* bits 6:6 */
		ca_uint32_t mce_fe_bypass : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t rx_cpu : 6; /* bits 23:18 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_INTERNAL_PORT_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_PORT_ID_CFG 0xf43041e4
#define NI_HV_GLB_RX_PORT_ID_CFG_dft 0x040c2040

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0_id : 6; /* bits 5:0 */
		ca_uint32_t port1_id : 6; /* bits 11:6 */
		ca_uint32_t port2_id : 6; /* bits 17:12 */
		ca_uint32_t port3_id : 6; /* bits 23:18 */
		ca_uint32_t port4_id : 6; /* bits 29:24 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RX_PORT_ID_CFG2 0xf43041e8
#define NI_HV_GLB_RX_PORT_ID_CFG2_dft 0x00007185

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port5_id : 6; /* bits 5:0 */
		ca_uint32_t port6_id : 6; /* bits 11:6 */
		ca_uint32_t port7_id : 6; /* bits 17:12 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RX_PORT_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3 0xf43041ec
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2 0xf43041f0
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1 0xf43041f4
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0 0xf43041f8
#define NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3 0xf43041fc
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2 0xf4304200
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1 0xf4304204
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0 0xf4304208
#define NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t demux_id0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_MISC_CFG 0xf430420c
#define NI_HV_GLB_NITX_MISC_CFG_dft 0x00078ffc

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xge6_hdrA_tx_en : 1; /* bits 0:0 */
		ca_uint32_t xge7_hdrA_tx_en : 1; /* bits 1:1 */
		ca_uint32_t xge6_tx_rd_thre_en : 1; /* bits 2:2 */
		ca_uint32_t xge7_tx_rd_thre_en : 1; /* bits 3:3 */
		ca_uint32_t xaui_tx_rd_thre_en : 1; /* bits 4:4 */
		ca_uint32_t l3qm_tx_rd_thre_en0 : 1; /* bits 5:5 */
		ca_uint32_t l3qm_tx_rd_thre_en1 : 1; /* bits 6:6 */
		ca_uint32_t l3qm_tx_rd_thre_en3 : 1; /* bits 7:7 */
		ca_uint32_t l3fe_tx_rd_thre_en0 : 1; /* bits 8:8 */
		ca_uint32_t l3fe_tx_rd_thre_en1 : 1; /* bits 9:9 */
		ca_uint32_t l3fe_tx_rd_thre_en2 : 1; /* bits 10:10 */
		ca_uint32_t l3fe_tx_rd_thre_en3 : 1; /* bits 11:11 */
		ca_uint32_t xge6_link_fault_halt_tx_en : 1; /* bits 12:12 */
		ca_uint32_t xge7_link_fault_halt_tx_en : 1; /* bits 13:13 */
		ca_uint32_t time_base_cnt : 6; /* bits 19:14 */
		ca_uint32_t xge6_tx_drain : 1; /* bits 20:20 */
		ca_uint32_t xge7_tx_drain : 1; /* bits 21:21 */
		ca_uint32_t xaui5_tx_drain : 1; /* bits 22:22 */
		ca_uint32_t rsrvd1 : 9;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_MISC_CFG 0xf4304210
#define NI_HV_GLB_NIRX_MISC_CFG_dft 0x00034000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l3fe_to_l2fe_deepq_csr0 : 1; /* bits 0:0 */
		ca_uint32_t l3fe_to_l2fe_deepq_csr1 : 1; /* bits 1:1 */
		ca_uint32_t l3fe_to_l2fe_deepq_csr2 : 1; /* bits 2:2 */
		ca_uint32_t l3fe_to_l3qm_l4cs_err_en : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t l2te_ni_mc_rdy_en : 1; /* bits 9:9 */
		ca_uint32_t l2te_ni_l3fewan_port_rdy_en : 1; /* bits 10:10 */
		ca_uint32_t l2te_ni_l3felan_port_rdy_en : 1; /* bits 11:11 */
		ca_uint32_t l2te_ni_txdma_l2fe_rdy_en : 1; /* bits 12:12 */
		ca_uint32_t l2te_ni_txdma_l3fe_rdy_en : 1; /* bits 13:13 */
		ca_uint32_t l2_wan_pfc_send_en : 1; /* bits 14:14 */
		ca_uint32_t l3_wan_pfc_send_en : 1; /* bits 15:15 */
		ca_uint32_t xge6_rx_errpkt_drp_en : 1; /* bits 16:16 */
		ca_uint32_t xge7_rx_errpkt_drp_en : 1; /* bits 17:17 */
		ca_uint32_t l3fe_to_wan_l4cs_err_en : 1; /* bits 18:18 */
		ca_uint32_t l3fe_to_l2fe_l4cs_err_en : 1; /* bits 19:19 */
		ca_uint32_t use_p0_as_wan_port_en : 1; /* bits 20:20 */
		ca_uint32_t rsrvd2 : 11;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TX_PORT_ID_CFG 0xf4304214
#define NI_HV_GLB_TX_PORT_ID_CFG_dft 0x76543210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0_id : 4; /* bits 3:0 */
		ca_uint32_t port1_id : 4; /* bits 7:4 */
		ca_uint32_t port2_id : 4; /* bits 11:8 */
		ca_uint32_t port3_id : 4; /* bits 15:12 */
		ca_uint32_t port4_id : 4; /* bits 19:16 */
		ca_uint32_t port5_id : 4; /* bits 23:20 */
		ca_uint32_t port6_id : 4; /* bits 27:24 */
		ca_uint32_t port7_id : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TX_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG 0xf4304218
#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG_dft 0x00cbda98

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l3qm_tx_dpid0 : 4; /* bits 3:0 */
		ca_uint32_t l3qm_tx_dpid1 : 4; /* bits 7:4 */
		ca_uint32_t l3fe_tx_dpid0 : 4; /* bits 11:8 */
		ca_uint32_t l3fe_tx_dpid1 : 4; /* bits 15:12 */
		ca_uint32_t mce_tx_dpid : 4; /* bits 19:16 */
		ca_uint32_t oam_tx_dpid : 4; /* bits 23:20 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2 0xf430421c
#define NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2_dft 0x7000da98

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l3qm_tx_spid0 : 4; /* bits 3:0 */
		ca_uint32_t l3qm_tx_spid1 : 4; /* bits 7:4 */
		ca_uint32_t l3fe_tx_spid0 : 4; /* bits 11:8 */
		ca_uint32_t l3fe_tx_spid1 : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t l3fe_tx_spid2 : 4; /* bits 27:24 */
		ca_uint32_t l3fe_tx_spid3 : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_CRCE_CNT 0xf4304220
#define NI_HV_GLB_NITX_CRCE_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crce_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_CRCE_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_P5_DRAINCNT 0xf4304224
#define NI_HV_GLB_NITX_P5_DRAINCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t drain_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_P5_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_P6_DRAINCNT 0xf4304228
#define NI_HV_GLB_NITX_P6_DRAINCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t drain_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_P6_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_P7_DRAINCNT 0xf430422c
#define NI_HV_GLB_NITX_P7_DRAINCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t drain_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_P7_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_OAMERR_CNT 0xf4304230
#define NI_HV_GLB_NITX_OAMERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t oame_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_OAMERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_READ_THRESHOLD 0xf4304234
#define NI_HV_GLB_TXFIFO_READ_THRESHOLD_dft 0x64503c28

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxaui_txfifo_lo : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxaui_txfifo_hi : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t xge6_txfifo_lo : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t xge6_txfifo_hi : 7; /* bits 30:24 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_READ_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1 0xf4304238
#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1_dft 0x780c7864

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t from_l3fe_txfifo_lo : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t from_l3fe_txfifo_hi : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t from_l3qm_txfifo_lo : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t from_l3qm_txfifo_hi : 7; /* bits 30:24 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2 0xf430423c
#define NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2_dft 0x78a3e8c8

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rd_thre_txfifo_lo : 9; /* bits 8:0 */
		ca_uint32_t rd_thre_txfifo_hi : 9; /* bits 17:9 */
		ca_uint32_t from_tm_txfifo_lo : 7; /* bits 24:18 */
		ca_uint32_t from_tm_txfifo_hi : 7; /* bits 31:25 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1 0xf4304240
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1_dft 0x51505150

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t from_tm9_txfifo_lo : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t from_tm9_txfifo_hi : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t from_tm8_txfifo_lo : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t from_tm8_txfifo_hi : 7; /* bits 30:24 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2 0xf4304244
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2_dft 0x00005150

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t from_l3fe_txfifo_lo : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t from_l3fe_txfifo_hi : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 17;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1 0xf4304248
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1_dft 0xaa6c6b6a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t from_wan_txfifo_lo : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t from_wan_txfifo_hi : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t from_tm_txfifo_lo : 8; /* bits 23:16 */
		ca_uint32_t from_tm_txfifo_hi : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2 0xf430424c
#define NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2_dft 0x0400f06e

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t from_dma_txfifo_lo : 8; /* bits 7:0 */
		ca_uint32_t from_dma_txfifo_hi : 8; /* bits 15:8 */
		ca_uint32_t tm2_shared_fifo_lo : 6; /* bits 21:16 */
		ca_uint32_t tm2_shared_fifo_hi : 6; /* bits 27:22 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG 0xf4304250
#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG_dft 0x3c280000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t oam_from_tm_txfifo_lo : 7; /* bits 22:16 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t oam_from_tm_txfifo_hi : 7; /* bits 30:24 */
		ca_uint32_t rsrvd3 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2 0xf4304254
#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2_dft 0x50285028

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txfifo_l3qm_path0_lo : 8; /* bits 7:0 */
		ca_uint32_t txfifo_l3qm_path0_hi : 8; /* bits 15:8 */
		ca_uint32_t txfifo_l3qm_path1_lo : 8; /* bits 23:16 */
		ca_uint32_t txfifo_l3qm_path1_hi : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3 0xf4304258
#define NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3_dft 0x00005028

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txfifo_l3qm_path2_lo : 8; /* bits 7:0 */
		ca_uint32_t txfifo_l3qm_path2_hi : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG 0xf430425c
#define NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG_dft 0x00019028

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mce_from_tm_txfifo_lo : 10; /* bits 9:0 */
		ca_uint32_t mce_from_tm_txfifo_hi : 10; /* bits 19:10 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG 0xf4304260
#define NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG_dft 0x780a780a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l3fe_rxfifo_lo : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t l3fe_rxfifo_hi : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t l3qm_rxfifo_lo : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t l3qm_rxfifo_hi : 7; /* bits 30:24 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG 0xf4304264
#define NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG_dft 0x0003c00a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thre_lo : 9; /* bits 8:0 */
		ca_uint32_t thre_hi : 9; /* bits 17:9 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG 0xf4304268
#define NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG_dft 0x00008080

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l2tm_fifo_thre : 8; /* bits 7:0 */
		ca_uint32_t wan_fifo_thre : 8; /* bits 15:8 */
		ca_uint32_t dis_fifo_thre : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PTP_TX_CFG 0xf430426c
#define NI_HV_GLB_PTP_TX_CFG_dft 0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0_ptp_tx_en : 1; /* bits 0:0 */
		ca_uint32_t p1_ptp_tx_en : 1; /* bits 1:1 */
		ca_uint32_t p2_ptp_tx_en : 1; /* bits 2:2 */
		ca_uint32_t p3_ptp_tx_en : 1; /* bits 3:3 */
		ca_uint32_t p4_ptp_tx_en : 1; /* bits 4:4 */
		ca_uint32_t p5_ptp_tx_en : 1; /* bits 5:5 */
		ca_uint32_t p6_ptp_tx_en : 1; /* bits 6:6 */
		ca_uint32_t p7_ptp_tx_en : 1; /* bits 7:7 */
		ca_uint32_t p0_ptp_tx_bypass : 1; /* bits 8:8 */
		ca_uint32_t p1_ptp_tx_bypass : 1; /* bits 9:9 */
		ca_uint32_t p2_ptp_tx_bypass : 1; /* bits 10:10 */
		ca_uint32_t p3_ptp_tx_bypass : 1; /* bits 11:11 */
		ca_uint32_t p4_ptp_tx_bypass : 1; /* bits 12:12 */
		ca_uint32_t p5_ptp_tx_bypass : 1; /* bits 13:13 */
		ca_uint32_t p6_ptp_tx_bypass : 1; /* bits 14:14 */
		ca_uint32_t p7_ptp_tx_bypass : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PTP_TX_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_01 0xf4304270
#define NI_HV_GLB_GE_PTP_ASYM_CFG_01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_01 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_01_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_00 0xf4304274
#define NI_HV_GLB_GE_PTP_ASYM_CFG_00_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_00 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_00_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_11 0xf4304278
#define NI_HV_GLB_GE_PTP_ASYM_CFG_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_11_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_10 0xf430427c
#define NI_HV_GLB_GE_PTP_ASYM_CFG_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_10_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_21 0xf4304280
#define NI_HV_GLB_GE_PTP_ASYM_CFG_21_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_21 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_21_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_20 0xf4304284
#define NI_HV_GLB_GE_PTP_ASYM_CFG_20_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_20 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_20_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_31 0xf4304288
#define NI_HV_GLB_GE_PTP_ASYM_CFG_31_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_31 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_31_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_GE_PTP_ASYM_CFG_30 0xf430428c
#define NI_HV_GLB_GE_PTP_ASYM_CFG_30_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_30 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_GE_PTP_ASYM_CFG_30_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_01 0xf4304290
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_01 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_01_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_00 0xf4304294
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_00_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_00 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_00_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_11 0xf4304298
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_11_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_10 0xf430429c
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_10_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_21 0xf43042a0
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_21_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_21 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_21_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_20 0xf43042a4
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_20_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_20 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_20_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_31 0xf43042a8
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_31_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_31 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_31_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_30 0xf43042ac
#define NI_HV_GLB_XAUI_PTP_ASYM_CFG_30_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_30 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XAUI_PTP_ASYM_CFG_30_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_01 0xf43042b0
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_01 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_01_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_00 0xf43042b4
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_00_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_00 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_00_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_11 0xf43042b8
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_11_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_10 0xf43042bc
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_10_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_21 0xf43042c0
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_21_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_21 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_21_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_20 0xf43042c4
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_20_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_20 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_20_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_31 0xf43042c8
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_31_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_31 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_31_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_XGE_PTP_ASYM_CFG_30 0xf43042cc
#define NI_HV_GLB_XGE_PTP_ASYM_CFG_30_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asym_cfg_30 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_XGE_PTP_ASYM_CFG_30_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP 0xf43042d0
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_STRIDE 4
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_COUNT 8
#define NI_HV_GLB_P0_PTP_TX_TIMESTAMP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_ts : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_P0_PTP_TX_TIMESTAMP_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NITX_STS 0xf43042f0
#define NI_HV_GLB_NITX_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sts : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NITX_STS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_SPARE 0xf43042f4
#define NI_HV_GLB_SPARE_dft 0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VALUE : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_SPARE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MISC_STS 0xf43042f8
#define NI_HV_GLB_MISC_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xge6_link_fault : 1; /* bits 0:0 */
		ca_uint32_t xge7_link_fault : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MISC_STS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_SPARESAMPLE 0xf43042fc
#define NI_HV_GLB_SPARESAMPLE_dft 0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VALUE : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_SPARESAMPLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PORT_0_INTERRUPT 0xf4304300
#define NI_HV_GLB_PORT_0_INTERRUPT_STRIDE 8
#define NI_HV_GLB_PORT_0_INTERRUPT_COUNT 5
#define NI_HV_GLB_PORT_0_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t link_stat_chgI : 1; /* bits 0:0 */
		ca_uint32_t txfifo_underrunI : 1; /* bits 1:1 */
		ca_uint32_t txfifo_overrunI : 1; /* bits 2:2 */
		ca_uint32_t rxcntrl_overrunI : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxmib_cntmsb_setI : 1; /* bits 5:5 */
		ca_uint32_t txmib_cntmsb_setI : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t lpi_assert_stat_chgI : 1; /* bits 9:9 */
		ca_uint32_t rx_lpi_stat_chgI : 1; /* bits 10:10 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t ni_wol_int : 1; /* bits 13:13 */
		ca_uint32_t rsrvd4 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PORT_0_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PORT_0_INTERRUPTE 0xf4304304
#define NI_HV_GLB_PORT_0_INTERRUPTE_STRIDE 8
#define NI_HV_GLB_PORT_0_INTERRUPTE_COUNT 5
#define NI_HV_GLB_PORT_0_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t link_stat_chgIE : 1; /* bits 0:0 */
		ca_uint32_t txfifo_underrunIE : 1; /* bits 1:1 */
		ca_uint32_t txfifo_overrunIE : 1; /* bits 2:2 */
		ca_uint32_t rxcntrl_overrunIE : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxmib_cntmsb_setIE : 1; /* bits 5:5 */
		ca_uint32_t txmib_cntmsb_setIE : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t lpi_assert_stat_chgIE : 1; /* bits 9:9 */
		ca_uint32_t rx_lpi_stat_chgIE : 1; /* bits 10:10 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t ni_wol_intE : 1; /* bits 13:13 */
		ca_uint32_t rsrvd4 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PORT_0_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PORT_5_INTERRUPT 0xf4304328
#define NI_HV_GLB_PORT_5_INTERRUPT_STRIDE 8
#define NI_HV_GLB_PORT_5_INTERRUPT_COUNT 3
#define NI_HV_GLB_PORT_5_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t rxcntrl_overrunI : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PORT_5_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PORT_5_INTERRUPTE 0xf430432c
#define NI_HV_GLB_PORT_5_INTERRUPTE_STRIDE 8
#define NI_HV_GLB_PORT_5_INTERRUPTE_COUNT 3
#define NI_HV_GLB_PORT_5_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t rxcntrl_overrunIE : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PORT_5_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PORT_8_INTERRUPT 0xf4304340
#define NI_HV_GLB_PORT_8_INTERRUPT_STRIDE 8
#define NI_HV_GLB_PORT_8_INTERRUPT_COUNT 4
#define NI_HV_GLB_PORT_8_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t rxcntrl_overrunI : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rxmib_cntmsb_setI : 1; /* bits 5:5 */
		ca_uint32_t txmib_cntmsb_setI : 1; /* bits 6:6 */
		ca_uint32_t rsrvd3 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PORT_8_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PORT_8_INTERRUPTE 0xf4304344
#define NI_HV_GLB_PORT_8_INTERRUPTE_STRIDE 8
#define NI_HV_GLB_PORT_8_INTERRUPTE_COUNT 4
#define NI_HV_GLB_PORT_8_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t rxcntrl_overrunIE : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rxmib_cntmsb_setIE : 1; /* bits 5:5 */
		ca_uint32_t txmib_cntmsb_setIE : 1; /* bits 6:6 */
		ca_uint32_t rsrvd3 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PORT_8_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIFIFO_INTERRUPT 0xf4304360
#define NI_HV_GLB_NIFIFO_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0_nitx_fifo_under_run_setI : 1; /* bits 0:0 */
		ca_uint32_t p0_nitx_fifo_over_run_setI : 1; /* bits 1:1 */
		ca_uint32_t p1_nitx_fifo_under_run_setI : 1; /* bits 2:2 */
		ca_uint32_t p1_nitx_fifo_over_run_setI : 1; /* bits 3:3 */
		ca_uint32_t p2_nitx_fifo_under_run_setI : 1; /* bits 4:4 */
		ca_uint32_t p2_nitx_fifo_over_run_setI : 1; /* bits 5:5 */
		ca_uint32_t p3_nitx_fifo_under_run_setI : 1; /* bits 6:6 */
		ca_uint32_t p3_nitx_fifo_over_run_setI : 1; /* bits 7:7 */
		ca_uint32_t p4_nitx_fifo_under_run_setI : 1; /* bits 8:8 */
		ca_uint32_t p4_nitx_fifo_over_run_setI : 1; /* bits 9:9 */
		ca_uint32_t p5_nitx_fifo_under_run_setI : 1; /* bits 10:10 */
		ca_uint32_t p5_nitx_fifo_over_run_setI : 1; /* bits 11:11 */
		ca_uint32_t p6_nitx_fifo_under_run_setI : 1; /* bits 12:12 */
		ca_uint32_t p6_nitx_fifo_over_run_setI : 1; /* bits 13:13 */
		ca_uint32_t p7_nitx_fifo_under_run_setI : 1; /* bits 14:14 */
		ca_uint32_t p7_nitx_fifo_over_run_setI : 1; /* bits 15:15 */
		ca_uint32_t p8_nitx_fifo_under_run_setI : 1; /* bits 16:16 */
		ca_uint32_t p8_nitx_fifo_over_run_setI : 1; /* bits 17:17 */
		ca_uint32_t p9_nitx_fifo_under_run_setI : 1; /* bits 18:18 */
		ca_uint32_t p9_nitx_fifo_over_run_setI : 1; /* bits 19:19 */
		ca_uint32_t p10_nitx_fifo_under_run_setI : 1; /* bits 20:20 */
		ca_uint32_t p10_nitx_fifo_over_run_setI : 1; /* bits 21:21 */
		ca_uint32_t p11_nitx_fifo_under_run_setI : 1; /* bits 22:22 */
		ca_uint32_t p11_nitx_fifo_over_run_setI : 1; /* bits 23:23 */
		ca_uint32_t p12_nitx_fifo_under_run_setI : 1; /* bits 24:24 */
		ca_uint32_t p12_nitx_fifo_over_run_setI : 1; /* bits 25:25 */
		ca_uint32_t p13_nitx_fifo_under_run_setI : 1; /* bits 26:26 */
		ca_uint32_t p13_nitx_fifo_over_run_setI : 1; /* bits 27:27 */
		ca_uint32_t l3qm_nirx_fifo_under_run_setI : 1; /* bits 28:28 */
		ca_uint32_t l3qm_nirx_fifo_over_run_setI : 1; /* bits 29:29 */
		ca_uint32_t l3fe_nirx_fifo_under_run_setI : 1; /* bits 30:30 */
		ca_uint32_t l3fe_nirx_fifo_over_run_setI : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIFIFO_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_NIFIFO_INTERRUPTE 0xf4304364
#define NI_HV_GLB_NIFIFO_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0_nitx_fifo_under_run_setIE : 1; /* bits 0:0 */
		ca_uint32_t p0_nitx_fifo_over_run_setIE : 1; /* bits 1:1 */
		ca_uint32_t p1_nitx_fifo_under_run_setIE : 1; /* bits 2:2 */
		ca_uint32_t p1_nitx_fifo_over_run_setIE : 1; /* bits 3:3 */
		ca_uint32_t p2_nitx_fifo_under_run_setIE : 1; /* bits 4:4 */
		ca_uint32_t p2_nitx_fifo_over_run_setIE : 1; /* bits 5:5 */
		ca_uint32_t p3_nitx_fifo_under_run_setIE : 1; /* bits 6:6 */
		ca_uint32_t p3_nitx_fifo_over_run_setIE : 1; /* bits 7:7 */
		ca_uint32_t p4_nitx_fifo_under_run_setIE : 1; /* bits 8:8 */
		ca_uint32_t p4_nitx_fifo_over_run_setIE : 1; /* bits 9:9 */
		ca_uint32_t p5_nitx_fifo_under_run_setIE : 1; /* bits 10:10 */
		ca_uint32_t p5_nitx_fifo_over_run_setIE : 1; /* bits 11:11 */
		ca_uint32_t p6_nitx_fifo_under_run_setIE : 1; /* bits 12:12 */
		ca_uint32_t p6_nitx_fifo_over_run_setIE : 1; /* bits 13:13 */
		ca_uint32_t p7_nitx_fifo_under_run_setIE : 1; /* bits 14:14 */
		ca_uint32_t p7_nitx_fifo_over_run_setIE : 1; /* bits 15:15 */
		ca_uint32_t p8_nitx_fifo_under_run_setIE : 1; /* bits 16:16 */
		ca_uint32_t p8_nitx_fifo_over_run_setIE : 1; /* bits 17:17 */
		ca_uint32_t p9_nitx_fifo_under_run_setIE : 1; /* bits 18:18 */
		ca_uint32_t p9_nitx_fifo_over_run_setIE : 1; /* bits 19:19 */
		ca_uint32_t p10_nitx_fifo_under_run_setIE : 1; /* bits 20:20 */
		ca_uint32_t p10_nitx_fifo_over_run_setIE : 1; /* bits 21:21 */
		ca_uint32_t p11_nitx_fifo_under_run_setIE : 1; /* bits 22:22 */
		ca_uint32_t p11_nitx_fifo_over_run_setIE : 1; /* bits 23:23 */
		ca_uint32_t p12_nitx_fifo_under_run_setIE : 1; /* bits 24:24 */
		ca_uint32_t p12_nitx_fifo_over_run_setIE : 1; /* bits 25:25 */
		ca_uint32_t p13_nitx_fifo_under_run_setIE : 1; /* bits 26:26 */
		ca_uint32_t p13_nitx_fifo_over_run_setIE : 1; /* bits 27:27 */
		ca_uint32_t l3qm_nirx_fifo_under_run_setIE : 1; /* bits 28:28 */
		ca_uint32_t l3qm_nirx_fifo_over_run_setIE : 1; /* bits 29:29 */
		ca_uint32_t l3fe_nirx_fifo_under_run_setIE : 1; /* bits 30:30 */
		ca_uint32_t l3fe_nirx_fifo_over_run_setIE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_NIFIFO_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MISC_INTERRUPT 0xf4304368
#define NI_HV_GLB_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xge6_link_faultI : 1; /* bits 0:0 */
		ca_uint32_t xge7_link_faultI : 1; /* bits 1:1 */
		ca_uint32_t l2tm_nitx_overrunI : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MISC_INTERRUPTE 0xf430436c
#define NI_HV_GLB_MISC_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xge6_link_faultIE : 1; /* bits 0:0 */
		ca_uint32_t xge7_link_faultIE : 1; /* bits 1:1 */
		ca_uint32_t l2tm_nitx_overrunIE : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MISC_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXEM_INTERRUPT 0xf4304370
#define NI_HV_GLB_TXEM_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txem_ififo_ovfI : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t txrm_cntovfI : 1; /* bits 2:2 */
		ca_uint32_t txmib_fifo_ovfI : 1; /* bits 3:3 */
		ca_uint32_t rxmib_fifo_ovfI : 1; /* bits 4:4 */
		ca_uint32_t txem_ptp_voqchg_errI : 1; /* bits 5:5 */
		ca_uint32_t txem_ptp_cachevoq_errI : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t txem_ptp_v6csum0_errI : 1; /* bits 9:9 */
		ca_uint32_t txrm_timerexpI : 1; /* bits 10:10 */
		ca_uint32_t nitx_crc_errI : 1; /* bits 11:11 */
		ca_uint32_t rsrvd3 : 20;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXEM_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_TXEM_INTERRUPTE 0xf4304374
#define NI_HV_GLB_TXEM_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txem_ififo_ovfIE : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t txrm_cntovfIE : 1; /* bits 2:2 */
		ca_uint32_t txmib_fifo_ovfIE : 1; /* bits 3:3 */
		ca_uint32_t rxmib_fifo_ovfIE : 1; /* bits 4:4 */
		ca_uint32_t txem_ptp_voqchg_errIE : 1; /* bits 5:5 */
		ca_uint32_t txem_ptp_cachevoq_errIE : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t txem_ptp_v6csum0_errIE : 1; /* bits 9:9 */
		ca_uint32_t txrm_timerexpIE : 1; /* bits 10:10 */
		ca_uint32_t nitx_crc_errIE : 1; /* bits 11:11 */
		ca_uint32_t rsrvd3 : 20;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_TXEM_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC0_INTERRUPT 0xf4304378
#define NI_HV_GLB_PC0_INTERRUPT_STRIDE 8
#define NI_HV_GLB_PC0_INTERRUPT_COUNT 5
#define NI_HV_GLB_PC0_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dchkoutofsyncI : 1; /* bits 0:0 */
		ca_uint32_t dstaddrmismatchI : 1; /* bits 1:1 */
		ca_uint32_t srcaddrmismatchI : 1; /* bits 2:2 */
		ca_uint32_t vlan1fieldmismatchI : 1; /* bits 3:3 */
		ca_uint32_t vlan2fieldmismatchI : 1; /* bits 4:4 */
		ca_uint32_t typefieldmismatchI : 1; /* bits 5:5 */
		ca_uint32_t seqnummismatchI : 1; /* bits 6:6 */
		ca_uint32_t datamismatchI : 1; /* bits 7:7 */
		ca_uint32_t framelenmismatchI : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC0_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PC0_INTERRUPTE 0xf430437c
#define NI_HV_GLB_PC0_INTERRUPTE_STRIDE 8
#define NI_HV_GLB_PC0_INTERRUPTE_COUNT 5
#define NI_HV_GLB_PC0_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dchkoutofsyncIE : 1; /* bits 0:0 */
		ca_uint32_t dstaddrmismatchIE : 1; /* bits 1:1 */
		ca_uint32_t srcaddrmismatchIE : 1; /* bits 2:2 */
		ca_uint32_t vlan1fieldmismatchIE : 1; /* bits 3:3 */
		ca_uint32_t vlan2fieldmismatchIE : 1; /* bits 4:4 */
		ca_uint32_t typefieldmismatchIE : 1; /* bits 5:5 */
		ca_uint32_t seqnummismatchIE : 1; /* bits 6:6 */
		ca_uint32_t datamismatchIE : 1; /* bits 7:7 */
		ca_uint32_t framelenmismatchIE : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PC0_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT 0xf43043a0
#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_drop_err_0_cntmsb_setI : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t pkt_to_xram_0_cntmsb_setI : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 9;
		ca_uint32_t byt_to_xram_0_cntmsb_setI : 1; /* bits 20:20 */
		ca_uint32_t rsrvd3 : 8;
		ca_uint32_t dma_pkt_to_cpu_cntmsb_setI : 1; /* bits 29:29 */
		ca_uint32_t dma_byte_to_cpu_cntmsb_setI : 1; /* bits 30:30 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE 0xf43043a4
#define NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_drop_err_0_cntmsb_setIE : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t pkt_to_xram_0_cntmsb_setIE : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 9;
		ca_uint32_t byt_to_xram_0_cntmsb_setIE : 1; /* bits 20:20 */
		ca_uint32_t rsrvd3 : 8;
		ca_uint32_t dma_pkt_to_cpu_cntmsb_setIE : 1; /* bits 29:29 */
		ca_uint32_t dma_byte_to_cpu_cntmsb_setIE : 1; /* bits 30:30 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPT 0xf43043a8
#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xram_rx_0_ptrbkupI : 1; /* bits 0:0 */
		ca_uint32_t xram_rx_no_hdrAI : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t xram_rx_mgmtfifo_overrunI : 1; /* bits 22:22 */
		ca_uint32_t dma_fifo_overrunI : 1; /* bits 23:23 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_ERR_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE 0xf43043ac
#define NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xram_rx_0_ptrbkupIE : 1; /* bits 0:0 */
		ca_uint32_t xram_rx_no_hdrAIE : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t xram_rx_mgmtfifo_overrunIE : 1; /* bits 22:22 */
		ca_uint32_t dma_fifo_overrunIE : 1; /* bits 23:23 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PTP_INTERRUPT 0xf43043b0
#define NI_HV_GLB_PTP_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0_tx_timestamp_rdy_intI : 1; /* bits 0:0 */
		ca_uint32_t port1_tx_timestamp_rdy_intI : 1; /* bits 1:1 */
		ca_uint32_t port2_tx_timestamp_rdy_intI : 1; /* bits 2:2 */
		ca_uint32_t port3_tx_timestamp_rdy_intI : 1; /* bits 3:3 */
		ca_uint32_t port4_tx_timestamp_rdy_intI : 1; /* bits 4:4 */
		ca_uint32_t port5_tx_timestamp_rdy_intI : 1; /* bits 5:5 */
		ca_uint32_t port6_tx_timestamp_rdy_intI : 1; /* bits 6:6 */
		ca_uint32_t port7_tx_timestamp_rdy_intI : 1; /* bits 7:7 */
		ca_uint32_t port0_tx_ptpfifo_overflow_intI : 1; /* bits 8:8 */
		ca_uint32_t port1_tx_ptpfifo_overflow_intI : 1; /* bits 9:9 */
		ca_uint32_t port2_tx_ptpfifo_overflow_intI : 1; /* bits 10:10 */
		ca_uint32_t port3_tx_ptpfifo_overflow_intI : 1; /* bits 11:11 */
		ca_uint32_t port4_tx_ptpfifo_overflow_intI : 1; /* bits 12:12 */
		ca_uint32_t port5_tx_ptpfifo_overflow_intI : 1; /* bits 13:13 */
		ca_uint32_t port6_tx_ptpfifo_overflow_intI : 1; /* bits 14:14 */
		ca_uint32_t port7_tx_ptpfifo_overflow_intI : 1; /* bits 15:15 */
		ca_uint32_t port0_tx_ptpfifo_underflow_intI : 1; /* bits 16:16 */
		ca_uint32_t port1_tx_ptpfifo_underflow_intI : 1; /* bits 17:17 */
		ca_uint32_t port2_tx_ptpfifo_underflow_intI : 1; /* bits 18:18 */
		ca_uint32_t port3_tx_ptpfifo_underflow_intI : 1; /* bits 19:19 */
		ca_uint32_t port4_tx_ptpfifo_underflow_intI : 1; /* bits 20:20 */
		ca_uint32_t port5_tx_ptpfifo_underflow_intI : 1; /* bits 21:21 */
		ca_uint32_t port6_tx_ptpfifo_underflow_intI : 1; /* bits 22:22 */
		ca_uint32_t port7_tx_ptpfifo_underflow_intI : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t timer_rollover_intI : 1; /* bits 29:29 */
		ca_uint32_t pps_event_intI : 1; /* bits 30:30 */
		ca_uint32_t pps_out_falledge_intI : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PTP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_PTP_INTERRUPTE 0xf43043b4
#define NI_HV_GLB_PTP_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0_tx_timestamp_rdy_intIE : 1; /* bits 0:0 */
		ca_uint32_t port1_tx_timestamp_rdy_intIE : 1; /* bits 1:1 */
		ca_uint32_t port2_tx_timestamp_rdy_intIE : 1; /* bits 2:2 */
		ca_uint32_t port3_tx_timestamp_rdy_intIE : 1; /* bits 3:3 */
		ca_uint32_t port4_tx_timestamp_rdy_intIE : 1; /* bits 4:4 */
		ca_uint32_t port5_tx_timestamp_rdy_intIE : 1; /* bits 5:5 */
		ca_uint32_t port6_tx_timestamp_rdy_intIE : 1; /* bits 6:6 */
		ca_uint32_t port7_tx_timestamp_rdy_intIE : 1; /* bits 7:7 */
		ca_uint32_t port0_tx_ptpfifo_overflow_intIE : 1; /* bits 8:8 */
		ca_uint32_t port1_tx_ptpfifo_overflow_intIE : 1; /* bits 9:9 */
		ca_uint32_t port2_tx_ptpfifo_overflow_intIE : 1; /* bits 10:10 */
		ca_uint32_t port3_tx_ptpfifo_overflow_intIE : 1; /* bits 11:11 */
		ca_uint32_t port4_tx_ptpfifo_overflow_intIE : 1; /* bits 12:12 */
		ca_uint32_t port5_tx_ptpfifo_overflow_intIE : 1; /* bits 13:13 */
		ca_uint32_t port6_tx_ptpfifo_overflow_intIE : 1; /* bits 14:14 */
		ca_uint32_t port7_tx_ptpfifo_overflow_intIE : 1; /* bits 15:15 */
		ca_uint32_t port0_tx_ptpfifo_underflow_intIE : 1; /* bits 16:16 */
		ca_uint32_t port1_tx_ptpfifo_underflow_intIE : 1; /* bits 17:17 */
		ca_uint32_t port2_tx_ptpfifo_underflow_intIE : 1; /* bits 18:18 */
		ca_uint32_t port3_tx_ptpfifo_underflow_intIE : 1; /* bits 19:19 */
		ca_uint32_t port4_tx_ptpfifo_underflow_intIE : 1; /* bits 20:20 */
		ca_uint32_t port5_tx_ptpfifo_underflow_intIE : 1; /* bits 21:21 */
		ca_uint32_t port6_tx_ptpfifo_underflow_intIE : 1; /* bits 22:22 */
		ca_uint32_t port7_tx_ptpfifo_underflow_intIE : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t timer_rollover_intIE : 1; /* bits 29:29 */
		ca_uint32_t pps_event_intIE : 1; /* bits 30:30 */
		ca_uint32_t pps_out_falledge_intIE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_PTP_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT 0xf43043b8
#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xram_rx_doneI : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE 0xf43043bc
#define NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xram_rx_doneIE : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT 0xf43043c0
#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xram_tx_0_doneI : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE 0xf43043c4
#define NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xram_tx_0_doneIE : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MC_INTERRUPT 0xf43043c8
#define NI_HV_GLB_MC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t mc_ff_full_drop_intI : 1; /* bits 1:1 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t bitmap_zero_drop_intI : 1; /* bits 3:3 */
		ca_uint32_t rsrvd3 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_MC_INTERRUPTE 0xf43043cc
#define NI_HV_GLB_MC_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t mc_ff_full_drop_intIE : 1; /* bits 1:1 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t bitmap_zero_drop_intIE : 1; /* bits 3:3 */
		ca_uint32_t rsrvd3 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_MC_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_INTERRUPT 0xf43043d0
#define NI_HV_GLB_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_stat_pspid_0 : 1; /* bits 0:0 */
		ca_uint32_t int_stat_pspid_1 : 1; /* bits 1:1 */
		ca_uint32_t int_stat_pspid_2 : 1; /* bits 2:2 */
		ca_uint32_t int_stat_pspid_3 : 1; /* bits 3:3 */
		ca_uint32_t int_stat_pspid_4 : 1; /* bits 4:4 */
		ca_uint32_t int_stat_pspid_5 : 1; /* bits 5:5 */
		ca_uint32_t int_stat_pspid_6 : 1; /* bits 6:6 */
		ca_uint32_t int_stat_pspid_7 : 1; /* bits 7:7 */
		ca_uint32_t int_stat_pspid_8 : 1; /* bits 8:8 */
		ca_uint32_t int_stat_pspid_9 : 1; /* bits 9:9 */
		ca_uint32_t int_stat_pspid_10 : 1; /* bits 10:10 */
		ca_uint32_t int_stat_pspid_11 : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t xge6_int : 1; /* bits 13:13 */
		ca_uint32_t xaui_int : 1; /* bits 14:14 */
		ca_uint32_t xge7_int : 1; /* bits 15:15 */
		ca_uint32_t int_stat_txem : 1; /* bits 16:16 */
		ca_uint32_t int_stat_pc0 : 1; /* bits 17:17 */
		ca_uint32_t int_stat_pc1 : 1; /* bits 18:18 */
		ca_uint32_t int_stat_pc2 : 1; /* bits 19:19 */
		ca_uint32_t int_stat_pc3 : 1; /* bits 20:20 */
		ca_uint32_t int_stat_pc4 : 1; /* bits 21:21 */
		ca_uint32_t sxgmii6_int : 1; /* bits 22:22 */
		ca_uint32_t sxgmii7_int : 1; /* bits 23:23 */
		ca_uint32_t misc : 1; /* bits 24:24 */
		ca_uint32_t cpuxram_int_stat_cntr : 1; /* bits 25:25 */
		ca_uint32_t cpuxram_int_stat_err : 1; /* bits 26:26 */
		ca_uint32_t int_stat_ptp : 1; /* bits 27:27 */
		ca_uint32_t int_stat_mceng : 1; /* bits 28:28 */
		ca_uint32_t cpuxram_rxpkt : 1; /* bits 29:29 */
		ca_uint32_t cpuxram_txpkt : 1; /* bits 30:30 */
		ca_uint32_t ni_fifo : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_INTERRUPTE 0xf43043d4
#define NI_HV_GLB_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_stat_pspid_0E : 1; /* bits 0:0 */
		ca_uint32_t int_stat_pspid_1E : 1; /* bits 1:1 */
		ca_uint32_t int_stat_pspid_2E : 1; /* bits 2:2 */
		ca_uint32_t int_stat_pspid_3E : 1; /* bits 3:3 */
		ca_uint32_t int_stat_pspid_4E : 1; /* bits 4:4 */
		ca_uint32_t int_stat_pspid_5E : 1; /* bits 5:5 */
		ca_uint32_t int_stat_pspid_6E : 1; /* bits 6:6 */
		ca_uint32_t int_stat_pspid_7E : 1; /* bits 7:7 */
		ca_uint32_t int_stat_pspid_8E : 1; /* bits 8:8 */
		ca_uint32_t int_stat_pspid_9E : 1; /* bits 9:9 */
		ca_uint32_t int_stat_pspid_10E : 1; /* bits 10:10 */
		ca_uint32_t int_stat_pspid_11E : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t xge6_intE : 1; /* bits 13:13 */
		ca_uint32_t xaui_intE : 1; /* bits 14:14 */
		ca_uint32_t xge7_intE : 1; /* bits 15:15 */
		ca_uint32_t int_stat_txemE : 1; /* bits 16:16 */
		ca_uint32_t int_stat_pc0E : 1; /* bits 17:17 */
		ca_uint32_t int_stat_pc1E : 1; /* bits 18:18 */
		ca_uint32_t int_stat_pc2E : 1; /* bits 19:19 */
		ca_uint32_t int_stat_pc3E : 1; /* bits 20:20 */
		ca_uint32_t int_stat_pc4E : 1; /* bits 21:21 */
		ca_uint32_t sxgmii6_intE : 1; /* bits 22:22 */
		ca_uint32_t sxgmii7_intE : 1; /* bits 23:23 */
		ca_uint32_t miscE : 1; /* bits 24:24 */
		ca_uint32_t cpuxram_int_stat_cntrE : 1; /* bits 25:25 */
		ca_uint32_t cpuxram_int_stat_errE : 1; /* bits 26:26 */
		ca_uint32_t int_stat_ptpE : 1; /* bits 27:27 */
		ca_uint32_t int_stat_mcengE : 1; /* bits 28:28 */
		ca_uint32_t cpuxram_rxpktE : 1; /* bits 29:29 */
		ca_uint32_t cpuxram_txpktE : 1; /* bits 30:30 */
		ca_uint32_t ni_fifoE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_ETH_TX_MISC_CFG 0xf43043d8
#define NI_HV_GLB_ETH_TX_MISC_CFG_dft 0x00002020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdy_low_thld_ge : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rdy_high_thld_ge : 9; /* bits 18:10 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rdy_low_thld_fe : 5; /* bits 24:20 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t rdy_high_thld_fe : 5; /* bits 31:27 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_ETH_TX_MISC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_DEBUG_2 0xf43043dc
#define NI_HV_GLB_DEBUG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg_ptp_hw_cnt : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ptp_hw_cnt_dbg : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_DEBUG_2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_GLB_DEBUG_3 0xf43043e0
#define NI_HV_GLB_DEBUG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_GLB_DEBUG_3_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_GLB_REVISION_t REVISION; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_GLB_INIT_DONE_t INIT_DONE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_GLB_INTF_RST_CONFIG_t INTF_RST_CONFIG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_GLB_STATIC_CFG_t STATIC_CFG; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_GLB_MAC_ADDR_CFG0_t MAC_ADDR_CFG0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_GLB_MAC_ADDR_CFG1_t MAC_ADDR_CFG1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_GLB_WOL_PASSWD_0_t WOL_PASSWD_0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_GLB_WOL_PASSWD_1_t WOL_PASSWD_1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_GLB_PKT_LEN_CFG_t PKT_LEN_CFG; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_GLB_PKT_STOR_LEN_CFG_t PKT_STOR_LEN_CFG; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_GLB_P5_BYPASS_CFG_t P5_BYPASS_CFG; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_GLB_XGE_BYPASS_CFG_t XGE_BYPASS_CFG; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_GLB_XGE6_RXPAUSE_CFG_t XGE6_RXPAUSE_CFG; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_GLB_XGE7_RXFIFO_THRESHOLD_t
	  XGE7_RXFIFO_THRESHOLD; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_GLB_XGE6_MAC_CFG1_t XGE6_MAC_CFG1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_GLB_XGE6_MAC_CFG0_t XGE6_MAC_CFG0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	NI_HV_GLB_XGE6_FLOW_CONTROL_CFG_t
	  XGE6_FLOW_CONTROL_CFG; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	NI_HV_GLB_XGE6_TX_REPEAT_CNT_t XGE6_TX_REPEAT_CNT; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	NI_HV_GLB_XGE6_TX_QUANTA0_t XGE6_TX_QUANTA0; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	NI_HV_GLB_XGE6_TX_QUANTA1_t XGE6_TX_QUANTA1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	NI_HV_GLB_XGE6_TX_QUANTA2_t XGE6_TX_QUANTA2; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	NI_HV_GLB_XGE6_TX_QUANTA3_t XGE6_TX_QUANTA3; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	NI_HV_GLB_XGE6_QBB_WAIT_TIME_t XGE6_QBB_WAIT_TIME; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	NI_HV_GLB_XGE6_RX_FLOW_CTRL_PKT_CNT_t
	  XGE6_RX_FLOW_CTRL_PKT_CNT; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	NI_HV_GLB_XGE6_RX_FAKE_PAUS_PKT_CNT_t
	  XGE6_RX_FAKE_PAUS_PKT_CNT; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	NI_HV_GLB_XGE6_TX_FLOW_CTRL_PKT_CNT_t
	  XGE6_TX_FLOW_CTRL_PKT_CNT; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[51];
	NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG1_t
	  RXMUX_INTPT_CALENDAR_CFG1; /* addr: 0x00000098 */
	ca_uint32_t rsrvd27[3];
	NI_HV_GLB_RXMUX_INTPT_CALENDAR_CFG0_t
	  RXMUX_INTPT_CALENDAR_CFG0; /* addr: 0x0000009c */
	ca_uint32_t rsrvd28[3];
	NI_HV_GLB_RXMUX_CTRL_CFG_t RXMUX_CTRL_CFG; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd29[3];
	NI_HV_GLB_RXMUX_LAST_HDR_A2_t RXMUX_LAST_HDR_A2; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd30[3];
	NI_HV_GLB_RXMUX_LAST_HDR_A1_t RXMUX_LAST_HDR_A1; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd31[3];
	NI_HV_GLB_RXMUX_LAST_HDR_A0_t RXMUX_LAST_HDR_A0; /* addr: 0x000000ac */
	ca_uint32_t rsrvd32[3];
	NI_HV_GLB_RXMUX_PKTCNT_t RXMUX_PKTCNT; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd33[3];
	NI_HV_GLB_RXMUX_PORT0_FC_THRESHOLD_CFG_t
	  RXMUX_PORT0_FC_THRESHOLD_CFG; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd34[47];
	NI_HV_GLB_RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P11_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd35[3];
	NI_HV_GLB_RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P10_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd36[3];
	NI_HV_GLB_RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P9_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000ec */
	ca_uint32_t rsrvd37[3];
	NI_HV_GLB_RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P8_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd38[3];
	NI_HV_GLB_RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P7_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd39[3];
	NI_HV_GLB_RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P6_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd40[3];
	NI_HV_GLB_RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P5_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x000000fc */
	ca_uint32_t rsrvd41[3];
	NI_HV_GLB_RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P4_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x00000100 */
	ca_uint32_t rsrvd42[3];
	NI_HV_GLB_RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P3_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x00000104 */
	ca_uint32_t rsrvd43[3];
	NI_HV_GLB_RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P2_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x00000108 */
	ca_uint32_t rsrvd44[3];
	NI_HV_GLB_RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P1_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x0000010c */
	ca_uint32_t rsrvd45[3];
	NI_HV_GLB_RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG_t
	  RX_P0_SEG_BUF_TOP_BOTTOM_ADDR_CFG; /* addr: 0x00000110 */
	ca_uint32_t rsrvd46[3];
	NI_HV_GLB_RX_SEG_BUFSIZE_UPDATE_t
	  RX_SEG_BUFSIZE_UPDATE; /* addr: 0x00000114 */
	ca_uint32_t rsrvd47[3];
	NI_HV_GLB_RX_SEG_VLAN_TAG_INSERT_CFG_t
	  RX_SEG_VLAN_TAG_INSERT_CFG; /* addr: 0x00000118 */
	ca_uint32_t rsrvd48[3];
	NI_HV_GLB_RXMUX_HDR_BUF_STATUS_t RXMUX_HDR_BUF_STATUS; /* addr: 0x0000011c */
	ca_uint32_t rsrvd49[3];
	NI_HV_GLB_RXMUX_DATA_BUF_STATUS_t
	  RXMUX_DATA_BUF_STATUS; /* addr: 0x00000120 */
	ca_uint32_t rsrvd50[3];
	NI_HV_GLB_RXMUX_DBG_CFG_t RXMUX_DBG_CFG; /* addr: 0x00000124 */
	ca_uint32_t rsrvd51[3];
	NI_HV_GLB_RXMUX_OUT_CNT0_t RXMUX_OUT_CNT0; /* addr: 0x00000128 */
	ca_uint32_t rsrvd52[3];
	NI_HV_GLB_RXMUX_OUT_CNT1_t RXMUX_OUT_CNT1; /* addr: 0x0000012c */
	ca_uint32_t rsrvd53[3];
	NI_HV_GLB_RXMUX_OUT_DRPCNT0_t RXMUX_OUT_DRPCNT0; /* addr: 0x00000130 */
	ca_uint32_t rsrvd54[3];
	NI_HV_GLB_RXMUX_OUT_DRPCNT1_t RXMUX_OUT_DRPCNT1; /* addr: 0x00000134 */
	ca_uint32_t rsrvd55[3];
	NI_HV_GLB_NIRX_XRAM_STS_t NIRX_XRAM_STS; /* addr: 0x00000138 */
	ca_uint32_t rsrvd56[3];
	NI_HV_GLB_NIRX_L3QM_STS_t NIRX_L3QM_STS; /* addr: 0x0000013c */
	ca_uint32_t rsrvd57[3];
	NI_HV_GLB_NIRX_L3FE_STS_t NIRX_L3FE_STS; /* addr: 0x00000140 */
	ca_uint32_t rsrvd58[3];
	NI_HV_GLB_P0_RX_DROPCNT_t P0_RX_DROPCNT; /* addr: 0x00000144 */
	ca_uint32_t rsrvd59[31];
	NI_HV_GLB_P0_TX_SHARE_FIFO_BASE_CFG_t
	  P0_TX_SHARE_FIFO_BASE_CFG; /* addr: 0x00000164 */
	ca_uint32_t rsrvd60[3];
	NI_HV_GLB_P1_TX_SHARE_FIFO_BASE_CFG_t
	  P1_TX_SHARE_FIFO_BASE_CFG; /* addr: 0x00000168 */
	ca_uint32_t rsrvd61[3];
	NI_HV_GLB_P2_TX_SHARE_FIFO_BASE_CFG_t
	  P2_TX_SHARE_FIFO_BASE_CFG; /* addr: 0x0000016c */
	ca_uint32_t rsrvd62[3];
	NI_HV_GLB_P3_TX_SHARE_FIFO_BASE_CFG_t
	  P3_TX_SHARE_FIFO_BASE_CFG; /* addr: 0x00000170 */
	ca_uint32_t rsrvd63[3];
	NI_HV_GLB_P4_TX_SHARE_FIFO_BASE_CFG_t
	  P4_TX_SHARE_FIFO_BASE_CFG; /* addr: 0x00000174 */
	ca_uint32_t rsrvd64[3];
	NI_HV_GLB_MCE_TX_SHARE_FIFO_BASE_CFG_t
	  MCE_TX_SHARE_FIFO_BASE_CFG; /* addr: 0x00000178 */
	ca_uint32_t rsrvd65[3];
	NI_HV_GLB_PG_DA_CFG0_t PG_DA_CFG0; /* addr: 0x0000017c */
	ca_uint32_t rsrvd66[3];
	NI_HV_GLB_PG_DA_CFG1_t PG_DA_CFG1; /* addr: 0x00000180 */
	ca_uint32_t rsrvd67[3];
	NI_HV_GLB_PG_SA_CFG0_t PG_SA_CFG0; /* addr: 0x00000184 */
	ca_uint32_t rsrvd68[3];
	NI_HV_GLB_PG_SA_CFG1_t PG_SA_CFG1; /* addr: 0x00000188 */
	ca_uint32_t rsrvd69[3];
	NI_HV_GLB_PG_CFG0_t PG_CFG0; /* addr: 0x0000018c */
	ca_uint32_t rsrvd70[3];
	NI_HV_GLB_PG_CFG1_t PG_CFG1; /* addr: 0x00000190 */
	ca_uint32_t rsrvd71[3];
	NI_HV_GLB_PG_FXPT_CFG_t PG_FXPT_CFG; /* addr: 0x00000194 */
	ca_uint32_t rsrvd72[3];
	NI_HV_GLB_PC_DA1_t PC_DA1; /* addr: 0x00000198 */
	ca_uint32_t rsrvd73[3];
	NI_HV_GLB_PC_DA2_t PC_DA2; /* addr: 0x0000019c */
	ca_uint32_t rsrvd74[3];
	NI_HV_GLB_PC_SA1_t PC_SA1; /* addr: 0x000001a0 */
	ca_uint32_t rsrvd75[3];
	NI_HV_GLB_PC_SA2_t PC_SA2; /* addr: 0x000001a4 */
	ca_uint32_t rsrvd76[3];
	NI_HV_GLB_PC_CFG0_t PC_CFG0; /* addr: 0x000001a8 */
	ca_uint32_t rsrvd77[3];
	NI_HV_GLB_PC_CFG1_t PC_CFG1; /* addr: 0x000001ac */
	ca_uint32_t rsrvd78[3];
	NI_HV_GLB_PC_FXPT_t PC_FXPT; /* addr: 0x000001b0 */
	ca_uint32_t rsrvd79[3];
	NI_HV_GLB_RM_CFG_t RM_CFG; /* addr: 0x000001b4 */
	ca_uint32_t rsrvd80[3];
	NI_HV_GLB_RM_TBMAX_t RM_TBMAX; /* addr: 0x000001b8 */
	ca_uint32_t rsrvd81[3];
	NI_HV_GLB_RM_CNTR_t RM_CNTR; /* addr: 0x000001bc */
	ca_uint32_t rsrvd82[3];
	NI_HV_GLB_RM_LASTCNTR_t RM_LASTCNTR; /* addr: 0x000001c0 */
	ca_uint32_t rsrvd83[3];
	NI_HV_GLB_RXMIB_ACCESS_t RXMIB_ACCESS; /* addr: 0x000001c4 */
	ca_uint32_t rsrvd84[3];
	NI_HV_GLB_RXMIB_DATA1_t RXMIB_DATA1; /* addr: 0x000001c8 */
	ca_uint32_t rsrvd85[3];
	NI_HV_GLB_RXMIB_DATA0_t RXMIB_DATA0; /* addr: 0x000001cc */
	ca_uint32_t rsrvd86[3];
	NI_HV_GLB_TXMIB_ACCESS_t TXMIB_ACCESS; /* addr: 0x000001d0 */
	ca_uint32_t rsrvd87[3];
	NI_HV_GLB_TXMIB_DATA1_t TXMIB_DATA1; /* addr: 0x000001d4 */
	ca_uint32_t rsrvd88[3];
	NI_HV_GLB_TXMIB_DATA0_t TXMIB_DATA0; /* addr: 0x000001d8 */
	ca_uint32_t rsrvd89[3];
	NI_HV_GLB_INTERNAL_PORT_ID_CFG_t INTERNAL_PORT_ID_CFG; /* addr: 0x000001dc */
	ca_uint32_t rsrvd90[3];
	NI_HV_GLB_INTERNAL_PORT_ID_CFG2_t
	  INTERNAL_PORT_ID_CFG2; /* addr: 0x000001e0 */
	ca_uint32_t rsrvd91[3];
	NI_HV_GLB_RX_PORT_ID_CFG_t RX_PORT_ID_CFG; /* addr: 0x000001e4 */
	ca_uint32_t rsrvd92[3];
	NI_HV_GLB_RX_PORT_ID_CFG2_t RX_PORT_ID_CFG2; /* addr: 0x000001e8 */
	ca_uint32_t rsrvd93[3];
	NI_HV_GLB_NIRX_L3FE_DEMUX_CFG3_t NIRX_L3FE_DEMUX_CFG3; /* addr: 0x000001ec */
	ca_uint32_t rsrvd94[3];
	NI_HV_GLB_NIRX_L3FE_DEMUX_CFG2_t NIRX_L3FE_DEMUX_CFG2; /* addr: 0x000001f0 */
	ca_uint32_t rsrvd95[3];
	NI_HV_GLB_NIRX_L3FE_DEMUX_CFG1_t NIRX_L3FE_DEMUX_CFG1; /* addr: 0x000001f4 */
	ca_uint32_t rsrvd96[3];
	NI_HV_GLB_NIRX_L3FE_DEMUX_CFG0_t NIRX_L3FE_DEMUX_CFG0; /* addr: 0x000001f8 */
	ca_uint32_t rsrvd97[3];
	NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG3_t
	  NIRX_L3FE_DPQ_DEMUX_CFG3; /* addr: 0x000001fc */
	ca_uint32_t rsrvd98[3];
	NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG2_t
	  NIRX_L3FE_DPQ_DEMUX_CFG2; /* addr: 0x00000200 */
	ca_uint32_t rsrvd99[3];
	NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG1_t
	  NIRX_L3FE_DPQ_DEMUX_CFG1; /* addr: 0x00000204 */
	ca_uint32_t rsrvd100[3];
	NI_HV_GLB_NIRX_L3FE_DPQ_DEMUX_CFG0_t
	  NIRX_L3FE_DPQ_DEMUX_CFG0; /* addr: 0x00000208 */
	ca_uint32_t rsrvd101[3];
	NI_HV_GLB_NITX_MISC_CFG_t NITX_MISC_CFG; /* addr: 0x0000020c */
	ca_uint32_t rsrvd102[3];
	NI_HV_GLB_NIRX_MISC_CFG_t NIRX_MISC_CFG; /* addr: 0x00000210 */
	ca_uint32_t rsrvd103[3];
	NI_HV_GLB_TX_PORT_ID_CFG_t TX_PORT_ID_CFG; /* addr: 0x00000214 */
	ca_uint32_t rsrvd104[3];
	NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG_t
	  TX_INTERNAL_PORT_ID_CFG; /* addr: 0x00000218 */
	ca_uint32_t rsrvd105[3];
	NI_HV_GLB_TX_INTERNAL_PORT_ID_CFG2_t
	  TX_INTERNAL_PORT_ID_CFG2; /* addr: 0x0000021c */
	ca_uint32_t rsrvd106[3];
	NI_HV_GLB_NITX_CRCE_CNT_t NITX_CRCE_CNT; /* addr: 0x00000220 */
	ca_uint32_t rsrvd107[3];
	NI_HV_GLB_NITX_P5_DRAINCNT_t NITX_P5_DRAINCNT; /* addr: 0x00000224 */
	ca_uint32_t rsrvd108[3];
	NI_HV_GLB_NITX_P6_DRAINCNT_t NITX_P6_DRAINCNT; /* addr: 0x00000228 */
	ca_uint32_t rsrvd109[3];
	NI_HV_GLB_NITX_P7_DRAINCNT_t NITX_P7_DRAINCNT; /* addr: 0x0000022c */
	ca_uint32_t rsrvd110[3];
	NI_HV_GLB_NITX_OAMERR_CNT_t NITX_OAMERR_CNT; /* addr: 0x00000230 */
	ca_uint32_t rsrvd111[3];
	NI_HV_GLB_TXFIFO_READ_THRESHOLD_t
	  TXFIFO_READ_THRESHOLD; /* addr: 0x00000234 */
	ca_uint32_t rsrvd112[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG1_t
	  TXFIFO_THRESHOLD_XGE7_CFG1; /* addr: 0x00000238 */
	ca_uint32_t rsrvd113[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_XGE7_CFG2_t
	  TXFIFO_THRESHOLD_XGE7_CFG2; /* addr: 0x0000023c */
	ca_uint32_t rsrvd114[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG1_t
	  TXFIFO_THRESHOLD_L3QM_CFG1; /* addr: 0x00000240 */
	ca_uint32_t rsrvd115[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_L3QM_CFG2_t
	  TXFIFO_THRESHOLD_L3QM_CFG2; /* addr: 0x00000244 */
	ca_uint32_t rsrvd116[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG1_t
	  TXFIFO_THRESHOLD_L3FE_CFG1; /* addr: 0x00000248 */
	ca_uint32_t rsrvd117[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_L3FE_CFG2_t
	  TXFIFO_THRESHOLD_L3FE_CFG2; /* addr: 0x0000024c */
	ca_uint32_t rsrvd118[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG_t
	  TXFIFO_THRESHOLD_MISC_CFG; /* addr: 0x00000250 */
	ca_uint32_t rsrvd119[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG2_t
	  TXFIFO_THRESHOLD_MISC_CFG2; /* addr: 0x00000254 */
	ca_uint32_t rsrvd120[3];
	NI_HV_GLB_TXFIFO_THRESHOLD_MISC_CFG3_t
	  TXFIFO_THRESHOLD_MISC_CFG3; /* addr: 0x00000258 */
	ca_uint32_t rsrvd121[3];
	NI_HV_GLB_TXFIFO_MCE_THRESHOLD_CFG_t
	  TXFIFO_MCE_THRESHOLD_CFG; /* addr: 0x0000025c */
	ca_uint32_t rsrvd122[3];
	NI_HV_GLB_RXFIFO_THRESHOLD_MISC_CFG_t
	  RXFIFO_THRESHOLD_MISC_CFG; /* addr: 0x00000260 */
	ca_uint32_t rsrvd123[3];
	NI_HV_GLB_RXFIFO_XGE6_THRESHOLD_CFG_t
	  RXFIFO_XGE6_THRESHOLD_CFG; /* addr: 0x00000264 */
	ca_uint32_t rsrvd124[3];
	NI_HV_GLB_NIRX_L3QM_THRESHOLD_CFG_t
	  NIRX_L3QM_THRESHOLD_CFG; /* addr: 0x00000268 */
	ca_uint32_t rsrvd125[3];
	NI_HV_GLB_PTP_TX_CFG_t PTP_TX_CFG; /* addr: 0x0000026c */
	ca_uint32_t rsrvd126[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_01_t GE_PTP_ASYM_CFG_01; /* addr: 0x00000270 */
	ca_uint32_t rsrvd127[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_00_t GE_PTP_ASYM_CFG_00; /* addr: 0x00000274 */
	ca_uint32_t rsrvd128[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_11_t GE_PTP_ASYM_CFG_11; /* addr: 0x00000278 */
	ca_uint32_t rsrvd129[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_10_t GE_PTP_ASYM_CFG_10; /* addr: 0x0000027c */
	ca_uint32_t rsrvd130[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_21_t GE_PTP_ASYM_CFG_21; /* addr: 0x00000280 */
	ca_uint32_t rsrvd131[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_20_t GE_PTP_ASYM_CFG_20; /* addr: 0x00000284 */
	ca_uint32_t rsrvd132[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_31_t GE_PTP_ASYM_CFG_31; /* addr: 0x00000288 */
	ca_uint32_t rsrvd133[3];
	NI_HV_GLB_GE_PTP_ASYM_CFG_30_t GE_PTP_ASYM_CFG_30; /* addr: 0x0000028c */
	ca_uint32_t rsrvd134[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_01_t XAUI_PTP_ASYM_CFG_01; /* addr: 0x00000290 */
	ca_uint32_t rsrvd135[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_00_t XAUI_PTP_ASYM_CFG_00; /* addr: 0x00000294 */
	ca_uint32_t rsrvd136[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_11_t XAUI_PTP_ASYM_CFG_11; /* addr: 0x00000298 */
	ca_uint32_t rsrvd137[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_10_t XAUI_PTP_ASYM_CFG_10; /* addr: 0x0000029c */
	ca_uint32_t rsrvd138[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_21_t XAUI_PTP_ASYM_CFG_21; /* addr: 0x000002a0 */
	ca_uint32_t rsrvd139[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_20_t XAUI_PTP_ASYM_CFG_20; /* addr: 0x000002a4 */
	ca_uint32_t rsrvd140[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_31_t XAUI_PTP_ASYM_CFG_31; /* addr: 0x000002a8 */
	ca_uint32_t rsrvd141[3];
	NI_HV_GLB_XAUI_PTP_ASYM_CFG_30_t XAUI_PTP_ASYM_CFG_30; /* addr: 0x000002ac */
	ca_uint32_t rsrvd142[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_01_t XGE_PTP_ASYM_CFG_01; /* addr: 0x000002b0 */
	ca_uint32_t rsrvd143[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_00_t XGE_PTP_ASYM_CFG_00; /* addr: 0x000002b4 */
	ca_uint32_t rsrvd144[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_11_t XGE_PTP_ASYM_CFG_11; /* addr: 0x000002b8 */
	ca_uint32_t rsrvd145[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_10_t XGE_PTP_ASYM_CFG_10; /* addr: 0x000002bc */
	ca_uint32_t rsrvd146[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_21_t XGE_PTP_ASYM_CFG_21; /* addr: 0x000002c0 */
	ca_uint32_t rsrvd147[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_20_t XGE_PTP_ASYM_CFG_20; /* addr: 0x000002c4 */
	ca_uint32_t rsrvd148[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_31_t XGE_PTP_ASYM_CFG_31; /* addr: 0x000002c8 */
	ca_uint32_t rsrvd149[3];
	NI_HV_GLB_XGE_PTP_ASYM_CFG_30_t XGE_PTP_ASYM_CFG_30; /* addr: 0x000002cc */
	ca_uint32_t rsrvd150[3];
	NI_HV_GLB_P0_PTP_TX_TIMESTAMP_t P0_PTP_TX_TIMESTAMP; /* addr: 0x000002d0 */
	ca_uint32_t rsrvd151[31];
	NI_HV_GLB_NITX_STS_t NITX_STS; /* addr: 0x000002f0 */
	ca_uint32_t rsrvd152[3];
	NI_HV_GLB_SPARE_t SPARE; /* addr: 0x000002f4 */
	ca_uint32_t rsrvd153[3];
	NI_HV_GLB_MISC_STS_t MISC_STS; /* addr: 0x000002f8 */
	ca_uint32_t rsrvd154[3];
	NI_HV_GLB_SPARESAMPLE_t SPARESAMPLE; /* addr: 0x000002fc */
	ca_uint32_t rsrvd155[3];
	NI_HV_GLB_PORT_0_INTERRUPT_t PORT_0_INTERRUPT; /* addr: 0x00000300 */
	ca_uint32_t rsrvd156[3];
	NI_HV_GLB_PORT_0_INTERRUPTE_t PORT_0_INTERRUPTE; /* addr: 0x00000304 */
	ca_uint32_t rsrvd157[35];
	NI_HV_GLB_PORT_5_INTERRUPT_t PORT_5_INTERRUPT; /* addr: 0x00000328 */
	ca_uint32_t rsrvd158[3];
	NI_HV_GLB_PORT_5_INTERRUPTE_t PORT_5_INTERRUPTE; /* addr: 0x0000032c */
	ca_uint32_t rsrvd159[19];
	NI_HV_GLB_PORT_8_INTERRUPT_t PORT_8_INTERRUPT; /* addr: 0x00000340 */
	ca_uint32_t rsrvd160[3];
	NI_HV_GLB_PORT_8_INTERRUPTE_t PORT_8_INTERRUPTE; /* addr: 0x00000344 */
	ca_uint32_t rsrvd161[27];
	NI_HV_GLB_NIFIFO_INTERRUPT_t NIFIFO_INTERRUPT; /* addr: 0x00000360 */
	ca_uint32_t rsrvd162[3];
	NI_HV_GLB_NIFIFO_INTERRUPTE_t NIFIFO_INTERRUPTE; /* addr: 0x00000364 */
	ca_uint32_t rsrvd163[3];
	NI_HV_GLB_MISC_INTERRUPT_t MISC_INTERRUPT; /* addr: 0x00000368 */
	ca_uint32_t rsrvd164[3];
	NI_HV_GLB_MISC_INTERRUPTE_t MISC_INTERRUPTE; /* addr: 0x0000036c */
	ca_uint32_t rsrvd165[3];
	NI_HV_GLB_TXEM_INTERRUPT_t TXEM_INTERRUPT; /* addr: 0x00000370 */
	ca_uint32_t rsrvd166[3];
	NI_HV_GLB_TXEM_INTERRUPTE_t TXEM_INTERRUPTE; /* addr: 0x00000374 */
	ca_uint32_t rsrvd167[3];
	NI_HV_GLB_PC0_INTERRUPT_t PC0_INTERRUPT; /* addr: 0x00000378 */
	ca_uint32_t rsrvd168[3];
	NI_HV_GLB_PC0_INTERRUPTE_t PC0_INTERRUPTE; /* addr: 0x0000037c */
	ca_uint32_t rsrvd169[35];
	NI_HV_GLB_CPUXRAM_CNTR_INTERRUPT_t
	  CPUXRAM_CNTR_INTERRUPT; /* addr: 0x000003a0 */
	ca_uint32_t rsrvd170[3];
	NI_HV_GLB_CPUXRAM_CNTR_INTERRUPTE_t
	  CPUXRAM_CNTR_INTERRUPTE; /* addr: 0x000003a4 */
	ca_uint32_t rsrvd171[3];
	NI_HV_GLB_CPUXRAM_ERR_INTERRUPT_t
	  CPUXRAM_ERR_INTERRUPT; /* addr: 0x000003a8 */
	ca_uint32_t rsrvd172[3];
	NI_HV_GLB_CPUXRAM_ERR_INTERRUPTE_t
	  CPUXRAM_ERR_INTERRUPTE; /* addr: 0x000003ac */
	ca_uint32_t rsrvd173[3];
	NI_HV_GLB_PTP_INTERRUPT_t PTP_INTERRUPT; /* addr: 0x000003b0 */
	ca_uint32_t rsrvd174[3];
	NI_HV_GLB_PTP_INTERRUPTE_t PTP_INTERRUPTE; /* addr: 0x000003b4 */
	ca_uint32_t rsrvd175[3];
	NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPT_t
	  CPUXRAM_RXPKT_INTERRUPT; /* addr: 0x000003b8 */
	ca_uint32_t rsrvd176[3];
	NI_HV_GLB_CPUXRAM_RXPKT_INTERRUPTE_t
	  CPUXRAM_RXPKT_INTERRUPTE; /* addr: 0x000003bc */
	ca_uint32_t rsrvd177[3];
	NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPT_t
	  CPUXRAM_TXPKT_INTERRUPT; /* addr: 0x000003c0 */
	ca_uint32_t rsrvd178[3];
	NI_HV_GLB_CPUXRAM_TXPKT_INTERRUPTE_t
	  CPUXRAM_TXPKT_INTERRUPTE; /* addr: 0x000003c4 */
	ca_uint32_t rsrvd179[3];
	NI_HV_GLB_MC_INTERRUPT_t MC_INTERRUPT; /* addr: 0x000003c8 */
	ca_uint32_t rsrvd180[3];
	NI_HV_GLB_MC_INTERRUPTE_t MC_INTERRUPTE; /* addr: 0x000003cc */
	ca_uint32_t rsrvd181[3];
	NI_HV_GLB_INTERRUPT_t INTERRUPT; /* addr: 0x000003d0 */
	ca_uint32_t rsrvd182[3];
	NI_HV_GLB_INTERRUPTE_t INTERRUPTE; /* addr: 0x000003d4 */
	ca_uint32_t rsrvd183[3];
	NI_HV_GLB_ETH_TX_MISC_CFG_t ETH_TX_MISC_CFG; /* addr: 0x000003d8 */
	ca_uint32_t rsrvd184[3];
	NI_HV_GLB_DEBUG_2_t DEBUG_2; /* addr: 0x000003dc */
	ca_uint32_t rsrvd185[3];
	NI_HV_GLB_DEBUG_3_t DEBUG_3; /* addr: 0x000003e0 */
} APB0_NI_HV_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * PT[0..4]
 */

#define NI_HV_PT_PORT_STATIC_CFG 0xf4304400
#define NI_HV_PT_PORT_STATIC_CFG_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_cfg : 4; /* bits 3:0 */
		ca_uint32_t phy_mode : 1; /* bits 4:4 */
		ca_uint32_t rmii_clksrc : 1; /* bits 5:5 */
		ca_uint32_t inv_clk_in : 1; /* bits 6:6 */
		ca_uint32_t inv_clk_out : 1; /* bits 7:7 */
		ca_uint32_t inv_rxclk_out : 1; /* bits 8:8 */
		ca_uint32_t tx_use_gefifo : 1; /* bits 9:9 */
		ca_uint32_t smii_tx_stat : 1; /* bits 10:10 */
		ca_uint32_t crs_polarity : 1; /* bits 11:11 */
		ca_uint32_t lpbk_mode : 2; /* bits 13:12 */
		ca_uint32_t gmii_like_half_duplex_en : 1; /* bits 14:14 */
		ca_uint32_t sup_tx_to_rx_lpbk_data : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t mac_addr6 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PORT_STATIC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define int_cfg_GMII_GE 0x0
#define int_cfg_MII 0x1
#define int_cfg_RGMII_GE 0x2
#define int_cfg_RGMII_FE 0x3

#define NI_HV_PT_PORT_GLB_CFG 0xf4304404
#define NI_HV_PT_PORT_GLB_CFG_dft 0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t speed : 1; /* bits 0:0 */
		ca_uint32_t duplex : 1; /* bits 1:1 */
		ca_uint32_t link_status : 1; /* bits 2:2 */
		ca_uint32_t link_stat_mask : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t power_dwn_rx : 1; /* bits 11:11 */
		ca_uint32_t power_dwn_tx : 1; /* bits 12:12 */
		ca_uint32_t tx_intf_lp_time : 1; /* bits 13:13 */
		ca_uint32_t rsrvd2 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PORT_GLB_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_RXMAC_CFG 0xf4304408
#define NI_HV_PT_RXMAC_CFG_dft 0x00000101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t rx_flow_disable : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t rx_flow_to_tx_en : 1; /* bits 12:12 */
		ca_uint32_t rx_pfc_disable : 1; /* bits 13:13 */
		ca_uint32_t rsrvd3 : 15;
		ca_uint32_t send_pg_data : 1; /* bits 29:29 */
		ca_uint32_t rsrvd4 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_RXMAC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_RXMAC_WOL_CFG 0xf430440c
#define NI_HV_PT_RXMAC_WOL_CFG_dft 0x00000f00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wol_pkt_det_en : 1; /* bits 0:0 */
		ca_uint32_t wol_chk_da : 2; /* bits 2:1 */
		ca_uint32_t wol_ign_err : 1; /* bits 3:3 */
		ca_uint32_t wol_secure_on : 1; /* bits 4:4 */
		ca_uint32_t wol_passwd_cnt : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t wol_mac_adr_cnt : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t wol_passwd6 : 8; /* bits 23:16 */
		ca_uint32_t rsrvd3 : 7;
		ca_uint32_t wol_wake_on_any_pkt : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_RXMAC_WOL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_MAC_STATUS 0xf4304410
#define NI_HV_PT_MAC_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rcv_speed : 2; /* bits 1:0 */
		ca_uint32_t rcv_duplex : 1; /* bits 2:2 */
		ca_uint32_t rcv_lnk_stat : 1; /* bits 3:3 */
		ca_uint32_t rx_lpi_detect : 1; /* bits 4:4 */
		ca_uint32_t lpi_assert : 1; /* bits 5:5 */
		ca_uint32_t lpi_mac_dis : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_MAC_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_TXMAC_CFG 0xf4304414
#define NI_HV_PT_TXMAC_CFG_dft 0x04019901

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t mac_crc_calc_en : 1; /* bits 8:8 */
		ca_uint32_t tx_ipg_sel : 3; /* bits 11:9 */
		ca_uint32_t tx_flow_disable : 1; /* bits 12:12 */
		ca_uint32_t tx_drain : 1; /* bits 13:13 */
		ca_uint32_t tx_pfc_disable : 1; /* bits 14:14 */
		ca_uint32_t tx_pau_sel : 2; /* bits 16:15 */
		ca_uint32_t rsrvd2 : 9;
		ca_uint32_t tx_auto_xon : 1; /* bits 26:26 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t pass_thru_hdr : 1; /* bits 28:28 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_TXMAC_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0 0xf4304418
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0_dft 0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txpfc_time_0 : 16; /* bits 15:0 */
		ca_uint32_t txpfc_time_1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1 0xf430441c
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1_dft 0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txpfc_time_2 : 16; /* bits 15:0 */
		ca_uint32_t txpfc_time_3 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2 0xf4304420
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2_dft 0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txpfc_time_4 : 16; /* bits 15:0 */
		ca_uint32_t txpfc_time_5 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3 0xf4304424
#define NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3_dft 0x00ff00ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txpfc_time_6 : 16; /* bits 15:0 */
		ca_uint32_t txpfc_time_7 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_EEE_LPI_CFG0 0xf4304428
#define NI_HV_PT_EEE_LPI_CFG0_dft 0x01387000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_eee_enable : 1; /* bits 0:0 */
		ca_uint32_t cpu_lpi_deassert : 1; /* bits 1:1 */
		ca_uint32_t stop_txclk_on_lpi : 1; /* bits 2:2 */
		ca_uint32_t lpi_data_mode : 1; /* bits 3:3 */
		ca_uint32_t lpi_mode_te : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t txfifo_empty_cnt : 20; /* bits 31:12 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_EEE_LPI_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_EEE_LPI_CFG1 0xf430442c
#define NI_HV_PT_EEE_LPI_CFG1_dft 0x0000071b

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lpi_min_assert_cnt : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_EEE_LPI_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_EEE_LPI_CFG2 0xf4304430
#define NI_HV_PT_EEE_LPI_CFG2_dft 0x000000a4

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lpi_min_wakeup_cnt : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_EEE_LPI_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_EEE_LPI_CFG3 0xf4304434
#define NI_HV_PT_EEE_LPI_CFG3_dft 0x0f000005

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lpi_mac_dis_wait_cnt : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stop_txclk_en_cnt : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_EEE_LPI_CFG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_RX_CNTRL_CFG 0xf4304438
#define NI_HV_PT_RX_CNTRL_CFG_dft 0x08000400

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t ff_overrun_drop_dis : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t crc_drop_dis : 1; /* bits 4:4 */
		ca_uint32_t ovr_drop_dis : 1; /* bits 5:5 */
		ca_uint32_t runt_drop_dis : 1; /* bits 6:6 */
		ca_uint32_t flow_drop_dis : 1; /* bits 7:7 */
		ca_uint32_t ukopcode_drop_dis : 1; /* bits 8:8 */
		ca_uint32_t oam_drop_dis : 1; /* bits 9:9 */
		ca_uint32_t linkstat_drop_dis : 1; /* bits 10:10 */
		ca_uint32_t pfc_drop_dis : 1; /* bits 11:11 */
		ca_uint32_t rsrvd3 : 4;
		ca_uint32_t rxctrl_byp_dpid : 6; /* bits 21:16 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t rxctrl_byp_cos : 3; /* bits 26:24 */
		ca_uint32_t rxctrl_byp_dpq : 1; /* bits 27:27 */
		ca_uint32_t rxctrl_byp_en : 1; /* bits 28:28 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t rxctrl_byp_mir : 1; /* bits 30:30 */
		ca_uint32_t rxctrl_byp_ndrp : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_RX_CNTRL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_TXFIFO_THLD_CFG 0xf430443c
#define NI_HV_PT_TXFIFO_THLD_CFG_dft 0x00280064

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t high_thld : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t low_thld : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_TXFIFO_THLD_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PG_CFG0 0xf4304440
#define NI_HV_PT_PG_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pg_da6 : 8; /* bits 7:0 */
		ca_uint32_t pg_sa6 : 8; /* bits 15:8 */
		ca_uint32_t pg_type : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PG_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PG_CFG1 0xf4304444
#define NI_HV_PT_PG_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pg_vlan1 : 16; /* bits 15:0 */
		ca_uint32_t pg_vlan2 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PG_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PG_CNTRL_CFG 0xf4304448
#define NI_HV_PT_PG_CNTRL_CFG_dft 0x08018000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pg_en : 1; /* bits 0:0 */
		ca_uint32_t pg_fixedcount : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t pg_fixedlen : 1; /* bits 4:4 */
		ca_uint32_t pg_insvlan2 : 1; /* bits 5:5 */
		ca_uint32_t pg_insvlan1 : 1; /* bits 6:6 */
		ca_uint32_t pg_instype : 1; /* bits 7:7 */
		ca_uint32_t pg_insseqnum : 1; /* bits 8:8 */
		ca_uint32_t pg_invpat : 1; /* bits 9:9 */
		ca_uint32_t pg_insfixpattern : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t pg_linerate : 9; /* bits 23:15 */
		ca_uint32_t pg_ipg : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PG_CNTRL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PC_CFG1 0xf430444c
#define NI_HV_PT_PC_CFG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_da6 : 8; /* bits 7:0 */
		ca_uint32_t pc_sa6 : 8; /* bits 15:8 */
		ca_uint32_t pc_type : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PC_CFG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PC_CFG2 0xf4304450
#define NI_HV_PT_PC_CFG2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_vlan1 : 16; /* bits 15:0 */
		ca_uint32_t pc_vlan2 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PC_CFG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PC_CNTRL 0xf4304454
#define NI_HV_PT_PC_CNTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t pc_fixedlen : 1; /* bits 4:4 */
		ca_uint32_t pc_expvlan2 : 1; /* bits 5:5 */
		ca_uint32_t pc_expvlan1 : 1; /* bits 6:6 */
		ca_uint32_t pc_exptype : 1; /* bits 7:7 */
		ca_uint32_t pc_expseqnum : 1; /* bits 8:8 */
		ca_uint32_t pc_invpat : 1; /* bits 9:9 */
		ca_uint32_t pc_expfixpattern : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 21;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PC_CNTRL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_PC_STAT 0xf4304458
#define NI_HV_PT_PC_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pc_dchkstatus : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_PC_STAT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_DEBUG_1 0xf430445c
#define NI_HV_PT_DEBUG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hd_backoff_cnt : 10; /* bits 9:0 */
		ca_uint32_t hd_backoff_dbg : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_DEBUG_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_TX_DRAINCNT 0xf4304460
#define NI_HV_PT_TX_DRAINCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CNT : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_TX_DRAINCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_SPARE 0xf4304464
#define NI_HV_PT_SPARE_dft 0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VALUE : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_SPARE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PT_SPARESAMPLE 0xf4304468
#define NI_HV_PT_SPARESAMPLE_dft 0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VALUE : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PT_SPARESAMPLE_t;
#endif /* !__ASSEMBLER__ */

#define APB0_NI_HV_PT_STRIDE 160
#define APB0_NI_HV_PT_COUNT 5

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PT */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_PT_PORT_STATIC_CFG_t PORT_STATIC_CFG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_PT_PORT_GLB_CFG_t PORT_GLB_CFG; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_PT_RXMAC_CFG_t RXMAC_CFG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_PT_RXMAC_WOL_CFG_t RXMAC_WOL_CFG; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_PT_MAC_STATUS_t MAC_STATUS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_PT_TXMAC_CFG_t TXMAC_CFG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG0_t
	  ETH_TXMAC_PAUSE_TIMER_CFG0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG1_t
	  ETH_TXMAC_PAUSE_TIMER_CFG1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG2_t
	  ETH_TXMAC_PAUSE_TIMER_CFG2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_PT_ETH_TXMAC_PAUSE_TIMER_CFG3_t
	  ETH_TXMAC_PAUSE_TIMER_CFG3; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_PT_EEE_LPI_CFG0_t EEE_LPI_CFG0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_PT_EEE_LPI_CFG1_t EEE_LPI_CFG1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_PT_EEE_LPI_CFG2_t EEE_LPI_CFG2; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_PT_EEE_LPI_CFG3_t EEE_LPI_CFG3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_PT_RX_CNTRL_CFG_t RX_CNTRL_CFG; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_PT_TXFIFO_THLD_CFG_t TXFIFO_THLD_CFG; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	NI_HV_PT_PG_CFG0_t PG_CFG0; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	NI_HV_PT_PG_CFG1_t PG_CFG1; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	NI_HV_PT_PG_CNTRL_CFG_t PG_CNTRL_CFG; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	NI_HV_PT_PC_CFG1_t PC_CFG1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	NI_HV_PT_PC_CFG2_t PC_CFG2; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	NI_HV_PT_PC_CNTRL_t PC_CNTRL; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	NI_HV_PT_PC_STAT_t PC_STAT; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	NI_HV_PT_DEBUG_1_t DEBUG_1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	NI_HV_PT_TX_DRAINCNT_t TX_DRAINCNT; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	NI_HV_PT_SPARE_t SPARE; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	NI_HV_PT_SPARESAMPLE_t SPARESAMPLE; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[55];
} APB0_NI_HV_PT_t;
#endif /* !__ASSEMBLER__ */

/*
 * INTPT[0..3]
 */

#define NI_HV_INTPT_RX_CNTRL_CFG 0xf4304720
#define NI_HV_INTPT_RX_CNTRL_CFG_dft 0x00028000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t rx_rate : 8; /* bits 21:14 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_RX_CNTRL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT 0xf4304724
#define NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_missing_eop_pkt_cnt : 16; /* bits 15:0 */
		ca_uint32_t rx_missing_sop_pkt_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_RX_SHORT_ERR_CNT 0xf4304728
#define NI_HV_INTPT_RX_SHORT_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_err_pkt_cnt : 16; /* bits 15:0 */
		ca_uint32_t rx_short_pkt_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_RX_SHORT_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_RX_PKT_CNT 0xf430472c
#define NI_HV_INTPT_RX_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_RX_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_RX_PKT_BYTE_HI_CNT 0xf4304730
#define NI_HV_INTPT_RX_PKT_BYTE_HI_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_RX_PKT_BYTE_HI_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_RX_PKT_BYTE_LO_CNT 0xf4304734
#define NI_HV_INTPT_RX_PKT_BYTE_LO_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_RX_PKT_BYTE_LO_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT 0xf4304738
#define NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_missing_eop_pkt_cnt : 16; /* bits 15:0 */
		ca_uint32_t tx_missing_sop_pkt_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_TX_SHORT_ERR_CNT 0xf430473c
#define NI_HV_INTPT_TX_SHORT_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_err_pkt_cnt : 16; /* bits 15:0 */
		ca_uint32_t tx_short_pkt_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_TX_SHORT_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_TX_PKT_CNT 0xf4304740
#define NI_HV_INTPT_TX_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_TX_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_TX_PKT_BYTE_HI_CNT 0xf4304744
#define NI_HV_INTPT_TX_PKT_BYTE_HI_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_TX_PKT_BYTE_HI_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_INTPT_TX_PKT_BYTE_LO_CNT 0xf4304748
#define NI_HV_INTPT_TX_PKT_BYTE_LO_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_pkt_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_INTPT_TX_PKT_BYTE_LO_CNT_t;
#endif /* !__ASSEMBLER__ */

#define APB0_NI_HV_INTPT_STRIDE 64
#define APB0_NI_HV_INTPT_COUNT 4

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* INTPT */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_INTPT_RX_CNTRL_CFG_t RX_CNTRL_CFG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_INTPT_RX_MISSING_SOP_EOP_CNT_t
	  RX_MISSING_SOP_EOP_CNT; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_INTPT_RX_SHORT_ERR_CNT_t RX_SHORT_ERR_CNT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_INTPT_RX_PKT_CNT_t RX_PKT_CNT; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_INTPT_RX_PKT_BYTE_HI_CNT_t RX_PKT_BYTE_HI_CNT; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_INTPT_RX_PKT_BYTE_LO_CNT_t RX_PKT_BYTE_LO_CNT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_INTPT_TX_MISSING_SOP_EOP_CNT_t
	  TX_MISSING_SOP_EOP_CNT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_INTPT_TX_SHORT_ERR_CNT_t TX_SHORT_ERR_CNT; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_INTPT_TX_PKT_CNT_t TX_PKT_CNT; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_INTPT_TX_PKT_BYTE_HI_CNT_t TX_PKT_BYTE_HI_CNT; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_INTPT_TX_PKT_BYTE_LO_CNT_t TX_PKT_BYTE_LO_CNT; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[23];
} APB0_NI_HV_INTPT_t;
#endif /* !__ASSEMBLER__ */

/*
 * XRAM
 */

#define NI_HV_XRAM_CPUXRAM_ADRCFG_RX 0xf4304820
#define NI_HV_XRAM_CPUXRAM_ADRCFG_RX_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t rx_top_addr : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_ADRCFG_RX_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0 0xf4304824
#define NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_base_addr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t tx_top_addr : 10; /* bits 25:16 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_CFG 0xf4304828
#define NI_HV_XRAM_CPUXRAM_CFG_dft 0x0000c001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_0_cpu_pkt_dis : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t tx_0_cpu_pkt_dis : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rx_x_drop_err_pkt : 1; /* bits 11:11 */
		ca_uint32_t xram_mgmt_dis_drop_ovsz_pkt : 1; /* bits 12:12 */
		ca_uint32_t xram_mgmt_term_large_pkt : 1; /* bits 13:13 */
		ca_uint32_t xram_mgmt_promisc_mode : 2; /* bits 15:14 */
		ca_uint32_t xram_cntr_debug_mode : 1; /* bits 16:16 */
		ca_uint32_t xram_cntr_op_code : 2; /* bits 18:17 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t xram_rx_mgmtfifo_srst : 1; /* bits 21:21 */
		ca_uint32_t xram_dma_fifo_srst : 1; /* bits 22:22 */
		ca_uint32_t rsrvd4 : 9;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0 0xf430482c
#define NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_rd_ptr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0 0xf4304830
#define NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_wr_ptr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t int_colsc_thresh_reached : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0 0xf4304834
#define NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_colsc_dly_time : 20; /* bits 19:0 */
		ca_uint32_t int_colsc_pkt : 10; /* bits 29:20 */
		ca_uint32_t int_colsc_first_en : 1; /* bits 30:30 */
		ca_uint32_t int_colsc_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_PKT_CNT_0 0xf4304838
#define NI_HV_XRAM_CPUXRAM_PKT_CNT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_to_xram : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_PKT_CNT_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_BYT_CNT_0 0xf430483c
#define NI_HV_XRAM_CPUXRAM_BYT_CNT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t byt_to_xram : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_BYT_CNT_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0 0xf4304840
#define NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_drop_err : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0 0xf4304844
#define NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_wr_ptr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0 0xf4304848
#define NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_rd_ptr : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_DMA_PKT_CNT 0xf430484c
#define NI_HV_XRAM_DMA_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_pkt_to_cpu : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_DMA_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XRAM_DMA_BYTE_CNT 0xf4304850
#define NI_HV_XRAM_DMA_BYTE_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_byte_to_cpu : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XRAM_DMA_BYTE_CNT_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XRAM */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XRAM_CPUXRAM_ADRCFG_RX_t CPUXRAM_ADRCFG_RX; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XRAM_CPUXRAM_ADRCFG_TX_0_t CPUXRAM_ADRCFG_TX_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XRAM_CPUXRAM_CFG_t CPUXRAM_CFG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XRAM_CPUXRAM_CPU_CFG_RX_0_t CPUXRAM_CPU_CFG_RX_0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XRAM_CPUXRAM_CPU_STA_RX_0_t CPUXRAM_CPU_STA_RX_0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XRAM_CPUXRAM_INT_COLSC_CFG_0_t
	  CPUXRAM_INT_COLSC_CFG_0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XRAM_CPUXRAM_PKT_CNT_0_t CPUXRAM_PKT_CNT_0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_XRAM_CPUXRAM_BYT_CNT_0_t CPUXRAM_BYT_CNT_0; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_XRAM_CPUXRAM_PKT_ERR_DRP_0_t
	  CPUXRAM_PKT_ERR_DRP_0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_XRAM_CPUXRAM_CPU_CFG_TX_0_t CPUXRAM_CPU_CFG_TX_0; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_XRAM_CPUXRAM_CPU_STAT_TX_0_t
	  CPUXRAM_CPU_STAT_TX_0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_XRAM_DMA_PKT_CNT_t DMA_PKT_CNT; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_XRAM_DMA_BYTE_CNT_t DMA_BYTE_CNT; /* addr: 0x00000030 */
} APB0_NI_HV_XRAM_t;
#endif /* !__ASSEMBLER__ */

/*
 * MCE
 */

#define NI_HV_MCE_CTL_REG 0xf4304860
#define NI_HV_MCE_CTL_REG_dft 0x0002f0ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ff_thrshd : 10; /* bits 9:0 */
		ca_uint32_t min_pktsize : 6; /* bits 15:10 */
		ca_uint32_t crc_err_drop_en : 1; /* bits 16:16 */
		ca_uint32_t cp_lspid_to_pol_id_en : 1; /* bits 17:17 */
		ca_uint32_t buf_flush_en : 1; /* bits 18:18 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_CTL_REG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_INDX_LKUP_ACCESS 0xf4304864
#define NI_HV_MCE_INDX_LKUP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 22;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_INDX_LKUP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_INDX_LKUP_DATA1 0xf4304868
#define NI_HV_MCE_INDX_LKUP_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mc_vec : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_INDX_LKUP_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_INDX_LKUP_DATA0 0xf430486c
#define NI_HV_MCE_INDX_LKUP_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mc_vec : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_INDX_LKUP_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_ZERO_BITMAP_DROP_CNT 0xf4304870
#define NI_HV_MCE_ZERO_BITMAP_DROP_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_ZERO_BITMAP_DROP_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_INGRESS_CNT 0xf4304874
#define NI_HV_MCE_INGRESS_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_INGRESS_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_EGRESS_CNT 0xf4304878
#define NI_HV_MCE_EGRESS_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_EGRESS_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_LAST_IN_HDR2 0xf430487c
#define NI_HV_MCE_LAST_IN_HDR2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_LAST_IN_HDR2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_LAST_IN_HDR1 0xf4304880
#define NI_HV_MCE_LAST_IN_HDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_LAST_IN_HDR1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_LAST_IN_HDR0 0xf4304884
#define NI_HV_MCE_LAST_IN_HDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_LAST_IN_HDR0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_LAST_OUT_HDR2 0xf4304888
#define NI_HV_MCE_LAST_OUT_HDR2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_LAST_OUT_HDR2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_LAST_OUT_HDR1 0xf430488c
#define NI_HV_MCE_LAST_OUT_HDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_LAST_OUT_HDR1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_LAST_OUT_HDR0 0xf4304890
#define NI_HV_MCE_LAST_OUT_HDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdr0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_LAST_OUT_HDR0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_ERROR_STS 0xf4304894
#define NI_HV_MCE_ERROR_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flag : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_ERROR_STS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_ERROR_STS1 0xf4304898
#define NI_HV_MCE_ERROR_STS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flag : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_ERROR_STS1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_MCE_ERROR_STS2 0xf430489c
#define NI_HV_MCE_ERROR_STS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flag : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_MCE_ERROR_STS2_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MCE */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_MCE_CTL_REG_t CTL_REG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_MCE_INDX_LKUP_ACCESS_t INDX_LKUP_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_MCE_INDX_LKUP_DATA1_t INDX_LKUP_DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_MCE_INDX_LKUP_DATA0_t INDX_LKUP_DATA0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_MCE_ZERO_BITMAP_DROP_CNT_t ZERO_BITMAP_DROP_CNT; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_MCE_INGRESS_CNT_t INGRESS_CNT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_MCE_EGRESS_CNT_t EGRESS_CNT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_MCE_LAST_IN_HDR2_t LAST_IN_HDR2; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_MCE_LAST_IN_HDR1_t LAST_IN_HDR1; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_MCE_LAST_IN_HDR0_t LAST_IN_HDR0; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_MCE_LAST_OUT_HDR2_t LAST_OUT_HDR2; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_MCE_LAST_OUT_HDR1_t LAST_OUT_HDR1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_MCE_LAST_OUT_HDR0_t LAST_OUT_HDR0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_MCE_ERROR_STS_t ERROR_STS; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_MCE_ERROR_STS1_t ERROR_STS1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_MCE_ERROR_STS2_t ERROR_STS2; /* addr: 0x0000003c */
} APB0_NI_HV_MCE_t;
#endif /* !__ASSEMBLER__ */

/*
 * PTP
 */

#define NI_HV_PTP_PPS_CFG_0 0xf43048a0
#define NI_HV_PTP_PPS_CFG_0_dft 0x60000039

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t pps_in_en : 1; /* bits 2:2 */
		ca_uint32_t pps_edge_sel_sample : 1; /* bits 3:3 */
		ca_uint32_t pps_edge_sel_load : 1; /* bits 4:4 */
		ca_uint32_t pps_load_en : 1; /* bits 5:5 */
		ca_uint32_t pps_out_en : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 9;
		ca_uint32_t pps_width : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_PPS_CFG_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_PPS_CFG_1 0xf43048a4
#define NI_HV_PTP_PPS_CFG_1_dft 0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_sum_val : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_PPS_CFG_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_PPS_CFG_2 0xf43048a8
#define NI_HV_PTP_PPS_CFG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pps_timestamp_load : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_PPS_CFG_2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_PPS_CFG_3 0xf43048ac
#define NI_HV_PTP_PPS_CFG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t s_pps : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_PPS_CFG_3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_PPS_CFG_4 0xf43048b0
#define NI_HV_PTP_PPS_CFG_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t s_tod : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_PPS_CFG_4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_PPS_CFG_5 0xf43048b4
#define NI_HV_PTP_PPS_CFG_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t load_matching_tmr : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t load_matching_tmr_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_PPS_CFG_5_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_TIMER_ON_PPS 0xf43048b8
#define NI_HV_PTP_TIMER_ON_PPS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pps_timestamp_sample : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_TIMER_ON_PPS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_PTP_TIMER 0xf43048bc
#define NI_HV_PTP_TIMER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_hw_ts : 30; /* bits 29:0 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} NI_HV_PTP_TIMER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PTP */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_PTP_PPS_CFG_0_t PPS_CFG_0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_PTP_PPS_CFG_1_t PPS_CFG_1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_PTP_PPS_CFG_2_t PPS_CFG_2; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_PTP_PPS_CFG_3_t PPS_CFG_3; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_PTP_PPS_CFG_4_t PPS_CFG_4; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_PTP_PPS_CFG_5_t PPS_CFG_5; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_PTP_TIMER_ON_PPS_t TIMER_ON_PPS; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_PTP_TIMER_t TIMER; /* addr: 0x0000001c */
} APB0_NI_HV_PTP_t;
#endif /* !__ASSEMBLER__ */

/*
 * XAUI
 */

/*
 * XGXS_TOP
 */

/*
 * xgxs_rx
 */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0 0xf43048e0
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_rx_mode : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t xgxs_rx_random_6 : 1; /* bits 3:3 */
		ca_uint32_t xgxs_rx_err_inj : 4; /* bits 7:4 */
		ca_uint32_t xgxs_fpat_sel : 8; /* bits 15:8 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0_t;
#endif /* !__ASSEMBLER__ */

#define xgxs_fpat_sel_Register 0x0
#define xgxs_fpat_sel_High 0x1
#define xgxs_fpat_sel_Low 0x2
#define xgxs_fpat_sel_Mixed 0x3
#define xgxs_rx_mode_Data 0x0
#define xgxs_rx_mode_Frequency 0x1
#define xgxs_rx_mode_Random 0x2
#define xgxs_rx_mode_Jitter 0x3

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1 0xf43048e4
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_0 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2 0xf43048e8
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_1 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3 0xf43048ec
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_2 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4 0xf43048f0
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_3 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5 0xf43048f4
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_rx_phase : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t xgxs_rx_fzero : 4; /* bits 11:8 */
		ca_uint32_t xgxs_rx_fone : 4; /* bits 15:12 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT 0xf43048f8
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ErrorPktSat : 1; /* bits 1:1 */
		ca_uint32_t GoodPktSat : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT 0xf43048fc
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ErrorPktI : 1; /* bits 0:0 */
		ca_uint32_t ErrorPktSatI : 1; /* bits 1:1 */
		ca_uint32_t GoodPktSatI : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE 0xf4304900
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ErrorPkte : 1; /* bits 0:0 */
		ca_uint32_t ErrorPktSate : 1; /* bits 1:1 */
		ca_uint32_t GoodPktSate : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt 0xf4304904
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t good_pkt_rx : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt 0xf4304908
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t err_pkt_rx : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH 0xf430490c
#define NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t scratch : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgxs_rx */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl0_t RxCntrl0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl1_t RxCntrl1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl2_t RxCntrl2; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl3_t RxCntrl3; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl4_t RxCntrl4; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RxCntrl5_t RxCntrl5; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTSTAT_t RX_INTSTAT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTERRUPT_t
	  RX_INTERRUPT; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_RX_INTENABLE_t
	  RX_INTENABLE; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_GoodPkt_t GoodPkt; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_ErrPkt_t ErrPkt; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_RX_SCRATCH_t SCRATCH; /* addr: 0x0000002c */
} APB0_NI_HV_XAUI_XGXS_TOP_XGXS_RX_t;
#endif /* !__ASSEMBLER__ */

/*
 * xgxs_tx
 */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0 0xf4304920
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_tx_mode : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t xgxs_lf_enable : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t xgxs_ddsa_enable : 1; /* bits 7:7 */
		ca_uint32_t xgxs_fpat_sel : 8; /* bits 15:8 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0_t;
#endif /* !__ASSEMBLER__ */

#define xgxs_tx_mode_Data 0x0
#define xgxs_tx_mode_Frequency 0x1
#define xgxs_tx_mode_Random 0x2
#define xgxs_tx_mode_Jitter 0x3

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1 0xf4304924
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_0 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2 0xf4304928
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_1 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3 0xf430492c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_2 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4 0xf4304930
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_fpat_3 : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5 0xf4304934
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5_dft 0x00000a00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxaui_cgalign_ena_mode : 2; /* bits 1:0 */
		ca_uint32_t rxaui_a_column_ena_mode : 2; /* bits 3:2 */
		ca_uint32_t rxaui_a_column_verify_mode : 1; /* bits 4:4 */
		ca_uint32_t rxaui_lane_swap_01 : 1; /* bits 5:5 */
		ca_uint32_t rxaui_lane_swap_23 : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxaui_comma_thresh : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT 0xf4304938
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t ErrorPktSat : 1; /* bits 1:1 */
		ca_uint32_t GoodPktSat : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t InvCodeSat : 1; /* bits 4:4 */
		ca_uint32_t xgxs_comma_found_0 : 1; /* bits 5:5 */
		ca_uint32_t PatErrSat : 1; /* bits 6:6 */
		ca_uint32_t xgxs_comma_found_1 : 1; /* bits 7:7 */
		ca_uint32_t SyncDet0 : 1; /* bits 8:8 */
		ca_uint32_t SyncDet1 : 1; /* bits 9:9 */
		ca_uint32_t SyncDet2 : 1; /* bits 10:10 */
		ca_uint32_t SyncDet3 : 1; /* bits 11:11 */
		ca_uint32_t xgxs_align_det : 1; /* bits 12:12 */
		ca_uint32_t xgxs_cpat_lock : 1; /* bits 13:13 */
		ca_uint32_t xgxs_A_column_found_0 : 1; /* bits 14:14 */
		ca_uint32_t xgxs_A_column_found_1 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT 0xf430493c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ErrorPktI : 1; /* bits 0:0 */
		ca_uint32_t ErrorPktSatI : 1; /* bits 1:1 */
		ca_uint32_t GoodPktSatI : 1; /* bits 2:2 */
		ca_uint32_t InvCodeI : 1; /* bits 3:3 */
		ca_uint32_t InvCodeSatI : 1; /* bits 4:4 */
		ca_uint32_t PatErrI : 1; /* bits 5:5 */
		ca_uint32_t PatErrSatI : 1; /* bits 6:6 */
		ca_uint32_t comma_foundI : 1; /* bits 7:7 */
		ca_uint32_t SyncDet0I : 1; /* bits 8:8 */
		ca_uint32_t SyncDet1I : 1; /* bits 9:9 */
		ca_uint32_t SyncDet2I : 1; /* bits 10:10 */
		ca_uint32_t SyncDet3I : 1; /* bits 11:11 */
		ca_uint32_t AlignDetI : 1; /* bits 12:12 */
		ca_uint32_t PatLockDetI : 1; /* bits 13:13 */
		ca_uint32_t A_column_found0I : 1; /* bits 14:14 */
		ca_uint32_t A_column_found1I : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE 0xf4304940
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ErrorPkte : 1; /* bits 0:0 */
		ca_uint32_t ErrorPktSate : 1; /* bits 1:1 */
		ca_uint32_t GoodPktSate : 1; /* bits 2:2 */
		ca_uint32_t InvCodee : 1; /* bits 3:3 */
		ca_uint32_t InvCodeSate : 1; /* bits 4:4 */
		ca_uint32_t PatErre : 1; /* bits 5:5 */
		ca_uint32_t PatErrSate : 1; /* bits 6:6 */
		ca_uint32_t CommaFounde : 1; /* bits 7:7 */
		ca_uint32_t SyncDet0e : 1; /* bits 8:8 */
		ca_uint32_t SyncDet1e : 1; /* bits 9:9 */
		ca_uint32_t SyncDet2e : 1; /* bits 10:10 */
		ca_uint32_t SyncDet3e : 1; /* bits 11:11 */
		ca_uint32_t AlignDete : 1; /* bits 12:12 */
		ca_uint32_t PatLockDete : 1; /* bits 13:13 */
		ca_uint32_t A_column_found0e : 1; /* bits 14:14 */
		ca_uint32_t A_column_found1e : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt 0xf4304944
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t good_pkt_tx : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt 0xf4304948
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t err_pkt_tx : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0 0xf430494c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_icc_0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1 0xf4304950
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_icc_1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2 0xf4304954
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_icc_2 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3 0xf4304958
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_icc_3 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0 0xf430495c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_pec_0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1 0xf4304960
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_pec_1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2 0xf4304964
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_pec_2 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3 0xf4304968
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xgxs_pec_3 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH 0xf430496c
#define NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t scratch : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xgxs_tx */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl0_t TxCntrl0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl1_t TxCntrl1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl2_t TxCntrl2; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl3_t TxCntrl3; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl4_t TxCntrl4; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TxCntrl5_t TxCntrl5; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTSTAT_t TX_INTSTAT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTERRUPT_t
	  TX_INTERRUPT; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_TX_INTENABLE_t
	  TX_INTENABLE; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_GoodPkt_t GoodPkt; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_ErrPkt_t ErrPkt; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC0_t ICC0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC1_t ICC1; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC2_t ICC2; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_ICC3_t ICC3; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC0_t PEC0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC1_t PEC1; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC2_t PEC2; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_PEC3_t PEC3; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	NI_HV_XAUI_XGXS_TOP_XGXS_TX_SCRATCH_t SCRATCH; /* addr: 0x0000004c */
} APB0_NI_HV_XAUI_XGXS_TOP_XGXS_TX_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGXS_TOP */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_XAUI_XGXS_TOP_XGXS_RX_t xgxs_rx; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[41];
	APB0_NI_HV_XAUI_XGXS_TOP_XGXS_TX_t xgxs_tx; /* addr: 0x00000040 */
} APB0_NI_HV_XAUI_XGXS_TOP_t;
#endif /* !__ASSEMBLER__ */

/*
 * xaui_mac
 */

/*
 * ctrl
 */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT 0xf4304980
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_ffoverrun_intI : 1; /* bits 0:0 */
		ca_uint32_t tc_espkterr_intI : 1; /* bits 1:1 */
		ca_uint32_t rxestore0_intI : 1; /* bits 2:2 */
		ca_uint32_t rxestore1_intI : 1; /* bits 3:3 */
		ca_uint32_t rxestore2_intI : 1; /* bits 4:4 */
		ca_uint32_t rxestore3_intI : 1; /* bits 5:5 */
		ca_uint32_t txestore0_intI : 1; /* bits 6:6 */
		ca_uint32_t txestore1_intI : 1; /* bits 7:7 */
		ca_uint32_t txestore2_intI : 1; /* bits 8:8 */
		ca_uint32_t txestore3_intI : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t rc_ptp_pkt_intI : 1; /* bits 16:16 */
		ca_uint32_t tc_ptp_pkt_intI : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t tc_ffoverrun_intI : 1; /* bits 24:24 */
		ca_uint32_t tx_asyncff_underrun_intI : 1; /* bits 25:25 */
		ca_uint32_t tx_asyncff_overrun_intI : 1; /* bits 26:26 */
		ca_uint32_t rsrvd3 : 5;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE 0xf4304984
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_ffoverrun_intIE : 1; /* bits 0:0 */
		ca_uint32_t tc_espkterr_intIE : 1; /* bits 1:1 */
		ca_uint32_t rxestore0_intIE : 1; /* bits 2:2 */
		ca_uint32_t rxestore1_intIE : 1; /* bits 3:3 */
		ca_uint32_t rxestore2_intIE : 1; /* bits 4:4 */
		ca_uint32_t rxestore3_intIE : 1; /* bits 5:5 */
		ca_uint32_t txestore0_intIE : 1; /* bits 6:6 */
		ca_uint32_t txestore1_intIE : 1; /* bits 7:7 */
		ca_uint32_t txestore2_intIE : 1; /* bits 8:8 */
		ca_uint32_t txestore3_intIE : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t rc_ptp_pkt_intIE : 1; /* bits 16:16 */
		ca_uint32_t tc_ptp_pkt_intIE : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t tc_ffoverrun_intIE : 1; /* bits 24:24 */
		ca_uint32_t tx_asyncff_underrun_intIE : 1; /* bits 25:25 */
		ca_uint32_t tx_asyncff_overrun_intIE : 1; /* bits 26:26 */
		ca_uint32_t rsrvd3 : 5;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG 0xf4304988
#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx2tx_lpbk_en : 1; /* bits 0:0 */
		ca_uint32_t tx2rx_lpbk_en : 1; /* bits 1:1 */
		ca_uint32_t rs_locfault_en : 1; /* bits 2:2 */
		ca_uint32_t rs_rmtfault_en : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL 0xf430498c
#define NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL_dft 0xe4e40000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flip_sds_xgxs_rx_en : 1; /* bits 0:0 */
		ca_uint32_t flip_sds_xgxs_tx_en : 1; /* bits 1:1 */
		ca_uint32_t pcs_line_swap_txd_en : 1; /* bits 2:2 */
		ca_uint32_t pcs_line_swap_rxd_en : 1; /* bits 3:3 */
		ca_uint32_t rx_invert_ctl : 1; /* bits 4:4 */
		ca_uint32_t tx_invert_ctl : 1; /* bits 5:5 */
		ca_uint32_t rx_data_resync0 : 1; /* bits 6:6 */
		ca_uint32_t rx_data_resync1 : 1; /* bits 7:7 */
		ca_uint32_t rx_data_resync2 : 1; /* bits 8:8 */
		ca_uint32_t rx_data_resync3 : 1; /* bits 9:9 */
		ca_uint32_t tx_data_resync0 : 1; /* bits 10:10 */
		ca_uint32_t tx_data_resync1 : 1; /* bits 11:11 */
		ca_uint32_t tx_data_resync2 : 1; /* bits 12:12 */
		ca_uint32_t tx_data_resync3 : 1; /* bits 13:13 */
		ca_uint32_t tx_scramble : 1; /* bits 14:14 */
		ca_uint32_t rx_scramble : 1; /* bits 15:15 */
		ca_uint32_t rxswap0 : 2; /* bits 17:16 */
		ca_uint32_t rxswap1 : 2; /* bits 19:18 */
		ca_uint32_t rxswap2 : 2; /* bits 21:20 */
		ca_uint32_t rxswap3 : 2; /* bits 23:22 */
		ca_uint32_t txswap0 : 2; /* bits 25:24 */
		ca_uint32_t txswap1 : 2; /* bits 27:26 */
		ca_uint32_t txswap2 : 2; /* bits 29:28 */
		ca_uint32_t txswap3 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H 0xf4304990
#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L 0xf4304994
#define NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE 0xf4304998
#define NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE_dft 0x40003601

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ctrl_mode_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t flush_pkt_en : 5; /* bits 8:4 */
		ca_uint32_t flush_pkt_en1 : 1; /* bits 9:9 */
		ca_uint32_t flush_pkt_sdid : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t pkt_tocsport_en : 1; /* bits 12:12 */
		ca_uint32_t pkt_toupport_en : 1; /* bits 13:13 */
		ca_uint32_t pkt_tocsport_toup : 1; /* bits 14:14 */
		ca_uint32_t pkt_toupport_tocs : 1; /* bits 15:15 */
		ca_uint32_t flush_touplink_pkt : 1; /* bits 16:16 */
		ca_uint32_t rsrvd3 : 13;
		ca_uint32_t mask_nop_en : 1; /* bits 30:30 */
		ca_uint32_t mask_ddbm_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL 0xf430499c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL_dft 0x0007b800

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clr_rcffoverrun : 1; /* bits 0:0 */
		ca_uint32_t drop_ptp_pkt_type : 10; /* bits 10:1 */
		ca_uint32_t qbb_pause_drop_en : 1; /* bits 11:11 */
		ca_uint32_t frame_error_drop_en : 1; /* bits 12:12 */
		ca_uint32_t frame_fcs_error_drop_en : 1; /* bits 13:13 */
		ca_uint32_t frame_bytecnt_drop_en : 1; /* bits 14:14 */
		ca_uint32_t frame_pause_drop_en : 1; /* bits 15:15 */
		ca_uint32_t frame_runt_drop_en : 1; /* bits 16:16 */
		ca_uint32_t frame_oversize_drop_en : 1; /* bits 17:17 */
		ca_uint32_t frame_ffoverflow_drop_en : 1; /* bits 18:18 */
		ca_uint32_t frame_management_drop_en : 1; /* bits 19:19 */
		ca_uint32_t frame_nomanagement_drop_en : 1; /* bits 20:20 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t qbb_pause_det_en : 1; /* bits 23:23 */
		ca_uint32_t bypass : 1; /* bits 24:24 */
		ca_uint32_t ptp_ing_ts_cmp : 5; /* bits 29:25 */
		ca_uint32_t rx_pkt_clr : 1; /* bits 30:30 */
		ca_uint32_t ptp_da_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI 0xf43049a0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI_dft 0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_da : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO 0xf43049a4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO_dft 0xc2000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_da : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0 0xf43049a8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0_dft 0x00008809

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type0_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1 0xf43049ac
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1_dft 0x00008808

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type1_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2 0xf43049b0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2_dft 0x00008863

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type2 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type2_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3 0xf43049b4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3_dft 0x00008864

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type3 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type3_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4 0xf43049b8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4_dft 0x0000888e

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type4 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type4_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5 0xf43049bc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5_dft 0x00000806

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type5 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type5_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6 0xf43049c0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6_dft 0x0000814c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type6 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type6_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7 0xf43049c4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t management_type7 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t det_type7_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL 0xf43049c8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL_dft 0x000001ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xon_threshold : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL 0xf43049cc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL_dft 0x000002ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xoff_threshold : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL 0xf43049d0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL_dft 0x00ff0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pau_flow_en : 1; /* bits 0:0 */
		ca_uint32_t tx_remheader_dis : 1; /* bits 1:1 */
		ca_uint32_t tx_pkt_clr : 1; /* bits 2:2 */
		ca_uint32_t tx_pad_en : 1; /* bits 3:3 */
		ca_uint32_t loopback : 1; /* bits 4:4 */
		ca_uint32_t ptp_eg_ts_comp : 5; /* bits 9:5 */
		ca_uint32_t external_pausereq_pol : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t qbb_flow_en : 1; /* bits 15:15 */
		ca_uint32_t qbb_qen : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t external_txstop_sel : 1; /* bits 27:27 */
		ca_uint32_t internal_txstop_sel : 1; /* bits 28:28 */
		ca_uint32_t external_pausereq_sel : 1; /* bits 29:29 */
		ca_uint32_t rx_pausereq_sel : 1; /* bits 30:30 */
		ca_uint32_t te_pfcreq_sel : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA 0xf43049d4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA_dft 0x7f0dffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t adjust_qbb_cnt : 8; /* bits 23:16 */
		ca_uint32_t adjust_1g_qbb_cnt : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1 0xf43049d8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2 0xf43049dc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3 0xf43049e0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4 0xf43049e4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5 0xf43049e8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6 0xf43049ec
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7 0xf43049f0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pause_quanta : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD 0xf43049f4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD_dft 0x803f01fa

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txff_wrff_threshold : 6; /* bits 5:0 */
		ca_uint32_t txff_rdff_threshold : 6; /* bits 11:6 */
		ca_uint32_t txctl_wrff_threshold : 9; /* bits 20:12 */
		ca_uint32_t rd_thre_en : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t txctl_rdff_threshold : 9; /* bits 31:23 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0 0xf43049f8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rcdrop_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1 0xf43049fc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rcff_pktnum : 11; /* bits 10:0 */
		ca_uint32_t rs_locfault : 1; /* bits 11:11 */
		ca_uint32_t rs_rmtfault : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2 0xf4304a00
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_torxmux_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3 0xf4304a04
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_tocstxmux_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4 0xf4304a08
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_touptxmux_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5 0xf4304a0c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_tocstxmux_errcnt : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6 0xf4304a10
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_cs_flushcnt : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0 0xf4304a14
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tcdrop_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1 0xf4304a18
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tcff_pktnum : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3 0xf4304a1c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t length_mismatch : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4 0xf4304a20
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t es_runt_pkt : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS 0xf4304a24
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_ffempty : 1; /* bits 0:0 */
		ca_uint32_t tx_fffull : 1; /* bits 1:1 */
		ca_uint32_t rx_ffempty : 1; /* bits 2:2 */
		ca_uint32_t rx_fffull : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL 0xf4304a28
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL_dft 0x00ffd200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cascade_bp_en : 1; /* bits 0:0 */
		ca_uint32_t external_stoptx_en : 1; /* bits 1:1 */
		ca_uint32_t external_pausereq_en : 1; /* bits 2:2 */
		ca_uint32_t external_pausereq_pol : 1; /* bits 3:3 */
		ca_uint32_t cascade_ff_threshold : 10; /* bits 13:4 */
		ca_uint32_t external_pausereq_oen_sel : 1; /* bits 14:14 */
		ca_uint32_t external_pausereq_oen : 1; /* bits 15:15 */
		ca_uint32_t xaui_die_tx_threshold : 9; /* bits 24:16 */
		ca_uint32_t external_stop_lcl_en : 1; /* bits 25:25 */
		ca_uint32_t uplink_lcl_pol : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t dbg_sel : 3; /* bits 30:28 */
		ca_uint32_t die_cascade_bp_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT 0xf4304a2c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sld_crc8_err_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG 0xf4304a30
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ram_initdone : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL 0xf4304a34
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL_dft 0x00000009

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ram_clr_en : 1; /* bits 0:0 */
		ca_uint32_t ram_sw_initial : 1; /* bits 1:1 */
		ca_uint32_t dbg_sel : 1; /* bits 2:2 */
		ca_uint32_t term_dbg_en : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS 0xf4304a38
#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Addr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA 0xf4304a3c
#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS 0xf4304a40
#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Addr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA 0xf4304a44
#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT 0xf4304a48
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mib_drop_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT 0xf4304a4c
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mib_drop_cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB 0xf4304a50
#define NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB 0xf4304a54
#define NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI 0xf4304a58
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mib_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI 0xf4304a5c
#define NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mib_cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU 0xf4304a60
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU_dft 0x80000005

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wait_cnt : 16; /* bits 15:0 */
		ca_uint32_t repeat_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0 0xf4304a64
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1 0xf4304a68
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2 0xf4304a6c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3 0xf4304a70
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK 0xf4304a74
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM 0xf4304a78
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_tm : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO 0xf4304a7c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_tm : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI 0xf4304a80
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_tm : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE 0xf4304a84
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_type : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID 0xf4304a88
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sq_id : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM 0xf4304a8c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_tm : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO 0xf4304a90
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_tm : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI 0xf4304a94
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_tm : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE 0xf4304a98
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ptp_type : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID 0xf4304a9c
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sq_id : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL 0xf4304aa0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL_dft 0x81000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_ct_mode_en : 1; /* bits 0:0 */
		ca_uint32_t drop_ct_en : 1; /* bits 1:1 */
		ca_uint32_t tx_ct_mode_en : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 13;
		ca_uint32_t ct_tpid : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL 0xf4304aa4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pon_llid : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t xgpon_llid : 13; /* bits 28:16 */
		ca_uint32_t rsrvd2 : 3;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0 0xf4304aa8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0_dft 0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vlan0 : 16; /* bits 15:0 */
		ca_uint32_t vlan1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1 0xf4304aac
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1_dft 0x81009100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vlan0 : 16; /* bits 15:0 */
		ca_uint32_t vlan1 : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG0 0xf4304ab0
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG0_dft 0x00004006

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG1 0xf4304ab4
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG1_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG2 0xf4304ab8
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG3 0xf4304abc
#define NI_HV_XAUI_XAUI_MAC_CTRL_DBG3_dft 0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_DBG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT 0xf4304ac0
#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT 0xf4304ac4
#define NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW 0xf4304ac8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID 0xf4304acc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pktcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT 0xf4304ad0
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t asyncff_dropcnt : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD 0xf4304ad4
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD_dft 0x30000090

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_wrff_threshold : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t rx_rdff_ipg : 3; /* bits 30:28 */
		ca_uint32_t rsrvd2 : 1;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD 0xf4304ad8
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD_dft 0x004000f0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_wrff_threshold : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t tx_rdff_threshold : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0 0xf4304adc
#define NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_sop_cnt : 16; /* bits 15:0 */
		ca_uint32_t rc_eop_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE 0xf4304ae0
#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_SPARE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1 0xf4304ae4
#define NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ctrl */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPT_t
	  XAUI_INTERRUPT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_INTERRUPTE_t
	  XAUI_INTERRUPTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_CFG_t CTRL_CFG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_BRIGE_CTRL_t BRIGE_CTRL; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_H_t ADDRESS_H; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_ADDRESS_L_t ADDRESS_L; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_CTRL_MODE_t CTRL_MODE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_CTL_t XAUI_RX_CTL; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_HI_t
	  XAUI_MANAGEMENT_DA_HI; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_DA_LO_t
	  XAUI_MANAGEMENT_DA_LO; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE0_t
	  XAUI_MANAGEMENT_TYPE0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE1_t
	  XAUI_MANAGEMENT_TYPE1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE2_t
	  XAUI_MANAGEMENT_TYPE2; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE3_t
	  XAUI_MANAGEMENT_TYPE3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE4_t
	  XAUI_MANAGEMENT_TYPE4; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE5_t
	  XAUI_MANAGEMENT_TYPE5; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE6_t
	  XAUI_MANAGEMENT_TYPE6; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_MANAGEMENT_TYPE7_t
	  XAUI_MANAGEMENT_TYPE7; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWON_CTL_t
	  XAUI_FLOWON_CTL; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FLOWOFF_CTL_t
	  XAUI_FLOWOFF_CTL; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_CTL_t XAUI_TX_CTL; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA_t
	  XAUI_TX_QUANTA; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA1_t
	  XAUI_TX_QUANTA1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA2_t
	  XAUI_TX_QUANTA2; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA3_t
	  XAUI_TX_QUANTA3; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA4_t
	  XAUI_TX_QUANTA4; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA5_t
	  XAUI_TX_QUANTA5; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA6_t
	  XAUI_TX_QUANTA6; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_QUANTA7_t
	  XAUI_TX_QUANTA7; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_FF_THRESHOLD_t
	  XAUI_TX_FF_THRESHOLD; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS0_t
	  XAUI_RX_STATUS0; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS1_t
	  XAUI_RX_STATUS1; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS2_t
	  XAUI_RX_STATUS2; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS3_t
	  XAUI_RX_STATUS3; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS4_t
	  XAUI_RX_STATUS4; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS5_t
	  XAUI_RX_STATUS5; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_STATUS6_t
	  XAUI_RX_STATUS6; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS0_t
	  XAUI_TX_STATUS0; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS1_t
	  XAUI_TX_STATUS1; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS3_t
	  XAUI_TX_STATUS3; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_STATUS4_t
	  XAUI_TX_STATUS4; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_FF_STATUS_t
	  XAUI_FF_STATUS; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_BP_CTRL_t XAUI_BP_CTRL; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_SLD_ERRCNT_t
	  XAUI_SLD_ERRCNT; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RAM_STATUS_REG_t
	  MIB_RAM_STATUS_REG; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_MIB_CTL_t MIB_CTL; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_ACCESS_t
	  RX_MIB_ACC_ACCESS; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_RX_MIB_ACC_DATA_t
	  RX_MIB_ACC_DATA; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_ACCESS_t
	  TX_MIB_ACC_ACCESS; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_TX_MIB_ACC_DATA_t
	  TX_MIB_ACC_DATA; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_DROPCNT_t
	  MIB_RX_DROPCNT; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_DROPCNT_t
	  MIB_TX_DROPCNT; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_TX_PKT_MIB_t TX_PKT_MIB; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_RX_PKT_MIB_t RX_PKT_MIB; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_MIB_RX_BYTECNT_HI_t
	  MIB_RX_BYTECNT_HI; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_MIB_TX_BYTECNT_HI_t
	  MIB_TX_BYTECNT_HI; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PAU_t XAUI_TX_PAU; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE0_t XAUI_RX_DIE0; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE1_t XAUI_RX_DIE1; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE2_t XAUI_RX_DIE2; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DIE3_t XAUI_RX_DIE3; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_UPLINK_t
	  XAUI_RX_UPLINK; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_t
	  XAUI_RX_PTP_TM; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_LO_t
	  XAUI_RX_PTP_TM_S_LO; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TM_S_HI_t
	  XAUI_RX_PTP_TM_S_HI; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_TYPE_t
	  XAUI_RX_PTP_TYPE; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_PTP_SQID_t
	  XAUI_RX_PTP_SQID; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_t
	  XAUI_TX_PTP_TM; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_LO_t
	  XAUI_TX_PTP_TM_S_LO; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TM_S_HI_t
	  XAUI_TX_PTP_TM_S_HI; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_TYPE_t
	  XAUI_TX_PTP_TYPE; /* addr: 0x00000118 */
	ca_uint32_t rsrvd71[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TX_PTP_SQID_t
	  XAUI_TX_PTP_SQID; /* addr: 0x0000011c */
	ca_uint32_t rsrvd72[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_CTL_t XAUI_CT_CTL; /* addr: 0x00000120 */
	ca_uint32_t rsrvd73[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_CT_LLID_CTL_t
	  XAUI_CT_LLID_CTL; /* addr: 0x00000124 */
	ca_uint32_t rsrvd74[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN0_t
	  XAUI_PTP_VLAN0; /* addr: 0x00000128 */
	ca_uint32_t rsrvd75[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_PTP_VLAN1_t
	  XAUI_PTP_VLAN1; /* addr: 0x0000012c */
	ca_uint32_t rsrvd76[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_DBG0_t DBG0; /* addr: 0x00000130 */
	ca_uint32_t rsrvd77[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_DBG1_t DBG1; /* addr: 0x00000134 */
	ca_uint32_t rsrvd78[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_DBG2_t DBG2; /* addr: 0x00000138 */
	ca_uint32_t rsrvd79[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_DBG3_t DBG3; /* addr: 0x0000013c */
	ca_uint32_t rsrvd80[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_RX_CNT_t GE_DBG_RX_CNT; /* addr: 0x00000140 */
	ca_uint32_t rsrvd81[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_GE_DBG_TX_CNT_t GE_DBG_TX_CNT; /* addr: 0x00000144 */
	ca_uint32_t rsrvd82[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_KNOW_t
	  XAUI_RX_FLUSH_KNOW; /* addr: 0x00000148 */
	ca_uint32_t rsrvd83[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_FLUSH_SDID_t
	  XAUI_RX_FLUSH_SDID; /* addr: 0x0000014c */
	ca_uint32_t rsrvd84[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_DROPCNT_t
	  XAUI_RXFPGA_DROPCNT; /* addr: 0x00000150 */
	ca_uint32_t rsrvd85[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RXFPGA_FF_THRESHOLD_t
	  XAUI_RXFPGA_FF_THRESHOLD; /* addr: 0x00000154 */
	ca_uint32_t rsrvd86[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_TXFPGA_FF_THRESHOLD_t
	  XAUI_TXFPGA_FF_THRESHOLD; /* addr: 0x00000158 */
	ca_uint32_t rsrvd87[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_XAUI_RX_DBGCNT0_t
	  XAUI_RX_DBGCNT0; /* addr: 0x0000015c */
	ca_uint32_t rsrvd88[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_SPARE_t SPARE; /* addr: 0x00000160 */
	ca_uint32_t rsrvd89[3];
	NI_HV_XAUI_XAUI_MAC_CTRL_SPARE1_t SPARE1; /* addr: 0x00000164 */
} APB0_NI_HV_XAUI_XAUI_MAC_CTRL_t;
#endif /* !__ASSEMBLER__ */

/*
 * txmac
 */

#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG 0xf4304b00
#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG_dft 0x40000070

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t insert_cshead : 1; /* bits 0:0 */
		ca_uint32_t reset : 1; /* bits 1:1 */
		ca_uint32_t flow_en : 1; /* bits 2:2 */
		ca_uint32_t mac_en : 1; /* bits 3:3 */
		ca_uint32_t crc_recaculate_en : 1; /* bits 4:4 */
		ca_uint32_t swap_crc8_en : 1; /* bits 5:5 */
		ca_uint32_t swap_datain_en : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t dic_mode : 2; /* bits 14:13 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t link_fault_en : 1; /* bits 30:30 */
		ca_uint32_t insert_nop : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS 0xf4304b04
#define NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t empty : 1; /* bits 0:0 */
		ca_uint32_t full : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0 0xf4304b08
#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0_dft 0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1 0xf4304b0c
#define NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* txmac */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XAUI_MAC_TXMAC_TX_CONFIG_t TX_CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XAUI_MAC_TXMAC_ASYNC_FF_STATUS_t
	  ASYNC_FF_STATUS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG0_t TX_DBG0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XAUI_MAC_TXMAC_TX_DBG1_t TX_DBG1; /* addr: 0x0000000c */
} APB0_NI_HV_XAUI_XAUI_MAC_TXMAC_t;
#endif /* !__ASSEMBLER__ */

/*
 * rxmac
 */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG 0xf4304b20
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG_dft 0x07ff0230

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t reset : 1; /* bits 1:1 */
		ca_uint32_t dxaui_quanta_mode : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t swap_crc8_en : 1; /* bits 4:4 */
		ca_uint32_t swap_datain_en : 1; /* bits 5:5 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t mac_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t pause_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd5 : 6;
		ca_uint32_t max_size : 11; /* bits 26:16 */
		ca_uint32_t rsrvd6 : 5;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET 0xf4304b24
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET_dft 0x0000006f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t check_idle : 1; /* bits 0:0 */
		ca_uint32_t check_start : 1; /* bits 1:1 */
		ca_uint32_t check_sld : 1; /* bits 2:2 */
		ca_uint32_t check_preamble : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t check_crc8 : 1; /* bits 5:5 */
		ca_uint32_t check_terminate : 1; /* bits 6:6 */
		ca_uint32_t rx_revcs : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD 0xf4304b28
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD_dft 0x10000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cascade_hd : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD 0xf4304b2c
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD_dft 0x10000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cascade_hd : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW 0xf4304b30
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_asyncff_overflow : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0 0xf4304b34
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0_dft 0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1 0xf4304b38
#define NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1_dft 0x10000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dbg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rxmac */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CONFIG_t RX_CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_PKT_DET_t RX_PKT_DET; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_CASCADE_HD_t
	  RX_CASCADE_HD; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_INIT_CASCADE_HD_t
	  RX_INIT_CASCADE_HD; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_ASYNC_FF_OVERFLOW_t
	  RX_ASYNC_FF_OVERFLOW; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG0_t RX_DBG0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XAUI_XAUI_MAC_RXMAC_RX_DBG1_t RX_DBG1; /* addr: 0x00000018 */
} APB0_NI_HV_XAUI_XAUI_MAC_RXMAC_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xaui_mac */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_XAUI_XAUI_MAC_CTRL_t ctrl; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[205];
	APB0_NI_HV_XAUI_XAUI_MAC_TXMAC_t txmac; /* addr: 0x00000180 */
	ca_uint32_t rsrvd2[25];
	APB0_NI_HV_XAUI_XAUI_MAC_RXMAC_t rxmac; /* addr: 0x000001a0 */
} APB0_NI_HV_XAUI_XAUI_MAC_t;
#endif /* !__ASSEMBLER__ */

/*
 * xaui_xgrs
 */

/*
 * tx
 */

#define NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL 0xf4304b40
#define NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL_dft 0x00000013

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_localOrdEn : 1; /* bits 0:0 */
		ca_uint32_t tx_remoteOrdEn : 1; /* bits 1:1 */
		ca_uint32_t tx_userOrdEn : 1; /* bits 2:2 */
		ca_uint32_t tx_dataTruncEn : 1; /* bits 3:3 */
		ca_uint32_t tx_pcs6_line_txd_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t tx_logicReset : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1 0xf4304b44
#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_userOrdL1 : 8; /* bits 7:0 */
		ca_uint32_t tx_userOrdL2 : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2 0xf4304b48
#define NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_userOrdL3 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_TX_TXINT 0xf4304b4c
#define NI_HV_XAUI_XAUI_XGRS_TX_TXINT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t truncPktI : 1; /* bits 0:0 */
		ca_uint32_t truncPktSatI : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_TXINT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE 0xf4304b50
#define NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t truncPktE : 1; /* bits 0:0 */
		ca_uint32_t truncPktSatE : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT 0xf4304b54
#define NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t trunc_pkt_tx : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT 0xf4304b58
#define NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT_dft 0x00000006

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t oidle_pkt_tx : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* tx */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XAUI_XGRS_TX_TXCNTRL_t TXCNTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD1_t TXUSERORD1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XAUI_XGRS_TX_TXUSERORD2_t TXUSERORD2; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XAUI_XGRS_TX_TXINT_t TXINT; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XAUI_XAUI_XGRS_TX_TXINTENABLE_t TXINTENABLE; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XAUI_XAUI_XGRS_TX_TRUNCPKT_t TRUNCPKT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XAUI_XAUI_XGRS_TX_OIDLECOUNT_t OIDLECOUNT; /* addr: 0x00000018 */
} APB0_NI_HV_XAUI_XAUI_XGRS_TX_t;
#endif /* !__ASSEMBLER__ */

/*
 * rx
 */

#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1 0xf4304b60
#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1_dft 0x0000028f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_dataLosEn : 1; /* bits 0:0 */
		ca_uint32_t rx_lockLosEn : 1; /* bits 1:1 */
		ca_uint32_t rx_sigLosEn : 1; /* bits 2:2 */
		ca_uint32_t rx_phyRLFEn : 1; /* bits 3:3 */
		ca_uint32_t rx_losPolarity : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t rx_noIpg : 1; /* bits 7:7 */
		ca_uint32_t rx_ofsmUNHEn : 1; /* bits 8:8 */
		ca_uint32_t rx_pcs6_line_rxd_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t rx_logicReset : 1; /* bits 15:15 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1_t;
#endif /* !__ASSEMBLER__ */

#define rx_losPolarity_HIGH_LOS_POL 0x0
#define rx_losPolarity_LOW_LOS_POL 0x1

#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2 0xf4304b64
#define NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2_dft 0x0000037f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_col_thr : 8; /* bits 7:0 */
		ca_uint32_t rx_seq_thr : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS 0xf4304b68
#define NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t localordS : 1; /* bits 0:0 */
		ca_uint32_t remoteordS : 1; /* bits 1:1 */
		ca_uint32_t unknownordS : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_RX_RXINT 0xf4304b6c
#define NI_HV_XAUI_XAUI_XGRS_RX_RXINT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t localordI : 1; /* bits 0:0 */
		ca_uint32_t remoteordI : 1; /* bits 1:1 */
		ca_uint32_t unknownordI : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_RXINT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE 0xf4304b70
#define NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t localordE : 1; /* bits 0:0 */
		ca_uint32_t remoteordE : 1; /* bits 1:1 */
		ca_uint32_t unknownordE : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1 0xf4304b74
#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_unknownOrd_l1 : 8; /* bits 7:0 */
		ca_uint32_t rx_unknownOrd_l2 : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2 0xf4304b78
#define NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_unknownOrd_l3 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL 0xf4304b7c
#define NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t loc_fault_sel : 1; /* bits 0:0 */
		ca_uint32_t rmt_fault_sel : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* rx */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL1_t RXCNTRL1; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XAUI_XAUI_XGRS_RX_RXCNTRL2_t RXCNTRL2; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XAUI_XAUI_XGRS_RX_RXSTATUS_t RXSTATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XAUI_XAUI_XGRS_RX_RXINT_t RXINT; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XAUI_XAUI_XGRS_RX_RXINTENABLE_t RXINTENABLE; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD1_t UNKNOWNORD1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XAUI_XAUI_XGRS_RX_UNKNOWNORD2_t UNKNOWNORD2; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_XAUI_XAUI_XGRS_RX_FAULT_SEL_t FAULT_SEL; /* addr: 0x0000001c */
} APB0_NI_HV_XAUI_XAUI_XGRS_RX_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* xaui_xgrs */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_XAUI_XAUI_XGRS_TX_t tx; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[19];
	APB0_NI_HV_XAUI_XAUI_XGRS_RX_t rx; /* addr: 0x00000020 */
} APB0_NI_HV_XAUI_XAUI_XGRS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XAUI */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_XAUI_XGXS_TOP_t XGXS_TOP; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[57];
	APB0_NI_HV_XAUI_XAUI_MAC_t xaui_mac; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd2[19];
	APB0_NI_HV_XAUI_XAUI_XGRS_t xaui_xgrs; /* addr: 0x00000260 */
} APB0_NI_HV_XAUI_t;
#endif /* !__ASSEMBLER__ */

/*
 * XGE[0..1]
 */

/*
 * MAC
 */

#define NI_HV_XGE_MAC_CFG_COM 0xf4304b80
#define NI_HV_XGE_MAC_CFG_COM_dft 0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rpr_mode : 1; /* bits 0:0 */
		ca_uint32_t stack_en : 1; /* bits 1:1 */
		ca_uint32_t clronread : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t stats_err_order : 3; /* bits 6:4 */
		ca_uint32_t stats_drop_en : 1; /* bits 7:7 */
		ca_uint32_t core_tx2rx_lb : 1; /* bits 8:8 */
		ca_uint32_t core_rx2tx_lb : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t cntr_rst : 1; /* bits 13:13 */
		ca_uint32_t rx_rst : 1; /* bits 14:14 */
		ca_uint32_t tx_rst : 1; /* bits 15:15 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_CFG_COM_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_CFG_RX 0xf4304b84
#define NI_HV_XGE_MAC_CFG_RX_dft 0x00001bc1

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t promis_mode : 1; /* bits 0:0 */
		ca_uint32_t drop_short : 1; /* bits 1:1 */
		ca_uint32_t strip : 2; /* bits 3:2 */
		ca_uint32_t pause_term : 1; /* bits 4:4 */
		ca_uint32_t pause_extract : 1; /* bits 5:5 */
		ca_uint32_t len_chk_en : 1; /* bits 6:6 */
		ca_uint32_t len_chk_en_pause : 1; /* bits 7:7 */
		ca_uint32_t len_chk_en_pad : 1; /* bits 8:8 */
		ca_uint32_t fcs_chk_en : 1; /* bits 9:9 */
		ca_uint32_t IFG_mode_rx : 1; /* bits 10:10 */
		ca_uint32_t crc_err_fatal : 1; /* bits 11:11 */
		ca_uint32_t maxlen_mode : 1; /* bits 12:12 */
		ca_uint32_t prmbl_sfd_gmii_err : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_CFG_RX_t;
#endif /* !__ASSEMBLER__ */

#define maxlen_mode_FIX 0x0
#define maxlen_mode_AUTO 0x1
#define IFG_mode_rx_STD 0x0
#define IFG_mode_rx_BEST 0x1
#define strip_NONE 0x0
#define strip_FCS 0x1
#define strip_PADFCS 0x2

#define NI_HV_XGE_MAC_CFG_TX 0xf4304b88
#define NI_HV_XGE_MAC_CFG_TX_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t IFG_mode_tx : 2; /* bits 1:0 */
		ca_uint32_t halt : 1; /* bits 2:2 */
		ca_uint32_t insSA : 1; /* bits 3:3 */
		ca_uint32_t pause_req_en : 1; /* bits 4:4 */
		ca_uint32_t pause_req_auto_xon : 1; /* bits 5:5 */
		ca_uint32_t lf_auto_flush_en : 1; /* bits 6:6 */
		ca_uint32_t vlan_pad_mode : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_CFG_TX_t;
#endif /* !__ASSEMBLER__ */

#define vlan_pad_mode_MD_64B 0x0
#define vlan_pad_mode_MD_VAR 0x1
#define IFG_mode_tx_STD 0x0
#define IFG_mode_tx_DIC12 0x1
#define IFG_mode_tx_DIC8 0x2
#define IFG_mode_tx_RSVD 0x3

#define NI_HV_XGE_MAC_CFG_TX_2 0xf4304b8c
#define NI_HV_XGE_MAC_CFG_TX_2_dft 0x0000060e

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fifo1_thr_afull : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t fifo1_read_thr : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 19;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_CFG_TX_2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_CFG_TX_IFG 0xf4304b90
#define NI_HV_XGE_MAC_CFG_TX_IFG_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ifg : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_CFG_TX_IFG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAC_ADDR_A 0xf4304b94
#define NI_HV_XGE_MAC_MAC_ADDR_A_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAC_ADDR_A_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAC_ADDR_B 0xf4304b98
#define NI_HV_XGE_MAC_MAC_ADDR_B_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAC_ADDR_B_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAC_ADDR_C 0xf4304b9c
#define NI_HV_XGE_MAC_MAC_ADDR_C_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAC_ADDR_C_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_VLAN_TAG1 0xf4304ba0
#define NI_HV_XGE_MAC_VLAN_TAG1_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tag : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_VLAN_TAG1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_VLAN_TAG2 0xf4304ba4
#define NI_HV_XGE_MAC_VLAN_TAG2_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tag : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_VLAN_TAG2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_VLAN_TAG3 0xf4304ba8
#define NI_HV_XGE_MAC_VLAN_TAG3_dft 0x00008100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tag : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_VLAN_TAG3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MINLEN 0xf4304bac
#define NI_HV_XGE_MAC_MINLEN_dft 0x00000040

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minlen : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MINLEN_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAXLEN 0xf4304bb0
#define NI_HV_XGE_MAC_MAXLEN_dft 0x00002328

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t maxlen : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAXLEN_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_PAUSE_ADDR_A 0xf4304bb4
#define NI_HV_XGE_MAC_PAUSE_ADDR_A_dft 0x00000180

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_PAUSE_ADDR_A_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_PAUSE_ADDR_B 0xf4304bb8
#define NI_HV_XGE_MAC_PAUSE_ADDR_B_dft 0x0000c200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_PAUSE_ADDR_B_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_PAUSE_ADDR_C 0xf4304bbc
#define NI_HV_XGE_MAC_PAUSE_ADDR_C_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_PAUSE_ADDR_C_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_PQUANTA 0xf4304bc0
#define NI_HV_XGE_MAC_PQUANTA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pq : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_PQUANTA_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_PAUSE_TX_CMD 0xf4304bc4
#define NI_HV_XGE_MAC_PAUSE_TX_CMD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t X_GEN : 1; /* bits 0:0 */
		ca_uint32_t XON_XOFF : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_PAUSE_TX_CMD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_INTERRUPT 0xf4304bc8
#define NI_HV_XGE_MAC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t miscI : 1; /* bits 0:0 */
		ca_uint32_t stats1I : 1; /* bits 1:1 */
		ca_uint32_t stats2I : 1; /* bits 2:2 */
		ca_uint32_t stats3I : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_INTENABLE 0xf4304bcc
#define NI_HV_XGE_MAC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t miscE : 1; /* bits 0:0 */
		ca_uint32_t stats1E : 1; /* bits 1:1 */
		ca_uint32_t stats2E : 1; /* bits 2:2 */
		ca_uint32_t stats3E : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MISC_INTERRUPT 0xf4304bd0
#define NI_HV_XGE_MAC_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo1_uflwI : 1; /* bits 0:0 */
		ca_uint32_t tx_fifo1_oflwI : 1; /* bits 1:1 */
		ca_uint32_t tx_pause_doneI : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t rx_no_sfdI : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MISC_INTENABLE 0xf4304bd4
#define NI_HV_XGE_MAC_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo1_uflwE : 1; /* bits 0:0 */
		ca_uint32_t tx_fifo1_oflwE : 1; /* bits 1:1 */
		ca_uint32_t tx_pause_doneE : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t rx_no_sfdE : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_INTERRUPT1 0xf4304bd8
#define NI_HV_XGE_MAC_STATS_INTERRUPT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_good_framesI : 1; /* bits 0:0 */
		ca_uint32_t tx_good_octetsI : 1; /* bits 1:1 */
		ca_uint32_t tx_pause_framesI : 1; /* bits 2:2 */
		ca_uint32_t rx_good_framesI : 1; /* bits 3:3 */
		ca_uint32_t rx_good_octetsI : 1; /* bits 4:4 */
		ca_uint32_t rx_pause_framesI : 1; /* bits 5:5 */
		ca_uint32_t rx_crcerr_framesI : 1; /* bits 6:6 */
		ca_uint32_t rx_alignerr_framesI : 1; /* bits 7:7 */
		ca_uint32_t tx_ucast_framesI : 1; /* bits 8:8 */
		ca_uint32_t tx_mcast_framesI : 1; /* bits 9:9 */
		ca_uint32_t tx_bcast_framesI : 1; /* bits 10:10 */
		ca_uint32_t tx_err_framesI : 1; /* bits 11:11 */
		ca_uint32_t rx_ucast_framesI : 1; /* bits 12:12 */
		ca_uint32_t rx_mcast_framesI : 1; /* bits 13:13 */
		ca_uint32_t rx_bcast_framesI : 1; /* bits 14:14 */
		ca_uint32_t rx_err_framesI : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_INTERRUPT1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_INTENABLE1 0xf4304bdc
#define NI_HV_XGE_MAC_STATS_INTENABLE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_good_framesE : 1; /* bits 0:0 */
		ca_uint32_t tx_good_octetsE : 1; /* bits 1:1 */
		ca_uint32_t tx_pause_framesE : 1; /* bits 2:2 */
		ca_uint32_t rx_good_framesE : 1; /* bits 3:3 */
		ca_uint32_t rx_good_octetsE : 1; /* bits 4:4 */
		ca_uint32_t rx_pause_framesE : 1; /* bits 5:5 */
		ca_uint32_t rx_crcerr_framesE : 1; /* bits 6:6 */
		ca_uint32_t rx_alignerr_framesE : 1; /* bits 7:7 */
		ca_uint32_t tx_ucast_framesE : 1; /* bits 8:8 */
		ca_uint32_t tx_mcast_framesE : 1; /* bits 9:9 */
		ca_uint32_t tx_bcast_framesE : 1; /* bits 10:10 */
		ca_uint32_t tx_err_framesE : 1; /* bits 11:11 */
		ca_uint32_t rx_ucast_framesE : 1; /* bits 12:12 */
		ca_uint32_t rx_mcast_framesE : 1; /* bits 13:13 */
		ca_uint32_t rx_bcast_framesE : 1; /* bits 14:14 */
		ca_uint32_t rx_err_framesE : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_INTENABLE1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_INTERRUPT2 0xf4304be0
#define NI_HV_XGE_MAC_STATS_INTERRUPT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_octetsI : 1; /* bits 0:0 */
		ca_uint32_t rx_framesI : 1; /* bits 1:1 */
		ca_uint32_t rx_runt_framesI : 1; /* bits 2:2 */
		ca_uint32_t rx_short_framesI : 1; /* bits 3:3 */
		ca_uint32_t rx_undersize_framesI : 1; /* bits 4:4 */
		ca_uint32_t rx_giant_framesI : 1; /* bits 5:5 */
		ca_uint32_t rx_jabber_framesI : 1; /* bits 6:6 */
		ca_uint32_t rx_64b_framesI : 1; /* bits 7:7 */
		ca_uint32_t rx_65b_to_127b_framesI : 1; /* bits 8:8 */
		ca_uint32_t rx_128b_to_255b_framesI : 1; /* bits 9:9 */
		ca_uint32_t rx_256b_to_511b_framesI : 1; /* bits 10:10 */
		ca_uint32_t rx_512b_to_1023b_framesI : 1; /* bits 11:11 */
		ca_uint32_t rx_1024b_to_1518b_framesI : 1; /* bits 12:12 */
		ca_uint32_t rx_1519b_to_maxb_framesI : 1; /* bits 13:13 */
		ca_uint32_t tx_octetsI : 1; /* bits 14:14 */
		ca_uint32_t tx_framesI : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_INTERRUPT2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_INTENABLE2 0xf4304be4
#define NI_HV_XGE_MAC_STATS_INTENABLE2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_octetsE : 1; /* bits 0:0 */
		ca_uint32_t rx_framesE : 1; /* bits 1:1 */
		ca_uint32_t rx_runt_framesE : 1; /* bits 2:2 */
		ca_uint32_t rx_short_framesE : 1; /* bits 3:3 */
		ca_uint32_t rx_undersize_framesE : 1; /* bits 4:4 */
		ca_uint32_t rx_giant_framesE : 1; /* bits 5:5 */
		ca_uint32_t rx_jabber_framesE : 1; /* bits 6:6 */
		ca_uint32_t rx_64b_framesE : 1; /* bits 7:7 */
		ca_uint32_t rx_65b_to_127b_framesE : 1; /* bits 8:8 */
		ca_uint32_t rx_128b_to_255b_framesE : 1; /* bits 9:9 */
		ca_uint32_t rx_256b_to_511b_framesE : 1; /* bits 10:10 */
		ca_uint32_t rx_512b_to_1023b_framesE : 1; /* bits 11:11 */
		ca_uint32_t rx_1024b_to_1518b_framesE : 1; /* bits 12:12 */
		ca_uint32_t rx_1519b_to_maxb_framesE : 1; /* bits 13:13 */
		ca_uint32_t tx_octetsE : 1; /* bits 14:14 */
		ca_uint32_t tx_framesE : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_INTENABLE2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_INTERRUPT3 0xf4304be8
#define NI_HV_XGE_MAC_STATS_INTERRUPT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_64b_framesI : 1; /* bits 0:0 */
		ca_uint32_t tx_65b_to_127b_framesI : 1; /* bits 1:1 */
		ca_uint32_t tx_128b_to_255b_framesI : 1; /* bits 2:2 */
		ca_uint32_t tx_256b_to_511b_framesI : 1; /* bits 3:3 */
		ca_uint32_t tx_512b_to_1023b_framesI : 1; /* bits 4:4 */
		ca_uint32_t tx_1024b_to_1518b_framesI : 1; /* bits 5:5 */
		ca_uint32_t tx_1519b_framesI : 1; /* bits 6:6 */
		ca_uint32_t drop_rx_crcerr_framesI : 1; /* bits 7:7 */
		ca_uint32_t drop_rx_alignerr_framesI : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_INTERRUPT3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_INTENABLE3 0xf4304bec
#define NI_HV_XGE_MAC_STATS_INTENABLE3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_64b_framesE : 1; /* bits 0:0 */
		ca_uint32_t tx_65b_to_127b_framesE : 1; /* bits 1:1 */
		ca_uint32_t tx_128b_to_255b_framesE : 1; /* bits 2:2 */
		ca_uint32_t tx_256b_to_511b_framesE : 1; /* bits 3:3 */
		ca_uint32_t tx_512b_to_1023b_framesE : 1; /* bits 4:4 */
		ca_uint32_t tx_1024b_to_1518b_framesE : 1; /* bits 5:5 */
		ca_uint32_t tx_1519b_framesE : 1; /* bits 6:6 */
		ca_uint32_t drop_rx_crcerr_framesE : 1; /* bits 7:7 */
		ca_uint32_t drop_rx_alignerr_framesE : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_INTENABLE3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_ACCESS 0xf4304bf0
#define NI_HV_XGE_MAC_STATS_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_id : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t dbg_write : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define cnt_id_TX_GOOD_FRAMES 0x0
#define cnt_id_TX_GOOD_OCTETS 0x1
#define cnt_id_TX_PAUSE_FRAMES 0x2
#define cnt_id_RX_GOOD_FRAMES 0x3
#define cnt_id_RX_GOOD_OCTETS 0x4
#define cnt_id_RX_PAUSE_FRAMES 0x5
#define cnt_id_RX_CRC_ERR_FRAMES 0x6
#define cnt_id_RX_ALIGN_ERR_FRAMES 0x7
#define cnt_id_TX_UCAST_FRAMES 0x8
#define cnt_id_TX_MCAST_FRAMES 0x9
#define cnt_id_TX_BCAST_FRAMES 0xa
#define cnt_id_TX_ERR_FRAMES 0xb
#define cnt_id_RX_UCAST_FRAMES 0xc
#define cnt_id_RX_MCAST_FRAMES 0xd
#define cnt_id_RX_BCAST_FRAMES 0xe
#define cnt_id_RX_ERR_FRAMES 0xf
#define cnt_id_RX_OCTETS 0x10
#define cnt_id_RX_FRAMES 0x11
#define cnt_id_RX_RUNT_FRAMES 0x12
#define cnt_id_RX_SHORT_FRAMES 0x13
#define cnt_id_RX_UNDERSIZE_FRAMES 0x14
#define cnt_id_RX_GIANT_FRAMES 0x15
#define cnt_id_RX_JABBER_FRAMES 0x16
#define cnt_id_RX_64B_FRAMES 0x17
#define cnt_id_RX_65B_TO_127B_FRAMES 0x18
#define cnt_id_RX_128B_TO_255B_FRAMES 0x19
#define cnt_id_RX_256B_TO_511B_FRAMES 0x1a
#define cnt_id_RX_512B_TO_1023B_FRAMES 0x1b
#define cnt_id_RX_1024B_TO_1518B_FRAMES 0x1c
#define cnt_id_RX_1519B_TO_MAXB_FRAMES 0x1d
#define cnt_id_TX_OCTETS 0x1e
#define cnt_id_TX_FRAMES 0x1f
#define cnt_id_TX_64B_FRAMES 0x20
#define cnt_id_TX_65B_TO_127B_FRAMES 0x21
#define cnt_id_TX_128B_TO_255B_FRAMES 0x22
#define cnt_id_TX_256B_TO_511B_FRAMES 0x23
#define cnt_id_TX_512B_TO_1023B_FRAMES 0x24
#define cnt_id_TX_1024B_TO_1518B_FRAMES 0x25
#define cnt_id_TX_1519B_FRAMES 0x26
#define cnt_id_DROP_RX_CRC_ERR_FRAMES 0x27
#define cnt_id_DROP_RX_ALIGN_ERR_FRAMES 0x28

#define NI_HV_XGE_MAC_STATS_DATA1 0xf4304bf4
#define NI_HV_XGE_MAC_STATS_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_STATS_DATA0 0xf4304bf8
#define NI_HV_XGE_MAC_STATS_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_STATS_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY2 0xf4304bfc
#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAC_ADDR_RDONLY2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY1 0xf4304c00
#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAC_ADDR_RDONLY1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY0 0xf4304c04
#define NI_HV_XGE_MAC_MAC_ADDR_RDONLY0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_MAC_ADDR_RDONLY0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_TL_BOUNDARY 0xf4304c08
#define NI_HV_XGE_MAC_TL_BOUNDARY_dft 0x00000600

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t boundary : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_TL_BOUNDARY_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MAC_FMRO 0xf4304c0c
#define NI_HV_XGE_MAC_FMRO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data_sel : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t clk_sel : 2; /* bits 9:8 */
		ca_uint32_t rsrvd2 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MAC_FMRO_t;
#endif /* !__ASSEMBLER__ */

#define clk_sel_DISABLE 0x0
#define clk_sel_MAC 0x1
#define clk_sel_322RX 0x2
#define clk_sel_322TX 0x3
#define data_sel_DISABLE 0x0
#define data_sel_322RX_1 0x1
#define data_sel_322RX_2 0x2
#define data_sel_322RX_3 0x3
#define data_sel_322RX_4 0x4
#define data_sel_322RX_5 0x5
#define data_sel_322RX_6 0x6
#define data_sel_322RX_7 0x7
#define data_sel_322RX_8 0x8
#define data_sel_322RX_9 0x9
#define data_sel_322RX_10 0xa
#define data_sel_322RX_11 0xb
#define data_sel_322RX_12 0xc
#define data_sel_322RX_13 0xd
#define data_sel_322TX_0 0x10
#define data_sel_322TX_1 0x11
#define data_sel_322TX_2 0x12
#define data_sel_322TX_3 0x13
#define data_sel_322TX_4 0x14
#define data_sel_322TX_5 0x15
#define data_sel_322TX_6 0x16
#define data_sel_322TX_7 0x17
#define data_sel_322TX_8 0x18
#define data_sel_322TX_9 0x19
#define data_sel_322TX_10 0x1a
#define data_sel_322TX_11 0x1b
#define data_sel_322TX_12 0x1c
#define data_sel_322TX_13 0x1d
#define data_sel_322TX_14 0x1e
#define data_sel_322TX_15 0x1f
#define data_sel_322TX_16 0x20
#define data_sel_322TX_17 0x21
#define data_sel_322TX_18 0x22
#define data_sel_322TX_19 0x23
#define data_sel_322TX_20 0x24
#define data_sel_322TX_21 0x25
#define data_sel_322TX_22 0x26
#define data_sel_322TX_23 0x27
#define data_sel_322TX_24 0x28
#define data_sel_322TX_25 0x29
#define data_sel_322TX_26 0x2a
#define data_sel_322TX_27 0x2b
#define data_sel_322TX_28 0x2c
#define data_sel_322TX_29 0x2d
#define data_sel_322TX_30 0x2e
#define data_sel_322TX_31 0x2f
#define data_sel_322TX_32 0x30
#define data_sel_322TX_33 0x31
#define data_sel_322TX_34 0x32
#define data_sel_322TX_35 0x33
#define data_sel_322TX_36 0x34
#define data_sel_322TX_37 0x35
#define data_sel_322TX_38 0x36
#define data_sel_322TX_39 0x37
#define data_sel_322TX_40 0x38
#define data_sel_322TX_41 0x39
#define data_sel_MAC_0 0x40
#define data_sel_MAC_1 0x41
#define data_sel_MAC_2 0x42
#define data_sel_MAC_3 0x43
#define data_sel_MAC_4 0x44
#define data_sel_MAC_5 0x45
#define data_sel_MAC_6 0x46
#define data_sel_MAC_7 0x47
#define data_sel_MAC_8 0x48
#define data_sel_MAC_9 0x49
#define data_sel_MAC_10 0x4a
#define data_sel_MAC_11 0x4b
#define data_sel_MAC_12 0x4c
#define data_sel_MAC_13 0x4d
#define data_sel_MAC_14 0x4e
#define data_sel_MAC_15 0x4f
#define data_sel_MAC_16 0x50
#define data_sel_MAC_17 0x51
#define data_sel_MAC_18 0x52
#define data_sel_MAC_19 0x53
#define data_sel_MAC_20 0x54
#define data_sel_MAC_21 0x55
#define data_sel_MAC_22 0x56
#define data_sel_MAC_23 0x57
#define data_sel_MAC_24 0x58
#define data_sel_MAC_25 0x59
#define data_sel_MAC_26 0x5a
#define data_sel_MAC_27 0x5b
#define data_sel_MAC_28 0x5c
#define data_sel_MAC_29 0x5d
#define data_sel_MAC_30 0x5e
#define data_sel_MAC_31 0x5f
#define data_sel_MAC_32 0x60
#define data_sel_MAC_33 0x61
#define data_sel_MAC_34 0x62
#define data_sel_MAC_35 0x63
#define data_sel_MAC_36 0x64
#define data_sel_MAC_37 0x65
#define data_sel_MAC_38 0x66
#define data_sel_MAC_39 0x67
#define data_sel_MAC_40 0x68
#define data_sel_MAC_41 0x69
#define data_sel_MAC_42 0x6a
#define data_sel_MAC_43 0x6b
#define data_sel_MAC_44 0x6c
#define data_sel_MAC_45 0x6d
#define data_sel_MAC_46 0x6e
#define data_sel_MAC_47 0x6f
#define data_sel_MAC_48 0x70
#define data_sel_MAC_49 0x71
#define data_sel_MAC_50 0x72
#define data_sel_MAC_51 0x73
#define data_sel_MAC_52 0x74
#define data_sel_MAC_53 0x75
#define data_sel_MAC_54 0x76
#define data_sel_MAC_55 0x77
#define data_sel_MAC_56 0x78

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* MAC */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XGE_MAC_CFG_COM_t CFG_COM; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XGE_MAC_CFG_RX_t CFG_RX; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XGE_MAC_CFG_TX_t CFG_TX; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XGE_MAC_CFG_TX_2_t CFG_TX_2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_XGE_MAC_CFG_TX_IFG_t CFG_TX_IFG; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_XGE_MAC_MAC_ADDR_A_t MAC_ADDR_A; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_XGE_MAC_MAC_ADDR_B_t MAC_ADDR_B; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_XGE_MAC_MAC_ADDR_C_t MAC_ADDR_C; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_XGE_MAC_VLAN_TAG1_t VLAN_TAG1; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_XGE_MAC_VLAN_TAG2_t VLAN_TAG2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_XGE_MAC_VLAN_TAG3_t VLAN_TAG3; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_XGE_MAC_MINLEN_t MINLEN; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_XGE_MAC_MAXLEN_t MAXLEN; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_XGE_MAC_PAUSE_ADDR_A_t PAUSE_ADDR_A; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_XGE_MAC_PAUSE_ADDR_B_t PAUSE_ADDR_B; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_XGE_MAC_PAUSE_ADDR_C_t PAUSE_ADDR_C; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	NI_HV_XGE_MAC_PQUANTA_t PQUANTA; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	NI_HV_XGE_MAC_PAUSE_TX_CMD_t PAUSE_TX_CMD; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	NI_HV_XGE_MAC_INTERRUPT_t INTERRUPT; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	NI_HV_XGE_MAC_INTENABLE_t INTENABLE; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	NI_HV_XGE_MAC_MISC_INTERRUPT_t MISC_INTERRUPT; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	NI_HV_XGE_MAC_MISC_INTENABLE_t MISC_INTENABLE; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	NI_HV_XGE_MAC_STATS_INTERRUPT1_t STATS_INTERRUPT1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	NI_HV_XGE_MAC_STATS_INTENABLE1_t STATS_INTENABLE1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	NI_HV_XGE_MAC_STATS_INTERRUPT2_t STATS_INTERRUPT2; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	NI_HV_XGE_MAC_STATS_INTENABLE2_t STATS_INTENABLE2; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	NI_HV_XGE_MAC_STATS_INTERRUPT3_t STATS_INTERRUPT3; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	NI_HV_XGE_MAC_STATS_INTENABLE3_t STATS_INTENABLE3; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	NI_HV_XGE_MAC_STATS_ACCESS_t STATS_ACCESS; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	NI_HV_XGE_MAC_STATS_DATA1_t STATS_DATA1; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	NI_HV_XGE_MAC_STATS_DATA0_t STATS_DATA0; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	NI_HV_XGE_MAC_MAC_ADDR_RDONLY2_t MAC_ADDR_RDONLY2; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	NI_HV_XGE_MAC_MAC_ADDR_RDONLY1_t MAC_ADDR_RDONLY1; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	NI_HV_XGE_MAC_MAC_ADDR_RDONLY0_t MAC_ADDR_RDONLY0; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	NI_HV_XGE_MAC_TL_BOUNDARY_t TL_BOUNDARY; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	NI_HV_XGE_MAC_FMRO_t FMRO; /* addr: 0x0000008c */
} APB0_NI_HV_XGE_MAC_t;
#endif /* !__ASSEMBLER__ */

/*
 * misc
 */

#define NI_HV_XGE_MISC_INTERRUPT 0xf4304c20
#define NI_HV_XGE_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t macI : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MISC_INTENABLE 0xf4304c24
#define NI_HV_XGE_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t macE : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MISC_CONFIG 0xf4304c28
#define NI_HV_XGE_MISC_CONFIG_dft 0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t mode322 : 1; /* bits 30:30 */
		ca_uint32_t gige_mode : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MISC_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_XGE_MISC_FMRO 0xf4304c2c
#define NI_HV_XGE_MISC_FMRO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_XGE_MISC_FMRO_t;
#endif /* !__ASSEMBLER__ */

#define sel_MAC 0x0
#define sel_PCS 0x1
#define sel_WISRX 0x2
#define sel_WISTX 0x3
#define sel_PCS1GERX 0x4
#define sel_PCS1GETX 0x5

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* misc */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_XGE_MISC_INTERRUPT_t INTERRUPT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_XGE_MISC_INTENABLE_t INTENABLE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_XGE_MISC_CONFIG_t CONFIG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_XGE_MISC_FMRO_t FMRO; /* addr: 0x0000000c */
} APB0_NI_HV_XGE_MISC_t;
#endif /* !__ASSEMBLER__ */

#define APB0_NI_HV_XGE_STRIDE 256
#define APB0_NI_HV_XGE_COUNT 2

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XGE */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_XGE_MAC_t MAC; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[89];
	APB0_NI_HV_XGE_MISC_t misc; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd2[89];
} APB0_NI_HV_XGE_t;
#endif /* !__ASSEMBLER__ */

/*
 * SXGMII[0..1]
 */

/*
 * sxgra
 */

#define NI_HV_SXGMII_SXGRA_LINKSPEEDCTL 0xf4305000
#define NI_HV_SXGMII_SXGRA_LINKSPEEDCTL_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t linkspeed : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t autoneg_complete : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_LINKSPEEDCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXGMISCCTL 0xf4305004
#define NI_HV_SXGMII_SXGRA_SXGMISCCTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txgmfreinit : 1; /* bits 0:0 */
		ca_uint32_t txxgmfreinit : 1; /* bits 1:1 */
		ca_uint32_t txpcsfreinit : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxpcsfreinit : 1; /* bits 4:4 */
		ca_uint32_t rxxgmfreinit : 1; /* bits 5:5 */
		ca_uint32_t rxgmfreinit : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXGMISCCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_PCSSDSMISCCTL 0xf4305008
#define NI_HV_SXGMII_SXGRA_PCSSDSMISCCTL_dft 0x00002800

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clk_rdy : 1; /* bits 0:0 */
		ca_uint32_t clk_rdy_sel : 1; /* bits 1:1 */
		ca_uint32_t ber_notify : 1; /* bits 2:2 */
		ca_uint32_t ber_notify_sel : 1; /* bits 3:3 */
		ca_uint32_t rxidle : 1; /* bits 4:4 */
		ca_uint32_t rxidle_sel : 1; /* bits 5:5 */
		ca_uint32_t cfg_md_sel : 1; /* bits 6:6 */
		ca_uint32_t cfg_frc_ld : 1; /* bits 7:7 */
		ca_uint32_t v2analog_sel : 1; /* bits 8:8 */
		ca_uint32_t v2analog : 1; /* bits 9:9 */
		ca_uint32_t rstb_biterr_sel : 1; /* bits 10:10 */
		ca_uint32_t rstb_biterr : 1; /* bits 11:11 */
		ca_uint32_t oobs_rstb_sel : 1; /* bits 12:12 */
		ca_uint32_t oobs_rstb : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_PCSSDSMISCCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_MISCCTL_1 0xf430500c
#define NI_HV_SXGMII_SXGRA_MISCCTL_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fcw : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_MISCCTL_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_MISCCTL_2 0xf4305010
#define NI_HV_SXGMII_SXGRA_MISCCTL_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fcw_max : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_MISCCTL_2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXG_INTERRUPT 0xf4305014
#define NI_HV_SXGMII_SXGRA_SXG_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txgmfptradjerr_intI : 1; /* bits 0:0 */
		ca_uint32_t txxgmfptradjerr_intI : 1; /* bits 1:1 */
		ca_uint32_t txpfptradjerr_intI : 1; /* bits 2:2 */
		ca_uint32_t rxgmfptradjerr_intI : 1; /* bits 3:3 */
		ca_uint32_t rxxgmfptradjerr_intI : 1; /* bits 4:4 */
		ca_uint32_t rxpfptradjerr_intI : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t linkup_intI : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ancfgwddet_intI : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t ancfgwdabdet_intI : 1; /* bits 16:16 */
		ca_uint32_t rsrvd4 : 3;
		ca_uint32_t ancfgwdnulldet_intI : 1; /* bits 20:20 */
		ca_uint32_t rsrvd5 : 3;
		ca_uint32_t anidledet_intI : 1; /* bits 24:24 */
		ca_uint32_t rsrvd6 : 3;
		ca_uint32_t hwancomplete_intI : 1; /* bits 28:28 */
		ca_uint32_t xfipcslnkfault_IntI : 1; /* bits 29:29 */
		ca_uint32_t xfipcsrxerr_IntI : 1; /* bits 30:30 */
		ca_uint32_t xfipcs_intI : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXG_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXG_INTENABLE 0xf4305018
#define NI_HV_SXGMII_SXGRA_SXG_INTENABLE_dft 0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txgmfptradjerr_intE : 1; /* bits 0:0 */
		ca_uint32_t txxgmfptradjerr_intE : 1; /* bits 1:1 */
		ca_uint32_t txpfptradjerr_intE : 1; /* bits 2:2 */
		ca_uint32_t rxgmfptradjerr_intE : 1; /* bits 3:3 */
		ca_uint32_t rxxgmfptradjerr_intE : 1; /* bits 4:4 */
		ca_uint32_t rxpfptradjerr_intE : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t linkup_intE : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ancfgwddet_intE : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t ancfgwdabdet_intE : 1; /* bits 16:16 */
		ca_uint32_t rsrvd4 : 3;
		ca_uint32_t ancfgwdnulldet_intE : 1; /* bits 20:20 */
		ca_uint32_t rsrvd5 : 3;
		ca_uint32_t anidledet_intE : 1; /* bits 24:24 */
		ca_uint32_t rsrvd6 : 3;
		ca_uint32_t hwancomplete_intE : 1; /* bits 28:28 */
		ca_uint32_t xfipcslnkfault_intE : 1; /* bits 29:29 */
		ca_uint32_t xfipcsrxerr_intE : 1; /* bits 30:30 */
		ca_uint32_t xfipcs_intE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXG_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXGSTS 0xf430501c
#define NI_HV_SXGMII_SXGRA_SXGSTS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t linkup : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXGSTS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXGRST 0xf4305020
#define NI_HV_SXGMII_SXGRA_SXGRST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cpureset : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXGRST_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCFGWD 0xf4305024
#define NI_HV_SXGMII_SXGRA_ANTXCFGWD_dft 0x9c000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwd : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCFGWD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCFGWDCTL 0xf4305028
#define NI_HV_SXGMII_SXGRA_ANTXCFGWDCTL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwdctl : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCFGWDCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCFGWD2 0xf430502c
#define NI_HV_SXGMII_SXGRA_ANTXCFGWD2_dft 0x9c960103

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwd2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCFGWD2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCFGWD2CTL 0xf4305030
#define NI_HV_SXGMII_SXGRA_ANTXCFGWD2CTL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwd2ctl : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCFGWD2CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCFGWD3 0xf4305034
#define NI_HV_SXGMII_SXGRA_ANTXCFGWD3_dft 0x9cd60103

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwd3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCFGWD3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCFGWD3CTL 0xf4305038
#define NI_HV_SXGMII_SXGRA_ANTXCFGWD3CTL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwd3ctl : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCFGWD3CTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXIDLECFGWD 0xf430503c
#define NI_HV_SXGMII_SXGRA_ANTXIDLECFGWD_dft 0x07070707

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txidlecfgwd : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXIDLECFGWD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXIDLECFGWDCTL 0xf4305040
#define NI_HV_SXGMII_SXGRA_ANTXIDLECFGWDCTL_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txidlecfgwdctl : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXIDLECFGWDCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANTXCTL 0xf4305044
#define NI_HV_SXGMII_SXGRA_ANTXCTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txcfgwden : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t txcfgwd2en : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 7;
		ca_uint32_t txcfgwd3en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd3 : 7;
		ca_uint32_t txidlecfgwden : 1; /* bits 24:24 */
		ca_uint32_t rsrvd4 : 7;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANTXCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANRXCFGWDCTL 0xf4305048
#define NI_HV_SXGMII_SXGRA_ANRXCFGWDCTL_dft 0x0300009c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxcfgwd_ctlchar : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t rxcfgwd_opcode : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANRXCFGWDCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANRXCTL 0xf430504c
#define NI_HV_SXGMII_SXGRA_ANRXCTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxcfgwddeten : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t rxcfgwdabdeten : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t rxcfgwdnulldeten : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t rxidledeten : 1; /* bits 16:16 */
		ca_uint32_t rsrvd4 : 15;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANRXCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANRXCFGWDAB 0xf4305050
#define NI_HV_SXGMII_SXGRA_ANRXCFGWDAB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxcfgrcvd : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANRXCFGWDAB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANRXCFGWD 0xf4305054
#define NI_HV_SXGMII_SXGRA_ANRXCFGWD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxcfgrcvd : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANRXCFGWD_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_PCSCTL 0xf4305058
#define NI_HV_SXGMII_SXGRA_PCSCTL_dft 0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcs1gen : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t hisgmiien : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 26;
		ca_uint32_t pcs1gcpureset : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_PCSCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXG_INTERRUPT1 0xf430505c
#define NI_HV_SXGMII_SXGRA_SXG_INTERRUPT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txgmfptradjerr_intI : 1; /* bits 0:0 */
		ca_uint32_t txxgmfptradjerr_intI : 1; /* bits 1:1 */
		ca_uint32_t txpfptradjerr_intI : 1; /* bits 2:2 */
		ca_uint32_t rxgmfptradjerr_intI : 1; /* bits 3:3 */
		ca_uint32_t rxxgmfptradjerr_intI : 1; /* bits 4:4 */
		ca_uint32_t rxpfptradjerr_intI : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t linkup_intI : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ancfgwddet_intI : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t ancfgwdabdet_intI : 1; /* bits 16:16 */
		ca_uint32_t rsrvd4 : 3;
		ca_uint32_t ancfgwdnulldet_intI : 1; /* bits 20:20 */
		ca_uint32_t rsrvd5 : 3;
		ca_uint32_t anidledet_intI : 1; /* bits 24:24 */
		ca_uint32_t rsrvd6 : 4;
		ca_uint32_t xfipcslnkfault_IntI : 1; /* bits 29:29 */
		ca_uint32_t xfipcsrxerr_IntI : 1; /* bits 30:30 */
		ca_uint32_t xfipcs_intI : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXG_INTERRUPT1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXG_INTENABLE1 0xf4305060
#define NI_HV_SXGMII_SXGRA_SXG_INTENABLE1_dft 0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txgmfptradjerr_intE : 1; /* bits 0:0 */
		ca_uint32_t txxgmfptradjerr_intE : 1; /* bits 1:1 */
		ca_uint32_t txpfptradjerr_intE : 1; /* bits 2:2 */
		ca_uint32_t rxgmfptradjerr_intE : 1; /* bits 3:3 */
		ca_uint32_t rxxgmfptradjerr_intE : 1; /* bits 4:4 */
		ca_uint32_t rxpfptradjerr_intE : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t linkup_intE : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ancfgwddet_intE : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t ancfgwdabdet_intE : 1; /* bits 16:16 */
		ca_uint32_t rsrvd4 : 3;
		ca_uint32_t ancfgwdnulldet_intE : 1; /* bits 20:20 */
		ca_uint32_t rsrvd5 : 3;
		ca_uint32_t anidledet_intE : 1; /* bits 24:24 */
		ca_uint32_t rsrvd6 : 4;
		ca_uint32_t xfipcslnkfault_intE : 1; /* bits 29:29 */
		ca_uint32_t xfipcsrxerr_intE : 1; /* bits 30:30 */
		ca_uint32_t xfipcs_intE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXG_INTENABLE1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_XFIPCSMISCCTL_1 0xf4305064
#define NI_HV_SXGMII_SXGRA_XFIPCSMISCCTL_1_dft 0x00110080

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intp_src : 1; /* bits 0:0 */
		ca_uint32_t unidir_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t expand_ratio : 5; /* bits 8:4 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t cfg_ack_dly : 2; /* bits 13:12 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t cfg_clr_start : 3; /* bits 18:16 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t cfg_clr_len : 3; /* bits 22:20 */
		ca_uint32_t rsrvd5 : 9;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_XFIPCSMISCCTL_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_XFIPCSMISCSTS_1 0xf4305068
#define NI_HV_SXGMII_SXGRA_XFIPCSMISCSTS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t link_fault : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_XFIPCSMISCSTS_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_ANMISCCTL 0xf430506c
#define NI_HV_SXGMII_SXGRA_ANMISCCTL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t blkmactxdata : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_ANMISCCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXGHWANCTL 0xf4305070
#define NI_HV_SXGMII_SXGRA_SXGHWANCTL_dft 0xfffff100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hwanenable : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t hwanstart : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t hwancopyrcvdspd : 1; /* bits 8:8 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t hwannoconsistchk : 1; /* bits 11:11 */
		ca_uint32_t linktmr : 20; /* bits 31:12 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXGHWANCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXGHWANSTS 0xf4305074
#define NI_HV_SXGMII_SXGRA_SXGHWANSTS_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hwanlinkspeed : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t hwancomplete : 1; /* bits 15:15 */
		ca_uint32_t hwanrxcfgwd : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXGHWANSTS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SXGRA_SXGDBG1 0xf4305078
#define NI_HV_SXGMII_SXGRA_SXGDBG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t anstate : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t hwanstate : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SXGRA_SXGDBG1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* sxgra */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_SXGMII_SXGRA_LINKSPEEDCTL_t LINKSPEEDCTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_SXGMII_SXGRA_SXGMISCCTL_t SXGMISCCTL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_SXGMII_SXGRA_PCSSDSMISCCTL_t PCSSDSMISCCTL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_SXGMII_SXGRA_MISCCTL_1_t MISCCTL_1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_SXGMII_SXGRA_MISCCTL_2_t MISCCTL_2; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_SXGMII_SXGRA_SXG_INTERRUPT_t SXG_INTERRUPT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_SXGMII_SXGRA_SXG_INTENABLE_t SXG_INTENABLE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_SXGMII_SXGRA_SXGSTS_t SXGSTS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_SXGMII_SXGRA_SXGRST_t SXGRST; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	NI_HV_SXGMII_SXGRA_ANTXCFGWD_t ANTXCFGWD; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	NI_HV_SXGMII_SXGRA_ANTXCFGWDCTL_t ANTXCFGWDCTL; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	NI_HV_SXGMII_SXGRA_ANTXCFGWD2_t ANTXCFGWD2; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	NI_HV_SXGMII_SXGRA_ANTXCFGWD2CTL_t ANTXCFGWD2CTL; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	NI_HV_SXGMII_SXGRA_ANTXCFGWD3_t ANTXCFGWD3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	NI_HV_SXGMII_SXGRA_ANTXCFGWD3CTL_t ANTXCFGWD3CTL; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	NI_HV_SXGMII_SXGRA_ANTXIDLECFGWD_t ANTXIDLECFGWD; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	NI_HV_SXGMII_SXGRA_ANTXIDLECFGWDCTL_t ANTXIDLECFGWDCTL; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	NI_HV_SXGMII_SXGRA_ANTXCTL_t ANTXCTL; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	NI_HV_SXGMII_SXGRA_ANRXCFGWDCTL_t ANRXCFGWDCTL; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	NI_HV_SXGMII_SXGRA_ANRXCTL_t ANRXCTL; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	NI_HV_SXGMII_SXGRA_ANRXCFGWDAB_t ANRXCFGWDAB; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	NI_HV_SXGMII_SXGRA_ANRXCFGWD_t ANRXCFGWD; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	NI_HV_SXGMII_SXGRA_PCSCTL_t PCSCTL; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	NI_HV_SXGMII_SXGRA_SXG_INTERRUPT1_t SXG_INTERRUPT1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	NI_HV_SXGMII_SXGRA_SXG_INTENABLE1_t SXG_INTENABLE1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	NI_HV_SXGMII_SXGRA_XFIPCSMISCCTL_1_t XFIPCSMISCCTL_1; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	NI_HV_SXGMII_SXGRA_XFIPCSMISCSTS_1_t XFIPCSMISCSTS_1; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	NI_HV_SXGMII_SXGRA_ANMISCCTL_t ANMISCCTL; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	NI_HV_SXGMII_SXGRA_SXGHWANCTL_t SXGHWANCTL; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	NI_HV_SXGMII_SXGRA_SXGHWANSTS_t SXGHWANSTS; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	NI_HV_SXGMII_SXGRA_SXGDBG1_t SXGDBG1; /* addr: 0x00000078 */
} APB0_NI_HV_SXGMII_SXGRA_t;
#endif /* !__ASSEMBLER__ */

/*
 * pcs
 */

#define NI_HV_SXGMII_PCS_PCSCONTROL1 0xf4305200
#define NI_HV_SXGMII_PCS_PCSCONTROL1_dft 0x00002040

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t speedselval : 4; /* bits 5:2 */
		ca_uint32_t speedsellsb : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t speedselmsb : 1; /* bits 13:13 */
		ca_uint32_t loopback : 1; /* bits 14:14 */
		ca_uint32_t reset : 1; /* bits 15:15 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSCONTROL1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSSTATUS1 0xf4305204
#define NI_HV_SXGMII_PCS_PCSSTATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t lopwrable : 1; /* bits 1:1 */
		ca_uint32_t rxlinksts : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t fault : 1; /* bits 7:7 */
		ca_uint32_t rxlpiind : 1; /* bits 8:8 */
		ca_uint32_t txlpiind : 1; /* bits 9:9 */
		ca_uint32_t rxlpircvd : 1; /* bits 10:10 */
		ca_uint32_t txlpircvd : 1; /* bits 11:11 */
		ca_uint32_t rsrvd3 : 20;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSSTATUS1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSDEVIDMSB 0xf4305208
#define NI_HV_SXGMII_PCS_PCSDEVIDMSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcsdevidmsb : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSDEVIDMSB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSDEVIDLSB 0xf430520c
#define NI_HV_SXGMII_PCS_PCSDEVIDLSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcsdevidlsb : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSDEVIDLSB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSSPDABLTY 0xf4305210
#define NI_HV_SXGMII_PCS_PCSSPDABLTY_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tengcapable : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSSPDABLTY_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSDEVPKGLSB 0xf4305214
#define NI_HV_SXGMII_PCS_PCSDEVPKGLSB_dft 0x0000002a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t pmdpmaprsnt : 1; /* bits 1:1 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t pcsprsnt : 1; /* bits 3:3 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t dtexsprsnt : 1; /* bits 5:5 */
		ca_uint32_t rsrvd4 : 26;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSDEVPKGLSB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSDEVPKGMSB 0xf4305218
#define NI_HV_SXGMII_PCS_PCSDEVPKGMSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsvd : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSDEVPKGMSB_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSCONTROL2 0xf430521c
#define NI_HV_SXGMII_PCS_PCSCONTROL2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcstypesel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSCONTROL2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSSTATUS2 0xf4305220
#define NI_HV_SXGMII_PCS_PCSSTATUS2_dft 0x00008000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t rxfault : 1; /* bits 10:10 */
		ca_uint32_t txfault : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t devprsnt : 2; /* bits 15:14 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSSTATUS2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSPKGID0 0xf4305238
#define NI_HV_SXGMII_PCS_PCSPKGID0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcspkgid0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSPKGID0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSPKGID1 0xf430523c
#define NI_HV_SXGMII_PCS_PCSPKGID1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcspkgid1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSPKGID1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_EEECAP 0xf4305250
#define NI_HV_SXGMII_PCS_EEECAP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t tengbasekreee : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_EEECAP_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_EEEWKERRCNTR 0xf4305258
#define NI_HV_SXGMII_PCS_EEEWKERRCNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wkerrcntr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_EEEWKERRCNTR_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTCTL 0xf4305264
#define NI_HV_SXGMII_PCS_PCSTSTCTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnsel : 2; /* bits 1:0 */
		ca_uint32_t txtstptrnen : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSSTS1 0xf4305280
#define NI_HV_SXGMII_PCS_PCSSTS1_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t block : 1; /* bits 0:0 */
		ca_uint32_t highber : 1; /* bits 1:1 */
		ca_uint32_t prbs31able : 1; /* bits 2:2 */
		ca_uint32_t prbs9able : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t linkup : 1; /* bits 12:12 */
		ca_uint32_t rsrvd2 : 19;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSSTS1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSSTS2 0xf4305284
#define NI_HV_SXGMII_PCS_PCSSTS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t errblks : 8; /* bits 7:0 */
		ca_uint32_t ber : 6; /* bits 13:8 */
		ca_uint32_t latchedhiber : 1; /* bits 14:14 */
		ca_uint32_t latchedblklock : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSSTS2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNA0 0xf4305288
#define NI_HV_SXGMII_PCS_PCSTSTPTRNA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNA0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNA1 0xf430528c
#define NI_HV_SXGMII_PCS_PCSTSTPTRNA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNA1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNA2 0xf4305290
#define NI_HV_SXGMII_PCS_PCSTSTPTRNA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda2 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNA2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNA3 0xf4305294
#define NI_HV_SXGMII_PCS_PCSTSTPTRNA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda3 : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNA3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNB0 0xf4305298
#define NI_HV_SXGMII_PCS_PCSTSTPTRNB0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda0 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNB0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNB1 0xf430529c
#define NI_HV_SXGMII_PCS_PCSTSTPTRNB1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda1 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNB1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNB2 0xf43052a0
#define NI_HV_SXGMII_PCS_PCSTSTPTRNB2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda2 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNB2_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNB3 0xf43052a4
#define NI_HV_SXGMII_PCS_PCSTSTPTRNB3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnseeda3 : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNB3_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNCTL 0xf43052a8
#define NI_HV_SXGMII_PCS_PCSTSTPTRNCTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dtptrnsel : 1; /* bits 0:0 */
		ca_uint32_t tstptrnsel : 1; /* bits 1:1 */
		ca_uint32_t rxtstptrnen : 1; /* bits 2:2 */
		ca_uint32_t txtstptrnen : 1; /* bits 3:3 */
		ca_uint32_t txprbs31tstptrnen : 1; /* bits 4:4 */
		ca_uint32_t rxprbs31tstptrnen : 1; /* bits 5:5 */
		ca_uint32_t txprbs9tstptrnen : 1; /* bits 6:6 */
		ca_uint32_t rxprbs9tstptrnen : 1; /* bits 7:7 */
		ca_uint32_t txprbs15tstptrnen : 1; /* bits 8:8 */
		ca_uint32_t rxprbs15tstptrnen : 1; /* bits 9:9 */
		ca_uint32_t txprbs23tstptrnen : 1; /* bits 10:10 */
		ca_uint32_t rxprbs23tstptrnen : 1; /* bits 11:11 */
		ca_uint32_t txprbs7tstptrnen : 1; /* bits 12:12 */
		ca_uint32_t rxprbs7tstptrnen : 1; /* bits 13:13 */
		ca_uint32_t txprbs11tstptrnen : 1; /* bits 14:14 */
		ca_uint32_t rxprbs11tstptrnen : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNCTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSTSTPTRNERRCNTR 0xf43052ac
#define NI_HV_SXGMII_PCS_PCSTSTPTRNERRCNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tstptrnerrcntr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSTSTPTRNERRCNTR_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32768 0xf43052e0
#define NI_HV_SXGMII_PCS_PCSREG32768_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg_dt_sel_xor : 1; /* bits 0:0 */
		ca_uint32_t cfg_sel_ber_notify : 1; /* bits 1:1 */
		ca_uint32_t rsvd_2 : 1; /* bits 2:2 */
		ca_uint32_t cfg_rst_fifo : 1; /* bits 3:3 */
		ca_uint32_t cfg_sqwav_n : 4; /* bits 7:4 */
		ca_uint32_t cfg_prbs31_seed : 5; /* bits 12:8 */
		ca_uint32_t cfg_tx_tm : 1; /* bits 13:13 */
		ca_uint32_t cfg_rx_tm : 1; /* bits 14:14 */
		ca_uint32_t cfg_scr_bypass_en : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32768_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32769 0xf43052e4
#define NI_HV_SXGMII_PCS_PCSREG32769_dft 0x0000c800

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg_xgm_trlpk : 1; /* bits 0:0 */
		ca_uint32_t cfg_xgm_rtlpk : 1; /* bits 1:1 */
		ca_uint32_t cfg_afe_lpk : 1; /* bits 2:2 */
		ca_uint32_t cfg_rem_lpk : 1; /* bits 3:3 */
		ca_uint32_t cfg_dig_lpk : 1; /* bits 4:4 */
		ca_uint32_t cfg_rs_trlpk : 1; /* bits 5:5 */
		ca_uint32_t cfg_rs_rtlpk : 1; /* bits 6:6 */
		ca_uint32_t cfg_rs_bypass : 1; /* bits 7:7 */
		ca_uint32_t cfg_clk_wr_inv : 1; /* bits 8:8 */
		ca_uint32_t cfg_clk_rd_inv : 1; /* bits 9:9 */
		ca_uint32_t cfg_tx_tsl_val : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32769_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32770 0xf43052e8
#define NI_HV_SXGMII_PCS_PCSREG32770_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32770 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32770_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32771 0xf43052ec
#define NI_HV_SXGMII_PCS_PCSREG32771_dft 0x0000445c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_tql_val : 15; /* bits 14:0 */
		ca_uint32_t eee_en : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32771_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32772 0xf43052f0
#define NI_HV_SXGMII_PCS_PCSREG32772_dft 0x00006eaa

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32772 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32772_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32773 0xf43052f4
#define NI_HV_SXGMII_PCS_PCSREG32773_dft 0x0000e1a8

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32773 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32773_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32774 0xf43052f8
#define NI_HV_SXGMII_PCS_PCSREG32774_dft 0x00006473

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32774 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32774_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32775 0xf43052fc
#define NI_HV_SXGMII_PCS_PCSREG32775_dft 0x00002303

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32775 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32775_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32776 0xf4305300
#define NI_HV_SXGMII_PCS_PCSREG32776_dft 0x00007670

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg_idle_intp_val : 7; /* bits 6:0 */
		ca_uint32_t rsvd : 1; /* bits 7:7 */
		ca_uint32_t cfg_lpi_intp_val : 7; /* bits 14:8 */
		ca_uint32_t cfg_rev_intr_pl : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32776_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32780 0xf4305310
#define NI_HV_SXGMII_PCS_PCSREG32780_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32780 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32780_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32781 0xf4305314
#define NI_HV_SXGMII_PCS_PCSREG32781_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32781 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32781_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32782 0xf4305318
#define NI_HV_SXGMII_PCS_PCSREG32782_dft 0x0000015a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32782 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32782_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32783 0xf430531c
#define NI_HV_SXGMII_PCS_PCSREG32783_dft 0x00005a5a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rg32783 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32783_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32784 0xf4305320
#define NI_HV_SXGMII_PCS_PCSREG32784_dft 0x0000432e

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg_intp_idle : 8; /* bits 7:0 */
		ca_uint32_t cfg_intp_s0 : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32784_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_PCS_PCSREG32785 0xf4305324
#define NI_HV_SXGMII_PCS_PCSREG32785_dft 0x000080a8

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg_intp_s4 : 8; /* bits 7:0 */
		ca_uint32_t rsvd : 7; /* bits 14:8 */
		ca_uint32_t cfg_intp_sel : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_PCS_PCSREG32785_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pcs */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_SXGMII_PCS_PCSCONTROL1_t PCSCONTROL1; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_SXGMII_PCS_PCSSTATUS1_t PCSSTATUS1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_SXGMII_PCS_PCSDEVIDMSB_t PCSDEVIDMSB; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	NI_HV_SXGMII_PCS_PCSDEVIDLSB_t PCSDEVIDLSB; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	NI_HV_SXGMII_PCS_PCSSPDABLTY_t PCSSPDABLTY; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	NI_HV_SXGMII_PCS_PCSDEVPKGLSB_t PCSDEVPKGLSB; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	NI_HV_SXGMII_PCS_PCSDEVPKGMSB_t PCSDEVPKGMSB; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	NI_HV_SXGMII_PCS_PCSCONTROL2_t PCSCONTROL2; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	NI_HV_SXGMII_PCS_PCSSTATUS2_t PCSSTATUS2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[23];
	NI_HV_SXGMII_PCS_PCSPKGID0_t PCSPKGID0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd10[3];
	NI_HV_SXGMII_PCS_PCSPKGID1_t PCSPKGID1; /* addr: 0x0000003c */
	ca_uint32_t rsrvd11[19];
	NI_HV_SXGMII_PCS_EEECAP_t EEECAP; /* addr: 0x00000050 */
	ca_uint32_t rsrvd12[7];
	NI_HV_SXGMII_PCS_EEEWKERRCNTR_t EEEWKERRCNTR; /* addr: 0x00000058 */
	ca_uint32_t rsrvd13[11];
	NI_HV_SXGMII_PCS_PCSTSTCTL_t PCSTSTCTL; /* addr: 0x00000064 */
	ca_uint32_t rsrvd14[27];
	NI_HV_SXGMII_PCS_PCSSTS1_t PCSSTS1; /* addr: 0x00000080 */
	ca_uint32_t rsrvd15[3];
	NI_HV_SXGMII_PCS_PCSSTS2_t PCSSTS2; /* addr: 0x00000084 */
	ca_uint32_t rsrvd16[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNA0_t PCSTSTPTRNA0; /* addr: 0x00000088 */
	ca_uint32_t rsrvd17[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNA1_t PCSTSTPTRNA1; /* addr: 0x0000008c */
	ca_uint32_t rsrvd18[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNA2_t PCSTSTPTRNA2; /* addr: 0x00000090 */
	ca_uint32_t rsrvd19[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNA3_t PCSTSTPTRNA3; /* addr: 0x00000094 */
	ca_uint32_t rsrvd20[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNB0_t PCSTSTPTRNB0; /* addr: 0x00000098 */
	ca_uint32_t rsrvd21[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNB1_t PCSTSTPTRNB1; /* addr: 0x0000009c */
	ca_uint32_t rsrvd22[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNB2_t PCSTSTPTRNB2; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd23[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNB3_t PCSTSTPTRNB3; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd24[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNCTL_t PCSTSTPTRNCTL; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd25[3];
	NI_HV_SXGMII_PCS_PCSTSTPTRNERRCNTR_t PCSTSTPTRNERRCNTR; /* addr: 0x000000ac */
	ca_uint32_t rsrvd26[51];
	NI_HV_SXGMII_PCS_PCSREG32768_t PCSREG32768; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd27[3];
	NI_HV_SXGMII_PCS_PCSREG32769_t PCSREG32769; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd28[3];
	NI_HV_SXGMII_PCS_PCSREG32770_t PCSREG32770; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd29[3];
	NI_HV_SXGMII_PCS_PCSREG32771_t PCSREG32771; /* addr: 0x000000ec */
	ca_uint32_t rsrvd30[3];
	NI_HV_SXGMII_PCS_PCSREG32772_t PCSREG32772; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd31[3];
	NI_HV_SXGMII_PCS_PCSREG32773_t PCSREG32773; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd32[3];
	NI_HV_SXGMII_PCS_PCSREG32774_t PCSREG32774; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd33[3];
	NI_HV_SXGMII_PCS_PCSREG32775_t PCSREG32775; /* addr: 0x000000fc */
	ca_uint32_t rsrvd34[3];
	NI_HV_SXGMII_PCS_PCSREG32776_t PCSREG32776; /* addr: 0x00000100 */
	ca_uint32_t rsrvd35[15];
	NI_HV_SXGMII_PCS_PCSREG32780_t PCSREG32780; /* addr: 0x00000110 */
	ca_uint32_t rsrvd36[3];
	NI_HV_SXGMII_PCS_PCSREG32781_t PCSREG32781; /* addr: 0x00000114 */
	ca_uint32_t rsrvd37[3];
	NI_HV_SXGMII_PCS_PCSREG32782_t PCSREG32782; /* addr: 0x00000118 */
	ca_uint32_t rsrvd38[3];
	NI_HV_SXGMII_PCS_PCSREG32783_t PCSREG32783; /* addr: 0x0000011c */
	ca_uint32_t rsrvd39[3];
	NI_HV_SXGMII_PCS_PCSREG32784_t PCSREG32784; /* addr: 0x00000120 */
	ca_uint32_t rsrvd40[3];
	NI_HV_SXGMII_PCS_PCSREG32785_t PCSREG32785; /* addr: 0x00000124 */
} APB0_NI_HV_SXGMII_PCS_t;
#endif /* !__ASSEMBLER__ */

/*
 * sfp_pcs
 */

#define NI_HV_SXGMII_SFP_PCS_CONTROL 0xf4305400
#define NI_HV_SXGMII_SFP_PCS_CONTROL_dft 0x00000140

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t AutoNegIdleDetectDuration : 1; /* bits 4:4 */
		ca_uint32_t ResetStats : 1; /* bits 5:5 */
		ca_uint32_t SpMSB : 1; /* bits 6:6 */
		ca_uint32_t ColTest : 1; /* bits 7:7 */
		ca_uint32_t DuplexMode : 1; /* bits 8:8 */
		ca_uint32_t AutoNegRestart : 1; /* bits 9:9 */
		ca_uint32_t Isolate : 1; /* bits 10:10 */
		ca_uint32_t PwrDn : 1; /* bits 11:11 */
		ca_uint32_t AutoNegEn : 1; /* bits 12:12 */
		ca_uint32_t SpLSB : 1; /* bits 13:13 */
		ca_uint32_t Loopback : 1; /* bits 14:14 */
		ca_uint32_t Reset : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_STATUS 0xf4305404
#define NI_HV_SXGMII_SFP_PCS_STATUS_dft 0x00000009

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t XtCap : 1; /* bits 0:0 */
		ca_uint32_t Jabber : 1; /* bits 1:1 */
		ca_uint32_t LinkStat : 1; /* bits 2:2 */
		ca_uint32_t AutoNegAb : 1; /* bits 3:3 */
		ca_uint32_t RmtFault : 1; /* bits 4:4 */
		ca_uint32_t AutoNegComplete : 1; /* bits 5:5 */
		ca_uint32_t RSVD1 : 1; /* bits 6:6 */
		ca_uint32_t RSVD0 : 1; /* bits 7:7 */
		ca_uint32_t ExtStat : 1; /* bits 8:8 */
		ca_uint32_t One00BT2HD : 1; /* bits 9:9 */
		ca_uint32_t One00BT2FD : 1; /* bits 10:10 */
		ca_uint32_t One0HD : 1; /* bits 11:11 */
		ca_uint32_t One0FD : 1; /* bits 12:12 */
		ca_uint32_t One00BXHD : 1; /* bits 13:13 */
		ca_uint32_t One00BXFD : 1; /* bits 14:14 */
		ca_uint32_t One00BT4 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_PHY 0xf4305408
#define NI_HV_SXGMII_SFP_PCS_PHY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t PhyId : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_PHY_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_DEV_ABILITY 0xf4305410
#define NI_HV_SXGMII_SFP_PCS_DEV_ABILITY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t FullDuplex : 1; /* bits 5:5 */
		ca_uint32_t HalfDuplex : 1; /* bits 6:6 */
		ca_uint32_t PS : 2; /* bits 8:7 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t RmtFault : 2; /* bits 13:12 */
		ca_uint32_t ACK : 1; /* bits 14:14 */
		ca_uint32_t NextPage : 1; /* bits 15:15 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_DEV_ABILITY_t;
#endif /* !__ASSEMBLER__ */

#define RmtFault_OK 0x0
#define RmtFault_LINKFAIL 0x1
#define RmtFault_OFFLINE 0x2
#define RmtFault_ANERROR 0x3
#define PS_NOPAUSE 0x0
#define PS_SYMPAUSE 0x1
#define PS_ASYMPAUSE 0x2

#define NI_HV_SXGMII_SFP_PCS_PARTNER_ABILITY 0xf4305414
#define NI_HV_SXGMII_SFP_PCS_PARTNER_ABILITY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t FullDuplex : 1; /* bits 5:5 */
		ca_uint32_t HalfDuplex : 1; /* bits 6:6 */
		ca_uint32_t PS : 2; /* bits 8:7 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t RmtFault : 2; /* bits 13:12 */
		ca_uint32_t ACK : 1; /* bits 14:14 */
		ca_uint32_t NextPage : 1; /* bits 15:15 */
		ca_uint32_t rsrvd3 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_PARTNER_ABILITY_t;
#endif /* !__ASSEMBLER__ */

#define PS_PAUSE 0x3

#define NI_HV_SXGMII_SFP_PCS_AN_EXPANSION 0xf4305418
#define NI_HV_SXGMII_SFP_PCS_AN_EXPANSION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t NextPageAb : 1; /* bits 1:1 */
		ca_uint32_t PageRcv : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 29;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_AN_EXPANSION_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_DEVICE_NEXT_PAGE 0xf430541c
#define NI_HV_SXGMII_SFP_PCS_DEVICE_NEXT_PAGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NA : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_DEVICE_NEXT_PAGE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_PARTNER_NEXT_PAGE 0xf4305420
#define NI_HV_SXGMII_SFP_PCS_PARTNER_NEXT_PAGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NA : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_PARTNER_NEXT_PAGE_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_CNTL 0xf4305424
#define NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_CNTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NA : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_CNTL_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_STAT 0xf4305428
#define NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NA : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_STAT_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_EXTENDED_STATUS 0xf430543c
#define NI_HV_SXGMII_SFP_PCS_EXTENDED_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NA : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_EXTENDED_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_AUTONEG_TRACE 0xf4305440
#define NI_HV_SXGMII_SFP_PCS_AUTONEG_TRACE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t state : 3; /* bits 2:0 */
		ca_uint32_t state_d1 : 3; /* bits 5:3 */
		ca_uint32_t state_d2 : 3; /* bits 8:6 */
		ca_uint32_t state_d3 : 3; /* bits 11:9 */
		ca_uint32_t state_d4 : 3; /* bits 14:12 */
		ca_uint32_t reserved : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_AUTONEG_TRACE_t;
#endif /* !__ASSEMBLER__ */

#define state_AUTONEG_ENA 0x0
#define state_AUTONEG_RESTART 0x1
#define state_ABILITY_DETECT 0x2
#define state_ACK_DETECT 0x3
#define state_COMPLETE_ACK 0x4
#define state_IDLE_DETECT 0x5
#define state_LINK_OK 0x6
#define state_NO_AN_LINK 0x7

#define NI_HV_SXGMII_SFP_PCS_REV 0xf4305444
#define NI_HV_SXGMII_SFP_PCS_REV_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REV : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_REV_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_LINK_TIMER_0 0xf4305448
#define NI_HV_SXGMII_SFP_PCS_LINK_TIMER_0_dft 0x000012d0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t LINK_TIMER0 : 1; /* bits 0:0 */
		ca_uint32_t LINK_TIMER : 15; /* bits 15:1 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_LINK_TIMER_0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_LINK_TIMER_1 0xf430544c
#define NI_HV_SXGMII_SFP_PCS_LINK_TIMER_1_dft 0x00000013

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t LINK_TIMER : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_LINK_TIMER_1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR1 0xf4305454
#define NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR1_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR0 0xf4305458
#define NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR0_t;
#endif /* !__ASSEMBLER__ */

#define NI_HV_SXGMII_SFP_PCS_DEBUG 0xf430545c
#define NI_HV_SXGMII_SFP_PCS_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flip_rx : 1; /* bits 0:0 */
		ca_uint32_t flip_tx : 1; /* bits 1:1 */
		ca_uint32_t reorder_rx : 1; /* bits 2:2 */
		ca_uint32_t reorder_tx : 1; /* bits 3:3 */
		ca_uint32_t mode_20b : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} NI_HV_SXGMII_SFP_PCS_DEBUG_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* sfp_pcs */
#ifndef __ASSEMBLER__
typedef struct {
	NI_HV_SXGMII_SFP_PCS_CONTROL_t CONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	NI_HV_SXGMII_SFP_PCS_STATUS_t STATUS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	NI_HV_SXGMII_SFP_PCS_PHY_t PHY; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[7];
	NI_HV_SXGMII_SFP_PCS_DEV_ABILITY_t DEV_ABILITY; /* addr: 0x00000010 */
	ca_uint32_t rsrvd4[3];
	NI_HV_SXGMII_SFP_PCS_PARTNER_ABILITY_t PARTNER_ABILITY; /* addr: 0x00000014 */
	ca_uint32_t rsrvd5[3];
	NI_HV_SXGMII_SFP_PCS_AN_EXPANSION_t AN_EXPANSION; /* addr: 0x00000018 */
	ca_uint32_t rsrvd6[3];
	NI_HV_SXGMII_SFP_PCS_DEVICE_NEXT_PAGE_t
	  DEVICE_NEXT_PAGE; /* addr: 0x0000001c */
	ca_uint32_t rsrvd7[3];
	NI_HV_SXGMII_SFP_PCS_PARTNER_NEXT_PAGE_t
	  PARTNER_NEXT_PAGE; /* addr: 0x00000020 */
	ca_uint32_t rsrvd8[3];
	NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_CNTL_t
	  MASTER_SLAVE_CNTL; /* addr: 0x00000024 */
	ca_uint32_t rsrvd9[3];
	NI_HV_SXGMII_SFP_PCS_MASTER_SLAVE_STAT_t
	  MASTER_SLAVE_STAT; /* addr: 0x00000028 */
	ca_uint32_t rsrvd10[19];
	NI_HV_SXGMII_SFP_PCS_EXTENDED_STATUS_t EXTENDED_STATUS; /* addr: 0x0000003c */
	ca_uint32_t rsrvd11[3];
	NI_HV_SXGMII_SFP_PCS_AUTONEG_TRACE_t AUTONEG_TRACE; /* addr: 0x00000040 */
	ca_uint32_t rsrvd12[3];
	NI_HV_SXGMII_SFP_PCS_REV_t REV; /* addr: 0x00000044 */
	ca_uint32_t rsrvd13[3];
	NI_HV_SXGMII_SFP_PCS_LINK_TIMER_0_t LINK_TIMER_0; /* addr: 0x00000048 */
	ca_uint32_t rsrvd14[3];
	NI_HV_SXGMII_SFP_PCS_LINK_TIMER_1_t LINK_TIMER_1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd15[7];
	NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR1_t
	  RX_8B10B_DEC_ERR1; /* addr: 0x00000054 */
	ca_uint32_t rsrvd16[3];
	NI_HV_SXGMII_SFP_PCS_RX_8B10B_DEC_ERR0_t
	  RX_8B10B_DEC_ERR0; /* addr: 0x00000058 */
	ca_uint32_t rsrvd17[3];
	NI_HV_SXGMII_SFP_PCS_DEBUG_t DEBUG; /* addr: 0x0000005c */
} APB0_NI_HV_SXGMII_SFP_PCS_t;
#endif /* !__ASSEMBLER__ */

#define APB0_NI_HV_SXGMII_STRIDE 2048
#define APB0_NI_HV_SXGMII_COUNT 2

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SXGMII */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_SXGMII_SXGRA_t sxgra; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[451];
	APB0_NI_HV_SXGMII_PCS_t pcs; /* addr: 0x00000200 */
	ca_uint32_t rsrvd2[365];
	APB0_NI_HV_SXGMII_SFP_PCS_t sfp_pcs; /* addr: 0x00000400 */
	ca_uint32_t rsrvd3[977];
} APB0_NI_HV_SXGMII_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* NI_HV */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_NI_HV_GLB_t GLB; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[527];
	APB0_NI_HV_PT_t PT[5]; /* addr: 0x00000400 */
	APB0_NI_HV_INTPT_t INTPT[4]; /* addr: 0x00000720 */
	APB0_NI_HV_XRAM_t XRAM; /* addr: 0x00000820 */
	ca_uint32_t rsrvd2[39];
	APB0_NI_HV_MCE_t MCE; /* addr: 0x00000860 */
	ca_uint32_t rsrvd3[33];
	APB0_NI_HV_PTP_t PTP; /* addr: 0x000008a0 */
	ca_uint32_t rsrvd4[49];
	APB0_NI_HV_XAUI_t XAUI; /* addr: 0x000008e0 */
	ca_uint32_t rsrvd5[17];
	APB0_NI_HV_XGE_t XGE[2]; /* addr: 0x00000b80 */
	ca_uint32_t rsrvd6[640];
	APB0_NI_HV_SXGMII_t SXGMII[2]; /* addr: 0x00001000 */
} APB0_NI_HV_t;
#endif /* !__ASSEMBLER__ */

/*
 * TE
 */

/*
 * te_glb
 */

#define TE_TE_GLB_REV_ID 0xf4306000
#define TE_TE_GLB_REV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minor : 16; /* bits 15:0 */
		ca_uint32_t major : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_REV_ID_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_CTRL 0xf4306004
#define TE_TE_GLB_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_en : 1; /* bits 0:0 */
		ca_uint32_t shp_en : 1; /* bits 1:1 */
		ca_uint32_t taildrop_en : 1; /* bits 2:2 */
		ca_uint32_t wred_en : 1; /* bits 3:3 */
		ca_uint32_t mark_ecn_en : 1; /* bits 4:4 */
		ca_uint32_t pol_ecn_en : 1; /* bits 5:5 */
		ca_uint32_t wred_ecn_en : 1; /* bits 6:6 */
		ca_uint32_t l2taildrop_en : 1; /* bits 7:7 */
		ca_uint32_t glb_deepq_voq_rdy_en : 8; /* bits 15:8 */
		ca_uint32_t glb_deepq_port_rdy_en : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t force_init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_INT 0xf4306008
#define TE_TE_GLB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_mark : 1; /* bits 0:0 */
		ca_uint32_t pol_drop : 1; /* bits 1:1 */
		ca_uint32_t taildrop : 1; /* bits 2:2 */
		ca_uint32_t wred_y_drop : 1; /* bits 3:3 */
		ca_uint32_t wred_g_drop : 1; /* bits 4:4 */
		ca_uint32_t ecn : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t qm_tail_drop : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t l2io : 1; /* bits 13:13 */
		ca_uint32_t feio : 1; /* bits 14:14 */
		ca_uint32_t qmio : 1; /* bits 15:15 */
		ca_uint32_t cb : 1; /* bits 16:16 */
		ca_uint32_t fc : 1; /* bits 17:17 */
		ca_uint32_t rsrvd3 : 14;
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_INT_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_INTE 0xf430600c
#define TE_TE_GLB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_markE : 1; /* bits 0:0 */
		ca_uint32_t pol_dropE : 1; /* bits 1:1 */
		ca_uint32_t taildropE : 1; /* bits 2:2 */
		ca_uint32_t wred_y_dropE : 1; /* bits 3:3 */
		ca_uint32_t wred_g_dropE : 1; /* bits 4:4 */
		ca_uint32_t ecnE : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t qm_tail_dropE : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t l2ioE : 1; /* bits 13:13 */
		ca_uint32_t feioE : 1; /* bits 14:14 */
		ca_uint32_t qmioE : 1; /* bits 15:15 */
		ca_uint32_t cbE : 1; /* bits 16:16 */
		ca_uint32_t fcE : 1; /* bits 17:17 */
		ca_uint32_t rsrvd3 : 14;
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_STS 0xf4306010
#define TE_TE_GLB_STS_dft 0x02000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t qmio_enq_ovrn : 1; /* bits 1:1 */
		ca_uint32_t qmio_deq_ovrn : 1; /* bits 2:2 */
		ca_uint32_t qmio_enp_ovrn : 1; /* bits 3:3 */
		ca_uint32_t qmio_dep_ovrn : 1; /* bits 4:4 */
		ca_uint32_t qmio_shp_ovrn : 1; /* bits 5:5 */
		ca_uint32_t te_qm_nrdy : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t pol_init_done : 1; /* bits 12:12 */
		ca_uint32_t shp_init_done : 1; /* bits 13:13 */
		ca_uint32_t cb_init_done : 1; /* bits 14:14 */
		ca_uint32_t wred_init_done : 1; /* bits 15:15 */
		ca_uint32_t feio_sm : 4; /* bits 19:16 */
		ca_uint32_t fe_te_req : 1; /* bits 20:20 */
		ca_uint32_t te_fe_ack : 1; /* bits 21:21 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t qmio_idle : 1; /* bits 25:25 */
		ca_uint32_t rsrvd4 : 5;
		ca_uint32_t init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_PTP_CFG 0xf4306014
#define TE_TE_GLB_PTP_CFG_dft 0x00000fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pol_id : 9; /* bits 8:0 */
		ca_uint32_t pol_grp_id : 3; /* bits 11:9 */
		ca_uint32_t pol_en : 1; /* bits 12:12 */
		ca_uint32_t pol_grp_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_PTP_CFG_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_SPARE_CFG 0xf4306018
#define TE_TE_GLB_SPARE_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define TE_TE_GLB_SPARE_STS 0xf430601c
#define TE_TE_GLB_SPARE_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_TE_GLB_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* te_glb */
#ifndef __ASSEMBLER__
typedef struct {
	TE_TE_GLB_REV_ID_t REV_ID; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_TE_GLB_CTRL_t CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_TE_GLB_INT_t INT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	TE_TE_GLB_INTE_t INTE; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	TE_TE_GLB_STS_t STS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	TE_TE_GLB_PTP_CFG_t PTP_CFG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	TE_TE_GLB_SPARE_CFG_t SPARE_CFG; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	TE_TE_GLB_SPARE_STS_t SPARE_STS; /* addr: 0x0000001c */
} APB0_TE_TE_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * pol
 */

#define TE_POL_PKT_TYPE_CTRL0 0xf4306080
#define TE_POL_PKT_TYPE_CTRL0_STRIDE 4
#define TE_POL_PKT_TYPE_CTRL0_COUNT 8
#define TE_POL_PKT_TYPE_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS 0xf43060a0
#define TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA2 0xf43060a4
#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA1 0xf43060a8
#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA0 0xf43060ac
#define TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS 0xf43060b0
#define TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA1 0xf43060b4
#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA0 0xf43060b8
#define TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_CTRL0 0xf43060bc
#define TE_POL_PORT_CTRL0_STRIDE 4
#define TE_POL_PORT_CTRL0_COUNT 8
#define TE_POL_PORT_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_PROFILE_MEM_ACCESS 0xf43060dc
#define TE_POL_PORT_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_PROFILE_MEM_DATA2 0xf43060e0
#define TE_POL_PORT_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_PROFILE_MEM_DATA1 0xf43060e4
#define TE_POL_PORT_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_PROFILE_MEM_DATA0 0xf43060e8
#define TE_POL_PORT_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_COUNTER_MEM_ACCESS 0xf43060ec
#define TE_POL_PORT_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_COUNTER_MEM_DATA1 0xf43060f0
#define TE_POL_PORT_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_PORT_COUNTER_MEM_DATA0 0xf43060f4
#define TE_POL_PORT_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_PORT_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_GRP_CTRL0 0xf43060f8
#define TE_POL_FLOW_GRP_CTRL0_STRIDE 4
#define TE_POL_FLOW_GRP_CTRL0_COUNT 16
#define TE_POL_FLOW_GRP_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_GRP_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_PROFILE_MEM_ACCESS 0xf4306138
#define TE_POL_FLOW_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 21;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_PROFILE_MEM_DATA2 0xf430613c
#define TE_POL_FLOW_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_PROFILE_MEM_DATA1 0xf4306140
#define TE_POL_FLOW_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_PROFILE_MEM_DATA0 0xf4306144
#define TE_POL_FLOW_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_COUNTER_MEM_ACCESS 0xf4306148
#define TE_POL_FLOW_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 21;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_COUNTER_MEM_DATA1 0xf430614c
#define TE_POL_FLOW_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_FLOW_COUNTER_MEM_DATA0 0xf4306150
#define TE_POL_FLOW_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_FLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_CTRL0 0xf4306154
#define TE_POL_AGRFLOW_CTRL0_STRIDE 4
#define TE_POL_AGRFLOW_CTRL0_COUNT 8
#define TE_POL_AGRFLOW_CTRL0_dft 0x00000500

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t type : 3; /* bits 2:0 */
		ca_uint32_t color_blind : 1; /* bits 3:3 */
		ca_uint32_t pkt_mode : 1; /* bits 4:4 */
		ca_uint32_t egr_len_sel : 1; /* bits 5:5 */
		ca_uint32_t ipg : 5; /* bits 10:6 */
		ca_uint32_t bypass_yellow : 1; /* bits 11:11 */
		ca_uint32_t bypass_red : 1; /* bits 12:12 */
		ca_uint32_t update_mode : 1; /* bits 13:13 */
		ca_uint32_t nest_level : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_PROFILE_MEM_ACCESS 0xf4306174
#define TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_PROFILE_MEM_DATA2 0xf4306178
#define TE_POL_AGRFLOW_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_bs : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_PROFILE_MEM_DATA1 0xf430617c
#define TE_POL_AGRFLOW_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_bs : 6; /* bits 5:0 */
		ca_uint32_t peak_rate_k : 10; /* bits 15:6 */
		ca_uint32_t peak_rate_m : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_PROFILE_MEM_DATA0 0xf4306180
#define TE_POL_AGRFLOW_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_rate_k : 10; /* bits 9:0 */
		ca_uint32_t committed_rate_m : 16; /* bits 25:10 */
		ca_uint32_t committed_bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_COUNTER_MEM_ACCESS 0xf4306184
#define TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_COUNTER_MEM_DATA1 0xf4306188
#define TE_POL_AGRFLOW_COUNTER_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t peak_tbc : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_AGRFLOW_COUNTER_MEM_DATA0 0xf430618c
#define TE_POL_AGRFLOW_COUNTER_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t committed_tbc : 21; /* bits 20:0 */
		ca_uint32_t peak_tbc : 11; /* bits 31:21 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_TB_CTRL 0xf4306190
#define TE_POL_TB_CTRL_dft 0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addtok_en : 1; /* bits 0:0 */
		ca_uint32_t subtok_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t upd_cnt_lmt : 4; /* bits 7:4 */
		ca_uint32_t cyc_cnt_lmt : 12; /* bits 19:8 */
		ca_uint32_t last_upd_cyc : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} TE_POL_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_POL_TB_CTRL1 0xf4306194
#define TE_POL_TB_CTRL1_dft 0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t k_cnt_lmt : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} TE_POL_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pol */
#ifndef __ASSEMBLER__
typedef struct {
	TE_POL_PKT_TYPE_CTRL0_t PKT_TYPE_CTRL0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[31];
	TE_POL_PKT_TYPE_PROFILE_MEM_ACCESS_t
	  PKT_TYPE_PROFILE_MEM_ACCESS; /* addr: 0x00000020 */
	ca_uint32_t rsrvd2[3];
	TE_POL_PKT_TYPE_PROFILE_MEM_DATA2_t
	  PKT_TYPE_PROFILE_MEM_DATA2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd3[3];
	TE_POL_PKT_TYPE_PROFILE_MEM_DATA1_t
	  PKT_TYPE_PROFILE_MEM_DATA1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd4[3];
	TE_POL_PKT_TYPE_PROFILE_MEM_DATA0_t
	  PKT_TYPE_PROFILE_MEM_DATA0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd5[3];
	TE_POL_PKT_TYPE_COUNTER_MEM_ACCESS_t
	  PKT_TYPE_COUNTER_MEM_ACCESS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd6[3];
	TE_POL_PKT_TYPE_COUNTER_MEM_DATA1_t
	  PKT_TYPE_COUNTER_MEM_DATA1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd7[3];
	TE_POL_PKT_TYPE_COUNTER_MEM_DATA0_t
	  PKT_TYPE_COUNTER_MEM_DATA0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd8[3];
	TE_POL_PORT_CTRL0_t PORT_CTRL0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd9[31];
	TE_POL_PORT_PROFILE_MEM_ACCESS_t
	  PORT_PROFILE_MEM_ACCESS; /* addr: 0x0000005c */
	ca_uint32_t rsrvd10[3];
	TE_POL_PORT_PROFILE_MEM_DATA2_t PORT_PROFILE_MEM_DATA2; /* addr: 0x00000060 */
	ca_uint32_t rsrvd11[3];
	TE_POL_PORT_PROFILE_MEM_DATA1_t PORT_PROFILE_MEM_DATA1; /* addr: 0x00000064 */
	ca_uint32_t rsrvd12[3];
	TE_POL_PORT_PROFILE_MEM_DATA0_t PORT_PROFILE_MEM_DATA0; /* addr: 0x00000068 */
	ca_uint32_t rsrvd13[3];
	TE_POL_PORT_COUNTER_MEM_ACCESS_t
	  PORT_COUNTER_MEM_ACCESS; /* addr: 0x0000006c */
	ca_uint32_t rsrvd14[3];
	TE_POL_PORT_COUNTER_MEM_DATA1_t PORT_COUNTER_MEM_DATA1; /* addr: 0x00000070 */
	ca_uint32_t rsrvd15[3];
	TE_POL_PORT_COUNTER_MEM_DATA0_t PORT_COUNTER_MEM_DATA0; /* addr: 0x00000074 */
	ca_uint32_t rsrvd16[3];
	TE_POL_FLOW_GRP_CTRL0_t FLOW_GRP_CTRL0; /* addr: 0x00000078 */
	ca_uint32_t rsrvd17[63];
	TE_POL_FLOW_PROFILE_MEM_ACCESS_t
	  FLOW_PROFILE_MEM_ACCESS; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd18[3];
	TE_POL_FLOW_PROFILE_MEM_DATA2_t FLOW_PROFILE_MEM_DATA2; /* addr: 0x000000bc */
	ca_uint32_t rsrvd19[3];
	TE_POL_FLOW_PROFILE_MEM_DATA1_t FLOW_PROFILE_MEM_DATA1; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd20[3];
	TE_POL_FLOW_PROFILE_MEM_DATA0_t FLOW_PROFILE_MEM_DATA0; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd21[3];
	TE_POL_FLOW_COUNTER_MEM_ACCESS_t
	  FLOW_COUNTER_MEM_ACCESS; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd22[3];
	TE_POL_FLOW_COUNTER_MEM_DATA1_t FLOW_COUNTER_MEM_DATA1; /* addr: 0x000000cc */
	ca_uint32_t rsrvd23[3];
	TE_POL_FLOW_COUNTER_MEM_DATA0_t FLOW_COUNTER_MEM_DATA0; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd24[3];
	TE_POL_AGRFLOW_CTRL0_t AGRFLOW_CTRL0; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd25[31];
	TE_POL_AGRFLOW_PROFILE_MEM_ACCESS_t
	  AGRFLOW_PROFILE_MEM_ACCESS; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd26[3];
	TE_POL_AGRFLOW_PROFILE_MEM_DATA2_t
	  AGRFLOW_PROFILE_MEM_DATA2; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd27[3];
	TE_POL_AGRFLOW_PROFILE_MEM_DATA1_t
	  AGRFLOW_PROFILE_MEM_DATA1; /* addr: 0x000000fc */
	ca_uint32_t rsrvd28[3];
	TE_POL_AGRFLOW_PROFILE_MEM_DATA0_t
	  AGRFLOW_PROFILE_MEM_DATA0; /* addr: 0x00000100 */
	ca_uint32_t rsrvd29[3];
	TE_POL_AGRFLOW_COUNTER_MEM_ACCESS_t
	  AGRFLOW_COUNTER_MEM_ACCESS; /* addr: 0x00000104 */
	ca_uint32_t rsrvd30[3];
	TE_POL_AGRFLOW_COUNTER_MEM_DATA1_t
	  AGRFLOW_COUNTER_MEM_DATA1; /* addr: 0x00000108 */
	ca_uint32_t rsrvd31[3];
	TE_POL_AGRFLOW_COUNTER_MEM_DATA0_t
	  AGRFLOW_COUNTER_MEM_DATA0; /* addr: 0x0000010c */
	ca_uint32_t rsrvd32[3];
	TE_POL_TB_CTRL_t TB_CTRL; /* addr: 0x00000110 */
	ca_uint32_t rsrvd33[3];
	TE_POL_TB_CTRL1_t TB_CTRL1; /* addr: 0x00000114 */
} APB0_TE_POL_t;
#endif /* !__ASSEMBLER__ */

/*
 * shp
 */

#define TE_SHP_IPG_PROFILE 0xf4306300
#define TE_SHP_IPG_PROFILE_dft 0x14141414

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipg0 : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t ipg1 : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ipg2 : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t ipg3 : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} TE_SHP_IPG_PROFILE_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_PORT_IPG_SELECT0 0xf4306304
#define TE_SHP_PORT_IPG_SELECT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pid0 : 2; /* bits 1:0 */
		ca_uint32_t pid1 : 2; /* bits 3:2 */
		ca_uint32_t pid2 : 2; /* bits 5:4 */
		ca_uint32_t pid3 : 2; /* bits 7:6 */
		ca_uint32_t pid4 : 2; /* bits 9:8 */
		ca_uint32_t pid5 : 2; /* bits 11:10 */
		ca_uint32_t pid6 : 2; /* bits 13:12 */
		ca_uint32_t pid7 : 2; /* bits 15:14 */
		ca_uint32_t pid8 : 2; /* bits 17:16 */
		ca_uint32_t pid9 : 2; /* bits 19:18 */
		ca_uint32_t pid10 : 2; /* bits 21:20 */
		ca_uint32_t pid11 : 2; /* bits 23:22 */
		ca_uint32_t pid12 : 2; /* bits 25:24 */
		ca_uint32_t pid13 : 2; /* bits 27:26 */
		ca_uint32_t pid14 : 2; /* bits 29:28 */
		ca_uint32_t pid15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_PORT_IPG_SELECT0_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_CTRL 0xf4306308
#define TE_SHP_CTRL_dft 0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_mode_class0_cnt : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t pkt_mode_class1_cnt : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t cpu_port_grp_en : 1; /* bits 30:30 */
		ca_uint32_t ni_port_grp_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_PORT_TBC_MEM_ACCESS 0xf430630c
#define TE_SHP_PORT_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_PORT_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_PORT_TBC_MEM_DATA1 0xf4306310
#define TE_SHP_PORT_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} TE_SHP_PORT_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_PORT_TBC_MEM_DATA0 0xf4306314
#define TE_SHP_PORT_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_PORT_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_GROUP_TBC_MEM_ACCESS 0xf4306318
#define TE_SHP_GROUP_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_GROUP_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_GROUP_TBC_MEM_DATA1 0xf430631c
#define TE_SHP_GROUP_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} TE_SHP_GROUP_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_GROUP_TBC_MEM_DATA0 0xf4306320
#define TE_SHP_GROUP_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_GROUP_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_VOQ_TBC_MEM_ACCESS 0xf4306324
#define TE_SHP_VOQ_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_VOQ_TBC_MEM_DATA1 0xf4306328
#define TE_SHP_VOQ_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} TE_SHP_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_VOQ_TBC_MEM_DATA0 0xf430632c
#define TE_SHP_VOQ_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_TB_CTRL 0xf4306330
#define TE_SHP_TB_CTRL_dft 0x2ff3e723

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addtok_en : 1; /* bits 0:0 */
		ca_uint32_t subtok_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t upd_cnt_lmt : 4; /* bits 7:4 */
		ca_uint32_t cyc_cnt_lmt : 12; /* bits 19:8 */
		ca_uint32_t last_upd_cyc : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} TE_SHP_TB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_SHP_TB_CTRL1 0xf4306334
#define TE_SHP_TB_CTRL1_dft 0x000001f3

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t k_cnt_lmt : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} TE_SHP_TB_CTRL1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* shp */
#ifndef __ASSEMBLER__
typedef struct {
	TE_SHP_IPG_PROFILE_t IPG_PROFILE; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_SHP_PORT_IPG_SELECT0_t PORT_IPG_SELECT0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_SHP_CTRL_t CTRL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	TE_SHP_PORT_TBC_MEM_ACCESS_t PORT_TBC_MEM_ACCESS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	TE_SHP_PORT_TBC_MEM_DATA1_t PORT_TBC_MEM_DATA1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	TE_SHP_PORT_TBC_MEM_DATA0_t PORT_TBC_MEM_DATA0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	TE_SHP_GROUP_TBC_MEM_ACCESS_t GROUP_TBC_MEM_ACCESS; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	TE_SHP_GROUP_TBC_MEM_DATA1_t GROUP_TBC_MEM_DATA1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	TE_SHP_GROUP_TBC_MEM_DATA0_t GROUP_TBC_MEM_DATA0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	TE_SHP_VOQ_TBC_MEM_ACCESS_t VOQ_TBC_MEM_ACCESS; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	TE_SHP_VOQ_TBC_MEM_DATA1_t VOQ_TBC_MEM_DATA1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	TE_SHP_VOQ_TBC_MEM_DATA0_t VOQ_TBC_MEM_DATA0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	TE_SHP_TB_CTRL_t TB_CTRL; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	TE_SHP_TB_CTRL1_t TB_CTRL1; /* addr: 0x00000034 */
} APB0_TE_SHP_t;
#endif /* !__ASSEMBLER__ */

/*
 * wred
 */

#define TE_WRED_CTRL 0xf4306380
#define TE_WRED_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t fast_decay : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t afgs_weight : 4; /* bits 7:4 */
		ca_uint32_t afgs_sel_worst : 1; /* bits 8:8 */
		ca_uint32_t rsrvd3 : 23;
	} bf;
	ca_uint32_t wrd;
} TE_WRED_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_AFGS_MEM_ACCESS 0xf4306384
#define TE_WRED_AFGS_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_AFGS_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_AFGS_MEM_DATA 0xf4306388
#define TE_WRED_AFGS_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t depth : 14; /* bits 13:0 */
		ca_uint32_t depth_eq1 : 14; /* bits 27:14 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} TE_WRED_AFGS_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_ACCESS 0xf430638c
#define TE_WRED_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 25;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA7 0xf4306390
#define TE_WRED_PROFILE_MEM_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data_rsvd : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA6 0xf4306394
#define TE_WRED_PROFILE_MEM_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_idx : 4; /* bits 3:0 */
		ca_uint32_t mark_idx : 4; /* bits 7:4 */
		ca_uint32_t data_rsvd : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA5 0xf4306398
#define TE_WRED_PROFILE_MEM_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA4 0xf430639c
#define TE_WRED_PROFILE_MEM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA3 0xf43063a0
#define TE_WRED_PROFILE_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA2 0xf43063a4
#define TE_WRED_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA1 0xf43063a8
#define TE_WRED_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_MEM_DATA0 0xf43063ac
#define TE_WRED_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t unmark_dps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_SELECT_MEM_ACCESS 0xf43063b0
#define TE_WRED_PROFILE_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_SELECT_MEM_DATA1 0xf43063b4
#define TE_WRED_PROFILE_SELECT_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel6 : 3; /* bits 2:0 */
		ca_uint32_t sel7 : 5; /* bits 7:3 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_SELECT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_WRED_PROFILE_SELECT_MEM_DATA0 0xf43063b8
#define TE_WRED_PROFILE_SELECT_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel0 : 5; /* bits 4:0 */
		ca_uint32_t sel1 : 5; /* bits 9:5 */
		ca_uint32_t sel2 : 5; /* bits 14:10 */
		ca_uint32_t sel3 : 5; /* bits 19:15 */
		ca_uint32_t sel4 : 5; /* bits 24:20 */
		ca_uint32_t sel5 : 5; /* bits 29:25 */
		ca_uint32_t sel6 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} TE_WRED_PROFILE_SELECT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* wred */
#ifndef __ASSEMBLER__
typedef struct {
	TE_WRED_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_WRED_AFGS_MEM_ACCESS_t AFGS_MEM_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_WRED_AFGS_MEM_DATA_t AFGS_MEM_DATA; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	TE_WRED_PROFILE_MEM_ACCESS_t PROFILE_MEM_ACCESS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	TE_WRED_PROFILE_MEM_DATA7_t PROFILE_MEM_DATA7; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	TE_WRED_PROFILE_MEM_DATA6_t PROFILE_MEM_DATA6; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	TE_WRED_PROFILE_MEM_DATA5_t PROFILE_MEM_DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	TE_WRED_PROFILE_MEM_DATA4_t PROFILE_MEM_DATA4; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	TE_WRED_PROFILE_MEM_DATA3_t PROFILE_MEM_DATA3; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	TE_WRED_PROFILE_MEM_DATA2_t PROFILE_MEM_DATA2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	TE_WRED_PROFILE_MEM_DATA1_t PROFILE_MEM_DATA1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	TE_WRED_PROFILE_MEM_DATA0_t PROFILE_MEM_DATA0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	TE_WRED_PROFILE_SELECT_MEM_ACCESS_t
	  PROFILE_SELECT_MEM_ACCESS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	TE_WRED_PROFILE_SELECT_MEM_DATA1_t
	  PROFILE_SELECT_MEM_DATA1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	TE_WRED_PROFILE_SELECT_MEM_DATA0_t
	  PROFILE_SELECT_MEM_DATA0; /* addr: 0x00000038 */
} APB0_TE_WRED_t;
#endif /* !__ASSEMBLER__ */

/*
 * fc_glb
 */

#define TE_FC_GLB_INT 0xf4306400
#define TE_FC_GLB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t rxflowcntl_wan : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t txflowcntl_wan : 1; /* bits 23:23 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t txflowcntl_cpu : 1; /* bits 25:25 */
		ca_uint32_t rsrvd4 : 6;
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_INT_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_GLB_INTE 0xf4306404
#define TE_FC_GLB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t rxflowcntl_wanE : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t txflowcntl_wanE : 1; /* bits 23:23 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t txflowcntl_cpuE : 1; /* bits 25:25 */
		ca_uint32_t rsrvd4 : 6;
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_GLB_CTRL 0xf4306408
#define TE_FC_GLB_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t l3fewan_tx_en : 1; /* bits 4:4 */
		ca_uint32_t l3felan_tx_en : 1; /* bits 5:5 */
		ca_uint32_t rsrvd2 : 26;
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_GLB_STS 0xf430640c
#define TE_FC_GLB_STS_dft 0x00030000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t te_ni_l3fewan_port_rdy : 1; /* bits 16:16 */
		ca_uint32_t te_ni_l3felan_port_rdy : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 14;
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_GLB_PFC_CTRL0 0xf4306410
#define TE_FC_GLB_PFC_CTRL0_STRIDE 8
#define TE_FC_GLB_PFC_CTRL0_COUNT 2
#define TE_FC_GLB_PFC_CTRL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cos_bmap : 8; /* bits 7:0 */
		ca_uint32_t port_bmap : 2; /* bits 9:8 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t rxpfc_en : 1; /* bits 16:16 */
		ca_uint32_t txpfc_en : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 14;
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_PFC_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_GLB_PFC_CNT0 0xf4306414
#define TE_FC_GLB_PFC_CNT0_STRIDE 8
#define TE_FC_GLB_PFC_CNT0_COUNT 2
#define TE_FC_GLB_PFC_CNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_PFC_CNT0_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_GLB_TIMER 0xf4306420
#define TE_FC_GLB_TIMER_dft 0x000073ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num_of_cycles : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t cycle_unit : 3; /* bits 14:12 */
		ca_uint32_t rsrvd2 : 16;
		ca_uint32_t enable : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_FC_GLB_TIMER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* fc_glb */
#ifndef __ASSEMBLER__
typedef struct {
	TE_FC_GLB_INT_t INT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_FC_GLB_INTE_t INTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_FC_GLB_CTRL_t CTRL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	TE_FC_GLB_STS_t STS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	TE_FC_GLB_PFC_CTRL0_t PFC_CTRL0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	TE_FC_GLB_PFC_CNT0_t PFC_CNT0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[11];
	TE_FC_GLB_TIMER_t TIMER; /* addr: 0x00000020 */
} APB0_TE_FC_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * fc[0..1]
 */

#define TE_FC_CTRL 0xf4306480
#define TE_FC_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_en : 1; /* bits 0:0 */
		ca_uint32_t tx_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t stat_pri_sel : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} TE_FC_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_STS 0xf4306484
#define TE_FC_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxpfc : 8; /* bits 7:0 */
		ca_uint32_t txpfc : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_FC_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_FC_STAT 0xf4306488
#define TE_FC_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flag_num : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t voq : 9; /* bits 12:4 */
		ca_uint32_t rsrvd2 : 17;
		ca_uint32_t txpfc : 1; /* bits 30:30 */
		ca_uint32_t rxpfc : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_FC_STAT_t;
#endif /* !__ASSEMBLER__ */

#define APB0_TE_FC_STRIDE 64
#define APB0_TE_FC_COUNT 2

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* fc */
#ifndef __ASSEMBLER__
typedef struct {
	TE_FC_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_FC_STS_t STS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_FC_STAT_t STAT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[55];
} APB0_TE_FC_t;
#endif /* !__ASSEMBLER__ */

/*
 * cb
 */

#define TE_CB_INT 0xf4306500
#define TE_CB_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_bufcnt_udfl : 1; /* bits 0:0 */
		ca_uint32_t voq_bufcnt_ovfl : 1; /* bits 1:1 */
		ca_uint32_t voq_pcnt_udfl : 1; /* bits 2:2 */
		ca_uint32_t voq_pcnt_ovfl : 1; /* bits 3:3 */
		ca_uint32_t port_freecnt_udfl : 1; /* bits 4:4 */
		ca_uint32_t port_freecnt_ovfl : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} TE_CB_INT_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_INTE 0xf4306504
#define TE_CB_INTE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_bufcnt_udflE : 1; /* bits 0:0 */
		ca_uint32_t voq_bufcnt_ovflE : 1; /* bits 1:1 */
		ca_uint32_t voq_pcnt_udflE : 1; /* bits 2:2 */
		ca_uint32_t voq_pcnt_ovflE : 1; /* bits 3:3 */
		ca_uint32_t port_freecnt_udflE : 1; /* bits 4:4 */
		ca_uint32_t port_freecnt_ovflE : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} TE_CB_INTE_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_ERR_INFO 0xf4306508
#define TE_CB_ERR_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_of_buferr : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t voq_of_pkterr : 7; /* bits 22:16 */
		ca_uint32_t rsrvd2 : 9;
	} bf;
	ca_uint32_t wrd;
} TE_CB_ERR_INFO_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_CTRL 0xf430650c
#define TE_CB_CTRL_dft 0x0003ff03

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t scan_cycle_per_run : 8; /* bits 7:0 */
		ca_uint32_t scan_cycle_unit : 10; /* bits 17:8 */
		ca_uint32_t rsrvd1 : 13;
		ca_uint32_t scan_enable : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_GLOB_TD_STS 0xf4306510
#define TE_CB_GLOB_TD_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pool : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_CB_GLOB_TD_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_PORT_TD_STS 0xf4306514
#define TE_CB_PORT_TD_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port : 16; /* bits 15:0 */
		ca_uint32_t src_port : 2; /* bits 17:16 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} TE_CB_PORT_TD_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_TD_STS0 0xf4306518
#define TE_CB_VOQ_TD_STS0_STRIDE 4
#define TE_CB_VOQ_TD_STS0_COUNT 4
#define TE_CB_VOQ_TD_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_TD_STS0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PRI_TD_STS 0xf4306528
#define TE_CB_SRC_PRI_TD_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t src_pri : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PRI_TD_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_NO_PRVT_STS0 0xf430652c
#define TE_CB_VOQ_NO_PRVT_STS0_STRIDE 4
#define TE_CB_VOQ_NO_PRVT_STS0_COUNT 4
#define TE_CB_VOQ_NO_PRVT_STS0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_NO_PRVT_STS0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_EQ_PROFILE_THRSH0 0xf430653c
#define TE_CB_EQ_PROFILE_THRSH0_STRIDE 4
#define TE_CB_EQ_PROFILE_THRSH0_COUNT 8
#define TE_CB_EQ_PROFILE_THRSH0_dft 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t th0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t th1 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_EQ_PROFILE_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_PORT_THRSH_PROFILE0 0xf430655c
#define TE_CB_PORT_THRSH_PROFILE0_STRIDE 4
#define TE_CB_PORT_THRSH_PROFILE0_COUNT 4
#define TE_CB_PORT_THRSH_PROFILE0_dft 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t hth : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_PORT_GRPTHRSH_PROFILE0 0xf430656c
#define TE_CB_PORT_GRPTHRSH_PROFILE0_STRIDE 4
#define TE_CB_PORT_GRPTHRSH_PROFILE0_COUNT 4
#define TE_CB_PORT_GRPTHRSH_PROFILE0_dft 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t grplth : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t grphth : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_PORT_GRPTHRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_PORT_THRSH_SELECT 0xf430657c
#define TE_CB_PORT_THRSH_SELECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thsel0 : 2; /* bits 1:0 */
		ca_uint32_t thsel1 : 2; /* bits 3:2 */
		ca_uint32_t thsel2 : 2; /* bits 5:4 */
		ca_uint32_t thsel3 : 2; /* bits 7:6 */
		ca_uint32_t thsel4 : 2; /* bits 9:8 */
		ca_uint32_t thsel5 : 2; /* bits 11:10 */
		ca_uint32_t thsel6 : 2; /* bits 13:12 */
		ca_uint32_t thsel7 : 2; /* bits 15:14 */
		ca_uint32_t thsel8 : 2; /* bits 17:16 */
		ca_uint32_t thsel9 : 2; /* bits 19:18 */
		ca_uint32_t thsel10 : 2; /* bits 21:20 */
		ca_uint32_t thsel11 : 2; /* bits 23:22 */
		ca_uint32_t thsel12 : 2; /* bits 25:24 */
		ca_uint32_t thsel13 : 2; /* bits 27:26 */
		ca_uint32_t thsel14 : 2; /* bits 29:28 */
		ca_uint32_t thsel15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_PORT_FREECNT_MEM_ACCESS 0xf4306580
#define TE_CB_PORT_FREECNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_PORT_FREECNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_PORT_FREECNT_MEM_DATA 0xf4306584
#define TE_CB_PORT_FREECNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 14; /* bits 13:0 */
		ca_uint32_t cnt0_msb : 1; /* bits 14:14 */
		ca_uint32_t cnt0_rsvd : 1; /* bits 15:15 */
		ca_uint32_t cnt1 : 14; /* bits 29:16 */
		ca_uint32_t cnt1_msb : 1; /* bits 30:30 */
		ca_uint32_t cnt1_rsvd : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_PORT_FREECNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4306588
#define TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2 0xf430658c
#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t prvt : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1 0xf4306590
#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t grplth : 10; /* bits 9:0 */
		ca_uint32_t grphth : 14; /* bits 23:10 */
		ca_uint32_t prvt : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0 0xf4306594
#define TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 14; /* bits 13:0 */
		ca_uint32_t hth : 14; /* bits 27:14 */
		ca_uint32_t grplth : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS 0xf4306598
#define TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_THRSH_SELECT_MEM_DATA 0xf430659c
#define TE_CB_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_BUFCNT_MEM_ACCESS 0xf43065a0
#define TE_CB_VOQ_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_BUFCNT_MEM_DATA 0xf43065a4
#define TE_CB_VOQ_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 14; /* bits 13:0 */
		ca_uint32_t cnt0_rsvd : 2; /* bits 15:14 */
		ca_uint32_t cnt1 : 14; /* bits 29:16 */
		ca_uint32_t cnt1_rsvd : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS 0xf43065a8
#define TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_MAX_BUFCNT_MEM_DATA 0xf43065ac
#define TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_PCNT_MEM_ACCESS 0xf43065b0
#define TE_CB_VOQ_PCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_PCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_VOQ_PCNT_MEM_DATA 0xf43065b4
#define TE_CB_VOQ_PCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} TE_CB_VOQ_PCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_GLB0_THRSH 0xf43065b8
#define TE_CB_GLB0_THRSH_STRIDE 4
#define TE_CB_GLB0_THRSH_COUNT 8
#define TE_CB_GLB0_THRSH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t hth : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_GLB0_THRSH_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_CTRL 0xf43065d8
#define TE_CB_SRC_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t src_pri_en : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 28;
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PORT_THRSH0 0xf43065dc
#define TE_CB_SRC_PORT_THRSH0_STRIDE 4
#define TE_CB_SRC_PORT_THRSH0_COUNT 2
#define TE_CB_SRC_PORT_THRSH0_dft 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t hth : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PORT_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PRI_THRSH0 0xf43065e4
#define TE_CB_SRC_PRI_THRSH0_STRIDE 4
#define TE_CB_SRC_PRI_THRSH0_COUNT 8
#define TE_CB_SRC_PRI_THRSH0_dft 0x3fff3fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t hth : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PRI_THRSH0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS 0xf4306604
#define TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 29;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PORT_BUFCNT_MEM_DATA 0xf4306608
#define TE_CB_SRC_PORT_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS 0xf430660c
#define TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_SRC_PRI_BUFCNT_MEM_DATA 0xf4306610
#define TE_CB_SRC_PRI_BUFCNT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_DQSCH_PORT_THRSH_PROFILE0 0xf4306614
#define TE_CB_DQSCH_PORT_THRSH_PROFILE0_STRIDE 4
#define TE_CB_DQSCH_PORT_THRSH_PROFILE0_COUNT 4
#define TE_CB_DQSCH_PORT_THRSH_PROFILE0_dft 0x3fff0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t hth : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} TE_CB_DQSCH_PORT_THRSH_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_DQSCH_PORT_THRSH_SELECT 0xf4306624
#define TE_CB_DQSCH_PORT_THRSH_SELECT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t thsel0 : 2; /* bits 1:0 */
		ca_uint32_t thsel1 : 2; /* bits 3:2 */
		ca_uint32_t thsel2 : 2; /* bits 5:4 */
		ca_uint32_t thsel3 : 2; /* bits 7:6 */
		ca_uint32_t thsel4 : 2; /* bits 9:8 */
		ca_uint32_t thsel5 : 2; /* bits 11:10 */
		ca_uint32_t thsel6 : 2; /* bits 13:12 */
		ca_uint32_t thsel7 : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_CB_DQSCH_PORT_THRSH_SELECT_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS 0xf4306628
#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA 0xf430662c
#define TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lth : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS 0xf4306630
#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA 0xf4306634
#define TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* cb */
#ifndef __ASSEMBLER__
typedef struct {
	TE_CB_INT_t INT; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_CB_INTE_t INTE; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_CB_ERR_INFO_t ERR_INFO; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	TE_CB_CTRL_t CTRL; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	TE_CB_GLOB_TD_STS_t GLOB_TD_STS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	TE_CB_PORT_TD_STS_t PORT_TD_STS; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	TE_CB_VOQ_TD_STS0_t VOQ_TD_STS0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[15];
	TE_CB_SRC_PRI_TD_STS_t SRC_PRI_TD_STS; /* addr: 0x00000028 */
	ca_uint32_t rsrvd8[3];
	TE_CB_VOQ_NO_PRVT_STS0_t VOQ_NO_PRVT_STS0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd9[15];
	TE_CB_EQ_PROFILE_THRSH0_t EQ_PROFILE_THRSH0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd10[31];
	TE_CB_PORT_THRSH_PROFILE0_t PORT_THRSH_PROFILE0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd11[15];
	TE_CB_PORT_GRPTHRSH_PROFILE0_t PORT_GRPTHRSH_PROFILE0; /* addr: 0x0000006c */
	ca_uint32_t rsrvd12[15];
	TE_CB_PORT_THRSH_SELECT_t PORT_THRSH_SELECT; /* addr: 0x0000007c */
	ca_uint32_t rsrvd13[3];
	TE_CB_PORT_FREECNT_MEM_ACCESS_t
	  PORT_FREECNT_MEM_ACCESS; /* addr: 0x00000080 */
	ca_uint32_t rsrvd14[3];
	TE_CB_PORT_FREECNT_MEM_DATA_t PORT_FREECNT_MEM_DATA; /* addr: 0x00000084 */
	ca_uint32_t rsrvd15[3];
	TE_CB_VOQ_THRSH_PROFILE_MEM_ACCESS_t
	  VOQ_THRSH_PROFILE_MEM_ACCESS; /* addr: 0x00000088 */
	ca_uint32_t rsrvd16[3];
	TE_CB_VOQ_THRSH_PROFILE_MEM_DATA2_t
	  VOQ_THRSH_PROFILE_MEM_DATA2; /* addr: 0x0000008c */
	ca_uint32_t rsrvd17[3];
	TE_CB_VOQ_THRSH_PROFILE_MEM_DATA1_t
	  VOQ_THRSH_PROFILE_MEM_DATA1; /* addr: 0x00000090 */
	ca_uint32_t rsrvd18[3];
	TE_CB_VOQ_THRSH_PROFILE_MEM_DATA0_t
	  VOQ_THRSH_PROFILE_MEM_DATA0; /* addr: 0x00000094 */
	ca_uint32_t rsrvd19[3];
	TE_CB_VOQ_THRSH_SELECT_MEM_ACCESS_t
	  VOQ_THRSH_SELECT_MEM_ACCESS; /* addr: 0x00000098 */
	ca_uint32_t rsrvd20[3];
	TE_CB_VOQ_THRSH_SELECT_MEM_DATA_t
	  VOQ_THRSH_SELECT_MEM_DATA; /* addr: 0x0000009c */
	ca_uint32_t rsrvd21[3];
	TE_CB_VOQ_BUFCNT_MEM_ACCESS_t VOQ_BUFCNT_MEM_ACCESS; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd22[3];
	TE_CB_VOQ_BUFCNT_MEM_DATA_t VOQ_BUFCNT_MEM_DATA; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd23[3];
	TE_CB_VOQ_MAX_BUFCNT_MEM_ACCESS_t
	  VOQ_MAX_BUFCNT_MEM_ACCESS; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd24[3];
	TE_CB_VOQ_MAX_BUFCNT_MEM_DATA_t
	  VOQ_MAX_BUFCNT_MEM_DATA; /* addr: 0x000000ac */
	ca_uint32_t rsrvd25[3];
	TE_CB_VOQ_PCNT_MEM_ACCESS_t VOQ_PCNT_MEM_ACCESS; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd26[3];
	TE_CB_VOQ_PCNT_MEM_DATA_t VOQ_PCNT_MEM_DATA; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd27[3];
	TE_CB_GLB0_THRSH_t GLB0_THRSH; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd28[31];
	TE_CB_SRC_CTRL_t SRC_CTRL; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd29[3];
	TE_CB_SRC_PORT_THRSH0_t SRC_PORT_THRSH0; /* addr: 0x000000dc */
	ca_uint32_t rsrvd30[7];
	TE_CB_SRC_PRI_THRSH0_t SRC_PRI_THRSH0; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd31[31];
	TE_CB_SRC_PORT_BUFCNT_MEM_ACCESS_t
	  SRC_PORT_BUFCNT_MEM_ACCESS; /* addr: 0x00000104 */
	ca_uint32_t rsrvd32[3];
	TE_CB_SRC_PORT_BUFCNT_MEM_DATA_t
	  SRC_PORT_BUFCNT_MEM_DATA; /* addr: 0x00000108 */
	ca_uint32_t rsrvd33[3];
	TE_CB_SRC_PRI_BUFCNT_MEM_ACCESS_t
	  SRC_PRI_BUFCNT_MEM_ACCESS; /* addr: 0x0000010c */
	ca_uint32_t rsrvd34[3];
	TE_CB_SRC_PRI_BUFCNT_MEM_DATA_t
	  SRC_PRI_BUFCNT_MEM_DATA; /* addr: 0x00000110 */
	ca_uint32_t rsrvd35[3];
	TE_CB_DQSCH_PORT_THRSH_PROFILE0_t
	  DQSCH_PORT_THRSH_PROFILE0; /* addr: 0x00000114 */
	ca_uint32_t rsrvd36[15];
	TE_CB_DQSCH_PORT_THRSH_SELECT_t
	  DQSCH_PORT_THRSH_SELECT; /* addr: 0x00000124 */
	ca_uint32_t rsrvd37[3];
	TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS_t
	  DQSCH_VOQ_THRSH_PROFILE_MEM_ACCESS; /* addr: 0x00000128 */
	ca_uint32_t rsrvd38[3];
	TE_CB_DQSCH_VOQ_THRSH_PROFILE_MEM_DATA_t
	  DQSCH_VOQ_THRSH_PROFILE_MEM_DATA; /* addr: 0x0000012c */
	ca_uint32_t rsrvd39[3];
	TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS_t
	  DQSCH_VOQ_THRSH_SELECT_MEM_ACCESS; /* addr: 0x00000130 */
	ca_uint32_t rsrvd40[3];
	TE_CB_DQSCH_VOQ_THRSH_SELECT_MEM_DATA_t
	  DQSCH_VOQ_THRSH_SELECT_MEM_DATA; /* addr: 0x00000134 */
} APB0_TE_CB_t;
#endif /* !__ASSEMBLER__ */

/*
 * pm
 */

#define TE_PM_CTRL 0xf4306700
#define TE_PM_CTRL_dft 0x00000ca0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_saturate : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t mem_saturate : 1; /* bits 4:4 */
		ca_uint32_t mem_auto_clr_on_read : 1; /* bits 5:5 */
		ca_uint32_t mem_init : 1; /* bits 6:6 */
		ca_uint32_t mem_disable : 1; /* bits 7:7 */
		ca_uint32_t cnt0_mem_event_sel : 1; /* bits 8:8 */
		ca_uint32_t cnt0_mem_id_sel : 1; /* bits 9:9 */
		ca_uint32_t cnt1_mem_event_sel : 1; /* bits 10:10 */
		ca_uint32_t cnt1_mem_id_sel : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 20;
	} bf;
	ca_uint32_t wrd;
} TE_PM_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_EVENT_CFG_0 0xf4306704
#define TE_PM_EVENT_CFG_0_dft 0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0_lo : 4; /* bits 3:0 */
		ca_uint32_t cnt0_hi : 4; /* bits 7:4 */
		ca_uint32_t cnt1_lo : 4; /* bits 11:8 */
		ca_uint32_t cnt1_hi : 4; /* bits 15:12 */
		ca_uint32_t cnt2_lo : 4; /* bits 19:16 */
		ca_uint32_t cnt2_hi : 4; /* bits 23:20 */
		ca_uint32_t cnt3_lo : 4; /* bits 27:24 */
		ca_uint32_t cnt3_hi : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_EVENT_CFG_0_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_EVENT_CFG_1 0xf4306708
#define TE_PM_EVENT_CFG_1_dft 0x33445550

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0_lo : 4; /* bits 3:0 */
		ca_uint32_t cnt0_hi : 4; /* bits 7:4 */
		ca_uint32_t cnt1_lo : 4; /* bits 11:8 */
		ca_uint32_t cnt1_hi : 4; /* bits 15:12 */
		ca_uint32_t cnt2_lo : 4; /* bits 19:16 */
		ca_uint32_t cnt2_hi : 4; /* bits 23:20 */
		ca_uint32_t cnt3_lo : 4; /* bits 27:24 */
		ca_uint32_t cnt3_hi : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_EVENT_CFG_1_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_STS 0xf430670c
#define TE_PM_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pcnt0_init_done : 1; /* bits 0:0 */
		ca_uint32_t pcnt1_init_done : 1; /* bits 1:1 */
		ca_uint32_t bcnt0_init_done : 1; /* bits 2:2 */
		ca_uint32_t bcnt1_init_done : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} TE_PM_STS_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_PCNT 0xf4306710
#define TE_PM_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_PRE_MARK_PCNT 0xf4306714
#define TE_PM_PRE_MARK_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_PRE_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_POL_DROP_PCNT 0xf4306718
#define TE_PM_POL_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_POL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_TAIL_DROP_PCNT 0xf430671c
#define TE_PM_TAIL_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_TAIL_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_WRED_Y_DROP_PCNT 0xf4306720
#define TE_PM_WRED_Y_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_WRED_Y_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_WRED_G_DROP_PCNT 0xf4306724
#define TE_PM_WRED_G_DROP_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_WRED_G_DROP_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_MARK_PCNT 0xf4306728
#define TE_PM_MARK_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_POL_MARK_PCNT 0xf430672c
#define TE_PM_POL_MARK_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_POL_MARK_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_BYPASS_PCNT 0xf4306730
#define TE_PM_BYPASS_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_BYPASS_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_BYPASS_FLOW_PCNT 0xf4306734
#define TE_PM_BYPASS_FLOW_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_BYPASS_FLOW_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CE_PCNT 0xf4306738
#define TE_PM_CE_PCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CE_PCNT_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_ACCESS 0xf430673c
#define TE_PM_CNT_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 11; /* bits 10:0 */
		ca_uint32_t rsrvd1 : 19;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA8 0xf4306740
#define TE_PM_CNT_MEM_DATA8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt7 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA8_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA7 0xf4306744
#define TE_PM_CNT_MEM_DATA7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt6 : 12; /* bits 11:0 */
		ca_uint32_t cnt7 : 20; /* bits 31:12 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA7_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA6 0xf4306748
#define TE_PM_CNT_MEM_DATA6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt5 : 8; /* bits 7:0 */
		ca_uint32_t cnt6 : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA6_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA5 0xf430674c
#define TE_PM_CNT_MEM_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt4 : 4; /* bits 3:0 */
		ca_uint32_t cnt5 : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA4 0xf4306750
#define TE_PM_CNT_MEM_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA3 0xf4306754
#define TE_PM_CNT_MEM_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA2 0xf4306758
#define TE_PM_CNT_MEM_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA1 0xf430675c
#define TE_PM_CNT_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define TE_PM_CNT_MEM_DATA0 0xf4306760
#define TE_PM_CNT_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} TE_PM_CNT_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* pm */
#ifndef __ASSEMBLER__
typedef struct {
	TE_PM_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	TE_PM_EVENT_CFG_0_t EVENT_CFG_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	TE_PM_EVENT_CFG_1_t EVENT_CFG_1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	TE_PM_STS_t STS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	TE_PM_PCNT_t PCNT; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	TE_PM_PRE_MARK_PCNT_t PRE_MARK_PCNT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	TE_PM_POL_DROP_PCNT_t POL_DROP_PCNT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	TE_PM_TAIL_DROP_PCNT_t TAIL_DROP_PCNT; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	TE_PM_WRED_Y_DROP_PCNT_t WRED_Y_DROP_PCNT; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	TE_PM_WRED_G_DROP_PCNT_t WRED_G_DROP_PCNT; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	TE_PM_MARK_PCNT_t MARK_PCNT; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	TE_PM_POL_MARK_PCNT_t POL_MARK_PCNT; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	TE_PM_BYPASS_PCNT_t BYPASS_PCNT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	TE_PM_BYPASS_FLOW_PCNT_t BYPASS_FLOW_PCNT; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	TE_PM_CE_PCNT_t CE_PCNT; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	TE_PM_CNT_MEM_ACCESS_t CNT_MEM_ACCESS; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	TE_PM_CNT_MEM_DATA8_t CNT_MEM_DATA8; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	TE_PM_CNT_MEM_DATA7_t CNT_MEM_DATA7; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	TE_PM_CNT_MEM_DATA6_t CNT_MEM_DATA6; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	TE_PM_CNT_MEM_DATA5_t CNT_MEM_DATA5; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	TE_PM_CNT_MEM_DATA4_t CNT_MEM_DATA4; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	TE_PM_CNT_MEM_DATA3_t CNT_MEM_DATA3; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	TE_PM_CNT_MEM_DATA2_t CNT_MEM_DATA2; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	TE_PM_CNT_MEM_DATA1_t CNT_MEM_DATA1; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	TE_PM_CNT_MEM_DATA0_t CNT_MEM_DATA0; /* addr: 0x00000060 */
} APB0_TE_PM_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* TE */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_TE_TE_GLB_t te_glb; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[113];
	APB0_TE_POL_t pol; /* addr: 0x00000080 */
	ca_uint32_t rsrvd2[501];
	APB0_TE_SHP_t shp; /* addr: 0x00000300 */
	ca_uint32_t rsrvd3[101];
	APB0_TE_WRED_t wred; /* addr: 0x00000380 */
	ca_uint32_t rsrvd4[99];
	APB0_TE_FC_GLB_t fc_glb; /* addr: 0x00000400 */
	ca_uint32_t rsrvd5[111];
	APB0_TE_FC_t fc[2]; /* addr: 0x00000480 */
	APB0_TE_CB_t cb; /* addr: 0x00000500 */
	ca_uint32_t rsrvd6[357];
	APB0_TE_PM_t pm; /* addr: 0x00000700 */
} APB0_TE_t;
#endif /* !__ASSEMBLER__ */

/*
 * QM
 */

/*
 * AXIM2
 */

#define QM_AXIM2_CONFIG 0xf4307000
#define QM_AXIM2_CONFIG_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write_outtrans_num : 4; /* bits 3:0 */
		ca_uint32_t axi_read_outtrans_num : 4; /* bits 7:4 */
		ca_uint32_t axi_xbus_len : 3; /* bits 10:8 */
		ca_uint32_t write_cacheline_trans_en : 1; /* bits 11:11 */
		ca_uint32_t write_cacheline_trans_size : 1; /* bits 12:12 */
		ca_uint32_t read_cacheline_trans_en : 1; /* bits 13:13 */
		ca_uint32_t read_cacheline_trans_size : 1; /* bits 14:14 */
		ca_uint32_t arcache_eos_en : 1; /* bits 15:15 */
		ca_uint32_t awcache_eos_en : 1; /* bits 16:16 */
		ca_uint32_t reserved : 15; /* bits 31:17 */
	} bf;
	ca_uint32_t wrd;
} QM_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define QM_AXIM2_TIMEOUT_THRESHOLD 0xf4307004
#define QM_AXIM2_TIMEOUT_THRESHOLD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_channel_threshold : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t write_channel_threshold : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 27;
	} bf;
	ca_uint32_t wrd;
} QM_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define QM_AXIM2_INTERRUPT_STATUS 0xf4307008
#define QM_AXIM2_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} QM_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define QM_AXIM2_INTERRUPT_ENABLE 0xf430700c
#define QM_AXIM2_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int_en : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int_en : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int_en : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int_en : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} QM_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
	QM_AXIM2_CONFIG_t CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	QM_AXIM2_TIMEOUT_THRESHOLD_t TIMEOUT_THRESHOLD; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	QM_AXIM2_INTERRUPT_STATUS_t INTERRUPT_STATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	QM_AXIM2_INTERRUPT_ENABLE_t INTERRUPT_ENABLE; /* addr: 0x0000000c */
} APB0_QM_AXIM2_t;
#endif /* !__ASSEMBLER__ */

/*
 * qm
 */

#define QM_QM_REVISION 0xf4307100
#define QM_QM_REVISION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minor : 16; /* bits 15:0 */
		ca_uint32_t major : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_REVISION_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_CTRL 0xf4307104
#define QM_QM_RMU0_CTRL_dft 0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_drop_voqid : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t voq_drop_en : 2; /* bits 11:10 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t no_buf_drop_prevention_ths : 2; /* bits 17:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t no_buf_drop_prevention_en : 1; /* bits 19:19 */
		ca_uint32_t rx_performance_tuning_timeout_ths : 2; /* bits 21:20 */
		ca_uint32_t rsrvd4 : 7;
		ca_uint32_t rx_performance_tuning_en : 1; /* bits 29:29 */
		ca_uint32_t stop_rx_en : 1; /* bits 30:30 */
		ca_uint32_t rx_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_ES_CTRL 0xf4307108
#define QM_QM_ES_CTRL_dft 0x0664ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cpu_en : 8; /* bits 7:0 */
		ca_uint32_t ni_en : 8; /* bits 15:8 */
		ca_uint32_t inccfg_for_pkt_cntrs : 3; /* bits 18:16 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t inccfg_for_err_cntrs : 3; /* bits 22:20 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t crc_err_bypass : 1; /* bits 24:24 */
		ca_uint32_t crc_en : 1; /* bits 25:25 */
		ca_uint32_t cpuepp_wait_timer_max : 2; /* bits 27:26 */
		ca_uint32_t bw_relocation_en : 1; /* bits 28:28 */
		ca_uint32_t bw_relocation_cpu_en : 1; /* bits 29:29 */
		ca_uint32_t tx_performance_tuning_en : 1; /* bits 30:30 */
		ca_uint32_t tx_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_ES_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_ES_CTRL_CPU256 0xf430710c
#define QM_QM_ES_CTRL_CPU256_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cpu256_en : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_ES_CTRL_CPU256_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EPP64_P3_0_INTERRUPT_EN 0xf4307110
#define QM_QM_EPP64_P3_0_INTERRUPT_EN_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0_int_en : 8; /* bits 7:0 */
		ca_uint32_t p1_int_en : 8; /* bits 15:8 */
		ca_uint32_t p2_int_en : 8; /* bits 23:16 */
		ca_uint32_t p3_int_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_EPP64_P3_0_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EPP64_P7_4_INTERRUPT_EN 0xf4307114
#define QM_QM_EPP64_P7_4_INTERRUPT_EN_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p4_int_en : 8; /* bits 7:0 */
		ca_uint32_t p5_int_en : 8; /* bits 15:8 */
		ca_uint32_t p6_int_en : 8; /* bits 23:16 */
		ca_uint32_t p7_int_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_EPP64_P7_4_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EPP256_INTERRUPT_EN 0xf4307118
#define QM_QM_EPP256_INTERRUPT_EN_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t epp256_lo_int_en : 1; /* bits 0:0 */
		ca_uint32_t epp256_hi_int_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} QM_QM_EPP256_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_REFILL_INTERRUPT_EN 0xf430711c
#define QM_QM_EQ_REFILL_INTERRUPT_EN_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq_refill_en : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_REFILL_INTERRUPT_EN_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_INT_SRC 0xf4307120
#define QM_QM_INT_SRC_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header_ecc_error_int_src : 2; /* bits 1:0 */
		ca_uint32_t voqinfo_ecc_error_int_src : 2; /* bits 3:2 */
		ca_uint32_t mmu_ecc_error_int_src : 2; /* bits 5:4 */
		ca_uint32_t sop_eop_error_int_src : 1; /* bits 6:6 */
		ca_uint32_t pkt_lenght_error_int_src : 1; /* bits 7:7 */
		ca_uint32_t rmu0_no_buffer_drop_int_src : 1; /* bits 8:8 */
		ca_uint32_t rmu0_check_error_int_src : 1; /* bits 9:9 */
		ca_uint32_t rmu0_fifo_error_int_src : 1; /* bits 10:10 */
		ca_uint32_t axiarb_fifo_error_int_src : 1; /* bits 11:11 */
		ca_uint32_t dqm_no_buffer_drop_int_src : 1; /* bits 12:12 */
		ca_uint32_t dqm_fe_drop_int_src : 1; /* bits 13:13 */
		ca_uint32_t dqm_fifo_error_int_src : 1; /* bits 14:14 */
		ca_uint32_t eq_load_error_int_src : 1; /* bits 15:15 */
		ca_uint32_t eqm_fifo_error_int_src : 1; /* bits 16:16 */
		ca_uint32_t eqm_stack_error_int_src : 1; /* bits 17:17 */
		ca_uint32_t tmu_fifo_error_int_src : 1; /* bits 18:18 */
		ca_uint32_t tmu_header_error_int_src : 1; /* bits 19:19 */
		ca_uint32_t cpuepp_fifo_error_int_src : 1; /* bits 20:20 */
		ca_uint32_t eqm_buf_size_error_int_src : 1; /* bits 21:21 */
		ca_uint32_t eqm_cfg_error_int_src : 1; /* bits 22:22 */
		ca_uint32_t ni_bridge_fifo_error_int_src : 1; /* bits 23:23 */
		ca_uint32_t tmu_cfg_error_int_src : 1; /* bits 24:24 */
		ca_uint32_t mmu_lkup_bid_out_of_range_int_src : 1; /* bits 25:25 */
		ca_uint32_t eq_overflow_int_src : 1; /* bits 26:26 */
		ca_uint32_t cpu_push_invalid_eq_int_src : 1; /* bits 27:27 */
		ca_uint32_t fbm_returns_no_buffer_int_src : 1; /* bits 28:28 */
		ca_uint32_t axim_rmu0_resp_error_int_src : 1; /* bits 29:29 */
		ca_uint32_t axim_cpuepp_resp_error_int_src : 1; /* bits 30:30 */
		ca_uint32_t axim_qm_int_src : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_INT_SRC_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_INT_SRCE 0xf4307124
#define QM_QM_INT_SRCE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t header_ecc_error_int_srcE : 2; /* bits 1:0 */
		ca_uint32_t voqinfo_ecc_error_int_srcE : 2; /* bits 3:2 */
		ca_uint32_t mmu_ecc_error_int_srcE : 2; /* bits 5:4 */
		ca_uint32_t sop_eop_error_int_srcE : 1; /* bits 6:6 */
		ca_uint32_t pkt_lenght_error_int_srcE : 1; /* bits 7:7 */
		ca_uint32_t rmu0_no_buffer_drop_int_srcE : 1; /* bits 8:8 */
		ca_uint32_t rmu0_check_error_int_srcE : 1; /* bits 9:9 */
		ca_uint32_t rmu0_fifo_error_int_srcE : 1; /* bits 10:10 */
		ca_uint32_t axiarb_fifo_error_int_srcE : 1; /* bits 11:11 */
		ca_uint32_t dqm_no_buffer_drop_int_srcE : 1; /* bits 12:12 */
		ca_uint32_t dqm_fe_drop_int_srcE : 1; /* bits 13:13 */
		ca_uint32_t dqm_fifo_error_int_srcE : 1; /* bits 14:14 */
		ca_uint32_t eq_load_error_int_srcE : 1; /* bits 15:15 */
		ca_uint32_t eqm_fifo_error_int_srcE : 1; /* bits 16:16 */
		ca_uint32_t eqm_stack_error_int_srcE : 1; /* bits 17:17 */
		ca_uint32_t tmu_fifo_error_int_srcE : 1; /* bits 18:18 */
		ca_uint32_t tmu_header_error_int_srcE : 1; /* bits 19:19 */
		ca_uint32_t cpuepp_fifo_error_int_srcE : 1; /* bits 20:20 */
		ca_uint32_t eqm_buf_size_error_int_srcE : 1; /* bits 21:21 */
		ca_uint32_t eqm_cfg_error_int_srcE : 1; /* bits 22:22 */
		ca_uint32_t ni_bridge_fifo_error_int_srcE : 1; /* bits 23:23 */
		ca_uint32_t tmu_cfg_error_int_srcE : 1; /* bits 24:24 */
		ca_uint32_t mmu_lkup_bid_out_of_range_int_srcE : 1; /* bits 25:25 */
		ca_uint32_t eq_overflow_int_srcE : 1; /* bits 26:26 */
		ca_uint32_t cpu_push_invalid_eq_int_srcE : 1; /* bits 27:27 */
		ca_uint32_t fbm_returns_no_buffer_int_srcE : 1; /* bits 28:28 */
		ca_uint32_t axim_rmu0_resp_error_int_srcE : 1; /* bits 29:29 */
		ca_uint32_t axim_cpuepp_resp_error_int_srcE : 1; /* bits 30:30 */
		ca_uint32_t axim_qm_int_srcE : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_INT_SRCE_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_AXI_QOS_CFG 0xf4307128
#define QM_QM_AXI_QOS_CFG_dft 0x0f240000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t axi_id_rmu : 4; /* bits 19:16 */
		ca_uint32_t axi_id_cpuepp : 4; /* bits 23:20 */
		ca_uint32_t axi_id_tmu : 4; /* bits 27:24 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} QM_QM_AXI_QOS_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_PROFILE0 0xf430712c
#define QM_QM_EQ_PROFILE0_STRIDE 4
#define QM_QM_EQ_PROFILE0_COUNT 8
#define QM_QM_EQ_PROFILE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eqp0 : 4; /* bits 3:0 */
		ca_uint32_t eqp1 : 4; /* bits 7:4 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rule : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_PROFILE0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEST_PORT0_EQ_CFG 0xf430714c
#define QM_QM_DEST_PORT0_EQ_CFG_STRIDE 4
#define QM_QM_DEST_PORT0_EQ_CFG_COUNT 16
#define QM_QM_DEST_PORT0_EQ_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t profile_sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEST_PORT0_EQ_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_256_EQ_CFG 0xf430718c
#define QM_QM_CPU_256_EQ_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t profile_sel_lo : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t profile_sel_hi : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_256_EQ_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEST_PORT0_PKT_BUF_CFG 0xf4307190
#define QM_QM_DEST_PORT0_PKT_BUF_CFG_STRIDE 4
#define QM_QM_DEST_PORT0_PKT_BUF_CFG_COUNT 8
#define QM_QM_DEST_PORT0_PKT_BUF_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t head_room_first : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t tail_room_first : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t head_room_rest : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t tail_room_rest : 6; /* bits 29:24 */
		ca_uint32_t rsrvd4 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEST_PORT0_PKT_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEST_CPU_EPP256_HI_BUF_CFG 0xf43071b0
#define QM_QM_DEST_CPU_EPP256_HI_BUF_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t head_room_first : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t tail_room_first : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t head_room_rest : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t tail_room_rest : 6; /* bits 29:24 */
		ca_uint32_t rsrvd4 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEST_CPU_EPP256_HI_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEST_CPU_EPP256_LO_BUF_CFG 0xf43071b4
#define QM_QM_DEST_CPU_EPP256_LO_BUF_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t head_room_first : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t tail_room_first : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t head_room_rest : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t tail_room_rest : 6; /* bits 29:24 */
		ca_uint32_t rsrvd4 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEST_CPU_EPP256_LO_BUF_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CFG0_EQ0 0xf43071b8
#define QM_QM_CFG0_EQ0_STRIDE 20
#define QM_QM_CFG0_EQ0_COUNT 16
#define QM_QM_CFG0_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t phy_addr_start : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CFG0_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CFG1_EQ0 0xf43071bc
#define QM_QM_CFG1_EQ0_STRIDE 20
#define QM_QM_CFG1_EQ0_COUNT 16
#define QM_QM_CFG1_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bid_start : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t total_buffer_num : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CFG1_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CFG2_EQ0 0xf43071c0
#define QM_QM_CFG2_EQ0_STRIDE 20
#define QM_QM_CFG2_EQ0_COUNT 16
#define QM_QM_CFG2_EQ0_dft 0x0000ff01

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t buffer_size : 3; /* bits 2:0 */
		ca_uint32_t cpu_eq : 1; /* bits 3:3 */
		ca_uint32_t refill_fbm_eqid : 3; /* bits 6:4 */
		ca_uint32_t refill_en : 1; /* bits 7:7 */
		ca_uint32_t refill_ths : 8; /* bits 15:8 */
		ca_uint32_t buffer_weight : 3; /* bits 18:16 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CFG2_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CFG3_EQ0 0xf43071c4
#define QM_QM_CFG3_EQ0_STRIDE 20
#define QM_QM_CFG3_EQ0_COUNT 16
#define QM_QM_CFG3_EQ0_dft 0x20000020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qos : 4; /* bits 3:0 */
		ca_uint32_t cache : 4; /* bits 7:4 */
		ca_uint32_t snoop : 4; /* bits 11:8 */
		ca_uint32_t bar : 2; /* bits 13:12 */
		ca_uint32_t domain : 2; /* bits 15:14 */
		ca_uint32_t user : 6; /* bits 21:16 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t acd_cmd : 1; /* bits 24:24 */
		ca_uint32_t cache_line_split : 1; /* bits 25:25 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t cache_eos : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CFG3_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CFG4_EQ0 0xf43071c8
#define QM_QM_CFG4_EQ0_STRIDE 20
#define QM_QM_CFG4_EQ0_COUNT 16
#define QM_QM_CFG4_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_top_bit : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CFG4_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQM_PA_REQ0 0xf43072f8
#define QM_QM_EQM_PA_REQ0_STRIDE 4
#define QM_QM_EQM_PA_REQ0_COUNT 16
#define QM_QM_EQM_PA_REQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inactive_bid_cntr : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 17;
		ca_uint32_t req : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQM_PA_REQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_PUSH_RDY0 0xf4307338
#define QM_QM_CPU_PUSH_RDY0_STRIDE 8
#define QM_QM_CPU_PUSH_RDY0_COUNT 8
#define QM_QM_CPU_PUSH_RDY0_dft 0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 31;
		ca_uint32_t rdy : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_PUSH_RDY0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_PUSH_PADDR0 0xf430733c
#define QM_QM_CPU_PUSH_PADDR0_STRIDE 8
#define QM_QM_CPU_PUSH_PADDR0_COUNT 8
#define QM_QM_CPU_PUSH_PADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eqid : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t addr : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_PUSH_PADDR0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_CFG_LOAD 0xf4307378
#define QM_QM_EQ_CFG_LOAD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t load : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_CFG_LOAD_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_PHY_ADDR_RETURN_CTRL 0xf430737c
#define QM_QM_EQ_PHY_ADDR_RETURN_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq_id : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t phy_addr_retrieval_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_PHY_ADDR_RETURN_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_RETURN_PHY_ADDR 0xf4307380
#define QM_QM_EQ_RETURN_PHY_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eq_id : 4; /* bits 3:0 */
		ca_uint32_t valid : 1; /* bits 4:4 */
		ca_uint32_t retrieval_done : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t phy_addr : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_RETURN_PHY_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_ACTIVE_STACK_CFG 0xf4307384
#define QM_QM_ACTIVE_STACK_CFG_dft 0x001a1410

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_ths : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t mid_ths : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t high_ths : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 11;
	} bf;
	ca_uint32_t wrd;
} QM_QM_ACTIVE_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_INACTIVE_STACK_CFG 0xf4307388
#define QM_QM_INACTIVE_STACK_CFG_dft 0x001a1410

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t low_ths : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t mid_ths : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t high_ths : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 11;
	} bf;
	ca_uint32_t wrd;
} QM_QM_INACTIVE_STACK_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_STACK_CTRL 0xf430738c
#define QM_QM_EQ_STACK_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stack_unfill : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_STACK_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_EQ_STACK_UNFILL_STS 0xf4307390
#define QM_QM_EQ_STACK_UNFILL_STS_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t done : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_EQ_STACK_UNFILL_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_SCH_CFG0 0xf4307394
#define QM_QM_SCH_CFG0_STRIDE 4
#define QM_QM_SCH_CFG0_COUNT 48
#define QM_QM_SCH_CFG0_dft 0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_en : 8; /* bits 7:0 */
		ca_uint32_t flush_voqid : 3; /* bits 10:8 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t flush_en : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_SCH_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0 0xf4307454
#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_STRIDE 8
#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_COUNT 16
#define QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq0 : 8; /* bits 7:0 */
		ca_uint32_t voq1 : 8; /* bits 15:8 */
		ca_uint32_t voq2 : 8; /* bits 23:16 */
		ca_uint32_t voq3 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0 0xf4307458
#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_STRIDE 8
#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_COUNT 16
#define QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq4 : 8; /* bits 7:0 */
		ca_uint32_t voq5 : 8; /* bits 15:8 */
		ca_uint32_t voq6 : 8; /* bits 23:16 */
		ca_uint32_t voq7 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_PORT7_0_WEIGHT_RATIO_CFG 0xf43074d4
#define QM_QM_PORT7_0_WEIGHT_RATIO_CFG_dft 0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0 : 4; /* bits 3:0 */
		ca_uint32_t port1 : 4; /* bits 7:4 */
		ca_uint32_t port2 : 4; /* bits 11:8 */
		ca_uint32_t port3 : 4; /* bits 15:12 */
		ca_uint32_t port4 : 4; /* bits 19:16 */
		ca_uint32_t port5 : 4; /* bits 23:20 */
		ca_uint32_t port6 : 4; /* bits 27:24 */
		ca_uint32_t port7 : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_PORT7_0_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_PORT15_8_WEIGHT_RATIO_CFG 0xf43074d8
#define QM_QM_PORT15_8_WEIGHT_RATIO_CFG_dft 0x11111111

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port8 : 4; /* bits 3:0 */
		ca_uint32_t port9 : 4; /* bits 7:4 */
		ca_uint32_t port10 : 4; /* bits 11:8 */
		ca_uint32_t port11 : 4; /* bits 15:12 */
		ca_uint32_t port12 : 4; /* bits 19:16 */
		ca_uint32_t port13 : 4; /* bits 23:20 */
		ca_uint32_t port14 : 4; /* bits 27:24 */
		ca_uint32_t port15 : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_PORT15_8_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DRR_WEIGHT_BASE 0xf43074dc
#define QM_QM_DRR_WEIGHT_BASE_dft 0x00000114

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t w_rate : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t base_select : 2; /* bits 9:8 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t cpu_dwrr_unit : 1; /* bits 16:16 */
		ca_uint32_t ni_dwrr_unit : 1; /* bits 17:17 */
		ca_uint32_t rsrvd3 : 14;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DRR_WEIGHT_BASE_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP0_CFG 0xf43074e0
#define QM_QM_CPU_EPP0_CFG_STRIDE 4
#define QM_QM_CPU_EPP0_CFG_COUNT 8
#define QM_QM_CPU_EPP0_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t map_mode : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_CT_CFG 0xf4307500
#define QM_QM_CPU_EPP_CT_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t timer_base : 2; /* bits 1:0 */
		ca_uint32_t timer_base_256 : 2; /* bits 3:2 */
		ca_uint32_t axi_req_accu : 2; /* bits 5:4 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_CT_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_256_CFG 0xf4307504
#define QM_QM_CPU_EPP_256_CFG_dft 0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t water_mark : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_256_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_256_FIFO_INT_HI 0xf4307508
#define QM_QM_CPU_EPP_256_FIFO_INT_HI_dft 0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mask : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_256_FIFO_INT_HI_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_256_FIFO_INT_LO 0xf430750c
#define QM_QM_CPU_EPP_256_FIFO_INT_LO_dft 0xffff0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mask : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_256_FIFO_INT_LO_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_FIFO_CFG_profile0 0xf4307510
#define QM_QM_CPU_EPP_FIFO_CFG_profile0_STRIDE 4
#define QM_QM_CPU_EPP_FIFO_CFG_profile0_COUNT 8
#define QM_QM_CPU_EPP_FIFO_CFG_profile0_dft 0xe0000801

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t high_ths : 4; /* bits 3:0 */
		ca_uint32_t timer_ths : 4; /* bits 7:4 */
		ca_uint32_t size : 21; /* bits 28:8 */
		ca_uint32_t max_buf_cnt_per_pkt : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_FIFO_CFG_profile0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_STATUS0 0xf4307530
#define QM_QM_CPU_EPP_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_STATUS1 0xf4307534
#define QM_QM_CPU_EPP_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_256_STATUS0 0xf4307538
#define QM_QM_CPU_EPP_256_STATUS0_STRIDE 4
#define QM_QM_CPU_EPP_256_STATUS0_COUNT 8
#define QM_QM_CPU_EPP_256_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_256_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_FIFO0_0_CFG 0xf4307558
#define QM_QM_CPU_EPP_FIFO0_0_CFG_STRIDE 32
#define QM_QM_CPU_EPP_FIFO0_0_CFG_COUNT 8
#define QM_QM_CPU_EPP_FIFO0_0_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t profile_sel : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_FIFO0_0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPU_EPP_FIFO_256_CFG 0xf4307658
#define QM_QM_CPU_EPP_FIFO_256_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t profile_sel_lo : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t profile_sel_hi : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPU_EPP_FIFO_256_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_AXI_ATTRIBUTE_ACCESS 0xf430765c
#define QM_QM_AXI_ATTRIBUTE_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ADDR : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 24;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_AXI_ATTRIBUTE_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_AXI_ATTRIBUTE_DATA1 0xf4307660
#define QM_QM_AXI_ATTRIBUTE_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_top_bit : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} QM_QM_AXI_ATTRIBUTE_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_AXI_ATTRIBUTE_DATA0 0xf4307664
#define QM_QM_AXI_ATTRIBUTE_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qos : 4; /* bits 3:0 */
		ca_uint32_t cache : 4; /* bits 7:4 */
		ca_uint32_t snoop : 4; /* bits 11:8 */
		ca_uint32_t bar : 2; /* bits 13:12 */
		ca_uint32_t domain : 2; /* bits 15:14 */
		ca_uint32_t user : 6; /* bits 21:16 */
		ca_uint32_t prot : 3; /* bits 24:22 */
		ca_uint32_t ace_cmd : 1; /* bits 25:25 */
		ca_uint32_t axi_top_bit : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_AXI_ATTRIBUTE_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_BID_PADDR_LKUP_ACCESS 0xf4307668
#define QM_QM_BID_PADDR_LKUP_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ADDR : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 17;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_BID_PADDR_LKUP_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_BID_PADDR_LKUP_DATA 0xf430766c
#define QM_QM_BID_PADDR_LKUP_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ecc : 6; /* bits 5:0 */
		ca_uint32_t Reserved : 1; /* bits 6:6 */
		ca_uint32_t phy_addr : 25; /* bits 31:7 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_BID_PADDR_LKUP_DATA_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_INFO_MEMORY_ACCESS 0xf4307670
#define QM_QM_VOQ_INFO_MEMORY_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ADDR : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 21;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_INFO_MEMORY_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_INFO_MEMORY_DATA2 0xf4307674
#define QM_QM_VOQ_INFO_MEMORY_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bcntr : 11; /* bits 10:0 */
		ca_uint32_t ecc : 9; /* bits 19:11 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_INFO_MEMORY_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_INFO_MEMORY_DATA1 0xf4307678
#define QM_QM_VOQ_INFO_MEMORY_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_header : 1; /* bits 0:0 */
		ca_uint32_t voq_tail : 14; /* bits 14:1 */
		ca_uint32_t voq_head : 14; /* bits 28:15 */
		ca_uint32_t bcntr : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_INFO_MEMORY_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_INFO_MEMORY_DATA0 0xf430767c
#define QM_QM_VOQ_INFO_MEMORY_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq_header : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_INFO_MEMORY_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_HEADER_MEMORY_ACCESS 0xf4307680
#define QM_QM_HEADER_MEMORY_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ADDR : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_HEADER_MEMORY_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_HEADER_MEMORY_DATA1 0xf4307684
#define QM_QM_HEADER_MEMORY_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_type_ptp : 1; /* bits 0:0 */
		ca_uint32_t ecc : 7; /* bits 7:1 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} QM_QM_HEADER_MEMORY_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_HEADER_MEMORY_DATA0 0xf4307688
#define QM_QM_HEADER_MEMORY_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_length : 14; /* bits 13:0 */
		ca_uint32_t eop : 1; /* bits 14:14 */
		ca_uint32_t sop : 1; /* bits 15:15 */
		ca_uint32_t next_buffer_ptr : 14; /* bits 29:16 */
		ca_uint32_t l4err : 1; /* bits 30:30 */
		ca_uint32_t pkt_type_cpu : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_HEADER_MEMORY_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_HDM_WRITE_PROTECTION 0xf430768c
#define QM_QM_HDM_WRITE_PROTECTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t passwd : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_HDM_WRITE_PROTECTION_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_MONITOR0_EQ0 0xf4307690
#define QM_QM_MONITOR0_EQ0_STRIDE 16
#define QM_QM_MONITOR0_EQ0_COUNT 16
#define QM_QM_MONITOR0_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tail : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t head : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_MONITOR0_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_MONITOR1_EQ0 0xf4307694
#define QM_QM_MONITOR1_EQ0_STRIDE 16
#define QM_QM_MONITOR1_EQ0_COUNT 16
#define QM_QM_MONITOR1_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t inactive_head : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_MONITOR1_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_MONITOR2_EQ0 0xf4307698
#define QM_QM_MONITOR2_EQ0_STRIDE 16
#define QM_QM_MONITOR2_EQ0_COUNT 16
#define QM_QM_MONITOR2_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inactive_cntr : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t inactive_tail : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_MONITOR2_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_MONITOR3_EQ0 0xf430769c
#define QM_QM_MONITOR3_EQ0_STRIDE 16
#define QM_QM_MONITOR3_EQ0_COUNT 16
#define QM_QM_MONITOR3_EQ0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inactive_stack_cntr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 11;
		ca_uint32_t stack_cntr : 5; /* bits 20:16 */
		ca_uint32_t rsrvd2 : 11;
	} bf;
	ca_uint32_t wrd;
} QM_QM_MONITOR3_EQ0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_RX_PKT_CNTR 0xf4307790
#define QM_QM_RMU0_RX_PKT_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_RX_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_RX_PACKET_HEADER_INFO1 0xf4307794
#define QM_QM_RMU0_RX_PACKET_HEADER_INFO1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t info1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_RX_PACKET_HEADER_INFO1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_RX_PACKET_HEADER_INFO0 0xf4307798
#define QM_QM_RMU0_RX_PACKET_HEADER_INFO0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t info0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_RX_PACKET_HEADER_INFO0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_PKT_CNTR 0xf430779c
#define QM_QM_TX_PKT_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_PKT_CNTR_ALL_NI 0xf43077a0
#define QM_QM_TX_PKT_CNTR_ALL_NI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_PKT_CNTR_ALL_NI_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_PKT_CNTR_CPU0 0xf43077a4
#define QM_QM_TX_PKT_CNTR_CPU0_STRIDE 4
#define QM_QM_TX_PKT_CNTR_CPU0_COUNT 8
#define QM_QM_TX_PKT_CNTR_CPU0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_PKT_CNTR_CPU0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_PKT_CNTR_CPU_256 0xf43077c4
#define QM_QM_TX_PKT_CNTR_CPU_256_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_PKT_CNTR_CPU_256_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_PACKET_HEADER_INFO1 0xf43077c8
#define QM_QM_TX_PACKET_HEADER_INFO1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t info1 : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_PACKET_HEADER_INFO1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_PACKET_HEADER_INFO0 0xf43077cc
#define QM_QM_TX_PACKET_HEADER_INFO0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t info0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_PACKET_HEADER_INFO0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_NO_BUF_DROP_PKT_INFO 0xf43077d0
#define QM_QM_RMU0_NO_BUF_DROP_PKT_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eqid : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t voqid : 9; /* bits 24:16 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_NO_BUF_DROP_PKT_INFO_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR 0xf43077d4
#define QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_FE_DROP_PKT_CNTR 0xf43077d8
#define QM_QM_RMU0_FE_DROP_PKT_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_FE_DROP_PKT_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TX_CRC_ERROR_NI_CNTR 0xf43077dc
#define QM_QM_TX_CRC_ERROR_NI_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cntr : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} QM_QM_TX_CRC_ERROR_NI_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_STATUS0 0xf43077e0
#define QM_QM_VOQ_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_STATUS1 0xf43077e4
#define QM_QM_VOQ_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_STATUS2 0xf43077e8
#define QM_QM_VOQ_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_STATUS2_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_STATUS3 0xf43077ec
#define QM_QM_VOQ_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_STATUS3_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS0 0xf43077f0
#define QM_QM_VOQ_EPP256_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS1 0xf43077f4
#define QM_QM_VOQ_EPP256_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS2 0xf43077f8
#define QM_QM_VOQ_EPP256_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS2_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS3 0xf43077fc
#define QM_QM_VOQ_EPP256_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS3_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS4 0xf4307800
#define QM_QM_VOQ_EPP256_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS4_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS5 0xf4307804
#define QM_QM_VOQ_EPP256_STATUS5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS5_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS6 0xf4307808
#define QM_QM_VOQ_EPP256_STATUS6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS6_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_VOQ_EPP256_STATUS7 0xf430780c
#define QM_QM_VOQ_EPP256_STATUS7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t status : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_VOQ_EPP256_STATUS7_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_PHY_PORT_STS 0xf4307810
#define QM_QM_PHY_PORT_STS_dft 0xa5ffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nirx_qm_port_rdy : 8; /* bits 7:0 */
		ca_uint32_t te_qm_es_ni_ok : 8; /* bits 15:8 */
		ca_uint32_t te_qm_es_cpu_ok : 8; /* bits 23:16 */
		ca_uint32_t qm_nitx_rdy : 1; /* bits 24:24 */
		ca_uint32_t nitx_qm_vld : 1; /* bits 25:25 */
		ca_uint32_t nirx_qm_rdy : 1; /* bits 26:26 */
		ca_uint32_t qm_nirx_vld : 1; /* bits 27:27 */
		ca_uint32_t axi_write_rdy : 1; /* bits 28:28 */
		ca_uint32_t axi_read_rdy : 1; /* bits 29:29 */
		ca_uint32_t qm_init_done : 1; /* bits 30:30 */
		ca_uint32_t qm_idle : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_PHY_PORT_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_SUB_MODULE_STS 0xf4307814
#define QM_QM_SUB_MODULE_STS_dft 0x00f0bfff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t qm_axi_att_idle : 1; /* bits 0:0 */
		ca_uint32_t qm_intf_idle : 1; /* bits 1:1 */
		ca_uint32_t qm_eqm_idle : 1; /* bits 2:2 */
		ca_uint32_t qm_rmu_idle : 1; /* bits 3:3 */
		ca_uint32_t qm_tmu_idle : 1; /* bits 4:4 */
		ca_uint32_t qm_cpuepp_idle : 1; /* bits 5:5 */
		ca_uint32_t qm_dqm_idle : 1; /* bits 6:6 */
		ca_uint32_t qm_hdm_idle : 1; /* bits 7:7 */
		ca_uint32_t qm_mmu_idle : 1; /* bits 8:8 */
		ca_uint32_t qm_ni_bridge_idle : 1; /* bits 9:9 */
		ca_uint32_t tmu_sch_rdy : 1; /* bits 10:10 */
		ca_uint32_t epp_sch_rdy : 1; /* bits 11:11 */
		ca_uint32_t eqm_rmu_rdy : 1; /* bits 12:12 */
		ca_uint32_t dqm_rmu_rdy : 1; /* bits 13:13 */
		ca_uint32_t sch_dqm_outstd_req : 1; /* bits 14:14 */
		ca_uint32_t sch_idle : 1; /* bits 15:15 */
		ca_uint32_t fsm_dqm_hdm : 4; /* bits 19:16 */
		ca_uint32_t fsm_dqm_voq_info : 4; /* bits 23:20 */
		ca_uint32_t qm_tmu_fsm_axi_rd : 4; /* bits 27:24 */
		ca_uint32_t qm_rmu_fsm_axi_wr : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_SUB_MODULE_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_RMU0_FIFO_STS 0xf4307818
#define QM_QM_RMU0_FIFO_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data_fifo_depth : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t cmd_fifo_depth : 4; /* bits 15:12 */
		ca_uint32_t cmd_resp_fifo_depth : 5; /* bits 20:16 */
		ca_uint32_t axi_fifo_depth : 3; /* bits 23:21 */
		ca_uint32_t header_fifo_depth : 5; /* bits 28:24 */
		ca_uint32_t rsrvd2 : 3;
	} bf;
	ca_uint32_t wrd;
} QM_QM_RMU0_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_STS 0xf430781c
#define QM_QM_CPUEPP_STS_dft 0x80082020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t epp_ptr_resp_fifo_depth : 5; /* bits 4:0 */
		ca_uint32_t epp_ptr_resp_fifo_empty : 1; /* bits 5:5 */
		ca_uint32_t epp_ptr_resp_fifo_full : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t eppresp_fifo_depth : 5; /* bits 12:8 */
		ca_uint32_t eppresp_fifo_empty : 1; /* bits 13:13 */
		ca_uint32_t eppresp_fifo_full : 1; /* bits 14:14 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t eppcmd_fifo_depth : 3; /* bits 18:16 */
		ca_uint32_t eppcmd_fifo_empty : 1; /* bits 19:19 */
		ca_uint32_t eppcmd_fifo_full : 1; /* bits 20:20 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t axi_write_state : 3; /* bits 26:24 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t axi_write_req_wait : 1; /* bits 29:29 */
		ca_uint32_t axi_write_req : 1; /* bits 30:30 */
		ca_uint32_t epp_sch_rdy : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_SM_STS 0xf4307820
#define QM_QM_CPUEPP_SM_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t paddr_mem_ctrl_state : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t rwptr_mem_ctrl_state : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 21;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_SM_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_AXI_CNT_STS 0xf4307824
#define QM_QM_CPUEPP_AXI_CNT_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gnt_cnt : 16; /* bits 15:0 */
		ca_uint32_t resp_cnt : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_AXI_CNT_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DQM_FIFO_STS 0xf4307828
#define QM_QM_DQM_FIFO_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dqm_rmureq_fifo_depth : 4; /* bits 3:0 */
		ca_uint32_t dqm_nbrcy_fifo_depth : 4; /* bits 7:4 */
		ca_uint32_t dqmreq_fifo_depth : 5; /* bits 12:8 */
		ca_uint32_t dqm_fercy_fifo_depth : 3; /* bits 15:13 */
		ca_uint32_t dqmlnk_fifo_depth : 5; /* bits 20:16 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t dqmresp_fifo_depth : 6; /* bits 29:24 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DQM_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_TMU_FIFO_STS 0xf430782c
#define QM_QM_TMU_FIFO_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmu_rcy_fifo_depth : 4; /* bits 3:0 */
		ca_uint32_t txcmd_fifo_depth : 5; /* bits 8:4 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t tmu_axi_beat_add : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_TMU_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_NI_BRIDGE_FIFO_STS 0xf4307830
#define QM_QM_NI_BRIDGE_FIFO_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t beat : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t ni_eop_fifo_depth : 3; /* bits 14:12 */
		ca_uint32_t ni_wr_pkt : 1; /* bits 15:15 */
		ca_uint32_t entry : 8; /* bits 23:16 */
		ca_uint32_t pkt : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_NI_BRIDGE_FIFO_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_SPARE_CFG 0xf4307834
#define QM_QM_SPARE_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_SPARE_CFG_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_SPARE_STS 0xf4307838
#define QM_QM_SPARE_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_SPARE_STS_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUD_DATA1 0xf430783c
#define QM_QM_DEBUD_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUD_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUD_DATA0 0xf4307840
#define QM_QM_DEBUD_DATA0_dft 0x80000008

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUD_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS0 0xf4307844
#define QM_QM_DEBUG_STS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rmu_eqm_ack_cntr : 8; /* bits 7:0 */
		ca_uint32_t rmu_lkup_ack_cntr : 8; /* bits 15:8 */
		ca_uint32_t rmu_hdr_fifo_rd_cntr : 4; /* bits 19:16 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t rmu_axi_fifo_wr_cntr : 4; /* bits 27:24 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS0_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS1 0xf4307848
#define QM_QM_DEBUG_STS1_dft 0x00112300

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fsm_rmu_eqm_req : 4; /* bits 3:0 */
		ca_uint32_t fsm_axi_wr : 4; /* bits 7:4 */
		ca_uint32_t eqm_rmu_rdy : 1; /* bits 8:8 */
		ca_uint32_t dqm_rmu_rdy : 1; /* bits 9:9 */
		ca_uint32_t rmuhdr_fifo_dout_vld : 1; /* bits 10:10 */
		ca_uint32_t rmuhdr_fifo_rd : 1; /* bits 11:11 */
		ca_uint32_t rmudata_fifo_dout_vld : 1; /* bits 12:12 */
		ca_uint32_t rmu_fifo_data_rdy : 1; /* bits 13:13 */
		ca_uint32_t rx_axi_fifo_almost_full : 1; /* bits 14:14 */
		ca_uint32_t rmu_lkup_flag : 1; /* bits 15:15 */
		ca_uint32_t rx_axi_fifo_empty : 1; /* bits 16:16 */
		ca_uint32_t lkup_axi_start : 1; /* bits 17:17 */
		ca_uint32_t rmu_axi_write_rdy : 1; /* bits 18:18 */
		ca_uint32_t rmu_lkup_pending : 1; /* bits 19:19 */
		ca_uint32_t qm_fe_rdy : 1; /* bits 20:20 */
		ca_uint32_t rmudata_fifo_almost_full : 1; /* bits 21:21 */
		ca_uint32_t rmuhdr_fifo_almost_full : 1; /* bits 22:22 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t outstd_axi_cmd_cntr : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS1_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS2 0xf430784c
#define QM_QM_DEBUG_STS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rmu_lkup_bid : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t ncpu_rmu_rd : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS2_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS3 0xf4307850
#define QM_QM_DEBUG_STS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rmu_lkup_cur_bid : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t cpu_rmu_rd : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS3_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS4 0xf4307854
#define QM_QM_DEBUG_STS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rmu_lkup_paddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS4_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS5 0xf4307858
#define QM_QM_DEBUG_STS5_dft 0x08000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ni_bridge_eop_cntr : 16; /* bits 15:0 */
		ca_uint32_t eqm_stack15_cntr : 5; /* bits 20:16 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t axiatt_tmu_lkup_ack : 1; /* bits 24:24 */
		ca_uint32_t tmu_axiatt_lkup_req : 1; /* bits 25:25 */
		ca_uint32_t tmu_axi_strt : 1; /* bits 26:26 */
		ca_uint32_t qm_ni_bridge_fifo_wr_rdy : 1; /* bits 27:27 */
		ca_uint32_t sch_dqm_req : 1; /* bits 28:28 */
		ca_uint32_t tmu_tx_vld : 1; /* bits 29:29 */
		ca_uint32_t axi_att_lkup_ack_flag : 1; /* bits 30:30 */
		ca_uint32_t tmu_eqm_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS5_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS6 0xf430785c
#define QM_QM_DEBUG_STS6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmu_axi_gnt_cntr : 16; /* bits 15:0 */
		ca_uint32_t dqm_tmu_ack_cntr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS6_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS7 0xf4307860
#define QM_QM_DEBUG_STS7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmu_axi_eof_cntr : 16; /* bits 15:0 */
		ca_uint32_t ni_fifo_eop_cntr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS7_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS8 0xf4307864
#define QM_QM_DEBUG_STS8_dft 0x00000081

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmu_axi_wr_ths : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 18;
		ca_uint32_t ni_bridge_drain_pid : 3; /* bits 30:28 */
		ca_uint32_t ni_bridge_drain_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS8_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS9 0xf4307868
#define QM_QM_DEBUG_STS9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmu_axi_beat_add_max : 16; /* bits 15:0 */
		ca_uint32_t tmu_axi_beat_add : 14; /* bits 29:16 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS9_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_DEBUG_STS10 0xf430786c
#define QM_QM_DEBUG_STS10_dft 0xdead0419

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rmu_test : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_DEBUG_STS10_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* qm */
#ifndef __ASSEMBLER__
typedef struct {
	QM_QM_REVISION_t REVISION; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	QM_QM_RMU0_CTRL_t RMU0_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	QM_QM_ES_CTRL_t ES_CTRL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	QM_QM_ES_CTRL_CPU256_t ES_CTRL_CPU256; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	QM_QM_EPP64_P3_0_INTERRUPT_EN_t
	  EPP64_P3_0_INTERRUPT_EN; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	QM_QM_EPP64_P7_4_INTERRUPT_EN_t
	  EPP64_P7_4_INTERRUPT_EN; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	QM_QM_EPP256_INTERRUPT_EN_t EPP256_INTERRUPT_EN; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	QM_QM_EQ_REFILL_INTERRUPT_EN_t EQ_REFILL_INTERRUPT_EN; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	QM_QM_INT_SRC_t INT_SRC; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	QM_QM_INT_SRCE_t INT_SRCE; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	QM_QM_AXI_QOS_CFG_t AXI_QOS_CFG; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	QM_QM_EQ_PROFILE0_t EQ_PROFILE0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[31];
	QM_QM_DEST_PORT0_EQ_CFG_t DEST_PORT0_EQ_CFG; /* addr: 0x0000004c */
	ca_uint32_t rsrvd13[63];
	QM_QM_CPU_256_EQ_CFG_t CPU_256_EQ_CFG; /* addr: 0x0000008c */
	ca_uint32_t rsrvd14[3];
	QM_QM_DEST_PORT0_PKT_BUF_CFG_t DEST_PORT0_PKT_BUF_CFG; /* addr: 0x00000090 */
	ca_uint32_t rsrvd15[31];
	QM_QM_DEST_CPU_EPP256_HI_BUF_CFG_t
	  DEST_CPU_EPP256_HI_BUF_CFG; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd16[3];
	QM_QM_DEST_CPU_EPP256_LO_BUF_CFG_t
	  DEST_CPU_EPP256_LO_BUF_CFG; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd17[3];
	QM_QM_CFG0_EQ0_t CFG0_EQ0; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd18[3];
	QM_QM_CFG1_EQ0_t CFG1_EQ0; /* addr: 0x000000bc */
	ca_uint32_t rsrvd19[3];
	QM_QM_CFG2_EQ0_t CFG2_EQ0; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd20[3];
	QM_QM_CFG3_EQ0_t CFG3_EQ0; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd21[3];
	QM_QM_CFG4_EQ0_t CFG4_EQ0; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd22[303];
	QM_QM_EQM_PA_REQ0_t EQM_PA_REQ0; /* addr: 0x000001f8 */
	ca_uint32_t rsrvd23[63];
	QM_QM_CPU_PUSH_RDY0_t CPU_PUSH_RDY0; /* addr: 0x00000238 */
	ca_uint32_t rsrvd24[3];
	QM_QM_CPU_PUSH_PADDR0_t CPU_PUSH_PADDR0; /* addr: 0x0000023c */
	ca_uint32_t rsrvd25[59];
	QM_QM_EQ_CFG_LOAD_t EQ_CFG_LOAD; /* addr: 0x00000278 */
	ca_uint32_t rsrvd26[3];
	QM_QM_EQ_PHY_ADDR_RETURN_CTRL_t
	  EQ_PHY_ADDR_RETURN_CTRL; /* addr: 0x0000027c */
	ca_uint32_t rsrvd27[3];
	QM_QM_EQ_RETURN_PHY_ADDR_t EQ_RETURN_PHY_ADDR; /* addr: 0x00000280 */
	ca_uint32_t rsrvd28[3];
	QM_QM_ACTIVE_STACK_CFG_t ACTIVE_STACK_CFG; /* addr: 0x00000284 */
	ca_uint32_t rsrvd29[3];
	QM_QM_INACTIVE_STACK_CFG_t INACTIVE_STACK_CFG; /* addr: 0x00000288 */
	ca_uint32_t rsrvd30[3];
	QM_QM_EQ_STACK_CTRL_t EQ_STACK_CTRL; /* addr: 0x0000028c */
	ca_uint32_t rsrvd31[3];
	QM_QM_EQ_STACK_UNFILL_STS_t EQ_STACK_UNFILL_STS; /* addr: 0x00000290 */
	ca_uint32_t rsrvd32[3];
	QM_QM_SCH_CFG0_t SCH_CFG0; /* addr: 0x00000294 */
	ca_uint32_t rsrvd33[191];
	QM_QM_VOQ3_0_WEIGHT_RATIO_CFG0_t
	  VOQ3_0_WEIGHT_RATIO_CFG0; /* addr: 0x00000354 */
	ca_uint32_t rsrvd34[3];
	QM_QM_VOQ7_4_WEIGHT_RATIO_CFG0_t
	  VOQ7_4_WEIGHT_RATIO_CFG0; /* addr: 0x00000358 */
	ca_uint32_t rsrvd35[123];
	QM_QM_PORT7_0_WEIGHT_RATIO_CFG_t
	  PORT7_0_WEIGHT_RATIO_CFG; /* addr: 0x000003d4 */
	ca_uint32_t rsrvd36[3];
	QM_QM_PORT15_8_WEIGHT_RATIO_CFG_t
	  PORT15_8_WEIGHT_RATIO_CFG; /* addr: 0x000003d8 */
	ca_uint32_t rsrvd37[3];
	QM_QM_DRR_WEIGHT_BASE_t DRR_WEIGHT_BASE; /* addr: 0x000003dc */
	ca_uint32_t rsrvd38[3];
	QM_QM_CPU_EPP0_CFG_t CPU_EPP0_CFG; /* addr: 0x000003e0 */
	ca_uint32_t rsrvd39[31];
	QM_QM_CPU_EPP_CT_CFG_t CPU_EPP_CT_CFG; /* addr: 0x00000400 */
	ca_uint32_t rsrvd40[3];
	QM_QM_CPU_EPP_256_CFG_t CPU_EPP_256_CFG; /* addr: 0x00000404 */
	ca_uint32_t rsrvd41[3];
	QM_QM_CPU_EPP_256_FIFO_INT_HI_t
	  CPU_EPP_256_FIFO_INT_HI; /* addr: 0x00000408 */
	ca_uint32_t rsrvd42[3];
	QM_QM_CPU_EPP_256_FIFO_INT_LO_t
	  CPU_EPP_256_FIFO_INT_LO; /* addr: 0x0000040c */
	ca_uint32_t rsrvd43[3];
	QM_QM_CPU_EPP_FIFO_CFG_profile0_t
	  CPU_EPP_FIFO_CFG_profile0; /* addr: 0x00000410 */
	ca_uint32_t rsrvd44[31];
	QM_QM_CPU_EPP_STATUS0_t CPU_EPP_STATUS0; /* addr: 0x00000430 */
	ca_uint32_t rsrvd45[3];
	QM_QM_CPU_EPP_STATUS1_t CPU_EPP_STATUS1; /* addr: 0x00000434 */
	ca_uint32_t rsrvd46[3];
	QM_QM_CPU_EPP_256_STATUS0_t CPU_EPP_256_STATUS0; /* addr: 0x00000438 */
	ca_uint32_t rsrvd47[31];
	QM_QM_CPU_EPP_FIFO0_0_CFG_t CPU_EPP_FIFO0_0_CFG; /* addr: 0x00000458 */
	ca_uint32_t rsrvd48[255];
	QM_QM_CPU_EPP_FIFO_256_CFG_t CPU_EPP_FIFO_256_CFG; /* addr: 0x00000558 */
	ca_uint32_t rsrvd49[3];
	QM_QM_AXI_ATTRIBUTE_ACCESS_t AXI_ATTRIBUTE_ACCESS; /* addr: 0x0000055c */
	ca_uint32_t rsrvd50[3];
	QM_QM_AXI_ATTRIBUTE_DATA1_t AXI_ATTRIBUTE_DATA1; /* addr: 0x00000560 */
	ca_uint32_t rsrvd51[3];
	QM_QM_AXI_ATTRIBUTE_DATA0_t AXI_ATTRIBUTE_DATA0; /* addr: 0x00000564 */
	ca_uint32_t rsrvd52[3];
	QM_QM_BID_PADDR_LKUP_ACCESS_t BID_PADDR_LKUP_ACCESS; /* addr: 0x00000568 */
	ca_uint32_t rsrvd53[3];
	QM_QM_BID_PADDR_LKUP_DATA_t BID_PADDR_LKUP_DATA; /* addr: 0x0000056c */
	ca_uint32_t rsrvd54[3];
	QM_QM_VOQ_INFO_MEMORY_ACCESS_t VOQ_INFO_MEMORY_ACCESS; /* addr: 0x00000570 */
	ca_uint32_t rsrvd55[3];
	QM_QM_VOQ_INFO_MEMORY_DATA2_t VOQ_INFO_MEMORY_DATA2; /* addr: 0x00000574 */
	ca_uint32_t rsrvd56[3];
	QM_QM_VOQ_INFO_MEMORY_DATA1_t VOQ_INFO_MEMORY_DATA1; /* addr: 0x00000578 */
	ca_uint32_t rsrvd57[3];
	QM_QM_VOQ_INFO_MEMORY_DATA0_t VOQ_INFO_MEMORY_DATA0; /* addr: 0x0000057c */
	ca_uint32_t rsrvd58[3];
	QM_QM_HEADER_MEMORY_ACCESS_t HEADER_MEMORY_ACCESS; /* addr: 0x00000580 */
	ca_uint32_t rsrvd59[3];
	QM_QM_HEADER_MEMORY_DATA1_t HEADER_MEMORY_DATA1; /* addr: 0x00000584 */
	ca_uint32_t rsrvd60[3];
	QM_QM_HEADER_MEMORY_DATA0_t HEADER_MEMORY_DATA0; /* addr: 0x00000588 */
	ca_uint32_t rsrvd61[3];
	QM_QM_HDM_WRITE_PROTECTION_t HDM_WRITE_PROTECTION; /* addr: 0x0000058c */
	ca_uint32_t rsrvd62[3];
	QM_QM_MONITOR0_EQ0_t MONITOR0_EQ0; /* addr: 0x00000590 */
	ca_uint32_t rsrvd63[3];
	QM_QM_MONITOR1_EQ0_t MONITOR1_EQ0; /* addr: 0x00000594 */
	ca_uint32_t rsrvd64[3];
	QM_QM_MONITOR2_EQ0_t MONITOR2_EQ0; /* addr: 0x00000598 */
	ca_uint32_t rsrvd65[3];
	QM_QM_MONITOR3_EQ0_t MONITOR3_EQ0; /* addr: 0x0000059c */
	ca_uint32_t rsrvd66[243];
	QM_QM_RMU0_RX_PKT_CNTR_t RMU0_RX_PKT_CNTR; /* addr: 0x00000690 */
	ca_uint32_t rsrvd67[3];
	QM_QM_RMU0_RX_PACKET_HEADER_INFO1_t
	  RMU0_RX_PACKET_HEADER_INFO1; /* addr: 0x00000694 */
	ca_uint32_t rsrvd68[3];
	QM_QM_RMU0_RX_PACKET_HEADER_INFO0_t
	  RMU0_RX_PACKET_HEADER_INFO0; /* addr: 0x00000698 */
	ca_uint32_t rsrvd69[3];
	QM_QM_TX_PKT_CNTR_t TX_PKT_CNTR; /* addr: 0x0000069c */
	ca_uint32_t rsrvd70[3];
	QM_QM_TX_PKT_CNTR_ALL_NI_t TX_PKT_CNTR_ALL_NI; /* addr: 0x000006a0 */
	ca_uint32_t rsrvd71[3];
	QM_QM_TX_PKT_CNTR_CPU0_t TX_PKT_CNTR_CPU0; /* addr: 0x000006a4 */
	ca_uint32_t rsrvd72[31];
	QM_QM_TX_PKT_CNTR_CPU_256_t TX_PKT_CNTR_CPU_256; /* addr: 0x000006c4 */
	ca_uint32_t rsrvd73[3];
	QM_QM_TX_PACKET_HEADER_INFO1_t TX_PACKET_HEADER_INFO1; /* addr: 0x000006c8 */
	ca_uint32_t rsrvd74[3];
	QM_QM_TX_PACKET_HEADER_INFO0_t TX_PACKET_HEADER_INFO0; /* addr: 0x000006cc */
	ca_uint32_t rsrvd75[3];
	QM_QM_RMU0_NO_BUF_DROP_PKT_INFO_t
	  RMU0_NO_BUF_DROP_PKT_INFO; /* addr: 0x000006d0 */
	ca_uint32_t rsrvd76[3];
	QM_QM_RMU0_NO_BUF_DROP_PKT_CNTR_t
	  RMU0_NO_BUF_DROP_PKT_CNTR; /* addr: 0x000006d4 */
	ca_uint32_t rsrvd77[3];
	QM_QM_RMU0_FE_DROP_PKT_CNTR_t RMU0_FE_DROP_PKT_CNTR; /* addr: 0x000006d8 */
	ca_uint32_t rsrvd78[3];
	QM_QM_TX_CRC_ERROR_NI_CNTR_t TX_CRC_ERROR_NI_CNTR; /* addr: 0x000006dc */
	ca_uint32_t rsrvd79[3];
	QM_QM_VOQ_STATUS0_t VOQ_STATUS0; /* addr: 0x000006e0 */
	ca_uint32_t rsrvd80[3];
	QM_QM_VOQ_STATUS1_t VOQ_STATUS1; /* addr: 0x000006e4 */
	ca_uint32_t rsrvd81[3];
	QM_QM_VOQ_STATUS2_t VOQ_STATUS2; /* addr: 0x000006e8 */
	ca_uint32_t rsrvd82[3];
	QM_QM_VOQ_STATUS3_t VOQ_STATUS3; /* addr: 0x000006ec */
	ca_uint32_t rsrvd83[3];
	QM_QM_VOQ_EPP256_STATUS0_t VOQ_EPP256_STATUS0; /* addr: 0x000006f0 */
	ca_uint32_t rsrvd84[3];
	QM_QM_VOQ_EPP256_STATUS1_t VOQ_EPP256_STATUS1; /* addr: 0x000006f4 */
	ca_uint32_t rsrvd85[3];
	QM_QM_VOQ_EPP256_STATUS2_t VOQ_EPP256_STATUS2; /* addr: 0x000006f8 */
	ca_uint32_t rsrvd86[3];
	QM_QM_VOQ_EPP256_STATUS3_t VOQ_EPP256_STATUS3; /* addr: 0x000006fc */
	ca_uint32_t rsrvd87[3];
	QM_QM_VOQ_EPP256_STATUS4_t VOQ_EPP256_STATUS4; /* addr: 0x00000700 */
	ca_uint32_t rsrvd88[3];
	QM_QM_VOQ_EPP256_STATUS5_t VOQ_EPP256_STATUS5; /* addr: 0x00000704 */
	ca_uint32_t rsrvd89[3];
	QM_QM_VOQ_EPP256_STATUS6_t VOQ_EPP256_STATUS6; /* addr: 0x00000708 */
	ca_uint32_t rsrvd90[3];
	QM_QM_VOQ_EPP256_STATUS7_t VOQ_EPP256_STATUS7; /* addr: 0x0000070c */
	ca_uint32_t rsrvd91[3];
	QM_QM_PHY_PORT_STS_t PHY_PORT_STS; /* addr: 0x00000710 */
	ca_uint32_t rsrvd92[3];
	QM_QM_SUB_MODULE_STS_t SUB_MODULE_STS; /* addr: 0x00000714 */
	ca_uint32_t rsrvd93[3];
	QM_QM_RMU0_FIFO_STS_t RMU0_FIFO_STS; /* addr: 0x00000718 */
	ca_uint32_t rsrvd94[3];
	QM_QM_CPUEPP_STS_t CPUEPP_STS; /* addr: 0x0000071c */
	ca_uint32_t rsrvd95[3];
	QM_QM_CPUEPP_SM_STS_t CPUEPP_SM_STS; /* addr: 0x00000720 */
	ca_uint32_t rsrvd96[3];
	QM_QM_CPUEPP_AXI_CNT_STS_t CPUEPP_AXI_CNT_STS; /* addr: 0x00000724 */
	ca_uint32_t rsrvd97[3];
	QM_QM_DQM_FIFO_STS_t DQM_FIFO_STS; /* addr: 0x00000728 */
	ca_uint32_t rsrvd98[3];
	QM_QM_TMU_FIFO_STS_t TMU_FIFO_STS; /* addr: 0x0000072c */
	ca_uint32_t rsrvd99[3];
	QM_QM_NI_BRIDGE_FIFO_STS_t NI_BRIDGE_FIFO_STS; /* addr: 0x00000730 */
	ca_uint32_t rsrvd100[3];
	QM_QM_SPARE_CFG_t SPARE_CFG; /* addr: 0x00000734 */
	ca_uint32_t rsrvd101[3];
	QM_QM_SPARE_STS_t SPARE_STS; /* addr: 0x00000738 */
	ca_uint32_t rsrvd102[3];
	QM_QM_DEBUD_DATA1_t DEBUD_DATA1; /* addr: 0x0000073c */
	ca_uint32_t rsrvd103[3];
	QM_QM_DEBUD_DATA0_t DEBUD_DATA0; /* addr: 0x00000740 */
	ca_uint32_t rsrvd104[3];
	QM_QM_DEBUG_STS0_t DEBUG_STS0; /* addr: 0x00000744 */
	ca_uint32_t rsrvd105[3];
	QM_QM_DEBUG_STS1_t DEBUG_STS1; /* addr: 0x00000748 */
	ca_uint32_t rsrvd106[3];
	QM_QM_DEBUG_STS2_t DEBUG_STS2; /* addr: 0x0000074c */
	ca_uint32_t rsrvd107[3];
	QM_QM_DEBUG_STS3_t DEBUG_STS3; /* addr: 0x00000750 */
	ca_uint32_t rsrvd108[3];
	QM_QM_DEBUG_STS4_t DEBUG_STS4; /* addr: 0x00000754 */
	ca_uint32_t rsrvd109[3];
	QM_QM_DEBUG_STS5_t DEBUG_STS5; /* addr: 0x00000758 */
	ca_uint32_t rsrvd110[3];
	QM_QM_DEBUG_STS6_t DEBUG_STS6; /* addr: 0x0000075c */
	ca_uint32_t rsrvd111[3];
	QM_QM_DEBUG_STS7_t DEBUG_STS7; /* addr: 0x00000760 */
	ca_uint32_t rsrvd112[3];
	QM_QM_DEBUG_STS8_t DEBUG_STS8; /* addr: 0x00000764 */
	ca_uint32_t rsrvd113[3];
	QM_QM_DEBUG_STS9_t DEBUG_STS9; /* addr: 0x00000768 */
	ca_uint32_t rsrvd114[3];
	QM_QM_DEBUG_STS10_t DEBUG_STS10; /* addr: 0x0000076c */
} APB0_QM_QM_t;
#endif /* !__ASSEMBLER__ */

/*
 * QM_CPUEPP_POINTER
 */

#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR 0xf4308000
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_COUNT 64
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wptr : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR 0xf4308100
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_COUNT 64
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rptr : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START 0xf4308200
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_COUNT 64
#define QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t phy_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_WRPTR 0xf4308400
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_WRPTR_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_WRPTR_COUNT 256
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_WRPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wptr : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_WRPTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_RDPTR 0xf4308800
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_RDPTR_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_RDPTR_COUNT 256
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_RDPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rptr : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_RDPTR_t;
#endif /* !__ASSEMBLER__ */

#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_PADDR_START 0xf4308c00
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_PADDR_START_STRIDE 4
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_PADDR_START_COUNT 256
#define QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_PADDR_START_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t phy_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_PADDR_START_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* QM_CPUEPP_POINTER */
#ifndef __ASSEMBLER__
typedef struct {
	QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_WRPTR_t
	  CPUEPP64_FIFO_WRPTR[64]; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[192];
	QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_RDPTR_t
	  CPUEPP64_FIFO_RDPTR[64]; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[192];
	QM_QM_CPUEPP_POINTER_CPUEPP64_FIFO_PADDR_START_t
	  CPUEPP64_FIFO_PADDR_START[64]; /* addr: 0x00000200 */
	ca_uint32_t rsrvd3[448];
	QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_WRPTR_t
	  CPUEPP256_FIFO_WRPTR[256]; /* addr: 0x00000400 */
	ca_uint32_t rsrvd4[768];
	QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_RDPTR_t
	  CPUEPP256_FIFO_RDPTR[256]; /* addr: 0x00000800 */
	ca_uint32_t rsrvd5[768];
	QM_QM_CPUEPP_POINTER_CPUEPP256_FIFO_PADDR_START_t
	  CPUEPP256_FIFO_PADDR_START[256]; /* addr: 0x00000c00 */
} APB0_QM_QM_CPUEPP_POINTER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* QM */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_QM_AXIM2_t AXIM2; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[249];
	APB0_QM_QM_t qm; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[2889];
	APB0_QM_QM_CPUEPP_POINTER_t QM_CPUEPP_POINTER; /* addr: 0x00001000 */
} APB0_QM_t;
#endif /* !__ASSEMBLER__ */

/*
 * FBM
 */

/*
 * GLOBAL
 */

#define FBM_GLOBAL_GLB_CTRL 0xf4309000
#define FBM_GLOBAL_GLB_CTRL_dft 0x01010100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pool_enable : 8; /* bits 7:0 */
		ca_uint32_t ecc_en : 1; /* bits 8:8 */
		ca_uint32_t release_mode : 1; /* bits 9:9 */
		ca_uint32_t lpae : 1; /* bits 10:10 */
		ca_uint32_t rl_poll_mode : 1; /* bits 11:11 */
		ca_uint32_t fastreg_en : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t exs_burst_size : 2; /* bits 17:16 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t cnt_burst_size : 2; /* bits 25:24 */
		ca_uint32_t rsrvd3 : 6;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_GLB_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_AXI_CTRL 0xf4309004
#define FBM_GLOBAL_AXI_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_user_pid_en : 8; /* bits 7:0 */
		ca_uint32_t ace_cmd_en : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t mset_usr_pat : 2; /* bits 17:16 */
		ca_uint32_t minv_usr_pat : 2; /* bits 19:18 */
		ca_uint32_t pool_rd_usr_pat : 2; /* bits 21:20 */
		ca_uint32_t pool_wr_usr_pat : 2; /* bits 23:22 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_AXI_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_AXI_USR_PAT0 0xf4309008
#define FBM_GLOBAL_AXI_USR_PAT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat_0 : 25; /* bits 24:0 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_AXI_USR_PAT0_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_AXI_USR_PAT1 0xf430900c
#define FBM_GLOBAL_AXI_USR_PAT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat_1 : 25; /* bits 24:0 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_AXI_USR_PAT1_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_AXI_USR_PAT2 0xf4309010
#define FBM_GLOBAL_AXI_USR_PAT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat_2 : 25; /* bits 24:0 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_AXI_USR_PAT2_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_AXI_USR_PAT3 0xf4309014
#define FBM_GLOBAL_AXI_USR_PAT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat_3 : 25; /* bits 24:0 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_AXI_USR_PAT3_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_MEM_SET_PAT0 0xf4309018
#define FBM_GLOBAL_MEM_SET_PAT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mset_pat_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_MEM_SET_PAT0_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_MEM_SET_PAT1 0xf430901c
#define FBM_GLOBAL_MEM_SET_PAT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mset_pat_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_MEM_SET_PAT1_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT0 0xf4309020
#define FBM_GLOBAL_INTERRUPT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT0_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE0 0xf4309024
#define FBM_GLOBAL_INTENABLE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE0_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT1 0xf4309028
#define FBM_GLOBAL_INTERRUPT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT1_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE1 0xf430902c
#define FBM_GLOBAL_INTENABLE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE1_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT2 0xf4309030
#define FBM_GLOBAL_INTERRUPT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT2_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE2 0xf4309034
#define FBM_GLOBAL_INTENABLE2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE2_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT3 0xf4309038
#define FBM_GLOBAL_INTERRUPT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT3_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE3 0xf430903c
#define FBM_GLOBAL_INTENABLE3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE3_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT4 0xf4309040
#define FBM_GLOBAL_INTERRUPT4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT4_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE4 0xf4309044
#define FBM_GLOBAL_INTENABLE4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE4_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT5 0xf4309048
#define FBM_GLOBAL_INTERRUPT5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT5_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE5 0xf430904c
#define FBM_GLOBAL_INTENABLE5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE5_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT6 0xf4309050
#define FBM_GLOBAL_INTERRUPT6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT6_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE6 0xf4309054
#define FBM_GLOBAL_INTENABLE6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE6_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTERRUPT7 0xf4309058
#define FBM_GLOBAL_INTERRUPT7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error : 1; /* bits 1:1 */
		ca_uint32_t sw_address_check_drop : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop : 1; /* bits 4:4 */
		ca_uint32_t dma_address_check_drop : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTERRUPT7_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_INTENABLE7 0xf430905c
#define FBM_GLOBAL_INTENABLE7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t single_ecc_error_en : 1; /* bits 0:0 */
		ca_uint32_t dual_ecc_error_en : 1; /* bits 1:1 */
		ca_uint32_t sw_addr_check_drop_en : 1; /* bits 2:2 */
		ca_uint32_t sw_enable_check_drop_en : 1; /* bits 3:3 */
		ca_uint32_t sw_stack_of_drop_en : 1; /* bits 4:4 */
		ca_uint32_t dma_addr_check_drop_en : 1; /* bits 5:5 */
		ca_uint32_t dma_enable_check_drop_en : 1; /* bits 6:6 */
		ca_uint32_t axim_interrupt_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t stack_overflow_en : 8; /* bits 23:16 */
		ca_uint32_t stack_underflow_en : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_INTENABLE7_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_CECC_CNTR 0xf4309060
#define FBM_GLOBAL_CECC_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t c_ecc_cntr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_CECC_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_UCECC_CNTR 0xf4309064
#define FBM_GLOBAL_UCECC_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t uc_ecc_cntr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_UCECC_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_DEC_DROP_CNTR 0xf4309068
#define FBM_GLOBAL_DEC_DROP_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dec_drop_cntr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_DEC_DROP_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_CNT_QUEUE_DEPTH 0xf430906c
#define FBM_GLOBAL_CNT_QUEUE_DEPTH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cnt_queue_depth : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_CNT_QUEUE_DEPTH_t;
#endif /* !__ASSEMBLER__ */

#define FBM_GLOBAL_CONFIG_SPARE 0xf4309070
#define FBM_GLOBAL_CONFIG_SPARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t config_spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FBM_GLOBAL_CONFIG_SPARE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLOBAL */
#ifndef __ASSEMBLER__
typedef struct {
	FBM_GLOBAL_GLB_CTRL_t GLB_CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	FBM_GLOBAL_AXI_CTRL_t AXI_CTRL; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	FBM_GLOBAL_AXI_USR_PAT0_t AXI_USR_PAT0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	FBM_GLOBAL_AXI_USR_PAT1_t AXI_USR_PAT1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	FBM_GLOBAL_AXI_USR_PAT2_t AXI_USR_PAT2; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	FBM_GLOBAL_AXI_USR_PAT3_t AXI_USR_PAT3; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	FBM_GLOBAL_MEM_SET_PAT0_t MEM_SET_PAT0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	FBM_GLOBAL_MEM_SET_PAT1_t MEM_SET_PAT1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	FBM_GLOBAL_INTERRUPT0_t INTERRUPT0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	FBM_GLOBAL_INTENABLE0_t INTENABLE0; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	FBM_GLOBAL_INTERRUPT1_t INTERRUPT1; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	FBM_GLOBAL_INTENABLE1_t INTENABLE1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	FBM_GLOBAL_INTERRUPT2_t INTERRUPT2; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	FBM_GLOBAL_INTENABLE2_t INTENABLE2; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	FBM_GLOBAL_INTERRUPT3_t INTERRUPT3; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	FBM_GLOBAL_INTENABLE3_t INTENABLE3; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	FBM_GLOBAL_INTERRUPT4_t INTERRUPT4; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	FBM_GLOBAL_INTENABLE4_t INTENABLE4; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	FBM_GLOBAL_INTERRUPT5_t INTERRUPT5; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	FBM_GLOBAL_INTENABLE5_t INTENABLE5; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	FBM_GLOBAL_INTERRUPT6_t INTERRUPT6; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	FBM_GLOBAL_INTENABLE6_t INTENABLE6; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	FBM_GLOBAL_INTERRUPT7_t INTERRUPT7; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	FBM_GLOBAL_INTENABLE7_t INTENABLE7; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	FBM_GLOBAL_CECC_CNTR_t CECC_CNTR; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	FBM_GLOBAL_UCECC_CNTR_t UCECC_CNTR; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	FBM_GLOBAL_DEC_DROP_CNTR_t DEC_DROP_CNTR; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	FBM_GLOBAL_CNT_QUEUE_DEPTH_t CNT_QUEUE_DEPTH; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	FBM_GLOBAL_CONFIG_SPARE_t CONFIG_SPARE; /* addr: 0x00000070 */
} APB0_FBM_GLOBAL_t;
#endif /* !__ASSEMBLER__ */

/*
 * AXIM2
 */

#define FBM_AXIM2_CONFIG 0xf4309100
#define FBM_AXIM2_CONFIG_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write_outtrans_num : 4; /* bits 3:0 */
		ca_uint32_t axi_read_outtrans_num : 4; /* bits 7:4 */
		ca_uint32_t axi_xbus_len : 3; /* bits 10:8 */
		ca_uint32_t write_cacheline_trans_en : 1; /* bits 11:11 */
		ca_uint32_t write_cacheline_trans_size : 1; /* bits 12:12 */
		ca_uint32_t read_cacheline_trans_en : 1; /* bits 13:13 */
		ca_uint32_t read_cacheline_trans_size : 1; /* bits 14:14 */
		ca_uint32_t arcache_eos_en : 1; /* bits 15:15 */
		ca_uint32_t awcache_eos_en : 1; /* bits 16:16 */
		ca_uint32_t reserved : 15; /* bits 31:17 */
	} bf;
	ca_uint32_t wrd;
} FBM_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define FBM_AXIM2_TIMEOUT_THRESHOLD 0xf4309104
#define FBM_AXIM2_TIMEOUT_THRESHOLD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_channel_threshold : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t write_channel_threshold : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 27;
	} bf;
	ca_uint32_t wrd;
} FBM_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define FBM_AXIM2_INTERRUPT_STATUS 0xf4309108
#define FBM_AXIM2_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} FBM_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define FBM_AXIM2_INTERRUPT_ENABLE 0xf430910c
#define FBM_AXIM2_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int_en : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int_en : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int_en : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int_en : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} FBM_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
	FBM_AXIM2_CONFIG_t CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	FBM_AXIM2_TIMEOUT_THRESHOLD_t TIMEOUT_THRESHOLD; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	FBM_AXIM2_INTERRUPT_STATUS_t INTERRUPT_STATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	FBM_AXIM2_INTERRUPT_ENABLE_t INTERRUPT_ENABLE; /* addr: 0x0000000c */
} APB0_FBM_AXIM2_t;
#endif /* !__ASSEMBLER__ */

/*
 * CPU[0..7]
 */

#define FBM_CPU_SW_ACCESS 0xf4309200
#define FBM_CPU_SW_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t POOLID : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} FBM_CPU_SW_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define FBM_CPU_SW_DATA1 0xf4309204
#define FBM_CPU_SW_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t DATA : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} FBM_CPU_SW_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define FBM_CPU_SW_DATA0 0xf4309208
#define FBM_CPU_SW_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t DATA : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FBM_CPU_SW_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define APB0_FBM_CPU_STRIDE 32
#define APB0_FBM_CPU_COUNT 8

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CPU */
#ifndef __ASSEMBLER__
typedef struct {
	FBM_CPU_SW_ACCESS_t SW_ACCESS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	FBM_CPU_SW_DATA1_t SW_DATA1; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	FBM_CPU_SW_DATA0_t SW_DATA0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[23];
} APB0_FBM_CPU_t;
#endif /* !__ASSEMBLER__ */

/*
 * POOL[0..7]
 */

#define FBM_POOL_POOL_CONTROL 0xf4309300
#define FBM_POOL_POOL_CONTROL_dft 0x30100000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pool_mset : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t pool_cainv : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t pool_oscntr_en : 1; /* bits 8:8 */
		ca_uint32_t pool_oscntr_dbg : 1; /* bits 9:9 */
		ca_uint32_t rsrvd3 : 6;
		ca_uint32_t ins_lo_thresh : 6; /* bits 21:16 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t ins_hi_thresh : 6; /* bits 29:24 */
		ca_uint32_t rsrvd5 : 2;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_POOL_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_EXSTACK_BAR 0xf4309304
#define FBM_POOL_EXSTACK_BAR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t exs_bar : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_EXSTACK_BAR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_EXSTACK_DEPTH 0xf4309308
#define FBM_POOL_EXSTACK_DEPTH_dft 0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t exs_full_thresh : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_EXSTACK_DEPTH_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_BUFFER_SIZE 0xf430930c
#define FBM_POOL_BUFFER_SIZE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t buff_size : 6; /* bits 11:6 */
		ca_uint32_t rsrvd2 : 20;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_BUFFER_SIZE_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_SEG_CONTROL 0xf4309310
#define FBM_POOL_SEG_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t se0_size : 3; /* bits 2:0 */
		ca_uint32_t se0_enable : 1; /* bits 3:3 */
		ca_uint32_t se1_size : 3; /* bits 6:4 */
		ca_uint32_t se1_enable : 1; /* bits 7:7 */
		ca_uint32_t se2_size : 3; /* bits 10:8 */
		ca_uint32_t se2_enable : 1; /* bits 11:11 */
		ca_uint32_t se3_size : 3; /* bits 14:12 */
		ca_uint32_t se3_enable : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_SEG_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_SE0_BAR 0xf4309314
#define FBM_POOL_SE0_BAR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t se0_bar : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_SE0_BAR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_SE1_BAR 0xf4309318
#define FBM_POOL_SE1_BAR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t se1_bar : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_SE1_BAR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_SE2_BAR 0xf430931c
#define FBM_POOL_SE2_BAR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t se2_bar : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_SE2_BAR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_SE3_BAR 0xf4309320
#define FBM_POOL_SE3_BAR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t se3_bar : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_SE3_BAR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_DEBUG_INS_PTR 0xf4309324
#define FBM_POOL_DEBUG_INS_PTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ins_bptr : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t ins_tptr : 6; /* bits 21:16 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_DEBUG_INS_PTR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_DEBUG_EXS_PTR 0xf4309328
#define FBM_POOL_DEBUG_EXS_PTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t exs_ptr : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_DEBUG_EXS_PTR_t;
#endif /* !__ASSEMBLER__ */

#define FBM_POOL_DEBUG_OUT_STND_CNTR 0xf430932c
#define FBM_POOL_DEBUG_OUT_STND_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t os_cntr : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} FBM_POOL_DEBUG_OUT_STND_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define APB0_FBM_POOL_STRIDE 128
#define APB0_FBM_POOL_COUNT 8

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* POOL */
#ifndef __ASSEMBLER__
typedef struct {
	FBM_POOL_POOL_CONTROL_t POOL_CONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	FBM_POOL_EXSTACK_BAR_t EXSTACK_BAR; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	FBM_POOL_EXSTACK_DEPTH_t EXSTACK_DEPTH; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	FBM_POOL_BUFFER_SIZE_t BUFFER_SIZE; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	FBM_POOL_SEG_CONTROL_t SEG_CONTROL; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	FBM_POOL_SE0_BAR_t SE0_BAR; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	FBM_POOL_SE1_BAR_t SE1_BAR; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	FBM_POOL_SE2_BAR_t SE2_BAR; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	FBM_POOL_SE3_BAR_t SE3_BAR; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	FBM_POOL_DEBUG_INS_PTR_t DEBUG_INS_PTR; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	FBM_POOL_DEBUG_EXS_PTR_t DEBUG_EXS_PTR; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	FBM_POOL_DEBUG_OUT_STND_CNTR_t DEBUG_OUT_STND_CNTR; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[83];
} APB0_FBM_POOL_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FBM */

#ifndef __ASSEMBLER__
typedef struct {
	APB0_FBM_GLOBAL_t GLOBAL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[199];
	APB0_FBM_AXIM2_t AXIM2; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[249];
	APB0_FBM_CPU_t CPU[8]; /* addr: 0x00000200 */
	APB0_FBM_POOL_t POOL[8]; /* addr: 0x00000300 */
} APB0_FBM_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB0 */

#ifndef __ASSEMBLER__
typedef struct {
	ca_uint32_t rsrvd1[4096];
	APB0_L2FE_t L2FE; /* addr: 0x00001000 */
	ca_uint32_t rsrvd2[215];
	APB0_L2TM_t L2TM; /* addr: 0x00002000 */
	ca_uint32_t rsrvd3[207];
	APB0_L3FE_t L3FE; /* addr: 0x00003000 */
	ca_uint32_t rsrvd4[167];
	APB0_NI_HV_t NI_HV; /* addr: 0x00004000 */
	APB0_TE_t TE; /* addr: 0x00006000 */
	ca_uint32_t rsrvd5[2255];
	APB0_QM_t QM; /* addr: 0x00007000 */
	ca_uint32_t rsrvd6[2304];
	APB0_FBM_t FBM; /* addr: 0x00009000 */
} APB0_t;
#endif /* !__ASSEMBLER__ */

/*
 * APB2
 */

/*
 * GLB
 */

#define GLOBAL_JTAG_ID 0xf4320000
#define GLOBAL_JTAG_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t jtag_id : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_JTAG_ID_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BLOCK_RESET 0xf4320004
#define GLOBAL_BLOCK_RESET_dft 0x003023c0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reset_ni : 1; /* bits 0:0 */
		ca_uint32_t reset_l2fe : 1; /* bits 1:1 */
		ca_uint32_t reset_l2tm : 1; /* bits 2:2 */
		ca_uint32_t reset_l3fe : 1; /* bits 3:3 */
		ca_uint32_t reset_sdram : 1; /* bits 4:4 */
		ca_uint32_t reset_tqm : 1; /* bits 5:5 */
		ca_uint32_t reset_pcie0 : 1; /* bits 6:6 */
		ca_uint32_t reset_pcie1 : 1; /* bits 7:7 */
		ca_uint32_t reset_pcie2 : 1; /* bits 8:8 */
		ca_uint32_t reset_sata : 1; /* bits 9:9 */
		ca_uint32_t reset_gic400 : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t reset_usb : 1; /* bits 13:13 */
		ca_uint32_t reset_flash : 1; /* bits 14:14 */
		ca_uint32_t reset_per : 1; /* bits 15:15 */
		ca_uint32_t reset_dma : 1; /* bits 16:16 */
		ca_uint32_t reset_rtc : 1; /* bits 17:17 */
		ca_uint32_t reset_pe0 : 1; /* bits 18:18 */
		ca_uint32_t reset_pe1 : 1; /* bits 19:19 */
		ca_uint32_t reset_rcpu0 : 1; /* bits 20:20 */
		ca_uint32_t reset_rcpu1 : 1; /* bits 21:21 */
		ca_uint32_t reset_sadb : 1; /* bits 22:22 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t reset_rcrypto : 1; /* bits 24:24 */
		ca_uint32_t reset_ldma : 1; /* bits 25:25 */
		ca_uint32_t reset_fbm : 1; /* bits 26:26 */
		ca_uint32_t reset_eaxi : 1; /* bits 27:27 */
		ca_uint32_t reset_sd : 1; /* bits 28:28 */
		ca_uint32_t reset_otprom : 1; /* bits 29:29 */
		ca_uint32_t rsrvd3 : 2;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BLOCK_RESET_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DPHY_RESET 0xf4320008
#define GLOBAL_DPHY_RESET_dft 0x000001df

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reset_dphy_s0_pcie : 1; /* bits 0:0 */
		ca_uint32_t reset_dphy_s1_pcie : 1; /* bits 1:1 */
		ca_uint32_t reset_dphy_s2_pcie : 1; /* bits 2:2 */
		ca_uint32_t reset_dphy_s2_usb : 1; /* bits 3:3 */
		ca_uint32_t reset_dphy_s3_usb : 1; /* bits 4:4 */
		ca_uint32_t reset_dphy_sata_force : 1; /* bits 5:5 */
		ca_uint32_t reset_dphy_sata : 1; /* bits 6:6 */
		ca_uint32_t reset_sdsif : 1; /* bits 7:7 */
		ca_uint32_t reset_sgmii : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DPHY_RESET_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FABRIC_RESET 0xf432000c
#define GLOBAL_FABRIC_RESET_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reset_axi : 1; /* bits 0:0 */
		ca_uint32_t reset_capsram : 1; /* bits 1:1 */
		ca_uint32_t reset_capsramreg : 1; /* bits 2:2 */
		ca_uint32_t reset_ccireg : 1; /* bits 3:3 */
		ca_uint32_t reset_global_hsio : 1; /* bits 4:4 */
		ca_uint32_t reset_global_acp : 1; /* bits 5:5 */
		ca_uint32_t reset_global_ls : 1; /* bits 6:6 */
		ca_uint32_t reset_global_pe : 1; /* bits 7:7 */
		ca_uint32_t reset_lsaxi_cortexapb : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FABRIC_RESET_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_RESET 0xf4320010
#define GLOBAL_ARM_RESET_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t restart : 1; /* bits 0:0 */
		ca_uint32_t A53CPUPORESET : 4; /* bits 4:1 */
		ca_uint32_t A53CORERESET : 4; /* bits 8:5 */
		ca_uint32_t A53L2RESET : 1; /* bits 9:9 */
		ca_uint32_t A53PRESETDBG : 1; /* bits 10:10 */
		ca_uint32_t RESETSOCDBG : 1; /* bits 11:11 */
		ca_uint32_t RESETPOR : 1; /* bits 12:12 */
		ca_uint32_t ALLOW_DBG : 4; /* bits 16:13 */
		ca_uint32_t ALLOW_WARM : 4; /* bits 20:17 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_RESET_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_STRAP 0xf4320014
#define GLOBAL_STRAP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t debug_mode : 1; /* bits 0:0 */
		ca_uint32_t speed : 3; /* bits 3:1 */
		ca_uint32_t flash_type : 3; /* bits 6:4 */
		ca_uint32_t flash_size : 2; /* bits 8:7 */
		ca_uint32_t flash_width : 1; /* bits 9:9 */
		ca_uint32_t flash_pin : 1; /* bits 10:10 */
		ca_uint32_t uart_message : 1; /* bits 11:11 */
		ca_uint32_t sd : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 17;
		ca_uint32_t jtag_osc_2 : 1; /* bits 30:30 */
		ca_uint32_t jtag_osc_3 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_STRAP_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BIST_RESULT 0xf4320018
#define GLOBAL_BIST_RESULT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bist_complete_capsram : 1; /* bits 0:0 */
		ca_uint32_t bist_complete_l3qm2 : 1; /* bits 1:1 */
		ca_uint32_t bist_complete_l3qm1 : 1; /* bits 2:2 */
		ca_uint32_t bist_complete_l2tm2 : 1; /* bits 3:3 */
		ca_uint32_t bist_complete_l2tm1 : 1; /* bits 4:4 */
		ca_uint32_t bist_complete_a53 : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 17;
		ca_uint32_t a53 : 9; /* bits 31:23 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BIST_RESULT_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BIST_DATA 0xf432001c
#define GLOBAL_BIST_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t capsram : 11; /* bits 10:0 */
		ca_uint32_t l3qm2 : 5; /* bits 15:11 */
		ca_uint32_t l3qm1 : 5; /* bits 20:16 */
		ca_uint32_t l2tm2 : 5; /* bits 25:21 */
		ca_uint32_t l2tm1 : 5; /* bits 30:26 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BIST_DATA_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GLOBAL_CONFIG 0xf4320020
#define GLOBAL_GLOBAL_CONFIG_dft 0x00005c00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t wd_reset_subsys_enable : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t wd_reset_all_blocks : 1; /* bits 6:6 */
		ca_uint32_t wd_reset_remap : 1; /* bits 7:7 */
		ca_uint32_t wd_reset_ext_reset : 1; /* bits 8:8 */
		ca_uint32_t ext_reset : 1; /* bits 9:9 */
		ca_uint32_t cfg_pcie_0_clken : 1; /* bits 10:10 */
		ca_uint32_t cfg_sata_clken : 1; /* bits 11:11 */
		ca_uint32_t cfg_pcie_1_clken : 1; /* bits 12:12 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t cfg_pcie_2_clken : 1; /* bits 14:14 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t ext_eth_refclk : 1; /* bits 17:17 */
		ca_uint32_t refclk_sel : 2; /* bits 19:18 */
		ca_uint32_t rsrvd5 : 7;
		ca_uint32_t l3fe_pd : 1; /* bits 27:27 */
		ca_uint32_t offload0_pd : 1; /* bits 28:28 */
		ca_uint32_t offload1_pd : 1; /* bits 29:29 */
		ca_uint32_t crypto_pd : 1; /* bits 30:30 */
		ca_uint32_t core_pd : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GLOBAL_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PHY_CONTROL 0xf4320024
#define GLOBAL_PHY_CONTROL_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg_xfi0_10g : 1; /* bits 0:0 */
		ca_uint32_t cfg_xfi1_10g : 1; /* bits 1:1 */
		ca_uint32_t s0_PCIE2_ISOLATE_0 : 1; /* bits 2:2 */
		ca_uint32_t s0_POW_PCIE2_0 : 1; /* bits 3:3 */
		ca_uint32_t s0_PCIE2_ISOLATE_1 : 1; /* bits 4:4 */
		ca_uint32_t s0_POW_PCIE2_1 : 1; /* bits 5:5 */
		ca_uint32_t s1_SATA_ISOLATE : 1; /* bits 6:6 */
		ca_uint32_t s1_POW_SATA : 1; /* bits 7:7 */
		ca_uint32_t s1_PCIE2_ISOLATE : 1; /* bits 8:8 */
		ca_uint32_t s1_POW_PCIE2 : 1; /* bits 9:9 */
		ca_uint32_t s2_PCIE2_ISOLATE : 1; /* bits 10:10 */
		ca_uint32_t s2_USB3_ISOLATE : 1; /* bits 11:11 */
		ca_uint32_t s2_POW_PCIE2 : 1; /* bits 12:12 */
		ca_uint32_t s2_POW_USB3 : 1; /* bits 13:13 */
		ca_uint32_t s3_USB3_ISOLATE : 1; /* bits 14:14 */
		ca_uint32_t s3_SATA_SGMII_ISOLATE : 1; /* bits 15:15 */
		ca_uint32_t s3_POW_SATA : 1; /* bits 16:16 */
		ca_uint32_t s3_POW_USB3 : 1; /* bits 17:17 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t s1_combo_sel : 1; /* bits 22:22 */
		ca_uint32_t s2_combo_sel : 1; /* bits 23:23 */
		ca_uint32_t s3_combo_sel : 1; /* bits 24:24 */
		ca_uint32_t s3_sata_sgmii_sel : 1; /* bits 25:25 */
		ca_uint32_t s0_rxaui_mode : 1; /* bits 26:26 */
		ca_uint32_t sata_sel_phy : 1; /* bits 27:27 */
		ca_uint32_t s0_p_mdio_enable_reg : 1; /* bits 28:28 */
		ca_uint32_t s1_p_mdio_enable_reg : 1; /* bits 29:29 */
		ca_uint32_t s2_p_mdio_enable_reg : 1; /* bits 30:30 */
		ca_uint32_t s3_p_mdio_enable_reg : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PHY_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PHY_MISC_CONTROL 0xf4320028
#define GLOBAL_PHY_MISC_CONTROL_dft 0xe7880202

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t s1_BG_EN : 1; /* bits 0:0 */
		ca_uint32_t s1_MBIAS_EN : 1; /* bits 1:1 */
		ca_uint32_t s1_SATA_CKBUF_EN : 1; /* bits 2:2 */
		ca_uint32_t s1_SATA_CLK_MODE_SEL : 2; /* bits 4:3 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t s2_USB3_BG_EN : 1; /* bits 8:8 */
		ca_uint32_t s2_USB3_MBIAS_EN : 1; /* bits 9:9 */
		ca_uint32_t s3_BG_EN : 1; /* bits 10:10 */
		ca_uint32_t s3_MBIAS_EN : 1; /* bits 11:11 */
		ca_uint32_t s3_SATA_CKBUF_EN : 1; /* bits 12:12 */
		ca_uint32_t s3_SATA_CLK_MODE_SEL : 2; /* bits 14:13 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t s3_USB3_BG_EN : 1; /* bits 18:18 */
		ca_uint32_t s3_USB3_MBIAS_EN : 1; /* bits 19:19 */
		ca_uint32_t s0_pcie_compliance_mode_period : 2; /* bits 21:20 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t s0_clk_mode_0 : 1; /* bits 23:23 */
		ca_uint32_t s0_clk_mode_1 : 1; /* bits 24:24 */
		ca_uint32_t s1_clk_mode : 1; /* bits 25:25 */
		ca_uint32_t s2_clk_mode : 1; /* bits 26:26 */
		ca_uint32_t s1_RX50_LINK : 1; /* bits 27:27 */
		ca_uint32_t s3_RX50_LINK : 1; /* bits 28:28 */
		ca_uint32_t OOBS_PDB_1 : 1; /* bits 29:29 */
		ca_uint32_t OOBS_PDB_2 : 1; /* bits 30:30 */
		ca_uint32_t OOBS_PDB_3 : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PHY_MISC_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PHY_STATUS 0xf432002c
#define GLOBAL_PHY_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t USB2_CKUSABLE : 1; /* bits 0:0 */
		ca_uint32_t CKUSABLE_1 : 1; /* bits 1:1 */
		ca_uint32_t CKUSABLE_2 : 1; /* bits 2:2 */
		ca_uint32_t CKUSABLE_3 : 1; /* bits 3:3 */
		ca_uint32_t S0_CKUSABLE_0 : 1; /* bits 4:4 */
		ca_uint32_t S0_CKUSABLE_1 : 1; /* bits 5:5 */
		ca_uint32_t p0_phy_phyrdy : 1; /* bits 6:6 */
		ca_uint32_t p1_phy_phyrdy : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PHY_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PHY_SGMII_MISC_CONTROL 0xf4320030
#define GLOBAL_PHY_SGMII_MISC_CONTROL_dft 0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t s3_SGMII_CKBUF_EN : 1; /* bits 0:0 */
		ca_uint32_t s3_SGMII_CLK_MODE_SEL : 2; /* bits 2:1 */
		ca_uint32_t s3_SGMII_BG_EN : 1; /* bits 3:3 */
		ca_uint32_t s3_SGMII_MBIAS_EN : 1; /* bits 4:4 */
		ca_uint32_t s3_SGMII_RX50_LINK : 1; /* bits 5:5 */
		ca_uint32_t s3_SGMII_ISOLATE_SATA_SGMII : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PHY_SGMII_MISC_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PHY_SGMII_PCS_CONTROL 0xf4320034
#define GLOBAL_PHY_SGMII_PCS_CONTROL_dft 0x00000008

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sgmii_sds_tx_disable_s0 : 1; /* bits 0:0 */
		ca_uint32_t sgmii_sds_rx_disable_s0 : 1; /* bits 1:1 */
		ca_uint32_t sgmii_sds_mode0 : 5; /* bits 6:2 */
		ca_uint32_t sgmii_sds_iso_on_s0 : 1; /* bits 7:7 */
		ca_uint32_t sgmii_sds_frc_ld_s0 : 1; /* bits 8:8 */
		ca_uint32_t sgmii_sds0_ablty : 13; /* bits 21:9 */
		ca_uint32_t sgmii_cf_spd0x : 3; /* bits 24:22 */
		ca_uint32_t sgmii_spdup_ini : 1; /* bits 25:25 */
		ca_uint32_t sgmii_load_sys_par : 1; /* bits 26:26 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PHY_SGMII_PCS_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PHY_SGMII_PCS_INFO 0xf4320038
#define GLOBAL_PHY_SGMII_PCS_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sgmii_sds_link_ok : 1; /* bits 0:0 */
		ca_uint32_t sgmii_sds_reg_rdy : 1; /* bits 1:1 */
		ca_uint32_t sgmii_sds_sdet_out_s0 : 1; /* bits 2:2 */
		ca_uint32_t sgmii_sts_upd_rx : 1; /* bits 3:3 */
		ca_uint32_t sgmii_sds_rx_sym_err_all_s0 : 1; /* bits 4:4 */
		ca_uint32_t sgmii_sds0_link_partner_ablty : 13; /* bits 17:5 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PHY_SGMII_PCS_INFO_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SGMII_PCS_INTERRUPT 0xf432003c
#define GLOBAL_SGMII_PCS_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t LINK_OKi : 1; /* bits 0:0 */
		ca_uint32_t UPD_RXi : 1; /* bits 1:1 */
		ca_uint32_t SYM_ERRi : 1; /* bits 2:2 */
		ca_uint32_t LPA_MDFi : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SGMII_PCS_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SGMII_PCS_INTENABLE 0xf4320040
#define GLOBAL_SGMII_PCS_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t LINK_OKe : 1; /* bits 0:0 */
		ca_uint32_t UPD_RXe : 1; /* bits 1:1 */
		ca_uint32_t SYM_ERRe : 1; /* bits 2:2 */
		ca_uint32_t LPA_MDFe : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SGMII_PCS_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_RXAUI_SERDES_CONTROL 0xf4320044
#define GLOBAL_RXAUI_SERDES_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aphy_txdata_en : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_RXAUI_SERDES_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PIN_MUX 0xf4320048
#define GLOBAL_PIN_MUX_dft 0x80000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pmux_flash : 2; /* bits 1:0 */
		ca_uint32_t arm_trace_enable : 1; /* bits 2:2 */
		ca_uint32_t iomux_uart_0_hwfc_enable : 1; /* bits 3:3 */
		ca_uint32_t iomux_uart_2_enable : 1; /* bits 4:4 */
		ca_uint32_t iomux_uart_3_enable : 1; /* bits 5:5 */
		ca_uint32_t iomux_spi_cs_1_enable : 1; /* bits 6:6 */
		ca_uint32_t iomux_spi_cs_2_enable : 1; /* bits 7:7 */
		ca_uint32_t iomux_spi_cs_3_enable : 1; /* bits 8:8 */
		ca_uint32_t iomux_spi_cs_4_enable : 1; /* bits 9:9 */
		ca_uint32_t iomux_pwm_nf : 1; /* bits 10:10 */
		ca_uint32_t iomux_pwm_sf : 1; /* bits 11:11 */
		ca_uint32_t iomux_frac_clk_en_extsclk : 1; /* bits 12:12 */
		ca_uint32_t iomux_frac_clk_en_extclk : 1; /* bits 13:13 */
		ca_uint32_t iomux_use_cspi : 1; /* bits 14:14 */
		ca_uint32_t iomux_sd_volt_reg : 1; /* bits 15:15 */
		ca_uint32_t iomux_sd_mmc_resetn : 1; /* bits 16:16 */
		ca_uint32_t iomux_tdm_wan_clk : 1; /* bits 17:17 */
		ca_uint32_t iomux_tdm_wan_clk_sel : 1; /* bits 18:18 */
		ca_uint32_t iomux_led_enable : 1; /* bits 19:19 */
		ca_uint32_t iomux_saturn_comm : 1; /* bits 20:20 */
		ca_uint32_t a53_probe_pad_en : 2; /* bits 22:21 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t fmro_enable : 1; /* bits 30:30 */
		ca_uint32_t flash_mux_sel : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PIN_MUX_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_IO_DRIVE_CONTROL 0xf432004c
#define GLOBAL_IO_DRIVE_CONTROL_dft 0x00330000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gmac_dp : 3; /* bits 2:0 */
		ca_uint32_t gmac_dn : 3; /* bits 5:3 */
		ca_uint32_t gmac_mode : 2; /* bits 7:6 */
		ca_uint32_t gmac_ds : 1; /* bits 8:8 */
		ca_uint32_t flash_ds : 1; /* bits 9:9 */
		ca_uint32_t nu_ds : 1; /* bits 10:10 */
		ca_uint32_t ssp_ds : 1; /* bits 11:11 */
		ca_uint32_t spi_ds : 1; /* bits 12:12 */
		ca_uint32_t gpio_ds : 1; /* bits 13:13 */
		ca_uint32_t misc_ds : 1; /* bits 14:14 */
		ca_uint32_t eaxi_ds : 1; /* bits 15:15 */
		ca_uint32_t sd_ds : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_IO_DRIVE_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GPIO_MUX_0 0xf4320050
#define GLOBAL_GPIO_MUX_0_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpio0en : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GPIO_MUX_0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GPIO_MUX_1 0xf4320054
#define GLOBAL_GPIO_MUX_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpio1en : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GPIO_MUX_1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GPIO_MUX_2 0xf4320058
#define GLOBAL_GPIO_MUX_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpio2en : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GPIO_MUX_2_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GPIO_MUX_3 0xf432005c
#define GLOBAL_GPIO_MUX_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpio3en : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GPIO_MUX_3_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GPIO_MUX_4 0xf4320060
#define GLOBAL_GPIO_MUX_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpio4en : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GPIO_MUX_4_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_GIGE_PHY 0xf4320064
#define GLOBAL_GIGE_PHY_dft 0x20c41004

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gphy_en_rtt1 : 1; /* bits 0:0 */
		ca_uint32_t gphy_en_rtt2 : 1; /* bits 1:1 */
		ca_uint32_t gphy_en_router_mode : 1; /* bits 2:2 */
		ca_uint32_t gphy_SEL_PHY_REFCK_UPS_L : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t gphy_p0_phy_ad : 5; /* bits 16:12 */
		ca_uint32_t gphy_p1_phy_ad : 5; /* bits 21:17 */
		ca_uint32_t gphy_p2_phy_ad : 5; /* bits 26:22 */
		ca_uint32_t gphy_p3_phy_ad : 5; /* bits 31:27 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_GIGE_PHY_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_STATE 0xf4320068
#define GLOBAL_ARM_STATE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SMPEN : 4; /* bits 3:0 */
		ca_uint32_t STANDBYWFI : 4; /* bits 7:4 */
		ca_uint32_t STANDBYWFE : 4; /* bits 11:8 */
		ca_uint32_t STANDBYWFIL2 : 1; /* bits 12:12 */
		ca_uint32_t L2FLUSHDONE : 1; /* bits 13:13 */
		ca_uint32_t cpu_wd_req : 1; /* bits 14:14 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t a53_core_pwrctrl_out : 4; /* bits 19:16 */
		ca_uint32_t a53_core_pwrctrl_2nd_out : 4; /* bits 23:20 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t cpll_lock : 1; /* bits 26:26 */
		ca_uint32_t epll_lock : 1; /* bits 27:27 */
		ca_uint32_t fpll_lock : 1; /* bits 28:28 */
		ca_uint32_t cpll_switch_state : 1; /* bits 29:29 */
		ca_uint32_t epll_switch_state : 1; /* bits 30:30 */
		ca_uint32_t fpll_switch_state : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_STATE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PE_DSS_STATE 0xf432006c
#define GLOBAL_PE_DSS_STATE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a53_ready : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t pe0_debug_mode : 1; /* bits 8:8 */
		ca_uint32_t pe0_sleepsys_mode : 1; /* bits 9:9 */
		ca_uint32_t pe1_debug_mode : 1; /* bits 10:10 */
		ca_uint32_t pe1_sleepsys_mode : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 20;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PE_DSS_STATE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DSS_COUNT3 0xf4320070
#define GLOBAL_DSS_COUNT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a53_count_out3 : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DSS_COUNT3_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DSS_COUNT2 0xf4320074
#define GLOBAL_DSS_COUNT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a53_count_out2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DSS_COUNT2_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DSS_COUNT1 0xf4320078
#define GLOBAL_DSS_COUNT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a53_count_out1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DSS_COUNT1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DSS_COUNT0 0xf432007c
#define GLOBAL_DSS_COUNT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t a53_count_out0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DSS_COUNT0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_CONFIG_A 0xf4320080
#define GLOBAL_ARM_CONFIG_A_dft 0x8ff0000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t A53AA64nAA32 : 4; /* bits 3:0 */
		ca_uint32_t A53CFGEND : 4; /* bits 7:4 */
		ca_uint32_t A53CFGTE : 4; /* bits 11:8 */
		ca_uint32_t A53CP15SDISABLE : 4; /* bits 15:12 */
		ca_uint32_t A53CRYPTODISABLE : 4; /* bits 19:16 */
		ca_uint32_t A53VINITHI : 4; /* bits 23:20 */
		ca_uint32_t A53DBGPWRDUP : 4; /* bits 27:24 */
		ca_uint32_t A53DBGL1RSTDISABLE : 1; /* bits 28:28 */
		ca_uint32_t A53L2RSTDISABLE : 1; /* bits 29:29 */
		ca_uint32_t A53L2FLUSHREQ : 1; /* bits 30:30 */
		ca_uint32_t DBGROMADDRV : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_CONFIG_A_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_CONFIG_B 0xf4320084
#define GLOBAL_ARM_CONFIG_B_dft 0x00000006

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t GICCFGSDISABLE : 1; /* bits 0:0 */
		ca_uint32_t AINACTS : 1; /* bits 1:1 */
		ca_uint32_t ACINACTM : 1; /* bits 2:2 */
		ca_uint32_t A53CTIIRQACK : 4; /* bits 6:3 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t DS_L1 : 4; /* bits 11:8 */
		ca_uint32_t SD_L1 : 4; /* bits 15:12 */
		ca_uint32_t a53_core_clamp_en : 4; /* bits 19:16 */
		ca_uint32_t a53_core_pwrctrl_in : 4; /* bits 23:20 */
		ca_uint32_t a53_core_pwrctrl_2nd_in : 4; /* bits 27:24 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_CONFIG_B_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_CONFIG_C1 0xf4320088
#define GLOBAL_ARM_CONFIG_C1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t A53RVBARADDR1 : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_CONFIG_C1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_CONFIG_C0 0xf432008c
#define GLOBAL_ARM_CONFIG_C0_dft 0x3fffc000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t A53RVBARADDR0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_CONFIG_C0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_CONFIG_D 0xf4320090
#define GLOBAL_ARM_CONFIG_D_dft 0x000f4800

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t DBGROMADDR : 28; /* bits 27:0 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_CONFIG_D_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_CONFIG_E 0xf4320094
#define GLOBAL_ARM_CONFIG_E_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voltprob_a53_c0_gnd_ctrl : 3; /* bits 2:0 */
		ca_uint32_t voltprob_a53_c0_pwr_ctrl : 3; /* bits 5:3 */
		ca_uint32_t a53_dss_rst_n : 1; /* bits 6:6 */
		ca_uint32_t a53_ro_sel : 3; /* bits 9:7 */
		ca_uint32_t a53_speed_en : 5; /* bits 14:10 */
		ca_uint32_t a53_wire_sel : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_CONFIG_E_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SYSTEM_INTERRUPT 0xf4320098
#define GLOBAL_SYSTEM_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CPLL_LOCKi : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t EPLL_LOCKi : 1; /* bits 2:2 */
		ca_uint32_t FPLL_LOCKi : 1; /* bits 3:3 */
		ca_uint32_t CPU_WD_REQi : 1; /* bits 4:4 */
		ca_uint32_t A53PMUIRQi : 4; /* bits 8:5 */
		ca_uint32_t A53EXTIRQi : 1; /* bits 9:9 */
		ca_uint32_t CCI_ERRIRQi : 1; /* bits 10:10 */
		ca_uint32_t CCI_EVENTCNTOVFL_0i : 1; /* bits 11:11 */
		ca_uint32_t CCI_EVENTCNTOVFL_1i : 1; /* bits 12:12 */
		ca_uint32_t CCI_EVENTCNTOVFL_2i : 1; /* bits 13:13 */
		ca_uint32_t CCI_EVENTCNTOVFL_3i : 1; /* bits 14:14 */
		ca_uint32_t CCI_EVENTCNTOVFL_4i : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SYSTEM_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SYSTEM_INTENABLE 0xf432009c
#define GLOBAL_SYSTEM_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CPLL_LOCKe : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t EPLL_LOCKe : 1; /* bits 2:2 */
		ca_uint32_t FPLL_LOCKe : 1; /* bits 3:3 */
		ca_uint32_t CPU_WD_REQe : 1; /* bits 4:4 */
		ca_uint32_t A53PMUIRQe : 4; /* bits 8:5 */
		ca_uint32_t A53EXTIRQe : 1; /* bits 9:9 */
		ca_uint32_t CCI_ERRIRQe : 1; /* bits 10:10 */
		ca_uint32_t CCI_EVENTCNTOVFL_0e : 1; /* bits 11:11 */
		ca_uint32_t CCI_EVENTCNTOVFL_1e : 1; /* bits 12:12 */
		ca_uint32_t CCI_EVENTCNTOVFL_2e : 1; /* bits 13:13 */
		ca_uint32_t CCI_EVENTCNTOVFL_3e : 1; /* bits 14:14 */
		ca_uint32_t CCI_EVENTCNTOVFL_4e : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SYSTEM_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_NETWORK_ENGINE_INTERRUPT_0 0xf43200a0
#define GLOBAL_NETWORK_ENGINE_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NIi : 1; /* bits 0:0 */
		ca_uint32_t L2FEi : 1; /* bits 1:1 */
		ca_uint32_t L2TMi : 1; /* bits 2:2 */
		ca_uint32_t L3TEi : 1; /* bits 3:3 */
		ca_uint32_t TQMi : 1; /* bits 4:4 */
		ca_uint32_t SGMII_PCSi : 1; /* bits 5:5 */
		ca_uint32_t CPU_EPP_FIFO_0i : 1; /* bits 6:6 */
		ca_uint32_t CPU_EPP_FIFO_1i : 1; /* bits 7:7 */
		ca_uint32_t CPU_EPP_FIFO_2i : 1; /* bits 8:8 */
		ca_uint32_t CPU_EPP_FIFO_3i : 1; /* bits 9:9 */
		ca_uint32_t CPU_EPP_FIFO_4i : 1; /* bits 10:10 */
		ca_uint32_t CPU_EPP_FIFO_5i : 1; /* bits 11:11 */
		ca_uint32_t CPU_EPP_FIFO_6i : 1; /* bits 12:12 */
		ca_uint32_t CPU_EPP_FIFO_7i : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_LOi : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_HIi : 1; /* bits 15:15 */
		ca_uint32_t CPU_REFILL_REQ_0i : 1; /* bits 16:16 */
		ca_uint32_t CPU_REFILL_REQ_1i : 1; /* bits 17:17 */
		ca_uint32_t CPU_REFILL_REQ_2i : 1; /* bits 18:18 */
		ca_uint32_t CPU_REFILL_REQ_3i : 1; /* bits 19:19 */
		ca_uint32_t CPU_REFILL_REQ_4i : 1; /* bits 20:20 */
		ca_uint32_t CPU_REFILL_REQ_5i : 1; /* bits 21:21 */
		ca_uint32_t CPU_REFILL_REQ_6i : 1; /* bits 22:22 */
		ca_uint32_t CPU_REFILL_REQ_7i : 1; /* bits 23:23 */
		ca_uint32_t CPU_REFILL_REQ_8i : 1; /* bits 24:24 */
		ca_uint32_t CPU_REFILL_REQ_9i : 1; /* bits 25:25 */
		ca_uint32_t CPU_REFILL_REQ_10i : 1; /* bits 26:26 */
		ca_uint32_t CPU_REFILL_REQ_11i : 1; /* bits 27:27 */
		ca_uint32_t CPU_REFILL_REQ_12i : 1; /* bits 28:28 */
		ca_uint32_t CPU_REFILL_REQ_13i : 1; /* bits 29:29 */
		ca_uint32_t CPU_REFILL_REQ_14i : 1; /* bits 30:30 */
		ca_uint32_t CPU_REFILL_REQ_15i : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_NETWORK_ENGINE_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_NETWORK_ENGINE_INTENABLE_0 0xf43200a4
#define GLOBAL_NETWORK_ENGINE_INTENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NIe : 1; /* bits 0:0 */
		ca_uint32_t L2FEe : 1; /* bits 1:1 */
		ca_uint32_t L2TMe : 1; /* bits 2:2 */
		ca_uint32_t L3TEe : 1; /* bits 3:3 */
		ca_uint32_t TQMe : 1; /* bits 4:4 */
		ca_uint32_t SGMII_PCSe : 1; /* bits 5:5 */
		ca_uint32_t CPU_EPP_FIFO_0e : 1; /* bits 6:6 */
		ca_uint32_t CPU_EPP_FIFO_1e : 1; /* bits 7:7 */
		ca_uint32_t CPU_EPP_FIFO_2e : 1; /* bits 8:8 */
		ca_uint32_t CPU_EPP_FIFO_3e : 1; /* bits 9:9 */
		ca_uint32_t CPU_EPP_FIFO_4e : 1; /* bits 10:10 */
		ca_uint32_t CPU_EPP_FIFO_5e : 1; /* bits 11:11 */
		ca_uint32_t CPU_EPP_FIFO_6e : 1; /* bits 12:12 */
		ca_uint32_t CPU_EPP_FIFO_7e : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_LOe : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_HIe : 1; /* bits 15:15 */
		ca_uint32_t CPU_REFILL_REQ_0e : 1; /* bits 16:16 */
		ca_uint32_t CPU_REFILL_REQ_1e : 1; /* bits 17:17 */
		ca_uint32_t CPU_REFILL_REQ_2e : 1; /* bits 18:18 */
		ca_uint32_t CPU_REFILL_REQ_3e : 1; /* bits 19:19 */
		ca_uint32_t CPU_REFILL_REQ_4e : 1; /* bits 20:20 */
		ca_uint32_t CPU_REFILL_REQ_5e : 1; /* bits 21:21 */
		ca_uint32_t CPU_REFILL_REQ_6e : 1; /* bits 22:22 */
		ca_uint32_t CPU_REFILL_REQ_7e : 1; /* bits 23:23 */
		ca_uint32_t CPU_REFILL_REQ_8e : 1; /* bits 24:24 */
		ca_uint32_t CPU_REFILL_REQ_9e : 1; /* bits 25:25 */
		ca_uint32_t CPU_REFILL_REQ_10e : 1; /* bits 26:26 */
		ca_uint32_t CPU_REFILL_REQ_11e : 1; /* bits 27:27 */
		ca_uint32_t CPU_REFILL_REQ_12e : 1; /* bits 28:28 */
		ca_uint32_t CPU_REFILL_REQ_13e : 1; /* bits 29:29 */
		ca_uint32_t CPU_REFILL_REQ_14e : 1; /* bits 30:30 */
		ca_uint32_t CPU_REFILL_REQ_15e : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_NETWORK_ENGINE_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_NETWORK_ENGINE_INTERRUPT_1 0xf43200a8
#define GLOBAL_NETWORK_ENGINE_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NIi : 1; /* bits 0:0 */
		ca_uint32_t L2FEi : 1; /* bits 1:1 */
		ca_uint32_t L2TMi : 1; /* bits 2:2 */
		ca_uint32_t L3TEi : 1; /* bits 3:3 */
		ca_uint32_t TQMi : 1; /* bits 4:4 */
		ca_uint32_t SGMII_PCSi : 1; /* bits 5:5 */
		ca_uint32_t CPU_EPP_FIFO_0i : 1; /* bits 6:6 */
		ca_uint32_t CPU_EPP_FIFO_1i : 1; /* bits 7:7 */
		ca_uint32_t CPU_EPP_FIFO_2i : 1; /* bits 8:8 */
		ca_uint32_t CPU_EPP_FIFO_3i : 1; /* bits 9:9 */
		ca_uint32_t CPU_EPP_FIFO_4i : 1; /* bits 10:10 */
		ca_uint32_t CPU_EPP_FIFO_5i : 1; /* bits 11:11 */
		ca_uint32_t CPU_EPP_FIFO_6i : 1; /* bits 12:12 */
		ca_uint32_t CPU_EPP_FIFO_7i : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_LOi : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_HIi : 1; /* bits 15:15 */
		ca_uint32_t CPU_REFILL_REQ_0i : 1; /* bits 16:16 */
		ca_uint32_t CPU_REFILL_REQ_1i : 1; /* bits 17:17 */
		ca_uint32_t CPU_REFILL_REQ_2i : 1; /* bits 18:18 */
		ca_uint32_t CPU_REFILL_REQ_3i : 1; /* bits 19:19 */
		ca_uint32_t CPU_REFILL_REQ_4i : 1; /* bits 20:20 */
		ca_uint32_t CPU_REFILL_REQ_5i : 1; /* bits 21:21 */
		ca_uint32_t CPU_REFILL_REQ_6i : 1; /* bits 22:22 */
		ca_uint32_t CPU_REFILL_REQ_7i : 1; /* bits 23:23 */
		ca_uint32_t CPU_REFILL_REQ_8i : 1; /* bits 24:24 */
		ca_uint32_t CPU_REFILL_REQ_9i : 1; /* bits 25:25 */
		ca_uint32_t CPU_REFILL_REQ_10i : 1; /* bits 26:26 */
		ca_uint32_t CPU_REFILL_REQ_11i : 1; /* bits 27:27 */
		ca_uint32_t CPU_REFILL_REQ_12i : 1; /* bits 28:28 */
		ca_uint32_t CPU_REFILL_REQ_13i : 1; /* bits 29:29 */
		ca_uint32_t CPU_REFILL_REQ_14i : 1; /* bits 30:30 */
		ca_uint32_t CPU_REFILL_REQ_15i : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_NETWORK_ENGINE_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_NETWORK_ENGINE_INTENABLE_1 0xf43200ac
#define GLOBAL_NETWORK_ENGINE_INTENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t NIe : 1; /* bits 0:0 */
		ca_uint32_t L2FEe : 1; /* bits 1:1 */
		ca_uint32_t L2TMe : 1; /* bits 2:2 */
		ca_uint32_t L3TEe : 1; /* bits 3:3 */
		ca_uint32_t TQMe : 1; /* bits 4:4 */
		ca_uint32_t SGMII_PCSe : 1; /* bits 5:5 */
		ca_uint32_t CPU_EPP_FIFO_0e : 1; /* bits 6:6 */
		ca_uint32_t CPU_EPP_FIFO_1e : 1; /* bits 7:7 */
		ca_uint32_t CPU_EPP_FIFO_2e : 1; /* bits 8:8 */
		ca_uint32_t CPU_EPP_FIFO_3e : 1; /* bits 9:9 */
		ca_uint32_t CPU_EPP_FIFO_4e : 1; /* bits 10:10 */
		ca_uint32_t CPU_EPP_FIFO_5e : 1; /* bits 11:11 */
		ca_uint32_t CPU_EPP_FIFO_6e : 1; /* bits 12:12 */
		ca_uint32_t CPU_EPP_FIFO_7e : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_LOe : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_HIe : 1; /* bits 15:15 */
		ca_uint32_t CPU_REFILL_REQ_0e : 1; /* bits 16:16 */
		ca_uint32_t CPU_REFILL_REQ_1e : 1; /* bits 17:17 */
		ca_uint32_t CPU_REFILL_REQ_2e : 1; /* bits 18:18 */
		ca_uint32_t CPU_REFILL_REQ_3e : 1; /* bits 19:19 */
		ca_uint32_t CPU_REFILL_REQ_4e : 1; /* bits 20:20 */
		ca_uint32_t CPU_REFILL_REQ_5e : 1; /* bits 21:21 */
		ca_uint32_t CPU_REFILL_REQ_6e : 1; /* bits 22:22 */
		ca_uint32_t CPU_REFILL_REQ_7e : 1; /* bits 23:23 */
		ca_uint32_t CPU_REFILL_REQ_8e : 1; /* bits 24:24 */
		ca_uint32_t CPU_REFILL_REQ_9e : 1; /* bits 25:25 */
		ca_uint32_t CPU_REFILL_REQ_10e : 1; /* bits 26:26 */
		ca_uint32_t CPU_REFILL_REQ_11e : 1; /* bits 27:27 */
		ca_uint32_t CPU_REFILL_REQ_12e : 1; /* bits 28:28 */
		ca_uint32_t CPU_REFILL_REQ_13e : 1; /* bits 29:29 */
		ca_uint32_t CPU_REFILL_REQ_14e : 1; /* bits 30:30 */
		ca_uint32_t CPU_REFILL_REQ_15e : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_NETWORK_ENGINE_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_NETWORK_ENGINE_STATUS 0xf43200b0
#define GLOBAL_NETWORK_ENGINE_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t l2fe_init_done : 1; /* bits 0:0 */
		ca_uint32_t l2tm_init_done : 1; /* bits 1:1 */
		ca_uint32_t tqm_init_done : 1; /* bits 2:2 */
		ca_uint32_t tqm_glb_idle : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_NETWORK_ENGINE_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_WOL_INTERRUPT 0xf43200b4
#define GLOBAL_WOL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t PORT0_WOLi : 1; /* bits 0:0 */
		ca_uint32_t PORT1_WOLi : 1; /* bits 1:1 */
		ca_uint32_t PORT2_WOLi : 1; /* bits 2:2 */
		ca_uint32_t PORT3_WOLi : 1; /* bits 3:3 */
		ca_uint32_t PORT4_WOLi : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_WOL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_WOL_INTENABLE 0xf43200b8
#define GLOBAL_WOL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t PORT0_WOLe : 1; /* bits 0:0 */
		ca_uint32_t PORT1_WOLe : 1; /* bits 1:1 */
		ca_uint32_t PORT2_WOLe : 1; /* bits 2:2 */
		ca_uint32_t PORT3_WOLe : 1; /* bits 3:3 */
		ca_uint32_t PORT4_WOLe : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_WOL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_JTAG_TAP_CONTROL 0xf43200bc
#define GLOBAL_JTAG_TAP_CONTROL_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable_arm : 1; /* bits 0:0 */
		ca_uint32_t enable_recirc_0 : 1; /* bits 1:1 */
		ca_uint32_t enable_recirc_1 : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_JTAG_TAP_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SOFTWARE 0xf43200c0
#define GLOBAL_SOFTWARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t val : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SOFTWARE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SOFTWARE2 0xf43200c4
#define GLOBAL_SOFTWARE2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t val : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SOFTWARE2_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SCRATCH 0xf43200c8
#define GLOBAL_SCRATCH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t scratch : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SCRATCH_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FMRO 0xf43200cc
#define GLOBAL_FMRO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fmro_sel : 16; /* bits 15:0 */
		ca_uint32_t clk_sel : 6; /* bits 21:16 */
		ca_uint32_t blk_sel : 6; /* bits 27:22 */
		ca_uint32_t gphy_sel : 2; /* bits 29:28 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FMRO_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_CRYPTO_CONFIG_0 0xf43200d0
#define GLOBAL_CRYPTO_CONFIG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crypto0_rng_test_mode : 1; /* bits 0:0 */
		ca_uint32_t crypto0_rng_test_tweak_mux : 2; /* bits 2:1 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_CRYPTO_CONFIG_0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_CRYPTO_CONFIG_1 0xf43200d4
#define GLOBAL_CRYPTO_CONFIG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crypto1_rng_test_mode : 1; /* bits 0:0 */
		ca_uint32_t crypto1_rng_test_tweak_mux : 2; /* bits 2:1 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_CRYPTO_CONFIG_1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SPEED_OVERRIDE 0xf43200d8
#define GLOBAL_SPEED_OVERRIDE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t speed : 3; /* bits 2:0 */
		ca_uint32_t ov_enable : 29; /* bits 31:3 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SPEED_OVERRIDE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ARM_DEBUG 0xf43200dc
#define GLOBAL_ARM_DEBUG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cpu_dbgen : 4; /* bits 3:0 */
		ca_uint32_t cpu_niden : 4; /* bits 7:4 */
		ca_uint32_t cpu_spiden : 4; /* bits 11:8 */
		ca_uint32_t cpu_spinden : 4; /* bits 15:12 */
		ca_uint32_t auth_cssys_dbgen : 1; /* bits 16:16 */
		ca_uint32_t auth_cssys_niden : 1; /* bits 17:17 */
		ca_uint32_t cs_auth_niden : 1; /* bits 18:18 */
		ca_uint32_t cs_auth_spinden : 1; /* bits 19:19 */
		ca_uint32_t cfg_tpctl : 1; /* bits 20:20 */
		ca_uint32_t cfg_tpmaxdatasize : 5; /* bits 25:21 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ARM_DEBUG_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_AXI_MUX_TEST 0xf43200e0
#define GLOBAL_AXI_MUX_TEST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t test_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_AXI_MUX_TEST_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_AXI_MUX_TEST_STATUS 0xf43200e4
#define GLOBAL_AXI_MUX_TEST_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t result : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_AXI_MUX_TEST_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SD_DLL_CTRL 0xf43200e8
#define GLOBAL_SD_DLL_CTRL_dft 0x00140000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sd_clk_sel : 2; /* bits 1:0 */
		ca_uint32_t sd_dll_reset : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sd_dll_shiftClk0_phaseSel : 4; /* bits 7:4 */
		ca_uint32_t sd_dll_shiftClk1_phaseSel : 4; /* bits 11:8 */
		ca_uint32_t sd_dll_shiftClk0_bypass : 1; /* bits 12:12 */
		ca_uint32_t sd_dll_shiftClk1_bypass : 1; /* bits 13:13 */
		ca_uint32_t sd_phase_reset_override : 1; /* bits 14:14 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t sd_drv_phase : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t sd_sample_phase : 6; /* bits 29:24 */
		ca_uint32_t rsrvd4 : 2;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SD_DLL_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SD_DLL_STATUS 0xf43200ec
#define GLOBAL_SD_DLL_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sd_dll_state : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t sd_dll_tapNum : 9; /* bits 12:4 */
		ca_uint32_t rsrvd2 : 19;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SD_DLL_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONTROL 0xf43200f0
#define GLOBAL_LED_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t blink_rate_1 : 8; /* bits 7:0 */
		ca_uint32_t blink_rate_2 : 8; /* bits 15:8 */
		ca_uint32_t led_test : 1; /* bits 16:16 */
		ca_uint32_t led_clk_polarity : 1; /* bits 17:17 */
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t led_test_activity : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_0 0xf43200f4
#define GLOBAL_LED_CONFIG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_1 0xf43200f8
#define GLOBAL_LED_CONFIG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_2 0xf43200fc
#define GLOBAL_LED_CONFIG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_2_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_3 0xf4320100
#define GLOBAL_LED_CONFIG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_3_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_4 0xf4320104
#define GLOBAL_LED_CONFIG_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_4_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_5 0xf4320108
#define GLOBAL_LED_CONFIG_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_5_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_6 0xf432010c
#define GLOBAL_LED_CONFIG_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_6_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_7 0xf4320110
#define GLOBAL_LED_CONFIG_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_7_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_8 0xf4320114
#define GLOBAL_LED_CONFIG_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_8_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_9 0xf4320118
#define GLOBAL_LED_CONFIG_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_9_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_10 0xf432011c
#define GLOBAL_LED_CONFIG_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_10_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_11 0xf4320120
#define GLOBAL_LED_CONFIG_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_11_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_12 0xf4320124
#define GLOBAL_LED_CONFIG_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_12_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_13 0xf4320128
#define GLOBAL_LED_CONFIG_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_13_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_14 0xf432012c
#define GLOBAL_LED_CONFIG_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_14_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_LED_CONFIG_15 0xf4320130
#define GLOBAL_LED_CONFIG_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t led_event_on : 3; /* bits 2:0 */
		ca_uint32_t led_event_blink : 3; /* bits 5:3 */
		ca_uint32_t led_event_off : 3; /* bits 8:6 */
		ca_uint32_t led_off_on : 2; /* bits 10:9 */
		ca_uint32_t led_port : 3; /* bits 13:11 */
		ca_uint32_t led_off_val : 1; /* bits 14:14 */
		ca_uint32_t led_sw_event : 1; /* bits 15:15 */
		ca_uint32_t led_blink_sel : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_LED_CONFIG_15_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_CPLLDIV 0xf4320134
#define GLOBAL_CPLLDIV_dft 0x00000400

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cortex_divsel : 6; /* bits 5:0 */
		ca_uint32_t cci_onetoone : 1; /* bits 6:6 */
		ca_uint32_t cpll_div_override : 1; /* bits 7:7 */
		ca_uint32_t f2c_divsel : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t cf_sel : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t cpll_mode_override : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_CPLLDIV_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_CPLLMUX 0xf4320138
#define GLOBAL_CPLLMUX_dft 0x00220000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t cf_i0delay : 4; /* bits 19:16 */
		ca_uint32_t cf_i1delay : 4; /* bits 23:20 */
		ca_uint32_t cf_i0guard : 4; /* bits 27:24 */
		ca_uint32_t cf_i1guard : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_CPLLMUX_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_EPLLDIV 0xf432013c
#define GLOBAL_EPLLDIV_dft 0x180c0c0c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t crypto_divsel : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t core_divsel : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t hsaxi_divsel : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t lsaxi_divsel : 7; /* bits 30:24 */
		ca_uint32_t rsrvd4 : 1;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_EPLLDIV_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_EPLLDIV2 0xf4320140
#define GLOBAL_EPLLDIV2_dft 0x0000100c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t atb_divsel : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t eaxi_divsel : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 17;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_EPLLDIV2_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PEDIV 0xf4320144
#define GLOBAL_PEDIV_dft 0x00040404

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t f_divsel : 6; /* bits 5:0 */
		ca_uint32_t offload_sel : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t c2f_divsel : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t peaxi_divsel : 6; /* bits 21:16 */
		ca_uint32_t peaxi_fullspeedsel : 1; /* bits 22:22 */
		ca_uint32_t rsrvd3 : 9;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PEDIV_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PEMUX 0xf4320148
#define GLOBAL_PEMUX_dft 0x00220000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t offload_i0delay : 4; /* bits 19:16 */
		ca_uint32_t offload_i1delay : 4; /* bits 23:20 */
		ca_uint32_t offload_i0guard : 4; /* bits 27:24 */
		ca_uint32_t offload_i1guard : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PEMUX_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SECURITY_OVERRIDE 0xf432014c
#define GLOBAL_SECURITY_OVERRIDE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t secure_override_ne : 1; /* bits 0:0 */
		ca_uint32_t secure_override_per : 1; /* bits 1:1 */
		ca_uint32_t secure_override_fbm : 1; /* bits 2:2 */
		ca_uint32_t secure_override_dma : 1; /* bits 3:3 */
		ca_uint32_t secure_override_ldma : 1; /* bits 4:4 */
		ca_uint32_t secure_override_flash : 1; /* bits 5:5 */
		ca_uint32_t secure_override_pcie0 : 1; /* bits 6:6 */
		ca_uint32_t secure_override_pcie1 : 1; /* bits 7:7 */
		ca_uint32_t secure_override_pcie2 : 1; /* bits 8:8 */
		ca_uint32_t secure_override_ccireg : 1; /* bits 9:9 */
		ca_uint32_t secure_override_capsram : 1; /* bits 10:10 */
		ca_uint32_t secure_override_ddr : 1; /* bits 11:11 */
		ca_uint32_t secure_override_sadb : 1; /* bits 12:12 */
		ca_uint32_t secure_override_usb : 1; /* bits 13:13 */
		ca_uint32_t secure_override_xfi : 1; /* bits 14:14 */
		ca_uint32_t secure_override_otprom : 1; /* bits 15:15 */
		ca_uint32_t secure_override_peatu : 1; /* bits 16:16 */
		ca_uint32_t secure_override_hsioatu : 1; /* bits 17:17 */
		ca_uint32_t otp_lock_prot_fields : 1; /* bits 18:18 */
		ca_uint32_t secure_override_global : 1; /* bits 19:19 */
		ca_uint32_t secure_override_eaxi : 1; /* bits 20:20 */
		ca_uint32_t secure_override_pemisc : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SECURITY_OVERRIDE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_MASTER_OVERRIDE_SECURITY 0xf4320150
#define GLOBAL_MASTER_OVERRIDE_SECURITY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t master_secure_override_ne : 1; /* bits 0:0 */
		ca_uint32_t master_secure_override_dma : 1; /* bits 1:1 */
		ca_uint32_t master_secure_override_ldma : 1; /* bits 2:2 */
		ca_uint32_t master_secure_override_fbm : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_MASTER_OVERRIDE_SECURITY_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_PE_ISO_MODE 0xf4320154
#define GLOBAL_PE_ISO_MODE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pe_iso_mode : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_PE_ISO_MODE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ROMOTP_SLV_ID 0xf4320158
#define GLOBAL_ROMOTP_SLV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry3 : 6; /* bits 23:18 */
		ca_uint32_t reg_id_en0 : 1; /* bits 24:24 */
		ca_uint32_t reg_id_en1 : 1; /* bits 25:25 */
		ca_uint32_t reg_id_en2 : 1; /* bits 26:26 */
		ca_uint32_t reg_id_en3 : 1; /* bits 27:27 */
		ca_uint32_t reg_enabled : 1; /* bits 28:28 */
		ca_uint32_t rom_enabled : 1; /* bits 29:29 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ROMOTP_SLV_ID_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_ROMOTP_SLV_ID_MASK 0xf432015c
#define GLOBAL_ROMOTP_SLV_ID_MASK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry_mask0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry_mask1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry_mask2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry_mask3 : 6; /* bits 23:18 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_ROMOTP_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_CPLL0 0xf4320160
#define GLOBAL_CPLL0_dft 0x00000fed

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SCPU_DIV_DIVN : 8; /* bits 7:0 */
		ca_uint32_t SCPU_POW : 1; /* bits 8:8 */
		ca_uint32_t SCPU_RSTB : 1; /* bits 9:9 */
		ca_uint32_t DIV_PREDIV_SEL : 2; /* bits 11:10 */
		ca_uint32_t DIV_PREDIV_BPS : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_CPLL0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_CPLL1 0xf4320164
#define GLOBAL_CPLL1_dft 0x0001425f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ICP : 3; /* bits 2:0 */
		ca_uint32_t LPF_CS : 2; /* bits 4:3 */
		ca_uint32_t LPF_RS : 3; /* bits 7:5 */
		ca_uint32_t SCPU_DBUG_EN : 1; /* bits 8:8 */
		ca_uint32_t SEL_CCO : 1; /* bits 9:9 */
		ca_uint32_t WD_RST : 1; /* bits 10:10 */
		ca_uint32_t WD_SET : 1; /* bits 11:11 */
		ca_uint32_t OEB : 1; /* bits 12:12 */
		ca_uint32_t TESTSEL : 1; /* bits 13:13 */
		ca_uint32_t LDO10V_SEL : 2; /* bits 15:14 */
		ca_uint32_t LDO18V_SEL : 2; /* bits 17:16 */
		ca_uint32_t LOOP_PI_ISEL : 2; /* bits 19:18 */
		ca_uint32_t LOOP_PI_SEL : 5; /* bits 24:20 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_CPLL1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_EPLL0 0xf4320168
#define GLOBAL_EPLL0_dft 0x0000039d

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SCPU_DIV_DIVN : 8; /* bits 7:0 */
		ca_uint32_t SCPU_POW : 1; /* bits 8:8 */
		ca_uint32_t SCPU_RSTB : 1; /* bits 9:9 */
		ca_uint32_t DIV_PREDIV_SEL : 2; /* bits 11:10 */
		ca_uint32_t DIV_PREDIV_BPS : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_EPLL0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_EPLL1 0xf432016c
#define GLOBAL_EPLL1_dft 0x0001425f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ICP : 3; /* bits 2:0 */
		ca_uint32_t LPF_CS : 2; /* bits 4:3 */
		ca_uint32_t LPF_RS : 3; /* bits 7:5 */
		ca_uint32_t SCPU_DBUG_EN : 1; /* bits 8:8 */
		ca_uint32_t SEL_CCO : 1; /* bits 9:9 */
		ca_uint32_t WD_RST : 1; /* bits 10:10 */
		ca_uint32_t WD_SET : 1; /* bits 11:11 */
		ca_uint32_t OEB : 1; /* bits 12:12 */
		ca_uint32_t TESTSEL : 1; /* bits 13:13 */
		ca_uint32_t LDO10V_SEL : 2; /* bits 15:14 */
		ca_uint32_t LDO18V_SEL : 2; /* bits 17:16 */
		ca_uint32_t LOOP_PI_ISEL : 2; /* bits 19:18 */
		ca_uint32_t LOOP_PI_SEL : 5; /* bits 24:20 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_EPLL1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FPLL0 0xf4320170
#define GLOBAL_FPLL0_dft 0x000007bd

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SCPU_DIV_DIVN : 8; /* bits 7:0 */
		ca_uint32_t SCPU_POW : 1; /* bits 8:8 */
		ca_uint32_t SCPU_RSTB : 1; /* bits 9:9 */
		ca_uint32_t DIV_PREDIV_SEL : 2; /* bits 11:10 */
		ca_uint32_t DIV_PREDIV_BPS : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FPLL0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FPLL1 0xf4320174
#define GLOBAL_FPLL1_dft 0x0001425f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ICP : 3; /* bits 2:0 */
		ca_uint32_t LPF_CS : 2; /* bits 4:3 */
		ca_uint32_t LPF_RS : 3; /* bits 7:5 */
		ca_uint32_t SCPU_DBUG_EN : 1; /* bits 8:8 */
		ca_uint32_t SEL_CCO : 1; /* bits 9:9 */
		ca_uint32_t WD_RST : 1; /* bits 10:10 */
		ca_uint32_t WD_SET : 1; /* bits 11:11 */
		ca_uint32_t OEB : 1; /* bits 12:12 */
		ca_uint32_t TESTSEL : 1; /* bits 13:13 */
		ca_uint32_t LDO10V_SEL : 2; /* bits 15:14 */
		ca_uint32_t LDO18V_SEL : 2; /* bits 17:16 */
		ca_uint32_t LOOP_PI_ISEL : 2; /* bits 19:18 */
		ca_uint32_t LOOP_PI_SEL : 5; /* bits 24:20 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FPLL1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BOOT_VEC_0 0xf4320178
#define GLOBAL_BOOT_VEC_0_dft 0x17ff4000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t global_boot_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BOOT_VEC_0_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BOOT_VEC_4 0xf432017c
#define GLOBAL_BOOT_VEC_4_dft 0xd503201f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t global_boot_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BOOT_VEC_4_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BOOT_VEC_8 0xf4320180
#define GLOBAL_BOOT_VEC_8_dft 0xd503201f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t global_boot_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BOOT_VEC_8_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_BOOT_VEC_C 0xf4320184
#define GLOBAL_BOOT_VEC_C_dft 0xd503201f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t global_boot_c : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_BOOT_VEC_C_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FUSE_CONTROL 0xf4320188
#define GLOBAL_FUSE_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fuse_group_number : 5; /* bits 4:0 */
		ca_uint32_t fuse_number : 5; /* bits 9:5 */
		ca_uint32_t fuse_mr : 1; /* bits 10:10 */
		ca_uint32_t fuse_do_program : 1; /* bits 11:11 */
		ca_uint32_t fuse_do_read : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FUSE_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FUSE_RESULT 0xf432018c
#define GLOBAL_FUSE_RESULT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fuse_done : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FUSE_RESULT_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FUSE_VALUE 0xf4320190
#define GLOBAL_FUSE_VALUE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fuse_value : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FUSE_VALUE_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FUSE_PGM_TIMING 0xf4320194
#define GLOBAL_FUSE_PGM_TIMING_dft 0x0aa65889

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fuse_COUNT_THP_CS : 3; /* bits 2:0 */
		ca_uint32_t fuse_COUNT_THP_PD_PS : 3; /* bits 5:3 */
		ca_uint32_t fuse_COUNT_THP_PS : 3; /* bits 8:6 */
		ca_uint32_t fuse_COUNT_TPGM : 9; /* bits 17:9 */
		ca_uint32_t fuse_COUNT_TSUP_CS : 3; /* bits 20:18 */
		ca_uint32_t fuse_COUNT_TSUP_PD_PS : 5; /* bits 25:21 */
		ca_uint32_t fuse_COUNT_TSUP_PS_CS : 3; /* bits 28:26 */
		ca_uint32_t rsrvd1 : 3;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FUSE_PGM_TIMING_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_FUSE_READ_TIMING 0xf4320198
#define GLOBAL_FUSE_READ_TIMING_dft 0x002a4cd1

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fuse_COUNT_THR_CS : 3; /* bits 2:0 */
		ca_uint32_t fuse_COUNT_THR_PS_CS : 3; /* bits 5:3 */
		ca_uint32_t fuse_COUNT_TRD : 4; /* bits 9:6 */
		ca_uint32_t fuse_COUNT_TSQ : 4; /* bits 13:10 */
		ca_uint32_t fuse_COUNT_TSUR_CS : 3; /* bits 16:14 */
		ca_uint32_t fuse_COUNT_TSUR_PD : 5; /* bits 21:17 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_FUSE_READ_TIMING_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_SATURN_COMM 0xf432019c
#define GLOBAL_SATURN_COMM_dft 0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reset_saturn_com : 1; /* bits 0:0 */
		ca_uint32_t saturn_send_training : 1; /* bits 1:1 */
		ca_uint32_t saturn_rcv_get_trained : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_SATURN_COMM_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DSS_0_CNTL 0xf43201a0
#define GLOBAL_DSS_0_CNTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dss_rst_n : 1; /* bits 0:0 */
		ca_uint32_t ro_sel : 3; /* bits 3:1 */
		ca_uint32_t wire_sel : 1; /* bits 4:4 */
		ca_uint32_t data_in : 20; /* bits 24:5 */
		ca_uint32_t speed_en : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DSS_0_CNTL_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DSS_0_STATUS 0xf43201a4
#define GLOBAL_DSS_0_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ready : 1; /* bits 0:0 */
		ca_uint32_t count_out : 20; /* bits 20:1 */
		ca_uint32_t wsort_go : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DSS_0_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DEVICE_ASSIGN_ID1 0xf43201a8
#define GLOBAL_DEVICE_ASSIGN_ID1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t device_id1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DEVICE_ASSIGN_ID1_t;
#endif /* !__ASSEMBLER__ */

#define GLOBAL_DEVICE_ASSIGN_ID0 0xf43201ac
#define GLOBAL_DEVICE_ASSIGN_ID0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t device_id0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} GLOBAL_DEVICE_ASSIGN_ID0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* GLB */
#ifndef __ASSEMBLER__
typedef struct {
	GLOBAL_JTAG_ID_t JTAG_ID; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	GLOBAL_BLOCK_RESET_t BLOCK_RESET; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	GLOBAL_DPHY_RESET_t DPHY_RESET; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	GLOBAL_FABRIC_RESET_t FABRIC_RESET; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	GLOBAL_ARM_RESET_t ARM_RESET; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	GLOBAL_STRAP_t STRAP; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	GLOBAL_BIST_RESULT_t BIST_RESULT; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	GLOBAL_BIST_DATA_t BIST_DATA; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	GLOBAL_GLOBAL_CONFIG_t GLOBAL_CONFIG; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	GLOBAL_PHY_CONTROL_t PHY_CONTROL; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	GLOBAL_PHY_MISC_CONTROL_t PHY_MISC_CONTROL; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	GLOBAL_PHY_STATUS_t PHY_STATUS; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	GLOBAL_PHY_SGMII_MISC_CONTROL_t PHY_SGMII_MISC_CONTROL; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	GLOBAL_PHY_SGMII_PCS_CONTROL_t PHY_SGMII_PCS_CONTROL; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	GLOBAL_PHY_SGMII_PCS_INFO_t PHY_SGMII_PCS_INFO; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	GLOBAL_SGMII_PCS_INTERRUPT_t SGMII_PCS_INTERRUPT; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	GLOBAL_SGMII_PCS_INTENABLE_t SGMII_PCS_INTENABLE; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	GLOBAL_RXAUI_SERDES_CONTROL_t RXAUI_SERDES_CONTROL; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	GLOBAL_PIN_MUX_t PIN_MUX; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	GLOBAL_IO_DRIVE_CONTROL_t IO_DRIVE_CONTROL; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	GLOBAL_GPIO_MUX_0_t GPIO_MUX_0; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	GLOBAL_GPIO_MUX_1_t GPIO_MUX_1; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	GLOBAL_GPIO_MUX_2_t GPIO_MUX_2; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	GLOBAL_GPIO_MUX_3_t GPIO_MUX_3; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	GLOBAL_GPIO_MUX_4_t GPIO_MUX_4; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	GLOBAL_GIGE_PHY_t GIGE_PHY; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	GLOBAL_ARM_STATE_t ARM_STATE; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	GLOBAL_PE_DSS_STATE_t PE_DSS_STATE; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	GLOBAL_DSS_COUNT3_t DSS_COUNT3; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	GLOBAL_DSS_COUNT2_t DSS_COUNT2; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	GLOBAL_DSS_COUNT1_t DSS_COUNT1; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	GLOBAL_DSS_COUNT0_t DSS_COUNT0; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	GLOBAL_ARM_CONFIG_A_t ARM_CONFIG_A; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	GLOBAL_ARM_CONFIG_B_t ARM_CONFIG_B; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	GLOBAL_ARM_CONFIG_C1_t ARM_CONFIG_C1; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	GLOBAL_ARM_CONFIG_C0_t ARM_CONFIG_C0; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	GLOBAL_ARM_CONFIG_D_t ARM_CONFIG_D; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	GLOBAL_ARM_CONFIG_E_t ARM_CONFIG_E; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	GLOBAL_SYSTEM_INTERRUPT_t SYSTEM_INTERRUPT; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	GLOBAL_SYSTEM_INTENABLE_t SYSTEM_INTENABLE; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	GLOBAL_NETWORK_ENGINE_INTERRUPT_0_t
	  NETWORK_ENGINE_INTERRUPT_0; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	GLOBAL_NETWORK_ENGINE_INTENABLE_0_t
	  NETWORK_ENGINE_INTENABLE_0; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	GLOBAL_NETWORK_ENGINE_INTERRUPT_1_t
	  NETWORK_ENGINE_INTERRUPT_1; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	GLOBAL_NETWORK_ENGINE_INTENABLE_1_t
	  NETWORK_ENGINE_INTENABLE_1; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	GLOBAL_NETWORK_ENGINE_STATUS_t NETWORK_ENGINE_STATUS; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	GLOBAL_WOL_INTERRUPT_t WOL_INTERRUPT; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	GLOBAL_WOL_INTENABLE_t WOL_INTENABLE; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	GLOBAL_JTAG_TAP_CONTROL_t JTAG_TAP_CONTROL; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	GLOBAL_SOFTWARE_t SOFTWARE; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	GLOBAL_SOFTWARE2_t SOFTWARE2; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	GLOBAL_SCRATCH_t SCRATCH; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	GLOBAL_FMRO_t FMRO; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	GLOBAL_CRYPTO_CONFIG_0_t CRYPTO_CONFIG_0; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	GLOBAL_CRYPTO_CONFIG_1_t CRYPTO_CONFIG_1; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	GLOBAL_SPEED_OVERRIDE_t SPEED_OVERRIDE; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	GLOBAL_ARM_DEBUG_t ARM_DEBUG; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	GLOBAL_AXI_MUX_TEST_t AXI_MUX_TEST; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	GLOBAL_AXI_MUX_TEST_STATUS_t AXI_MUX_TEST_STATUS; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	GLOBAL_SD_DLL_CTRL_t SD_DLL_CTRL; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	GLOBAL_SD_DLL_STATUS_t SD_DLL_STATUS; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	GLOBAL_LED_CONTROL_t LED_CONTROL; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	GLOBAL_LED_CONFIG_0_t LED_CONFIG_0; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	GLOBAL_LED_CONFIG_1_t LED_CONFIG_1; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	GLOBAL_LED_CONFIG_2_t LED_CONFIG_2; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	GLOBAL_LED_CONFIG_3_t LED_CONFIG_3; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	GLOBAL_LED_CONFIG_4_t LED_CONFIG_4; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	GLOBAL_LED_CONFIG_5_t LED_CONFIG_5; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	GLOBAL_LED_CONFIG_6_t LED_CONFIG_6; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	GLOBAL_LED_CONFIG_7_t LED_CONFIG_7; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	GLOBAL_LED_CONFIG_8_t LED_CONFIG_8; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	GLOBAL_LED_CONFIG_9_t LED_CONFIG_9; /* addr: 0x00000118 */
	ca_uint32_t rsrvd71[3];
	GLOBAL_LED_CONFIG_10_t LED_CONFIG_10; /* addr: 0x0000011c */
	ca_uint32_t rsrvd72[3];
	GLOBAL_LED_CONFIG_11_t LED_CONFIG_11; /* addr: 0x00000120 */
	ca_uint32_t rsrvd73[3];
	GLOBAL_LED_CONFIG_12_t LED_CONFIG_12; /* addr: 0x00000124 */
	ca_uint32_t rsrvd74[3];
	GLOBAL_LED_CONFIG_13_t LED_CONFIG_13; /* addr: 0x00000128 */
	ca_uint32_t rsrvd75[3];
	GLOBAL_LED_CONFIG_14_t LED_CONFIG_14; /* addr: 0x0000012c */
	ca_uint32_t rsrvd76[3];
	GLOBAL_LED_CONFIG_15_t LED_CONFIG_15; /* addr: 0x00000130 */
	ca_uint32_t rsrvd77[3];
	GLOBAL_CPLLDIV_t CPLLDIV; /* addr: 0x00000134 */
	ca_uint32_t rsrvd78[3];
	GLOBAL_CPLLMUX_t CPLLMUX; /* addr: 0x00000138 */
	ca_uint32_t rsrvd79[3];
	GLOBAL_EPLLDIV_t EPLLDIV; /* addr: 0x0000013c */
	ca_uint32_t rsrvd80[3];
	GLOBAL_EPLLDIV2_t EPLLDIV2; /* addr: 0x00000140 */
	ca_uint32_t rsrvd81[3];
	GLOBAL_PEDIV_t PEDIV; /* addr: 0x00000144 */
	ca_uint32_t rsrvd82[3];
	GLOBAL_PEMUX_t PEMUX; /* addr: 0x00000148 */
	ca_uint32_t rsrvd83[3];
	GLOBAL_SECURITY_OVERRIDE_t SECURITY_OVERRIDE; /* addr: 0x0000014c */
	ca_uint32_t rsrvd84[3];
	GLOBAL_MASTER_OVERRIDE_SECURITY_t
	  MASTER_OVERRIDE_SECURITY; /* addr: 0x00000150 */
	ca_uint32_t rsrvd85[3];
	GLOBAL_PE_ISO_MODE_t PE_ISO_MODE; /* addr: 0x00000154 */
	ca_uint32_t rsrvd86[3];
	GLOBAL_ROMOTP_SLV_ID_t ROMOTP_SLV_ID; /* addr: 0x00000158 */
	ca_uint32_t rsrvd87[3];
	GLOBAL_ROMOTP_SLV_ID_MASK_t ROMOTP_SLV_ID_MASK; /* addr: 0x0000015c */
	ca_uint32_t rsrvd88[3];
	GLOBAL_CPLL0_t CPLL0; /* addr: 0x00000160 */
	ca_uint32_t rsrvd89[3];
	GLOBAL_CPLL1_t CPLL1; /* addr: 0x00000164 */
	ca_uint32_t rsrvd90[3];
	GLOBAL_EPLL0_t EPLL0; /* addr: 0x00000168 */
	ca_uint32_t rsrvd91[3];
	GLOBAL_EPLL1_t EPLL1; /* addr: 0x0000016c */
	ca_uint32_t rsrvd92[3];
	GLOBAL_FPLL0_t FPLL0; /* addr: 0x00000170 */
	ca_uint32_t rsrvd93[3];
	GLOBAL_FPLL1_t FPLL1; /* addr: 0x00000174 */
	ca_uint32_t rsrvd94[3];
	GLOBAL_BOOT_VEC_0_t BOOT_VEC_0; /* addr: 0x00000178 */
	ca_uint32_t rsrvd95[3];
	GLOBAL_BOOT_VEC_4_t BOOT_VEC_4; /* addr: 0x0000017c */
	ca_uint32_t rsrvd96[3];
	GLOBAL_BOOT_VEC_8_t BOOT_VEC_8; /* addr: 0x00000180 */
	ca_uint32_t rsrvd97[3];
	GLOBAL_BOOT_VEC_C_t BOOT_VEC_C; /* addr: 0x00000184 */
	ca_uint32_t rsrvd98[3];
	GLOBAL_FUSE_CONTROL_t FUSE_CONTROL; /* addr: 0x00000188 */
	ca_uint32_t rsrvd99[3];
	GLOBAL_FUSE_RESULT_t FUSE_RESULT; /* addr: 0x0000018c */
	ca_uint32_t rsrvd100[3];
	GLOBAL_FUSE_VALUE_t FUSE_VALUE; /* addr: 0x00000190 */
	ca_uint32_t rsrvd101[3];
	GLOBAL_FUSE_PGM_TIMING_t FUSE_PGM_TIMING; /* addr: 0x00000194 */
	ca_uint32_t rsrvd102[3];
	GLOBAL_FUSE_READ_TIMING_t FUSE_READ_TIMING; /* addr: 0x00000198 */
	ca_uint32_t rsrvd103[3];
	GLOBAL_SATURN_COMM_t SATURN_COMM; /* addr: 0x0000019c */
	ca_uint32_t rsrvd104[3];
	GLOBAL_DSS_0_CNTL_t DSS_0_CNTL; /* addr: 0x000001a0 */
	ca_uint32_t rsrvd105[3];
	GLOBAL_DSS_0_STATUS_t DSS_0_STATUS; /* addr: 0x000001a4 */
	ca_uint32_t rsrvd106[3];
	GLOBAL_DEVICE_ASSIGN_ID1_t DEVICE_ASSIGN_ID1; /* addr: 0x000001a8 */
	ca_uint32_t rsrvd107[3];
	GLOBAL_DEVICE_ASSIGN_ID0_t DEVICE_ASSIGN_ID0; /* addr: 0x000001ac */
} APB2_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * CORTEX_TRACE
 */

/*
 * CAPSRAM
 */

#define CAPSRAM_TZCONTROL 0xf4322000
#define CAPSRAM_TZCONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SEGSECURE : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} CAPSRAM_TZCONTROL_t;
#endif /* !__ASSEMBLER__ */

#define CAPSRAM_INIT 0xf4322004
#define CAPSRAM_INIT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t INIT : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} CAPSRAM_INIT_t;
#endif /* !__ASSEMBLER__ */

#define CAPSRAM_INITRANGE 0xf4322008
#define CAPSRAM_INITRANGE_dft 0x0fff0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t MIN : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t MAX : 12; /* bits 27:16 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} CAPSRAM_INITRANGE_t;
#endif /* !__ASSEMBLER__ */

#define CAPSRAM_SRAMBAD0 0xf432200c
#define CAPSRAM_SRAMBAD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ADDR : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} CAPSRAM_SRAMBAD0_t;
#endif /* !__ASSEMBLER__ */

#define CAPSRAM_SRAMBAD1 0xf4322010
#define CAPSRAM_SRAMBAD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BURST : 2; /* bits 1:0 */
		ca_uint32_t SIZE : 3; /* bits 4:2 */
		ca_uint32_t PROT : 3; /* bits 7:5 */
		ca_uint32_t LEN : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t ID : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} CAPSRAM_SRAMBAD1_t;
#endif /* !__ASSEMBLER__ */

#define CAPSRAM_SRAMBAD2 0xf4322014
#define CAPSRAM_SRAMBAD2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VALID : 1; /* bits 0:0 */
		ca_uint32_t INST : 3; /* bits 3:1 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t VEC : 8; /* bits 15:8 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} CAPSRAM_SRAMBAD2_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CAPSRAM */
#ifndef __ASSEMBLER__
typedef struct {
	CAPSRAM_TZCONTROL_t TZCONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	CAPSRAM_INIT_t INIT; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	CAPSRAM_INITRANGE_t INITRANGE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	CAPSRAM_SRAMBAD0_t SRAMBAD0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	CAPSRAM_SRAMBAD1_t SRAMBAD1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	CAPSRAM_SRAMBAD2_t SRAMBAD2; /* addr: 0x00000014 */
} APB2_CAPSRAM_t;
#endif /* !__ASSEMBLER__ */

/*
 * CCI
 */

#define CCIMISC_CTL 0xf4323000
#define CCIMISC_CTL_dft 0x0001eaa0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t PERIPHBASE : 25; /* bits 24:0 */
		ca_uint32_t STRIPING_GRANULE : 3; /* bits 27:25 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} CCIMISC_CTL_t;
#endif /* !__ASSEMBLER__ */

#define CCIMISC_ADDRMAP 0xf4323004
#define CCIMISC_ADDRMAP_dft 0x00021aaa

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ADDRMAP0 : 2; /* bits 1:0 */
		ca_uint32_t ADDRMAP1 : 2; /* bits 3:2 */
		ca_uint32_t ADDRMAP2 : 2; /* bits 5:4 */
		ca_uint32_t ADDRMAP3 : 2; /* bits 7:6 */
		ca_uint32_t ADDRMAP4 : 2; /* bits 9:8 */
		ca_uint32_t ADDRMAP5 : 2; /* bits 11:10 */
		ca_uint32_t ADDRMAP6 : 2; /* bits 13:12 */
		ca_uint32_t ADDRMAP7 : 2; /* bits 15:14 */
		ca_uint32_t ADDRMAP8 : 2; /* bits 17:16 */
		ca_uint32_t ADDRMAP9 : 2; /* bits 19:18 */
		ca_uint32_t ADDRMAP10 : 2; /* bits 21:20 */
		ca_uint32_t ADDRMAP11 : 2; /* bits 23:22 */
		ca_uint32_t ADDRMAP12 : 2; /* bits 25:24 */
		ca_uint32_t ADDRMAP13 : 2; /* bits 27:26 */
		ca_uint32_t ADDRMAP14 : 2; /* bits 29:28 */
		ca_uint32_t ADDRMAP15 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} CCIMISC_ADDRMAP_t;
#endif /* !__ASSEMBLER__ */

#define CCIMISC_MASTERCTL 0xf4323008
#define CCIMISC_MASTERCTL_dft 0x00070000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BUFFERABLEOVERRIDE : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t BROADCASTCACHEMAINT : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t BARRIERTERMINATE : 3; /* bits 18:16 */
		ca_uint32_t rsrvd3 : 13;
	} bf;
	ca_uint32_t wrd;
} CCIMISC_MASTERCTL_t;
#endif /* !__ASSEMBLER__ */

#define CCIMISC_SLAVECTL 0xf432300c
#define CCIMISC_SLAVECTL_dft 0x00000010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ACCHANNELEN : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t QOSOVERRIDE : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 19;
	} bf;
	ca_uint32_t wrd;
} CCIMISC_SLAVECTL_t;
#endif /* !__ASSEMBLER__ */

#define CCIMISC_STATUS 0xf4323010
#define CCIMISC_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ACP_AXIID_ERROR : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} CCIMISC_STATUS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CCI */
#ifndef __ASSEMBLER__
typedef struct {
	CCIMISC_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	CCIMISC_ADDRMAP_t ADDRMAP; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	CCIMISC_MASTERCTL_t MASTERCTL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	CCIMISC_SLAVECTL_t SLAVECTL; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	CCIMISC_STATUS_t STATUS; /* addr: 0x00000010 */
} APB2_CCI_t;
#endif /* !__ASSEMBLER__ */

/*
 * FLASH
 */

#define FLASH_ID 0xf4324000
#define FLASH_ID_dft 0x00000101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flashRevID : 8; /* bits 7:0 */
		ca_uint32_t flashDevID : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} FLASH_ID_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_TIMEOUT 0xf4324004
#define FLASH_TIMEOUT_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t timeout_load : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_STATUS 0xf4324008
#define FLASH_STATUS_dft 0x06000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sState : 4; /* bits 3:0 */
		ca_uint32_t pState : 4; /* bits 7:4 */
		ca_uint32_t nState : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 13;
		ca_uint32_t pflash_rbIn_d : 1; /* bits 25:25 */
		ca_uint32_t nflash_rbIn_d : 1; /* bits 26:26 */
		ca_uint32_t rsrvd2 : 5;
	} bf;
	ca_uint32_t wrd;
} FLASH_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_TYPE 0xf432400c
#define FLASH_TYPE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 9;
		ca_uint32_t flashSize : 2; /* bits 10:9 */
		ca_uint32_t flashWidth : 1; /* bits 11:11 */
		ca_uint32_t flashType : 3; /* bits 14:12 */
		ca_uint32_t flashPin : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} FLASH_TYPE_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FLASH_ACCESS_START 0xf4324010
#define FLASH_FLASH_ACCESS_START_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashRegReq : 1; /* bits 0:0 */
		ca_uint32_t sflashRegReq : 1; /* bits 1:1 */
		ca_uint32_t nflashFifoReq : 1; /* bits 2:2 */
		ca_uint32_t sflashFifoReq : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t sflashRegCmd : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t nflashRegCmd : 2; /* bits 13:12 */
		ca_uint32_t rsrvd3 : 18;
	} bf;
	ca_uint32_t wrd;
} FLASH_FLASH_ACCESS_START_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FLASH_INTERRUPT 0xf4324014
#define FLASH_FLASH_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t regIrq : 1; /* bits 0:0 */
		ca_uint32_t fifoIrq : 1; /* bits 1:1 */
		ca_uint32_t f_addr_err : 1; /* bits 2:2 */
		ca_uint32_t eccIrq : 1; /* bits 3:3 */
		ca_uint32_t nfWdtIrq : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t bchGenIrq : 1; /* bits 6:6 */
		ca_uint32_t bchDecIrq : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} FLASH_FLASH_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FLASH_MASK 0xf4324018
#define FLASH_FLASH_MASK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flashRegIrqMask : 1; /* bits 0:0 */
		ca_uint32_t fifoIrqMask : 1; /* bits 1:1 */
		ca_uint32_t f_addr_IrqMask : 1; /* bits 2:2 */
		ca_uint32_t eccIrqMask : 1; /* bits 3:3 */
		ca_uint32_t nfWdtIrqMask : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t bchGenIrqMask : 1; /* bits 6:6 */
		ca_uint32_t bchDecIrqMask : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} FLASH_FLASH_MASK_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FIFO_CONTROL 0xf432401c
#define FLASH_FIFO_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t fifoCmd : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t fifoDbgSel : 4; /* bits 7:4 */
		ca_uint32_t fifoClear : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 15;
		ca_uint32_t fifoRDTH : 2; /* bits 25:24 */
		ca_uint32_t fifoWRTH : 2; /* bits 27:26 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} FLASH_FIFO_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FIFO_STATUS 0xf4324020
#define FLASH_FIFO_STATUS_dft 0x00000004

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t f_state : 2; /* bits 1:0 */
		ca_uint32_t f_empty : 1; /* bits 2:2 */
		ca_uint32_t f_full : 1; /* bits 3:3 */
		ca_uint32_t f_ptr_rd : 5; /* bits 8:4 */
		ca_uint32_t f_ptr_wr : 5; /* bits 13:9 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t f_addr_count : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} FLASH_FIFO_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FIFO_ADDRESS 0xf4324024
#define FLASH_FIFO_ADDRESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t f_AXADDR : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_FIFO_ADDRESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FIFO_MATCH_ADDRESS 0xf4324028
#define FLASH_FIFO_MATCH_ADDRESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t f_AXADDR_compare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_FIFO_MATCH_ADDRESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_FIFO_DATA 0xf432402c
#define FLASH_FIFO_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t f_ebuf_mem1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_FIFO_DATA_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_SF_ACCESS 0xf4324030
#define FLASH_SF_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sflashOpCode : 8; /* bits 7:0 */
		ca_uint32_t sflashAcCode : 4; /* bits 11:8 */
		ca_uint32_t sflashForceTerm : 1; /* bits 12:12 */
		ca_uint32_t sflashForceBurst : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sflashCnMode : 1; /* bits 15:15 */
		ca_uint32_t sflashCeAlt : 1; /* bits 16:16 */
		ca_uint32_t sflashHSRd : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t sflashMData : 1; /* bits 24:24 */
		ca_uint32_t sflashMAddr : 1; /* bits 25:25 */
		ca_uint32_t sflashMCmd : 1; /* bits 26:26 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t sflashDDR : 2; /* bits 29:28 */
		ca_uint32_t sflashMIO : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} FLASH_SF_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_SF_EXT_ACCESS 0xf4324034
#define FLASH_SF_EXT_ACCESS_dft 0x1fffff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sflashOpCode : 8; /* bits 7:0 */
		ca_uint32_t sflashDataCount : 13; /* bits 20:8 */
		ca_uint32_t sflashAddrCount : 3; /* bits 23:21 */
		ca_uint32_t sflashDummyCount : 5; /* bits 28:24 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t sflashDirRdCmdEn : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} FLASH_SF_EXT_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_SF_ADDRESS 0xf4324038
#define FLASH_SF_ADDRESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sflashRegAddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_SF_ADDRESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_SF_DATA 0xf432403c
#define FLASH_SF_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sflashRegWData : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_SF_DATA_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_SF_TIMING 0xf4324040
#define FLASH_SF_TIMING_dft 0x00373737

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sflashIdleTime : 8; /* bits 7:0 */
		ca_uint32_t sflashHoldTime : 8; /* bits 15:8 */
		ca_uint32_t sflashSetupTime : 8; /* bits 23:16 */
		ca_uint32_t sflashClkWidth : 3; /* bits 26:24 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} FLASH_SF_TIMING_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_PF_ACCESS 0xf4324050
#define FLASH_PF_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pflashExtAddr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 11;
		ca_uint32_t pflashCeAlt : 1; /* bits 16:16 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t pflashBzChk : 1; /* bits 20:20 */
		ca_uint32_t pflashBzPol : 1; /* bits 21:21 */
		ca_uint32_t pflashRdPol : 1; /* bits 22:22 */
		ca_uint32_t pflashWrPol : 1; /* bits 23:23 */
		ca_uint32_t rsrvd3 : 8;
	} bf;
	ca_uint32_t wrd;
} FLASH_PF_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_PF_TIMING 0xf4324054
#define FLASH_PF_TIMING_dft 0x000f0f07

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pflashIdleTime : 8; /* bits 7:0 */
		ca_uint32_t pflashHoldTime : 8; /* bits 15:8 */
		ca_uint32_t pflashSetupTime : 8; /* bits 23:16 */
		ca_uint32_t pflashClkWidth : 2; /* bits 25:24 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} FLASH_PF_TIMING_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ACCESS 0xf4324060
#define FLASH_NF_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashExtAddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t nflashRegWidth : 2; /* bits 11:10 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t nflashCeAlt : 1; /* bits 15:15 */
		ca_uint32_t autoReset : 1; /* bits 16:16 */
		ca_uint32_t rsrvd3 : 15;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_COUNT 0xf4324064
#define FLASH_NF_COUNT_dft 0xffffff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashRegCmdCount : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t nflashRegAddrCount : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t nflashRegDataCount : 14; /* bits 21:8 */
		ca_uint32_t nflashRegOobCount : 10; /* bits 31:22 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_COUNT_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_COMMAND 0xf4324068
#define FLASH_NF_COMMAND_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashRegCmd0 : 8; /* bits 7:0 */
		ca_uint32_t nflashRegCmd1 : 8; /* bits 15:8 */
		ca_uint32_t nflashRegCmd2 : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_COMMAND_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ADDRESS_1 0xf432406c
#define FLASH_NF_ADDRESS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashRegAddr0 : 8; /* bits 7:0 */
		ca_uint32_t nflashRegAddr1 : 8; /* bits 15:8 */
		ca_uint32_t nflashRegAddr2 : 8; /* bits 23:16 */
		ca_uint32_t nflashRegAddr3 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ADDRESS_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ADDRESS_2 0xf4324070
#define FLASH_NF_ADDRESS_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashRegAddr4 : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ADDRESS_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_DATA 0xf4324074
#define FLASH_NF_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashRegWData : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_DATA_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_TIMING 0xf4324078
#define FLASH_NF_TIMING_dft 0x00041703

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t nflashIdleTime : 8; /* bits 7:0 */
		ca_uint32_t nflashHoldTime : 8; /* bits 15:8 */
		ca_uint32_t nflashSetupTime : 8; /* bits 23:16 */
		ca_uint32_t nflashClkWidth : 3; /* bits 26:24 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_TIMING_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_STATUS 0xf432407c
#define FLASH_NF_ECC_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccStatus : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t eccErrBit : 4; /* bits 6:3 */
		ca_uint32_t eccErrByte : 9; /* bits 15:7 */
		ca_uint32_t eccErrWord : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 7;
		ca_uint32_t eccDone : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_CONTROL 0xf4324080
#define FLASH_NF_ECC_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t eccGenMode : 1; /* bits 1:1 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t eccCodeSel : 4; /* bits 7:4 */
		ca_uint32_t eccEn : 1; /* bits 8:8 */
		ca_uint32_t rsrvd3 : 23;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_OOB 0xf4324084
#define FLASH_NF_ECC_OOB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeOob : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_OOB_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN0 0xf4324088
#define FLASH_NF_ECC_GEN0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN1 0xf432408c
#define FLASH_NF_ECC_GEN1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN2 0xf4324090
#define FLASH_NF_ECC_GEN2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN3 0xf4324094
#define FLASH_NF_ECC_GEN3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN4 0xf4324098
#define FLASH_NF_ECC_GEN4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN5 0xf432409c
#define FLASH_NF_ECC_GEN5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN6 0xf43240a0
#define FLASH_NF_ECC_GEN6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN7 0xf43240a4
#define FLASH_NF_ECC_GEN7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN8 0xf43240a8
#define FLASH_NF_ECC_GEN8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN9 0xf43240ac
#define FLASH_NF_ECC_GEN9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN10 0xf43240b0
#define FLASH_NF_ECC_GEN10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN11 0xf43240b4
#define FLASH_NF_ECC_GEN11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN12 0xf43240b8
#define FLASH_NF_ECC_GEN12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN13 0xf43240bc
#define FLASH_NF_ECC_GEN13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN14 0xf43240c0
#define FLASH_NF_ECC_GEN14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_GEN15 0xf43240c4
#define FLASH_NF_ECC_GEN15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccCodeGen15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_GEN15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_ECC_RESET 0xf43240c8
#define FLASH_NF_ECC_RESET_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t eccClear : 1; /* bits 0:0 */
		ca_uint32_t fifoClear : 1; /* bits 1:1 */
		ca_uint32_t nflash_reset : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_ECC_RESET_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_CONTROL 0xf43240cc
#define FLASH_NF_BCH_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCompare : 1; /* bits 0:0 */
		ca_uint32_t bchOpcode : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchCodeSel : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t bchEn : 1; /* bits 8:8 */
		ca_uint32_t bchErrCap : 2; /* bits 10:9 */
		ca_uint32_t rsrvd3 : 5;
		ca_uint32_t bchTestCtrl : 4; /* bits 19:16 */
		ca_uint32_t rsrvd4 : 12;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_STATUS 0xf43240d0
#define FLASH_NF_BCH_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchDecStatus : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t bchErrNum : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 16;
		ca_uint32_t bchDecDone : 1; /* bits 30:30 */
		ca_uint32_t bchGenDone : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC01 0xf43240d4
#define FLASH_NF_BCH_ERROR_LOC01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc0 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc1 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC01_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC23 0xf43240d8
#define FLASH_NF_BCH_ERROR_LOC23_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc2 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc3 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC23_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC45 0xf43240dc
#define FLASH_NF_BCH_ERROR_LOC45_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc4 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc5 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC45_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC67 0xf43240e0
#define FLASH_NF_BCH_ERROR_LOC67_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc6 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc7 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC67_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC89 0xf43240e4
#define FLASH_NF_BCH_ERROR_LOC89_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc8 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc9 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC89_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC1011 0xf43240e8
#define FLASH_NF_BCH_ERROR_LOC1011_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc10 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc11 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC1011_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC1213 0xf43240ec
#define FLASH_NF_BCH_ERROR_LOC1213_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc12 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc13 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC1213_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC1415 0xf43240f0
#define FLASH_NF_BCH_ERROR_LOC1415_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc14 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc15 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC1415_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC1617 0xf43240f4
#define FLASH_NF_BCH_ERROR_LOC1617_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc16 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc17 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC1617_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC1819 0xf43240f8
#define FLASH_NF_BCH_ERROR_LOC1819_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc18 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc19 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC1819_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC2021 0xf43240fc
#define FLASH_NF_BCH_ERROR_LOC2021_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc20 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc21 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC2021_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC2223 0xf4324100
#define FLASH_NF_BCH_ERROR_LOC2223_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc22 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc23 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC2223_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC2425 0xf4324104
#define FLASH_NF_BCH_ERROR_LOC2425_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc24 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc25 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC2425_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC2627 0xf4324108
#define FLASH_NF_BCH_ERROR_LOC2627_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc26 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc27 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC2627_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC2829 0xf432410c
#define FLASH_NF_BCH_ERROR_LOC2829_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc28 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc29 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC2829_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC3031 0xf4324110
#define FLASH_NF_BCH_ERROR_LOC3031_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc30 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc31 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC3031_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC3233 0xf4324114
#define FLASH_NF_BCH_ERROR_LOC3233_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc32 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc33 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC3233_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC3435 0xf4324118
#define FLASH_NF_BCH_ERROR_LOC3435_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc34 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc35 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC3435_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC3637 0xf432411c
#define FLASH_NF_BCH_ERROR_LOC3637_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc36 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc37 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC3637_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_ERROR_LOC3839 0xf4324120
#define FLASH_NF_BCH_ERROR_LOC3839_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchErrLoc38 : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t bchErrLoc39 : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_ERROR_LOC3839_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB0 0xf4324124
#define FLASH_NF_BCH_OOB0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB1 0xf4324128
#define FLASH_NF_BCH_OOB1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB2 0xf432412c
#define FLASH_NF_BCH_OOB2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB3 0xf4324130
#define FLASH_NF_BCH_OOB3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB4 0xf4324134
#define FLASH_NF_BCH_OOB4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB5 0xf4324138
#define FLASH_NF_BCH_OOB5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB6 0xf432413c
#define FLASH_NF_BCH_OOB6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB7 0xf4324140
#define FLASH_NF_BCH_OOB7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB8 0xf4324144
#define FLASH_NF_BCH_OOB8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB9 0xf4324148
#define FLASH_NF_BCH_OOB9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB10 0xf432414c
#define FLASH_NF_BCH_OOB10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB11 0xf4324150
#define FLASH_NF_BCH_OOB11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB12 0xf4324154
#define FLASH_NF_BCH_OOB12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB13 0xf4324158
#define FLASH_NF_BCH_OOB13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB14 0xf432415c
#define FLASH_NF_BCH_OOB14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB15 0xf4324160
#define FLASH_NF_BCH_OOB15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB16 0xf4324164
#define FLASH_NF_BCH_OOB16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_OOB17 0xf4324168
#define FLASH_NF_BCH_OOB17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeOob17 : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_OOB17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_0 0xf432416c
#define FLASH_NF_BCH_GEN0_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_1 0xf4324170
#define FLASH_NF_BCH_GEN0_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_2 0xf4324174
#define FLASH_NF_BCH_GEN0_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_3 0xf4324178
#define FLASH_NF_BCH_GEN0_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_4 0xf432417c
#define FLASH_NF_BCH_GEN0_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_5 0xf4324180
#define FLASH_NF_BCH_GEN0_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_6 0xf4324184
#define FLASH_NF_BCH_GEN0_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_7 0xf4324188
#define FLASH_NF_BCH_GEN0_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_8 0xf432418c
#define FLASH_NF_BCH_GEN0_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_9 0xf4324190
#define FLASH_NF_BCH_GEN0_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_10 0xf4324194
#define FLASH_NF_BCH_GEN0_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_11 0xf4324198
#define FLASH_NF_BCH_GEN0_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_12 0xf432419c
#define FLASH_NF_BCH_GEN0_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_13 0xf43241a0
#define FLASH_NF_BCH_GEN0_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_14 0xf43241a4
#define FLASH_NF_BCH_GEN0_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_15 0xf43241a8
#define FLASH_NF_BCH_GEN0_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_16 0xf43241ac
#define FLASH_NF_BCH_GEN0_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN0_17 0xf43241b0
#define FLASH_NF_BCH_GEN0_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen0_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN0_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_0 0xf43241b4
#define FLASH_NF_BCH_GEN1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_1 0xf43241b8
#define FLASH_NF_BCH_GEN1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_2 0xf43241bc
#define FLASH_NF_BCH_GEN1_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_3 0xf43241c0
#define FLASH_NF_BCH_GEN1_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_4 0xf43241c4
#define FLASH_NF_BCH_GEN1_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_5 0xf43241c8
#define FLASH_NF_BCH_GEN1_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_6 0xf43241cc
#define FLASH_NF_BCH_GEN1_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_7 0xf43241d0
#define FLASH_NF_BCH_GEN1_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_8 0xf43241d4
#define FLASH_NF_BCH_GEN1_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_9 0xf43241d8
#define FLASH_NF_BCH_GEN1_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_10 0xf43241dc
#define FLASH_NF_BCH_GEN1_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_11 0xf43241e0
#define FLASH_NF_BCH_GEN1_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_12 0xf43241e4
#define FLASH_NF_BCH_GEN1_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_13 0xf43241e8
#define FLASH_NF_BCH_GEN1_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_14 0xf43241ec
#define FLASH_NF_BCH_GEN1_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_15 0xf43241f0
#define FLASH_NF_BCH_GEN1_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_16 0xf43241f4
#define FLASH_NF_BCH_GEN1_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN1_17 0xf43241f8
#define FLASH_NF_BCH_GEN1_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen1_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN1_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_0 0xf43241fc
#define FLASH_NF_BCH_GEN2_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_1 0xf4324200
#define FLASH_NF_BCH_GEN2_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_2 0xf4324204
#define FLASH_NF_BCH_GEN2_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_3 0xf4324208
#define FLASH_NF_BCH_GEN2_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_4 0xf432420c
#define FLASH_NF_BCH_GEN2_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_5 0xf4324210
#define FLASH_NF_BCH_GEN2_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_6 0xf4324214
#define FLASH_NF_BCH_GEN2_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_7 0xf4324218
#define FLASH_NF_BCH_GEN2_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_8 0xf432421c
#define FLASH_NF_BCH_GEN2_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_9 0xf4324220
#define FLASH_NF_BCH_GEN2_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_10 0xf4324224
#define FLASH_NF_BCH_GEN2_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_11 0xf4324228
#define FLASH_NF_BCH_GEN2_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_12 0xf432422c
#define FLASH_NF_BCH_GEN2_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_13 0xf4324230
#define FLASH_NF_BCH_GEN2_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_14 0xf4324234
#define FLASH_NF_BCH_GEN2_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_15 0xf4324238
#define FLASH_NF_BCH_GEN2_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_16 0xf432423c
#define FLASH_NF_BCH_GEN2_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN2_17 0xf4324240
#define FLASH_NF_BCH_GEN2_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen2_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN2_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_0 0xf4324244
#define FLASH_NF_BCH_GEN3_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_1 0xf4324248
#define FLASH_NF_BCH_GEN3_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_2 0xf432424c
#define FLASH_NF_BCH_GEN3_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_3 0xf4324250
#define FLASH_NF_BCH_GEN3_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_4 0xf4324254
#define FLASH_NF_BCH_GEN3_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_5 0xf4324258
#define FLASH_NF_BCH_GEN3_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_6 0xf432425c
#define FLASH_NF_BCH_GEN3_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_7 0xf4324260
#define FLASH_NF_BCH_GEN3_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_8 0xf4324264
#define FLASH_NF_BCH_GEN3_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_9 0xf4324268
#define FLASH_NF_BCH_GEN3_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_10 0xf432426c
#define FLASH_NF_BCH_GEN3_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_11 0xf4324270
#define FLASH_NF_BCH_GEN3_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_12 0xf4324274
#define FLASH_NF_BCH_GEN3_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_13 0xf4324278
#define FLASH_NF_BCH_GEN3_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_14 0xf432427c
#define FLASH_NF_BCH_GEN3_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_15 0xf4324280
#define FLASH_NF_BCH_GEN3_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_16 0xf4324284
#define FLASH_NF_BCH_GEN3_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN3_17 0xf4324288
#define FLASH_NF_BCH_GEN3_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen3_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN3_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_0 0xf432428c
#define FLASH_NF_BCH_GEN4_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_1 0xf4324290
#define FLASH_NF_BCH_GEN4_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_2 0xf4324294
#define FLASH_NF_BCH_GEN4_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_3 0xf4324298
#define FLASH_NF_BCH_GEN4_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_4 0xf432429c
#define FLASH_NF_BCH_GEN4_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_5 0xf43242a0
#define FLASH_NF_BCH_GEN4_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_6 0xf43242a4
#define FLASH_NF_BCH_GEN4_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_7 0xf43242a8
#define FLASH_NF_BCH_GEN4_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_8 0xf43242ac
#define FLASH_NF_BCH_GEN4_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_9 0xf43242b0
#define FLASH_NF_BCH_GEN4_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_10 0xf43242b4
#define FLASH_NF_BCH_GEN4_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_11 0xf43242b8
#define FLASH_NF_BCH_GEN4_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_12 0xf43242bc
#define FLASH_NF_BCH_GEN4_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_13 0xf43242c0
#define FLASH_NF_BCH_GEN4_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_14 0xf43242c4
#define FLASH_NF_BCH_GEN4_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_15 0xf43242c8
#define FLASH_NF_BCH_GEN4_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_16 0xf43242cc
#define FLASH_NF_BCH_GEN4_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN4_17 0xf43242d0
#define FLASH_NF_BCH_GEN4_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen4_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN4_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_0 0xf43242d4
#define FLASH_NF_BCH_GEN5_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_1 0xf43242d8
#define FLASH_NF_BCH_GEN5_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_2 0xf43242dc
#define FLASH_NF_BCH_GEN5_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_3 0xf43242e0
#define FLASH_NF_BCH_GEN5_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_4 0xf43242e4
#define FLASH_NF_BCH_GEN5_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_5 0xf43242e8
#define FLASH_NF_BCH_GEN5_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_6 0xf43242ec
#define FLASH_NF_BCH_GEN5_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_7 0xf43242f0
#define FLASH_NF_BCH_GEN5_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_8 0xf43242f4
#define FLASH_NF_BCH_GEN5_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_9 0xf43242f8
#define FLASH_NF_BCH_GEN5_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_10 0xf43242fc
#define FLASH_NF_BCH_GEN5_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_11 0xf4324300
#define FLASH_NF_BCH_GEN5_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_12 0xf4324304
#define FLASH_NF_BCH_GEN5_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_13 0xf4324308
#define FLASH_NF_BCH_GEN5_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_14 0xf432430c
#define FLASH_NF_BCH_GEN5_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_15 0xf4324310
#define FLASH_NF_BCH_GEN5_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_16 0xf4324314
#define FLASH_NF_BCH_GEN5_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN5_17 0xf4324318
#define FLASH_NF_BCH_GEN5_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen5_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN5_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_0 0xf432431c
#define FLASH_NF_BCH_GEN6_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_1 0xf4324320
#define FLASH_NF_BCH_GEN6_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_2 0xf4324324
#define FLASH_NF_BCH_GEN6_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_3 0xf4324328
#define FLASH_NF_BCH_GEN6_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_4 0xf432432c
#define FLASH_NF_BCH_GEN6_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_5 0xf4324330
#define FLASH_NF_BCH_GEN6_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_6 0xf4324334
#define FLASH_NF_BCH_GEN6_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_7 0xf4324338
#define FLASH_NF_BCH_GEN6_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_8 0xf432433c
#define FLASH_NF_BCH_GEN6_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_9 0xf4324340
#define FLASH_NF_BCH_GEN6_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_10 0xf4324344
#define FLASH_NF_BCH_GEN6_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_11 0xf4324348
#define FLASH_NF_BCH_GEN6_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_12 0xf432434c
#define FLASH_NF_BCH_GEN6_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_13 0xf4324350
#define FLASH_NF_BCH_GEN6_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_14 0xf4324354
#define FLASH_NF_BCH_GEN6_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_15 0xf4324358
#define FLASH_NF_BCH_GEN6_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_16 0xf432435c
#define FLASH_NF_BCH_GEN6_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN6_17 0xf4324360
#define FLASH_NF_BCH_GEN6_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen6_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN6_17_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_0 0xf4324364
#define FLASH_NF_BCH_GEN7_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_0_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_1 0xf4324368
#define FLASH_NF_BCH_GEN7_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_1_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_2 0xf432436c
#define FLASH_NF_BCH_GEN7_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_2_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_3 0xf4324370
#define FLASH_NF_BCH_GEN7_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_3 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_3_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_4 0xf4324374
#define FLASH_NF_BCH_GEN7_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_4 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_4_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_5 0xf4324378
#define FLASH_NF_BCH_GEN7_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_5 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_5_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_6 0xf432437c
#define FLASH_NF_BCH_GEN7_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_6 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_6_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_7 0xf4324380
#define FLASH_NF_BCH_GEN7_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_7 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_7_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_8 0xf4324384
#define FLASH_NF_BCH_GEN7_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_8 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_8_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_9 0xf4324388
#define FLASH_NF_BCH_GEN7_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_9 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_9_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_10 0xf432438c
#define FLASH_NF_BCH_GEN7_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_10 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_10_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_11 0xf4324390
#define FLASH_NF_BCH_GEN7_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_11 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_11_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_12 0xf4324394
#define FLASH_NF_BCH_GEN7_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_12 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_12_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_13 0xf4324398
#define FLASH_NF_BCH_GEN7_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_13 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_13_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_14 0xf432439c
#define FLASH_NF_BCH_GEN7_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_14 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_14_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_15 0xf43243a0
#define FLASH_NF_BCH_GEN7_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_15 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_15_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_16 0xf43243a4
#define FLASH_NF_BCH_GEN7_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_16 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_16_t;
#endif /* !__ASSEMBLER__ */

#define FLASH_NF_BCH_GEN7_17 0xf43243a8
#define FLASH_NF_BCH_GEN7_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bchCodeGen7_17 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} FLASH_NF_BCH_GEN7_17_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* FLASH */
#ifndef __ASSEMBLER__
typedef struct {
	FLASH_ID_t ID; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	FLASH_TIMEOUT_t TIMEOUT; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	FLASH_STATUS_t STATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	FLASH_TYPE_t TYPE; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	FLASH_FLASH_ACCESS_START_t FLASH_ACCESS_START; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	FLASH_FLASH_INTERRUPT_t FLASH_INTERRUPT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	FLASH_FLASH_MASK_t FLASH_MASK; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	FLASH_FIFO_CONTROL_t FIFO_CONTROL; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	FLASH_FIFO_STATUS_t FIFO_STATUS; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	FLASH_FIFO_ADDRESS_t FIFO_ADDRESS; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	FLASH_FIFO_MATCH_ADDRESS_t FIFO_MATCH_ADDRESS; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	FLASH_FIFO_DATA_t FIFO_DATA; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	FLASH_SF_ACCESS_t SF_ACCESS; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	FLASH_SF_EXT_ACCESS_t SF_EXT_ACCESS; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	FLASH_SF_ADDRESS_t SF_ADDRESS; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	FLASH_SF_DATA_t SF_DATA; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	FLASH_SF_TIMING_t SF_TIMING; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[15];
	FLASH_PF_ACCESS_t PF_ACCESS; /* addr: 0x00000050 */
	ca_uint32_t rsrvd18[3];
	FLASH_PF_TIMING_t PF_TIMING; /* addr: 0x00000054 */
	ca_uint32_t rsrvd19[11];
	FLASH_NF_ACCESS_t NF_ACCESS; /* addr: 0x00000060 */
	ca_uint32_t rsrvd20[3];
	FLASH_NF_COUNT_t NF_COUNT; /* addr: 0x00000064 */
	ca_uint32_t rsrvd21[3];
	FLASH_NF_COMMAND_t NF_COMMAND; /* addr: 0x00000068 */
	ca_uint32_t rsrvd22[3];
	FLASH_NF_ADDRESS_1_t NF_ADDRESS_1; /* addr: 0x0000006c */
	ca_uint32_t rsrvd23[3];
	FLASH_NF_ADDRESS_2_t NF_ADDRESS_2; /* addr: 0x00000070 */
	ca_uint32_t rsrvd24[3];
	FLASH_NF_DATA_t NF_DATA; /* addr: 0x00000074 */
	ca_uint32_t rsrvd25[3];
	FLASH_NF_TIMING_t NF_TIMING; /* addr: 0x00000078 */
	ca_uint32_t rsrvd26[3];
	FLASH_NF_ECC_STATUS_t NF_ECC_STATUS; /* addr: 0x0000007c */
	ca_uint32_t rsrvd27[3];
	FLASH_NF_ECC_CONTROL_t NF_ECC_CONTROL; /* addr: 0x00000080 */
	ca_uint32_t rsrvd28[3];
	FLASH_NF_ECC_OOB_t NF_ECC_OOB; /* addr: 0x00000084 */
	ca_uint32_t rsrvd29[3];
	FLASH_NF_ECC_GEN0_t NF_ECC_GEN0; /* addr: 0x00000088 */
	ca_uint32_t rsrvd30[3];
	FLASH_NF_ECC_GEN1_t NF_ECC_GEN1; /* addr: 0x0000008c */
	ca_uint32_t rsrvd31[3];
	FLASH_NF_ECC_GEN2_t NF_ECC_GEN2; /* addr: 0x00000090 */
	ca_uint32_t rsrvd32[3];
	FLASH_NF_ECC_GEN3_t NF_ECC_GEN3; /* addr: 0x00000094 */
	ca_uint32_t rsrvd33[3];
	FLASH_NF_ECC_GEN4_t NF_ECC_GEN4; /* addr: 0x00000098 */
	ca_uint32_t rsrvd34[3];
	FLASH_NF_ECC_GEN5_t NF_ECC_GEN5; /* addr: 0x0000009c */
	ca_uint32_t rsrvd35[3];
	FLASH_NF_ECC_GEN6_t NF_ECC_GEN6; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd36[3];
	FLASH_NF_ECC_GEN7_t NF_ECC_GEN7; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd37[3];
	FLASH_NF_ECC_GEN8_t NF_ECC_GEN8; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd38[3];
	FLASH_NF_ECC_GEN9_t NF_ECC_GEN9; /* addr: 0x000000ac */
	ca_uint32_t rsrvd39[3];
	FLASH_NF_ECC_GEN10_t NF_ECC_GEN10; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd40[3];
	FLASH_NF_ECC_GEN11_t NF_ECC_GEN11; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd41[3];
	FLASH_NF_ECC_GEN12_t NF_ECC_GEN12; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd42[3];
	FLASH_NF_ECC_GEN13_t NF_ECC_GEN13; /* addr: 0x000000bc */
	ca_uint32_t rsrvd43[3];
	FLASH_NF_ECC_GEN14_t NF_ECC_GEN14; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd44[3];
	FLASH_NF_ECC_GEN15_t NF_ECC_GEN15; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd45[3];
	FLASH_NF_ECC_RESET_t NF_ECC_RESET; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd46[3];
	FLASH_NF_BCH_CONTROL_t NF_BCH_CONTROL; /* addr: 0x000000cc */
	ca_uint32_t rsrvd47[3];
	FLASH_NF_BCH_STATUS_t NF_BCH_STATUS; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd48[3];
	FLASH_NF_BCH_ERROR_LOC01_t NF_BCH_ERROR_LOC01; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd49[3];
	FLASH_NF_BCH_ERROR_LOC23_t NF_BCH_ERROR_LOC23; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd50[3];
	FLASH_NF_BCH_ERROR_LOC45_t NF_BCH_ERROR_LOC45; /* addr: 0x000000dc */
	ca_uint32_t rsrvd51[3];
	FLASH_NF_BCH_ERROR_LOC67_t NF_BCH_ERROR_LOC67; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd52[3];
	FLASH_NF_BCH_ERROR_LOC89_t NF_BCH_ERROR_LOC89; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd53[3];
	FLASH_NF_BCH_ERROR_LOC1011_t NF_BCH_ERROR_LOC1011; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd54[3];
	FLASH_NF_BCH_ERROR_LOC1213_t NF_BCH_ERROR_LOC1213; /* addr: 0x000000ec */
	ca_uint32_t rsrvd55[3];
	FLASH_NF_BCH_ERROR_LOC1415_t NF_BCH_ERROR_LOC1415; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd56[3];
	FLASH_NF_BCH_ERROR_LOC1617_t NF_BCH_ERROR_LOC1617; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd57[3];
	FLASH_NF_BCH_ERROR_LOC1819_t NF_BCH_ERROR_LOC1819; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd58[3];
	FLASH_NF_BCH_ERROR_LOC2021_t NF_BCH_ERROR_LOC2021; /* addr: 0x000000fc */
	ca_uint32_t rsrvd59[3];
	FLASH_NF_BCH_ERROR_LOC2223_t NF_BCH_ERROR_LOC2223; /* addr: 0x00000100 */
	ca_uint32_t rsrvd60[3];
	FLASH_NF_BCH_ERROR_LOC2425_t NF_BCH_ERROR_LOC2425; /* addr: 0x00000104 */
	ca_uint32_t rsrvd61[3];
	FLASH_NF_BCH_ERROR_LOC2627_t NF_BCH_ERROR_LOC2627; /* addr: 0x00000108 */
	ca_uint32_t rsrvd62[3];
	FLASH_NF_BCH_ERROR_LOC2829_t NF_BCH_ERROR_LOC2829; /* addr: 0x0000010c */
	ca_uint32_t rsrvd63[3];
	FLASH_NF_BCH_ERROR_LOC3031_t NF_BCH_ERROR_LOC3031; /* addr: 0x00000110 */
	ca_uint32_t rsrvd64[3];
	FLASH_NF_BCH_ERROR_LOC3233_t NF_BCH_ERROR_LOC3233; /* addr: 0x00000114 */
	ca_uint32_t rsrvd65[3];
	FLASH_NF_BCH_ERROR_LOC3435_t NF_BCH_ERROR_LOC3435; /* addr: 0x00000118 */
	ca_uint32_t rsrvd66[3];
	FLASH_NF_BCH_ERROR_LOC3637_t NF_BCH_ERROR_LOC3637; /* addr: 0x0000011c */
	ca_uint32_t rsrvd67[3];
	FLASH_NF_BCH_ERROR_LOC3839_t NF_BCH_ERROR_LOC3839; /* addr: 0x00000120 */
	ca_uint32_t rsrvd68[3];
	FLASH_NF_BCH_OOB0_t NF_BCH_OOB0; /* addr: 0x00000124 */
	ca_uint32_t rsrvd69[3];
	FLASH_NF_BCH_OOB1_t NF_BCH_OOB1; /* addr: 0x00000128 */
	ca_uint32_t rsrvd70[3];
	FLASH_NF_BCH_OOB2_t NF_BCH_OOB2; /* addr: 0x0000012c */
	ca_uint32_t rsrvd71[3];
	FLASH_NF_BCH_OOB3_t NF_BCH_OOB3; /* addr: 0x00000130 */
	ca_uint32_t rsrvd72[3];
	FLASH_NF_BCH_OOB4_t NF_BCH_OOB4; /* addr: 0x00000134 */
	ca_uint32_t rsrvd73[3];
	FLASH_NF_BCH_OOB5_t NF_BCH_OOB5; /* addr: 0x00000138 */
	ca_uint32_t rsrvd74[3];
	FLASH_NF_BCH_OOB6_t NF_BCH_OOB6; /* addr: 0x0000013c */
	ca_uint32_t rsrvd75[3];
	FLASH_NF_BCH_OOB7_t NF_BCH_OOB7; /* addr: 0x00000140 */
	ca_uint32_t rsrvd76[3];
	FLASH_NF_BCH_OOB8_t NF_BCH_OOB8; /* addr: 0x00000144 */
	ca_uint32_t rsrvd77[3];
	FLASH_NF_BCH_OOB9_t NF_BCH_OOB9; /* addr: 0x00000148 */
	ca_uint32_t rsrvd78[3];
	FLASH_NF_BCH_OOB10_t NF_BCH_OOB10; /* addr: 0x0000014c */
	ca_uint32_t rsrvd79[3];
	FLASH_NF_BCH_OOB11_t NF_BCH_OOB11; /* addr: 0x00000150 */
	ca_uint32_t rsrvd80[3];
	FLASH_NF_BCH_OOB12_t NF_BCH_OOB12; /* addr: 0x00000154 */
	ca_uint32_t rsrvd81[3];
	FLASH_NF_BCH_OOB13_t NF_BCH_OOB13; /* addr: 0x00000158 */
	ca_uint32_t rsrvd82[3];
	FLASH_NF_BCH_OOB14_t NF_BCH_OOB14; /* addr: 0x0000015c */
	ca_uint32_t rsrvd83[3];
	FLASH_NF_BCH_OOB15_t NF_BCH_OOB15; /* addr: 0x00000160 */
	ca_uint32_t rsrvd84[3];
	FLASH_NF_BCH_OOB16_t NF_BCH_OOB16; /* addr: 0x00000164 */
	ca_uint32_t rsrvd85[3];
	FLASH_NF_BCH_OOB17_t NF_BCH_OOB17; /* addr: 0x00000168 */
	ca_uint32_t rsrvd86[3];
	FLASH_NF_BCH_GEN0_0_t NF_BCH_GEN0_0; /* addr: 0x0000016c */
	ca_uint32_t rsrvd87[3];
	FLASH_NF_BCH_GEN0_1_t NF_BCH_GEN0_1; /* addr: 0x00000170 */
	ca_uint32_t rsrvd88[3];
	FLASH_NF_BCH_GEN0_2_t NF_BCH_GEN0_2; /* addr: 0x00000174 */
	ca_uint32_t rsrvd89[3];
	FLASH_NF_BCH_GEN0_3_t NF_BCH_GEN0_3; /* addr: 0x00000178 */
	ca_uint32_t rsrvd90[3];
	FLASH_NF_BCH_GEN0_4_t NF_BCH_GEN0_4; /* addr: 0x0000017c */
	ca_uint32_t rsrvd91[3];
	FLASH_NF_BCH_GEN0_5_t NF_BCH_GEN0_5; /* addr: 0x00000180 */
	ca_uint32_t rsrvd92[3];
	FLASH_NF_BCH_GEN0_6_t NF_BCH_GEN0_6; /* addr: 0x00000184 */
	ca_uint32_t rsrvd93[3];
	FLASH_NF_BCH_GEN0_7_t NF_BCH_GEN0_7; /* addr: 0x00000188 */
	ca_uint32_t rsrvd94[3];
	FLASH_NF_BCH_GEN0_8_t NF_BCH_GEN0_8; /* addr: 0x0000018c */
	ca_uint32_t rsrvd95[3];
	FLASH_NF_BCH_GEN0_9_t NF_BCH_GEN0_9; /* addr: 0x00000190 */
	ca_uint32_t rsrvd96[3];
	FLASH_NF_BCH_GEN0_10_t NF_BCH_GEN0_10; /* addr: 0x00000194 */
	ca_uint32_t rsrvd97[3];
	FLASH_NF_BCH_GEN0_11_t NF_BCH_GEN0_11; /* addr: 0x00000198 */
	ca_uint32_t rsrvd98[3];
	FLASH_NF_BCH_GEN0_12_t NF_BCH_GEN0_12; /* addr: 0x0000019c */
	ca_uint32_t rsrvd99[3];
	FLASH_NF_BCH_GEN0_13_t NF_BCH_GEN0_13; /* addr: 0x000001a0 */
	ca_uint32_t rsrvd100[3];
	FLASH_NF_BCH_GEN0_14_t NF_BCH_GEN0_14; /* addr: 0x000001a4 */
	ca_uint32_t rsrvd101[3];
	FLASH_NF_BCH_GEN0_15_t NF_BCH_GEN0_15; /* addr: 0x000001a8 */
	ca_uint32_t rsrvd102[3];
	FLASH_NF_BCH_GEN0_16_t NF_BCH_GEN0_16; /* addr: 0x000001ac */
	ca_uint32_t rsrvd103[3];
	FLASH_NF_BCH_GEN0_17_t NF_BCH_GEN0_17; /* addr: 0x000001b0 */
	ca_uint32_t rsrvd104[3];
	FLASH_NF_BCH_GEN1_0_t NF_BCH_GEN1_0; /* addr: 0x000001b4 */
	ca_uint32_t rsrvd105[3];
	FLASH_NF_BCH_GEN1_1_t NF_BCH_GEN1_1; /* addr: 0x000001b8 */
	ca_uint32_t rsrvd106[3];
	FLASH_NF_BCH_GEN1_2_t NF_BCH_GEN1_2; /* addr: 0x000001bc */
	ca_uint32_t rsrvd107[3];
	FLASH_NF_BCH_GEN1_3_t NF_BCH_GEN1_3; /* addr: 0x000001c0 */
	ca_uint32_t rsrvd108[3];
	FLASH_NF_BCH_GEN1_4_t NF_BCH_GEN1_4; /* addr: 0x000001c4 */
	ca_uint32_t rsrvd109[3];
	FLASH_NF_BCH_GEN1_5_t NF_BCH_GEN1_5; /* addr: 0x000001c8 */
	ca_uint32_t rsrvd110[3];
	FLASH_NF_BCH_GEN1_6_t NF_BCH_GEN1_6; /* addr: 0x000001cc */
	ca_uint32_t rsrvd111[3];
	FLASH_NF_BCH_GEN1_7_t NF_BCH_GEN1_7; /* addr: 0x000001d0 */
	ca_uint32_t rsrvd112[3];
	FLASH_NF_BCH_GEN1_8_t NF_BCH_GEN1_8; /* addr: 0x000001d4 */
	ca_uint32_t rsrvd113[3];
	FLASH_NF_BCH_GEN1_9_t NF_BCH_GEN1_9; /* addr: 0x000001d8 */
	ca_uint32_t rsrvd114[3];
	FLASH_NF_BCH_GEN1_10_t NF_BCH_GEN1_10; /* addr: 0x000001dc */
	ca_uint32_t rsrvd115[3];
	FLASH_NF_BCH_GEN1_11_t NF_BCH_GEN1_11; /* addr: 0x000001e0 */
	ca_uint32_t rsrvd116[3];
	FLASH_NF_BCH_GEN1_12_t NF_BCH_GEN1_12; /* addr: 0x000001e4 */
	ca_uint32_t rsrvd117[3];
	FLASH_NF_BCH_GEN1_13_t NF_BCH_GEN1_13; /* addr: 0x000001e8 */
	ca_uint32_t rsrvd118[3];
	FLASH_NF_BCH_GEN1_14_t NF_BCH_GEN1_14; /* addr: 0x000001ec */
	ca_uint32_t rsrvd119[3];
	FLASH_NF_BCH_GEN1_15_t NF_BCH_GEN1_15; /* addr: 0x000001f0 */
	ca_uint32_t rsrvd120[3];
	FLASH_NF_BCH_GEN1_16_t NF_BCH_GEN1_16; /* addr: 0x000001f4 */
	ca_uint32_t rsrvd121[3];
	FLASH_NF_BCH_GEN1_17_t NF_BCH_GEN1_17; /* addr: 0x000001f8 */
	ca_uint32_t rsrvd122[3];
	FLASH_NF_BCH_GEN2_0_t NF_BCH_GEN2_0; /* addr: 0x000001fc */
	ca_uint32_t rsrvd123[3];
	FLASH_NF_BCH_GEN2_1_t NF_BCH_GEN2_1; /* addr: 0x00000200 */
	ca_uint32_t rsrvd124[3];
	FLASH_NF_BCH_GEN2_2_t NF_BCH_GEN2_2; /* addr: 0x00000204 */
	ca_uint32_t rsrvd125[3];
	FLASH_NF_BCH_GEN2_3_t NF_BCH_GEN2_3; /* addr: 0x00000208 */
	ca_uint32_t rsrvd126[3];
	FLASH_NF_BCH_GEN2_4_t NF_BCH_GEN2_4; /* addr: 0x0000020c */
	ca_uint32_t rsrvd127[3];
	FLASH_NF_BCH_GEN2_5_t NF_BCH_GEN2_5; /* addr: 0x00000210 */
	ca_uint32_t rsrvd128[3];
	FLASH_NF_BCH_GEN2_6_t NF_BCH_GEN2_6; /* addr: 0x00000214 */
	ca_uint32_t rsrvd129[3];
	FLASH_NF_BCH_GEN2_7_t NF_BCH_GEN2_7; /* addr: 0x00000218 */
	ca_uint32_t rsrvd130[3];
	FLASH_NF_BCH_GEN2_8_t NF_BCH_GEN2_8; /* addr: 0x0000021c */
	ca_uint32_t rsrvd131[3];
	FLASH_NF_BCH_GEN2_9_t NF_BCH_GEN2_9; /* addr: 0x00000220 */
	ca_uint32_t rsrvd132[3];
	FLASH_NF_BCH_GEN2_10_t NF_BCH_GEN2_10; /* addr: 0x00000224 */
	ca_uint32_t rsrvd133[3];
	FLASH_NF_BCH_GEN2_11_t NF_BCH_GEN2_11; /* addr: 0x00000228 */
	ca_uint32_t rsrvd134[3];
	FLASH_NF_BCH_GEN2_12_t NF_BCH_GEN2_12; /* addr: 0x0000022c */
	ca_uint32_t rsrvd135[3];
	FLASH_NF_BCH_GEN2_13_t NF_BCH_GEN2_13; /* addr: 0x00000230 */
	ca_uint32_t rsrvd136[3];
	FLASH_NF_BCH_GEN2_14_t NF_BCH_GEN2_14; /* addr: 0x00000234 */
	ca_uint32_t rsrvd137[3];
	FLASH_NF_BCH_GEN2_15_t NF_BCH_GEN2_15; /* addr: 0x00000238 */
	ca_uint32_t rsrvd138[3];
	FLASH_NF_BCH_GEN2_16_t NF_BCH_GEN2_16; /* addr: 0x0000023c */
	ca_uint32_t rsrvd139[3];
	FLASH_NF_BCH_GEN2_17_t NF_BCH_GEN2_17; /* addr: 0x00000240 */
	ca_uint32_t rsrvd140[3];
	FLASH_NF_BCH_GEN3_0_t NF_BCH_GEN3_0; /* addr: 0x00000244 */
	ca_uint32_t rsrvd141[3];
	FLASH_NF_BCH_GEN3_1_t NF_BCH_GEN3_1; /* addr: 0x00000248 */
	ca_uint32_t rsrvd142[3];
	FLASH_NF_BCH_GEN3_2_t NF_BCH_GEN3_2; /* addr: 0x0000024c */
	ca_uint32_t rsrvd143[3];
	FLASH_NF_BCH_GEN3_3_t NF_BCH_GEN3_3; /* addr: 0x00000250 */
	ca_uint32_t rsrvd144[3];
	FLASH_NF_BCH_GEN3_4_t NF_BCH_GEN3_4; /* addr: 0x00000254 */
	ca_uint32_t rsrvd145[3];
	FLASH_NF_BCH_GEN3_5_t NF_BCH_GEN3_5; /* addr: 0x00000258 */
	ca_uint32_t rsrvd146[3];
	FLASH_NF_BCH_GEN3_6_t NF_BCH_GEN3_6; /* addr: 0x0000025c */
	ca_uint32_t rsrvd147[3];
	FLASH_NF_BCH_GEN3_7_t NF_BCH_GEN3_7; /* addr: 0x00000260 */
	ca_uint32_t rsrvd148[3];
	FLASH_NF_BCH_GEN3_8_t NF_BCH_GEN3_8; /* addr: 0x00000264 */
	ca_uint32_t rsrvd149[3];
	FLASH_NF_BCH_GEN3_9_t NF_BCH_GEN3_9; /* addr: 0x00000268 */
	ca_uint32_t rsrvd150[3];
	FLASH_NF_BCH_GEN3_10_t NF_BCH_GEN3_10; /* addr: 0x0000026c */
	ca_uint32_t rsrvd151[3];
	FLASH_NF_BCH_GEN3_11_t NF_BCH_GEN3_11; /* addr: 0x00000270 */
	ca_uint32_t rsrvd152[3];
	FLASH_NF_BCH_GEN3_12_t NF_BCH_GEN3_12; /* addr: 0x00000274 */
	ca_uint32_t rsrvd153[3];
	FLASH_NF_BCH_GEN3_13_t NF_BCH_GEN3_13; /* addr: 0x00000278 */
	ca_uint32_t rsrvd154[3];
	FLASH_NF_BCH_GEN3_14_t NF_BCH_GEN3_14; /* addr: 0x0000027c */
	ca_uint32_t rsrvd155[3];
	FLASH_NF_BCH_GEN3_15_t NF_BCH_GEN3_15; /* addr: 0x00000280 */
	ca_uint32_t rsrvd156[3];
	FLASH_NF_BCH_GEN3_16_t NF_BCH_GEN3_16; /* addr: 0x00000284 */
	ca_uint32_t rsrvd157[3];
	FLASH_NF_BCH_GEN3_17_t NF_BCH_GEN3_17; /* addr: 0x00000288 */
	ca_uint32_t rsrvd158[3];
	FLASH_NF_BCH_GEN4_0_t NF_BCH_GEN4_0; /* addr: 0x0000028c */
	ca_uint32_t rsrvd159[3];
	FLASH_NF_BCH_GEN4_1_t NF_BCH_GEN4_1; /* addr: 0x00000290 */
	ca_uint32_t rsrvd160[3];
	FLASH_NF_BCH_GEN4_2_t NF_BCH_GEN4_2; /* addr: 0x00000294 */
	ca_uint32_t rsrvd161[3];
	FLASH_NF_BCH_GEN4_3_t NF_BCH_GEN4_3; /* addr: 0x00000298 */
	ca_uint32_t rsrvd162[3];
	FLASH_NF_BCH_GEN4_4_t NF_BCH_GEN4_4; /* addr: 0x0000029c */
	ca_uint32_t rsrvd163[3];
	FLASH_NF_BCH_GEN4_5_t NF_BCH_GEN4_5; /* addr: 0x000002a0 */
	ca_uint32_t rsrvd164[3];
	FLASH_NF_BCH_GEN4_6_t NF_BCH_GEN4_6; /* addr: 0x000002a4 */
	ca_uint32_t rsrvd165[3];
	FLASH_NF_BCH_GEN4_7_t NF_BCH_GEN4_7; /* addr: 0x000002a8 */
	ca_uint32_t rsrvd166[3];
	FLASH_NF_BCH_GEN4_8_t NF_BCH_GEN4_8; /* addr: 0x000002ac */
	ca_uint32_t rsrvd167[3];
	FLASH_NF_BCH_GEN4_9_t NF_BCH_GEN4_9; /* addr: 0x000002b0 */
	ca_uint32_t rsrvd168[3];
	FLASH_NF_BCH_GEN4_10_t NF_BCH_GEN4_10; /* addr: 0x000002b4 */
	ca_uint32_t rsrvd169[3];
	FLASH_NF_BCH_GEN4_11_t NF_BCH_GEN4_11; /* addr: 0x000002b8 */
	ca_uint32_t rsrvd170[3];
	FLASH_NF_BCH_GEN4_12_t NF_BCH_GEN4_12; /* addr: 0x000002bc */
	ca_uint32_t rsrvd171[3];
	FLASH_NF_BCH_GEN4_13_t NF_BCH_GEN4_13; /* addr: 0x000002c0 */
	ca_uint32_t rsrvd172[3];
	FLASH_NF_BCH_GEN4_14_t NF_BCH_GEN4_14; /* addr: 0x000002c4 */
	ca_uint32_t rsrvd173[3];
	FLASH_NF_BCH_GEN4_15_t NF_BCH_GEN4_15; /* addr: 0x000002c8 */
	ca_uint32_t rsrvd174[3];
	FLASH_NF_BCH_GEN4_16_t NF_BCH_GEN4_16; /* addr: 0x000002cc */
	ca_uint32_t rsrvd175[3];
	FLASH_NF_BCH_GEN4_17_t NF_BCH_GEN4_17; /* addr: 0x000002d0 */
	ca_uint32_t rsrvd176[3];
	FLASH_NF_BCH_GEN5_0_t NF_BCH_GEN5_0; /* addr: 0x000002d4 */
	ca_uint32_t rsrvd177[3];
	FLASH_NF_BCH_GEN5_1_t NF_BCH_GEN5_1; /* addr: 0x000002d8 */
	ca_uint32_t rsrvd178[3];
	FLASH_NF_BCH_GEN5_2_t NF_BCH_GEN5_2; /* addr: 0x000002dc */
	ca_uint32_t rsrvd179[3];
	FLASH_NF_BCH_GEN5_3_t NF_BCH_GEN5_3; /* addr: 0x000002e0 */
	ca_uint32_t rsrvd180[3];
	FLASH_NF_BCH_GEN5_4_t NF_BCH_GEN5_4; /* addr: 0x000002e4 */
	ca_uint32_t rsrvd181[3];
	FLASH_NF_BCH_GEN5_5_t NF_BCH_GEN5_5; /* addr: 0x000002e8 */
	ca_uint32_t rsrvd182[3];
	FLASH_NF_BCH_GEN5_6_t NF_BCH_GEN5_6; /* addr: 0x000002ec */
	ca_uint32_t rsrvd183[3];
	FLASH_NF_BCH_GEN5_7_t NF_BCH_GEN5_7; /* addr: 0x000002f0 */
	ca_uint32_t rsrvd184[3];
	FLASH_NF_BCH_GEN5_8_t NF_BCH_GEN5_8; /* addr: 0x000002f4 */
	ca_uint32_t rsrvd185[3];
	FLASH_NF_BCH_GEN5_9_t NF_BCH_GEN5_9; /* addr: 0x000002f8 */
	ca_uint32_t rsrvd186[3];
	FLASH_NF_BCH_GEN5_10_t NF_BCH_GEN5_10; /* addr: 0x000002fc */
	ca_uint32_t rsrvd187[3];
	FLASH_NF_BCH_GEN5_11_t NF_BCH_GEN5_11; /* addr: 0x00000300 */
	ca_uint32_t rsrvd188[3];
	FLASH_NF_BCH_GEN5_12_t NF_BCH_GEN5_12; /* addr: 0x00000304 */
	ca_uint32_t rsrvd189[3];
	FLASH_NF_BCH_GEN5_13_t NF_BCH_GEN5_13; /* addr: 0x00000308 */
	ca_uint32_t rsrvd190[3];
	FLASH_NF_BCH_GEN5_14_t NF_BCH_GEN5_14; /* addr: 0x0000030c */
	ca_uint32_t rsrvd191[3];
	FLASH_NF_BCH_GEN5_15_t NF_BCH_GEN5_15; /* addr: 0x00000310 */
	ca_uint32_t rsrvd192[3];
	FLASH_NF_BCH_GEN5_16_t NF_BCH_GEN5_16; /* addr: 0x00000314 */
	ca_uint32_t rsrvd193[3];
	FLASH_NF_BCH_GEN5_17_t NF_BCH_GEN5_17; /* addr: 0x00000318 */
	ca_uint32_t rsrvd194[3];
	FLASH_NF_BCH_GEN6_0_t NF_BCH_GEN6_0; /* addr: 0x0000031c */
	ca_uint32_t rsrvd195[3];
	FLASH_NF_BCH_GEN6_1_t NF_BCH_GEN6_1; /* addr: 0x00000320 */
	ca_uint32_t rsrvd196[3];
	FLASH_NF_BCH_GEN6_2_t NF_BCH_GEN6_2; /* addr: 0x00000324 */
	ca_uint32_t rsrvd197[3];
	FLASH_NF_BCH_GEN6_3_t NF_BCH_GEN6_3; /* addr: 0x00000328 */
	ca_uint32_t rsrvd198[3];
	FLASH_NF_BCH_GEN6_4_t NF_BCH_GEN6_4; /* addr: 0x0000032c */
	ca_uint32_t rsrvd199[3];
	FLASH_NF_BCH_GEN6_5_t NF_BCH_GEN6_5; /* addr: 0x00000330 */
	ca_uint32_t rsrvd200[3];
	FLASH_NF_BCH_GEN6_6_t NF_BCH_GEN6_6; /* addr: 0x00000334 */
	ca_uint32_t rsrvd201[3];
	FLASH_NF_BCH_GEN6_7_t NF_BCH_GEN6_7; /* addr: 0x00000338 */
	ca_uint32_t rsrvd202[3];
	FLASH_NF_BCH_GEN6_8_t NF_BCH_GEN6_8; /* addr: 0x0000033c */
	ca_uint32_t rsrvd203[3];
	FLASH_NF_BCH_GEN6_9_t NF_BCH_GEN6_9; /* addr: 0x00000340 */
	ca_uint32_t rsrvd204[3];
	FLASH_NF_BCH_GEN6_10_t NF_BCH_GEN6_10; /* addr: 0x00000344 */
	ca_uint32_t rsrvd205[3];
	FLASH_NF_BCH_GEN6_11_t NF_BCH_GEN6_11; /* addr: 0x00000348 */
	ca_uint32_t rsrvd206[3];
	FLASH_NF_BCH_GEN6_12_t NF_BCH_GEN6_12; /* addr: 0x0000034c */
	ca_uint32_t rsrvd207[3];
	FLASH_NF_BCH_GEN6_13_t NF_BCH_GEN6_13; /* addr: 0x00000350 */
	ca_uint32_t rsrvd208[3];
	FLASH_NF_BCH_GEN6_14_t NF_BCH_GEN6_14; /* addr: 0x00000354 */
	ca_uint32_t rsrvd209[3];
	FLASH_NF_BCH_GEN6_15_t NF_BCH_GEN6_15; /* addr: 0x00000358 */
	ca_uint32_t rsrvd210[3];
	FLASH_NF_BCH_GEN6_16_t NF_BCH_GEN6_16; /* addr: 0x0000035c */
	ca_uint32_t rsrvd211[3];
	FLASH_NF_BCH_GEN6_17_t NF_BCH_GEN6_17; /* addr: 0x00000360 */
	ca_uint32_t rsrvd212[3];
	FLASH_NF_BCH_GEN7_0_t NF_BCH_GEN7_0; /* addr: 0x00000364 */
	ca_uint32_t rsrvd213[3];
	FLASH_NF_BCH_GEN7_1_t NF_BCH_GEN7_1; /* addr: 0x00000368 */
	ca_uint32_t rsrvd214[3];
	FLASH_NF_BCH_GEN7_2_t NF_BCH_GEN7_2; /* addr: 0x0000036c */
	ca_uint32_t rsrvd215[3];
	FLASH_NF_BCH_GEN7_3_t NF_BCH_GEN7_3; /* addr: 0x00000370 */
	ca_uint32_t rsrvd216[3];
	FLASH_NF_BCH_GEN7_4_t NF_BCH_GEN7_4; /* addr: 0x00000374 */
	ca_uint32_t rsrvd217[3];
	FLASH_NF_BCH_GEN7_5_t NF_BCH_GEN7_5; /* addr: 0x00000378 */
	ca_uint32_t rsrvd218[3];
	FLASH_NF_BCH_GEN7_6_t NF_BCH_GEN7_6; /* addr: 0x0000037c */
	ca_uint32_t rsrvd219[3];
	FLASH_NF_BCH_GEN7_7_t NF_BCH_GEN7_7; /* addr: 0x00000380 */
	ca_uint32_t rsrvd220[3];
	FLASH_NF_BCH_GEN7_8_t NF_BCH_GEN7_8; /* addr: 0x00000384 */
	ca_uint32_t rsrvd221[3];
	FLASH_NF_BCH_GEN7_9_t NF_BCH_GEN7_9; /* addr: 0x00000388 */
	ca_uint32_t rsrvd222[3];
	FLASH_NF_BCH_GEN7_10_t NF_BCH_GEN7_10; /* addr: 0x0000038c */
	ca_uint32_t rsrvd223[3];
	FLASH_NF_BCH_GEN7_11_t NF_BCH_GEN7_11; /* addr: 0x00000390 */
	ca_uint32_t rsrvd224[3];
	FLASH_NF_BCH_GEN7_12_t NF_BCH_GEN7_12; /* addr: 0x00000394 */
	ca_uint32_t rsrvd225[3];
	FLASH_NF_BCH_GEN7_13_t NF_BCH_GEN7_13; /* addr: 0x00000398 */
	ca_uint32_t rsrvd226[3];
	FLASH_NF_BCH_GEN7_14_t NF_BCH_GEN7_14; /* addr: 0x0000039c */
	ca_uint32_t rsrvd227[3];
	FLASH_NF_BCH_GEN7_15_t NF_BCH_GEN7_15; /* addr: 0x000003a0 */
	ca_uint32_t rsrvd228[3];
	FLASH_NF_BCH_GEN7_16_t NF_BCH_GEN7_16; /* addr: 0x000003a4 */
	ca_uint32_t rsrvd229[3];
	FLASH_NF_BCH_GEN7_17_t NF_BCH_GEN7_17; /* addr: 0x000003a8 */
} APB2_FLASH_t;
#endif /* !__ASSEMBLER__ */

/*
 * PCIEX2
 */

#define PCIE_X2_GLBL_INTERRUPT_0 0xf4325000
#define PCIE_X2_GLBL_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted : 1; /* bits 7:7 */
		ca_uint32_t msi_ctr_int : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up : 1; /* bits 9:9 */
		ca_uint32_t hp_int : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t link_down : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi : 1; /* bits 24:24 */
		ca_uint32_t hp_pme : 1; /* bits 25:25 */
		ca_uint32_t hp_msi : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_INTERRUPT_ENABLE_0 0xf4325004
#define PCIE_X2_GLBL_INTERRUPT_ENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted_en : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted_en : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted_en : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted_en : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted_en : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted_en : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted_en : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted_en : 1; /* bits 7:7 */
		ca_uint32_t msi_ctrl_int_en : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up_int_en : 1; /* bits 9:9 */
		ca_uint32_t hp_int_en : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err_en : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err_en : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err_en : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack_en : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme_en : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t link_down_en : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi_en : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi_en : 1; /* bits 24:24 */
		ca_uint32_t hp_pme_en : 1; /* bits 25:25 */
		ca_uint32_t hp_msi_en : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_INTERRUPT_1 0xf4325008
#define PCIE_X2_GLBL_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted : 1; /* bits 7:7 */
		ca_uint32_t msi_ctr_int : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up : 1; /* bits 9:9 */
		ca_uint32_t hp_int : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t link_down : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi : 1; /* bits 24:24 */
		ca_uint32_t hp_pme : 1; /* bits 25:25 */
		ca_uint32_t hp_msi : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_INTERRUPT_ENABLE_1 0xf432500c
#define PCIE_X2_GLBL_INTERRUPT_ENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted_en : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted_en : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted_en : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted_en : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted_en : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted_en : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted_en : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted_en : 1; /* bits 7:7 */
		ca_uint32_t msi_ctrl_int_en : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up_int_en : 1; /* bits 9:9 */
		ca_uint32_t hp_int_en : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err_en : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err_en : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err_en : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack_en : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme_en : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t elastic_buf_ovrflow_en : 1; /* bits 18:18 */
		ca_uint32_t elastic_buf_underflow_en : 1; /* bits 19:19 */
		ca_uint32_t rx_dec_10b_8b_err_cnt_roll_ovr_en : 1; /* bits 20:20 */
		ca_uint32_t rx_dis_par_err_cnt_roll_ovr_ovr_en : 1; /* bits 21:21 */
		ca_uint32_t link_down_en : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi_en : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi_en : 1; /* bits 24:24 */
		ca_uint32_t hp_pme_en : 1; /* bits 25:25 */
		ca_uint32_t hp_msi_en : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO 0xf4325010
#define PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_rd_resp_bad_eot : 1; /* bits 0:0 */
		ca_uint32_t EP_value : 1; /* bits 1:1 */
		ca_uint32_t TD_value : 1; /* bits 2:2 */
		ca_uint32_t axi_rd_resp_succ : 2; /* bits 4:3 */
		ca_uint32_t axi_wr_resp_succ : 2; /* bits 6:5 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP 0xf4325014
#define PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t mstr_csysreq : 1; /* bits 2:2 */
		ca_uint32_t slv_csysreq : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 28;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_CONFIG_REG 0xf4325018
#define PCIE_X2_GLBL_CORE_CONFIG_REG_dft 0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t app_ltssm_enable : 1; /* bits 0:0 */
		ca_uint32_t app_init_rst : 1; /* bits 1:1 */
		ca_uint32_t diag_ctrl_bus : 3; /* bits 4:2 */
		ca_uint32_t axi_ur_err_mask : 1; /* bits 5:5 */
		ca_uint32_t link_down_rst : 1; /* bits 6:6 */
		ca_uint32_t send_clk_req_n : 1; /* bits 7:7 */
		ca_uint32_t app_xfer_pending : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 21;
		ca_uint32_t tx_lane_flip_en : 1; /* bits 30:30 */
		ca_uint32_t rx_lane_flip_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_CONFIG_REG_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS 0xf432501c
#define PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pm_xtlh_block_tlp : 1; /* bits 0:0 */
		ca_uint32_t pm_curnt_state : 3; /* bits 3:1 */
		ca_uint32_t smlh_ltssm_state : 6; /* bits 9:4 */
		ca_uint32_t pm_status : 1; /* bits 10:10 */
		ca_uint32_t pm_dstate : 3; /* bits 13:11 */
		ca_uint32_t aux_pm_en : 1; /* bits 14:14 */
		ca_uint32_t pm_pme_en : 1; /* bits 15:15 */
		ca_uint32_t clk_req_n : 1; /* bits 16:16 */
		ca_uint32_t link_req_rst_not : 1; /* bits 17:17 */
		ca_uint32_t rdlh_link_up : 1; /* bits 18:18 */
		ca_uint32_t rtlh_rfc_upd : 1; /* bits 19:19 */
		ca_uint32_t mstr_csysack : 1; /* bits 20:20 */
		ca_uint32_t slv_csysack : 1; /* bits 21:21 */
		ca_uint32_t mstr_cactive : 1; /* bits 22:22 */
		ca_uint32_t slv_cactive : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RTLH_INFO 0xf4325020
#define PCIE_X2_GLBL_RTLH_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtlh_rfc_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RTLH_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO 0xf4325024
#define PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_byte_offset : 3; /* bits 2:0 */
		ca_uint32_t mstr_awmisc_info_response_sts : 3; /* bits 5:3 */
		ca_uint32_t mstr_awmisc_info_bar_num : 3; /* bits 8:6 */
		ca_uint32_t mstr_awmisc_info_tlp_io : 1; /* bits 9:9 */
		ca_uint32_t mstr_awmisc_info_tlp_rom : 1; /* bits 10:10 */
		ca_uint32_t mstr_awmisc_info_tlp_fun_num : 3; /* bits 13:11 */
		ca_uint32_t mstr_awmisc_info_tlp_attr : 2; /* bits 15:14 */
		ca_uint32_t mstr_awmisc_info_tlp_tc : 3; /* bits 18:16 */
		ca_uint32_t mstr_awmisc_info_tlp_type : 5; /* bits 23:19 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO 0xf4325028
#define PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_armisc_info_byte_offset : 3; /* bits 2:0 */
		ca_uint32_t mstr_armisc_info_response_sts : 3; /* bits 5:3 */
		ca_uint32_t mstr_armisc_info_bar_num : 3; /* bits 8:6 */
		ca_uint32_t mstr_armisc_info_tlp_io : 1; /* bits 9:9 */
		ca_uint32_t mstr_armisc_info_tlp_rom : 1; /* bits 10:10 */
		ca_uint32_t mstr_armisc_info_tlp_fun_num : 3; /* bits 13:11 */
		ca_uint32_t mstr_armisc_info_tlp_attr : 2; /* bits 15:14 */
		ca_uint32_t mstr_armisc_info_tlp_tc : 3; /* bits 18:16 */
		ca_uint32_t mstr_armisc_info_tlp_type : 5; /* bits 23:19 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO 0xf432502c
#define PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t slv_bmisc_info_trans_td : 1; /* bits 1:1 */
		ca_uint32_t slv_bmisc_info_trans_tc : 3; /* bits 4:2 */
		ca_uint32_t slv_bmisc_info_trans_attr : 2; /* bits 6:5 */
		ca_uint32_t slv_bmisc_info_trans_sts : 3; /* bits 9:7 */
		ca_uint32_t slv_bmisc_info_non_posted : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 21;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT 0xf4325030
#define PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t slv_rmisc_info_trans_td : 1; /* bits 1:1 */
		ca_uint32_t slv_rmisc_info_trans_tc : 3; /* bits 4:2 */
		ca_uint32_t slv_rmisc_info_trans_attr : 2; /* bits 6:5 */
		ca_uint32_t slv_rmisc_info_trans_sts : 3; /* bits 9:7 */
		ca_uint32_t slv_rmisc_info_non_posted : 1; /* bits 10:10 */
		ca_uint32_t radm_cpl_timeout : 1; /* bits 11:11 */
		ca_uint32_t radm_timeout_cpl_len : 12; /* bits 23:12 */
		ca_uint32_t radm_timeout_cpl_tag : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CXPL_DEBUG_INFO_0 0xf4325034
#define PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cxpl_debug_info_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CXPL_DEBUG_INFO_1 0xf4325038
#define PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cxpl_debug_info_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI 0xf432503c
#define PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cxpl_debug_info_ei : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR 0xf4325040
#define PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_cfg_start_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR 0xf4325044
#define PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_cfg_end_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_ATU_BYPASS 0xf4325048
#define PCIE_X2_GLBL_AXI_ATU_BYPASS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_atu_bypass : 1; /* bits 0:0 */
		ca_uint32_t slv_armisc_info_atu_bypass : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_ATU_BYPASS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1 0xf432504c
#define PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_hdr_34dw1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0 0xf4325050
#define PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_hdr_34dw0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG 0xf4325054
#define PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_p_tag : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1 0xf4325058
#define PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_hdr_34dw1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0 0xf432505c
#define PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_hdr_34dw0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO 0xf4325060
#define PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_last_dcmp_tlp : 1; /* bits 0:0 */
		ca_uint32_t mstr_armisc_info_last_dcmp_tlp : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT 0xf4325064
#define PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inta_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT 0xf4325068
#define PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inta_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT 0xf432506c
#define PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intb_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT 0xf4325070
#define PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intb_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT 0xf4325074
#define PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intc_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT 0xf4325078
#define PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intc_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT 0xf432507c
#define PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intd_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT 0xf4325080
#define PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intd_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT 0xf4325084
#define PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hot_plug_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT 0xf4325088
#define PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t app_ready_entr_l23 : 1; /* bits 0:0 */
		ca_uint32_t app_req_exit_l1 : 1; /* bits 1:1 */
		ca_uint32_t app_req_entr_l1 : 1; /* bits 2:2 */
		ca_uint32_t sys_aux_pwr_det : 1; /* bits 3:3 */
		ca_uint32_t sys_pre_det_state : 1; /* bits 4:4 */
		ca_uint32_t sys_atten_button_pressed : 1; /* bits 5:5 */
		ca_uint32_t sys_mrl_sensor_state : 1; /* bits 6:6 */
		ca_uint32_t sys_pwr_fault_det : 1; /* bits 7:7 */
		ca_uint32_t sys_mrl_sensor_chged : 1; /* bits 8:8 */
		ca_uint32_t sys_pre_det_chged : 1; /* bits 9:9 */
		ca_uint32_t sys_cmd_cpled_int : 1; /* bits 10:10 */
		ca_uint32_t apps_pm_xmt_turnoff : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_FATAL_ERR_CNT 0xf432508c
#define PCIE_X2_GLBL_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_fatal_err_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_NON_FATAL_ERR_CNT 0xf4325090
#define PCIE_X2_GLBL_NON_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_non_fatal_err_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_NON_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORR_ERR_CNT 0xf4325094
#define PCIE_X2_GLBL_CORR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_correct_err_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB 0xf4325098
#define PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t msi_addr_31_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB 0xf432509c
#define PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t msi_addr_63_32 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT 0xf43250a0
#define PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_ts1_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT 0xf43250a4
#define PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_ts2_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT 0xf43250a8
#define PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_skip_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT 0xf43250ac
#define PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_elec_idle_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT 0xf43250b0
#define PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_log_idle_sym : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT 0xf43250b4
#define PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_dllp_0_pkt_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT 0xf43250b8
#define PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_dllp_1_pkt_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT 0xf43250bc
#define PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_tlp_0_pkt_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT 0xf43250c0
#define PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_tlp_1_pkt_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT 0xf43250c4
#define PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_lcrc_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT 0xf43250c8
#define PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_ecrc_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT 0xf43250cc
#define PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_cxpl_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT 0xf43250d0
#define PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_cxpl_ur_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT 0xf43250d4
#define PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_req_err_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_TX_DLLP_0_PKT_CNT 0xf43250d8
#define PCIE_X2_GLBL_TX_DLLP_0_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_dllp_0_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_TX_DLLP_0_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_TX_DLLP_1_PKT_CNT 0xf43250dc
#define PCIE_X2_GLBL_TX_DLLP_1_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_dllp_1_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_TX_DLLP_1_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_TX_TLP_PKT_CNT 0xf43250e0
#define PCIE_X2_GLBL_TX_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_tlp_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_TX_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS 0xf43250e4
#define PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arbar : 2; /* bits 1:0 */
		ca_uint32_t ardomain : 2; /* bits 3:2 */
		ca_uint32_t arqos : 4; /* bits 7:4 */
		ca_uint32_t arsnoop : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS 0xf43250e8
#define PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awbar : 2; /* bits 1:0 */
		ca_uint32_t awdomain : 2; /* bits 3:2 */
		ca_uint32_t awqos : 4; /* bits 7:4 */
		ca_uint32_t awsnoop : 3; /* bits 10:8 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_AXI_MSTR_SETTINGS 0xf43250ec
#define PCIE_X2_GLBL_AXI_MSTR_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 6; /* bits 5:0 */
		ca_uint32_t awuser : 6; /* bits 11:6 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_AXI_MSTR_SETTINGS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_0 0xf43250f0
#define PCIE_X2_GLBL_CORE_DEBUG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtfcgen_incr_amt : 9; /* bits 8:0 */
		ca_uint32_t rtfcgen_incr_enable : 1; /* bits 9:9 */
		ca_uint32_t rtfcgen_fctype : 2; /* bits 11:10 */
		ca_uint32_t rtcheck_rtfcgen_vc : 3; /* bits 14:12 */
		ca_uint32_t xdlh_xtlh_halt : 1; /* bits 15:15 */
		ca_uint32_t xdlh_xtlh_data : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_1 0xf43250f4
#define PCIE_X2_GLBL_CORE_DEBUG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xtlh_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_2 0xf43250f8
#define PCIE_X2_GLBL_CORE_DEBUG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xtlh_data : 16; /* bits 15:0 */
		ca_uint32_t xtlh_xdlh_badeot : 1; /* bits 16:16 */
		ca_uint32_t xtlh_xdlh_eot : 1; /* bits 17:17 */
		ca_uint32_t xtlh_xdlh_sot : 1; /* bits 18:18 */
		ca_uint32_t ecrc_err_asserted : 1; /* bits 19:19 */
		ca_uint32_t lcrc_err_asserted : 1; /* bits 20:20 */
		ca_uint32_t xmlh_xdlh_halt : 1; /* bits 21:21 */
		ca_uint32_t xdlh_xmlh_data : 10; /* bits 31:22 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_2_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_3 0xf43250fc
#define PCIE_X2_GLBL_CORE_DEBUG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xmlh_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_3_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_4 0xf4325100
#define PCIE_X2_GLBL_CORE_DEBUG_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xmlh_data : 22; /* bits 21:0 */
		ca_uint32_t xdlh_xmlh_sdp : 2; /* bits 23:22 */
		ca_uint32_t xdlh_xmlh_stp : 2; /* bits 25:24 */
		ca_uint32_t xdlh_xmlh_eot : 2; /* bits 27:26 */
		ca_uint32_t rdlh_xdlh_req_acknack_seqnum : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_4_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_5 0xf4325104
#define PCIE_X2_GLBL_CORE_DEBUG_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdlh_xdlh_req_acknack_seqnum : 8; /* bits 7:0 */
		ca_uint32_t rdlh_xdlh_req2send_nack : 1; /* bits 8:8 */
		ca_uint32_t rdlh_xdlh_req2send_ack_due2dup : 1; /* bits 9:9 */
		ca_uint32_t rdlh_xdlh_req2send_ack : 1; /* bits 10:10 */
		ca_uint32_t rdlh_xdlh_rcvd_acknack_seqnum : 12; /* bits 22:11 */
		ca_uint32_t rdlh_xdlh_rcvd_ack : 1; /* bits 23:23 */
		ca_uint32_t rdlh_xdlh_rcvd_nack : 1; /* bits 24:24 */
		ca_uint32_t cfg_link_retrain : 1; /* bits 25:25 */
		ca_uint32_t rtlh_req_link_retrain : 1; /* bits 26:26 */
		ca_uint32_t xdlh_xmlh_start_link_retrain : 1; /* bits 27:27 */
		ca_uint32_t rdlh_rtlh_tlp_dv : 1; /* bits 28:28 */
		ca_uint32_t rdlh_rtlh_tlp_eot : 2; /* bits 30:29 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_5_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_6 0xf4325108
#define PCIE_X2_GLBL_CORE_DEBUG_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdlh_rtlh_tlp_sot : 2; /* bits 1:0 */
		ca_uint32_t rmlh_rdlh_pkt_err : 2; /* bits 3:2 */
		ca_uint32_t rmlh_rdlh_pkt_dv : 1; /* bits 4:4 */
		ca_uint32_t rmlh_rdlh_pkt_edb : 2; /* bits 6:5 */
		ca_uint32_t rmlh_rdlh_pkt_end : 2; /* bits 8:7 */
		ca_uint32_t rmlh_rdlh_tlp_start : 2; /* bits 10:9 */
		ca_uint32_t rmlh_rdlh_dllp_start : 2; /* bits 12:11 */
		ca_uint32_t rmlh_rdlh_nak : 2; /* bits 14:13 */
		ca_uint32_t rmlh_lanes_rcving : 2; /* bits 16:15 */
		ca_uint32_t rmlh_rcvd_eidle_set : 1; /* bits 17:17 */
		ca_uint32_t rmlh_rcvd_idle : 2; /* bits 19:18 */
		ca_uint32_t rmlh_rcvd_lane_rev : 1; /* bits 20:20 */
		ca_uint32_t rmlh_ts_link_num_is_k237 : 1; /* bits 21:21 */
		ca_uint32_t rmlh_deskew_alignment_err : 1; /* bits 22:22 */
		ca_uint32_t rmlh_ts_lane_num_is_k237 : 1; /* bits 23:23 */
		ca_uint32_t rmlh_ts2_rcvd : 1; /* bits 24:24 */
		ca_uint32_t rmlh_ts1_rcvd : 1; /* bits 25:25 */
		ca_uint32_t rmlh_ts_rcv_err : 1; /* bits 26:26 */
		ca_uint32_t rmlh_inskip_rcv : 1; /* bits 27:27 */
		ca_uint32_t xadm_no_fc_credit : 1; /* bits 28:28 */
		ca_uint32_t xadm_notlp_pending : 1; /* bits 29:29 */
		ca_uint32_t xadm_had_enough_credit : 1; /* bits 30:30 */
		ca_uint32_t xdlh_not_expecting_ack : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_6_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_7 0xf432510c
#define PCIE_X2_GLBL_CORE_DEBUG_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xmt_pme_ack : 1; /* bits 0:0 */
		ca_uint32_t xdlh_nodllp_pending : 1; /* bits 1:1 */
		ca_uint32_t unexpected_cpl_err : 1; /* bits 2:2 */
		ca_uint32_t cpl_ca_err : 1; /* bits 3:3 */
		ca_uint32_t cpl_ur_err : 1; /* bits 4:4 */
		ca_uint32_t flt_q_cpl_last : 1; /* bits 5:5 */
		ca_uint32_t flt_q_cpl_abort : 1; /* bits 6:6 */
		ca_uint32_t cpl_mlf_err : 1; /* bits 7:7 */
		ca_uint32_t flt_q_header_2_0 : 3; /* bits 10:8 */
		ca_uint32_t flt_q_header_4_3 : 2; /* bits 12:11 */
		ca_uint32_t int_rtlh_radm_ecrc_err : 1; /* bits 13:13 */
		ca_uint32_t rtlh_radm_malform_tlp_err : 1; /* bits 14:14 */
		ca_uint32_t rtlh_radm_dllp_err : 1; /* bits 15:15 */
		ca_uint32_t rtlh_radm_eot : 1; /* bits 16:16 */
		ca_uint32_t rtlh_radm_dwen : 2; /* bits 18:17 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_7_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_8 0xf4325110
#define PCIE_X2_GLBL_CORE_DEBUG_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtlh_radm_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_8_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_9 0xf4325114
#define PCIE_X2_GLBL_CORE_DEBUG_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtlh_radm_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_9_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_10 0xf4325118
#define PCIE_X2_GLBL_CORE_DEBUG_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_dv : 1; /* bits 0:0 */
		ca_uint32_t form_filt_hdr : 26; /* bits 26:1 */
		ca_uint32_t rsrvd1 : 5;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_10_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_11 0xf432511c
#define PCIE_X2_GLBL_CORE_DEBUG_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_11_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_12 0xf4325120
#define PCIE_X2_GLBL_CORE_DEBUG_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_12_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_13 0xf4325124
#define PCIE_X2_GLBL_CORE_DEBUG_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_13_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_14 0xf4325128
#define PCIE_X2_GLBL_CORE_DEBUG_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 6; /* bits 5:0 */
		ca_uint32_t form_filt_hv : 1; /* bits 6:6 */
		ca_uint32_t active_grant : 4; /* bits 10:7 */
		ca_uint32_t grant_ack : 4; /* bits 14:11 */
		ca_uint32_t fc_cds_pass : 4; /* bits 18:15 */
		ca_uint32_t arb_reqs : 4; /* bits 22:19 */
		ca_uint32_t pm_bus_num : 8; /* bits 30:23 */
		ca_uint32_t pm_dev_num : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_14_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_15 0xf432512c
#define PCIE_X2_GLBL_CORE_DEBUG_15_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pm_dev_num : 4; /* bits 3:0 */
		ca_uint32_t xdlh_replay_timeout_err : 1; /* bits 4:4 */
		ca_uint32_t xdlh_replay_num_rlover_err : 1; /* bits 5:5 */
		ca_uint32_t rdlh_bad_dllp_err : 1; /* bits 6:6 */
		ca_uint32_t rdlh_bad_tlp_err : 1; /* bits 7:7 */
		ca_uint32_t rdlh_prot_err : 1; /* bits 8:8 */
		ca_uint32_t rtlh_fc_prot_err : 1; /* bits 9:9 */
		ca_uint32_t rmlh_rcvd_err : 1; /* bits 10:10 */
		ca_uint32_t int_xadm_fc_prot_err : 1; /* bits 11:11 */
		ca_uint32_t radm_cpl_timeout : 1; /* bits 12:12 */
		ca_uint32_t radm_qoverflow : 1; /* bits 13:13 */
		ca_uint32_t radm_unexp_cpl_err : 1; /* bits 14:14 */
		ca_uint32_t radm_rcvd_cpl_ur : 1; /* bits 15:15 */
		ca_uint32_t radm_rcvd_cpl_ca : 1; /* bits 16:16 */
		ca_uint32_t radm_rcvd_req_ca : 1; /* bits 17:17 */
		ca_uint32_t radm_rcvd_req_ur : 1; /* bits 18:18 */
		ca_uint32_t radm_ecrc_err : 1; /* bits 19:19 */
		ca_uint32_t radm_mlf_tlp_err : 1; /* bits 20:20 */
		ca_uint32_t radm_rcvd_cpl_poisoned : 1; /* bits 21:21 */
		ca_uint32_t radm_rcvd_wreq_poisoned : 1; /* bits 22:22 */
		ca_uint32_t cdm_lbc_ack : 1; /* bits 23:23 */
		ca_uint32_t lbc_cdm_wr : 4; /* bits 27:24 */
		ca_uint32_t lbc_cdm_cs : 1; /* bits 28:28 */
		ca_uint32_t lbc_cdm_data : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_15_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_16 0xf4325130
#define PCIE_X2_GLBL_CORE_DEBUG_16_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lbc_cdm_data : 29; /* bits 28:0 */
		ca_uint32_t lbc_cdm_addr : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_16_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_17 0xf4325134
#define PCIE_X2_GLBL_CORE_DEBUG_17_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lbc_cdm_addr : 29; /* bits 28:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t radm_q_not_empty : 1; /* bits 30:30 */
		ca_uint32_t radm_xfer_pending : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_17_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X2_GLBL_CORE_DEBUG_18 0xf4325138
#define PCIE_X2_GLBL_CORE_DEBUG_18_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t brdg_slv_xfer_pending : 1; /* bits 0:0 */
		ca_uint32_t brdg_dbi_xfer_pending : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PCIE_X2_GLBL_CORE_DEBUG_18_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIEX2 */
#ifndef __ASSEMBLER__
typedef struct {
	PCIE_X2_GLBL_INTERRUPT_0_t INTERRUPT_0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PCIE_X2_GLBL_INTERRUPT_ENABLE_0_t INTERRUPT_ENABLE_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PCIE_X2_GLBL_INTERRUPT_1_t INTERRUPT_1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PCIE_X2_GLBL_INTERRUPT_ENABLE_1_t INTERRUPT_ENABLE_1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PCIE_X2_GLBL_AXI_MASTER_RESP_MISC_INFO_t
	  AXI_MASTER_RESP_MISC_INFO; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PCIE_X2_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t
	  AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PCIE_X2_GLBL_CORE_CONFIG_REG_t CORE_CONFIG_REG; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	PCIE_X2_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t
	  PM_INFO_RESET_VOLT_LOW_PWR_STATUS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	PCIE_X2_GLBL_RTLH_INFO_t RTLH_INFO; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	PCIE_X2_GLBL_AXI_MASTER_WR_MISC_INFO_t
	  AXI_MASTER_WR_MISC_INFO; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	PCIE_X2_GLBL_AXI_MASTER_RD_MISC_INFO_t
	  AXI_MASTER_RD_MISC_INFO; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	PCIE_X2_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t
	  AXI_SLAVE_BRESP_MISC_INFO; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	PCIE_X2_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t
	  AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	PCIE_X2_GLBL_CXPL_DEBUG_INFO_0_t CXPL_DEBUG_INFO_0; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	PCIE_X2_GLBL_CXPL_DEBUG_INFO_1_t CXPL_DEBUG_INFO_1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	PCIE_X2_GLBL_CXPL_DEBUG_INFO_EI_t CXPL_DEBUG_INFO_EI; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	PCIE_X2_GLBL_PCIE_CONTR_CFG_START_ADDR_t
	  PCIE_CONTR_CFG_START_ADDR; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	PCIE_X2_GLBL_PCIE_CONTR_CFG_END_ADDR_t
	  PCIE_CONTR_CFG_END_ADDR; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	PCIE_X2_GLBL_AXI_ATU_BYPASS_t AXI_ATU_BYPASS; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t
	  AXI_AWMISC_INFO_HDR_34DW1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	PCIE_X2_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t
	  AXI_AWMISC_INFO_HDR_34DW0; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	PCIE_X2_GLBL_AXI_AWMISC_INFO_P_TAG_t
	  AXI_AWMISC_INFO_P_TAG; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t
	  AXI_MSTR_AWMISC_INFO_HDR_34DW1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	PCIE_X2_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t
	  AXI_MSTR_AWMISC_INFO_HDR_34DW0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	PCIE_X2_GLBL_AXI_MSTR_DCMP_INFO_t AXI_MSTR_DCMP_INFO; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	PCIE_X2_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t
	  DEBUG_INTA_ASSERT_INT_CNT; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	PCIE_X2_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t
	  DEBUG_INTA_DE_ASSERT_INT_CNT; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	PCIE_X2_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t
	  DEBUG_INTB_ASSERT_INT_CNT; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	PCIE_X2_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t
	  DEBUG_INTB_DE_ASSERT_INT_CNT; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	PCIE_X2_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t
	  DEBUG_INTC_ASSERT_INT_CNT; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	PCIE_X2_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t
	  DEBUG_INTC_DE_ASSERT_INT_CNT; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	PCIE_X2_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t
	  DEBUG_INTD_ASSERT_INT_CNT; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	PCIE_X2_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t
	  DEBUG_INTD_DE_ASSERT_INT_CNT; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	PCIE_X2_GLBL_DEBUG_HOT_PLUG_INT_CNT_t
	  DEBUG_HOT_PLUG_INT_CNT; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	PCIE_X2_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t
	  ELCTRO_MECH_POWER_MANAGEMENT; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	PCIE_X2_GLBL_FATAL_ERR_CNT_t FATAL_ERR_CNT; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	PCIE_X2_GLBL_NON_FATAL_ERR_CNT_t NON_FATAL_ERR_CNT; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	PCIE_X2_GLBL_CORR_ERR_CNT_t CORR_ERR_CNT; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	PCIE_X2_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t
	  MSI_TARGET_ADDRESS_31_0_LSB; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	PCIE_X2_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t
	  MSI_TARGET_ADDRESS_63_32_MSB; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	PCIE_X2_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t
	  RX_RCVD_TS1_ORDER_SET_CNT; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	PCIE_X2_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t
	  RX_RCVD_TS2_ORDER_SET_CNT; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	PCIE_X2_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t
	  RX_RCVD_SKIP_ORDER_SET_CNT; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	PCIE_X2_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t
	  RX_RCVD_ELEC_IDLE_ORDER_SET_CNT; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	PCIE_X2_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t
	  RX_RCVD_LOG_IDLE_SYMB_CNT; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	PCIE_X2_GLBL_RX_RCVD_DLLP_0_PKT_CNT_t
	  RX_RCVD_DLLP_0_PKT_CNT; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	PCIE_X2_GLBL_RX_RCVD_DLLP_1_PKT_CNT_t
	  RX_RCVD_DLLP_1_PKT_CNT; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	PCIE_X2_GLBL_RX_RCVD_TLP_0_PKT_CNT_t
	  RX_RCVD_TLP_0_PKT_CNT; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	PCIE_X2_GLBL_RX_RCVD_TLP_1_PKT_CNT_t
	  RX_RCVD_TLP_1_PKT_CNT; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	PCIE_X2_GLBL_RX_RCVD_LCRC_ERR_CNT_t
	  RX_RCVD_LCRC_ERR_CNT; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	PCIE_X2_GLBL_RX_RCVD_ECRC_ERR_CNT_t
	  RX_RCVD_ECRC_ERR_CNT; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	PCIE_X2_GLBL_RX_RCVD_CXPL_ERR_CNT_t
	  RX_RCVD_CXPL_ERR_CNT; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	PCIE_X2_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t
	  RX_RCVD_CXPL_UR_ERR_CNT; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	PCIE_X2_GLBL_RX_RCVD_REQ_ERR_CNT_t RX_RCVD_REQ_ERR_CNT; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	PCIE_X2_GLBL_TX_DLLP_0_PKT_CNT_t TX_DLLP_0_PKT_CNT; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	PCIE_X2_GLBL_TX_DLLP_1_PKT_CNT_t TX_DLLP_1_PKT_CNT; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	PCIE_X2_GLBL_TX_TLP_PKT_CNT_t TX_TLP_PKT_CNT; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	PCIE_X2_GLBL_AXI_READ_SLV_SETTINGS_t
	  AXI_READ_SLV_SETTINGS; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	PCIE_X2_GLBL_AXI_WRITE_SLV_SETTINGS_t
	  AXI_WRITE_SLV_SETTINGS; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	PCIE_X2_GLBL_AXI_MSTR_SETTINGS_t AXI_MSTR_SETTINGS; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	PCIE_X2_GLBL_CORE_DEBUG_0_t CORE_DEBUG_0; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	PCIE_X2_GLBL_CORE_DEBUG_1_t CORE_DEBUG_1; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	PCIE_X2_GLBL_CORE_DEBUG_2_t CORE_DEBUG_2; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	PCIE_X2_GLBL_CORE_DEBUG_3_t CORE_DEBUG_3; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	PCIE_X2_GLBL_CORE_DEBUG_4_t CORE_DEBUG_4; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	PCIE_X2_GLBL_CORE_DEBUG_5_t CORE_DEBUG_5; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	PCIE_X2_GLBL_CORE_DEBUG_6_t CORE_DEBUG_6; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	PCIE_X2_GLBL_CORE_DEBUG_7_t CORE_DEBUG_7; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	PCIE_X2_GLBL_CORE_DEBUG_8_t CORE_DEBUG_8; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	PCIE_X2_GLBL_CORE_DEBUG_9_t CORE_DEBUG_9; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	PCIE_X2_GLBL_CORE_DEBUG_10_t CORE_DEBUG_10; /* addr: 0x00000118 */
	ca_uint32_t rsrvd71[3];
	PCIE_X2_GLBL_CORE_DEBUG_11_t CORE_DEBUG_11; /* addr: 0x0000011c */
	ca_uint32_t rsrvd72[3];
	PCIE_X2_GLBL_CORE_DEBUG_12_t CORE_DEBUG_12; /* addr: 0x00000120 */
	ca_uint32_t rsrvd73[3];
	PCIE_X2_GLBL_CORE_DEBUG_13_t CORE_DEBUG_13; /* addr: 0x00000124 */
	ca_uint32_t rsrvd74[3];
	PCIE_X2_GLBL_CORE_DEBUG_14_t CORE_DEBUG_14; /* addr: 0x00000128 */
	ca_uint32_t rsrvd75[3];
	PCIE_X2_GLBL_CORE_DEBUG_15_t CORE_DEBUG_15; /* addr: 0x0000012c */
	ca_uint32_t rsrvd76[3];
	PCIE_X2_GLBL_CORE_DEBUG_16_t CORE_DEBUG_16; /* addr: 0x00000130 */
	ca_uint32_t rsrvd77[3];
	PCIE_X2_GLBL_CORE_DEBUG_17_t CORE_DEBUG_17; /* addr: 0x00000134 */
	ca_uint32_t rsrvd78[3];
	PCIE_X2_GLBL_CORE_DEBUG_18_t CORE_DEBUG_18; /* addr: 0x00000138 */
} APB2_PCIEX2_t;
#endif /* !__ASSEMBLER__ */

/*
 * PCIEX1_[0..1]
 */

#define PCIE_X1_GLBL_INTERRUPT_0 0xf4326000
#define PCIE_X1_GLBL_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted : 1; /* bits 7:7 */
		ca_uint32_t msi_ctr_int : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up : 1; /* bits 9:9 */
		ca_uint32_t hp_int : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t link_down : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi : 1; /* bits 24:24 */
		ca_uint32_t hp_pme : 1; /* bits 25:25 */
		ca_uint32_t hp_msi : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_INTERRUPT_ENABLE_0 0xf4326004
#define PCIE_X1_GLBL_INTERRUPT_ENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted_en : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted_en : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted_en : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted_en : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted_en : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted_en : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted_en : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted_en : 1; /* bits 7:7 */
		ca_uint32_t msi_ctrl_int_en : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up_int_en : 1; /* bits 9:9 */
		ca_uint32_t hp_int_en : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err_en : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err_en : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err_en : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack_en : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme_en : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t link_down_en : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi_en : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi_en : 1; /* bits 24:24 */
		ca_uint32_t hp_pme_en : 1; /* bits 25:25 */
		ca_uint32_t hp_msi_en : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_INTERRUPT_ENABLE_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_INTERRUPT_1 0xf4326008
#define PCIE_X1_GLBL_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted : 1; /* bits 7:7 */
		ca_uint32_t msi_ctr_int : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up : 1; /* bits 9:9 */
		ca_uint32_t hp_int : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t link_down : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi : 1; /* bits 24:24 */
		ca_uint32_t hp_pme : 1; /* bits 25:25 */
		ca_uint32_t hp_msi : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_INTERRUPT_ENABLE_1 0xf432600c
#define PCIE_X1_GLBL_INTERRUPT_ENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_inta_asserted_en : 1; /* bits 0:0 */
		ca_uint32_t radm_inta_deasserted_en : 1; /* bits 1:1 */
		ca_uint32_t radm_intb_asserted_en : 1; /* bits 2:2 */
		ca_uint32_t radm_intb_deasserted_en : 1; /* bits 3:3 */
		ca_uint32_t radm_intc_asserted_en : 1; /* bits 4:4 */
		ca_uint32_t radm_intc_deasserted_en : 1; /* bits 5:5 */
		ca_uint32_t radm_intd_asserted_en : 1; /* bits 6:6 */
		ca_uint32_t radm_intd_deasserted_en : 1; /* bits 7:7 */
		ca_uint32_t msi_ctrl_int_en : 1; /* bits 8:8 */
		ca_uint32_t smlh_link_up_int_en : 1; /* bits 9:9 */
		ca_uint32_t hp_int_en : 1; /* bits 10:10 */
		ca_uint32_t radm_correctable_err_en : 1; /* bits 11:11 */
		ca_uint32_t radm_nonfatal_err_en : 1; /* bits 12:12 */
		ca_uint32_t radm_fatal_err_en : 1; /* bits 13:13 */
		ca_uint32_t radm_pm_to_ack_en : 1; /* bits 14:14 */
		ca_uint32_t radm_pm_pme_en : 1; /* bits 15:15 */
		ca_uint32_t radm_qoverflow_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t elastic_buf_ovrflow_en : 1; /* bits 18:18 */
		ca_uint32_t elastic_buf_underflow_en : 1; /* bits 19:19 */
		ca_uint32_t rx_dec_10b_8b_err_cnt_roll_ovr_en : 1; /* bits 20:20 */
		ca_uint32_t rx_dis_par_err_cnt_roll_ovr_ovr_en : 1; /* bits 21:21 */
		ca_uint32_t link_down_en : 1; /* bits 22:22 */
		ca_uint32_t cfg_aer_rc_err_msi_en : 1; /* bits 23:23 */
		ca_uint32_t cfg_pme_msi_en : 1; /* bits 24:24 */
		ca_uint32_t hp_pme_en : 1; /* bits 25:25 */
		ca_uint32_t hp_msi_en : 1; /* bits 26:26 */
		ca_uint32_t cfg_ur_resp_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd2 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_INTERRUPT_ENABLE_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO 0xf4326010
#define PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_rd_resp_bad_eot : 1; /* bits 0:0 */
		ca_uint32_t EP_value : 1; /* bits 1:1 */
		ca_uint32_t TD_value : 1; /* bits 2:2 */
		ca_uint32_t axi_rd_resp_succ : 2; /* bits 4:3 */
		ca_uint32_t axi_wr_resp_succ : 2; /* bits 6:5 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP 0xf4326014
#define PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_dft 0x0000000c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t mstr_csysreq : 1; /* bits 2:2 */
		ca_uint32_t slv_csysreq : 1; /* bits 3:3 */
		ca_uint32_t rsrvd2 : 28;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_CONFIG_REG 0xf4326018
#define PCIE_X1_GLBL_CORE_CONFIG_REG_dft 0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t app_ltssm_enable : 1; /* bits 0:0 */
		ca_uint32_t app_init_rst : 1; /* bits 1:1 */
		ca_uint32_t diag_ctrl_bus : 3; /* bits 4:2 */
		ca_uint32_t axi_ur_err_mask : 1; /* bits 5:5 */
		ca_uint32_t link_down_rst : 1; /* bits 6:6 */
		ca_uint32_t send_clk_req_n : 1; /* bits 7:7 */
		ca_uint32_t app_xfer_pending : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_CONFIG_REG_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS 0xf432601c
#define PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pm_xtlh_block_tlp : 1; /* bits 0:0 */
		ca_uint32_t pm_curnt_state : 3; /* bits 3:1 */
		ca_uint32_t smlh_ltssm_state : 6; /* bits 9:4 */
		ca_uint32_t pm_status : 1; /* bits 10:10 */
		ca_uint32_t pm_dstate : 3; /* bits 13:11 */
		ca_uint32_t aux_pm_en : 1; /* bits 14:14 */
		ca_uint32_t pm_pme_en : 1; /* bits 15:15 */
		ca_uint32_t clk_req_n : 1; /* bits 16:16 */
		ca_uint32_t link_req_rst_not : 1; /* bits 17:17 */
		ca_uint32_t rdlh_link_up : 1; /* bits 18:18 */
		ca_uint32_t rtlh_rfc_upd : 1; /* bits 19:19 */
		ca_uint32_t mstr_csysack : 1; /* bits 20:20 */
		ca_uint32_t slv_csysack : 1; /* bits 21:21 */
		ca_uint32_t mstr_cactive : 1; /* bits 22:22 */
		ca_uint32_t slv_cactive : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RTLH_INFO 0xf4326020
#define PCIE_X1_GLBL_RTLH_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtlh_rfc_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RTLH_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO 0xf4326024
#define PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_byte_offset : 3; /* bits 2:0 */
		ca_uint32_t mstr_awmisc_info_response_sts : 3; /* bits 5:3 */
		ca_uint32_t mstr_awmisc_info_bar_num : 3; /* bits 8:6 */
		ca_uint32_t mstr_awmisc_info_tlp_io : 1; /* bits 9:9 */
		ca_uint32_t mstr_awmisc_info_tlp_rom : 1; /* bits 10:10 */
		ca_uint32_t mstr_awmisc_info_tlp_fun_num : 3; /* bits 13:11 */
		ca_uint32_t mstr_awmisc_info_tlp_attr : 2; /* bits 15:14 */
		ca_uint32_t mstr_awmisc_info_tlp_tc : 3; /* bits 18:16 */
		ca_uint32_t mstr_awmisc_info_tlp_type : 5; /* bits 23:19 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO 0xf4326028
#define PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_armisc_info_byte_offset : 3; /* bits 2:0 */
		ca_uint32_t mstr_armisc_info_response_sts : 3; /* bits 5:3 */
		ca_uint32_t mstr_armisc_info_bar_num : 3; /* bits 8:6 */
		ca_uint32_t mstr_armisc_info_tlp_io : 1; /* bits 9:9 */
		ca_uint32_t mstr_armisc_info_tlp_rom : 1; /* bits 10:10 */
		ca_uint32_t mstr_armisc_info_tlp_fun_num : 3; /* bits 13:11 */
		ca_uint32_t mstr_armisc_info_tlp_attr : 2; /* bits 15:14 */
		ca_uint32_t mstr_armisc_info_tlp_tc : 3; /* bits 18:16 */
		ca_uint32_t mstr_armisc_info_tlp_type : 5; /* bits 23:19 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO 0xf432602c
#define PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t slv_bmisc_info_trans_td : 1; /* bits 1:1 */
		ca_uint32_t slv_bmisc_info_trans_tc : 3; /* bits 4:2 */
		ca_uint32_t slv_bmisc_info_trans_attr : 2; /* bits 6:5 */
		ca_uint32_t slv_bmisc_info_trans_sts : 3; /* bits 9:7 */
		ca_uint32_t slv_bmisc_info_non_posted : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 21;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT 0xf4326030
#define PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t slv_rmisc_info_trans_td : 1; /* bits 1:1 */
		ca_uint32_t slv_rmisc_info_trans_tc : 3; /* bits 4:2 */
		ca_uint32_t slv_rmisc_info_trans_attr : 2; /* bits 6:5 */
		ca_uint32_t slv_rmisc_info_trans_sts : 3; /* bits 9:7 */
		ca_uint32_t slv_rmisc_info_non_posted : 1; /* bits 10:10 */
		ca_uint32_t radm_cpl_timeout : 1; /* bits 11:11 */
		ca_uint32_t radm_timeout_cpl_len : 12; /* bits 23:12 */
		ca_uint32_t radm_timeout_cpl_tag : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CXPL_DEBUG_INFO_0 0xf4326034
#define PCIE_X1_GLBL_CXPL_DEBUG_INFO_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cxpl_debug_info_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CXPL_DEBUG_INFO_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CXPL_DEBUG_INFO_1 0xf4326038
#define PCIE_X1_GLBL_CXPL_DEBUG_INFO_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cxpl_debug_info_1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CXPL_DEBUG_INFO_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI 0xf432603c
#define PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cxpl_debug_info_ei : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR 0xf4326040
#define PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_cfg_start_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR 0xf4326044
#define PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rc_cfg_end_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_ATU_BYPASS 0xf4326048
#define PCIE_X1_GLBL_AXI_ATU_BYPASS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_atu_bypass : 1; /* bits 0:0 */
		ca_uint32_t slv_armisc_info_atu_bypass : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_ATU_BYPASS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1 0xf432604c
#define PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_hdr_34dw1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0 0xf4326050
#define PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_hdr_34dw0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG 0xf4326054
#define PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slv_awmisc_info_p_tag : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1 0xf4326058
#define PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_hdr_34dw1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0 0xf432605c
#define PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_hdr_34dw0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO 0xf4326060
#define PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mstr_awmisc_info_last_dcmp_tlp : 1; /* bits 0:0 */
		ca_uint32_t mstr_armisc_info_last_dcmp_tlp : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT 0xf4326064
#define PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inta_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT 0xf4326068
#define PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t inta_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT 0xf432606c
#define PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intb_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT 0xf4326070
#define PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intb_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT 0xf4326074
#define PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intc_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT 0xf4326078
#define PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intc_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT 0xf432607c
#define PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intd_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT 0xf4326080
#define PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t intd_de_assert_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT 0xf4326084
#define PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hot_plug_int_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT 0xf4326088
#define PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t app_ready_entr_l23 : 1; /* bits 0:0 */
		ca_uint32_t app_req_exit_l1 : 1; /* bits 1:1 */
		ca_uint32_t app_req_entr_l1 : 1; /* bits 2:2 */
		ca_uint32_t sys_aux_pwr_det : 1; /* bits 3:3 */
		ca_uint32_t sys_pre_det_state : 1; /* bits 4:4 */
		ca_uint32_t sys_atten_button_pressed : 1; /* bits 5:5 */
		ca_uint32_t sys_mrl_sensor_state : 1; /* bits 6:6 */
		ca_uint32_t sys_pwr_fault_det : 1; /* bits 7:7 */
		ca_uint32_t sys_mrl_sensor_chged : 1; /* bits 8:8 */
		ca_uint32_t sys_pre_det_chged : 1; /* bits 9:9 */
		ca_uint32_t sys_cmd_cpled_int : 1; /* bits 10:10 */
		ca_uint32_t apps_pm_xmt_turnoff : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_FATAL_ERR_CNT 0xf432608c
#define PCIE_X1_GLBL_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_fatal_err_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_NON_FATAL_ERR_CNT 0xf4326090
#define PCIE_X1_GLBL_NON_FATAL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_non_fatal_err_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_NON_FATAL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORR_ERR_CNT 0xf4326094
#define PCIE_X1_GLBL_CORR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t radm_correct_err_cnt : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB 0xf4326098
#define PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t msi_addr_31_0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB 0xf432609c
#define PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t msi_addr_63_32 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT 0xf43260a0
#define PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_ts1_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT 0xf43260a4
#define PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_ts2_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT 0xf43260a8
#define PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_skip_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT 0xf43260ac
#define PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_elec_idle_order_set_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT 0xf43260b0
#define PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_log_idle_sym : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT 0xf43260b4
#define PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_dllp_pkt_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT 0xf43260b8
#define PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_tlp_pkt_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT 0xf43260bc
#define PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_lcrc_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT 0xf43260c0
#define PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_ecrc_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT 0xf43260c4
#define PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_cxpl_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT 0xf43260c8
#define PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_cxpl_ur_err : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT 0xf43260cc
#define PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_rcvd_req_err_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_TX_DLLP_PKT_CNT 0xf43260d0
#define PCIE_X1_GLBL_TX_DLLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_dllp_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_TX_DLLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_TX_TLP_PKT_CNT 0xf43260d4
#define PCIE_X1_GLBL_TX_TLP_PKT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_tlp_cnt_incr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_TX_TLP_PKT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS 0xf43260d8
#define PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arbar : 2; /* bits 1:0 */
		ca_uint32_t ardomain : 2; /* bits 3:2 */
		ca_uint32_t arqos : 4; /* bits 7:4 */
		ca_uint32_t arsnoop : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS 0xf43260dc
#define PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awbar : 2; /* bits 1:0 */
		ca_uint32_t awdomain : 2; /* bits 3:2 */
		ca_uint32_t awqos : 4; /* bits 7:4 */
		ca_uint32_t awsnoop : 3; /* bits 10:8 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_AXI_MSTR_SETTINGS 0xf43260e0
#define PCIE_X1_GLBL_AXI_MSTR_SETTINGS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 6; /* bits 5:0 */
		ca_uint32_t awuser : 6; /* bits 11:6 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_AXI_MSTR_SETTINGS_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_0 0xf43260e4
#define PCIE_X1_GLBL_CORE_DEBUG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtfcgen_incr_amt : 9; /* bits 8:0 */
		ca_uint32_t rtfcgen_incr_enable : 1; /* bits 9:9 */
		ca_uint32_t rtfcgen_fctype : 2; /* bits 11:10 */
		ca_uint32_t rtcheck_rtfcgen_vc : 3; /* bits 14:12 */
		ca_uint32_t xdlh_xtlh_halt : 1; /* bits 15:15 */
		ca_uint32_t xdlh_xtlh_data : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_1 0xf43260e8
#define PCIE_X1_GLBL_CORE_DEBUG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xtlh_data : 16; /* bits 15:0 */
		ca_uint32_t xtlh_xdlh_badeot : 1; /* bits 16:16 */
		ca_uint32_t xtlh_xdlh_eot : 1; /* bits 17:17 */
		ca_uint32_t xtlh_xdlh_sot : 1; /* bits 18:18 */
		ca_uint32_t ecrc_err_asserted : 1; /* bits 19:19 */
		ca_uint32_t lcrc_err_asserted : 1; /* bits 20:20 */
		ca_uint32_t xmlh_xdlh_halt : 1; /* bits 21:21 */
		ca_uint32_t xdlh_xmlh_data : 10; /* bits 31:22 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_2 0xf43260ec
#define PCIE_X1_GLBL_CORE_DEBUG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t xdlh_xmlh_data : 22; /* bits 21:0 */
		ca_uint32_t xdlh_xmlh_sdp : 1; /* bits 22:22 */
		ca_uint32_t xdlh_xmlh_stp : 1; /* bits 23:23 */
		ca_uint32_t xdlh_xmlh_eot : 1; /* bits 24:24 */
		ca_uint32_t rdlh_xdlh_req_acknack_seqnum : 7; /* bits 31:25 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_2_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_3 0xf43260f0
#define PCIE_X1_GLBL_CORE_DEBUG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdlh_xdlh_req_acknack_seqnum : 5; /* bits 4:0 */
		ca_uint32_t rdlh_xdlh_req2send_nack : 1; /* bits 5:5 */
		ca_uint32_t rdlh_xdlh_req2send_ack_due2dup : 1; /* bits 6:6 */
		ca_uint32_t rdlh_xdlh_req2send_ack : 1; /* bits 7:7 */
		ca_uint32_t rdlh_xdlh_rcvd_acknack_seqnum : 12; /* bits 19:8 */
		ca_uint32_t rdlh_xdlh_rcvd_ack : 1; /* bits 20:20 */
		ca_uint32_t rdlh_xdlh_rcvd_nack : 1; /* bits 21:21 */
		ca_uint32_t cfg_link_retrain : 1; /* bits 22:22 */
		ca_uint32_t rtlh_req_link_retrain : 1; /* bits 23:23 */
		ca_uint32_t xdlh_xmlh_start_link_retrain : 1; /* bits 24:24 */
		ca_uint32_t rdlh_rtlh_tlp_dv : 1; /* bits 25:25 */
		ca_uint32_t rdlh_rtlh_tlp_eot : 1; /* bits 26:26 */
		ca_uint32_t rdlh_rtlh_tlp_sot : 1; /* bits 27:27 */
		ca_uint32_t rmlh_rdlh_pkt_err : 1; /* bits 28:28 */
		ca_uint32_t rmlh_rdlh_pkt_dv : 1; /* bits 29:29 */
		ca_uint32_t rmlh_rdlh_pkt_edb : 1; /* bits 30:30 */
		ca_uint32_t rmlh_rdlh_pkt_end : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_3_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_4 0xf43260f4
#define PCIE_X1_GLBL_CORE_DEBUG_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rmlh_rdlh_tlp_start : 1; /* bits 0:0 */
		ca_uint32_t rmlh_rdlh_dllp_start : 1; /* bits 1:1 */
		ca_uint32_t rmlh_rdlh_nak : 1; /* bits 2:2 */
		ca_uint32_t rmlh_lanes_rcving : 1; /* bits 3:3 */
		ca_uint32_t rmlh_rcvd_eidle_set : 1; /* bits 4:4 */
		ca_uint32_t rmlh_rcvd_idle : 2; /* bits 6:5 */
		ca_uint32_t rmlh_rcvd_lane_rev : 1; /* bits 7:7 */
		ca_uint32_t rmlh_ts_link_num_is_k237 : 1; /* bits 8:8 */
		ca_uint32_t rmlh_deskew_alignment_err : 1; /* bits 9:9 */
		ca_uint32_t rmlh_ts_lane_num_is_k237 : 1; /* bits 10:10 */
		ca_uint32_t rmlh_ts2_rcvd : 1; /* bits 11:11 */
		ca_uint32_t rmlh_ts1_rcvd : 1; /* bits 12:12 */
		ca_uint32_t rmlh_ts_rcv_err : 1; /* bits 13:13 */
		ca_uint32_t rmlh_inskip_rcv : 1; /* bits 14:14 */
		ca_uint32_t xadm_no_fc_credit : 1; /* bits 15:15 */
		ca_uint32_t xadm_notlp_pending : 1; /* bits 16:16 */
		ca_uint32_t xadm_had_enough_credit : 1; /* bits 17:17 */
		ca_uint32_t xdlh_not_expecting_ack : 1; /* bits 18:18 */
		ca_uint32_t xdlh_xmt_pme_ack : 1; /* bits 19:19 */
		ca_uint32_t xdlh_nodllp_pending : 1; /* bits 20:20 */
		ca_uint32_t unexpected_cpl_err : 1; /* bits 21:21 */
		ca_uint32_t cpl_ca_err : 1; /* bits 22:22 */
		ca_uint32_t cpl_ur_err : 1; /* bits 23:23 */
		ca_uint32_t flt_q_cpl_last : 1; /* bits 24:24 */
		ca_uint32_t flt_q_cpl_abort : 1; /* bits 25:25 */
		ca_uint32_t cpl_mlf_err : 1; /* bits 26:26 */
		ca_uint32_t flt_q_header_2_0 : 3; /* bits 29:27 */
		ca_uint32_t flt_q_header_4_3 : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_4_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_5 0xf43260f8
#define PCIE_X1_GLBL_CORE_DEBUG_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t int_rtlh_radm_ecrc_err : 1; /* bits 0:0 */
		ca_uint32_t rtlh_radm_malform_tlp_err : 1; /* bits 1:1 */
		ca_uint32_t rtlh_radm_dllp_err : 1; /* bits 2:2 */
		ca_uint32_t rtlh_radm_eot : 1; /* bits 3:3 */
		ca_uint32_t rtlh_radm_dwen : 1; /* bits 4:4 */
		ca_uint32_t rtlh_radm_data : 27; /* bits 31:5 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_5_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_6 0xf43260fc
#define PCIE_X1_GLBL_CORE_DEBUG_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rtlh_radm_data : 5; /* bits 4:0 */
		ca_uint32_t form_filt_dv : 1; /* bits 5:5 */
		ca_uint32_t form_filt_hdr : 26; /* bits 31:6 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_6_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_7 0xf4326100
#define PCIE_X1_GLBL_CORE_DEBUG_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_7_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_8 0xf4326104
#define PCIE_X1_GLBL_CORE_DEBUG_8_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_8_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_9 0xf4326108
#define PCIE_X1_GLBL_CORE_DEBUG_9_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_9_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_10 0xf432610c
#define PCIE_X1_GLBL_CORE_DEBUG_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t form_filt_hdr : 6; /* bits 5:0 */
		ca_uint32_t form_filt_hv : 1; /* bits 6:6 */
		ca_uint32_t active_grant : 4; /* bits 10:7 */
		ca_uint32_t grant_ack : 4; /* bits 14:11 */
		ca_uint32_t fc_cds_pass : 4; /* bits 18:15 */
		ca_uint32_t arb_reqs : 4; /* bits 22:19 */
		ca_uint32_t pm_bus_num : 8; /* bits 30:23 */
		ca_uint32_t pm_dev_num : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_10_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_11 0xf4326110
#define PCIE_X1_GLBL_CORE_DEBUG_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pm_dev_num : 4; /* bits 3:0 */
		ca_uint32_t xdlh_replay_timeout_err : 1; /* bits 4:4 */
		ca_uint32_t xdlh_replay_num_rlover_err : 1; /* bits 5:5 */
		ca_uint32_t rdlh_bad_dllp_err : 1; /* bits 6:6 */
		ca_uint32_t rdlh_bad_tlp_err : 1; /* bits 7:7 */
		ca_uint32_t rdlh_prot_err : 1; /* bits 8:8 */
		ca_uint32_t rtlh_fc_prot_err : 1; /* bits 9:9 */
		ca_uint32_t rmlh_rcvd_err : 1; /* bits 10:10 */
		ca_uint32_t int_xadm_fc_prot_err : 1; /* bits 11:11 */
		ca_uint32_t radm_cpl_timeout : 1; /* bits 12:12 */
		ca_uint32_t radm_qoverflow : 1; /* bits 13:13 */
		ca_uint32_t radm_unexp_cpl_err : 1; /* bits 14:14 */
		ca_uint32_t radm_rcvd_cpl_ur : 1; /* bits 15:15 */
		ca_uint32_t radm_rcvd_cpl_ca : 1; /* bits 16:16 */
		ca_uint32_t radm_rcvd_req_ca : 1; /* bits 17:17 */
		ca_uint32_t radm_rcvd_req_ur : 1; /* bits 18:18 */
		ca_uint32_t radm_ecrc_err : 1; /* bits 19:19 */
		ca_uint32_t radm_mlf_tlp_err : 1; /* bits 20:20 */
		ca_uint32_t radm_rcvd_cpl_poisoned : 1; /* bits 21:21 */
		ca_uint32_t radm_rcvd_wreq_poisoned : 1; /* bits 22:22 */
		ca_uint32_t cdm_lbc_ack : 1; /* bits 23:23 */
		ca_uint32_t lbc_cdm_wr : 4; /* bits 27:24 */
		ca_uint32_t lbc_cdm_cs : 1; /* bits 28:28 */
		ca_uint32_t lbc_cdm_data : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_11_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_12 0xf4326114
#define PCIE_X1_GLBL_CORE_DEBUG_12_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lbc_cdm_data : 29; /* bits 28:0 */
		ca_uint32_t lbc_cdm_addr : 3; /* bits 31:29 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_12_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_13 0xf4326118
#define PCIE_X1_GLBL_CORE_DEBUG_13_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t lbc_cdm_addr : 29; /* bits 28:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t radm_q_not_empty : 1; /* bits 30:30 */
		ca_uint32_t radm_xfer_pending : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_13_t;
#endif /* !__ASSEMBLER__ */

#define PCIE_X1_GLBL_CORE_DEBUG_14 0xf432611c
#define PCIE_X1_GLBL_CORE_DEBUG_14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t brdg_slv_xfer_pending : 1; /* bits 0:0 */
		ca_uint32_t brdg_dbi_xfer_pending : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PCIE_X1_GLBL_CORE_DEBUG_14_t;
#endif /* !__ASSEMBLER__ */

#define APB2_PCIEX1__STRIDE 4096
#define APB2_PCIEX1__COUNT 2

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIEX1_ */
#ifndef __ASSEMBLER__
typedef struct {
	PCIE_X1_GLBL_INTERRUPT_0_t INTERRUPT_0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PCIE_X1_GLBL_INTERRUPT_ENABLE_0_t INTERRUPT_ENABLE_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PCIE_X1_GLBL_INTERRUPT_1_t INTERRUPT_1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PCIE_X1_GLBL_INTERRUPT_ENABLE_1_t INTERRUPT_ENABLE_1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PCIE_X1_GLBL_AXI_MASTER_RESP_MISC_INFO_t
	  AXI_MASTER_RESP_MISC_INFO; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PCIE_X1_GLBL_AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP_t
	  AXI_MSTR_SLV_RESP_ERR_LOW_PW_MAP; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PCIE_X1_GLBL_CORE_CONFIG_REG_t CORE_CONFIG_REG; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	PCIE_X1_GLBL_PM_INFO_RESET_VOLT_LOW_PWR_STATUS_t
	  PM_INFO_RESET_VOLT_LOW_PWR_STATUS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	PCIE_X1_GLBL_RTLH_INFO_t RTLH_INFO; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	PCIE_X1_GLBL_AXI_MASTER_WR_MISC_INFO_t
	  AXI_MASTER_WR_MISC_INFO; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	PCIE_X1_GLBL_AXI_MASTER_RD_MISC_INFO_t
	  AXI_MASTER_RD_MISC_INFO; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	PCIE_X1_GLBL_AXI_SLAVE_BRESP_MISC_INFO_t
	  AXI_SLAVE_BRESP_MISC_INFO; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	PCIE_X1_GLBL_AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT_t
	  AXI_SLAVE_RD_RESP_MISC_INFO_COMP_TIMEOUT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	PCIE_X1_GLBL_CXPL_DEBUG_INFO_0_t CXPL_DEBUG_INFO_0; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	PCIE_X1_GLBL_CXPL_DEBUG_INFO_1_t CXPL_DEBUG_INFO_1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	PCIE_X1_GLBL_CXPL_DEBUG_INFO_EI_t CXPL_DEBUG_INFO_EI; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	PCIE_X1_GLBL_PCIE_CONTR_CFG_START_ADDR_t
	  PCIE_CONTR_CFG_START_ADDR; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	PCIE_X1_GLBL_PCIE_CONTR_CFG_END_ADDR_t
	  PCIE_CONTR_CFG_END_ADDR; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	PCIE_X1_GLBL_AXI_ATU_BYPASS_t AXI_ATU_BYPASS; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW1_t
	  AXI_AWMISC_INFO_HDR_34DW1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	PCIE_X1_GLBL_AXI_AWMISC_INFO_HDR_34DW0_t
	  AXI_AWMISC_INFO_HDR_34DW0; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	PCIE_X1_GLBL_AXI_AWMISC_INFO_P_TAG_t
	  AXI_AWMISC_INFO_P_TAG; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW1_t
	  AXI_MSTR_AWMISC_INFO_HDR_34DW1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	PCIE_X1_GLBL_AXI_MSTR_AWMISC_INFO_HDR_34DW0_t
	  AXI_MSTR_AWMISC_INFO_HDR_34DW0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	PCIE_X1_GLBL_AXI_MSTR_DCMP_INFO_t AXI_MSTR_DCMP_INFO; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	PCIE_X1_GLBL_DEBUG_INTA_ASSERT_INT_CNT_t
	  DEBUG_INTA_ASSERT_INT_CNT; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	PCIE_X1_GLBL_DEBUG_INTA_DE_ASSERT_INT_CNT_t
	  DEBUG_INTA_DE_ASSERT_INT_CNT; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	PCIE_X1_GLBL_DEBUG_INTB_ASSERT_INT_CNT_t
	  DEBUG_INTB_ASSERT_INT_CNT; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	PCIE_X1_GLBL_DEBUG_INTB_DE_ASSERT_INT_CNT_t
	  DEBUG_INTB_DE_ASSERT_INT_CNT; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	PCIE_X1_GLBL_DEBUG_INTC_ASSERT_INT_CNT_t
	  DEBUG_INTC_ASSERT_INT_CNT; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	PCIE_X1_GLBL_DEBUG_INTC_DE_ASSERT_INT_CNT_t
	  DEBUG_INTC_DE_ASSERT_INT_CNT; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	PCIE_X1_GLBL_DEBUG_INTD_ASSERT_INT_CNT_t
	  DEBUG_INTD_ASSERT_INT_CNT; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	PCIE_X1_GLBL_DEBUG_INTD_DE_ASSERT_INT_CNT_t
	  DEBUG_INTD_DE_ASSERT_INT_CNT; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	PCIE_X1_GLBL_DEBUG_HOT_PLUG_INT_CNT_t
	  DEBUG_HOT_PLUG_INT_CNT; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	PCIE_X1_GLBL_ELCTRO_MECH_POWER_MANAGEMENT_t
	  ELCTRO_MECH_POWER_MANAGEMENT; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	PCIE_X1_GLBL_FATAL_ERR_CNT_t FATAL_ERR_CNT; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	PCIE_X1_GLBL_NON_FATAL_ERR_CNT_t NON_FATAL_ERR_CNT; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	PCIE_X1_GLBL_CORR_ERR_CNT_t CORR_ERR_CNT; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	PCIE_X1_GLBL_MSI_TARGET_ADDRESS_31_0_LSB_t
	  MSI_TARGET_ADDRESS_31_0_LSB; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	PCIE_X1_GLBL_MSI_TARGET_ADDRESS_63_32_MSB_t
	  MSI_TARGET_ADDRESS_63_32_MSB; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	PCIE_X1_GLBL_RX_RCVD_TS1_ORDER_SET_CNT_t
	  RX_RCVD_TS1_ORDER_SET_CNT; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	PCIE_X1_GLBL_RX_RCVD_TS2_ORDER_SET_CNT_t
	  RX_RCVD_TS2_ORDER_SET_CNT; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	PCIE_X1_GLBL_RX_RCVD_SKIP_ORDER_SET_CNT_t
	  RX_RCVD_SKIP_ORDER_SET_CNT; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	PCIE_X1_GLBL_RX_RCVD_ELEC_IDLE_ORDER_SET_CNT_t
	  RX_RCVD_ELEC_IDLE_ORDER_SET_CNT; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	PCIE_X1_GLBL_RX_RCVD_LOG_IDLE_SYMB_CNT_t
	  RX_RCVD_LOG_IDLE_SYMB_CNT; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	PCIE_X1_GLBL_RX_RCVD_DLLP_PKT_CNT_t
	  RX_RCVD_DLLP_PKT_CNT; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	PCIE_X1_GLBL_RX_RCVD_TLP_PKT_CNT_t RX_RCVD_TLP_PKT_CNT; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	PCIE_X1_GLBL_RX_RCVD_LCRC_ERR_CNT_t
	  RX_RCVD_LCRC_ERR_CNT; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	PCIE_X1_GLBL_RX_RCVD_ECRC_ERR_CNT_t
	  RX_RCVD_ECRC_ERR_CNT; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	PCIE_X1_GLBL_RX_RCVD_CXPL_ERR_CNT_t
	  RX_RCVD_CXPL_ERR_CNT; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	PCIE_X1_GLBL_RX_RCVD_CXPL_UR_ERR_CNT_t
	  RX_RCVD_CXPL_UR_ERR_CNT; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	PCIE_X1_GLBL_RX_RCVD_REQ_ERR_CNT_t RX_RCVD_REQ_ERR_CNT; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	PCIE_X1_GLBL_TX_DLLP_PKT_CNT_t TX_DLLP_PKT_CNT; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	PCIE_X1_GLBL_TX_TLP_PKT_CNT_t TX_TLP_PKT_CNT; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	PCIE_X1_GLBL_AXI_READ_SLV_SETTINGS_t
	  AXI_READ_SLV_SETTINGS; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	PCIE_X1_GLBL_AXI_WRITE_SLV_SETTINGS_t
	  AXI_WRITE_SLV_SETTINGS; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	PCIE_X1_GLBL_AXI_MSTR_SETTINGS_t AXI_MSTR_SETTINGS; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	PCIE_X1_GLBL_CORE_DEBUG_0_t CORE_DEBUG_0; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	PCIE_X1_GLBL_CORE_DEBUG_1_t CORE_DEBUG_1; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	PCIE_X1_GLBL_CORE_DEBUG_2_t CORE_DEBUG_2; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	PCIE_X1_GLBL_CORE_DEBUG_3_t CORE_DEBUG_3; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	PCIE_X1_GLBL_CORE_DEBUG_4_t CORE_DEBUG_4; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	PCIE_X1_GLBL_CORE_DEBUG_5_t CORE_DEBUG_5; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	PCIE_X1_GLBL_CORE_DEBUG_6_t CORE_DEBUG_6; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	PCIE_X1_GLBL_CORE_DEBUG_7_t CORE_DEBUG_7; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	PCIE_X1_GLBL_CORE_DEBUG_8_t CORE_DEBUG_8; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	PCIE_X1_GLBL_CORE_DEBUG_9_t CORE_DEBUG_9; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	PCIE_X1_GLBL_CORE_DEBUG_10_t CORE_DEBUG_10; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	PCIE_X1_GLBL_CORE_DEBUG_11_t CORE_DEBUG_11; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	PCIE_X1_GLBL_CORE_DEBUG_12_t CORE_DEBUG_12; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	PCIE_X1_GLBL_CORE_DEBUG_13_t CORE_DEBUG_13; /* addr: 0x00000118 */
	ca_uint32_t rsrvd71[3];
	PCIE_X1_GLBL_CORE_DEBUG_14_t CORE_DEBUG_14; /* addr: 0x0000011c */
	ca_uint32_t rsrvd72[3811];
} APB2_PCIEX1__t;
#endif /* !__ASSEMBLER__ */

/*
 * DDR_CTRL
 */

/*
 * PCTLTOP
 */

/*
 * DPI
 */

/*
 * RXI310
 */

/*
 * PCTL
 */

#define DDR_CTRL_PCTL_REVISION 0xf4328700
#define DDR_CTRL_PCTL_REVISION_dft 0x00010000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t minor : 16; /* bits 15:0 */
		ca_uint32_t major : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_REVISION_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_DDR_CONF 0xf4328704
#define DDR_CTRL_PCTL_DDR_CONF_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t DDR4 : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_DDR_CONF_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL 0xf4328708
#define DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL_dft 0x00000300

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t POR15N : 1; /* bits 0:0 */
		ca_uint32_t PWDPAD15N : 1; /* bits 1:1 */
		ca_uint32_t pll_ldo_rst_n : 1; /* bits 2:2 */
		ca_uint32_t pll_ssc_dig_rst_n : 1; /* bits 3:3 */
		ca_uint32_t ptr_rst_n : 1; /* bits 4:4 */
		ca_uint32_t rst_n : 1; /* bits 5:5 */
		ca_uint32_t alert_rx_rst_n : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t reg_clken_dcphy : 1; /* bits 8:8 */
		ca_uint32_t reg_clken_pllreg : 1; /* bits 9:9 */
		ca_uint32_t crt_rst_n : 1; /* bits 10:10 */
		ca_uint32_t rxi310_rst_n : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 20;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL 0xf432870c
#define DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dpi_bypass_pll_ref_test_mode : 1; /* bits 0:0 */
		ca_uint32_t dpi_bypass_pll_test_mode : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_PHY_STAT 0xf4328710
#define DDR_CTRL_PCTL_PHY_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pll_stable : 1; /* bits 0:0 */
		ca_uint32_t pctl_ctl_wd_fifo_empty : 1; /* bits 1:1 */
		ca_uint32_t pctl_ctl_flush_all_fifo_n : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t pctl_cr_dram_dq32 : 1; /* bits 8:8 */
		ca_uint32_t pctl_cr_bg2 : 1; /* bits 9:9 */
		ca_uint32_t pctl_cr_rank2 : 1; /* bits 10:10 */
		ca_uint32_t mck_rst_sync : 1; /* bits 11:11 */
		ca_uint32_t rsrvd2 : 20;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_PHY_STAT_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_PCTL_MSG 0xf4328714
#define DDR_CTRL_PCTL_PCTL_MSG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t msg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_PCTL_MSG_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_BSTC_MEM_ACCESS 0xf4328718
#define DDR_CTRL_PCTL_BSTC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 19; /* bits 18:0 */
		ca_uint32_t rsrvd1 : 11;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_BSTC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_BSTC_MEM_DATA 0xf432871c
#define DDR_CTRL_PCTL_BSTC_MEM_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bstc_data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_BSTC_MEM_DATA_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_INTERRUPT 0xf4328720
#define DDR_CTRL_PCTL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pctl_INTERRUPT : 1; /* bits 0:0 */
		ca_uint32_t dpi_INTERRUPT : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_PCTL_INTENABLE 0xf4328724
#define DDR_CTRL_PCTL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pctl_INTERRUPTE : 1; /* bits 0:0 */
		ca_uint32_t dpi_INTERRUPTE : 4; /* bits 4:1 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_PCTL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCTL */
#ifndef __ASSEMBLER__
typedef struct {
	DDR_CTRL_PCTL_REVISION_t REVISION; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DDR_CTRL_PCTL_DDR_CONF_t DDR_CONF; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DDR_CTRL_PCTL_RTK_PHY_INIT_CNTL_t RTK_PHY_INIT_CNTL; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DDR_CTRL_PCTL_RTK_PHY_TEST_CNTL_t RTK_PHY_TEST_CNTL; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DDR_CTRL_PCTL_PHY_STAT_t PHY_STAT; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DDR_CTRL_PCTL_PCTL_MSG_t PCTL_MSG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DDR_CTRL_PCTL_BSTC_MEM_ACCESS_t BSTC_MEM_ACCESS; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DDR_CTRL_PCTL_BSTC_MEM_DATA_t BSTC_MEM_DATA; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DDR_CTRL_PCTL_INTERRUPT_t INTERRUPT; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DDR_CTRL_PCTL_INTENABLE_t INTENABLE; /* addr: 0x00000024 */
} APB2_DDR_CTRL_PCTLTOP_PCTL_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCTLTOP */

#ifndef __ASSEMBLER__
typedef struct {
	ca_uint32_t rsrvd1[1792];
	APB2_DDR_CTRL_PCTLTOP_PCTL_t PCTL; /* addr: 0x00000700 */
} APB2_DDR_CTRL_PCTLTOP_t;
#endif /* !__ASSEMBLER__ */

/*
 * DDR_SCH
 */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0 0xf4328800
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN 0xf4328804
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1 0xf4328808
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_EN 0xf432880c
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2 0xf4328810
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_EN 0xf4328814
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3 0xf4328818
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_EN 0xf432881c
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4 0xf4328820
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_EN 0xf4328824
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5 0xf4328828
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_EN 0xf432882c
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6 0xf4328830
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_EN 0xf4328834
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7 0xf4328838
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit_addr : 16; /* bits 15:0 */
		ca_uint32_t base_addr : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_EN 0xf432883c
#define DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write : 1; /* bits 0:0 */
		ca_uint32_t read : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_EN_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT0 0xf4328840
#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t denied_write : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t denied_read : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT0_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID0 0xf4328844
#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t axi_read : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID0_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT1 0xf4328848
#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t denied_write : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t denied_read : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT1_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID1 0xf432884c
#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t axi_read : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID1_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT2 0xf4328850
#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t denied_write : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t denied_read : 8; /* bits 23:16 */
		ca_uint32_t rsrvd2 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT2_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID2 0xf4328854
#define DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t axi_read : 14; /* bits 29:16 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID2_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_QOS_REMAP_TABLE 0xf4328858
#define DDR_CTRL_DDR_SCH_QOS_REMAP_TABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 13;
		ca_uint32_t base_addr : 19; /* bits 31:13 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_QOS_REMAP_TABLE_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_SCRAMBLE 0xf432885c
#define DDR_CTRL_DDR_SCH_SCRAMBLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t seed : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_SCRAMBLE_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_CTRL1 0xf4328860
#define DDR_CTRL_DDR_SCH_CTRL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clear_denied_wr_p0 : 1; /* bits 0:0 */
		ca_uint32_t clear_denied_wr_p1 : 1; /* bits 1:1 */
		ca_uint32_t clear_denied_wr_p2 : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t clear_denied_rd_p0 : 1; /* bits 4:4 */
		ca_uint32_t clear_denied_rd_p1 : 1; /* bits 5:5 */
		ca_uint32_t clear_denied_rd_p2 : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t halt_wr_deq : 1; /* bits 8:8 */
		ca_uint32_t halt_rd_deq : 1; /* bits 9:9 */
		ca_uint32_t wr_to_remap_mem_en : 1; /* bits 10:10 */
		ca_uint32_t qos_remap_en : 1; /* bits 11:11 */
		ca_uint32_t en_wr_scrambler : 1; /* bits 12:12 */
		ca_uint32_t en_rd_scrambler : 1; /* bits 13:13 */
		ca_uint32_t rsrvd3 : 18;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_CTRL 0xf4328864
#define DDR_CTRL_DDR_SCH_CTRL_dft 0x01b74020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t col_size : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t row_size : 3; /* bits 6:4 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t all_bufferable : 1; /* bits 8:8 */
		ca_uint32_t all_nonbuf : 1; /* bits 9:9 */
		ca_uint32_t dis_rd_deny_err : 1; /* bits 10:10 */
		ca_uint32_t dis_wr_deny_err : 1; /* bits 11:11 */
		ca_uint32_t fair_pri_group : 1; /* bits 12:12 */
		ca_uint32_t qid_use_pri : 1; /* bits 13:13 */
		ca_uint32_t hazard_chk_port : 1; /* bits 14:14 */
		ca_uint32_t disable_hazard_chk : 1; /* bits 15:15 */
		ca_uint32_t swap_bank_bits : 4; /* bits 19:16 */
		ca_uint32_t read_interleave : 1; /* bits 20:20 */
		ca_uint32_t modifiable_buf : 1; /* bits 21:21 */
		ca_uint32_t fpga_mode : 1; /* bits 22:22 */
		ca_uint32_t fpga_dis_cs1 : 1; /* bits 23:23 */
		ca_uint32_t pctl_clk_is_sync : 1; /* bits 24:24 */
		ca_uint32_t rsrvd4 : 7;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_TIMERS 0xf4328868
#define DDR_CTRL_DDR_SCH_TIMERS_dft 0x00300b10

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t page_hit_wait : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t page_miss_wait : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t page_starving_wait : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 9;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_TIMERS_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_GROUPING 0xf432886c
#define DDR_CTRL_DDR_SCH_GROUPING_dft 0x00001414

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t max_rd_req : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t max_wr_req : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 18;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_GROUPING_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_PORT_MAX_WREQ 0xf4328870
#define DDR_CTRL_DDR_SCH_PORT_MAX_WREQ_dft 0x001e1e38

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0 : 8; /* bits 7:0 */
		ca_uint32_t p1 : 8; /* bits 15:8 */
		ca_uint32_t p2 : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_PORT_MAX_WREQ_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_PORT_MAX_RREQ 0xf4328874
#define DDR_CTRL_DDR_SCH_PORT_MAX_RREQ_dft 0x000f0f10

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0 : 8; /* bits 7:0 */
		ca_uint32_t p1 : 8; /* bits 15:8 */
		ca_uint32_t p2 : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_PORT_MAX_RREQ_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_PORT_MAX_WHEAD 0xf4328878
#define DDR_CTRL_DDR_SCH_PORT_MAX_WHEAD_dft 0x00070708

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0 : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t p1 : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t p2 : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 11;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_PORT_MAX_WHEAD_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_PORT_MAX_RHEAD 0xf432887c
#define DDR_CTRL_DDR_SCH_PORT_MAX_RHEAD_dft 0x00070708

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t p0 : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t p1 : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t p2 : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 11;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_PORT_MAX_RHEAD_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_INTERRUPT 0xf4328880
#define DDR_CTRL_DDR_SCH_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write_denied_p0 : 1; /* bits 0:0 */
		ca_uint32_t write_denied_p1 : 1; /* bits 1:1 */
		ca_uint32_t write_denied_p2 : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t read_denied_p0 : 1; /* bits 4:4 */
		ca_uint32_t read_denied_p1 : 1; /* bits 5:5 */
		ca_uint32_t read_denied_p2 : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_INTENABLE 0xf4328884
#define DDR_CTRL_DDR_SCH_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t write_deniedIE_p0 : 1; /* bits 0:0 */
		ca_uint32_t write_deniedIE_p1 : 1; /* bits 1:1 */
		ca_uint32_t write_deniedIE_p2 : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t read_deniedIE_p0 : 1; /* bits 4:4 */
		ca_uint32_t read_deniedIE_p1 : 1; /* bits 5:5 */
		ca_uint32_t read_deniedIE_p2 : 1; /* bits 6:6 */
		ca_uint32_t rsrvd2 : 25;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_FPGA_STATUS 0xf4328888
#define DDR_CTRL_DDR_SCH_FPGA_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t init_calib_complete : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_FPGA_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DEBUG_INFO1 0xf432888c
#define DDR_CTRL_DDR_SCH_DEBUG_INFO1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rd_arb_req_cntr_p0 : 8; /* bits 7:0 */
		ca_uint32_t rd_arb_req_cntr_p1 : 8; /* bits 15:8 */
		ca_uint32_t rd_arb_req_cntr_p2 : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DEBUG_INFO1_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DEBUG_INFO2 0xf4328890
#define DDR_CTRL_DDR_SCH_DEBUG_INFO2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wr_arb_req_cntr_p0 : 8; /* bits 7:0 */
		ca_uint32_t wr_arb_req_cntr_p1 : 8; /* bits 15:8 */
		ca_uint32_t wr_arb_req_cntr_p2 : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DEBUG_INFO2_t;
#endif /* !__ASSEMBLER__ */

#define DDR_CTRL_DDR_SCH_DEBUG_INFO3 0xf4328894
#define DDR_CTRL_DDR_SCH_DEBUG_INFO3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t deq_rll_available : 1; /* bits 0:0 */
		ca_uint32_t deq_wll_available : 1; /* bits 1:1 */
		ca_uint32_t deq_rresp_fifo_empty : 1; /* bits 2:2 */
		ca_uint32_t return_rd_mem_empty : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t deq_cmd_fifo_rptr : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t deq_cmd_fifo_wptr : 3; /* bits 14:12 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t deq_wd_fifo_rptr : 4; /* bits 19:16 */
		ca_uint32_t deq_wd_fifo_wptr : 4; /* bits 23:20 */
		ca_uint32_t rsrvd4 : 8;
	} bf;
	ca_uint32_t wrd;
} DDR_CTRL_DDR_SCH_DEBUG_INFO3_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DDR_SCH */
#ifndef __ASSEMBLER__
typedef struct {
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_t
	  SECURED_DDR_REGION0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION0_EN_t
	  SECURED_DDR_REGION0_EN; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_t
	  SECURED_DDR_REGION1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION1_EN_t
	  SECURED_DDR_REGION1_EN; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_t
	  SECURED_DDR_REGION2; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION2_EN_t
	  SECURED_DDR_REGION2_EN; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_t
	  SECURED_DDR_REGION3; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION3_EN_t
	  SECURED_DDR_REGION3_EN; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_t
	  SECURED_DDR_REGION4; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION4_EN_t
	  SECURED_DDR_REGION4_EN; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_t
	  SECURED_DDR_REGION5; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION5_EN_t
	  SECURED_DDR_REGION5_EN; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_t
	  SECURED_DDR_REGION6; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION6_EN_t
	  SECURED_DDR_REGION6_EN; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_t
	  SECURED_DDR_REGION7; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	DDR_CTRL_DDR_SCH_SECURED_DDR_REGION7_EN_t
	  SECURED_DDR_REGION7_EN; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT0_t
	  DENIED_ACCESS_PORT0; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID0_t DENIED_ACCESS_ID0; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT1_t
	  DENIED_ACCESS_PORT1; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID1_t DENIED_ACCESS_ID1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	DDR_CTRL_DDR_SCH_DENIED_ACCESS_PORT2_t
	  DENIED_ACCESS_PORT2; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	DDR_CTRL_DDR_SCH_DENIED_ACCESS_ID2_t DENIED_ACCESS_ID2; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	DDR_CTRL_DDR_SCH_QOS_REMAP_TABLE_t QOS_REMAP_TABLE; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	DDR_CTRL_DDR_SCH_SCRAMBLE_t SCRAMBLE; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	DDR_CTRL_DDR_SCH_CTRL1_t CTRL1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	DDR_CTRL_DDR_SCH_CTRL_t CTRL; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	DDR_CTRL_DDR_SCH_TIMERS_t TIMERS; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	DDR_CTRL_DDR_SCH_GROUPING_t GROUPING; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	DDR_CTRL_DDR_SCH_PORT_MAX_WREQ_t PORT_MAX_WREQ; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	DDR_CTRL_DDR_SCH_PORT_MAX_RREQ_t PORT_MAX_RREQ; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	DDR_CTRL_DDR_SCH_PORT_MAX_WHEAD_t PORT_MAX_WHEAD; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	DDR_CTRL_DDR_SCH_PORT_MAX_RHEAD_t PORT_MAX_RHEAD; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	DDR_CTRL_DDR_SCH_INTERRUPT_t INTERRUPT; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	DDR_CTRL_DDR_SCH_INTENABLE_t INTENABLE; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	DDR_CTRL_DDR_SCH_FPGA_STATUS_t FPGA_STATUS; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	DDR_CTRL_DDR_SCH_DEBUG_INFO1_t DEBUG_INFO1; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	DDR_CTRL_DDR_SCH_DEBUG_INFO2_t DEBUG_INFO2; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	DDR_CTRL_DDR_SCH_DEBUG_INFO3_t DEBUG_INFO3; /* addr: 0x00000094 */
} APB2_DDR_CTRL_DDR_SCH_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DDR_CTRL */

#ifndef __ASSEMBLER__
typedef struct {
	APB2_DDR_CTRL_PCTLTOP_t PCTLTOP; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[237];
	APB2_DDR_CTRL_DDR_SCH_t DDR_SCH; /* addr: 0x00000800 */
} APB2_DDR_CTRL_t;
#endif /* !__ASSEMBLER__ */

/*
 * PER
 */

#define PER_SOFT_RESET 0xf4329000
#define PER_SOFT_RESET_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t soft_reset : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SOFT_RESET_t;
#endif /* !__ASSEMBLER__ */

#define PER_PERIPHERAL_INTERRUPT_0 0xf4329004
#define PER_PERIPHERAL_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t soft0i : 1; /* bits 0:0 */
		ca_uint32_t soft1i : 1; /* bits 1:1 */
		ca_uint32_t tmr1i : 1; /* bits 2:2 */
		ca_uint32_t tmr2i : 1; /* bits 3:3 */
		ca_uint32_t wdti : 1; /* bits 4:4 */
		ca_uint32_t spii : 1; /* bits 5:5 */
		ca_uint32_t gpio0i : 1; /* bits 6:6 */
		ca_uint32_t gpio1i : 1; /* bits 7:7 */
		ca_uint32_t gpio2i : 1; /* bits 8:8 */
		ca_uint32_t gpio3i : 1; /* bits 9:9 */
		ca_uint32_t gpio4i : 1; /* bits 10:10 */
		ca_uint32_t biwi : 1; /* bits 11:11 */
		ca_uint32_t mdioi : 1; /* bits 12:12 */
		ca_uint32_t trng0i : 1; /* bits 13:13 */
		ca_uint32_t trng1i : 1; /* bits 14:14 */
		ca_uint32_t cspii : 1; /* bits 15:15 */
		ca_uint32_t ldma4i : 1; /* bits 16:16 */
		ca_uint32_t ldma5i : 1; /* bits 17:17 */
		ca_uint32_t ldma6i : 1; /* bits 18:18 */
		ca_uint32_t ldma7i : 1; /* bits 19:19 */
		ca_uint32_t taroko_timer0i : 1; /* bits 20:20 */
		ca_uint32_t taroko_timer1i : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} PER_PERIPHERAL_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_PERIPHERAL_INTENABLE_0 0xf4329008
#define PER_PERIPHERAL_INTENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t soft0e : 1; /* bits 0:0 */
		ca_uint32_t soft1e : 1; /* bits 1:1 */
		ca_uint32_t tmr1e : 1; /* bits 2:2 */
		ca_uint32_t tmr2e : 1; /* bits 3:3 */
		ca_uint32_t wdte : 1; /* bits 4:4 */
		ca_uint32_t spie : 1; /* bits 5:5 */
		ca_uint32_t gpio0e : 1; /* bits 6:6 */
		ca_uint32_t gpio1e : 1; /* bits 7:7 */
		ca_uint32_t gpio2e : 1; /* bits 8:8 */
		ca_uint32_t gpio3e : 1; /* bits 9:9 */
		ca_uint32_t gpio4e : 1; /* bits 10:10 */
		ca_uint32_t biwe : 1; /* bits 11:11 */
		ca_uint32_t mdioe : 1; /* bits 12:12 */
		ca_uint32_t trng0e : 1; /* bits 13:13 */
		ca_uint32_t trng1e : 1; /* bits 14:14 */
		ca_uint32_t cspie : 1; /* bits 15:15 */
		ca_uint32_t ldma4e : 1; /* bits 16:16 */
		ca_uint32_t ldma5e : 1; /* bits 17:17 */
		ca_uint32_t ldma6e : 1; /* bits 18:18 */
		ca_uint32_t ldma7e : 1; /* bits 19:19 */
		ca_uint32_t taroko_timer0e : 1; /* bits 20:20 */
		ca_uint32_t taroko_timer1e : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} PER_PERIPHERAL_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_PERIPHERAL_INTERRUPT_1 0xf432900c
#define PER_PERIPHERAL_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t soft0i : 1; /* bits 0:0 */
		ca_uint32_t soft1i : 1; /* bits 1:1 */
		ca_uint32_t tmr1i : 1; /* bits 2:2 */
		ca_uint32_t tmr2i : 1; /* bits 3:3 */
		ca_uint32_t wdti : 1; /* bits 4:4 */
		ca_uint32_t spii : 1; /* bits 5:5 */
		ca_uint32_t gpio0i : 1; /* bits 6:6 */
		ca_uint32_t gpio1i : 1; /* bits 7:7 */
		ca_uint32_t gpio2i : 1; /* bits 8:8 */
		ca_uint32_t gpio3i : 1; /* bits 9:9 */
		ca_uint32_t gpio4i : 1; /* bits 10:10 */
		ca_uint32_t biwi : 1; /* bits 11:11 */
		ca_uint32_t mdioi : 1; /* bits 12:12 */
		ca_uint32_t trng0i : 1; /* bits 13:13 */
		ca_uint32_t trng1i : 1; /* bits 14:14 */
		ca_uint32_t cspii : 1; /* bits 15:15 */
		ca_uint32_t ldma4i : 1; /* bits 16:16 */
		ca_uint32_t ldma5i : 1; /* bits 17:17 */
		ca_uint32_t ldma6i : 1; /* bits 18:18 */
		ca_uint32_t ldma7i : 1; /* bits 19:19 */
		ca_uint32_t taroko_timer0i : 1; /* bits 20:20 */
		ca_uint32_t taroko_timer1i : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} PER_PERIPHERAL_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_PERIPHERAL_INTENABLE_1 0xf4329010
#define PER_PERIPHERAL_INTENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t soft0e : 1; /* bits 0:0 */
		ca_uint32_t soft1e : 1; /* bits 1:1 */
		ca_uint32_t tmr1e : 1; /* bits 2:2 */
		ca_uint32_t tmr2e : 1; /* bits 3:3 */
		ca_uint32_t wdte : 1; /* bits 4:4 */
		ca_uint32_t spie : 1; /* bits 5:5 */
		ca_uint32_t gpio0e : 1; /* bits 6:6 */
		ca_uint32_t gpio1e : 1; /* bits 7:7 */
		ca_uint32_t gpio2e : 1; /* bits 8:8 */
		ca_uint32_t gpio3e : 1; /* bits 9:9 */
		ca_uint32_t gpio4e : 1; /* bits 10:10 */
		ca_uint32_t biwe : 1; /* bits 11:11 */
		ca_uint32_t mdioe : 1; /* bits 12:12 */
		ca_uint32_t trng0e : 1; /* bits 13:13 */
		ca_uint32_t trng1e : 1; /* bits 14:14 */
		ca_uint32_t cspie : 1; /* bits 15:15 */
		ca_uint32_t ldma4e : 1; /* bits 16:16 */
		ca_uint32_t ldma5e : 1; /* bits 17:17 */
		ca_uint32_t ldma6e : 1; /* bits 18:18 */
		ca_uint32_t ldma7e : 1; /* bits 19:19 */
		ca_uint32_t taroko_timer0e : 1; /* bits 20:20 */
		ca_uint32_t taroko_timer1e : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} PER_PERIPHERAL_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_IRQ_SOFT1 0xf4329014
#define PER_IRQ_SOFT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t softiSet : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_IRQ_SOFT1_t;
#endif /* !__ASSEMBLER__ */

#define PER_IRQ_SOFT0 0xf4329018
#define PER_IRQ_SOFT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t softiSet : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_IRQ_SOFT0_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_CTRL 0xf432901c
#define PER_WDT_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdten : 1; /* bits 0:0 */
		ca_uint32_t rsten : 1; /* bits 1:1 */
		ca_uint32_t clksel : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define clksel_perdiv 0x0
#define clksel_peronly 0x1
#define rsten_DIS 0x0
#define rsten_ena 0x1
#define wdten_DIS 0x0
#define wdten_ENA 0x1

#define PER_WDT_PS 0xf4329020
#define PER_WDT_PS_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdtps : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_WDT_PS_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_DIV 0xf4329024
#define PER_WDT_DIV_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t div_load : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_DIV_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_LD 0xf4329028
#define PER_WDT_LD_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdtld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_WDT_LD_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_LOADE 0xf432902c
#define PER_WDT_LOADE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t update_wdt : 1; /* bits 0:0 */
		ca_uint32_t update_pre : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_LOADE_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_CNT 0xf4329030
#define PER_WDT_CNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdtcount : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_WDT_CNT_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_IE_0 0xf4329034
#define PER_WDT_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdte : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_INT_0 0xf4329038
#define PER_WDT_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdti : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_STAT_0 0xf432903c
#define PER_WDT_STAT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdts : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_STAT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_IE_1 0xf4329040
#define PER_WDT_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdte : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_INT_1 0xf4329044
#define PER_WDT_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdti : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_STAT_1 0xf4329048
#define PER_WDT_STAT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdts : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_STAT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_WDT_TST 0xf432904c
#define PER_WDT_TST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t testmode : 1; /* bits 0:0 */
		ca_uint32_t testclken : 1; /* bits 1:1 */
		ca_uint32_t testreset : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} PER_WDT_TST_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_LD1 0xf4329050
#define PER_TMR_LD1_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t load1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_TMR_LD1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_CTRL1 0xf4329054
#define PER_TMR_CTRL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t clksel1 : 2; /* bits 3:2 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t rlmode1 : 1; /* bits 6:6 */
		ca_uint32_t timen1 : 1; /* bits 7:7 */
		ca_uint32_t rsrvd3 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define timen1_DIS 0x0
#define timen1_ENA 0x1
#define rlmode1_ROLL 0x0
#define rlmode1_LOAD 0x1
#define clksel1_direct 0x0
#define clksel1_dv64 0x1
#define clksel1_dv1024 0x2
#define clksel1_dv4096 0x3

#define PER_TMR_CNT1 0xf4329058
#define PER_TMR_CNT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_TMR_CNT1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_IE1_0 0xf432905c
#define PER_TMR_IE1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1e : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_IE1_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_IE1_1 0xf4329060
#define PER_TMR_IE1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1e : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_IE1_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_INT1_0 0xf4329064
#define PER_TMR_INT1_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1i : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_INT1_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_INT1_1 0xf4329068
#define PER_TMR_INT1_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1i : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_INT1_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_STAT1 0xf432906c
#define PER_TMR_STAT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1s : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_STAT1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_LD2 0xf4329070
#define PER_TMR_LD2_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t load2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_TMR_LD2_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_CTRL2 0xf4329074
#define PER_TMR_CTRL2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t clksel2 : 2; /* bits 3:2 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t rlmode2 : 1; /* bits 6:6 */
		ca_uint32_t timen2 : 1; /* bits 7:7 */
		ca_uint32_t rsrvd3 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_CTRL2_t;
#endif /* !__ASSEMBLER__ */

#define timen2_DIS 0x0
#define timen2_ENA 0x1
#define rlmode2_ROLL 0x0
#define rlmode2_LOAD 0x1
#define clksel2_direct 0x0
#define clksel2_dv64 0x1
#define clksel2_dv1024 0x2
#define clksel2_dv4096 0x3

#define PER_TMR_CNT2 0xf4329078
#define PER_TMR_CNT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_TMR_CNT2_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_IE2_0 0xf432907c
#define PER_TMR_IE2_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1e : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_IE2_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_IE2_1 0xf4329080
#define PER_TMR_IE2_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1e : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_IE2_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_INT2_0 0xf4329084
#define PER_TMR_INT2_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1i : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_INT2_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_INT2_1 0xf4329088
#define PER_TMR_INT2_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr1i : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_INT2_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_STAT2 0xf432908c
#define PER_TMR_STAT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tmr2s : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_STAT2_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_LOADE 0xf4329090
#define PER_TMR_LOADE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t update_tmr1 : 1; /* bits 1:1 */
		ca_uint32_t update_tmr2 : 1; /* bits 2:2 */
		ca_uint32_t rsrvd2 : 29;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_LOADE_t;
#endif /* !__ASSEMBLER__ */

#define PER_TMR_TST 0xf4329094
#define PER_TMR_TST_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t testclksel : 1; /* bits 0:0 */
		ca_uint32_t test1 : 1; /* bits 1:1 */
		ca_uint32_t test2 : 1; /* bits 2:2 */
		ca_uint32_t pps_timer1_en : 1; /* bits 3:3 */
		ca_uint32_t pps_timer2_en : 1; /* bits 4:4 */
		ca_uint32_t pps_from_timer : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} PER_TMR_TST_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_CLK 0xf4329098
#define PER_SPI_CLK_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t counter_load : 16; /* bits 15:0 */
		ca_uint32_t ssp_igap : 8; /* bits 23:16 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_CLK_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_CFG 0xf432909c
#define PER_SPI_CFG_dft 0x3f090000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t command_cyc : 1; /* bits 0:0 */
		ca_uint32_t read_write : 1; /* bits 1:1 */
		ca_uint32_t micro_wire_cs_sel : 5; /* bits 6:2 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sel_ssp_cs : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t ssp_cmd_cnt : 7; /* bits 22:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t pre_ssp_dat_cnt : 6; /* bits 29:24 */
		ca_uint32_t sspcs_en3_gpio : 1; /* bits 30:30 */
		ca_uint32_t sspcs_en4_gpio : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_CFG_t;
#endif /* !__ASSEMBLER__ */

#define micro_wire_cs_sel_SPI 0x0
#define micro_wire_cs_sel_MWR 0x1
#define read_write_WR 0x0
#define read_write_RD 0x1
#define command_cyc_NORM 0x0
#define command_cyc_CONLY 0x1

#define PER_SPI_MODE 0xf43290a0
#define PER_SPI_MODE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cfg : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_MODE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_CTRL 0xf43290a4
#define PER_SPI_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sspdone : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t sspstart : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_CA0 0xf43290a8
#define PER_SPI_CA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_cmd_addr0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_CA0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_CA1 0xf43290ac
#define PER_SPI_CA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_cmd_addr1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_CA1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_CA2 0xf43290b0
#define PER_SPI_CA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_cmd_addr2 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_CA2_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_WDAT1 0xf43290b4
#define PER_SPI_WDAT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_wdata1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_WDAT1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_WDAT0 0xf43290b8
#define PER_SPI_WDAT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_wdata0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_WDAT0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_RDAT1 0xf43290bc
#define PER_SPI_RDAT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_rdata1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_RDAT1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_RDAT0 0xf43290c0
#define PER_SPI_RDAT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssp_rdata0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPI_RDAT0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_IE_0 0xf43290c4
#define PER_SPI_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spie : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_INT_0 0xf43290c8
#define PER_SPI_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sspi : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_IE_1 0xf43290cc
#define PER_SPI_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spie : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_INT_1 0xf43290d0
#define PER_SPI_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sspi : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPI_STAT 0xf43290d4
#define PER_SPI_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ssps : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SPI_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_CFG 0xf43290d8
#define PER_MDIO_CFG_dft 0x10000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdio_manual : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t mdio_pre_scale : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define mdio_manual_AUTO 0x0
#define mdio_manual_MAN 0x1

#define PER_MDIO_ADDR 0xf43290dc
#define PER_MDIO_ADDR_dft 0x00080000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdio_addr : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t mdio_offset : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t mdio_rd_wr : 1; /* bits 15:15 */
		ca_uint32_t mdio_st : 1; /* bits 16:16 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t mdio_op : 2; /* bits 19:18 */
		ca_uint32_t rsrvd4 : 12;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_ADDR_t;
#endif /* !__ASSEMBLER__ */

#define mdio_op_ADDR_WR 0x0
#define mdio_op_WR 0x1
#define mdio_op_RD_INC 0x2
#define mdio_op_RD 0x3
#define mdio_st_Direct 0x0
#define mdio_st_Indirect 0x1
#define mdio_rd_wr_WR 0x0
#define mdio_rd_wr_RD 0x1
#define mdio_addr_NORM 0x0
#define mdio_addr_CONLY 0x1

#define PER_MDIO_WRDATA 0xf43290e0
#define PER_MDIO_WRDATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdio_wrdata : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_WRDATA_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_RDDATA 0xf43290e4
#define PER_MDIO_RDDATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdio_rddata : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_RDDATA_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_CTRL 0xf43290e8
#define PER_MDIO_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdiodone : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t mdiostart : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_AUTO_CFG 0xf43290ec
#define PER_MDIO_AUTO_CFG_dft 0x00001f00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t auto_mdio_phy_start_idx : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t auto_mdio_phy_end_idx : 6; /* bits 13:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t auto_mdio_gpio : 1; /* bits 15:15 */
		ca_uint32_t auto_mdio_reg_to_read : 5; /* bits 20:16 */
		ca_uint32_t rsrvd3 : 11;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_AUTO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define auto_mdio_gpio_32 0x0
#define auto_mdio_gpio_64 0x1

#define PER_MDIO_AUTO_INTV 0xf43290f0
#define PER_MDIO_AUTO_INTV_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t poll_wait_cycles : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_AUTO_INTV_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_AUTO_RM 0xf43290f4
#define PER_MDIO_AUTO_RM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t auto_mdio_bit_invert : 16; /* bits 15:0 */
		ca_uint32_t auto_mdio_bit_mask : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_AUTO_RM_t;
#endif /* !__ASSEMBLER__ */

#define auto_mdio_bit_mask_UNMASKED 0x0
#define auto_mdio_bit_mask_MASKED 0x1
#define auto_mdio_bit_invert_NONINV 0x0
#define auto_mdio_bit_invert_INV 0x1

#define PER_MDIO_AUTO_AADDR 0xf43290f8
#define PER_MDIO_AUTO_AADDR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t auto_mdio_phy_alert_addr : 5; /* bits 4:0 */
		ca_uint32_t auto_mdio_phy_alert_range : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 10;
		ca_uint32_t auto_mdio_rddata : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_AUTO_AADDR_t;
#endif /* !__ASSEMBLER__ */

#define auto_mdio_phy_alert_range_low 0x0
#define auto_mdio_phy_alert_range_hi 0x1

#define PER_MDIO_ENTAB0 0xf43290fc
#define PER_MDIO_ENTAB0_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slot_enable0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_ENTAB0_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_ENTAB1 0xf4329100
#define PER_MDIO_ENTAB1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t slot_enable1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_ENTAB1_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_ITAB0 0xf4329104
#define PER_MDIO_ITAB0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_ITAB0_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_ITAB1 0xf4329108
#define PER_MDIO_ITAB1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_ITAB1_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_IE_0 0xf432910c
#define PER_MDIO_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdioe : 1; /* bits 0:0 */
		ca_uint32_t autopolle : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_INT_0 0xf4329110
#define PER_MDIO_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdioi : 1; /* bits 0:0 */
		ca_uint32_t autopolli : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_IE_1 0xf4329114
#define PER_MDIO_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdioe : 1; /* bits 0:0 */
		ca_uint32_t autopolle : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_INT_1 0xf4329118
#define PER_MDIO_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdioi : 1; /* bits 0:0 */
		ca_uint32_t autopolli : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_MDIO_STAT 0xf432911c
#define PER_MDIO_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mdios : 1; /* bits 0:0 */
		ca_uint32_t autopolls : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_MDIO_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_CFG 0xf4329120
#define PER_BIW_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t core_en : 1; /* bits 0:0 */
		ca_uint32_t biw_soft_reset : 1; /* bits 1:1 */
		ca_uint32_t busywait_en : 1; /* bits 2:2 */
		ca_uint32_t stretch_en : 1; /* bits 3:3 */
		ca_uint32_t arb_en : 1; /* bits 4:4 */
		ca_uint32_t clksync_en : 1; /* bits 5:5 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t spike_cnt : 4; /* bits 11:8 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t prer : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PER_BIW_CFG_t;
#endif /* !__ASSEMBLER__ */

#define core_en_DIS 0x0
#define core_en_ENA 0x1

#define PER_BIW_CTRL 0xf4329124
#define PER_BIW_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t biwdone : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t ack_in : 1; /* bits 3:3 */
		ca_uint32_t write : 1; /* bits 4:4 */
		ca_uint32_t read : 1; /* bits 5:5 */
		ca_uint32_t stop : 1; /* bits 6:6 */
		ca_uint32_t start : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_TXR 0xf4329128
#define PER_BIW_TXR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_TXR_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_RXR 0xf432912c
#define PER_BIW_RXR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_RXR_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_ACK 0xf4329130
#define PER_BIW_ACK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t al : 1; /* bits 0:0 */
		ca_uint32_t biw_busy : 1; /* bits 1:1 */
		ca_uint32_t ack_out : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_ACK_t;
#endif /* !__ASSEMBLER__ */

#define biw_busy_FREE 0x0
#define biw_busy_BUSY 0x1
#define al_OK 0x0
#define al_LOST 0x1

#define PER_BIW_IE_0 0xf4329134
#define PER_BIW_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t biwe : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_INT_0 0xf4329138
#define PER_BIW_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t biwi : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_IE_1 0xf432913c
#define PER_BIW_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t biwe : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_INT_1 0xf4329140
#define PER_BIW_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t biwi : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_BIW_STAT 0xf4329144
#define PER_BIW_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t biws : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_BIW_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_CFG 0xf4329148
#define PER_UART0_CFG_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t char_cnt : 2; /* bits 1:0 */
		ca_uint32_t uart_stop_2bit : 1; /* bits 2:2 */
		ca_uint32_t even_parity_sel : 1; /* bits 3:3 */
		ca_uint32_t uart_parity_en : 1; /* bits 4:4 */
		ca_uint32_t tx_sm_enable : 1; /* bits 5:5 */
		ca_uint32_t rx_sm_enable : 1; /* bits 6:6 */
		ca_uint32_t uart_en : 1; /* bits 7:7 */
		ca_uint32_t baud_count : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} PER_UART0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define uart_en_DIS 0x0
#define uart_en_ENA 0x1
#define rx_sm_enable_DIS 0x0
#define rx_sm_enable_ENA 0x1
#define tx_sm_enable_DIS 0x0
#define tx_sm_enable_ENA 0x1
#define uart_parity_en_DIS 0x0
#define uart_parity_en_ENA 0x1
#define even_parity_sel_ODD 0x0
#define even_parity_sel_EvEN 0x1
#define uart_stop_2bit_1 0x0
#define uart_stop_2bit_2 0x1
#define char_cnt_5 0x0
#define char_cnt_6 0x1
#define char_cnt_7 0x2
#define char_cnt_8 0x3

#define PER_UART0_FC 0xf432914c
#define PER_UART0_FC_dft 0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_wm : 6; /* bits 5:0 */
		ca_uint32_t inv_cts : 1; /* bits 6:6 */
		ca_uint32_t no_cts : 1; /* bits 7:7 */
		ca_uint32_t cts_reg : 1; /* bits 8:8 */
		ca_uint32_t inv_rts : 1; /* bits 9:9 */
		ca_uint32_t no_rts : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_FC_t;
#endif /* !__ASSEMBLER__ */

#define no_rts_ENA 0x0
#define no_rts_DIS 0x1
#define inv_rts_POS 0x0
#define inv_rts_NEG 0x1
#define no_cts_ENA 0x0
#define no_cts_DIS 0x1
#define inv_cts_POS 0x0
#define inv_cts_NEG 0x1

#define PER_UART0_RX_SAMPLE 0xf4329150
#define PER_UART0_RX_SAMPLE_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_center : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_TUN 0xf4329154
#define PER_UART0_TUN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fine_tune_ctl : 8; /* bits 7:0 */
		ca_uint32_t rx_tune_add : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t tx_fine_tune_ctl : 8; /* bits 23:16 */
		ca_uint32_t tx_tune_add : 1; /* bits 24:24 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_TUN_t;
#endif /* !__ASSEMBLER__ */

#define tx_tune_add_FASTER 0x0
#define tx_tune_add_SLOWER 0x1
#define rx_tune_add_FASTER 0x0
#define rx_tune_add_SLOWER 0x1

#define PER_UART0_TXDAT 0xf4329158
#define PER_UART0_TXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_data : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_TXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_RXDAT 0xf432915c
#define PER_UART0_RXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_data_lat : 8; /* bits 7:0 */
		ca_uint32_t rx_data_vld : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_RXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_INFO 0xf4329160
#define PER_UART0_INFO_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fifo_full : 1; /* bits 0:0 */
		ca_uint32_t rx_fifo_empty : 1; /* bits 1:1 */
		ca_uint32_t tx_fifo_full : 1; /* bits 2:2 */
		ca_uint32_t tx_fifo_empty : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_IE_0 0xf4329164
#define PER_UART0_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_IE_1 0xf4329168
#define PER_UART0_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_INT_0 0xf432916c
#define PER_UART0_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_INT_1 0xf4329170
#define PER_UART0_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART0_STAT 0xf4329174
#define PER_UART0_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruns : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_errs : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_errs : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruns : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruns : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptys : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptys : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART0_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_CFG 0xf4329178
#define PER_UART1_CFG_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t char_cnt : 2; /* bits 1:0 */
		ca_uint32_t uart_stop_2bit : 1; /* bits 2:2 */
		ca_uint32_t even_parity_sel : 1; /* bits 3:3 */
		ca_uint32_t uart_parity_en : 1; /* bits 4:4 */
		ca_uint32_t tx_sm_enable : 1; /* bits 5:5 */
		ca_uint32_t rx_sm_enable : 1; /* bits 6:6 */
		ca_uint32_t uart_en : 1; /* bits 7:7 */
		ca_uint32_t baud_count : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} PER_UART1_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_FC 0xf432917c
#define PER_UART1_FC_dft 0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_wm : 6; /* bits 5:0 */
		ca_uint32_t inv_cts : 1; /* bits 6:6 */
		ca_uint32_t no_cts : 1; /* bits 7:7 */
		ca_uint32_t cts_reg : 1; /* bits 8:8 */
		ca_uint32_t inv_rts : 1; /* bits 9:9 */
		ca_uint32_t no_rts : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_FC_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_RX_SAMPLE 0xf4329180
#define PER_UART1_RX_SAMPLE_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_center : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_TUN 0xf4329184
#define PER_UART1_TUN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fine_tune_ctl : 8; /* bits 7:0 */
		ca_uint32_t rx_tune_add : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t tx_fine_tune_ctl : 8; /* bits 23:16 */
		ca_uint32_t tx_tune_add : 1; /* bits 24:24 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_TUN_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_TXDAT 0xf4329188
#define PER_UART1_TXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_data : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_TXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_RXDAT 0xf432918c
#define PER_UART1_RXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_data_lat : 8; /* bits 7:0 */
		ca_uint32_t rx_data_vld : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_RXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_INFO 0xf4329190
#define PER_UART1_INFO_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fifo_full : 1; /* bits 0:0 */
		ca_uint32_t rx_fifo_empty : 1; /* bits 1:1 */
		ca_uint32_t tx_fifo_full : 1; /* bits 2:2 */
		ca_uint32_t tx_fifo_empty : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_IE_0 0xf4329194
#define PER_UART1_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_IE_1 0xf4329198
#define PER_UART1_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_INT_0 0xf432919c
#define PER_UART1_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_INT_1 0xf43291a0
#define PER_UART1_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART1_STAT 0xf43291a4
#define PER_UART1_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruns : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_errs : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_errs : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruns : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruns : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptys : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptys : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART1_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_CFG 0xf43291a8
#define PER_UART2_CFG_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t char_cnt : 2; /* bits 1:0 */
		ca_uint32_t uart_stop_2bit : 1; /* bits 2:2 */
		ca_uint32_t even_parity_sel : 1; /* bits 3:3 */
		ca_uint32_t uart_parity_en : 1; /* bits 4:4 */
		ca_uint32_t tx_sm_enable : 1; /* bits 5:5 */
		ca_uint32_t rx_sm_enable : 1; /* bits 6:6 */
		ca_uint32_t uart_en : 1; /* bits 7:7 */
		ca_uint32_t baud_count : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} PER_UART2_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_FC 0xf43291ac
#define PER_UART2_FC_dft 0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_wm : 6; /* bits 5:0 */
		ca_uint32_t inv_cts : 1; /* bits 6:6 */
		ca_uint32_t no_cts : 1; /* bits 7:7 */
		ca_uint32_t cts_reg : 1; /* bits 8:8 */
		ca_uint32_t inv_rts : 1; /* bits 9:9 */
		ca_uint32_t no_rts : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_FC_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_RX_SAMPLE 0xf43291b0
#define PER_UART2_RX_SAMPLE_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_center : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_TUN 0xf43291b4
#define PER_UART2_TUN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fine_tune_ctl : 8; /* bits 7:0 */
		ca_uint32_t rx_tune_add : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t tx_fine_tune_ctl : 8; /* bits 23:16 */
		ca_uint32_t tx_tune_add : 1; /* bits 24:24 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_TUN_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_TXDAT 0xf43291b8
#define PER_UART2_TXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_data : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_TXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_RXDAT 0xf43291bc
#define PER_UART2_RXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_data_lat : 8; /* bits 7:0 */
		ca_uint32_t rx_data_vld : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_RXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_INFO 0xf43291c0
#define PER_UART2_INFO_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fifo_full : 1; /* bits 0:0 */
		ca_uint32_t rx_fifo_empty : 1; /* bits 1:1 */
		ca_uint32_t tx_fifo_full : 1; /* bits 2:2 */
		ca_uint32_t tx_fifo_empty : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_IE_0 0xf43291c4
#define PER_UART2_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_IE_1 0xf43291c8
#define PER_UART2_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_INT_0 0xf43291cc
#define PER_UART2_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_INT_1 0xf43291d0
#define PER_UART2_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART2_STAT 0xf43291d4
#define PER_UART2_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruns : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_errs : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_errs : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruns : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruns : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptys : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptys : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART2_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_CFG 0xf43291d8
#define PER_UART3_CFG_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t char_cnt : 2; /* bits 1:0 */
		ca_uint32_t uart_stop_2bit : 1; /* bits 2:2 */
		ca_uint32_t even_parity_sel : 1; /* bits 3:3 */
		ca_uint32_t uart_parity_en : 1; /* bits 4:4 */
		ca_uint32_t tx_sm_enable : 1; /* bits 5:5 */
		ca_uint32_t rx_sm_enable : 1; /* bits 6:6 */
		ca_uint32_t uart_en : 1; /* bits 7:7 */
		ca_uint32_t baud_count : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} PER_UART3_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_FC 0xf43291dc
#define PER_UART3_FC_dft 0x00000588

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_wm : 6; /* bits 5:0 */
		ca_uint32_t inv_cts : 1; /* bits 6:6 */
		ca_uint32_t no_cts : 1; /* bits 7:7 */
		ca_uint32_t cts_reg : 1; /* bits 8:8 */
		ca_uint32_t inv_rts : 1; /* bits 9:9 */
		ca_uint32_t no_rts : 1; /* bits 10:10 */
		ca_uint32_t rsrvd1 : 21;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_FC_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_RX_SAMPLE 0xf43291e0
#define PER_UART3_RX_SAMPLE_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_center : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_RX_SAMPLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_TUN 0xf43291e4
#define PER_UART3_TUN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fine_tune_ctl : 8; /* bits 7:0 */
		ca_uint32_t rx_tune_add : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t tx_fine_tune_ctl : 8; /* bits 23:16 */
		ca_uint32_t tx_tune_add : 1; /* bits 24:24 */
		ca_uint32_t rsrvd2 : 7;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_TUN_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_TXDAT 0xf43291e8
#define PER_UART3_TXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_data : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_TXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_RXDAT 0xf43291ec
#define PER_UART3_RXDAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_data_lat : 8; /* bits 7:0 */
		ca_uint32_t rx_data_vld : 1; /* bits 8:8 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_RXDAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_INFO 0xf43291f0
#define PER_UART3_INFO_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fifo_full : 1; /* bits 0:0 */
		ca_uint32_t rx_fifo_empty : 1; /* bits 1:1 */
		ca_uint32_t tx_fifo_full : 1; /* bits 2:2 */
		ca_uint32_t tx_fifo_empty : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_INFO_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_IE_0 0xf43291f4
#define PER_UART3_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_IE_1 0xf43291f8
#define PER_UART3_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overrune : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erre : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erre : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overrune : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underrune : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptye : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptye : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_INT_0 0xf43291fc
#define PER_UART3_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_INT_1 0xf4329200
#define PER_UART3_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruni : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_erri : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_erri : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruni : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruni : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptyi : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptyi : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_UART3_STAT 0xf4329204
#define PER_UART3_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fifo_overruns : 1; /* bits 0:0 */
		ca_uint32_t rx_stop_errs : 1; /* bits 1:1 */
		ca_uint32_t rx_parity_errs : 1; /* bits 2:2 */
		ca_uint32_t rx_fifo_overruns : 1; /* bits 3:3 */
		ca_uint32_t rx_fifo_underruns : 1; /* bits 4:4 */
		ca_uint32_t tx_fifo_emptys : 1; /* bits 5:5 */
		ca_uint32_t rx_fifo_nonemptys : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} PER_UART3_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_TOD_CFG 0xf4329208
#define PER_TOD_CFG_dft 0x00000026

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tod_counter : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t tod_en : 1; /* bits 7:7 */
		ca_uint32_t tod_uart : 2; /* bits 9:8 */
		ca_uint32_t rsrvd2 : 22;
	} bf;
	ca_uint32_t wrd;
} PER_TOD_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_TOD_MEM 0xf4329240
#define PER_TOD_MEM_STRIDE 4
#define PER_TOD_MEM_COUNT 16
#define PER_TOD_MEM_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tod_bst_mem : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_TOD_MEM_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO0_CFG 0xf4329280
#define PER_GPIO0_CFG_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopmod : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_CFG_t;
#endif /* !__ASSEMBLER__ */

#define iopmod_OUT 0x0
#define iopmod_IN 0x1

#define PER_GPIO0_OUT 0xf4329284
#define PER_GPIO0_OUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dataout : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_OUT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO0_IN 0xf4329288
#define PER_GPIO0_IN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopdata : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_IN_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO0_LVL 0xf432928c
#define PER_GPIO0_LVL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t level : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_LVL_t;
#endif /* !__ASSEMBLER__ */

#define level_LOW 0x0
#define level_HIGH 0x1

#define PER_GPIO0_EDGE 0xf4329290
#define PER_GPIO0_EDGE_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_edge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_EDGE_t;
#endif /* !__ASSEMBLER__ */

#define i_edge_LOW 0x0
#define i_edge_HIGH 0x1

#define PER_GPIO0_BOTHEDGE 0xf4329294
#define PER_GPIO0_BOTHEDGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_bothedge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */

#define i_bothedge_LOW 0x0
#define i_bothedge_HIGH 0x1

#define PER_GPIO0_IE 0xf4329298
#define PER_GPIO0_IE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioe : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_IE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO0_INT 0xf432929c
#define PER_GPIO0_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_INT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO0_STAT 0xf43292a0
#define PER_GPIO0_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpios : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO0_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_CFG 0xf43292a4
#define PER_GPIO1_CFG_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopmod : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_OUT 0xf43292a8
#define PER_GPIO1_OUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dataout : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_OUT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_IN 0xf43292ac
#define PER_GPIO1_IN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopdata : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_IN_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_LVL 0xf43292b0
#define PER_GPIO1_LVL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t level : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_LVL_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_EDGE 0xf43292b4
#define PER_GPIO1_EDGE_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_edge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_EDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_BOTHEDGE 0xf43292b8
#define PER_GPIO1_BOTHEDGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_bothedge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_IE 0xf43292bc
#define PER_GPIO1_IE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioe : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_IE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_INT 0xf43292c0
#define PER_GPIO1_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_INT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO1_STAT 0xf43292c4
#define PER_GPIO1_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpios : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO1_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_CFG 0xf43292c8
#define PER_GPIO2_CFG_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopmod : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_OUT 0xf43292cc
#define PER_GPIO2_OUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dataout : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_OUT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_IN 0xf43292d0
#define PER_GPIO2_IN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopdata : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_IN_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_LVL 0xf43292d4
#define PER_GPIO2_LVL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t level : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_LVL_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_EDGE 0xf43292d8
#define PER_GPIO2_EDGE_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_edge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_EDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_BOTHEDGE 0xf43292dc
#define PER_GPIO2_BOTHEDGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_bothedge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_IE 0xf43292e0
#define PER_GPIO2_IE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioe : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_IE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_INT 0xf43292e4
#define PER_GPIO2_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_INT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO2_STAT 0xf43292e8
#define PER_GPIO2_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpios : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO2_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_CFG 0xf43292ec
#define PER_GPIO3_CFG_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopmod : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_OUT 0xf43292f0
#define PER_GPIO3_OUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dataout : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_OUT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_IN 0xf43292f4
#define PER_GPIO3_IN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopdata : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_IN_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_LVL 0xf43292f8
#define PER_GPIO3_LVL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t level : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_LVL_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_EDGE 0xf43292fc
#define PER_GPIO3_EDGE_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_edge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_EDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_BOTHEDGE 0xf4329300
#define PER_GPIO3_BOTHEDGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_bothedge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_IE 0xf4329304
#define PER_GPIO3_IE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioe : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_IE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_INT 0xf4329308
#define PER_GPIO3_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_INT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO3_STAT 0xf432930c
#define PER_GPIO3_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpios : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO3_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_CFG 0xf4329310
#define PER_GPIO4_CFG_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopmod : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_CFG_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_OUT 0xf4329314
#define PER_GPIO4_OUT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dataout : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_OUT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_IN 0xf4329318
#define PER_GPIO4_IN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t iopdata : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_IN_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_LVL 0xf432931c
#define PER_GPIO4_LVL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t level : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_LVL_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_EDGE 0xf4329320
#define PER_GPIO4_EDGE_dft 0xffffffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_edge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_EDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_BOTHEDGE 0xf4329324
#define PER_GPIO4_BOTHEDGE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t i_bothedge : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_BOTHEDGE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_IE 0xf4329328
#define PER_GPIO4_IE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioe : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_IE_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_INT 0xf432932c
#define PER_GPIO4_INT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpioi : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_INT_t;
#endif /* !__ASSEMBLER__ */

#define PER_GPIO4_STAT 0xf4329330
#define PER_GPIO4_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gpios : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_GPIO4_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER1 0xf4329334
#define PER_SYS_TIMER1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gtimer1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER0 0xf4329338
#define PER_SYS_TIMER0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t gtimer0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_01 0xf432933c
#define PER_SYS_TIMER_COMPARATOR_CPU_01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_01_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_00 0xf4329340
#define PER_SYS_TIMER_COMPARATOR_CPU_00_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_00_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_01 0xf4329344
#define PER_SYS_TIMER_AUTOINC_CPU_01_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_01_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_00 0xf4329348
#define PER_SYS_TIMER_AUTOINC_CPU_00_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_00_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_0_INTENABLE 0xf432934c
#define PER_SYS_TIMER_CPU_0_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimere : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_0_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_0_INTERRUPT 0xf4329350
#define PER_SYS_TIMER_CPU_0_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimeri : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_0_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_11 0xf4329354
#define PER_SYS_TIMER_COMPARATOR_CPU_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_11_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_10 0xf4329358
#define PER_SYS_TIMER_COMPARATOR_CPU_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_10_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_11 0xf432935c
#define PER_SYS_TIMER_AUTOINC_CPU_11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_11_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_10 0xf4329360
#define PER_SYS_TIMER_AUTOINC_CPU_10_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_10_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_1_INTENABLE 0xf4329364
#define PER_SYS_TIMER_CPU_1_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimere : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_1_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_1_INTERRUPT 0xf4329368
#define PER_SYS_TIMER_CPU_1_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimeri : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_1_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_21 0xf432936c
#define PER_SYS_TIMER_COMPARATOR_CPU_21_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_21_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_20 0xf4329370
#define PER_SYS_TIMER_COMPARATOR_CPU_20_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_20_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_21 0xf4329374
#define PER_SYS_TIMER_AUTOINC_CPU_21_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_21_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_20 0xf4329378
#define PER_SYS_TIMER_AUTOINC_CPU_20_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_20_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_2_INTENABLE 0xf432937c
#define PER_SYS_TIMER_CPU_2_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimere : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_2_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_2_INTERRUPT 0xf4329380
#define PER_SYS_TIMER_CPU_2_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimeri : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_2_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_31 0xf4329384
#define PER_SYS_TIMER_COMPARATOR_CPU_31_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_31_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_CPU_30 0xf4329388
#define PER_SYS_TIMER_COMPARATOR_CPU_30_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_CPU_30_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_31 0xf432938c
#define PER_SYS_TIMER_AUTOINC_CPU_31_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_31_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_CPU_30 0xf4329390
#define PER_SYS_TIMER_AUTOINC_CPU_30_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_CPU_30_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_3_INTENABLE 0xf4329394
#define PER_SYS_TIMER_CPU_3_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimere : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_3_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_CPU_3_INTERRUPT 0xf4329398
#define PER_SYS_TIMER_CPU_3_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimeri : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_CPU_3_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_SECURE1 0xf432939c
#define PER_SYS_TIMER_COMPARATOR_SECURE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_SECURE1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_COMPARATOR_SECURE0 0xf43293a0
#define PER_SYS_TIMER_COMPARATOR_SECURE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_COMPARATOR_SECURE0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_SECURE1 0xf43293a4
#define PER_SYS_TIMER_AUTOINC_SECURE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_SECURE1_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_AUTOINC_SECURE0 0xf43293a8
#define PER_SYS_TIMER_AUTOINC_SECURE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t autoinc0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_AUTOINC_SECURE0_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_SECURE_INTENABLE 0xf43293ac
#define PER_SYS_TIMER_SECURE_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimere : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_SECURE_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SYS_TIMER_SECURE_INTERRUPT 0xf43293b0
#define PER_SYS_TIMER_SECURE_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t systimeri : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_SYS_TIMER_SECURE_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define PER_PWM_TIMER_PERIOD_0 0xf43293b4
#define PER_PWM_TIMER_PERIOD_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t period : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_PWM_TIMER_PERIOD_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_PWM_TIMER_COMP_0 0xf43293b8
#define PER_PWM_TIMER_COMP_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_PWM_TIMER_COMP_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_PWM_TIMER_PERIOD_1 0xf43293bc
#define PER_PWM_TIMER_PERIOD_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t period : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_PWM_TIMER_PERIOD_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_PWM_TIMER_COMP_1 0xf43293c0
#define PER_PWM_TIMER_COMP_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t comp : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_PWM_TIMER_COMP_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_CLK 0xf43293c4
#define PER_CSPI_CLK_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t divisor : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t cpha : 1; /* bits 30:30 */
		ca_uint32_t cpol : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_CLK_t;
#endif /* !__ASSEMBLER__ */

#define cpol_IDLE0 0x0
#define cpol_IDLE1 0x1
#define cpha_RXFIRST 0x0
#define cpha_TXFIRST 0x1

#define PER_CSPI_FMT 0xf43293c8
#define PER_CSPI_FMT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t highbit : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t frontporch : 8; /* bits 15:8 */
		ca_uint32_t backporch : 8; /* bits 23:16 */
		ca_uint32_t gap : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_FMT_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_CS 0xf43293cc
#define PER_CSPI_CS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t active_hi : 5; /* bits 12:8 */
		ca_uint32_t rsrvd2 : 18;
		ca_uint32_t force : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_CS_t;
#endif /* !__ASSEMBLER__ */

#define force_NORM 0x0
#define force_FORCE 0x1
#define active_hi_ACT_LO 0x0
#define active_hi_ACT_HI 0x1
#define enable_DISABLED 0x0
#define enable_ENABLED 0x1

#define PER_CSPI_WDATA1 0xf43293d0
#define PER_CSPI_WDATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdata1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_WDATA1_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_WDATA0 0xf43293d4
#define PER_CSPI_WDATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wdata0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_WDATA0_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_RDATA1 0xf43293d8
#define PER_CSPI_RDATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdata1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_RDATA1_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_RDATA0 0xf43293dc
#define PER_CSPI_RDATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rdata0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_RDATA0_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_CONTROL 0xf43293e0
#define PER_CSPI_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t start : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_IE_0 0xf43293e4
#define PER_CSPI_IE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cspie : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_IE_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_INT_0 0xf43293e8
#define PER_CSPI_INT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cspii : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_INT_0_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_IE_1 0xf43293ec
#define PER_CSPI_IE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cspie : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_IE_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_INT_1 0xf43293f0
#define PER_CSPI_INT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cspii : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_INT_1_t;
#endif /* !__ASSEMBLER__ */

#define PER_CSPI_STAT 0xf43293f4
#define PER_CSPI_STAT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cspis : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PER_CSPI_STAT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SECURE_WDT_TIMER_INTENABLE 0xf43293f8
#define PER_SECURE_WDT_TIMER_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t secure_wdte : 1; /* bits 0:0 */
		ca_uint32_t secure_timere : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_SECURE_WDT_TIMER_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define PER_SECURE_WDT_TIMER_INTERRUPT 0xf43293fc
#define PER_SECURE_WDT_TIMER_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t secure_wdti : 1; /* bits 0:0 */
		ca_uint32_t secure_timeri : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} PER_SECURE_WDT_TIMER_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define PER_SPARE 0xf4329400
#define PER_SPARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} PER_SPARE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PER */
#ifndef __ASSEMBLER__
typedef struct {
	PER_SOFT_RESET_t SOFT_RESET; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PER_PERIPHERAL_INTERRUPT_0_t PERIPHERAL_INTERRUPT_0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PER_PERIPHERAL_INTENABLE_0_t PERIPHERAL_INTENABLE_0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PER_PERIPHERAL_INTERRUPT_1_t PERIPHERAL_INTERRUPT_1; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PER_PERIPHERAL_INTENABLE_1_t PERIPHERAL_INTENABLE_1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PER_IRQ_SOFT1_t IRQ_SOFT1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PER_IRQ_SOFT0_t IRQ_SOFT0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	PER_WDT_CTRL_t WDT_CTRL; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	PER_WDT_PS_t WDT_PS; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	PER_WDT_DIV_t WDT_DIV; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	PER_WDT_LD_t WDT_LD; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	PER_WDT_LOADE_t WDT_LOADE; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	PER_WDT_CNT_t WDT_CNT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	PER_WDT_IE_0_t WDT_IE_0; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	PER_WDT_INT_0_t WDT_INT_0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	PER_WDT_STAT_0_t WDT_STAT_0; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	PER_WDT_IE_1_t WDT_IE_1; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	PER_WDT_INT_1_t WDT_INT_1; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	PER_WDT_STAT_1_t WDT_STAT_1; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	PER_WDT_TST_t WDT_TST; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	PER_TMR_LD1_t TMR_LD1; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	PER_TMR_CTRL1_t TMR_CTRL1; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	PER_TMR_CNT1_t TMR_CNT1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	PER_TMR_IE1_0_t TMR_IE1_0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	PER_TMR_IE1_1_t TMR_IE1_1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	PER_TMR_INT1_0_t TMR_INT1_0; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	PER_TMR_INT1_1_t TMR_INT1_1; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	PER_TMR_STAT1_t TMR_STAT1; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	PER_TMR_LD2_t TMR_LD2; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	PER_TMR_CTRL2_t TMR_CTRL2; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	PER_TMR_CNT2_t TMR_CNT2; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	PER_TMR_IE2_0_t TMR_IE2_0; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	PER_TMR_IE2_1_t TMR_IE2_1; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	PER_TMR_INT2_0_t TMR_INT2_0; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	PER_TMR_INT2_1_t TMR_INT2_1; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	PER_TMR_STAT2_t TMR_STAT2; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	PER_TMR_LOADE_t TMR_LOADE; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	PER_TMR_TST_t TMR_TST; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	PER_SPI_CLK_t SPI_CLK; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	PER_SPI_CFG_t SPI_CFG; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	PER_SPI_MODE_t SPI_MODE; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	PER_SPI_CTRL_t SPI_CTRL; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	PER_SPI_CA0_t SPI_CA0; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	PER_SPI_CA1_t SPI_CA1; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	PER_SPI_CA2_t SPI_CA2; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	PER_SPI_WDAT1_t SPI_WDAT1; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	PER_SPI_WDAT0_t SPI_WDAT0; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	PER_SPI_RDAT1_t SPI_RDAT1; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	PER_SPI_RDAT0_t SPI_RDAT0; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	PER_SPI_IE_0_t SPI_IE_0; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	PER_SPI_INT_0_t SPI_INT_0; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	PER_SPI_IE_1_t SPI_IE_1; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	PER_SPI_INT_1_t SPI_INT_1; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	PER_SPI_STAT_t SPI_STAT; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	PER_MDIO_CFG_t MDIO_CFG; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	PER_MDIO_ADDR_t MDIO_ADDR; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	PER_MDIO_WRDATA_t MDIO_WRDATA; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	PER_MDIO_RDDATA_t MDIO_RDDATA; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	PER_MDIO_CTRL_t MDIO_CTRL; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	PER_MDIO_AUTO_CFG_t MDIO_AUTO_CFG; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	PER_MDIO_AUTO_INTV_t MDIO_AUTO_INTV; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	PER_MDIO_AUTO_RM_t MDIO_AUTO_RM; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	PER_MDIO_AUTO_AADDR_t MDIO_AUTO_AADDR; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	PER_MDIO_ENTAB0_t MDIO_ENTAB0; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	PER_MDIO_ENTAB1_t MDIO_ENTAB1; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	PER_MDIO_ITAB0_t MDIO_ITAB0; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	PER_MDIO_ITAB1_t MDIO_ITAB1; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	PER_MDIO_IE_0_t MDIO_IE_0; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	PER_MDIO_INT_0_t MDIO_INT_0; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	PER_MDIO_IE_1_t MDIO_IE_1; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	PER_MDIO_INT_1_t MDIO_INT_1; /* addr: 0x00000118 */
	ca_uint32_t rsrvd71[3];
	PER_MDIO_STAT_t MDIO_STAT; /* addr: 0x0000011c */
	ca_uint32_t rsrvd72[3];
	PER_BIW_CFG_t BIW_CFG; /* addr: 0x00000120 */
	ca_uint32_t rsrvd73[3];
	PER_BIW_CTRL_t BIW_CTRL; /* addr: 0x00000124 */
	ca_uint32_t rsrvd74[3];
	PER_BIW_TXR_t BIW_TXR; /* addr: 0x00000128 */
	ca_uint32_t rsrvd75[3];
	PER_BIW_RXR_t BIW_RXR; /* addr: 0x0000012c */
	ca_uint32_t rsrvd76[3];
	PER_BIW_ACK_t BIW_ACK; /* addr: 0x00000130 */
	ca_uint32_t rsrvd77[3];
	PER_BIW_IE_0_t BIW_IE_0; /* addr: 0x00000134 */
	ca_uint32_t rsrvd78[3];
	PER_BIW_INT_0_t BIW_INT_0; /* addr: 0x00000138 */
	ca_uint32_t rsrvd79[3];
	PER_BIW_IE_1_t BIW_IE_1; /* addr: 0x0000013c */
	ca_uint32_t rsrvd80[3];
	PER_BIW_INT_1_t BIW_INT_1; /* addr: 0x00000140 */
	ca_uint32_t rsrvd81[3];
	PER_BIW_STAT_t BIW_STAT; /* addr: 0x00000144 */
	ca_uint32_t rsrvd82[3];
	PER_UART0_CFG_t UART0_CFG; /* addr: 0x00000148 */
	ca_uint32_t rsrvd83[3];
	PER_UART0_FC_t UART0_FC; /* addr: 0x0000014c */
	ca_uint32_t rsrvd84[3];
	PER_UART0_RX_SAMPLE_t UART0_RX_SAMPLE; /* addr: 0x00000150 */
	ca_uint32_t rsrvd85[3];
	PER_UART0_TUN_t UART0_TUN; /* addr: 0x00000154 */
	ca_uint32_t rsrvd86[3];
	PER_UART0_TXDAT_t UART0_TXDAT; /* addr: 0x00000158 */
	ca_uint32_t rsrvd87[3];
	PER_UART0_RXDAT_t UART0_RXDAT; /* addr: 0x0000015c */
	ca_uint32_t rsrvd88[3];
	PER_UART0_INFO_t UART0_INFO; /* addr: 0x00000160 */
	ca_uint32_t rsrvd89[3];
	PER_UART0_IE_0_t UART0_IE_0; /* addr: 0x00000164 */
	ca_uint32_t rsrvd90[3];
	PER_UART0_IE_1_t UART0_IE_1; /* addr: 0x00000168 */
	ca_uint32_t rsrvd91[3];
	PER_UART0_INT_0_t UART0_INT_0; /* addr: 0x0000016c */
	ca_uint32_t rsrvd92[3];
	PER_UART0_INT_1_t UART0_INT_1; /* addr: 0x00000170 */
	ca_uint32_t rsrvd93[3];
	PER_UART0_STAT_t UART0_STAT; /* addr: 0x00000174 */
	ca_uint32_t rsrvd94[3];
	PER_UART1_CFG_t UART1_CFG; /* addr: 0x00000178 */
	ca_uint32_t rsrvd95[3];
	PER_UART1_FC_t UART1_FC; /* addr: 0x0000017c */
	ca_uint32_t rsrvd96[3];
	PER_UART1_RX_SAMPLE_t UART1_RX_SAMPLE; /* addr: 0x00000180 */
	ca_uint32_t rsrvd97[3];
	PER_UART1_TUN_t UART1_TUN; /* addr: 0x00000184 */
	ca_uint32_t rsrvd98[3];
	PER_UART1_TXDAT_t UART1_TXDAT; /* addr: 0x00000188 */
	ca_uint32_t rsrvd99[3];
	PER_UART1_RXDAT_t UART1_RXDAT; /* addr: 0x0000018c */
	ca_uint32_t rsrvd100[3];
	PER_UART1_INFO_t UART1_INFO; /* addr: 0x00000190 */
	ca_uint32_t rsrvd101[3];
	PER_UART1_IE_0_t UART1_IE_0; /* addr: 0x00000194 */
	ca_uint32_t rsrvd102[3];
	PER_UART1_IE_1_t UART1_IE_1; /* addr: 0x00000198 */
	ca_uint32_t rsrvd103[3];
	PER_UART1_INT_0_t UART1_INT_0; /* addr: 0x0000019c */
	ca_uint32_t rsrvd104[3];
	PER_UART1_INT_1_t UART1_INT_1; /* addr: 0x000001a0 */
	ca_uint32_t rsrvd105[3];
	PER_UART1_STAT_t UART1_STAT; /* addr: 0x000001a4 */
	ca_uint32_t rsrvd106[3];
	PER_UART2_CFG_t UART2_CFG; /* addr: 0x000001a8 */
	ca_uint32_t rsrvd107[3];
	PER_UART2_FC_t UART2_FC; /* addr: 0x000001ac */
	ca_uint32_t rsrvd108[3];
	PER_UART2_RX_SAMPLE_t UART2_RX_SAMPLE; /* addr: 0x000001b0 */
	ca_uint32_t rsrvd109[3];
	PER_UART2_TUN_t UART2_TUN; /* addr: 0x000001b4 */
	ca_uint32_t rsrvd110[3];
	PER_UART2_TXDAT_t UART2_TXDAT; /* addr: 0x000001b8 */
	ca_uint32_t rsrvd111[3];
	PER_UART2_RXDAT_t UART2_RXDAT; /* addr: 0x000001bc */
	ca_uint32_t rsrvd112[3];
	PER_UART2_INFO_t UART2_INFO; /* addr: 0x000001c0 */
	ca_uint32_t rsrvd113[3];
	PER_UART2_IE_0_t UART2_IE_0; /* addr: 0x000001c4 */
	ca_uint32_t rsrvd114[3];
	PER_UART2_IE_1_t UART2_IE_1; /* addr: 0x000001c8 */
	ca_uint32_t rsrvd115[3];
	PER_UART2_INT_0_t UART2_INT_0; /* addr: 0x000001cc */
	ca_uint32_t rsrvd116[3];
	PER_UART2_INT_1_t UART2_INT_1; /* addr: 0x000001d0 */
	ca_uint32_t rsrvd117[3];
	PER_UART2_STAT_t UART2_STAT; /* addr: 0x000001d4 */
	ca_uint32_t rsrvd118[3];
	PER_UART3_CFG_t UART3_CFG; /* addr: 0x000001d8 */
	ca_uint32_t rsrvd119[3];
	PER_UART3_FC_t UART3_FC; /* addr: 0x000001dc */
	ca_uint32_t rsrvd120[3];
	PER_UART3_RX_SAMPLE_t UART3_RX_SAMPLE; /* addr: 0x000001e0 */
	ca_uint32_t rsrvd121[3];
	PER_UART3_TUN_t UART3_TUN; /* addr: 0x000001e4 */
	ca_uint32_t rsrvd122[3];
	PER_UART3_TXDAT_t UART3_TXDAT; /* addr: 0x000001e8 */
	ca_uint32_t rsrvd123[3];
	PER_UART3_RXDAT_t UART3_RXDAT; /* addr: 0x000001ec */
	ca_uint32_t rsrvd124[3];
	PER_UART3_INFO_t UART3_INFO; /* addr: 0x000001f0 */
	ca_uint32_t rsrvd125[3];
	PER_UART3_IE_0_t UART3_IE_0; /* addr: 0x000001f4 */
	ca_uint32_t rsrvd126[3];
	PER_UART3_IE_1_t UART3_IE_1; /* addr: 0x000001f8 */
	ca_uint32_t rsrvd127[3];
	PER_UART3_INT_0_t UART3_INT_0; /* addr: 0x000001fc */
	ca_uint32_t rsrvd128[3];
	PER_UART3_INT_1_t UART3_INT_1; /* addr: 0x00000200 */
	ca_uint32_t rsrvd129[3];
	PER_UART3_STAT_t UART3_STAT; /* addr: 0x00000204 */
	ca_uint32_t rsrvd130[3];
	PER_TOD_CFG_t TOD_CFG; /* addr: 0x00000208 */
	ca_uint32_t rsrvd131[55];
	PER_TOD_MEM_t TOD_MEM[16]; /* addr: 0x00000240 */
	ca_uint32_t rsrvd132[48];
	PER_GPIO0_CFG_t GPIO0_CFG; /* addr: 0x00000280 */
	ca_uint32_t rsrvd133[3];
	PER_GPIO0_OUT_t GPIO0_OUT; /* addr: 0x00000284 */
	ca_uint32_t rsrvd134[3];
	PER_GPIO0_IN_t GPIO0_IN; /* addr: 0x00000288 */
	ca_uint32_t rsrvd135[3];
	PER_GPIO0_LVL_t GPIO0_LVL; /* addr: 0x0000028c */
	ca_uint32_t rsrvd136[3];
	PER_GPIO0_EDGE_t GPIO0_EDGE; /* addr: 0x00000290 */
	ca_uint32_t rsrvd137[3];
	PER_GPIO0_BOTHEDGE_t GPIO0_BOTHEDGE; /* addr: 0x00000294 */
	ca_uint32_t rsrvd138[3];
	PER_GPIO0_IE_t GPIO0_IE; /* addr: 0x00000298 */
	ca_uint32_t rsrvd139[3];
	PER_GPIO0_INT_t GPIO0_INT; /* addr: 0x0000029c */
	ca_uint32_t rsrvd140[3];
	PER_GPIO0_STAT_t GPIO0_STAT; /* addr: 0x000002a0 */
	ca_uint32_t rsrvd141[3];
	PER_GPIO1_CFG_t GPIO1_CFG; /* addr: 0x000002a4 */
	ca_uint32_t rsrvd142[3];
	PER_GPIO1_OUT_t GPIO1_OUT; /* addr: 0x000002a8 */
	ca_uint32_t rsrvd143[3];
	PER_GPIO1_IN_t GPIO1_IN; /* addr: 0x000002ac */
	ca_uint32_t rsrvd144[3];
	PER_GPIO1_LVL_t GPIO1_LVL; /* addr: 0x000002b0 */
	ca_uint32_t rsrvd145[3];
	PER_GPIO1_EDGE_t GPIO1_EDGE; /* addr: 0x000002b4 */
	ca_uint32_t rsrvd146[3];
	PER_GPIO1_BOTHEDGE_t GPIO1_BOTHEDGE; /* addr: 0x000002b8 */
	ca_uint32_t rsrvd147[3];
	PER_GPIO1_IE_t GPIO1_IE; /* addr: 0x000002bc */
	ca_uint32_t rsrvd148[3];
	PER_GPIO1_INT_t GPIO1_INT; /* addr: 0x000002c0 */
	ca_uint32_t rsrvd149[3];
	PER_GPIO1_STAT_t GPIO1_STAT; /* addr: 0x000002c4 */
	ca_uint32_t rsrvd150[3];
	PER_GPIO2_CFG_t GPIO2_CFG; /* addr: 0x000002c8 */
	ca_uint32_t rsrvd151[3];
	PER_GPIO2_OUT_t GPIO2_OUT; /* addr: 0x000002cc */
	ca_uint32_t rsrvd152[3];
	PER_GPIO2_IN_t GPIO2_IN; /* addr: 0x000002d0 */
	ca_uint32_t rsrvd153[3];
	PER_GPIO2_LVL_t GPIO2_LVL; /* addr: 0x000002d4 */
	ca_uint32_t rsrvd154[3];
	PER_GPIO2_EDGE_t GPIO2_EDGE; /* addr: 0x000002d8 */
	ca_uint32_t rsrvd155[3];
	PER_GPIO2_BOTHEDGE_t GPIO2_BOTHEDGE; /* addr: 0x000002dc */
	ca_uint32_t rsrvd156[3];
	PER_GPIO2_IE_t GPIO2_IE; /* addr: 0x000002e0 */
	ca_uint32_t rsrvd157[3];
	PER_GPIO2_INT_t GPIO2_INT; /* addr: 0x000002e4 */
	ca_uint32_t rsrvd158[3];
	PER_GPIO2_STAT_t GPIO2_STAT; /* addr: 0x000002e8 */
	ca_uint32_t rsrvd159[3];
	PER_GPIO3_CFG_t GPIO3_CFG; /* addr: 0x000002ec */
	ca_uint32_t rsrvd160[3];
	PER_GPIO3_OUT_t GPIO3_OUT; /* addr: 0x000002f0 */
	ca_uint32_t rsrvd161[3];
	PER_GPIO3_IN_t GPIO3_IN; /* addr: 0x000002f4 */
	ca_uint32_t rsrvd162[3];
	PER_GPIO3_LVL_t GPIO3_LVL; /* addr: 0x000002f8 */
	ca_uint32_t rsrvd163[3];
	PER_GPIO3_EDGE_t GPIO3_EDGE; /* addr: 0x000002fc */
	ca_uint32_t rsrvd164[3];
	PER_GPIO3_BOTHEDGE_t GPIO3_BOTHEDGE; /* addr: 0x00000300 */
	ca_uint32_t rsrvd165[3];
	PER_GPIO3_IE_t GPIO3_IE; /* addr: 0x00000304 */
	ca_uint32_t rsrvd166[3];
	PER_GPIO3_INT_t GPIO3_INT; /* addr: 0x00000308 */
	ca_uint32_t rsrvd167[3];
	PER_GPIO3_STAT_t GPIO3_STAT; /* addr: 0x0000030c */
	ca_uint32_t rsrvd168[3];
	PER_GPIO4_CFG_t GPIO4_CFG; /* addr: 0x00000310 */
	ca_uint32_t rsrvd169[3];
	PER_GPIO4_OUT_t GPIO4_OUT; /* addr: 0x00000314 */
	ca_uint32_t rsrvd170[3];
	PER_GPIO4_IN_t GPIO4_IN; /* addr: 0x00000318 */
	ca_uint32_t rsrvd171[3];
	PER_GPIO4_LVL_t GPIO4_LVL; /* addr: 0x0000031c */
	ca_uint32_t rsrvd172[3];
	PER_GPIO4_EDGE_t GPIO4_EDGE; /* addr: 0x00000320 */
	ca_uint32_t rsrvd173[3];
	PER_GPIO4_BOTHEDGE_t GPIO4_BOTHEDGE; /* addr: 0x00000324 */
	ca_uint32_t rsrvd174[3];
	PER_GPIO4_IE_t GPIO4_IE; /* addr: 0x00000328 */
	ca_uint32_t rsrvd175[3];
	PER_GPIO4_INT_t GPIO4_INT; /* addr: 0x0000032c */
	ca_uint32_t rsrvd176[3];
	PER_GPIO4_STAT_t GPIO4_STAT; /* addr: 0x00000330 */
	ca_uint32_t rsrvd177[3];
	PER_SYS_TIMER1_t SYS_TIMER1; /* addr: 0x00000334 */
	ca_uint32_t rsrvd178[3];
	PER_SYS_TIMER0_t SYS_TIMER0; /* addr: 0x00000338 */
	ca_uint32_t rsrvd179[3];
	PER_SYS_TIMER_COMPARATOR_CPU_01_t
	  SYS_TIMER_COMPARATOR_CPU_01; /* addr: 0x0000033c */
	ca_uint32_t rsrvd180[3];
	PER_SYS_TIMER_COMPARATOR_CPU_00_t
	  SYS_TIMER_COMPARATOR_CPU_00; /* addr: 0x00000340 */
	ca_uint32_t rsrvd181[3];
	PER_SYS_TIMER_AUTOINC_CPU_01_t
	  SYS_TIMER_AUTOINC_CPU_01; /* addr: 0x00000344 */
	ca_uint32_t rsrvd182[3];
	PER_SYS_TIMER_AUTOINC_CPU_00_t
	  SYS_TIMER_AUTOINC_CPU_00; /* addr: 0x00000348 */
	ca_uint32_t rsrvd183[3];
	PER_SYS_TIMER_CPU_0_INTENABLE_t
	  SYS_TIMER_CPU_0_INTENABLE; /* addr: 0x0000034c */
	ca_uint32_t rsrvd184[3];
	PER_SYS_TIMER_CPU_0_INTERRUPT_t
	  SYS_TIMER_CPU_0_INTERRUPT; /* addr: 0x00000350 */
	ca_uint32_t rsrvd185[3];
	PER_SYS_TIMER_COMPARATOR_CPU_11_t
	  SYS_TIMER_COMPARATOR_CPU_11; /* addr: 0x00000354 */
	ca_uint32_t rsrvd186[3];
	PER_SYS_TIMER_COMPARATOR_CPU_10_t
	  SYS_TIMER_COMPARATOR_CPU_10; /* addr: 0x00000358 */
	ca_uint32_t rsrvd187[3];
	PER_SYS_TIMER_AUTOINC_CPU_11_t
	  SYS_TIMER_AUTOINC_CPU_11; /* addr: 0x0000035c */
	ca_uint32_t rsrvd188[3];
	PER_SYS_TIMER_AUTOINC_CPU_10_t
	  SYS_TIMER_AUTOINC_CPU_10; /* addr: 0x00000360 */
	ca_uint32_t rsrvd189[3];
	PER_SYS_TIMER_CPU_1_INTENABLE_t
	  SYS_TIMER_CPU_1_INTENABLE; /* addr: 0x00000364 */
	ca_uint32_t rsrvd190[3];
	PER_SYS_TIMER_CPU_1_INTERRUPT_t
	  SYS_TIMER_CPU_1_INTERRUPT; /* addr: 0x00000368 */
	ca_uint32_t rsrvd191[3];
	PER_SYS_TIMER_COMPARATOR_CPU_21_t
	  SYS_TIMER_COMPARATOR_CPU_21; /* addr: 0x0000036c */
	ca_uint32_t rsrvd192[3];
	PER_SYS_TIMER_COMPARATOR_CPU_20_t
	  SYS_TIMER_COMPARATOR_CPU_20; /* addr: 0x00000370 */
	ca_uint32_t rsrvd193[3];
	PER_SYS_TIMER_AUTOINC_CPU_21_t
	  SYS_TIMER_AUTOINC_CPU_21; /* addr: 0x00000374 */
	ca_uint32_t rsrvd194[3];
	PER_SYS_TIMER_AUTOINC_CPU_20_t
	  SYS_TIMER_AUTOINC_CPU_20; /* addr: 0x00000378 */
	ca_uint32_t rsrvd195[3];
	PER_SYS_TIMER_CPU_2_INTENABLE_t
	  SYS_TIMER_CPU_2_INTENABLE; /* addr: 0x0000037c */
	ca_uint32_t rsrvd196[3];
	PER_SYS_TIMER_CPU_2_INTERRUPT_t
	  SYS_TIMER_CPU_2_INTERRUPT; /* addr: 0x00000380 */
	ca_uint32_t rsrvd197[3];
	PER_SYS_TIMER_COMPARATOR_CPU_31_t
	  SYS_TIMER_COMPARATOR_CPU_31; /* addr: 0x00000384 */
	ca_uint32_t rsrvd198[3];
	PER_SYS_TIMER_COMPARATOR_CPU_30_t
	  SYS_TIMER_COMPARATOR_CPU_30; /* addr: 0x00000388 */
	ca_uint32_t rsrvd199[3];
	PER_SYS_TIMER_AUTOINC_CPU_31_t
	  SYS_TIMER_AUTOINC_CPU_31; /* addr: 0x0000038c */
	ca_uint32_t rsrvd200[3];
	PER_SYS_TIMER_AUTOINC_CPU_30_t
	  SYS_TIMER_AUTOINC_CPU_30; /* addr: 0x00000390 */
	ca_uint32_t rsrvd201[3];
	PER_SYS_TIMER_CPU_3_INTENABLE_t
	  SYS_TIMER_CPU_3_INTENABLE; /* addr: 0x00000394 */
	ca_uint32_t rsrvd202[3];
	PER_SYS_TIMER_CPU_3_INTERRUPT_t
	  SYS_TIMER_CPU_3_INTERRUPT; /* addr: 0x00000398 */
	ca_uint32_t rsrvd203[3];
	PER_SYS_TIMER_COMPARATOR_SECURE1_t
	  SYS_TIMER_COMPARATOR_SECURE1; /* addr: 0x0000039c */
	ca_uint32_t rsrvd204[3];
	PER_SYS_TIMER_COMPARATOR_SECURE0_t
	  SYS_TIMER_COMPARATOR_SECURE0; /* addr: 0x000003a0 */
	ca_uint32_t rsrvd205[3];
	PER_SYS_TIMER_AUTOINC_SECURE1_t
	  SYS_TIMER_AUTOINC_SECURE1; /* addr: 0x000003a4 */
	ca_uint32_t rsrvd206[3];
	PER_SYS_TIMER_AUTOINC_SECURE0_t
	  SYS_TIMER_AUTOINC_SECURE0; /* addr: 0x000003a8 */
	ca_uint32_t rsrvd207[3];
	PER_SYS_TIMER_SECURE_INTENABLE_t
	  SYS_TIMER_SECURE_INTENABLE; /* addr: 0x000003ac */
	ca_uint32_t rsrvd208[3];
	PER_SYS_TIMER_SECURE_INTERRUPT_t
	  SYS_TIMER_SECURE_INTERRUPT; /* addr: 0x000003b0 */
	ca_uint32_t rsrvd209[3];
	PER_PWM_TIMER_PERIOD_0_t PWM_TIMER_PERIOD_0; /* addr: 0x000003b4 */
	ca_uint32_t rsrvd210[3];
	PER_PWM_TIMER_COMP_0_t PWM_TIMER_COMP_0; /* addr: 0x000003b8 */
	ca_uint32_t rsrvd211[3];
	PER_PWM_TIMER_PERIOD_1_t PWM_TIMER_PERIOD_1; /* addr: 0x000003bc */
	ca_uint32_t rsrvd212[3];
	PER_PWM_TIMER_COMP_1_t PWM_TIMER_COMP_1; /* addr: 0x000003c0 */
	ca_uint32_t rsrvd213[3];
	PER_CSPI_CLK_t CSPI_CLK; /* addr: 0x000003c4 */
	ca_uint32_t rsrvd214[3];
	PER_CSPI_FMT_t CSPI_FMT; /* addr: 0x000003c8 */
	ca_uint32_t rsrvd215[3];
	PER_CSPI_CS_t CSPI_CS; /* addr: 0x000003cc */
	ca_uint32_t rsrvd216[3];
	PER_CSPI_WDATA1_t CSPI_WDATA1; /* addr: 0x000003d0 */
	ca_uint32_t rsrvd217[3];
	PER_CSPI_WDATA0_t CSPI_WDATA0; /* addr: 0x000003d4 */
	ca_uint32_t rsrvd218[3];
	PER_CSPI_RDATA1_t CSPI_RDATA1; /* addr: 0x000003d8 */
	ca_uint32_t rsrvd219[3];
	PER_CSPI_RDATA0_t CSPI_RDATA0; /* addr: 0x000003dc */
	ca_uint32_t rsrvd220[3];
	PER_CSPI_CONTROL_t CSPI_CONTROL; /* addr: 0x000003e0 */
	ca_uint32_t rsrvd221[3];
	PER_CSPI_IE_0_t CSPI_IE_0; /* addr: 0x000003e4 */
	ca_uint32_t rsrvd222[3];
	PER_CSPI_INT_0_t CSPI_INT_0; /* addr: 0x000003e8 */
	ca_uint32_t rsrvd223[3];
	PER_CSPI_IE_1_t CSPI_IE_1; /* addr: 0x000003ec */
	ca_uint32_t rsrvd224[3];
	PER_CSPI_INT_1_t CSPI_INT_1; /* addr: 0x000003f0 */
	ca_uint32_t rsrvd225[3];
	PER_CSPI_STAT_t CSPI_STAT; /* addr: 0x000003f4 */
	ca_uint32_t rsrvd226[3];
	PER_SECURE_WDT_TIMER_INTENABLE_t
	  SECURE_WDT_TIMER_INTENABLE; /* addr: 0x000003f8 */
	ca_uint32_t rsrvd227[3];
	PER_SECURE_WDT_TIMER_INTERRUPT_t
	  SECURE_WDT_TIMER_INTERRUPT; /* addr: 0x000003fc */
	ca_uint32_t rsrvd228[3];
	PER_SPARE_t SPARE; /* addr: 0x00000400 */
} APB2_PER_t;
#endif /* !__ASSEMBLER__ */

/*
 * RTC
 */

#define RTCLK_ALARM_SEC 0xf432a004
#define RTCLK_ALARM_SEC_dft 0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BCD_SEC : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_SEC_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_ALARM_MIN 0xf432a008
#define RTCLK_ALARM_MIN_dft 0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BCD_MIN : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_MIN_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_ALARM_HOUR 0xf432a00c
#define RTCLK_ALARM_HOUR_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BCD_HOUR : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_HOUR_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_ALARM_DAY 0xf432a010
#define RTCLK_ALARM_DAY_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BCD_DAY : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_DAY_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_ALARM_WEEK 0xf432a014
#define RTCLK_ALARM_WEEK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SUNDAY : 1; /* bits 0:0 */
		ca_uint32_t MONDAY : 1; /* bits 1:1 */
		ca_uint32_t TUESDAY : 1; /* bits 2:2 */
		ca_uint32_t WEDNESDAY : 1; /* bits 3:3 */
		ca_uint32_t THURSDAY : 1; /* bits 4:4 */
		ca_uint32_t FRIDAY : 1; /* bits 5:5 */
		ca_uint32_t SATURDAY : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_WEEK_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_ALARM_MONTH 0xf432a018
#define RTCLK_ALARM_MONTH_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BCD_MONTH : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_MONTH_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_ALARM_YEAR 0xf432a01c
#define RTCLK_ALARM_YEAR_dft 0x000000aa

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t BCD_YEAR : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} RTCLK_ALARM_YEAR_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_USER_SRAM0 0xf432a020
#define RTCLK_USER_SRAM0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t _16BIT : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} RTCLK_USER_SRAM0_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_USER_SRAM1 0xf432a024
#define RTCLK_USER_SRAM1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t _16BIT : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} RTCLK_USER_SRAM1_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_INT_EN 0xf432a028
#define RTCLK_INT_EN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SECONDLY : 1; /* bits 0:0 */
		ca_uint32_t MINUTELY : 1; /* bits 1:1 */
		ca_uint32_t HOURLY : 1; /* bits 2:2 */
		ca_uint32_t WEEKLY : 1; /* bits 3:3 */
		ca_uint32_t MONTHLY : 1; /* bits 4:4 */
		ca_uint32_t YEARLY : 1; /* bits 5:5 */
		ca_uint32_t DATE : 1; /* bits 6:6 */
		ca_uint32_t WAKEUP : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} RTCLK_INT_EN_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_CNTL 0xf432a02c
#define RTCLK_CNTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t WRITE_EN : 1; /* bits 0:0 */
		ca_uint32_t SEL_WAKEUP_INT : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t WRITE_ENABLED : 1; /* bits 8:8 */
		ca_uint32_t TIME_LOADED : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 22;
	} bf;
	ca_uint32_t wrd;
} RTCLK_CNTL_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_COMP 0xf432a030
#define RTCLK_COMP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t MIN_CNTR : 14; /* bits 13:0 */
		ca_uint32_t LAG_ADV : 1; /* bits 14:14 */
		ca_uint32_t ENABLE : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} RTCLK_COMP_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_TIME_CNTR 0xf432a034
#define RTCLK_TIME_CNTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t RIPPLE_CNTR : 15; /* bits 14:0 */
		ca_uint32_t ENABLE : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} RTCLK_TIME_CNTR_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_CHANGING 0xf432a038
#define RTCLK_CHANGING_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t INDICATOR : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} RTCLK_CHANGING_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_INT_STATUS 0xf432a040
#define RTCLK_INT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SECONDLY : 1; /* bits 0:0 */
		ca_uint32_t MINUTELY : 1; /* bits 1:1 */
		ca_uint32_t HOURLY : 1; /* bits 2:2 */
		ca_uint32_t WEEKLY : 1; /* bits 3:3 */
		ca_uint32_t MONTHLY : 1; /* bits 4:4 */
		ca_uint32_t YEARLY : 1; /* bits 5:5 */
		ca_uint32_t DATE : 1; /* bits 6:6 */
		ca_uint32_t WAKEUP : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} RTCLK_INT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_SEC 0xf432a044
#define RTCLK_BCD_SEC_dft 0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_SEC : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_SEC_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_MIN 0xf432a048
#define RTCLK_BCD_MIN_dft 0x0000006a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_MIN : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_MIN_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_HOUR 0xf432a04c
#define RTCLK_BCD_HOUR_dft 0x0000003a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_HOUR : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_HOUR_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_DAY 0xf432a050
#define RTCLK_BCD_DAY_dft 0x0000003a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_DAY : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_DAY_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_WEEK 0xf432a054
#define RTCLK_BCD_WEEK_dft 0x00000007

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_WEEK : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_WEEK_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_MONTH 0xf432a058
#define RTCLK_BCD_MONTH_dft 0x0000000a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_MONTH : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_MONTH_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BCD_YEAR 0xf432a05c
#define RTCLK_BCD_YEAR_dft 0x000000aa

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_YEAR : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BCD_YEAR_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_BATTERY_OK 0xf432a060
#define RTCLK_BATTERY_OK_dft 0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t INDICATOR : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t RTC_CI_cap : 2; /* bits 9:8 */
		ca_uint32_t RTC_CO_cap : 2; /* bits 11:10 */
		ca_uint32_t test_speedup : 1; /* bits 12:12 */
		ca_uint32_t rsrvd2 : 19;
	} bf;
	ca_uint32_t wrd;
} RTCLK_BATTERY_OK_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_SEC 0xf432a064
#define RTCLK_LREG_BCD_SEC_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_SEC : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_SEC_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_MIN 0xf432a068
#define RTCLK_LREG_BCD_MIN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_MIN : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_MIN_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_HOUR 0xf432a06c
#define RTCLK_LREG_BCD_HOUR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_HOUR : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_HOUR_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_DAY 0xf432a070
#define RTCLK_LREG_BCD_DAY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_DAY : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_DAY_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_WEEK 0xf432a074
#define RTCLK_LREG_BCD_WEEK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_WEEK : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_WEEK_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_MONTH 0xf432a078
#define RTCLK_LREG_BCD_MONTH_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_MONTH : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_MONTH_t;
#endif /* !__ASSEMBLER__ */

#define RTCLK_LREG_BCD_YEAR 0xf432a07c
#define RTCLK_LREG_BCD_YEAR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TIME_YEAR : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} RTCLK_LREG_BCD_YEAR_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* RTC */
#ifndef __ASSEMBLER__
typedef struct {
	ca_uint32_t rsrvd1[4];
	RTCLK_ALARM_SEC_t ALARM_SEC; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	RTCLK_ALARM_MIN_t ALARM_MIN; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	RTCLK_ALARM_HOUR_t ALARM_HOUR; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	RTCLK_ALARM_DAY_t ALARM_DAY; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	RTCLK_ALARM_WEEK_t ALARM_WEEK; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	RTCLK_ALARM_MONTH_t ALARM_MONTH; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	RTCLK_ALARM_YEAR_t ALARM_YEAR; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	RTCLK_USER_SRAM0_t USER_SRAM0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	RTCLK_USER_SRAM1_t USER_SRAM1; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	RTCLK_INT_EN_t INT_EN; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	RTCLK_CNTL_t CNTL; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	RTCLK_COMP_t COMP; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	RTCLK_TIME_CNTR_t TIME_CNTR; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	RTCLK_CHANGING_t CHANGING; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[7];
	RTCLK_INT_STATUS_t INT_STATUS; /* addr: 0x00000040 */
	ca_uint32_t rsrvd16[3];
	RTCLK_BCD_SEC_t BCD_SEC; /* addr: 0x00000044 */
	ca_uint32_t rsrvd17[3];
	RTCLK_BCD_MIN_t BCD_MIN; /* addr: 0x00000048 */
	ca_uint32_t rsrvd18[3];
	RTCLK_BCD_HOUR_t BCD_HOUR; /* addr: 0x0000004c */
	ca_uint32_t rsrvd19[3];
	RTCLK_BCD_DAY_t BCD_DAY; /* addr: 0x00000050 */
	ca_uint32_t rsrvd20[3];
	RTCLK_BCD_WEEK_t BCD_WEEK; /* addr: 0x00000054 */
	ca_uint32_t rsrvd21[3];
	RTCLK_BCD_MONTH_t BCD_MONTH; /* addr: 0x00000058 */
	ca_uint32_t rsrvd22[3];
	RTCLK_BCD_YEAR_t BCD_YEAR; /* addr: 0x0000005c */
	ca_uint32_t rsrvd23[3];
	RTCLK_BATTERY_OK_t BATTERY_OK; /* addr: 0x00000060 */
	ca_uint32_t rsrvd24[3];
	RTCLK_LREG_BCD_SEC_t LREG_BCD_SEC; /* addr: 0x00000064 */
	ca_uint32_t rsrvd25[3];
	RTCLK_LREG_BCD_MIN_t LREG_BCD_MIN; /* addr: 0x00000068 */
	ca_uint32_t rsrvd26[3];
	RTCLK_LREG_BCD_HOUR_t LREG_BCD_HOUR; /* addr: 0x0000006c */
	ca_uint32_t rsrvd27[3];
	RTCLK_LREG_BCD_DAY_t LREG_BCD_DAY; /* addr: 0x00000070 */
	ca_uint32_t rsrvd28[3];
	RTCLK_LREG_BCD_WEEK_t LREG_BCD_WEEK; /* addr: 0x00000074 */
	ca_uint32_t rsrvd29[3];
	RTCLK_LREG_BCD_MONTH_t LREG_BCD_MONTH; /* addr: 0x00000078 */
	ca_uint32_t rsrvd30[3];
	RTCLK_LREG_BCD_YEAR_t LREG_BCD_YEAR; /* addr: 0x0000007c */
} APB2_RTC_t;
#endif /* !__ASSEMBLER__ */

/*
 * USBCFG
 */

#define USBCFG_U3_CONTROL 0xf432b000
#define USBCFG_U3_CONTROL_dft 0x68200010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bus_filter_bypass : 4; /* bits 3:0 */
		ca_uint32_t xhc_bme : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 11;
		ca_uint32_t fladj_30mhz_reg : 6; /* bits 21:16 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t host_legacy_smi_bar_wr : 1; /* bits 24:24 */
		ca_uint32_t host_legacy_smi_pci_cmd_reg_wr : 1; /* bits 25:25 */
		ca_uint32_t host_msi_enable : 1; /* bits 26:26 */
		ca_uint32_t host_port_power_control_present : 1; /* bits 27:27 */
		ca_uint32_t bigendian_gs : 1; /* bits 28:28 */
		ca_uint32_t bus_clken_gm : 1; /* bits 29:29 */
		ca_uint32_t bus_clken_gs : 1; /* bits 30:30 */
		ca_uint32_t vaux_resetn : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3_STATUS 0xf432b004
#define USBCFG_U3_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t host_current_belt : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t host_legacy_smi_interrupt : 1; /* bits 16:16 */
		ca_uint32_t rsrvd2 : 14;
		ca_uint32_t host_system_err : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3_PORT_CONFIG 0xf432b008
#define USBCFG_U3_PORT_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t u2_p0_hub_port_perm_attach : 1; /* bits 0:0 */
		ca_uint32_t u2_p0_hub_port_overcurrent : 1; /* bits 1:1 */
		ca_uint32_t u2_p0_host_disable : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t u2_p1_hub_port_perm_attach : 1; /* bits 8:8 */
		ca_uint32_t u2_p1_hub_port_overcurrent : 1; /* bits 9:9 */
		ca_uint32_t u2_p1_host_disable : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t u3_p0_hub_port_perm_attach : 1; /* bits 16:16 */
		ca_uint32_t u3_p0_hub_port_overcurrent : 1; /* bits 17:17 */
		ca_uint32_t u3_p0_host_disable : 1; /* bits 18:18 */
		ca_uint32_t rsrvd3 : 5;
		ca_uint32_t u3_p1_hub_port_perm_attach : 1; /* bits 24:24 */
		ca_uint32_t u3_p1_hub_port_overcurrent : 1; /* bits 25:25 */
		ca_uint32_t u3_p1_host_disable : 1; /* bits 26:26 */
		ca_uint32_t rsrvd4 : 5;
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3_PORT_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3_PORT_STATUS 0xf432b00c
#define USBCFG_U3_PORT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t u2_p0_hub_vbus_ctrl : 1; /* bits 0:0 */
		ca_uint32_t u2_p0_utmi_fsls_low_power : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t u2_p1_hub_vbus_ctrl : 1; /* bits 8:8 */
		ca_uint32_t u2_p1_utmi_fsls_low_power : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 6;
		ca_uint32_t u3_p0_hub_vbus_ctrl : 1; /* bits 16:16 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t u3_p0_pipe3_phy_mode : 2; /* bits 21:20 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t u3_p1_hub_vbus_ctrl : 1; /* bits 24:24 */
		ca_uint32_t rsrvd5 : 3;
		ca_uint32_t u3_p1_pipe3_phy_mode : 2; /* bits 29:28 */
		ca_uint32_t rsrvd6 : 2;
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3_PORT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3PHY_PORT0_CONFIG0 0xf432b010
#define USBCFG_U3PHY_PORT0_CONFIG0_dft 0xc0000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CLK_MODE_SEL : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t mac_phy_recv_det_req_reg : 1; /* bits 28:28 */
		ca_uint32_t mac_phy_recv_det_en_reg : 1; /* bits 29:29 */
		ca_uint32_t mac_phy_pll_en_reg : 1; /* bits 30:30 */
		ca_uint32_t CKBUF_EN : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3PHY_PORT0_CONFIG0_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3PHY_PORT0_STATUS0 0xf432b014
#define USBCFG_U3PHY_PORT0_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count_num : 19; /* bits 18:0 */
		ca_uint32_t clk_rdy : 1; /* bits 19:19 */
		ca_uint32_t phy_mac_recv_det_ack : 1; /* bits 20:20 */
		ca_uint32_t phy_mac_recv_det_end : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3PHY_PORT0_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3PHY_PORT0_STATUS1 0xf432b018
#define USBCFG_U3PHY_PORT0_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t decode_err : 8; /* bits 7:0 */
		ca_uint32_t elastic_buf_ovf : 8; /* bits 15:8 */
		ca_uint32_t elastic_buf_udf : 8; /* bits 23:16 */
		ca_uint32_t disparity_err : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3PHY_PORT0_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3PHY_PORT1_CONFIG0 0xf432b01c
#define USBCFG_U3PHY_PORT1_CONFIG0_dft 0xc0000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CLK_MODE_SEL : 2; /* bits 1:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t mac_phy_recv_det_req_reg : 1; /* bits 28:28 */
		ca_uint32_t mac_phy_recv_det_en_reg : 1; /* bits 29:29 */
		ca_uint32_t mac_phy_pll_en_reg : 1; /* bits 30:30 */
		ca_uint32_t CKBUF_EN : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3PHY_PORT1_CONFIG0_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3PHY_PORT1_STATUS0 0xf432b020
#define USBCFG_U3PHY_PORT1_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t count_num : 19; /* bits 18:0 */
		ca_uint32_t clk_rdy : 1; /* bits 19:19 */
		ca_uint32_t phy_mac_recv_det_ack : 1; /* bits 20:20 */
		ca_uint32_t phy_mac_recv_det_end : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3PHY_PORT1_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U3PHY_PORT1_STATUS1 0xf432b024
#define USBCFG_U3PHY_PORT1_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t decode_err : 8; /* bits 7:0 */
		ca_uint32_t elastic_buf_ovf : 8; /* bits 15:8 */
		ca_uint32_t elastic_buf_udf : 8; /* bits 23:16 */
		ca_uint32_t disparity_err : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U3PHY_PORT1_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2_CONTROL 0xf432b028
#define USBCFG_U2_CONTROL_dft 0x68200010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Reserved : 4; /* bits 3:0 */
		ca_uint32_t xhc_bme : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 11;
		ca_uint32_t fladj_30mhz_reg : 6; /* bits 21:16 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t host_legacy_smi_bar_wr : 1; /* bits 24:24 */
		ca_uint32_t host_legacy_smi_pci_cmd_reg_wr : 1; /* bits 25:25 */
		ca_uint32_t host_msi_enable : 1; /* bits 26:26 */
		ca_uint32_t host_port_power_control_present : 1; /* bits 27:27 */
		ca_uint32_t bigendian_gs : 1; /* bits 28:28 */
		ca_uint32_t bus_clken_gm : 1; /* bits 29:29 */
		ca_uint32_t bus_clken_gs : 1; /* bits 30:30 */
		ca_uint32_t vaux_resetn : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2_STATUS 0xf432b02c
#define USBCFG_U2_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t host_current_belt : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t host_legacy_smi_interrupt : 1; /* bits 16:16 */
		ca_uint32_t rsrvd2 : 14;
		ca_uint32_t host_system_err : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2_PORT_CONFIG 0xf432b030
#define USBCFG_U2_PORT_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hub_port_perm_attach : 1; /* bits 0:0 */
		ca_uint32_t hub_port_overcurrent : 1; /* bits 1:1 */
		ca_uint32_t host_disable : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2_PORT_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2_PORT_STATUS 0xf432b034
#define USBCFG_U2_PORT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hub_vbus_ctrl : 1; /* bits 0:0 */
		ca_uint32_t utmi_fsls_low_power : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2_PORT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2PHY_PORT0_CONFIG 0xf432b038
#define USBCFG_U2PHY_PORT0_CONFIG_dft 0x00080004

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TX_SE0 : 1; /* bits 0:0 */
		ca_uint32_t TX_DAT : 1; /* bits 1:1 */
		ca_uint32_t TX_ENABLE_N : 1; /* bits 2:2 */
		ca_uint32_t TXBITSTUFFENABLEH : 1; /* bits 3:3 */
		ca_uint32_t TXBITSTUFFENABLE : 1; /* bits 4:4 */
		ca_uint32_t DMPULLDOWN : 1; /* bits 5:5 */
		ca_uint32_t DPPULLDOWN : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t CLKTSTEN : 1; /* bits 8:8 */
		ca_uint32_t LF_PD_R_EN : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 8;
		ca_uint32_t BY_PASS_ON : 1; /* bits 18:18 */
		ca_uint32_t VLOADM : 1; /* bits 19:19 */
		ca_uint32_t VCONTROL : 4; /* bits 23:20 */
		ca_uint32_t VSTATUS_IN : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2PHY_PORT0_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2PHY_PORT0_STATUS 0xf432b03c
#define USBCFG_U2PHY_PORT0_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t debug : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t VSTATUS_OUT : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2PHY_PORT0_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2PHY_PORT1_CONFIG 0xf432b040
#define USBCFG_U2PHY_PORT1_CONFIG_dft 0x00080004

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TX_SE0 : 1; /* bits 0:0 */
		ca_uint32_t TX_DAT : 1; /* bits 1:1 */
		ca_uint32_t TX_ENABLE_N : 1; /* bits 2:2 */
		ca_uint32_t TXBITSTUFFENABLEH : 1; /* bits 3:3 */
		ca_uint32_t TXBITSTUFFENABLE : 1; /* bits 4:4 */
		ca_uint32_t DMPULLDOWN : 1; /* bits 5:5 */
		ca_uint32_t DPPULLDOWN : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t CLKTSTEN : 1; /* bits 8:8 */
		ca_uint32_t LF_PD_R_EN : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 8;
		ca_uint32_t BY_PASS_ON : 1; /* bits 18:18 */
		ca_uint32_t VLOADM : 1; /* bits 19:19 */
		ca_uint32_t VCONTROL : 4; /* bits 23:20 */
		ca_uint32_t VSTATUS_IN : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2PHY_PORT1_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2PHY_PORT1_STATUS 0xf432b044
#define USBCFG_U2PHY_PORT1_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t debug : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t VSTATUS_OUT : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2PHY_PORT1_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2PHY_PORT2_CONFIG 0xf432b048
#define USBCFG_U2PHY_PORT2_CONFIG_dft 0x00080004

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TX_SE0 : 1; /* bits 0:0 */
		ca_uint32_t TX_DAT : 1; /* bits 1:1 */
		ca_uint32_t TX_ENABLE_N : 1; /* bits 2:2 */
		ca_uint32_t TXBITSTUFFENABLEH : 1; /* bits 3:3 */
		ca_uint32_t TXBITSTUFFENABLE : 1; /* bits 4:4 */
		ca_uint32_t DMPULLDOWN : 1; /* bits 5:5 */
		ca_uint32_t DPPULLDOWN : 1; /* bits 6:6 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t CLKTSTEN : 1; /* bits 8:8 */
		ca_uint32_t LF_PD_R_EN : 1; /* bits 9:9 */
		ca_uint32_t rsrvd2 : 8;
		ca_uint32_t BY_PASS_ON : 1; /* bits 18:18 */
		ca_uint32_t VLOADM : 1; /* bits 19:19 */
		ca_uint32_t VCONTROL : 4; /* bits 23:20 */
		ca_uint32_t VSTATUS_IN : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2PHY_PORT2_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define USBCFG_U2PHY_PORT2_STATUS 0xf432b04c
#define USBCFG_U2PHY_PORT2_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t debug : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 8;
		ca_uint32_t VSTATUS_OUT : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} USBCFG_U2PHY_PORT2_STATUS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* USBCFG */
#ifndef __ASSEMBLER__
typedef struct {
	USBCFG_U3_CONTROL_t U3_CONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	USBCFG_U3_STATUS_t U3_STATUS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	USBCFG_U3_PORT_CONFIG_t U3_PORT_CONFIG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	USBCFG_U3_PORT_STATUS_t U3_PORT_STATUS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	USBCFG_U3PHY_PORT0_CONFIG0_t U3PHY_PORT0_CONFIG0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	USBCFG_U3PHY_PORT0_STATUS0_t U3PHY_PORT0_STATUS0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	USBCFG_U3PHY_PORT0_STATUS1_t U3PHY_PORT0_STATUS1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	USBCFG_U3PHY_PORT1_CONFIG0_t U3PHY_PORT1_CONFIG0; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	USBCFG_U3PHY_PORT1_STATUS0_t U3PHY_PORT1_STATUS0; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	USBCFG_U3PHY_PORT1_STATUS1_t U3PHY_PORT1_STATUS1; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	USBCFG_U2_CONTROL_t U2_CONTROL; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	USBCFG_U2_STATUS_t U2_STATUS; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	USBCFG_U2_PORT_CONFIG_t U2_PORT_CONFIG; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	USBCFG_U2_PORT_STATUS_t U2_PORT_STATUS; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	USBCFG_U2PHY_PORT0_CONFIG_t U2PHY_PORT0_CONFIG; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	USBCFG_U2PHY_PORT0_STATUS_t U2PHY_PORT0_STATUS; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	USBCFG_U2PHY_PORT1_CONFIG_t U2PHY_PORT1_CONFIG; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	USBCFG_U2PHY_PORT1_STATUS_t U2PHY_PORT1_STATUS; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	USBCFG_U2PHY_PORT2_CONFIG_t U2PHY_PORT2_CONFIG; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	USBCFG_U2PHY_PORT2_STATUS_t U2PHY_PORT2_STATUS; /* addr: 0x0000004c */
} APB2_USBCFG_t;
#endif /* !__ASSEMBLER__ */

/*
 * EAXI
 */

/*
 * EAXI
 */

#define EAXI_EAXI_CTL0 0xf432c000
#define EAXI_EAXI_CTL0_dft 0x00000100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 7;
		ca_uint32_t slavecam : 1; /* bits 8:8 */
		ca_uint32_t slavesingle : 1; /* bits 9:9 */
		ca_uint32_t rxhysdis : 1; /* bits 10:10 */
		ca_uint32_t rsrvd2 : 5;
		ca_uint32_t rxthresh : 6; /* bits 21:16 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t rx2tx : 1; /* bits 24:24 */
		ca_uint32_t rsrvd4 : 7;
	} bf;
	ca_uint32_t wrd;
} EAXI_EAXI_CTL0_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_EAXI_CTL1 0xf432c004
#define EAXI_EAXI_CTL1_dft 0x03020100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t id0mux : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t id1mux : 4; /* bits 11:8 */
		ca_uint32_t rsrvd2 : 4;
		ca_uint32_t id2mux : 4; /* bits 19:16 */
		ca_uint32_t rsrvd3 : 4;
		ca_uint32_t id3mux : 4; /* bits 27:24 */
		ca_uint32_t rsrvd4 : 4;
	} bf;
	ca_uint32_t wrd;
} EAXI_EAXI_CTL1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* EAXI */
#ifndef __ASSEMBLER__
typedef struct {
	EAXI_EAXI_CTL0_t CTL0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	EAXI_EAXI_CTL1_t CTL1; /* addr: 0x00000004 */
} APB2_EAXI_EAXI_t;
#endif /* !__ASSEMBLER__ */

/*
 * EAXI_TX
 */

#define EAXI_EAXI_TX_TXCTL 0xf432c010
#define EAXI_EAXI_TX_TXCTL_dft 0x01001100

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txqos : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t mingap : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t chmingap : 3; /* bits 14:12 */
		ca_uint32_t rsrvd3 : 9;
		ca_uint32_t invert : 1; /* bits 24:24 */
		ca_uint32_t tx2rx : 1; /* bits 25:25 */
		ca_uint32_t rsrvd4 : 6;
	} bf;
	ca_uint32_t wrd;
} EAXI_EAXI_TX_TXCTL_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_EAXI_TX_REMAP0 0xf432c014
#define EAXI_EAXI_TX_REMAP0_STRIDE 4
#define EAXI_EAXI_TX_REMAP0_COUNT 16
#define EAXI_EAXI_TX_REMAP0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t range : 16; /* bits 15:0 */
		ca_uint32_t value : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} EAXI_EAXI_TX_REMAP0_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* EAXI_TX */
#ifndef __ASSEMBLER__
typedef struct {
	EAXI_EAXI_TX_TXCTL_t TXCTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	EAXI_EAXI_TX_REMAP0_t REMAP0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[28];
} APB2_EAXI_EAXI_TX_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* EAXI */

#ifndef __ASSEMBLER__
typedef struct {
	APB2_EAXI_EAXI_t EAXI; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[13];
	APB2_EAXI_EAXI_TX_t EAXI_TX; /* addr: 0x00000010 */
} APB2_EAXI_t;
#endif /* !__ASSEMBLER__ */

/*
 * HSIOBMISC
 */

/*
 * EAXI_ATU
 */

#define EAXI_ATU_CTL 0xf432d000
#define EAXI_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_DATA0 0xf432d004
#define EAXI_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_DATA1 0xf432d008
#define EAXI_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_DATA2 0xf432d00c
#define EAXI_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_DATA3 0xf432d010
#define EAXI_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_DATA4 0xf432d014
#define EAXI_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_DATA5 0xf432d018
#define EAXI_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define EAXI_ATU_UPPER 0xf432d01c
#define EAXI_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} EAXI_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* EAXI_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	EAXI_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	EAXI_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	EAXI_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	EAXI_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	EAXI_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	EAXI_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	EAXI_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	EAXI_ATU_UPPER_t UPPER; /* addr: 0x0000001c */
} APB2_HSIOBMISC_EAXI_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * PCIE0_ATU
 */

#define PCIE0_ATU_CTL 0xf432d100
#define PCIE0_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define PCIE0_ATU_DATA0 0xf432d104
#define PCIE0_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE0_ATU_DATA1 0xf432d108
#define PCIE0_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE0_ATU_DATA2 0xf432d10c
#define PCIE0_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define PCIE0_ATU_DATA3 0xf432d110
#define PCIE0_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define PCIE0_ATU_DATA4 0xf432d114
#define PCIE0_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define PCIE0_ATU_DATA5 0xf432d118
#define PCIE0_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PCIE0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	PCIE0_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PCIE0_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PCIE0_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PCIE0_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PCIE0_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PCIE0_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PCIE0_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
} APB2_HSIOBMISC_PCIE0_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * PCIE1_ATU
 */

#define PCIE1_ATU_CTL 0xf432d200
#define PCIE1_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define PCIE1_ATU_DATA0 0xf432d204
#define PCIE1_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE1_ATU_DATA1 0xf432d208
#define PCIE1_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE1_ATU_DATA2 0xf432d20c
#define PCIE1_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define PCIE1_ATU_DATA3 0xf432d210
#define PCIE1_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define PCIE1_ATU_DATA4 0xf432d214
#define PCIE1_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define PCIE1_ATU_DATA5 0xf432d218
#define PCIE1_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PCIE1_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	PCIE1_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PCIE1_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PCIE1_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PCIE1_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PCIE1_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PCIE1_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PCIE1_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
} APB2_HSIOBMISC_PCIE1_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * PCIE2_ATU
 */

#define PCIE2_ATU_CTL 0xf432d300
#define PCIE2_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define PCIE2_ATU_DATA0 0xf432d304
#define PCIE2_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define PCIE2_ATU_DATA1 0xf432d308
#define PCIE2_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define PCIE2_ATU_DATA2 0xf432d30c
#define PCIE2_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 21; /* bits 20:0 */
		ca_uint32_t rsrvd1 : 11;
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define PCIE2_ATU_DATA3 0xf432d310
#define PCIE2_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define PCIE2_ATU_DATA4 0xf432d314
#define PCIE2_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define PCIE2_ATU_DATA5 0xf432d318
#define PCIE2_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PCIE2_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PCIE2_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	PCIE2_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PCIE2_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PCIE2_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PCIE2_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PCIE2_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PCIE2_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PCIE2_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
} APB2_HSIOBMISC_PCIE2_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * SATA_ATU
 */

#define SATA_ATU_CTL 0xf432d400
#define SATA_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define SATA_ATU_DATA0 0xf432d404
#define SATA_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define SATA_ATU_DATA1 0xf432d408
#define SATA_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define SATA_ATU_DATA2 0xf432d40c
#define SATA_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define SATA_ATU_DATA3 0xf432d410
#define SATA_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define SATA_ATU_DATA4 0xf432d414
#define SATA_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define SATA_ATU_DATA5 0xf432d418
#define SATA_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} SATA_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SATA_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	SATA_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	SATA_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	SATA_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	SATA_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	SATA_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	SATA_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	SATA_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
} APB2_HSIOBMISC_SATA_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * SD_ATU
 */

#define SD_ATU_CTL 0xf432d500
#define SD_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} SD_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define SD_ATU_DATA0 0xf432d504
#define SD_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} SD_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define SD_ATU_DATA1 0xf432d508
#define SD_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} SD_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define SD_ATU_DATA2 0xf432d50c
#define SD_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} SD_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define SD_ATU_DATA3 0xf432d510
#define SD_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hprot : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} SD_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define SD_ATU_DATA4 0xf432d514
#define SD_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t huser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} SD_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define SD_ATU_UPPER 0xf432d518
#define SD_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} SD_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SD_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	SD_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	SD_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	SD_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	SD_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	SD_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	SD_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	SD_ATU_UPPER_t UPPER; /* addr: 0x00000018 */
} APB2_HSIOBMISC_SD_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * USB0_ATU
 */

#define USB0_ATU_CTL 0xf432d600
#define USB0_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define USB0_ATU_DATA0 0xf432d604
#define USB0_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define USB0_ATU_DATA1 0xf432d608
#define USB0_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define USB0_ATU_DATA2 0xf432d60c
#define USB0_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define USB0_ATU_DATA3 0xf432d610
#define USB0_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define USB0_ATU_DATA4 0xf432d614
#define USB0_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define USB0_ATU_DATA5 0xf432d618
#define USB0_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} USB0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* USB0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	USB0_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	USB0_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	USB0_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	USB0_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	USB0_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	USB0_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	USB0_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
} APB2_HSIOBMISC_USB0_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * USB1_ATU
 */

#define USB1_ATU_CTL 0xf432d700
#define USB1_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define USB1_ATU_DATA0 0xf432d704
#define USB1_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define USB1_ATU_DATA1 0xf432d708
#define USB1_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define USB1_ATU_DATA2 0xf432d70c
#define USB1_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 20; /* bits 19:0 */
		ca_uint32_t rsrvd1 : 12;
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define USB1_ATU_DATA3 0xf432d710
#define USB1_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hprot : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define USB1_ATU_DATA4 0xf432d714
#define USB1_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t huser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define USB1_ATU_UPPER 0xf432d718
#define USB1_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} USB1_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* USB1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	USB1_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	USB1_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	USB1_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	USB1_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	USB1_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	USB1_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	USB1_ATU_UPPER_t UPPER; /* addr: 0x00000018 */
} APB2_HSIOBMISC_USB1_ATU_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* HSIOBMISC */

#ifndef __ASSEMBLER__
typedef struct {
	APB2_HSIOBMISC_EAXI_ATU_t EAXI_ATU; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[241];
	APB2_HSIOBMISC_PCIE0_ATU_t PCIE0_ATU; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[243];
	APB2_HSIOBMISC_PCIE1_ATU_t PCIE1_ATU; /* addr: 0x00000200 */
	ca_uint32_t rsrvd3[243];
	APB2_HSIOBMISC_PCIE2_ATU_t PCIE2_ATU; /* addr: 0x00000300 */
	ca_uint32_t rsrvd4[243];
	APB2_HSIOBMISC_SATA_ATU_t SATA_ATU; /* addr: 0x00000400 */
	ca_uint32_t rsrvd5[243];
	APB2_HSIOBMISC_SD_ATU_t SD_ATU; /* addr: 0x00000500 */
	ca_uint32_t rsrvd6[243];
	APB2_HSIOBMISC_USB0_ATU_t USB0_ATU; /* addr: 0x00000600 */
	ca_uint32_t rsrvd7[243];
	APB2_HSIOBMISC_USB1_ATU_t USB1_ATU; /* addr: 0x00000700 */
} APB2_HSIOBMISC_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB2 */

#ifndef __ASSEMBLER__
typedef struct {
	APB2_GLB_t GLB; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[7977];
	APB2_CAPSRAM_t CAPSRAM; /* addr: 0x00002000 */
	ca_uint32_t rsrvd2[4085];
	APB2_CCI_t CCI; /* addr: 0x00003000 */
	ca_uint32_t rsrvd3[4087];
	APB2_FLASH_t FLASH; /* addr: 0x00004000 */
	ca_uint32_t rsrvd4[3627];
	APB2_PCIEX2_t PCIEX2; /* addr: 0x00005000 */
	ca_uint32_t rsrvd5[3939];
	APB2_PCIEX1__t PCIEX1_[2]; /* addr: 0x00006000 */
	APB2_DDR_CTRL_t DDR_CTRL; /* addr: 0x00008000 */
	ca_uint32_t rsrvd6[1973];
	APB2_PER_t PER; /* addr: 0x00009000 */
	ca_uint32_t rsrvd7[3583];
	APB2_RTC_t RTC; /* addr: 0x0000a000 */
	ca_uint32_t rsrvd8[4035];
	APB2_USBCFG_t USBCFG; /* addr: 0x0000b000 */
	ca_uint32_t rsrvd9[4057];
	APB2_EAXI_t EAXI; /* addr: 0x0000c000 */
	ca_uint32_t rsrvd10[4047];
	APB2_HSIOBMISC_t HSIOBMISC; /* addr: 0x0000d000 */
} APB2_t;
#endif /* !__ASSEMBLER__ */

/*
 * APB3
 */

/*
 * XFI[0..1]
 */

#define XFI_RG00 0xf4331000
#define XFI_RG00_dft 0x00006090

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_TXDLY : 2; /* bits 1:0 */
		ca_uint32_t REG0_BOOST_POST : 1; /* bits 2:2 */
		ca_uint32_t REG0_BOOST_PRE : 1; /* bits 3:3 */
		ca_uint32_t REG0_BOOST_MAIN : 1; /* bits 4:4 */
		ca_uint32_t REG0_POST_EN : 1; /* bits 5:5 */
		ca_uint32_t REG0_PRE_EN : 1; /* bits 6:6 */
		ca_uint32_t REG0_MAIN_EN : 1; /* bits 7:7 */
		ca_uint32_t REG0_TX_SEL_CKRD_DUTY : 1; /* bits 8:8 */
		ca_uint32_t REG0_TX_D2S_SEL : 1; /* bits 9:9 */
		ca_uint32_t REG0_TXLASENDB : 1; /* bits 10:10 */
		ca_uint32_t REG0_SLEW_CTRL : 1; /* bits 11:11 */
		ca_uint32_t REG0_125M_MODE : 1; /* bits 12:12 */
		ca_uint32_t REG0_SPDSEL : 3; /* bits 15:13 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG00_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG01 0xf4331004
#define XFI_RG01_dft 0x0000fc20

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_FORCE_CONNECT : 1; /* bits 0:0 */
		ca_uint32_t REG0_PRE_AMP : 5; /* bits 5:1 */
		ca_uint32_t REG0_MAIN_AMP : 5; /* bits 10:6 */
		ca_uint32_t REG0_AMP : 5; /* bits 15:11 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG01_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG02 0xf4331008
#define XFI_RG02_dft 0x00008444

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_DFE_IEXT_LATCH_ADJ : 4; /* bits 3:0 */
		ca_uint32_t REG0_TXTESTEN : 1; /* bits 4:4 */
		ca_uint32_t REG0_ZTEST : 1; /* bits 5:5 */
		ca_uint32_t REG0_ZTUNE : 1; /* bits 6:6 */
		ca_uint32_t REG0_Z0_TX : 4; /* bits 10:7 */
		ca_uint32_t REG0_POST_AMP : 5; /* bits 15:11 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG02_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG03 0xf433100c
#define XFI_RG03_dft 0x0000c215

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_AGC_CTRL : 3; /* bits 2:0 */
		ca_uint32_t REG0_AGC_LOOP_SEL : 1; /* bits 3:3 */
		ca_uint32_t REG0_IVGA_ADJ : 2; /* bits 5:4 */
		ca_uint32_t REG0_LEQ_ACTYPE_SEL : 1; /* bits 6:6 */
		ca_uint32_t REG0_LEQ_DC_GAIN_BOOST : 2; /* bits 8:7 */
		ca_uint32_t REG0_LEQ_DC_GAIN : 5; /* bits 13:9 */
		ca_uint32_t REG0_LEQ_R_SEL : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG03_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG04 0xf4331010
#define XFI_RG04_dft 0x00007faa

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t REG0_OFFSET_RANGE : 2; /* bits 2:1 */
		ca_uint32_t REG0_DFE_IREF_ODD_ADJ : 2; /* bits 4:3 */
		ca_uint32_t REG0_DFE_IREF_EVEN_ADJ : 2; /* bits 6:5 */
		ca_uint32_t REG0_DFE_IPD_ODD_ADJ : 2; /* bits 8:7 */
		ca_uint32_t REG0_DFE_IPD_EVEN_ADJ : 2; /* bits 10:9 */
		ca_uint32_t REG0_DFE_IMAIN_ODD_ADJ : 2; /* bits 12:11 */
		ca_uint32_t REG0_DFE_IMAIN_EVEN_ADJ : 2; /* bits 14:13 */
		ca_uint32_t REG0_EN_KOFFSET : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG04_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG05 0xf4331014
#define XFI_RG05_dft 0x00005d80

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_eq_hold : 3; /* bits 2:0 */
		ca_uint32_t REG0_EYE_CK_SEL : 1; /* bits 3:3 */
		ca_uint32_t REG0_EYE_SCAN_EN : 1; /* bits 4:4 */
		ca_uint32_t REG0_DFE_VCALI_CTRL : 3; /* bits 7:5 */
		ca_uint32_t REG0_DFE_IV33_ADJ : 2; /* bits 9:8 */
		ca_uint32_t REG0_DFE_ICALI_ADJ : 2; /* bits 11:10 */
		ca_uint32_t REG0_DFE_ICMLATCH_ODD_ADJ : 2; /* bits 13:12 */
		ca_uint32_t REG0_DFE_ICMLATCH_EVEN_ADJ : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG05_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG06 0xf4331018
#define XFI_RG06_dft 0x00006003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_EYE_PI_EN : 4; /* bits 3:0 */
		ca_uint32_t REG0_EYE_REF_CTRL : 6; /* bits 9:4 */
		ca_uint32_t REG0_PI_EYE_CSEL : 2; /* bits 11:10 */
		ca_uint32_t REG0_PI_EYE_IBSEL : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG06_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG07 0xf433101c
#define XFI_RG07_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_EYE_PI_ST : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG07_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG08 0xf4331020
#define XFI_RG08_dft 0x0000626a

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_OOBS_FREQ_SEL : 1; /* bits 0:0 */
		ca_uint32_t REG0_OOBS_SEN_VAL : 5; /* bits 5:1 */
		ca_uint32_t REG0_OOBS_CALI : 2; /* bits 7:6 */
		ca_uint32_t REG0_OOBS_VCM : 2; /* bits 9:8 */
		ca_uint32_t REG0_PI_CSEL : 2; /* bits 11:10 */
		ca_uint32_t REG0_PI_IBSEL : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG08_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG09 0xf4331024
#define XFI_RG09_dft 0x00008540

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_CLK_LA_R_SEL : 4; /* bits 3:0 */
		ca_uint32_t REG0_IBRX_LEQ_BOOST : 1; /* bits 4:4 */
		ca_uint32_t REG0_IBRX_DFE_BOOST : 1; /* bits 5:5 */
		ca_uint32_t REG0_IBTX_ADJ : 2; /* bits 7:6 */
		ca_uint32_t REG0_IBRX_ADJ : 2; /* bits 9:8 */
		ca_uint32_t REG0_BG_SDS_SEL : 2; /* bits 11:10 */
		ca_uint32_t REG0_Z0_RX : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG09_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG0A 0xf4331028
#define XFI_RG0A_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_CKOOBS_AUX : 1; /* bits 0:0 */
		ca_uint32_t REG0_RSTB_BITERR_PRIORITY : 1; /* bits 1:1 */
		ca_uint32_t REG0_OOBS_NSQDLY_SEL : 1; /* bits 2:2 */
		ca_uint32_t REG0_OOBS_CKSEL : 1; /* bits 3:3 */
		ca_uint32_t reg0_tap0_start : 3; /* bits 6:4 */
		ca_uint32_t reg0_tap0_hold : 3; /* bits 9:7 */
		ca_uint32_t reg0_eq_start : 3; /* bits 12:10 */
		ca_uint32_t REG0_CLK_LA_AMP : 2; /* bits 14:13 */
		ca_uint32_t REG0_CLK_LA_EN : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG0A_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG0B 0xf433102c
#define XFI_RG0B_dft 0x00004003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_EQHOLD : 1; /* bits 0:0 */
		ca_uint32_t REG0_EQED_SEL : 1; /* bits 1:1 */
		ca_uint32_t REG0_DYN_KP_EN : 1; /* bits 2:2 */
		ca_uint32_t REG0_CLK_INV : 1; /* bits 3:3 */
		ca_uint32_t REG0_BYPASS_SDM_INT : 1; /* bits 4:4 */
		ca_uint32_t REG0_ACC2_PERIOD : 10; /* bits 14:5 */
		ca_uint32_t REG0_ACC2_MANUAL : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG0B_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG0C 0xf4331030
#define XFI_RG0C_dft 0x000000fd

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_SQU_TRI : 1; /* bits 0:0 */
		ca_uint32_t REG0_SHIFT_INV : 1; /* bits 1:1 */
		ca_uint32_t REG0_EQ_UPPER_LIMIT : 5; /* bits 6:2 */
		ca_uint32_t REG0_EQ_SLICER_EN : 1; /* bits 7:7 */
		ca_uint32_t REG0_EQ_SELREG : 1; /* bits 8:8 */
		ca_uint32_t REG0_EQ_GAIN : 2; /* bits 10:9 */
		ca_uint32_t REG0_EQOUT_OFFSET : 5; /* bits 15:11 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG0C_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG0D 0xf4331034
#define XFI_RG0D_dft 0x0000e060

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_KP : 6; /* bits 5:0 */
		ca_uint32_t REG0_KI : 3; /* bits 8:6 */
		ca_uint32_t REG0_FILTER_OUT : 7; /* bits 15:9 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG0D_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG0E 0xf4331038
#define XFI_RG0E_dft 0x0000846e

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t reg0_cali_load_in_init : 2; /* bits 2:1 */
		ca_uint32_t reg0_cali_ini : 4; /* bits 6:3 */
		ca_uint32_t reg0_cali_gray_en : 2; /* bits 8:7 */
		ca_uint32_t reg0_cali_en : 2; /* bits 10:9 */
		ca_uint32_t reg0_cali_debug_sel : 3; /* bits 13:11 */
		ca_uint32_t reg0_adapt_mode : 2; /* bits 15:14 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG0E_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG0F 0xf433103c
#define XFI_RG0F_dft 0x000003d8

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_coef_sel : 6; /* bits 5:0 */
		ca_uint32_t reg0_cali_stable_th : 5; /* bits 10:6 */
		ca_uint32_t reg0_cali_loop_gain : 4; /* bits 14:11 */
		ca_uint32_t reg0_cali_pc : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG0F_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG10 0xf4331040
#define XFI_RG10_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_dfe_adapt_mode : 2; /* bits 1:0 */
		ca_uint32_t reg0_dfe_adapt_leq_en : 1; /* bits 2:2 */
		ca_uint32_t reg0_dfe_adapt_en : 7; /* bits 9:3 */
		ca_uint32_t reg0_debug_sel : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG10_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG11 0xf4331044
#define XFI_RG11_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_hold_timer_en : 1; /* bits 0:0 */
		ca_uint32_t reg0_leq_gain_prec : 3; /* bits 3:1 */
		ca_uint32_t reg0_eye_step : 4; /* bits 7:4 */
		ca_uint32_t reg0_eye_inv : 1; /* bits 8:8 */
		ca_uint32_t reg0_eye_dir_ini : 1; /* bits 9:9 */
		ca_uint32_t reg0_dfe_adapt_en2 : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG11_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG12 0xf4331048
#define XFI_RG12_dft 0x00007e48

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t reg0_leq_gain_2 : 3; /* bits 3:1 */
		ca_uint32_t reg0_leq_gain_1 : 3; /* bits 6:4 */
		ca_uint32_t reg0_leq_code : 2; /* bits 8:7 */
		ca_uint32_t reg0_gray_en : 7; /* bits 15:9 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG12_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG13 0xf433104c
#define XFI_RG13_dft 0x000000ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_load_in_init : 7; /* bits 6:0 */
		ca_uint32_t reg0_load_leq_init : 1; /* bits 7:7 */
		ca_uint32_t reg0_limit_sel : 5; /* bits 12:8 */
		ca_uint32_t reg0_leq_start : 3; /* bits 15:13 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG13_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG14 0xf4331050
#define XFI_RG14_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_leq_sign_prec : 1; /* bits 0:0 */
		ca_uint32_t reg0_leq_sign_2 : 1; /* bits 1:1 */
		ca_uint32_t reg0_leq_sign_1 : 1; /* bits 2:2 */
		ca_uint32_t reg0_leq_min : 5; /* bits 7:3 */
		ca_uint32_t reg0_leq_init : 5; /* bits 12:8 */
		ca_uint32_t reg0_leq_hold : 3; /* bits 15:13 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG14_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG15 0xf4331054
#define XFI_RG15_dft 0x00000fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_delay_cnt_1 : 4; /* bits 3:0 */
		ca_uint32_t reg0_offset_delay_cnt_0 : 4; /* bits 7:4 */
		ca_uint32_t reg0_offset_delay_cnt : 4; /* bits 11:8 */
		ca_uint32_t reg0_loop_sel : 3; /* bits 14:12 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} XFI_RG15_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG16 0xf4331058
#define XFI_RG16_dft 0x0000ffff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_delay_cnt_5 : 4; /* bits 3:0 */
		ca_uint32_t reg0_offset_delay_cnt_4 : 4; /* bits 7:4 */
		ca_uint32_t reg0_offset_delay_cnt_3 : 4; /* bits 11:8 */
		ca_uint32_t reg0_offset_delay_cnt_2 : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG16_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG17 0xf433105c
#define XFI_RG17_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_stable_cnt_0 : 2; /* bits 1:0 */
		ca_uint32_t reg0_offset_stable_cnt : 2; /* bits 3:2 */
		ca_uint32_t reg0_offset_divisor_0 : 6; /* bits 9:4 */
		ca_uint32_t reg0_offset_divisor : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG17_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG18 0xf4331060
#define XFI_RG18_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_stable_cnt_2 : 2; /* bits 1:0 */
		ca_uint32_t reg0_offset_stable_cnt_1 : 2; /* bits 3:2 */
		ca_uint32_t reg0_offset_divisor_2 : 6; /* bits 9:4 */
		ca_uint32_t reg0_offset_divisor_1 : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG18_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG19 0xf4331064
#define XFI_RG19_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_stable_cnt_4 : 2; /* bits 1:0 */
		ca_uint32_t reg0_offset_stable_cnt_3 : 2; /* bits 3:2 */
		ca_uint32_t reg0_offset_divisor_4 : 6; /* bits 9:4 */
		ca_uint32_t reg0_offset_divisor_3 : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG19_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG1A 0xf4331068
#define XFI_RG1A_dft 0x00000308

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_ini : 8; /* bits 7:0 */
		ca_uint32_t reg0_offset_stable_cnt_5 : 2; /* bits 9:8 */
		ca_uint32_t reg0_offset_divisor_5 : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG1A_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG1B 0xf433106c
#define XFI_RG1B_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_manual : 1; /* bits 0:0 */
		ca_uint32_t reg0_offset_ini_2 : 5; /* bits 5:1 */
		ca_uint32_t reg0_offset_ini_1 : 5; /* bits 10:6 */
		ca_uint32_t reg0_offset_ini_0 : 5; /* bits 15:11 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG1B_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG1C 0xf4331070
#define XFI_RG1C_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_offset_manual_0 : 1; /* bits 0:0 */
		ca_uint32_t reg0_offset_ini_5 : 5; /* bits 5:1 */
		ca_uint32_t reg0_offset_ini_4 : 5; /* bits 10:6 */
		ca_uint32_t reg0_offset_ini_3 : 5; /* bits 15:11 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG1C_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG1D 0xf4331074
#define XFI_RG1D_dft 0x000007f0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_servo_gain : 3; /* bits 2:0 */
		ca_uint32_t reg0_record_limit_en : 1; /* bits 3:3 */
		ca_uint32_t reg0_offset_pc_5 : 1; /* bits 4:4 */
		ca_uint32_t reg0_offset_pc_4 : 1; /* bits 5:5 */
		ca_uint32_t reg0_offset_pc_3 : 1; /* bits 6:6 */
		ca_uint32_t reg0_offset_pc_2 : 1; /* bits 7:7 */
		ca_uint32_t reg0_offset_pc_1 : 1; /* bits 8:8 */
		ca_uint32_t reg0_offset_pc_0 : 1; /* bits 9:9 */
		ca_uint32_t reg0_offset_pc : 1; /* bits 10:10 */
		ca_uint32_t reg0_offset_manual_5 : 1; /* bits 11:11 */
		ca_uint32_t reg0_offset_manual_4 : 1; /* bits 12:12 */
		ca_uint32_t reg0_offset_manual_3 : 1; /* bits 13:13 */
		ca_uint32_t reg0_offset_manual_2 : 1; /* bits 14:14 */
		ca_uint32_t reg0_offset_manual_1 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG1D_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG1E 0xf4331078
#define XFI_RG1E_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_servo_inv : 1; /* bits 0:0 */
		ca_uint32_t reg0_servo_ini_en_5 : 1; /* bits 1:1 */
		ca_uint32_t reg0_servo_ini_en_4 : 1; /* bits 2:2 */
		ca_uint32_t reg0_servo_ini_en_3 : 1; /* bits 3:3 */
		ca_uint32_t reg0_servo_ini_en_2 : 1; /* bits 4:4 */
		ca_uint32_t reg0_servo_ini_en_1 : 1; /* bits 5:5 */
		ca_uint32_t reg0_servo_ini_en_0 : 1; /* bits 6:6 */
		ca_uint32_t reg0_servo_ini_en : 1; /* bits 7:7 */
		ca_uint32_t reg0_servo_hold : 2; /* bits 9:8 */
		ca_uint32_t reg0_servo_divisor : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG1E_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG1F 0xf433107c
#define XFI_RG1F_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_stable_range : 7; /* bits 6:0 */
		ca_uint32_t reg0_servo_start : 2; /* bits 8:7 */
		ca_uint32_t reg0_servo_stable_th : 5; /* bits 13:9 */
		ca_uint32_t reg0_servo_notrans : 1; /* bits 14:14 */
		ca_uint32_t reg0_servo_trans : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG1F_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG20 0xf4331080
#define XFI_RG20_dft 0x00003f00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap0_init : 6; /* bits 5:0 */
		ca_uint32_t reg0_tap0_adjust : 2; /* bits 7:6 */
		ca_uint32_t reg0_stable_en : 7; /* bits 14:8 */
		ca_uint32_t reg0_start_timer_en : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG20_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG21 0xf4331084
#define XFI_RG21_dft 0x00000024

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap0_stable_th : 5; /* bits 4:0 */
		ca_uint32_t reg0_tap0_notrans : 1; /* bits 5:5 */
		ca_uint32_t reg0_tap0_trans : 1; /* bits 6:6 */
		ca_uint32_t reg0_tap0_inv : 1; /* bits 7:7 */
		ca_uint32_t reg0_tap0_max : 5; /* bits 12:8 */
		ca_uint32_t reg0_tap0_gain : 3; /* bits 15:13 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG21_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG22 0xf4331088
#define XFI_RG22_dft 0x0000f900

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t reg0_tap1_start : 3; /* bits 4:2 */
		ca_uint32_t reg0_tap1_hold : 3; /* bits 7:5 */
		ca_uint32_t reg0_tap1_gain : 3; /* bits 10:8 */
		ca_uint32_t reg0_tap0_th_min : 5; /* bits 15:11 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG22_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG23 0xf433108c
#define XFI_RG23_dft 0x00008e30

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap0_threshold : 4; /* bits 3:0 */
		ca_uint32_t reg0_tap1_init_odd : 6; /* bits 9:4 */
		ca_uint32_t reg0_tap1_init_even : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG23_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG24 0xf4331090
#define XFI_RG24_dft 0x00000f93

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap1_th_min_54 : 2; /* bits 1:0 */
		ca_uint32_t reg0_tap1_stable_th : 5; /* bits 6:2 */
		ca_uint32_t reg0_tap1_min : 6; /* bits 12:7 */
		ca_uint32_t reg0_tap1_trans_mode : 1; /* bits 13:13 */
		ca_uint32_t reg0_tap1_trans : 1; /* bits 14:14 */
		ca_uint32_t reg0_tap1_inv : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG24_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG25 0xf4331094
#define XFI_RG25_dft 0x0000f000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap2_init_even : 6; /* bits 5:0 */
		ca_uint32_t reg0_tap2_gain : 3; /* bits 8:6 */
		ca_uint32_t reg0_tap2_trans_mode : 1; /* bits 9:9 */
		ca_uint32_t reg0_tap2_trans : 1; /* bits 10:10 */
		ca_uint32_t reg0_tap2_inv : 1; /* bits 11:11 */
		ca_uint32_t reg0_tap1_th_min_30 : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG25_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG26 0xf4331098
#define XFI_RG26_dft 0x000003ff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap2_min : 5; /* bits 4:0 */
		ca_uint32_t reg0_tap2_max : 5; /* bits 9:5 */
		ca_uint32_t reg0_tap2_init_odd : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG26_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG27 0xf433109c
#define XFI_RG27_dft 0x000027c0

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap3_gain : 3; /* bits 2:0 */
		ca_uint32_t reg0_tap3_trans_mode : 1; /* bits 3:3 */
		ca_uint32_t reg0_tap3_trans : 1; /* bits 4:4 */
		ca_uint32_t reg0_tap3_inv : 1; /* bits 5:5 */
		ca_uint32_t reg0_tap2_th_min : 5; /* bits 10:6 */
		ca_uint32_t reg0_tap2_stable_th : 5; /* bits 15:11 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG27_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG28 0xf43310a0
#define XFI_RG28_dft 0x0000000f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap3_max_41 : 4; /* bits 3:0 */
		ca_uint32_t reg0_tap3_init_odd : 6; /* bits 9:4 */
		ca_uint32_t reg0_tap3_init_even : 6; /* bits 15:10 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG28_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG29 0xf43310a4
#define XFI_RG29_dft 0x0000fc9f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap3_th_min : 5; /* bits 4:0 */
		ca_uint32_t reg0_tap3_stable_th : 5; /* bits 9:5 */
		ca_uint32_t reg0_tap3_min : 5; /* bits 14:10 */
		ca_uint32_t reg0_tap3_max_0 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG29_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG2A 0xf43310a8
#define XFI_RG2A_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap4_init_odd_52 : 4; /* bits 3:0 */
		ca_uint32_t reg0_tap4_init_even : 6; /* bits 9:4 */
		ca_uint32_t reg0_tap4_gain : 3; /* bits 12:10 */
		ca_uint32_t reg0_tap4_trans_mode : 1; /* bits 13:13 */
		ca_uint32_t reg0_tap4_trans : 1; /* bits 14:14 */
		ca_uint32_t reg0_tap4_inv : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG2A_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG2B 0xf43310ac
#define XFI_RG2B_dft 0x00007ff2

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_tap4_stable_th_41 : 4; /* bits 3:0 */
		ca_uint32_t reg0_tap4_min : 5; /* bits 8:4 */
		ca_uint32_t reg0_tap4_max : 5; /* bits 13:9 */
		ca_uint32_t reg0_tap4_init_odd_10 : 2; /* bits 15:14 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG2B_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG2C 0xf43310b0
#define XFI_RG2C_dft 0x00007c00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_transition_only : 1; /* bits 0:0 */
		ca_uint32_t reg0_trans_rlength : 3; /* bits 3:1 */
		ca_uint32_t reg0_tap25_start : 3; /* bits 6:4 */
		ca_uint32_t reg0_tap25_hold : 3; /* bits 9:7 */
		ca_uint32_t reg0_tap4_th_min : 5; /* bits 14:10 */
		ca_uint32_t reg0_tap4_stable_th_0 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG2C_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG2D 0xf43310b4
#define XFI_RG2D_dft 0x00004010

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t reg0_vth_divisor : 4; /* bits 4:1 */
		ca_uint32_t reg0_th_min_en : 5; /* bits 9:5 */
		ca_uint32_t reg0_tap_divisor : 6; /* bits 15:10 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG2D_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG2E 0xf43310b8
#define XFI_RG2E_dft 0x0000e180

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t reg0_vthn_init : 3; /* bits 3:1 */
		ca_uint32_t reg0_vthp_init : 3; /* bits 6:4 */
		ca_uint32_t reg0_vth_threshold : 3; /* bits 9:7 */
		ca_uint32_t reg0_vth_min : 3; /* bits 12:10 */
		ca_uint32_t reg0_vth_max : 3; /* bits 15:13 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG2E_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG2F 0xf43310bc
#define XFI_RG2F_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg0_sample : 3; /* bits 2:0 */
		ca_uint32_t reg0_reduce_adapt_gain : 2; /* bits 4:3 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t reg0_z0_ok_5 : 1; /* bits 9:9 */
		ca_uint32_t reg0_z0_ok_4 : 1; /* bits 10:10 */
		ca_uint32_t reg0_z0_ok_3 : 1; /* bits 11:11 */
		ca_uint32_t reg0_z0_ok_2 : 1; /* bits 12:12 */
		ca_uint32_t reg0_z0_ok_1 : 1; /* bits 13:13 */
		ca_uint32_t reg0_z0_ok_0 : 1; /* bits 14:14 */
		ca_uint32_t reg0_z0_ok : 1; /* bits 15:15 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG2F_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG30 0xf43310c0
#define XFI_RG30_dft 0x0000c924

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_LOBUF_VCM_ST0 : 3; /* bits 2:0 */
		ca_uint32_t REG_LOBUF_VCM_ST1 : 3; /* bits 5:3 */
		ca_uint32_t REG_LOBUF_VCM_ST2 : 3; /* bits 8:6 */
		ca_uint32_t REG_LOBUF_VCM_ST3 : 3; /* bits 11:9 */
		ca_uint32_t REG_CK_EN_S3 : 1; /* bits 12:12 */
		ca_uint32_t REG_CK_EN_S2 : 1; /* bits 13:13 */
		ca_uint32_t REG_CK_EN_S1 : 1; /* bits 14:14 */
		ca_uint32_t REG_CK_EN_S0 : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG30_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG31 0xf43310c4
#define XFI_RG31_dft 0x0000c190

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_LCVCO_TR : 5; /* bits 4:0 */
		ca_uint32_t REG_PI_IBSEL : 2; /* bits 6:5 */
		ca_uint32_t REG_LCBIAS_LPF_EN : 1; /* bits 7:7 */
		ca_uint32_t REG_CMU_PI_BYPASS : 1; /* bits 8:8 */
		ca_uint32_t REG_LCVCO_HSMODE : 1; /* bits 9:9 */
		ca_uint32_t REG_CMU_SSC_ORDER : 1; /* bits 10:10 */
		ca_uint32_t REG_CMU_LC_TESTEN : 1; /* bits 11:11 */
		ca_uint32_t REG_CLKOUT_EN : 1; /* bits 12:12 */
		ca_uint32_t REG_CKOUT_D : 3; /* bits 15:13 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG31_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG32 0xf43310c8
#define XFI_RG32_dft 0x000086ea

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_ICP_SEL_LBW : 1; /* bits 0:0 */
		ca_uint32_t REG_BG_LC_SEL : 2; /* bits 2:1 */
		ca_uint32_t REG_CMU_LC_I_BOOST : 2; /* bits 4:3 */
		ca_uint32_t REG_ISTANK_SEL : 2; /* bits 6:5 */
		ca_uint32_t REG_CMU_ICP_SEL : 5; /* bits 11:7 */
		ca_uint32_t REG_CMU_SEL_R : 4; /* bits 15:12 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG32_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG33 0xf43310cc
#define XFI_RG33_dft 0x00001f09

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_EN_LDO_1p1V : 1; /* bits 0:0 */
		ca_uint32_t REG_CMU_FLD_CLK_SEL : 2; /* bits 2:1 */
		ca_uint32_t REG_CMU_SELPREDIV : 2; /* bits 4:3 */
		ca_uint32_t REG_CMU_stg2_div2 : 1; /* bits 5:5 */
		ca_uint32_t REG_CMU_stg2_div1 : 1; /* bits 6:6 */
		ca_uint32_t REG_CMU_stg1_div2 : 1; /* bits 7:7 */
		ca_uint32_t REG_CMU_NCODE_IN : 8; /* bits 15:8 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG33_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG34 0xf43310d0
#define XFI_RG34_dft 0x000028b8

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_CKREF_TERM_R_SEL : 2; /* bits 1:0 */
		ca_uint32_t REG_CMU_EN_CENTER_IN : 1; /* bits 2:2 */
		ca_uint32_t REG_LPF_CKO : 3; /* bits 5:3 */
		ca_uint32_t REG_VREF_LDO_CKO : 2; /* bits 7:6 */
		ca_uint32_t REG_SEL_LDO_CKO : 1; /* bits 8:8 */
		ca_uint32_t REG_VSEL_LREG : 3; /* bits 11:9 */
		ca_uint32_t REG_VSEL_LREGD : 3; /* bits 14:12 */
		ca_uint32_t REG_LREGD_SEL_VREF : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG34_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG35 0xf43310d4
#define XFI_RG35_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_CMU_cp_time : 3; /* bits 2:0 */
		ca_uint32_t REG_CMU_STEP_IN : 13; /* bits 15:3 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG35_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG36 0xf43310d8
#define XFI_RG36_dft 0x00000002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_CMU_calib_time : 3; /* bits 2:0 */
		ca_uint32_t REG_CMU_FCODE_IN : 13; /* bits 15:3 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG36_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG37 0xf43310dc
#define XFI_RG37_dft 0x00001299

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_CMU_init_time : 3; /* bits 2:0 */
		ca_uint32_t REG_CMU_AUTO_K : 1; /* bits 3:3 */
		ca_uint32_t REG_SEL_IBLPF_CMU_LC : 1; /* bits 4:4 */
		ca_uint32_t REG_CMU_cp_en_manual : 1; /* bits 5:5 */
		ca_uint32_t REG_CMU_calib_manual : 1; /* bits 6:6 */
		ca_uint32_t REG_CMU_auto_mode : 1; /* bits 7:7 */
		ca_uint32_t REG_TIME_RDY_CKOUT : 2; /* bits 9:8 */
		ca_uint32_t REG_TIME2_RST_WIDTH : 2; /* bits 11:10 */
		ca_uint32_t REG_TIME0_CK : 3; /* bits 14:12 */
		ca_uint32_t REG_WD_ENABLE : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG37_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG38 0xf43310e0
#define XFI_RG38_dft 0x00008410

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_CMU_divide_num : 6; /* bits 5:0 */
		ca_uint32_t REG_CMU_lock_dn_limit : 10; /* bits 15:6 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG38_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG39 0xf43310e4
#define XFI_RG39_dft 0x00004210

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_F390K : 2; /* bits 1:0 */
		ca_uint32_t REG_CMU_adp_time : 3; /* bits 4:2 */
		ca_uint32_t REG_CMU_EN_SSC : 1; /* bits 5:5 */
		ca_uint32_t REG_CMU_lock_up_limit : 10; /* bits 15:6 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG39_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG3A 0xf43310e8
#define XFI_RG3A_dft 0x0000000d

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG_FLD_VREF_SEL : 2; /* bits 1:0 */
		ca_uint32_t REG_FLD_DSEL : 2; /* bits 3:2 */
		ca_uint32_t REG_CMU_TBASE : 12; /* bits 15:4 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG3A_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG40 0xf43310ec
#define XFI_RG40_dft 0x0c001002

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_OOBS_RXIDLE_MANUAL : 1; /* bits 0:0 */
		ca_uint32_t REG0_OFFSET_SEQ : 1; /* bits 1:1 */
		ca_uint32_t REG0_EYE_XOR_CK_SEL : 2; /* bits 3:2 */
		ca_uint32_t REG0_CDR_RESET_SEL : 1; /* bits 4:4 */
		ca_uint32_t NO_SDS : 1; /* bits 5:5 */
		ca_uint32_t REG0_RESET_MANUAL : 1; /* bits 6:6 */
		ca_uint32_t REG0_RX_DBG_SEL : 2; /* bits 8:7 */
		ca_uint32_t REG0_RX_EN_SELF : 1; /* bits 9:9 */
		ca_uint32_t REG0_RX_EN_TEST : 1; /* bits 10:10 */
		ca_uint32_t REG0_RX_FORCERUN : 1; /* bits 11:11 */
		ca_uint32_t REG0_RX_SEL_RXIDLE : 1; /* bits 12:12 */
		ca_uint32_t REG0_TX_EN_TEST : 1; /* bits 13:13 */
		ca_uint32_t REG0_INT_INIT : 11; /* bits 24:14 */
		ca_uint32_t REG0_LFPS_DEBOUNCE : 1; /* bits 25:25 */
		ca_uint32_t REG0_LFPS_HPERIOD : 4; /* bits 29:26 */
		ca_uint32_t REG0_LFPS_LAST : 2; /* bits 31:30 */
	} bf;
	ca_uint32_t wrd;
} XFI_RG40_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG41 0xf43310f0
#define XFI_RG41_dft 0x09c00001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_LFPS_LPERIOD : 4; /* bits 3:0 */
		ca_uint32_t REG0_MAXHOLD_EN : 1; /* bits 4:4 */
		ca_uint32_t REG0_PI_M_MODE : 1; /* bits 5:5 */
		ca_uint32_t REG0_ST_MODE : 1; /* bits 6:6 */
		ca_uint32_t REG0_TIMER_BER : 5; /* bits 11:7 */
		ca_uint32_t REG0_TIMER_EQ : 5; /* bits 16:12 */
		ca_uint32_t REG0_TIMER_LPF : 5; /* bits 21:17 */
		ca_uint32_t REG0_TIMER_MAXHOLD : 8; /* bits 29:22 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} XFI_RG41_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG42 0xf43310f4
#define XFI_RG42_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_ST_M_VALUE : 6; /* bits 5:0 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} XFI_RG42_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG43 0xf43310f8
#define XFI_RG43_dft 0x00000005

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_SUMMER_CNT : 3; /* bits 2:0 */
		ca_uint32_t reg0_dfe_adapt_eqen : 1; /* bits 3:3 */
		ca_uint32_t reg0_dfe_adapt_leq_eqen : 1; /* bits 4:4 */
		ca_uint32_t REG0_TAP0_EN_SEL : 1; /* bits 5:5 */
		ca_uint32_t REG0_TAP1_EN_SEL : 1; /* bits 6:6 */
		ca_uint32_t REG0_TAP2_EN_SEL : 1; /* bits 7:7 */
		ca_uint32_t REG0_TAP3_EN_SEL : 1; /* bits 8:8 */
		ca_uint32_t REG0_TAP4_EN_SEL : 1; /* bits 9:9 */
		ca_uint32_t reg0_summer_manual : 1; /* bits 10:10 */
		ca_uint32_t reg0_eye_cali_en : 1; /* bits 11:11 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} XFI_RG43_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG44 0xf43310fc
#define XFI_RG44_dft 0x00005f00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_EN_ST_STEP : 2; /* bits 1:0 */
		ca_uint32_t REG0_VTH_STEP : 2; /* bits 3:2 */
		ca_uint32_t REG0_VTH_INTERVAL : 4; /* bits 7:4 */
		ca_uint32_t reg0_rstn_eye_xor : 1; /* bits 8:8 */
		ca_uint32_t reg0_ckmdio : 1; /* bits 9:9 */
		ca_uint32_t CK156_EN : 1; /* bits 10:10 */
		ca_uint32_t CK250_EN : 1; /* bits 11:11 */
		ca_uint32_t CK312P5_EN : 1; /* bits 12:12 */
		ca_uint32_t CMU_EN : 1; /* bits 13:13 */
		ca_uint32_t CM_ON : 1; /* bits 14:14 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} XFI_RG44_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG45 0xf4331100
#define XFI_RG45_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_80OHM_TX : 1; /* bits 0:0 */
		ca_uint32_t REG0_80OHM_RX : 1; /* bits 1:1 */
		ca_uint32_t REG0_85OHM_TX : 1; /* bits 2:2 */
		ca_uint32_t REG0_85OHM_RX : 1; /* bits 3:3 */
		ca_uint32_t REG0_CDR_SEL_TESTOUT : 1; /* bits 4:4 */
		ca_uint32_t REG0_CMU_RSEL : 3; /* bits 7:5 */
		ca_uint32_t REG0_EN_CLKREQ : 1; /* bits 8:8 */
		ca_uint32_t REG0_FIBER_MODE : 1; /* bits 9:9 */
		ca_uint32_t REG0_OFFSET_OK_MANUAL : 1; /* bits 10:10 */
		ca_uint32_t REG0_OFFSET_OK_MANUAL_EN : 1; /* bits 11:11 */
		ca_uint32_t REG0_RX_CLK_PSAVE : 1; /* bits 12:12 */
		ca_uint32_t REG0_RX_DATA_PSAVE : 1; /* bits 13:13 */
		ca_uint32_t REG0_RX_FREQDIV2_EN : 1; /* bits 14:14 */
		ca_uint32_t REG0_RX_OFFSET_SEL : 1; /* bits 15:15 */
		ca_uint32_t REG0_RX_PS_AFE : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} XFI_RG45_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG46 0xf4331104
#define XFI_RG46_dft 0x00008108

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_Z0_RXADJ : 4; /* bits 3:0 */
		ca_uint32_t REG0_Z0_RXAUTO_K : 1; /* bits 4:4 */
		ca_uint32_t REG0_Z0_TXADJ : 4; /* bits 8:5 */
		ca_uint32_t REG0_Z0_TXAUTO_K : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t S0_RSTB_EQ : 1; /* bits 11:11 */
		ca_uint32_t REG0_TEST_EN : 1; /* bits 12:12 */
		ca_uint32_t REG0_DLPFEN_MANUAL : 1; /* bits 13:13 */
		ca_uint32_t REG0_CK312P5_DIV_MODE : 1; /* bits 14:14 */
		ca_uint32_t PDOWN : 1; /* bits 15:15 */
		ca_uint32_t RX50_LINK : 1; /* bits 16:16 */
		ca_uint32_t RX_CLKWR_EN : 1; /* bits 17:17 */
		ca_uint32_t RX_DATA_EN : 1; /* bits 18:18 */
		ca_uint32_t RX_EN : 1; /* bits 19:19 */
		ca_uint32_t RXIDLE_D : 1; /* bits 20:20 */
		ca_uint32_t POW_PCIX : 1; /* bits 21:21 */
		ca_uint32_t rsrvd2 : 10;
	} bf;
	ca_uint32_t wrd;
} XFI_RG46_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG47 0xf4331108
#define XFI_RG47_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REG0_RESERVED : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} XFI_RG47_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG48 0xf433110c
#define XFI_RG48_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t S0_EYE_PI_EN : 4; /* bits 3:0 */
		ca_uint32_t S0_EYE_REF_CTRL : 6; /* bits 9:4 */
		ca_uint32_t S0_EYE_SCORE : 8; /* bits 17:10 */
		ca_uint32_t S0_EYE_SCORE_VALID : 1; /* bits 18:18 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} XFI_RG48_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG49 0xf4331110
#define XFI_RG49_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t S0_EYE_PI_ST : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG49_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG4A 0xf4331114
#define XFI_RG4A_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t S0_calib_ok : 1; /* bits 0:0 */
		ca_uint32_t S0_coef_data : 8; /* bits 8:1 */
		ca_uint32_t S0_limit_data : 8; /* bits 16:9 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} XFI_RG4A_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG4B 0xf4331118
#define XFI_RG4B_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t S0_dout_eye_xor : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} XFI_RG4B_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG4C 0xf433111c
#define XFI_RG4C_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t S0_ST_BIN_RO : 6; /* bits 5:0 */
		ca_uint32_t S0_STEP_RO : 5; /* bits 10:6 */
		ca_uint32_t S0_LFPS_DET : 1; /* bits 11:11 */
		ca_uint32_t S0_E2S_CK_AFE : 1; /* bits 12:12 */
		ca_uint32_t REG0_OUT_ADP_FAIL : 1; /* bits 13:13 */
		ca_uint32_t DEBUG0_CLK_LA : 1; /* bits 14:14 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} XFI_RG4C_t;
#endif /* !__ASSEMBLER__ */

#define XFI_RG4D 0xf4331120
#define XFI_RG4D_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ber_notify : 1; /* bits 0:0 */
		ca_uint32_t rxidle : 1; /* bits 1:1 */
		ca_uint32_t clk_rdy : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} XFI_RG4D_t;
#endif /* !__ASSEMBLER__ */

#define APB3_XFI_STRIDE 4096
#define APB3_XFI_COUNT 2

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* XFI */
#ifndef __ASSEMBLER__
typedef struct {
	XFI_RG00_t RG00; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	XFI_RG01_t RG01; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	XFI_RG02_t RG02; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	XFI_RG03_t RG03; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	XFI_RG04_t RG04; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	XFI_RG05_t RG05; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	XFI_RG06_t RG06; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	XFI_RG07_t RG07; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	XFI_RG08_t RG08; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	XFI_RG09_t RG09; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	XFI_RG0A_t RG0A; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	XFI_RG0B_t RG0B; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	XFI_RG0C_t RG0C; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	XFI_RG0D_t RG0D; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	XFI_RG0E_t RG0E; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	XFI_RG0F_t RG0F; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	XFI_RG10_t RG10; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	XFI_RG11_t RG11; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	XFI_RG12_t RG12; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	XFI_RG13_t RG13; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	XFI_RG14_t RG14; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	XFI_RG15_t RG15; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	XFI_RG16_t RG16; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	XFI_RG17_t RG17; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	XFI_RG18_t RG18; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	XFI_RG19_t RG19; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	XFI_RG1A_t RG1A; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	XFI_RG1B_t RG1B; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	XFI_RG1C_t RG1C; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	XFI_RG1D_t RG1D; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	XFI_RG1E_t RG1E; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	XFI_RG1F_t RG1F; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	XFI_RG20_t RG20; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	XFI_RG21_t RG21; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	XFI_RG22_t RG22; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	XFI_RG23_t RG23; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	XFI_RG24_t RG24; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	XFI_RG25_t RG25; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	XFI_RG26_t RG26; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	XFI_RG27_t RG27; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	XFI_RG28_t RG28; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	XFI_RG29_t RG29; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	XFI_RG2A_t RG2A; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	XFI_RG2B_t RG2B; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	XFI_RG2C_t RG2C; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	XFI_RG2D_t RG2D; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	XFI_RG2E_t RG2E; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	XFI_RG2F_t RG2F; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	XFI_RG30_t RG30; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	XFI_RG31_t RG31; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	XFI_RG32_t RG32; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	XFI_RG33_t RG33; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	XFI_RG34_t RG34; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	XFI_RG35_t RG35; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	XFI_RG36_t RG36; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	XFI_RG37_t RG37; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	XFI_RG38_t RG38; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	XFI_RG39_t RG39; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	XFI_RG3A_t RG3A; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	XFI_RG40_t RG40; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	XFI_RG41_t RG41; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	XFI_RG42_t RG42; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	XFI_RG43_t RG43; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	XFI_RG44_t RG44; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	XFI_RG45_t RG45; /* addr: 0x00000100 */
	ca_uint32_t rsrvd65[3];
	XFI_RG46_t RG46; /* addr: 0x00000104 */
	ca_uint32_t rsrvd66[3];
	XFI_RG47_t RG47; /* addr: 0x00000108 */
	ca_uint32_t rsrvd67[3];
	XFI_RG48_t RG48; /* addr: 0x0000010c */
	ca_uint32_t rsrvd68[3];
	XFI_RG49_t RG49; /* addr: 0x00000110 */
	ca_uint32_t rsrvd69[3];
	XFI_RG4A_t RG4A; /* addr: 0x00000114 */
	ca_uint32_t rsrvd70[3];
	XFI_RG4B_t RG4B; /* addr: 0x00000118 */
	ca_uint32_t rsrvd71[3];
	XFI_RG4C_t RG4C; /* addr: 0x0000011c */
	ca_uint32_t rsrvd72[3];
	XFI_RG4D_t RG4D; /* addr: 0x00000120 */
	ca_uint32_t rsrvd73[3807];
} APB3_XFI_t;
#endif /* !__ASSEMBLER__ */

/*
 * S0_0
 */

/*
 * S0_1
 */

/*
 * S1
 */

/*
 * S2
 */

/*
 * S3
 */

/*
 * GPHY
 */

/*
 * SGMII_LP
 */

/*
 * SGMII_HP
 */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB3 */

#ifndef __ASSEMBLER__
typedef struct {
	ca_uint32_t rsrvd1[4096];
	APB3_XFI_t XFI[2]; /* addr: 0x00001000 */
} APB3_t;
#endif /* !__ASSEMBLER__ */

/*
 * APB5
 */

/*
 * APB4
 */

/*
 * GPV0
 */

/*
 * GPV1
 */

/*
 * GPV2
 */

/*
 * GPV3
 */

/*
 * GPV4
 */

/*
 * CCI400
 */

/*
 * APB1
 */

/*
 * PE0_ATU
 */

#define PE0_ATU_CTL 0xf6700000
#define PE0_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_DATA0 0xf6700004
#define PE0_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_DATA1 0xf6700008
#define PE0_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_DATA2 0xf670000c
#define PE0_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 19; /* bits 18:0 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_DATA3 0xf6700010
#define PE0_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_DATA4 0xf6700014
#define PE0_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_DATA5 0xf6700018
#define PE0_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define PE0_ATU_UPPER 0xf670001c
#define PE0_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} PE0_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	PE0_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PE0_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PE0_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PE0_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PE0_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PE0_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PE0_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	PE0_ATU_UPPER_t UPPER; /* addr: 0x0000001c */
} APB1_PE0_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * PE1_ATU
 */

#define PE1_ATU_CTL 0xf6700100
#define PE1_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_DATA0 0xf6700104
#define PE1_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_DATA1 0xf6700108
#define PE1_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_DATA2 0xf670010c
#define PE1_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 19; /* bits 18:0 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_DATA3 0xf6700110
#define PE1_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_DATA4 0xf6700114
#define PE1_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_DATA5 0xf6700118
#define PE1_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define PE1_ATU_UPPER 0xf670011c
#define PE1_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} PE1_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	PE1_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PE1_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PE1_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PE1_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PE1_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PE1_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PE1_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	PE1_ATU_UPPER_t UPPER; /* addr: 0x0000001c */
} APB1_PE1_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * CRYPTO0_ATU
 */

#define CRYPTO0_ATU_CTL 0xf6700200
#define CRYPTO0_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_DATA0 0xf6700204
#define CRYPTO0_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_DATA1 0xf6700208
#define CRYPTO0_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_DATA2 0xf670020c
#define CRYPTO0_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 19; /* bits 18:0 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_DATA3 0xf6700210
#define CRYPTO0_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_DATA4 0xf6700214
#define CRYPTO0_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_DATA5 0xf6700218
#define CRYPTO0_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO0_ATU_UPPER 0xf670021c
#define CRYPTO0_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} CRYPTO0_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CRYPTO0_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	CRYPTO0_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	CRYPTO0_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	CRYPTO0_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	CRYPTO0_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	CRYPTO0_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	CRYPTO0_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	CRYPTO0_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	CRYPTO0_ATU_UPPER_t UPPER; /* addr: 0x0000001c */
} APB1_CRYPTO0_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * CRYPTO1_ATU
 */

#define CRYPTO1_ATU_CTL 0xf6700400
#define CRYPTO1_ATU_CTL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t enable : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 16;
		ca_uint32_t idx : 6; /* bits 29:24 */
		ca_uint32_t r : 1; /* bits 30:30 */
		ca_uint32_t w : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_CTL_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_DATA0 0xf6700404
#define CRYPTO1_ATU_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_comp : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_DATA1 0xf6700408
#define CRYPTO1_ATU_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_input_mask : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_DATA2 0xf670040c
#define CRYPTO1_ATU_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t addr_output_value : 19; /* bits 18:0 */
		ca_uint32_t rsrvd1 : 13;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_DATA3 0xf6700410
#define CRYPTO1_ATU_DATA3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arprot : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t awprot : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t arqos : 4; /* bits 11:8 */
		ca_uint32_t awqos : 4; /* bits 15:12 */
		ca_uint32_t arcache : 4; /* bits 19:16 */
		ca_uint32_t awcache : 4; /* bits 23:20 */
		ca_uint32_t user_en : 1; /* bits 24:24 */
		ca_uint32_t prot_en : 1; /* bits 25:25 */
		ca_uint32_t cache_en : 1; /* bits 26:26 */
		ca_uint32_t qos_en : 1; /* bits 27:27 */
		ca_uint32_t rsrvd3 : 4;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_DATA3_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_DATA4 0xf6700414
#define CRYPTO1_ATU_DATA4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_DATA4_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_DATA5 0xf6700418
#define CRYPTO1_ATU_DATA5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser : 14; /* bits 13:0 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_DATA5_t;
#endif /* !__ASSEMBLER__ */

#define CRYPTO1_ATU_UPPER 0xf670041c
#define CRYPTO1_ATU_UPPER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upper_bits : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} CRYPTO1_ATU_UPPER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* CRYPTO1_ATU */
#ifndef __ASSEMBLER__
typedef struct {
	CRYPTO1_ATU_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	CRYPTO1_ATU_DATA0_t DATA0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	CRYPTO1_ATU_DATA1_t DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	CRYPTO1_ATU_DATA2_t DATA2; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	CRYPTO1_ATU_DATA3_t DATA3; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	CRYPTO1_ATU_DATA4_t DATA4; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	CRYPTO1_ATU_DATA5_t DATA5; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	CRYPTO1_ATU_UPPER_t UPPER; /* addr: 0x0000001c */
} APB1_CRYPTO1_ATU_t;
#endif /* !__ASSEMBLER__ */

/*
 * LDMA
 */

/*
 * LDMA_GLB
 */

#define LDMA_LDMA_GLB_LDMA_CONTROL 0xf6701000
#define LDMA_LDMA_GLB_LDMA_CONTROL_dft 0x00000080

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t aruser_idx : 3; /* bits 6:4 */
		ca_uint32_t bkt_sel : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t lpae_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_LDMA_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER 0xf6701004
#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER_dft 0x00800400

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t period : 16; /* bits 15:0 */
		ca_uint32_t credit : 12; /* bits 27:16 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_LDMA_RATE_LIMITER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB 0xf6701008
#define LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB_dft 0x00000fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t upperbound : 15; /* bits 14:0 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_LDMA_BKT0_DWRR 0xf670100c
#define LDMA_LDMA_GLB_LDMA_BKT0_DWRR_dft 0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t quantum_size : 16; /* bits 15:0 */
		ca_uint32_t dc_upperbound : 15; /* bits 30:16 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_LDMA_BKT0_DWRR_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_LDMA_BKT1_DWRR 0xf6701010
#define LDMA_LDMA_GLB_LDMA_BKT1_DWRR_dft 0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t quantum_size : 16; /* bits 15:0 */
		ca_uint32_t dc_upperbound : 15; /* bits 30:16 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_LDMA_BKT1_DWRR_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0 0xf6701014
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0 0xf6701018
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1 0xf670101c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1 0xf6701020
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2 0xf6701024
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2 0xf6701028
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3 0xf670102c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3 0xf6701030
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4 0xf6701034
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4 0xf6701038
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5 0xf670103c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5 0xf6701040
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6 0xf6701044
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6 0xf6701048
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7 0xf670104c
#define LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_idx : 3; /* bits 2:0 */
		ca_uint32_t bkt_sel : 1; /* bits 3:3 */
		ca_uint32_t seg_start_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_start_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7 0xf6701050
#define LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t awuser_idx : 3; /* bits 2:0 */
		ca_uint32_t ace_cmd : 1; /* bits 3:3 */
		ca_uint32_t seg_end_addr : 20; /* bits 23:4 */
		ca_uint32_t seg_end_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_0 0xf6701054
#define LDMA_LDMA_GLB_AXPATTEN_0_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_0_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_1 0xf6701058
#define LDMA_LDMA_GLB_AXPATTEN_1_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_1_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_2 0xf670105c
#define LDMA_LDMA_GLB_AXPATTEN_2_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_2_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_3 0xf6701060
#define LDMA_LDMA_GLB_AXPATTEN_3_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_3_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_4 0xf6701064
#define LDMA_LDMA_GLB_AXPATTEN_4_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_4_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_5 0xf6701068
#define LDMA_LDMA_GLB_AXPATTEN_5_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_5_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_6 0xf670106c
#define LDMA_LDMA_GLB_AXPATTEN_6_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_6_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_AXPATTEN_7 0xf6701070
#define LDMA_LDMA_GLB_AXPATTEN_7_dft 0x00800000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ax_user : 14; /* bits 13:0 */
		ca_uint32_t ax_cache : 4; /* bits 17:14 */
		ca_uint32_t ax_qos : 4; /* bits 21:18 */
		ca_uint32_t ax_prot : 3; /* bits 24:22 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_AXPATTEN_7_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER 0xf6701074
#define LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER_dft 0x0000ff00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t q0_sel : 1; /* bits 0:0 */
		ca_uint32_t q1_sel : 1; /* bits 1:1 */
		ca_uint32_t q2_sel : 1; /* bits 2:2 */
		ca_uint32_t q3_sel : 1; /* bits 3:3 */
		ca_uint32_t q4_sel : 1; /* bits 4:4 */
		ca_uint32_t q5_sel : 1; /* bits 5:5 */
		ca_uint32_t q6_sel : 1; /* bits 6:6 */
		ca_uint32_t q7_sel : 1; /* bits 7:7 */
		ca_uint32_t q8_sel : 1; /* bits 8:8 */
		ca_uint32_t q9_sel : 1; /* bits 9:9 */
		ca_uint32_t q10_sel : 1; /* bits 10:10 */
		ca_uint32_t q11_sel : 1; /* bits 11:11 */
		ca_uint32_t q12_sel : 1; /* bits 12:12 */
		ca_uint32_t q13_sel : 1; /* bits 13:13 */
		ca_uint32_t q14_sel : 1; /* bits 14:14 */
		ca_uint32_t q15_sel : 1; /* bits 15:15 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER 0xf6701078
#define LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t PE0_QA : 4; /* bits 3:0 */
		ca_uint32_t PE0_QA_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t PE0_QB : 4; /* bits 11:8 */
		ca_uint32_t PE0_QB_en : 1; /* bits 12:12 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t PE1_QA : 4; /* bits 19:16 */
		ca_uint32_t PE1_QA_en : 1; /* bits 20:20 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t PE1_QB : 4; /* bits 27:24 */
		ca_uint32_t PE1_QB_en : 1; /* bits 28:28 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER 0xf670107c
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER 0xf6701080
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER 0xf6701084
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER 0xf6701088
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER 0xf670108c
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER 0xf6701090
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER 0xf6701094
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER 0xf6701098
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER 0xf670109c
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER 0xf67010a0
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER 0xf67010a4
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER 0xf67010a8
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER 0xf67010ac
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER 0xf67010b0
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER 0xf67010b4
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER 0xf67010b8
#define LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER 0xf67010bc
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER 0xf67010c0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER 0xf67010c4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER 0xf67010c8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER 0xf67010cc
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER 0xf67010d0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER 0xf67010d4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER 0xf67010d8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER 0xf67010dc
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER 0xf67010e0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER 0xf67010e4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER 0xf67010e8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER 0xf67010ec
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER 0xf67010f0
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER 0xf67010f4
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER 0xf67010f8
#define LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER 0xf67010fc
#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER 0xf6701100
#define LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER_dft \
	0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wch_dc : 16; /* bits 15:0 */
		ca_uint32_t rch_dc : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_GLB */
#ifndef __ASSEMBLER__
typedef struct {
	LDMA_LDMA_GLB_LDMA_CONTROL_t LDMA_CONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	LDMA_LDMA_GLB_LDMA_RATE_LIMITER_t LDMA_RATE_LIMITER; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	LDMA_LDMA_GLB_LDMA_RATE_LIMITER_UB_t
	  LDMA_RATE_LIMITER_UB; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	LDMA_LDMA_GLB_LDMA_BKT0_DWRR_t LDMA_BKT0_DWRR; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	LDMA_LDMA_GLB_LDMA_BKT1_DWRR_t LDMA_BKT1_DWRR; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_0_t
	  MEM_START_ADDR_SEG_0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_0_t MEM_END_ADDR_SEG_0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_1_t
	  MEM_START_ADDR_SEG_1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_1_t MEM_END_ADDR_SEG_1; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_2_t
	  MEM_START_ADDR_SEG_2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_2_t MEM_END_ADDR_SEG_2; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_3_t
	  MEM_START_ADDR_SEG_3; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_3_t MEM_END_ADDR_SEG_3; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_4_t
	  MEM_START_ADDR_SEG_4; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_4_t MEM_END_ADDR_SEG_4; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_5_t
	  MEM_START_ADDR_SEG_5; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_5_t MEM_END_ADDR_SEG_5; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_6_t
	  MEM_START_ADDR_SEG_6; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_6_t MEM_END_ADDR_SEG_6; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	LDMA_LDMA_GLB_MEM_START_ADDR_SEG_7_t
	  MEM_START_ADDR_SEG_7; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	LDMA_LDMA_GLB_MEM_END_ADDR_SEG_7_t MEM_END_ADDR_SEG_7; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	LDMA_LDMA_GLB_AXPATTEN_0_t AXPATTEN_0; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	LDMA_LDMA_GLB_AXPATTEN_1_t AXPATTEN_1; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	LDMA_LDMA_GLB_AXPATTEN_2_t AXPATTEN_2; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	LDMA_LDMA_GLB_AXPATTEN_3_t AXPATTEN_3; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	LDMA_LDMA_GLB_AXPATTEN_4_t AXPATTEN_4; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	LDMA_LDMA_GLB_AXPATTEN_5_t AXPATTEN_5; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	LDMA_LDMA_GLB_AXPATTEN_6_t AXPATTEN_6; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	LDMA_LDMA_GLB_AXPATTEN_7_t AXPATTEN_7; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	LDMA_LDMA_GLB_QUEUE_ASSIGN_REGISTER_t
	  QUEUE_ASSIGN_REGISTER; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	LDMA_LDMA_GLB_FAST_Q_ASSIGN_REGISTER_t
	  FAST_Q_ASSIGN_REGISTER; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE0_DEFICIT_COUNTER_REGISTER; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE1_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE2_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE3_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE4_DEFICIT_COUNTER_REGISTER; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE5_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE6_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE7_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE8_DEFICIT_COUNTER_REGISTER; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE9_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE10_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE11_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE12_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE13_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE14_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd46[3];
	LDMA_LDMA_GLB_DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET0_QUEUE15_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000b8 */
	ca_uint32_t rsrvd47[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE0_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000bc */
	ca_uint32_t rsrvd48[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE1_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd49[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE2_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd50[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE3_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd51[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE4_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000cc */
	ca_uint32_t rsrvd52[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE5_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd53[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE6_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd54[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE7_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000d8 */
	ca_uint32_t rsrvd55[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE8_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000dc */
	ca_uint32_t rsrvd56[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE9_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd57[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE10_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd58[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE11_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd59[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE12_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000ec */
	ca_uint32_t rsrvd60[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE13_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd61[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE14_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000f4 */
	ca_uint32_t rsrvd62[3];
	LDMA_LDMA_GLB_DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER_t
	  DBG_BUCKET1_QUEUE15_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000f8 */
	ca_uint32_t rsrvd63[3];
	LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER_t
	  DBG_2NDLEVEL_BUCKET0_DEFICIT_COUNTER_REGISTER; /* addr: 0x000000fc */
	ca_uint32_t rsrvd64[3];
	LDMA_LDMA_GLB_DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER_t
	  DBG_2NDLEVEL_BUCKET1_DEFICIT_COUNTER_REGISTER; /* addr: 0x00000100 */
} APB1_LDMA_LDMA_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * AXIM2
 */

#define LDMA_AXIM2_CONFIG 0xf67011a0
#define LDMA_AXIM2_CONFIG_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write_outtrans_num : 4; /* bits 3:0 */
		ca_uint32_t axi_read_outtrans_num : 4; /* bits 7:4 */
		ca_uint32_t axi_xbus_len : 3; /* bits 10:8 */
		ca_uint32_t write_cacheline_trans_en : 1; /* bits 11:11 */
		ca_uint32_t write_cacheline_trans_size : 1; /* bits 12:12 */
		ca_uint32_t read_cacheline_trans_en : 1; /* bits 13:13 */
		ca_uint32_t read_cacheline_trans_size : 1; /* bits 14:14 */
		ca_uint32_t arcache_eos_en : 1; /* bits 15:15 */
		ca_uint32_t awcache_eos_en : 1; /* bits 16:16 */
		ca_uint32_t reserved : 15; /* bits 31:17 */
	} bf;
	ca_uint32_t wrd;
} LDMA_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_AXIM2_TIMEOUT_THRESHOLD 0xf67011a4
#define LDMA_AXIM2_TIMEOUT_THRESHOLD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_channel_threshold : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t write_channel_threshold : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 27;
	} bf;
	ca_uint32_t wrd;
} LDMA_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_AXIM2_INTERRUPT_STATUS 0xf67011a8
#define LDMA_AXIM2_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} LDMA_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_AXIM2_INTERRUPT_ENABLE 0xf67011ac
#define LDMA_AXIM2_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int_en : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int_en : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int_en : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int_en : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} LDMA_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
	LDMA_AXIM2_CONFIG_t CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	LDMA_AXIM2_TIMEOUT_THRESHOLD_t TIMEOUT_THRESHOLD; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	LDMA_AXIM2_INTERRUPT_STATUS_t INTERRUPT_STATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	LDMA_AXIM2_INTERRUPT_ENABLE_t INTERRUPT_ENABLE; /* addr: 0x0000000c */
} APB1_LDMA_AXIM2_t;
#endif /* !__ASSEMBLER__ */

/*
 * LDMA_QUEUE[0..15]
 */

#define LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS 0xf6701200
#define LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t desc_idx : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t debug_mode : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 21;
		ca_uint32_t wrd_n : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2 0xf6701204
#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t length : 12; /* bits 11:0 */
		ca_uint32_t rd_cmd_only : 1; /* bits 12:12 */
		ca_uint32_t rd_trn_only : 1; /* bits 13:13 */
		ca_uint32_t wr_zero_trn : 1; /* bits 14:14 */
		ca_uint32_t ioc : 1; /* bits 15:15 */
		ca_uint32_t dst_addr_lpae : 8; /* bits 23:16 */
		ca_uint32_t src_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1 0xf6701208
#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dst_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0 0xf670120c
#define LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t src_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_CONTROL_REGISTER 0xf6701210
#define LDMA_LDMA_QUEUE_CONTROL_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clsc_timer : 16; /* bits 15:0 */
		ca_uint32_t clsc_threshold : 4; /* bits 19:16 */
		ca_uint32_t wr_threshold : 4; /* bits 23:20 */
		ca_uint32_t wch_axi_error : 1; /* bits 24:24 */
		ca_uint32_t rch_axi_error : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t reset : 1; /* bits 28:28 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_CONTROL_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_DWRR_REGISTER 0xf6701214
#define LDMA_LDMA_QUEUE_DWRR_REGISTER_dft 0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t quantum_size : 16; /* bits 15:0 */
		ca_uint32_t dc_upperbound : 15; /* bits 30:16 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_DWRR_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_INTERRUPT_ENABLE 0xf6701218
#define LDMA_LDMA_QUEUE_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dd_en : 1; /* bits 0:0 */
		ca_uint32_t fov_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_INTERRUPT_STATUS 0xf670121c
#define LDMA_LDMA_QUEUE_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t descriptor_done : 1; /* bits 0:0 */
		ca_uint32_t fifo_overflow : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_QUEUE_POINTER_REGISTER 0xf6701220
#define LDMA_LDMA_QUEUE_POINTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wr_ptr : 4; /* bits 3:0 */
		ca_uint32_t rd_trans_rdptr : 4; /* bits 7:4 */
		ca_uint32_t rd_trans_wrptr : 4; /* bits 11:8 */
		ca_uint32_t wr_trans_rdptr : 4; /* bits 15:12 */
		ca_uint32_t rd_ptr : 4; /* bits 19:16 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t desc_depth : 5; /* bits 28:24 */
		ca_uint32_t rsrvd2 : 3;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_QUEUE_POINTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define APB1_LDMA_LDMA_QUEUE_STRIDE 64
#define APB1_LDMA_LDMA_QUEUE_COUNT 16

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_QUEUE */
#ifndef __ASSEMBLER__
typedef struct {
	LDMA_LDMA_QUEUE_DESCRIPTOR_ACCESS_t DESCRIPTOR_ACCESS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	LDMA_LDMA_QUEUE_DESCRIPTOR_DATA2_t DESCRIPTOR_DATA2; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	LDMA_LDMA_QUEUE_DESCRIPTOR_DATA1_t DESCRIPTOR_DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	LDMA_LDMA_QUEUE_DESCRIPTOR_DATA0_t DESCRIPTOR_DATA0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	LDMA_LDMA_QUEUE_CONTROL_REGISTER_t CONTROL_REGISTER; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	LDMA_LDMA_QUEUE_DWRR_REGISTER_t DWRR_REGISTER; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	LDMA_LDMA_QUEUE_INTERRUPT_ENABLE_t INTERRUPT_ENABLE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	LDMA_LDMA_QUEUE_INTERRUPT_STATUS_t INTERRUPT_STATUS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	LDMA_LDMA_QUEUE_POINTER_REGISTER_t POINTER_REGISTER; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[31];
} APB1_LDMA_LDMA_QUEUE_t;
#endif /* !__ASSEMBLER__ */

/*
 * LDMA_INTERRUPT_MUX
 */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE 0xf6701600
#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS 0xf6701604
#define LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE 0xf6701608
#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS 0xf670160c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE 0xf6701610
#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS 0xf6701614
#define LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE 0xf6701618
#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS 0xf670161c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE 0xf6701620
#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS 0xf6701624
#define LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE 0xf6701628
#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS 0xf670162c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE 0xf6701630
#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS 0xf6701634
#define LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE 0xf6701638
#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS 0xf670163c
#define LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_INTERRUPT_MUX */
#ifndef __ASSEMBLER__
typedef struct {
	LDMA_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t IRQ0_ENABLE; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t IRQ0_STATUS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t IRQ1_ENABLE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t IRQ1_STATUS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t IRQ2_ENABLE; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t IRQ2_STATUS; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t IRQ3_ENABLE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t IRQ3_STATUS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t IRQ4_ENABLE; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t IRQ4_STATUS; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t IRQ5_ENABLE; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t IRQ5_STATUS; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t IRQ6_ENABLE; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t IRQ6_STATUS; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t IRQ7_ENABLE; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	LDMA_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t IRQ7_STATUS; /* addr: 0x0000003c */
} APB1_LDMA_LDMA_INTERRUPT_MUX_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA */

#ifndef __ASSEMBLER__
typedef struct {
	APB1_LDMA_LDMA_GLB_t LDMA_GLB; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[287];
	APB1_LDMA_AXIM2_t AXIM2; /* addr: 0x000001a0 */
	ca_uint32_t rsrvd2[89];
	APB1_LDMA_LDMA_QUEUE_t LDMA_QUEUE[16]; /* addr: 0x00000200 */
	APB1_LDMA_LDMA_INTERRUPT_MUX_t LDMA_INTERRUPT_MUX; /* addr: 0x00000600 */
} APB1_LDMA_t;
#endif /* !__ASSEMBLER__ */

/*
 * LDMA_RCPU
 */

/*
 * LDMA_QUEUE[0..15]
 */

#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS 0xf6702200
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t desc_idx : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t debug_mode : 1; /* bits 8:8 */
		ca_uint32_t rsrvd2 : 21;
		ca_uint32_t wrd_n : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2 0xf6702204
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t length : 12; /* bits 11:0 */
		ca_uint32_t rd_cmd_only : 1; /* bits 12:12 */
		ca_uint32_t rd_trn_only : 1; /* bits 13:13 */
		ca_uint32_t wr_zero_trn : 1; /* bits 14:14 */
		ca_uint32_t ioc : 1; /* bits 15:15 */
		ca_uint32_t dst_addr_lpae : 8; /* bits 23:16 */
		ca_uint32_t src_addr_lpae : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1 0xf6702208
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dst_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0 0xf670220c
#define LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t src_addr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER 0xf6702210
#define LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t clsc_timer : 16; /* bits 15:0 */
		ca_uint32_t clsc_threshold : 4; /* bits 19:16 */
		ca_uint32_t wr_threshold : 4; /* bits 23:20 */
		ca_uint32_t wch_axi_error : 1; /* bits 24:24 */
		ca_uint32_t rch_axi_error : 1; /* bits 25:25 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t reset : 1; /* bits 28:28 */
		ca_uint32_t rsrvd2 : 2;
		ca_uint32_t en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER 0xf6702214
#define LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER_dft 0x7fff1000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t quantum_size : 16; /* bits 15:0 */
		ca_uint32_t dc_upperbound : 15; /* bits 30:16 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE 0xf6702218
#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dd_en : 1; /* bits 0:0 */
		ca_uint32_t fov_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS 0xf670221c
#define LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t descriptor_done : 1; /* bits 0:0 */
		ca_uint32_t fifo_overflow : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER 0xf6702220
#define LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t wr_ptr : 4; /* bits 3:0 */
		ca_uint32_t rd_trans_rdptr : 4; /* bits 7:4 */
		ca_uint32_t rd_trans_wrptr : 4; /* bits 11:8 */
		ca_uint32_t wr_trans_rdptr : 4; /* bits 15:12 */
		ca_uint32_t rd_ptr : 4; /* bits 19:16 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t desc_depth : 5; /* bits 28:24 */
		ca_uint32_t rsrvd2 : 3;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER_t;
#endif /* !__ASSEMBLER__ */

#define APB1_LDMA_RCPU_LDMA_QUEUE_STRIDE 64
#define APB1_LDMA_RCPU_LDMA_QUEUE_COUNT 16

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_QUEUE */
#ifndef __ASSEMBLER__
typedef struct {
	LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_ACCESS_t
	  DESCRIPTOR_ACCESS; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA2_t
	  DESCRIPTOR_DATA2; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA1_t
	  DESCRIPTOR_DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	LDMA_RCPU_LDMA_QUEUE_DESCRIPTOR_DATA0_t
	  DESCRIPTOR_DATA0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	LDMA_RCPU_LDMA_QUEUE_CONTROL_REGISTER_t
	  CONTROL_REGISTER; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	LDMA_RCPU_LDMA_QUEUE_DWRR_REGISTER_t DWRR_REGISTER; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	LDMA_RCPU_LDMA_QUEUE_INTERRUPT_ENABLE_t
	  INTERRUPT_ENABLE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	LDMA_RCPU_LDMA_QUEUE_INTERRUPT_STATUS_t
	  INTERRUPT_STATUS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	LDMA_RCPU_LDMA_QUEUE_POINTER_REGISTER_t
	  POINTER_REGISTER; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[31];
} APB1_LDMA_RCPU_LDMA_QUEUE_t;
#endif /* !__ASSEMBLER__ */

/*
 * LDMA_INTERRUPT_MUX
 */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE 0xf6702600
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS 0xf6702604
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE 0xf6702608
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS 0xf670260c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE 0xf6702610
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS 0xf6702614
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE 0xf6702618
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS 0xf670261c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE 0xf6702620
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS 0xf6702624
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE 0xf6702628
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS 0xf670262c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE 0xf6702630
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS 0xf6702634
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE 0xf6702638
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_en : 1; /* bits 0:0 */
		ca_uint32_t Q1_en : 1; /* bits 1:1 */
		ca_uint32_t Q2_en : 1; /* bits 2:2 */
		ca_uint32_t Q3_en : 1; /* bits 3:3 */
		ca_uint32_t Q4_en : 1; /* bits 4:4 */
		ca_uint32_t Q5_en : 1; /* bits 5:5 */
		ca_uint32_t Q6_en : 1; /* bits 6:6 */
		ca_uint32_t Q7_en : 1; /* bits 7:7 */
		ca_uint32_t Q8_en : 1; /* bits 8:8 */
		ca_uint32_t Q9_en : 1; /* bits 9:9 */
		ca_uint32_t Q10_en : 1; /* bits 10:10 */
		ca_uint32_t Q11_en : 1; /* bits 11:11 */
		ca_uint32_t Q12_en : 1; /* bits 12:12 */
		ca_uint32_t Q13_en : 1; /* bits 13:13 */
		ca_uint32_t Q14_en : 1; /* bits 14:14 */
		ca_uint32_t Q15_en : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_en : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS 0xf670263c
#define LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Q0_status : 1; /* bits 0:0 */
		ca_uint32_t Q1_status : 1; /* bits 1:1 */
		ca_uint32_t Q2_status : 1; /* bits 2:2 */
		ca_uint32_t Q3_status : 1; /* bits 3:3 */
		ca_uint32_t Q4_status : 1; /* bits 4:4 */
		ca_uint32_t Q5_status : 1; /* bits 5:5 */
		ca_uint32_t Q6_status : 1; /* bits 6:6 */
		ca_uint32_t Q7_status : 1; /* bits 7:7 */
		ca_uint32_t Q8_status : 1; /* bits 8:8 */
		ca_uint32_t Q9_status : 1; /* bits 9:9 */
		ca_uint32_t Q10_status : 1; /* bits 10:10 */
		ca_uint32_t Q11_status : 1; /* bits 11:11 */
		ca_uint32_t Q12_status : 1; /* bits 12:12 */
		ca_uint32_t Q13_status : 1; /* bits 13:13 */
		ca_uint32_t Q14_status : 1; /* bits 14:14 */
		ca_uint32_t Q15_status : 1; /* bits 15:15 */
		ca_uint32_t axi_master_irq_status : 1; /* bits 16:16 */
		ca_uint32_t rsrvd1 : 15;
	} bf;
	ca_uint32_t wrd;
} LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_INTERRUPT_MUX */
#ifndef __ASSEMBLER__
typedef struct {
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_ENABLE_t IRQ0_ENABLE; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ0_STATUS_t IRQ0_STATUS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_ENABLE_t IRQ1_ENABLE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ1_STATUS_t IRQ1_STATUS; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_ENABLE_t IRQ2_ENABLE; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ2_STATUS_t IRQ2_STATUS; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_ENABLE_t IRQ3_ENABLE; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ3_STATUS_t IRQ3_STATUS; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_ENABLE_t IRQ4_ENABLE; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ4_STATUS_t IRQ4_STATUS; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_ENABLE_t IRQ5_ENABLE; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ5_STATUS_t IRQ5_STATUS; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_ENABLE_t IRQ6_ENABLE; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ6_STATUS_t IRQ6_STATUS; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_ENABLE_t IRQ7_ENABLE; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	LDMA_RCPU_LDMA_INTERRUPT_MUX_IRQ7_STATUS_t IRQ7_STATUS; /* addr: 0x0000003c */
} APB1_LDMA_RCPU_LDMA_INTERRUPT_MUX_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* LDMA_RCPU */

#ifndef __ASSEMBLER__
typedef struct {
	ca_uint32_t rsrvd1[512];
	APB1_LDMA_RCPU_LDMA_QUEUE_t LDMA_QUEUE[16]; /* addr: 0x00000200 */
	APB1_LDMA_RCPU_LDMA_INTERRUPT_MUX_t LDMA_INTERRUPT_MUX; /* addr: 0x00000600 */
} APB1_LDMA_RCPU_t;
#endif /* !__ASSEMBLER__ */

/*
 * PE_CTRL
 */

#define PE_CTRL_PE_SRAM_CONFIG 0xf6703000
#define PE_CTRL_PE_SRAM_CONFIG_dft 0x00000014

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t mode_sel : 3; /* bits 2:0 */
		ca_uint32_t mem_sel : 2; /* bits 4:3 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_SRAM_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PES_ADDR_MASTER_CONFIG 0xf6703004
#define PE_CTRL_PES_ADDR_MASTER_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pe0s_shift_en : 1; /* bits 0:0 */
		ca_uint32_t pe1s_shift_en : 1; /* bits 1:1 */
		ca_uint32_t pe0s_slave_prot : 1; /* bits 2:2 */
		ca_uint32_t pe1s_slave_prot : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PES_ADDR_MASTER_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE0S_ADDR_CONFIG 0xf6703008
#define PE_CTRL_PE0S_ADDR_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pe0s_addr_val : 16; /* bits 15:0 */
		ca_uint32_t pe0s_addr_mask : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE0S_ADDR_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE1S_ADDR_CONFIG 0xf670300c
#define PE_CTRL_PE1S_ADDR_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pe1s_addr_val : 16; /* bits 15:0 */
		ca_uint32_t pe1s_addr_mask : 16; /* bits 31:16 */
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE1S_ADDR_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_AXI_CTRL_PE0 0xf6703010
#define PE_CTRL_AXI_CTRL_PE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arqos_pe : 4; /* bits 3:0 */
		ca_uint32_t awqos_pe : 4; /* bits 7:4 */
		ca_uint32_t ruser_pe : 4; /* bits 11:8 */
		ca_uint32_t buser_pe : 4; /* bits 15:12 */
		ca_uint32_t aruser_pes : 4; /* bits 19:16 */
		ca_uint32_t awuser_pes : 4; /* bits 23:20 */
		ca_uint32_t wuser_pes : 4; /* bits 27:24 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_AXI_CTRL_PE0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_AXI_CTRL1_PE0 0xf6703014
#define PE_CTRL_AXI_CTRL1_PE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_pe : 14; /* bits 13:0 */
		ca_uint32_t awuser_pe : 14; /* bits 27:14 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_AXI_CTRL1_PE0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_AXI_CTRL_PE1 0xf6703018
#define PE_CTRL_AXI_CTRL_PE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t arqos_pe : 4; /* bits 3:0 */
		ca_uint32_t awqos_pe : 4; /* bits 7:4 */
		ca_uint32_t ruser_pe : 4; /* bits 11:8 */
		ca_uint32_t buser_pe : 4; /* bits 15:12 */
		ca_uint32_t aruser_pes : 4; /* bits 19:16 */
		ca_uint32_t awuser_pes : 4; /* bits 23:20 */
		ca_uint32_t wuser_pes : 4; /* bits 27:24 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_AXI_CTRL_PE1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_AXI_CTRL1_PE1 0xf670301c
#define PE_CTRL_AXI_CTRL1_PE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t aruser_pe : 14; /* bits 13:0 */
		ca_uint32_t awuser_pe : 14; /* bits 27:14 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_AXI_CTRL1_PE1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_IPC_CONFIG 0xf6703020
#define PE_CTRL_IPC_CONFIG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipc_intf_sel : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_IPC_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_QM_AGG_INTERRUPT_0 0xf6703024
#define PE_CTRL_PE_QM_AGG_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CPU_REFILL_REQ_0i : 1; /* bits 0:0 */
		ca_uint32_t CPU_REFILL_REQ_1i : 1; /* bits 1:1 */
		ca_uint32_t CPU_REFILL_REQ_2i : 1; /* bits 2:2 */
		ca_uint32_t CPU_REFILL_REQ_3i : 1; /* bits 3:3 */
		ca_uint32_t CPU_REFILL_REQ_4i : 1; /* bits 4:4 */
		ca_uint32_t CPU_REFILL_REQ_5i : 1; /* bits 5:5 */
		ca_uint32_t CPU_REFILL_REQ_6i : 1; /* bits 6:6 */
		ca_uint32_t CPU_REFILL_REQ_7i : 1; /* bits 7:7 */
		ca_uint32_t CPU_REFILL_REQ_8i : 1; /* bits 8:8 */
		ca_uint32_t CPU_REFILL_REQ_9i : 1; /* bits 9:9 */
		ca_uint32_t CPU_REFILL_REQ_10i : 1; /* bits 10:10 */
		ca_uint32_t CPU_REFILL_REQ_11i : 1; /* bits 11:11 */
		ca_uint32_t CPU_REFILL_REQ_12i : 1; /* bits 12:12 */
		ca_uint32_t CPU_REFILL_REQ_13i : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_HIi : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_LOi : 1; /* bits 15:15 */
		ca_uint32_t CPU_EPP_FIFO_0i : 1; /* bits 16:16 */
		ca_uint32_t CPU_EPP_FIFO_1i : 1; /* bits 17:17 */
		ca_uint32_t CPU_EPP_FIFO_2i : 1; /* bits 18:18 */
		ca_uint32_t CPU_EPP_FIFO_3i : 1; /* bits 19:19 */
		ca_uint32_t CPU_EPP_FIFO_4i : 1; /* bits 20:20 */
		ca_uint32_t CPU_EPP_FIFO_5i : 1; /* bits 21:21 */
		ca_uint32_t CPU_EPP_FIFO_6i : 1; /* bits 22:22 */
		ca_uint32_t CPU_EPP_FIFO_7i : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_QM_AGG_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_QM_AGG_INTENABLE_0 0xf6703028
#define PE_CTRL_PE_QM_AGG_INTENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CPU_REFILL_REQ_0e : 1; /* bits 0:0 */
		ca_uint32_t CPU_REFILL_REQ_1e : 1; /* bits 1:1 */
		ca_uint32_t CPU_REFILL_REQ_2e : 1; /* bits 2:2 */
		ca_uint32_t CPU_REFILL_REQ_3e : 1; /* bits 3:3 */
		ca_uint32_t CPU_REFILL_REQ_4e : 1; /* bits 4:4 */
		ca_uint32_t CPU_REFILL_REQ_5e : 1; /* bits 5:5 */
		ca_uint32_t CPU_REFILL_REQ_6e : 1; /* bits 6:6 */
		ca_uint32_t CPU_REFILL_REQ_7e : 1; /* bits 7:7 */
		ca_uint32_t CPU_REFILL_REQ_8e : 1; /* bits 8:8 */
		ca_uint32_t CPU_REFILL_REQ_9e : 1; /* bits 9:9 */
		ca_uint32_t CPU_REFILL_REQ_10e : 1; /* bits 10:10 */
		ca_uint32_t CPU_REFILL_REQ_11e : 1; /* bits 11:11 */
		ca_uint32_t CPU_REFILL_REQ_12e : 1; /* bits 12:12 */
		ca_uint32_t CPU_REFILL_REQ_13e : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_HIe : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_LOe : 1; /* bits 15:15 */
		ca_uint32_t CPU_EPP_FIFO_0e : 1; /* bits 16:16 */
		ca_uint32_t CPU_EPP_FIFO_1e : 1; /* bits 17:17 */
		ca_uint32_t CPU_EPP_FIFO_2e : 1; /* bits 18:18 */
		ca_uint32_t CPU_EPP_FIFO_3e : 1; /* bits 19:19 */
		ca_uint32_t CPU_EPP_FIFO_4e : 1; /* bits 20:20 */
		ca_uint32_t CPU_EPP_FIFO_5e : 1; /* bits 21:21 */
		ca_uint32_t CPU_EPP_FIFO_6e : 1; /* bits 22:22 */
		ca_uint32_t CPU_EPP_FIFO_7e : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_QM_AGG_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_AGG_INTERRUPT_0 0xf670302c
#define PE_CTRL_PE_AGG_INTERRUPT_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t IRQ_soft0iSeti : 1; /* bits 0:0 */
		ca_uint32_t IRQ_soft1iSeti : 1; /* bits 1:1 */
		ca_uint32_t ipc_int_pe0i : 1; /* bits 2:2 */
		ca_uint32_t ipc_int_pe1i : 1; /* bits 3:3 */
		ca_uint32_t PER_UART0_INT_1i : 1; /* bits 4:4 */
		ca_uint32_t PER_UART1_INT_1i : 1; /* bits 5:5 */
		ca_uint32_t PER_UART2_INT_1i : 1; /* bits 6:6 */
		ca_uint32_t PER_UART3_INT_1i : 1; /* bits 7:7 */
		ca_uint32_t SATA_INTERRUPT_0i : 1; /* bits 8:8 */
		ca_uint32_t XFI0_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t XFI1_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t PER_PERIPHERAL_INTERRUPT_1i : 1; /* bits 11:11 */
		ca_uint32_t WOL_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_AGG_INTERRUPT_0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_AGG_INTENABLE_0 0xf6703030
#define PE_CTRL_PE_AGG_INTENABLE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t IRQ_soft0iSete : 1; /* bits 0:0 */
		ca_uint32_t IRQ_soft1iSete : 1; /* bits 1:1 */
		ca_uint32_t ipc_int_pe0e : 1; /* bits 2:2 */
		ca_uint32_t ipc_int_pe1e : 1; /* bits 3:3 */
		ca_uint32_t PER_UART0_INT_1e : 1; /* bits 4:4 */
		ca_uint32_t PER_UART1_INT_1e : 1; /* bits 5:5 */
		ca_uint32_t PER_UART2_INT_1e : 1; /* bits 6:6 */
		ca_uint32_t PER_UART3_INT_1e : 1; /* bits 7:7 */
		ca_uint32_t SATA_INTERRUPT_0e : 1; /* bits 8:8 */
		ca_uint32_t XFI0_INTERRUPTe : 1; /* bits 9:9 */
		ca_uint32_t XFI1_INTERRUPTe : 1; /* bits 10:10 */
		ca_uint32_t PER_PERIPHERAL_INTERRUPT_1e : 1; /* bits 11:11 */
		ca_uint32_t WOL_INTERRUPTe : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_AGG_INTENABLE_0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_QM_AGG_INTERRUPT_1 0xf6703034
#define PE_CTRL_PE_QM_AGG_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CPU_REFILL_REQ_0i : 1; /* bits 0:0 */
		ca_uint32_t CPU_REFILL_REQ_1i : 1; /* bits 1:1 */
		ca_uint32_t CPU_REFILL_REQ_2i : 1; /* bits 2:2 */
		ca_uint32_t CPU_REFILL_REQ_3i : 1; /* bits 3:3 */
		ca_uint32_t CPU_REFILL_REQ_4i : 1; /* bits 4:4 */
		ca_uint32_t CPU_REFILL_REQ_5i : 1; /* bits 5:5 */
		ca_uint32_t CPU_REFILL_REQ_6i : 1; /* bits 6:6 */
		ca_uint32_t CPU_REFILL_REQ_7i : 1; /* bits 7:7 */
		ca_uint32_t CPU_REFILL_REQ_8i : 1; /* bits 8:8 */
		ca_uint32_t CPU_REFILL_REQ_9i : 1; /* bits 9:9 */
		ca_uint32_t CPU_REFILL_REQ_10i : 1; /* bits 10:10 */
		ca_uint32_t CPU_REFILL_REQ_11i : 1; /* bits 11:11 */
		ca_uint32_t CPU_REFILL_REQ_12i : 1; /* bits 12:12 */
		ca_uint32_t CPU_REFILL_REQ_13i : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_HIi : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_LOi : 1; /* bits 15:15 */
		ca_uint32_t CPU_EPP_FIFO_0i : 1; /* bits 16:16 */
		ca_uint32_t CPU_EPP_FIFO_1i : 1; /* bits 17:17 */
		ca_uint32_t CPU_EPP_FIFO_2i : 1; /* bits 18:18 */
		ca_uint32_t CPU_EPP_FIFO_3i : 1; /* bits 19:19 */
		ca_uint32_t CPU_EPP_FIFO_4i : 1; /* bits 20:20 */
		ca_uint32_t CPU_EPP_FIFO_5i : 1; /* bits 21:21 */
		ca_uint32_t CPU_EPP_FIFO_6i : 1; /* bits 22:22 */
		ca_uint32_t CPU_EPP_FIFO_7i : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_QM_AGG_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_QM_AGG_INTENABLE_1 0xf6703038
#define PE_CTRL_PE_QM_AGG_INTENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t CPU_REFILL_REQ_0e : 1; /* bits 0:0 */
		ca_uint32_t CPU_REFILL_REQ_1e : 1; /* bits 1:1 */
		ca_uint32_t CPU_REFILL_REQ_2e : 1; /* bits 2:2 */
		ca_uint32_t CPU_REFILL_REQ_3e : 1; /* bits 3:3 */
		ca_uint32_t CPU_REFILL_REQ_4e : 1; /* bits 4:4 */
		ca_uint32_t CPU_REFILL_REQ_5e : 1; /* bits 5:5 */
		ca_uint32_t CPU_REFILL_REQ_6e : 1; /* bits 6:6 */
		ca_uint32_t CPU_REFILL_REQ_7e : 1; /* bits 7:7 */
		ca_uint32_t CPU_REFILL_REQ_8e : 1; /* bits 8:8 */
		ca_uint32_t CPU_REFILL_REQ_9e : 1; /* bits 9:9 */
		ca_uint32_t CPU_REFILL_REQ_10e : 1; /* bits 10:10 */
		ca_uint32_t CPU_REFILL_REQ_11e : 1; /* bits 11:11 */
		ca_uint32_t CPU_REFILL_REQ_12e : 1; /* bits 12:12 */
		ca_uint32_t CPU_REFILL_REQ_13e : 1; /* bits 13:13 */
		ca_uint32_t CPU_EPP_256_FIFO_HIe : 1; /* bits 14:14 */
		ca_uint32_t CPU_EPP_256_FIFO_LOe : 1; /* bits 15:15 */
		ca_uint32_t CPU_EPP_FIFO_0e : 1; /* bits 16:16 */
		ca_uint32_t CPU_EPP_FIFO_1e : 1; /* bits 17:17 */
		ca_uint32_t CPU_EPP_FIFO_2e : 1; /* bits 18:18 */
		ca_uint32_t CPU_EPP_FIFO_3e : 1; /* bits 19:19 */
		ca_uint32_t CPU_EPP_FIFO_4e : 1; /* bits 20:20 */
		ca_uint32_t CPU_EPP_FIFO_5e : 1; /* bits 21:21 */
		ca_uint32_t CPU_EPP_FIFO_6e : 1; /* bits 22:22 */
		ca_uint32_t CPU_EPP_FIFO_7e : 1; /* bits 23:23 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_QM_AGG_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_AGG_INTERRUPT_1 0xf670303c
#define PE_CTRL_PE_AGG_INTERRUPT_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t IRQ_soft0iSeti : 1; /* bits 0:0 */
		ca_uint32_t IRQ_soft1iSeti : 1; /* bits 1:1 */
		ca_uint32_t ipc_int_pe0i : 1; /* bits 2:2 */
		ca_uint32_t ipc_int_pe1i : 1; /* bits 3:3 */
		ca_uint32_t PER_UART0_INT_1i : 1; /* bits 4:4 */
		ca_uint32_t PER_UART1_INT_1i : 1; /* bits 5:5 */
		ca_uint32_t PER_UART2_INT_1i : 1; /* bits 6:6 */
		ca_uint32_t PER_UART3_INT_1i : 1; /* bits 7:7 */
		ca_uint32_t SATA_INTERRUPT_0i : 1; /* bits 8:8 */
		ca_uint32_t XFI0_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t XFI1_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t PER_PERIPHERAL_INTERRUPT_1i : 1; /* bits 11:11 */
		ca_uint32_t WOL_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_AGG_INTERRUPT_1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_AGG_INTENABLE_1 0xf6703040
#define PE_CTRL_PE_AGG_INTENABLE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t IRQ_soft0iSete : 1; /* bits 0:0 */
		ca_uint32_t IRQ_soft1iSete : 1; /* bits 1:1 */
		ca_uint32_t ipc_int_pe0e : 1; /* bits 2:2 */
		ca_uint32_t ipc_int_pe1e : 1; /* bits 3:3 */
		ca_uint32_t PER_UART0_INT_1e : 1; /* bits 4:4 */
		ca_uint32_t PER_UART1_INT_1e : 1; /* bits 5:5 */
		ca_uint32_t PER_UART2_INT_1e : 1; /* bits 6:6 */
		ca_uint32_t PER_UART3_INT_1e : 1; /* bits 7:7 */
		ca_uint32_t SATA_INTERRUPT_0e : 1; /* bits 8:8 */
		ca_uint32_t XFI0_INTERRUPTe : 1; /* bits 9:9 */
		ca_uint32_t XFI1_INTERRUPTe : 1; /* bits 10:10 */
		ca_uint32_t PER_PERIPHERAL_INTERRUPT_1e : 1; /* bits 11:11 */
		ca_uint32_t WOL_INTERRUPTe : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_AGG_INTENABLE_1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_DSS_CONFIG_0 0xf6703044
#define PE_CTRL_PE_DSS_CONFIG_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dss_rst_n : 1; /* bits 0:0 */
		ca_uint32_t ro_sel : 3; /* bits 3:1 */
		ca_uint32_t wire_sel : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t speed_en : 1; /* bits 25:25 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_DSS_CONFIG_0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_DSS_STATUS_0 0xf6703048
#define PE_CTRL_PE_DSS_STATUS_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ready : 1; /* bits 0:0 */
		ca_uint32_t count_out : 20; /* bits 20:1 */
		ca_uint32_t wsort_go : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_DSS_STATUS_0_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_DSS_CONFIG_1 0xf670304c
#define PE_CTRL_PE_DSS_CONFIG_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dss_rst_n : 1; /* bits 0:0 */
		ca_uint32_t ro_sel : 3; /* bits 3:1 */
		ca_uint32_t wire_sel : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 20;
		ca_uint32_t speed_en : 1; /* bits 25:25 */
		ca_uint32_t rsrvd2 : 6;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_DSS_CONFIG_1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_PE_DSS_STATUS_1 0xf6703050
#define PE_CTRL_PE_DSS_STATUS_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ready : 1; /* bits 0:0 */
		ca_uint32_t count_out : 20; /* bits 20:1 */
		ca_uint32_t wsort_go : 1; /* bits 21:21 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_PE_DSS_STATUS_1_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_CRYPTO_PROT 0xf6703054
#define PE_CTRL_CRYPTO_PROT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t override_c0m : 2; /* bits 1:0 */
		ca_uint32_t override_c1m : 2; /* bits 3:2 */
		ca_uint32_t override_c0s : 2; /* bits 5:4 */
		ca_uint32_t override_c1s : 2; /* bits 7:6 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_CRYPTO_PROT_t;
#endif /* !__ASSEMBLER__ */

#define override_c1s_PASS 0x0
#define override_c1s_OVSEC 0x1
#define override_c1s_OVNS 0x2
#define override_c0s_PASS 0x0
#define override_c0s_OVSEC 0x1
#define override_c0s_OVNS 0x2
#define override_c1m_PASS 0x0
#define override_c1m_OVSEC 0x1
#define override_c1m_OVNS 0x2
#define override_c0m_PASS 0x0
#define override_c0m_OVSEC 0x1
#define override_c0m_OVNS 0x2

#define PE_CTRL_CRYPT0_SLV_ID 0xf6703058
#define PE_CTRL_CRYPT0_SLV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry3 : 6; /* bits 23:18 */
		ca_uint32_t reg_id_en0 : 1; /* bits 24:24 */
		ca_uint32_t reg_id_en1 : 1; /* bits 25:25 */
		ca_uint32_t reg_id_en2 : 1; /* bits 26:26 */
		ca_uint32_t reg_id_en3 : 1; /* bits 27:27 */
		ca_uint32_t reg_enabled : 1; /* bits 28:28 */
		ca_uint32_t rsrvd1 : 3;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_CRYPT0_SLV_ID_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_CRYPT0_SLV_ID_MASK 0xf670305c
#define PE_CTRL_CRYPT0_SLV_ID_MASK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry_mask0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry_mask1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry_mask2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry_mask3 : 6; /* bits 23:18 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_CRYPT0_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_CRYPT1_SLV_ID 0xf6703060
#define PE_CTRL_CRYPT1_SLV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry3 : 6; /* bits 23:18 */
		ca_uint32_t reg_id_en0 : 1; /* bits 24:24 */
		ca_uint32_t reg_id_en1 : 1; /* bits 25:25 */
		ca_uint32_t reg_id_en2 : 1; /* bits 26:26 */
		ca_uint32_t reg_id_en3 : 1; /* bits 27:27 */
		ca_uint32_t reg_enabled : 1; /* bits 28:28 */
		ca_uint32_t rsrvd1 : 3;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_CRYPT1_SLV_ID_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_CRYPT1_SLV_ID_MASK 0xf6703064
#define PE_CTRL_CRYPT1_SLV_ID_MASK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry_mask0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry_mask1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry_mask2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry_mask3 : 6; /* bits 23:18 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_CRYPT1_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_SADB_SLV_ID 0xf6703068
#define PE_CTRL_SADB_SLV_ID_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry3 : 6; /* bits 23:18 */
		ca_uint32_t reg_id_en0 : 1; /* bits 24:24 */
		ca_uint32_t reg_id_en1 : 1; /* bits 25:25 */
		ca_uint32_t reg_id_en2 : 1; /* bits 26:26 */
		ca_uint32_t reg_id_en3 : 1; /* bits 27:27 */
		ca_uint32_t reg_enabled : 1; /* bits 28:28 */
		ca_uint32_t rsrvd1 : 3;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_SADB_SLV_ID_t;
#endif /* !__ASSEMBLER__ */

#define PE_CTRL_SADB_SLV_ID_MASK 0xf670306c
#define PE_CTRL_SADB_SLV_ID_MASK_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reg_id_entry_mask0 : 6; /* bits 5:0 */
		ca_uint32_t reg_id_entry_mask1 : 6; /* bits 11:6 */
		ca_uint32_t reg_id_entry_mask2 : 6; /* bits 17:12 */
		ca_uint32_t reg_id_entry_mask3 : 6; /* bits 23:18 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} PE_CTRL_SADB_SLV_ID_MASK_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* PE_CTRL */
#ifndef __ASSEMBLER__
typedef struct {
	PE_CTRL_PE_SRAM_CONFIG_t PE_SRAM_CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	PE_CTRL_PES_ADDR_MASTER_CONFIG_t
	  PES_ADDR_MASTER_CONFIG; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	PE_CTRL_PE0S_ADDR_CONFIG_t PE0S_ADDR_CONFIG; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	PE_CTRL_PE1S_ADDR_CONFIG_t PE1S_ADDR_CONFIG; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	PE_CTRL_AXI_CTRL_PE0_t AXI_CTRL_PE0; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	PE_CTRL_AXI_CTRL1_PE0_t AXI_CTRL1_PE0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	PE_CTRL_AXI_CTRL_PE1_t AXI_CTRL_PE1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	PE_CTRL_AXI_CTRL1_PE1_t AXI_CTRL1_PE1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	PE_CTRL_IPC_CONFIG_t IPC_CONFIG; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	PE_CTRL_PE_QM_AGG_INTERRUPT_0_t PE_QM_AGG_INTERRUPT_0; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	PE_CTRL_PE_QM_AGG_INTENABLE_0_t PE_QM_AGG_INTENABLE_0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	PE_CTRL_PE_AGG_INTERRUPT_0_t PE_AGG_INTERRUPT_0; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	PE_CTRL_PE_AGG_INTENABLE_0_t PE_AGG_INTENABLE_0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	PE_CTRL_PE_QM_AGG_INTERRUPT_1_t PE_QM_AGG_INTERRUPT_1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	PE_CTRL_PE_QM_AGG_INTENABLE_1_t PE_QM_AGG_INTENABLE_1; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	PE_CTRL_PE_AGG_INTERRUPT_1_t PE_AGG_INTERRUPT_1; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	PE_CTRL_PE_AGG_INTENABLE_1_t PE_AGG_INTENABLE_1; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	PE_CTRL_PE_DSS_CONFIG_0_t PE_DSS_CONFIG_0; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	PE_CTRL_PE_DSS_STATUS_0_t PE_DSS_STATUS_0; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	PE_CTRL_PE_DSS_CONFIG_1_t PE_DSS_CONFIG_1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	PE_CTRL_PE_DSS_STATUS_1_t PE_DSS_STATUS_1; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	PE_CTRL_CRYPTO_PROT_t CRYPTO_PROT; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	PE_CTRL_CRYPT0_SLV_ID_t CRYPT0_SLV_ID; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	PE_CTRL_CRYPT0_SLV_ID_MASK_t CRYPT0_SLV_ID_MASK; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	PE_CTRL_CRYPT1_SLV_ID_t CRYPT1_SLV_ID; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	PE_CTRL_CRYPT1_SLV_ID_MASK_t CRYPT1_SLV_ID_MASK; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	PE_CTRL_SADB_SLV_ID_t SADB_SLV_ID; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	PE_CTRL_SADB_SLV_ID_MASK_t SADB_SLV_ID_MASK; /* addr: 0x0000006c */
} APB1_PE_CTRL_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB1 */

#ifndef __ASSEMBLER__
typedef struct {
	APB1_PE0_ATU_t PE0_ATU; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[241];
	APB1_PE1_ATU_t PE1_ATU; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[241];
	APB1_CRYPTO0_ATU_t CRYPTO0_ATU; /* addr: 0x00000200 */
	ca_uint32_t rsrvd3[497];
	APB1_CRYPTO1_ATU_t CRYPTO1_ATU; /* addr: 0x00000400 */
	ca_uint32_t rsrvd4[3057];
	APB1_LDMA_t LDMA; /* addr: 0x00001000 */
	ca_uint32_t rsrvd5[2529];
	APB1_LDMA_RCPU_t LDMA_RCPU; /* addr: 0x00002000 */
	ca_uint32_t rsrvd6[2529];
	APB1_PE_CTRL_t PE_CTRL; /* addr: 0x00003000 */
} APB1_t;
#endif /* !__ASSEMBLER__ */

/*
 * APB6
 */

/*
 * DMA_GLB
 */

#define DMA_SEC_DMA_GLB_DMA_LSO_CTRL 0xf7001000
#define DMA_SEC_DMA_GLB_DMA_LSO_CTRL_dft 0x00000020

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_dma_enable : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t tx_burst_len : 2; /* bits 3:2 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t lso_padding_en : 1; /* bits 5:5 */
		ca_uint32_t ss_unit_sel : 2; /* bits 7:6 */
		ca_uint32_t dma_lso_sreset : 1; /* bits 8:8 */
		ca_uint32_t dma_pktcnt_sel : 1; /* bits 9:9 */
		ca_uint32_t rsrvd3 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_LSO_INTERRUPT 0xf7001004
#define DMA_SEC_DMA_GLB_LSO_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv4_dec_err : 1; /* bits 0:0 */
		ca_uint32_t ipv6_dec_err : 1; /* bits 1:1 */
		ca_uint32_t tcp_dec_err : 1; /* bits 2:2 */
		ca_uint32_t udp_dec_err : 1; /* bits 3:3 */
		ca_uint32_t pkt_len_err : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_LSO_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_LSO_INTENABLE 0xf7001008
#define DMA_SEC_DMA_GLB_LSO_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ipv4_dec_err_en : 1; /* bits 0:0 */
		ca_uint32_t ipv6_dec_err_en : 1; /* bits 1:1 */
		ca_uint32_t tcp_dec_err_en : 1; /* bits 2:2 */
		ca_uint32_t udp_dec_err_en : 1; /* bits 3:3 */
		ca_uint32_t pkt_len_err_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_LSO_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0 0xf700100c
#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t value : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t enable : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1 0xf7001010
#define DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t value : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t enable : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0 0xf7001014
#define DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t vp0_rd_pat : 2; /* bits 1:0 */
		ca_uint32_t vp1_rd_pat : 2; /* bits 3:2 */
		ca_uint32_t vp2_rd_pat : 2; /* bits 5:4 */
		ca_uint32_t vp3_rd_pat : 2; /* bits 7:6 */
		ca_uint32_t vp4_rd_pat : 2; /* bits 9:8 */
		ca_uint32_t vp5_rd_pat : 2; /* bits 11:10 */
		ca_uint32_t vp6_rd_pat : 2; /* bits 13:12 */
		ca_uint32_t vp7_rd_pat : 2; /* bits 15:14 */
		ca_uint32_t vp8_rd_pat : 2; /* bits 17:16 */
		ca_uint32_t vp9_rd_pat : 2; /* bits 19:18 */
		ca_uint32_t vp10_rd_pat : 2; /* bits 21:20 */
		ca_uint32_t vp11_rd_pat : 2; /* bits 23:22 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_AXI_USER_PAT0 0xf7001018
#define DMA_SEC_DMA_GLB_AXI_USER_PAT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat0 : 26; /* bits 25:0 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_AXI_USER_PAT0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_AXI_USER_PAT1 0xf700101c
#define DMA_SEC_DMA_GLB_AXI_USER_PAT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat1 : 26; /* bits 25:0 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_AXI_USER_PAT1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_AXI_USER_PAT2 0xf7001020
#define DMA_SEC_DMA_GLB_AXI_USER_PAT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat2 : 26; /* bits 25:0 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_AXI_USER_PAT2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_AXI_USER_PAT3 0xf7001024
#define DMA_SEC_DMA_GLB_AXI_USER_PAT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t usr_pat3 : 26; /* bits 25:0 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_AXI_USER_PAT3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_FAST_REG_PE0 0xf7001028
#define DMA_SEC_DMA_GLB_FAST_REG_PE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pe0_en : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_FAST_REG_PE0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_FAST_REG_PE1 0xf700102c
#define DMA_SEC_DMA_GLB_FAST_REG_PE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pe1_en : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 20;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_FAST_REG_PE1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0 0xf7001030
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fdaddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1 0xf7001034
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fdaddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0 0xf7001038
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_cdaddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1 0xf700103c
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_cdaddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0 0xf7001040
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1 0xf7001044
#define DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0 0xf7001048
#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 22; /* bits 21:0 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1 0xf700104c
#define DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 18; /* bits 17:0 */
		ca_uint32_t rsrvd1 : 14;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0 0xf7001050
#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0_dft 0x01000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dmatx_cs : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t desc_cs : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t txfer_cs : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t dat_cs : 2; /* bits 13:12 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t txfout_cs : 4; /* bits 19:16 */
		ca_uint32_t base_cs : 3; /* bits 22:20 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t pktcnt_cs : 3; /* bits 26:24 */
		ca_uint32_t rsrvd6 : 5;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1 0xf7001054
#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dmaif_fifo_cs : 5; /* bits 4:0 */
		ca_uint32_t dmaif_state : 4; /* bits 8:5 */
		ca_uint32_t outctl_fout_cs : 4; /* bits 12:9 */
		ca_uint32_t outctl_fin_cs : 3; /* bits 15:13 */
		ca_uint32_t inctl_fout_cs : 4; /* bits 19:16 */
		ca_uint32_t inctl_fin_cs : 2; /* bits 21:20 */
		ca_uint32_t rsrvd1 : 10;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2 0xf7001058
#define DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t udp_cs : 4; /* bits 3:0 */
		ca_uint32_t tcp_cs : 4; /* bits 7:4 */
		ca_uint32_t ip_cs : 4; /* bits 11:8 */
		ca_uint32_t macif_macIF_st : 3; /* bits 14:12 */
		ca_uint32_t rsrvd1 : 17;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE0 0xf700105c
#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_spare0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_SPARE0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE1 0xf7001060
#define DMA_SEC_DMA_GLB_DMA_LSO_SPARE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_spare1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_LSO_SPARE1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL 0xf7001064
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_dma_enable : 1; /* bits 0:0 */
		ca_uint32_t rx_check_own : 1; /* bits 1:1 */
		ca_uint32_t rxdes_update_en : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL 0xf7001068
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_dma_enable : 1; /* bits 0:0 */
		ca_uint32_t tx_check_own : 1; /* bits 1:1 */
		ca_uint32_t txdes_update_en : 1; /* bits 2:2 */
		ca_uint32_t dma_ssp_sreset : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 28;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0 0xf700106c
#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t q5_rd_pat : 2; /* bits 1:0 */
		ca_uint32_t q6_rd_pat : 2; /* bits 3:2 */
		ca_uint32_t q7_rd_pat : 2; /* bits 5:4 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1 0xf7001070
#define DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t q5_wr_pat : 2; /* bits 1:0 */
		ca_uint32_t q6_wr_pat : 2; /* bits 3:2 */
		ca_uint32_t q7_wr_pat : 2; /* bits 5:4 */
		ca_uint32_t rsrvd1 : 26;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0 0xf7001074
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fdaddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1 0xf7001078
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_fdaddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0 0xf700107c
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_cdaddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1 0xf7001080
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rx_cdaddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0 0xf7001084
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1 0xf7001088
#define DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0 0xf700108c
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fdaddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1 0xf7001090
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_fdaddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0 0xf7001094
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_cdaddr : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1 0xf7001098
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tx_cdaddr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0 0xf700109c
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1 0xf70010a0
#define DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0 0xf70010a4
#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxsch_cs : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t dmarx_cs : 5; /* bits 8:4 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t rxfer_cs : 3; /* bits 14:12 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t rxfin_cs : 2; /* bits 17:16 */
		ca_uint32_t rsrvd4 : 2;
		ca_uint32_t rxfout_cs : 3; /* bits 22:20 */
		ca_uint32_t rsrvd5 : 9;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1 0xf70010a8
#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sp_cs : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rr1_cs : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t dmatx_cs : 5; /* bits 12:8 */
		ca_uint32_t rsrvd3 : 3;
		ca_uint32_t txfer_cs : 3; /* bits 18:16 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t txfout_cs : 3; /* bits 22:20 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t mux_cs : 3; /* bits 26:24 */
		ca_uint32_t mmc_cs : 2; /* bits 28:27 */
		ca_uint32_t rsrvd6 : 3;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2 0xf70010ac
#define DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t flash_cs : 2; /* bits 1:0 */
		ca_uint32_t ssptx_cs : 3; /* bits 4:2 */
		ca_uint32_t ssprx_cs : 2; /* bits 6:5 */
		ca_uint32_t rsrvd1 : 25;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE0 0xf70010b0
#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_spare0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_SPARE0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE1 0xf70010b4
#define DMA_SEC_DMA_GLB_DMA_SSP_SPARE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_spare1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_GLB_DMA_SSP_SPARE1_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_GLB */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_DMA_GLB_DMA_LSO_CTRL_t DMA_LSO_CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_DMA_GLB_LSO_INTERRUPT_t LSO_INTERRUPT; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_DMA_GLB_LSO_INTENABLE_t LSO_INTENABLE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE0_t
	  DMA_LSO_VLAN_TAG_TYPE0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_DMA_GLB_DMA_LSO_VLAN_TAG_TYPE1_t
	  DMA_LSO_VLAN_TAG_TYPE1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_DMA_GLB_DMA_LSO_AXI_USER_SEL0_t
	  DMA_LSO_AXI_USER_SEL0; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_DMA_GLB_AXI_USER_PAT0_t AXI_USER_PAT0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_DMA_GLB_AXI_USER_PAT1_t AXI_USER_PAT1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DMA_SEC_DMA_GLB_AXI_USER_PAT2_t AXI_USER_PAT2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_DMA_GLB_AXI_USER_PAT3_t AXI_USER_PAT3; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_DMA_GLB_FAST_REG_PE0_t FAST_REG_PE0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_DMA_GLB_FAST_REG_PE1_t FAST_REG_PE1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR0_t
	  DMA_LSO_TX_FDES_ADDR0; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_DMA_GLB_DMA_LSO_TX_FDES_ADDR1_t
	  DMA_LSO_TX_FDES_ADDR1; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR0_t
	  DMA_LSO_TX_CDES_ADDR0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_DMA_GLB_DMA_LSO_TX_CDES_ADDR1_t
	  DMA_LSO_TX_CDES_ADDR1; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD0_t
	  DMA_LSO_TX_DES_WORD0; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	DMA_SEC_DMA_GLB_DMA_LSO_TX_DES_WORD1_t
	  DMA_LSO_TX_DES_WORD1; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD0_t
	  DMA_LSO_LSO_PARA_WORD0; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	DMA_SEC_DMA_GLB_DMA_LSO_LSO_PARA_WORD1_t
	  DMA_LSO_LSO_PARA_WORD1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	DMA_SEC_DMA_GLB_DMA_LSO_DEBUG0_t DMA_LSO_DEBUG0; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	DMA_SEC_DMA_GLB_DMA_LSO_DEBUG1_t DMA_LSO_DEBUG1; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	DMA_SEC_DMA_GLB_DMA_LSO_DEBUG2_t DMA_LSO_DEBUG2; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	DMA_SEC_DMA_GLB_DMA_LSO_SPARE0_t DMA_LSO_SPARE0; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	DMA_SEC_DMA_GLB_DMA_LSO_SPARE1_t DMA_LSO_SPARE1; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_CTRL_t DMA_SSP_RX_CTRL; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_CTRL_t DMA_SSP_TX_CTRL; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL0_t
	  DMA_SSP_AXI_USER_SEL0; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	DMA_SEC_DMA_GLB_DMA_SSP_AXI_USER_SEL1_t
	  DMA_SSP_AXI_USER_SEL1; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR0_t
	  DMA_SSP_RX_FDES_ADDR0; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_FDES_ADDR1_t
	  DMA_SSP_RX_FDES_ADDR1; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR0_t
	  DMA_SSP_RX_CDES_ADDR0; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_CDES_ADDR1_t
	  DMA_SSP_RX_CDES_ADDR1; /* addr: 0x00000080 */
	ca_uint32_t rsrvd33[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD0_t
	  DMA_SSP_RX_DES_WORD0; /* addr: 0x00000084 */
	ca_uint32_t rsrvd34[3];
	DMA_SEC_DMA_GLB_DMA_SSP_RX_DES_WORD1_t
	  DMA_SSP_RX_DES_WORD1; /* addr: 0x00000088 */
	ca_uint32_t rsrvd35[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR0_t
	  DMA_SSP_TX_FDES_ADDR0; /* addr: 0x0000008c */
	ca_uint32_t rsrvd36[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_FDES_ADDR1_t
	  DMA_SSP_TX_FDES_ADDR1; /* addr: 0x00000090 */
	ca_uint32_t rsrvd37[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR0_t
	  DMA_SSP_TX_CDES_ADDR0; /* addr: 0x00000094 */
	ca_uint32_t rsrvd38[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_CDES_ADDR1_t
	  DMA_SSP_TX_CDES_ADDR1; /* addr: 0x00000098 */
	ca_uint32_t rsrvd39[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD0_t
	  DMA_SSP_TX_DES_WORD0; /* addr: 0x0000009c */
	ca_uint32_t rsrvd40[3];
	DMA_SEC_DMA_GLB_DMA_SSP_TX_DES_WORD1_t
	  DMA_SSP_TX_DES_WORD1; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd41[3];
	DMA_SEC_DMA_GLB_DMA_SSP_DEBUG0_t DMA_SSP_DEBUG0; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd42[3];
	DMA_SEC_DMA_GLB_DMA_SSP_DEBUG1_t DMA_SSP_DEBUG1; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd43[3];
	DMA_SEC_DMA_GLB_DMA_SSP_DEBUG2_t DMA_SSP_DEBUG2; /* addr: 0x000000ac */
	ca_uint32_t rsrvd44[3];
	DMA_SEC_DMA_GLB_DMA_SSP_SPARE0_t DMA_SSP_SPARE0; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd45[3];
	DMA_SEC_DMA_GLB_DMA_SSP_SPARE1_t DMA_SSP_SPARE1; /* addr: 0x000000b4 */
} DMA_SEC_DMA_GLB_t;
#endif /* !__ASSEMBLER__ */

/*
 * DMA_LSO_VP[0..11]
 */

#define DMA_SEC_DMA_LSO_VP_CONTROL 0xf7001100
#define DMA_SEC_DMA_LSO_VP_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq0_en : 1; /* bits 0:0 */
		ca_uint32_t txq1_en : 1; /* bits 1:1 */
		ca_uint32_t txq2_en : 1; /* bits 2:2 */
		ca_uint32_t txq3_en : 1; /* bits 3:3 */
		ca_uint32_t txq4_en : 1; /* bits 4:4 */
		ca_uint32_t txq5_en : 1; /* bits 5:5 */
		ca_uint32_t txq6_en : 1; /* bits 6:6 */
		ca_uint32_t txq7_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS 0xf7001104
#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_id : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1 0xf7001108
#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base_addr : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0 0xf700110c
#define DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t depth : 4; /* bits 3:0 */
		ca_uint32_t base_addr : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS 0xf7001110
#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_id : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 27;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA 0xf7001114
#define DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_cnt : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ0_WPTR 0xf7001118
#define DMA_SEC_DMA_LSO_VP_TXQ0_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ0_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ0_RPTR 0xf700111c
#define DMA_SEC_DMA_LSO_VP_TXQ0_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ0_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ1_WPTR 0xf7001120
#define DMA_SEC_DMA_LSO_VP_TXQ1_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ1_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ1_RPTR 0xf7001124
#define DMA_SEC_DMA_LSO_VP_TXQ1_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ1_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ2_WPTR 0xf7001128
#define DMA_SEC_DMA_LSO_VP_TXQ2_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ2_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ2_RPTR 0xf700112c
#define DMA_SEC_DMA_LSO_VP_TXQ2_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ2_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ3_WPTR 0xf7001130
#define DMA_SEC_DMA_LSO_VP_TXQ3_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ3_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ3_RPTR 0xf7001134
#define DMA_SEC_DMA_LSO_VP_TXQ3_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ3_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ4_WPTR 0xf7001138
#define DMA_SEC_DMA_LSO_VP_TXQ4_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ4_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ4_RPTR 0xf700113c
#define DMA_SEC_DMA_LSO_VP_TXQ4_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ4_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ5_WPTR 0xf7001140
#define DMA_SEC_DMA_LSO_VP_TXQ5_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ5_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ5_RPTR 0xf7001144
#define DMA_SEC_DMA_LSO_VP_TXQ5_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ5_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ6_WPTR 0xf7001148
#define DMA_SEC_DMA_LSO_VP_TXQ6_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ6_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ6_RPTR 0xf700114c
#define DMA_SEC_DMA_LSO_VP_TXQ6_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ6_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ7_WPTR 0xf7001150
#define DMA_SEC_DMA_LSO_VP_TXQ7_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ7_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_TXQ7_RPTR 0xf7001154
#define DMA_SEC_DMA_LSO_VP_TXQ7_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_TXQ7_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_INT_COAL_SET 0xf7001158
#define DMA_SEC_DMA_LSO_VP_INT_COAL_SET_dft 0x00000001

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t event_threshold : 6; /* bits 5:0 */
		ca_uint32_t int_delay_time : 20; /* bits 25:6 */
		ca_uint32_t rsrvd1 : 6;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_INT_COAL_SET_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_INT_COAL_SRC 0xf700115c
#define DMA_SEC_DMA_LSO_VP_INT_COAL_SRC_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq0_eof_en : 1; /* bits 0:0 */
		ca_uint32_t txq1_eof_en : 1; /* bits 1:1 */
		ca_uint32_t txq2_eof_en : 1; /* bits 2:2 */
		ca_uint32_t txq3_eof_en : 1; /* bits 3:3 */
		ca_uint32_t txq4_eof_en : 1; /* bits 4:4 */
		ca_uint32_t txq5_eof_en : 1; /* bits 5:5 */
		ca_uint32_t txq6_eof_en : 1; /* bits 6:6 */
		ca_uint32_t txq7_eof_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_INT_COAL_SRC_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_VP_INTERRUPT 0xf7001160
#define DMA_SEC_DMA_LSO_VP_VP_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t MISC_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t COAL_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_VP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_VP_INTENABLE 0xf7001164
#define DMA_SEC_DMA_LSO_VP_VP_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t MISC_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t COAL_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_VP_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT 0xf7001168
#define DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq0_empty : 1; /* bits 0:0 */
		ca_uint32_t txq0_pktcnt_overrun : 1; /* bits 1:1 */
		ca_uint32_t txq0_des_err : 1; /* bits 2:2 */
		ca_uint32_t txq1_empty : 1; /* bits 3:3 */
		ca_uint32_t txq1_pktcnt_overrun : 1; /* bits 4:4 */
		ca_uint32_t txq1_des_err : 1; /* bits 5:5 */
		ca_uint32_t txq2_empty : 1; /* bits 6:6 */
		ca_uint32_t txq2_pktcnt_overrun : 1; /* bits 7:7 */
		ca_uint32_t txq2_des_err : 1; /* bits 8:8 */
		ca_uint32_t txq3_empty : 1; /* bits 9:9 */
		ca_uint32_t txq3_pktcnt_overrun : 1; /* bits 10:10 */
		ca_uint32_t txq3_des_err : 1; /* bits 11:11 */
		ca_uint32_t txq4_empty : 1; /* bits 12:12 */
		ca_uint32_t txq4_pktcnt_overrun : 1; /* bits 13:13 */
		ca_uint32_t txq4_des_err : 1; /* bits 14:14 */
		ca_uint32_t txq5_empty : 1; /* bits 15:15 */
		ca_uint32_t txq5_pktcnt_overrun : 1; /* bits 16:16 */
		ca_uint32_t txq5_des_err : 1; /* bits 17:17 */
		ca_uint32_t txq6_empty : 1; /* bits 18:18 */
		ca_uint32_t txq6_pktcnt_overrun : 1; /* bits 19:19 */
		ca_uint32_t txq6_des_err : 1; /* bits 20:20 */
		ca_uint32_t txq7_empty : 1; /* bits 21:21 */
		ca_uint32_t txq7_pktcnt_overrun : 1; /* bits 22:22 */
		ca_uint32_t txq7_des_err : 1; /* bits 23:23 */
		ca_uint32_t fbm_timeout_err : 1; /* bits 24:24 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_MISC_INTENABLE 0xf700116c
#define DMA_SEC_DMA_LSO_VP_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq0_empty_en : 1; /* bits 0:0 */
		ca_uint32_t txq0_pktcnt_overrun_en : 1; /* bits 1:1 */
		ca_uint32_t txq0_des_err_en : 1; /* bits 2:2 */
		ca_uint32_t txq1_empty_en : 1; /* bits 3:3 */
		ca_uint32_t txq1_pktcnt_overrun_en : 1; /* bits 4:4 */
		ca_uint32_t txq1_des_err_en : 1; /* bits 5:5 */
		ca_uint32_t txq2_empty_en : 1; /* bits 6:6 */
		ca_uint32_t txq2_pktcnt_overrun_en : 1; /* bits 7:7 */
		ca_uint32_t txq2_des_err_en : 1; /* bits 8:8 */
		ca_uint32_t txq3_empty_en : 1; /* bits 9:9 */
		ca_uint32_t txq3_pktcnt_overrun_en : 1; /* bits 10:10 */
		ca_uint32_t txq3_des_err_en : 1; /* bits 11:11 */
		ca_uint32_t txq4_empty_en : 1; /* bits 12:12 */
		ca_uint32_t txq4_pktcnt_overrun_en : 1; /* bits 13:13 */
		ca_uint32_t txq4_des_err_en : 1; /* bits 14:14 */
		ca_uint32_t txq5_empty_en : 1; /* bits 15:15 */
		ca_uint32_t txq5_pktcnt_overrun_en : 1; /* bits 16:16 */
		ca_uint32_t txq5_des_err_en : 1; /* bits 17:17 */
		ca_uint32_t txq6_empty_en : 1; /* bits 18:18 */
		ca_uint32_t txq6_pktcnt_overrun_en : 1; /* bits 19:19 */
		ca_uint32_t txq6_des_err_en : 1; /* bits 20:20 */
		ca_uint32_t txq7_empty_en : 1; /* bits 21:21 */
		ca_uint32_t txq7_pktcnt_overrun_en : 1; /* bits 22:22 */
		ca_uint32_t txq7_des_err_en : 1; /* bits 23:23 */
		ca_uint32_t fbm_timeout_err_en : 1; /* bits 24:24 */
		ca_uint32_t rsrvd1 : 7;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT 0xf7001170
#define DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_eof : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_COAL_INTENABLE 0xf7001174
#define DMA_SEC_DMA_LSO_VP_COAL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_eof_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_COAL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_HDRA_CFG 0xf7001178
#define DMA_SEC_DMA_LSO_VP_HDRA_CFG_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t hdra_cos : 3; /* bits 2:0 */
		ca_uint32_t hdra_ldpid : 6; /* bits 8:3 */
		ca_uint32_t hdra_febypass : 1; /* bits 9:9 */
		ca_uint32_t hdra_nodrop : 1; /* bits 10:10 */
		ca_uint32_t hdra_mirror : 1; /* bits 11:11 */
		ca_uint32_t hdra_deepq : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_LSO_VP_HDRA_CFG_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_LSO_VP_STRIDE 160
#define DMA_SEC_DMA_LSO_VP_COUNT 12

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_LSO_VP */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_DMA_LSO_VP_CONTROL_t CONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_ACCESS_t
	  TXQ_BASE_DEPTH_ACCESS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA1_t
	  TXQ_BASE_DEPTH_DATA1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_DMA_LSO_VP_TXQ_BASE_DEPTH_DATA0_t
	  TXQ_BASE_DEPTH_DATA0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_ACCESS_t
	  TXQ_PKTCNT_ACCESS; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_DMA_LSO_VP_TXQ_PKTCNT_DATA_t TXQ_PKTCNT_DATA; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_DMA_LSO_VP_TXQ0_WPTR_t TXQ0_WPTR; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_DMA_LSO_VP_TXQ0_RPTR_t TXQ0_RPTR; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DMA_SEC_DMA_LSO_VP_TXQ1_WPTR_t TXQ1_WPTR; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_DMA_LSO_VP_TXQ1_RPTR_t TXQ1_RPTR; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_DMA_LSO_VP_TXQ2_WPTR_t TXQ2_WPTR; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_DMA_LSO_VP_TXQ2_RPTR_t TXQ2_RPTR; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_DMA_LSO_VP_TXQ3_WPTR_t TXQ3_WPTR; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_DMA_LSO_VP_TXQ3_RPTR_t TXQ3_RPTR; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	DMA_SEC_DMA_LSO_VP_TXQ4_WPTR_t TXQ4_WPTR; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_DMA_LSO_VP_TXQ4_RPTR_t TXQ4_RPTR; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	DMA_SEC_DMA_LSO_VP_TXQ5_WPTR_t TXQ5_WPTR; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	DMA_SEC_DMA_LSO_VP_TXQ5_RPTR_t TXQ5_RPTR; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	DMA_SEC_DMA_LSO_VP_TXQ6_WPTR_t TXQ6_WPTR; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	DMA_SEC_DMA_LSO_VP_TXQ6_RPTR_t TXQ6_RPTR; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	DMA_SEC_DMA_LSO_VP_TXQ7_WPTR_t TXQ7_WPTR; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	DMA_SEC_DMA_LSO_VP_TXQ7_RPTR_t TXQ7_RPTR; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	DMA_SEC_DMA_LSO_VP_INT_COAL_SET_t INT_COAL_SET; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	DMA_SEC_DMA_LSO_VP_INT_COAL_SRC_t INT_COAL_SRC; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	DMA_SEC_DMA_LSO_VP_VP_INTERRUPT_t VP_INTERRUPT; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	DMA_SEC_DMA_LSO_VP_VP_INTENABLE_t VP_INTENABLE; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	DMA_SEC_DMA_LSO_VP_MISC_INTERRUPT_t MISC_INTERRUPT; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	DMA_SEC_DMA_LSO_VP_MISC_INTENABLE_t MISC_INTENABLE; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	DMA_SEC_DMA_LSO_VP_COAL_INTERRUPT_t COAL_INTERRUPT; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	DMA_SEC_DMA_LSO_VP_COAL_INTENABLE_t COAL_INTENABLE; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	DMA_SEC_DMA_LSO_VP_HDRA_CFG_t HDRA_CFG; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[39];
} DMA_SEC_DMA_LSO_VP_t;
#endif /* !__ASSEMBLER__ */

/*
 * SS
 */

#define DMA_SEC_SS_CTRL 0xf7001900
#define DMA_SEC_SS_CTRL_dft 0x30000fff

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t cpu_en : 12; /* bits 11:0 */
		ca_uint32_t rsrvd1 : 15;
		ca_uint32_t force_init_done : 1; /* bits 27:27 */
		ca_uint32_t addtok_en : 1; /* bits 28:28 */
		ca_uint32_t subtok_en : 1; /* bits 29:29 */
		ca_uint32_t shp_en : 1; /* bits 30:30 */
		ca_uint32_t tx_en : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_STS 0xf7001904
#define DMA_SEC_SS_STS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sch_fifo_overflow : 1; /* bits 0:0 */
		ca_uint32_t shp_fifo_overflow : 1; /* bits 1:1 */
		ca_uint32_t shp_fifo_empty : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 28;
		ca_uint32_t shp_init_done : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_STS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_DRR_WEIGHT_BASE 0xf7001908
#define DMA_SEC_SS_DRR_WEIGHT_BASE_dft 0x00000380

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t w_rate : 5; /* bits 4:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t sch_mode : 1; /* bits 7:7 */
		ca_uint32_t base_select : 3; /* bits 10:8 */
		ca_uint32_t rsrvd2 : 21;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_DRR_WEIGHT_BASE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG 0xf700190c
#define DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port0 : 8; /* bits 7:0 */
		ca_uint32_t port1 : 8; /* bits 15:8 */
		ca_uint32_t port2 : 8; /* bits 23:16 */
		ca_uint32_t port3 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG 0xf7001910
#define DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port4 : 8; /* bits 7:0 */
		ca_uint32_t port5 : 8; /* bits 15:8 */
		ca_uint32_t port6 : 8; /* bits 23:16 */
		ca_uint32_t port7 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG 0xf7001914
#define DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG_dft 0x01010101

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t port8 : 8; /* bits 7:0 */
		ca_uint32_t port9 : 8; /* bits 15:8 */
		ca_uint32_t port10 : 8; /* bits 23:16 */
		ca_uint32_t port11 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0 0xf7001918
#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_STRIDE 8
#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_COUNT 12
#define DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq0 : 8; /* bits 7:0 */
		ca_uint32_t voq1 : 8; /* bits 15:8 */
		ca_uint32_t voq2 : 8; /* bits 23:16 */
		ca_uint32_t voq3 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0 0xf700191c
#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_STRIDE 8
#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_COUNT 12
#define DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t voq4 : 8; /* bits 7:0 */
		ca_uint32_t voq5 : 8; /* bits 15:8 */
		ca_uint32_t voq6 : 8; /* bits 23:16 */
		ca_uint32_t voq7 : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_CTRL 0xf7001978
#define DMA_SEC_SS_SHP_CTRL_dft 0x0000007c

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t pkt_mode_class0_cnt : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t pkt_mode_class1_cnt : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 17;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS 0xf700197c
#define DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 4; /* bits 3:0 */
		ca_uint32_t rsrvd1 : 26;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1 0xf7001980
#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0 0xf7001984
#define DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS 0xf7001988
#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t address : 7; /* bits 6:0 */
		ca_uint32_t rsrvd1 : 23;
		ca_uint32_t rbw : 1; /* bits 30:30 */
		ca_uint32_t access : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1 0xf700198c
#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bs : 6; /* bits 5:0 */
		ca_uint32_t enb : 2; /* bits 7:6 */
		ca_uint32_t mode : 1; /* bits 8:8 */
		ca_uint32_t tbc : 21; /* bits 29:9 */
		ca_uint32_t pkt_mode_class_sel : 1; /* bits 30:30 */
		ca_uint32_t rsrvd1 : 1;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0 0xf7001990
#define DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rate_k : 10; /* bits 9:0 */
		ca_uint32_t rate_m : 16; /* bits 25:10 */
		ca_uint32_t bs : 6; /* bits 31:26 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SS_HDM_WRITE_PROTECTION 0xf7001994
#define DMA_SEC_SS_HDM_WRITE_PROTECTION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t passwd : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SS_HDM_WRITE_PROTECTION_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SS */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_SS_CTRL_t CTRL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_SS_STS_t STS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_SS_DRR_WEIGHT_BASE_t DRR_WEIGHT_BASE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_SS_PORT3_0_WEIGHT_RATIO_CFG_t
	  PORT3_0_WEIGHT_RATIO_CFG; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_SS_PORT7_4_WEIGHT_RATIO_CFG_t
	  PORT7_4_WEIGHT_RATIO_CFG; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_SS_PORT11_8_WEIGHT_RATIO_CFG_t
	  PORT11_8_WEIGHT_RATIO_CFG; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_SS_VOQ3_0_WEIGHT_RATIO_CFG0_t
	  VOQ3_0_WEIGHT_RATIO_CFG0; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_SS_VOQ7_4_WEIGHT_RATIO_CFG0_t
	  VOQ7_4_WEIGHT_RATIO_CFG0; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[91];
	DMA_SEC_SS_SHP_CTRL_t SHP_CTRL; /* addr: 0x00000078 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_SS_SHP_PORT_TBC_MEM_ACCESS_t
	  SHP_PORT_TBC_MEM_ACCESS; /* addr: 0x0000007c */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA1_t
	  SHP_PORT_TBC_MEM_DATA1; /* addr: 0x00000080 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_SS_SHP_PORT_TBC_MEM_DATA0_t
	  SHP_PORT_TBC_MEM_DATA0; /* addr: 0x00000084 */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_SS_SHP_VOQ_TBC_MEM_ACCESS_t
	  SHP_VOQ_TBC_MEM_ACCESS; /* addr: 0x00000088 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA1_t
	  SHP_VOQ_TBC_MEM_DATA1; /* addr: 0x0000008c */
	ca_uint32_t rsrvd14[3];
	DMA_SEC_SS_SHP_VOQ_TBC_MEM_DATA0_t
	  SHP_VOQ_TBC_MEM_DATA0; /* addr: 0x00000090 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_SS_HDM_WRITE_PROTECTION_t HDM_WRITE_PROTECTION; /* addr: 0x00000094 */
} DMA_SEC_SS_t;
#endif /* !__ASSEMBLER__ */

/*
 * DMA_SSP_Q[0..2]
 */

#define DMA_SEC_DMA_SSP_Q_RXQ_CONTROL 0xf7001a00
#define DMA_SEC_DMA_SSP_Q_RXQ_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxq_flush_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t burst_size : 1; /* bits 3:3 */
		ca_uint32_t rsrvd3 : 2;
		ca_uint32_t rxq_packet_threshold : 6; /* bits 11:6 */
		ca_uint32_t rxq_tmr : 20; /* bits 31:12 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH 0xf7001a04
#define DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t depth : 4; /* bits 3:0 */
		ca_uint32_t base : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_BASE 0xf7001a08
#define DMA_SEC_DMA_SSP_Q_RXQ_BASE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_BASE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_WPTR 0xf7001a0c
#define DMA_SEC_DMA_SSP_Q_RXQ_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_RPTR 0xf7001a10
#define DMA_SEC_DMA_SSP_Q_RXQ_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT 0xf7001a14
#define DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t counter : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_CONTROL 0xf7001a18
#define DMA_SEC_DMA_SSP_Q_TXQ_CONTROL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_en : 1; /* bits 0:0 */
		ca_uint32_t txq_flush_en : 1; /* bits 1:1 */
		ca_uint32_t txq_sp_en : 1; /* bits 2:2 */
		ca_uint32_t burst_size : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t txq_packet_threshold : 6; /* bits 11:6 */
		ca_uint32_t txq_tmr : 20; /* bits 31:12 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_CONTROL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH 0xf7001a1c
#define DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t depth : 4; /* bits 3:0 */
		ca_uint32_t base : 28; /* bits 31:4 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_BASE 0xf7001a20
#define DMA_SEC_DMA_SSP_Q_TXQ_BASE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t base : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_BASE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_WPTR 0xf7001a24
#define DMA_SEC_DMA_SSP_Q_TXQ_WPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_WPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_RPTR 0xf7001a28
#define DMA_SEC_DMA_SSP_Q_TXQ_RPTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t index : 13; /* bits 12:0 */
		ca_uint32_t rsrvd1 : 19;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_RPTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT 0xf7001a2c
#define DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t counter : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 8;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT 0xf7001a30
#define DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t RXQ_MISC_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ_COAL_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE 0xf7001a34
#define DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t RXQ_MISC_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ_COAL_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT 0xf7001a38
#define DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ_MISC_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t TXQ_COAL_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE 0xf7001a3c
#define DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ_MISC_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t TXQ_COAL_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT 0xf7001a40
#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxq_full : 1; /* bits 0:0 */
		ca_uint32_t rxq_overrun : 1; /* bits 1:1 */
		ca_uint32_t rxq_desc_err : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE 0xf7001a44
#define DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxq_full_en : 1; /* bits 0:0 */
		ca_uint32_t rxq_overrun_en : 1; /* bits 1:1 */
		ca_uint32_t rxq_desc_err_en : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT 0xf7001a48
#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_empty : 1; /* bits 0:0 */
		ca_uint32_t txq_overrun : 1; /* bits 1:1 */
		ca_uint32_t txq_desc_err : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE 0xf7001a4c
#define DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_empty_en : 1; /* bits 0:0 */
		ca_uint32_t txq_overrun_en : 1; /* bits 1:1 */
		ca_uint32_t txq_desc_err_en : 1; /* bits 2:2 */
		ca_uint32_t rsrvd1 : 29;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT 0xf7001a50
#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxq_eof : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE 0xf7001a54
#define DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxq_eof_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT 0xf7001a58
#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_eof : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE 0xf7001a5c
#define DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t txq_eof_en : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 31;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0 0xf7001a60
#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1 0xf7001a64
#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE 0xf7001a68
#define DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t buffersize : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0 0xf7001a6c
#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1 0xf7001a70
#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t data : 8; /* bits 7:0 */
		ca_uint32_t rsrvd1 : 24;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE 0xf7001a74
#define DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t buffersize : 16; /* bits 15:0 */
		ca_uint32_t rsrvd1 : 16;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_0 0xf7001a78
#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_spare0 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_DMA_SPARE_0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_1 0xf7001a7c
#define DMA_SEC_DMA_SSP_Q_DMA_SPARE_1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t dma_spare1 : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_SSP_Q_DMA_SPARE_1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_SSP_Q_STRIDE 128
#define DMA_SEC_DMA_SSP_Q_COUNT 3

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_SSP_Q */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_DMA_SSP_Q_RXQ_CONTROL_t RXQ_CONTROL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_DMA_SSP_Q_RXQ_BASE_DEPTH_t RXQ_BASE_DEPTH; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_DMA_SSP_Q_RXQ_BASE_t RXQ_BASE; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_DMA_SSP_Q_RXQ_WPTR_t RXQ_WPTR; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_DMA_SSP_Q_RXQ_RPTR_t RXQ_RPTR; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_DMA_SSP_Q_RXQ_PKTCNT_t RXQ_PKTCNT; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_DMA_SSP_Q_TXQ_CONTROL_t TXQ_CONTROL; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_DMA_SSP_Q_TXQ_BASE_DEPTH_t TXQ_BASE_DEPTH; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DMA_SEC_DMA_SSP_Q_TXQ_BASE_t TXQ_BASE; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_DMA_SSP_Q_TXQ_WPTR_t TXQ_WPTR; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_DMA_SSP_Q_TXQ_RPTR_t TXQ_RPTR; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_DMA_SSP_Q_TXQ_PKTCNT_t TXQ_PKTCNT; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_DMA_SSP_Q_RXQ_INTERRUPT_t RXQ_INTERRUPT; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_DMA_SSP_Q_RXQ_INTENABLE_t RXQ_INTENABLE; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	DMA_SEC_DMA_SSP_Q_TXQ_INTERRUPT_t TXQ_INTERRUPT; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_DMA_SSP_Q_TXQ_INTENABLE_t TXQ_INTENABLE; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTERRUPT_t
	  RXQ_MISC_INTERRUPT; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	DMA_SEC_DMA_SSP_Q_RXQ_MISC_INTENABLE_t
	  RXQ_MISC_INTENABLE; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTERRUPT_t
	  TXQ_MISC_INTERRUPT; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	DMA_SEC_DMA_SSP_Q_TXQ_MISC_INTENABLE_t
	  TXQ_MISC_INTENABLE; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTERRUPT_t
	  RXQ_COAL_INTERRUPT; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	DMA_SEC_DMA_SSP_Q_RXQ_COAL_INTENABLE_t
	  RXQ_COAL_INTENABLE; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTERRUPT_t
	  TXQ_COAL_INTERRUPT; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	DMA_SEC_DMA_SSP_Q_TXQ_COAL_INTENABLE_t
	  TXQ_COAL_INTENABLE; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR0_t
	  RXQ_FRAG_BUFF_ADDR0; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_ADDR1_t
	  RXQ_FRAG_BUFF_ADDR1; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	DMA_SEC_DMA_SSP_Q_RXQ_FRAG_BUFF_SIZE_t
	  RXQ_FRAG_BUFF_SIZE; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR0_t
	  TXQ_FRAG_BUFF_ADDR0; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_ADDR1_t
	  TXQ_FRAG_BUFF_ADDR1; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	DMA_SEC_DMA_SSP_Q_TXQ_FRAG_BUFF_SIZE_t
	  TXQ_FRAG_BUFF_SIZE; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	DMA_SEC_DMA_SSP_Q_DMA_SPARE_0_t DMA_SPARE_0; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	DMA_SEC_DMA_SSP_Q_DMA_SPARE_1_t DMA_SPARE_1; /* addr: 0x0000007c */
	ca_uint32_t rsrvd32[3];
} DMA_SEC_DMA_SSP_Q_t;
#endif /* !__ASSEMBLER__ */

/*
 * SSP[0..1]
 */

#define DMA_SEC_SSP_ID 0xf7001b80
#define DMA_SEC_SSP_ID_dft 0x00010300

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t REV_ID : 8; /* bits 7:0 */
		ca_uint32_t DEV_ID : 24; /* bits 31:8 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_ID_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_CTRL0 0xf7001b84
#define DMA_SEC_SSP_CTRL0_dft 0x001f0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rxChByteSwap : 1; /* bits 0:0 */
		ca_uint32_t txChByteSwap : 1; /* bits 1:1 */
		ca_uint32_t loop_en : 1; /* bits 2:2 */
		ca_uint32_t forceTC : 1; /* bits 3:3 */
		ca_uint32_t txleft_24bitswap : 1; /* bits 4:4 */
		ca_uint32_t txright_24bitswap : 1; /* bits 5:5 */
		ca_uint32_t rxleft_24bitswap : 1; /* bits 6:6 */
		ca_uint32_t rxright_24bitswap : 1; /* bits 7:7 */
		ca_uint32_t spdif_enable : 1; /* bits 8:8 */
		ca_uint32_t s_enable : 1; /* bits 9:9 */
		ca_uint32_t spdif_fourBitShift : 1; /* bits 10:10 */
		ca_uint32_t spdif_byteShift : 1; /* bits 11:11 */
		ca_uint32_t spdif_preambleIns : 1; /* bits 12:12 */
		ca_uint32_t spdif_mode4WordEn : 1; /* bits 13:13 */
		ca_uint32_t zsi_sel_en : 1; /* bits 14:14 */
		ca_uint32_t isi_en : 1; /* bits 15:15 */
		ca_uint32_t spdif_dma_wtMk : 7; /* bits 22:16 */
		ca_uint32_t spdif_dll_en : 1; /* bits 23:23 */
		ca_uint32_t pcm_slv_en : 1; /* bits 24:24 */
		ca_uint32_t spi_sel : 3; /* bits 27:25 */
		ca_uint32_t rsrvd1 : 4;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_CTRL1 0xf7001b88
#define DMA_SEC_SSP_CTRL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t startProc : 1; /* bits 0:0 */
		ca_uint32_t i2s_rxstartProc : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_FRAME_CTRL0 0xf7001b8c
#define DMA_SEC_SSP_FRAME_CTRL0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t reserved : 16; /* bits 15:0 */
		ca_uint32_t FSCFreeRun : 1; /* bits 16:16 */
		ca_uint32_t extClkSel : 1; /* bits 17:17 */
		ca_uint32_t sClkPol : 1; /* bits 18:18 */
		ca_uint32_t sClkPhase : 1; /* bits 19:19 */
		ca_uint32_t sClkOffOnIdle : 1; /* bits 20:20 */
		ca_uint32_t extSClkSel : 1; /* bits 21:21 */
		ca_uint32_t doubleClock : 1; /* bits 22:22 */
		ca_uint32_t lsbFirst : 1; /* bits 23:23 */
		ca_uint32_t txEdge : 1; /* bits 24:24 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rxEdge : 1; /* bits 26:26 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t FSPol : 1; /* bits 28:28 */
		ca_uint32_t FSEdge : 1; /* bits 29:29 */
		ca_uint32_t mclkSel : 1; /* bits 30:30 */
		ca_uint32_t bypass_clkDiv : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_FRAME_CTRL0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_FRAME_CTRL1 0xf7001b90
#define DMA_SEC_SSP_FRAME_CTRL1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t FSLen : 10; /* bits 9:0 */
		ca_uint32_t rsrvd1 : 2;
		ca_uint32_t slot2FS : 4; /* bits 15:12 */
		ca_uint32_t numOfSlots : 7; /* bits 22:16 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t slot2Slot : 3; /* bits 26:24 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t FS2Slot : 4; /* bits 31:28 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_FRAME_CTRL1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_BAUDRATE_CTRL 0xf7001b94
#define DMA_SEC_SSP_BAUDRATE_CTRL_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sumValue : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_BAUDRATE_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_FIFO_CTRL 0xf7001b98
#define DMA_SEC_SSP_FIFO_CTRL_dft 0x07f0007f

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rfrWtMkLvl : 8; /* bits 7:0 */
		ca_uint32_t rfwWtMkLvl : 4; /* bits 11:8 */
		ca_uint32_t rsrvd1 : 4;
		ca_uint32_t tfrWtMkLvl : 4; /* bits 19:16 */
		ca_uint32_t tfwWtMkLvl : 8; /* bits 27:20 */
		ca_uint32_t frame2Frame : 3; /* bits 30:28 */
		ca_uint32_t reserved : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_FIFO_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_FIFO_PTR 0xf7001b9c
#define DMA_SEC_SSP_FIFO_PTR_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tfWrPtr : 8; /* bits 7:0 */
		ca_uint32_t tfRdPtr : 8; /* bits 15:8 */
		ca_uint32_t rfWrPtr : 8; /* bits 23:16 */
		ca_uint32_t rfRdPtr : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_FIFO_PTR_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_INTERRUPT 0xf7001ba0
#define DMA_SEC_SSP_INTERRUPT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tfsFull : 1; /* bits 0:0 */
		ca_uint32_t tfsEmpty : 1; /* bits 1:1 */
		ca_uint32_t tfwWtMk : 1; /* bits 2:2 */
		ca_uint32_t tfsUndRun : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rfsFull : 1; /* bits 5:5 */
		ca_uint32_t rfsEmpty : 1; /* bits 6:6 */
		ca_uint32_t rfrWtMk : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rfsOvrRun : 1; /* bits 9:9 */
		ca_uint32_t rsrvd3 : 6;
		ca_uint32_t spdif_int : 1; /* bits 16:16 */
		ca_uint32_t spdifFifoFull_int : 1; /* bits 17:17 */
		ca_uint32_t slic_int : 1; /* bits 18:18 */
		ca_uint32_t pcm_slv_disc : 1; /* bits 19:19 */
		ca_uint32_t rsrvd4 : 12;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_INT_ENABLE 0xf7001ba4
#define DMA_SEC_SSP_INT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t tfsFull_int_en : 1; /* bits 0:0 */
		ca_uint32_t tfsEmpty_int_en : 1; /* bits 1:1 */
		ca_uint32_t tfwWtMk_int_en : 1; /* bits 2:2 */
		ca_uint32_t tfsUndRun_int_en : 1; /* bits 3:3 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t rfsFull_int_en : 1; /* bits 5:5 */
		ca_uint32_t rfsEmpty_int_en : 1; /* bits 6:6 */
		ca_uint32_t rfrWtMk_int_en : 1; /* bits 7:7 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t rfsOvrRun_int_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd3 : 6;
		ca_uint32_t spdif_int_en : 1; /* bits 16:16 */
		ca_uint32_t spdifFifoFull_int_en : 1; /* bits 17:17 */
		ca_uint32_t slic_int_en : 1; /* bits 18:18 */
		ca_uint32_t pcm_slv_disc_en : 1; /* bits 19:19 */
		ca_uint32_t rsrvd4 : 12;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_INT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_TXSLOT_VLD0 0xf7001ba8
#define DMA_SEC_SSP_TXSLOT_VLD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_TXSLOT_VLD0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_TXSLOT_VLD1 0xf7001bac
#define DMA_SEC_SSP_TXSLOT_VLD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_TXSLOT_VLD1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_TXSLOT_VLD2 0xf7001bb0
#define DMA_SEC_SSP_TXSLOT_VLD2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_TXSLOT_VLD2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_TXSLOT_VLD3 0xf7001bb4
#define DMA_SEC_SSP_TXSLOT_VLD3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_TXSLOT_VLD3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_RXSLOT_VLD0 0xf7001bb8
#define DMA_SEC_SSP_RXSLOT_VLD0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_RXSLOT_VLD0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_RXSLOT_VLD1 0xf7001bbc
#define DMA_SEC_SSP_RXSLOT_VLD1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_RXSLOT_VLD1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_RXSLOT_VLD2 0xf7001bc0
#define DMA_SEC_SSP_RXSLOT_VLD2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_RXSLOT_VLD2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_RXSLOT_VLD3 0xf7001bc4
#define DMA_SEC_SSP_RXSLOT_VLD3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t SlotVld : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_RXSLOT_VLD3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SLOT_SIZE0 0xf7001bc8
#define DMA_SEC_SSP_SLOT_SIZE0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sSize0 : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sSize1 : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t sSize2 : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t sSize3 : 3; /* bits 14:12 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t sSize4 : 3; /* bits 18:16 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t sSize5 : 3; /* bits 22:20 */
		ca_uint32_t rsrvd6 : 1;
		ca_uint32_t sSize6 : 3; /* bits 26:24 */
		ca_uint32_t rsrvd7 : 1;
		ca_uint32_t sSize7 : 3; /* bits 30:28 */
		ca_uint32_t rsrvd8 : 1;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SLOT_SIZE0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SLOT_SIZE1 0xf7001bcc
#define DMA_SEC_SSP_SLOT_SIZE1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sSize8 : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sSize9 : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t sSize10 : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t sSize11 : 3; /* bits 14:12 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t sSize12 : 3; /* bits 18:16 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t sSize13 : 3; /* bits 22:20 */
		ca_uint32_t rsrvd6 : 1;
		ca_uint32_t sSize14 : 3; /* bits 26:24 */
		ca_uint32_t rsrvd7 : 1;
		ca_uint32_t sSize15 : 3; /* bits 30:28 */
		ca_uint32_t rsrvd8 : 1;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SLOT_SIZE1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SLOT_SIZE2 0xf7001bd0
#define DMA_SEC_SSP_SLOT_SIZE2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sSize16 : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sSize17 : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t sSize18 : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t sSize19 : 3; /* bits 14:12 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t sSize20 : 3; /* bits 18:16 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t sSize21 : 3; /* bits 22:20 */
		ca_uint32_t rsrvd6 : 1;
		ca_uint32_t sSize22 : 3; /* bits 26:24 */
		ca_uint32_t rsrvd7 : 1;
		ca_uint32_t sSize23 : 3; /* bits 30:28 */
		ca_uint32_t rsrvd8 : 1;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SLOT_SIZE2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SLOT_SIZE3 0xf7001bd4
#define DMA_SEC_SSP_SLOT_SIZE3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t sSize24 : 3; /* bits 2:0 */
		ca_uint32_t rsrvd1 : 1;
		ca_uint32_t sSize25 : 3; /* bits 6:4 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t sSize26 : 3; /* bits 10:8 */
		ca_uint32_t rsrvd3 : 1;
		ca_uint32_t sSize27 : 3; /* bits 14:12 */
		ca_uint32_t rsrvd4 : 1;
		ca_uint32_t sSize28 : 3; /* bits 18:16 */
		ca_uint32_t rsrvd5 : 1;
		ca_uint32_t sSize29 : 3; /* bits 22:20 */
		ca_uint32_t rsrvd6 : 1;
		ca_uint32_t sSize30 : 3; /* bits 26:24 */
		ca_uint32_t rsrvd7 : 1;
		ca_uint32_t sSize31 : 3; /* bits 30:28 */
		ca_uint32_t rsrvd8 : 1;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SLOT_SIZE3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SPDIF_RX_CTRL 0xf7001bd8
#define DMA_SEC_SSP_SPDIF_RX_CTRL_dft 0x00001f00

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spdif_rx_enable : 1; /* bits 0:0 */
		ca_uint32_t spdif_rx_4wordMode : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 6;
		ca_uint32_t spdif_rx_dma_wtMk : 7; /* bits 14:8 */
		ca_uint32_t rsrvd2 : 17;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SPDIF_RX_CTRL_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SPDIF_RX_STATUS 0xf7001bdc
#define DMA_SEC_SSP_SPDIF_RX_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t spdif_rx_unit_interval : 12; /* bits 11:0 */
		ca_uint32_t spdif_rx_sync : 1; /* bits 12:12 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t sTxfrState : 3; /* bits 18:16 */
		ca_uint32_t rsrvd2 : 1;
		ca_uint32_t slv_cs_p : 4; /* bits 23:20 */
		ca_uint32_t rsrvd3 : 8;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SPDIF_RX_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_SPARE 0xf7001be0
#define DMA_SEC_SSP_SPARE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t Spare : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SSP_SPARE_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SSP_STRIDE 128
#define DMA_SEC_SSP_COUNT 2

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SSP */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_SSP_ID_t ID; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_SSP_CTRL0_t CTRL0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_SSP_CTRL1_t CTRL1; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_SSP_FRAME_CTRL0_t FRAME_CTRL0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_SSP_FRAME_CTRL1_t FRAME_CTRL1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_SSP_BAUDRATE_CTRL_t BAUDRATE_CTRL; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_SSP_FIFO_CTRL_t FIFO_CTRL; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_SSP_FIFO_PTR_t FIFO_PTR; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DMA_SEC_SSP_INTERRUPT_t INTERRUPT; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_SSP_INT_ENABLE_t INT_ENABLE; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_SSP_TXSLOT_VLD0_t TXSLOT_VLD0; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_SSP_TXSLOT_VLD1_t TXSLOT_VLD1; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_SSP_TXSLOT_VLD2_t TXSLOT_VLD2; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_SSP_TXSLOT_VLD3_t TXSLOT_VLD3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	DMA_SEC_SSP_RXSLOT_VLD0_t RXSLOT_VLD0; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_SSP_RXSLOT_VLD1_t RXSLOT_VLD1; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	DMA_SEC_SSP_RXSLOT_VLD2_t RXSLOT_VLD2; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	DMA_SEC_SSP_RXSLOT_VLD3_t RXSLOT_VLD3; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	DMA_SEC_SSP_SLOT_SIZE0_t SLOT_SIZE0; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	DMA_SEC_SSP_SLOT_SIZE1_t SLOT_SIZE1; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	DMA_SEC_SSP_SLOT_SIZE2_t SLOT_SIZE2; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	DMA_SEC_SSP_SLOT_SIZE3_t SLOT_SIZE3; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	DMA_SEC_SSP_SPDIF_RX_CTRL_t SPDIF_RX_CTRL; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	DMA_SEC_SSP_SPDIF_RX_STATUS_t SPDIF_RX_STATUS; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	DMA_SEC_SSP_SPARE_t SPARE; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[31];
} DMA_SEC_SSP_t;
#endif /* !__ASSEMBLER__ */

/*
 * SPDIF
 */

#define DMA_SEC_SPDIF_DATA 0xf7001c80
#define DMA_SEC_SPDIF_DATA_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t audio_data : 24; /* bits 23:0 */
		ca_uint32_t v : 1; /* bits 24:24 */
		ca_uint32_t u : 1; /* bits 25:25 */
		ca_uint32_t c : 1; /* bits 26:26 */
		ca_uint32_t fp : 1; /* bits 27:27 */
		ca_uint32_t pac : 2; /* bits 29:28 */
		ca_uint32_t rsrvd1 : 2;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_DATA_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CONFIGURATION 0xf7001c84
#define DMA_SEC_SPDIF_CONFIGURATION_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t bsd : 1; /* bits 0:0 */
		ca_uint32_t vd : 1; /* bits 1:1 */
		ca_uint32_t ud : 1; /* bits 2:2 */
		ca_uint32_t cd : 1; /* bits 3:3 */
		ca_uint32_t pd : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t enable : 1; /* bits 8:8 */
		ca_uint32_t data_enable : 1; /* bits 9:9 */
		ca_uint32_t pause_repetition_period : 6; /* bits 15:10 */
		ca_uint32_t vv : 1; /* bits 16:16 */
		ca_uint32_t pcm : 1; /* bits 17:17 */
		ca_uint32_t sf : 2; /* bits 19:18 */
		ca_uint32_t burst_repetition_period : 12; /* bits 31:20 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CONFIGURATION_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_IRQ_INTERRUPT 0xf7001c88
#define DMA_SEC_SPDIF_IRQ_INTERRUPT_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t ffe : 1; /* bits 0:0 */
		ca_uint32_t bee : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 14;
		ca_uint32_t ffi : 1; /* bits 16:16 */
		ca_uint32_t bei : 1; /* bits 17:17 */
		ca_uint32_t rsrvd2 : 14;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_IRQ_INTERRUPT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_IP_CORE_VER 0xf7001c90
#define DMA_SEC_SPDIF_IP_CORE_VER_dft 0xda0f0300

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t core_rel : 8; /* bits 7:0 */
		ca_uint32_t core_ver : 8; /* bits 15:8 */
		ca_uint32_t core_id : 8; /* bits 23:16 */
		ca_uint32_t core_family : 8; /* bits 31:24 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_IP_CORE_VER_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_NUM_SAMP 0xf7001c94
#define DMA_SEC_SPDIF_NUM_SAMP_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t num_samp : 24; /* bits 23:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t empty : 1; /* bits 29:29 */
		ca_uint32_t rsrvd2 : 2;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_NUM_SAMP_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_FIFO_MAX_LEN 0xf7001c98
#define DMA_SEC_SPDIF_FIFO_MAX_LEN_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t len : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_FIFO_MAX_LEN_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_FIFO_LOWER_LIMIT 0xf7001c9c
#define DMA_SEC_SPDIF_FIFO_LOWER_LIMIT_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t limit : 9; /* bits 8:0 */
		ca_uint32_t rsrvd1 : 23;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_FIFO_LOWER_LIMIT_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_INTERNAL_MASTER_CLOCK_FREQUENCY 0xf7001ca0
#define DMA_SEC_SPDIF_INTERNAL_MASTER_CLOCK_FREQUENCY_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t q : 20; /* bits 19:0 */
		ca_uint32_t i : 11; /* bits 30:20 */
		ca_uint32_t cs : 1; /* bits 31:31 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_INTERNAL_MASTER_CLOCK_FREQUENCY_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_STATUS0 0xf7001d00
#define DMA_SEC_SPDIF_CHANNEL1_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_STATUS1 0xf7001d04
#define DMA_SEC_SPDIF_CHANNEL1_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_STATUS2 0xf7001d08
#define DMA_SEC_SPDIF_CHANNEL1_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_STATUS2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_STATUS3 0xf7001d0c
#define DMA_SEC_SPDIF_CHANNEL1_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_STATUS3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_STATUS4 0xf7001d10
#define DMA_SEC_SPDIF_CHANNEL1_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_STATUS4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_STATUS5 0xf7001d14
#define DMA_SEC_SPDIF_CHANNEL1_STATUS5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_STATUS5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_STATUS0 0xf7001d20
#define DMA_SEC_SPDIF_CHANNEL2_STATUS0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_STATUS0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_STATUS1 0xf7001d24
#define DMA_SEC_SPDIF_CHANNEL2_STATUS1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_STATUS1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_STATUS2 0xf7001d28
#define DMA_SEC_SPDIF_CHANNEL2_STATUS2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_STATUS2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_STATUS3 0xf7001d2c
#define DMA_SEC_SPDIF_CHANNEL2_STATUS3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_STATUS3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_STATUS4 0xf7001d30
#define DMA_SEC_SPDIF_CHANNEL2_STATUS4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_STATUS4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_STATUS5 0xf7001d34
#define DMA_SEC_SPDIF_CHANNEL2_STATUS5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t stat : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_STATUS5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_USER0 0xf7001d40
#define DMA_SEC_SPDIF_CHANNEL1_USER0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_USER0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_USER1 0xf7001d44
#define DMA_SEC_SPDIF_CHANNEL1_USER1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_USER1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_USER2 0xf7001d48
#define DMA_SEC_SPDIF_CHANNEL1_USER2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_USER2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_USER3 0xf7001d4c
#define DMA_SEC_SPDIF_CHANNEL1_USER3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_USER3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_USER4 0xf7001d50
#define DMA_SEC_SPDIF_CHANNEL1_USER4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_USER4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL1_USER5 0xf7001d54
#define DMA_SEC_SPDIF_CHANNEL1_USER5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL1_USER5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_USER0 0xf7001d60
#define DMA_SEC_SPDIF_CHANNEL2_USER0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_USER0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_USER1 0xf7001d64
#define DMA_SEC_SPDIF_CHANNEL2_USER1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_USER1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_USER2 0xf7001d68
#define DMA_SEC_SPDIF_CHANNEL2_USER2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_USER2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_USER3 0xf7001d6c
#define DMA_SEC_SPDIF_CHANNEL2_USER3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_USER3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_USER4 0xf7001d70
#define DMA_SEC_SPDIF_CHANNEL2_USER4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_USER4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_SPDIF_CHANNEL2_USER5 0xf7001d74
#define DMA_SEC_SPDIF_CHANNEL2_USER5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t user : 32; /* bits 31:0 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_SPDIF_CHANNEL2_USER5_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* SPDIF */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_SPDIF_DATA_t DATA; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_SPDIF_CONFIGURATION_t CONFIGURATION; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_SPDIF_IRQ_INTERRUPT_t IRQ_INTERRUPT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[7];
	DMA_SEC_SPDIF_IP_CORE_VER_t IP_CORE_VER; /* addr: 0x00000010 */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_SPDIF_NUM_SAMP_t NUM_SAMP; /* addr: 0x00000014 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_SPDIF_FIFO_MAX_LEN_t FIFO_MAX_LEN; /* addr: 0x00000018 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_SPDIF_FIFO_LOWER_LIMIT_t FIFO_LOWER_LIMIT; /* addr: 0x0000001c */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_SPDIF_INTERNAL_MASTER_CLOCK_FREQUENCY_t
	  INTERNAL_MASTER_CLOCK_FREQUENCY; /* addr: 0x00000020 */
	ca_uint32_t rsrvd8[95];
	DMA_SEC_SPDIF_CHANNEL1_STATUS0_t CHANNEL1_STATUS0; /* addr: 0x00000080 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_SPDIF_CHANNEL1_STATUS1_t CHANNEL1_STATUS1; /* addr: 0x00000084 */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_SPDIF_CHANNEL1_STATUS2_t CHANNEL1_STATUS2; /* addr: 0x00000088 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_SPDIF_CHANNEL1_STATUS3_t CHANNEL1_STATUS3; /* addr: 0x0000008c */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_SPDIF_CHANNEL1_STATUS4_t CHANNEL1_STATUS4; /* addr: 0x00000090 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_SPDIF_CHANNEL1_STATUS5_t CHANNEL1_STATUS5; /* addr: 0x00000094 */
	ca_uint32_t rsrvd14[11];
	DMA_SEC_SPDIF_CHANNEL2_STATUS0_t CHANNEL2_STATUS0; /* addr: 0x000000a0 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_SPDIF_CHANNEL2_STATUS1_t CHANNEL2_STATUS1; /* addr: 0x000000a4 */
	ca_uint32_t rsrvd16[3];
	DMA_SEC_SPDIF_CHANNEL2_STATUS2_t CHANNEL2_STATUS2; /* addr: 0x000000a8 */
	ca_uint32_t rsrvd17[3];
	DMA_SEC_SPDIF_CHANNEL2_STATUS3_t CHANNEL2_STATUS3; /* addr: 0x000000ac */
	ca_uint32_t rsrvd18[3];
	DMA_SEC_SPDIF_CHANNEL2_STATUS4_t CHANNEL2_STATUS4; /* addr: 0x000000b0 */
	ca_uint32_t rsrvd19[3];
	DMA_SEC_SPDIF_CHANNEL2_STATUS5_t CHANNEL2_STATUS5; /* addr: 0x000000b4 */
	ca_uint32_t rsrvd20[11];
	DMA_SEC_SPDIF_CHANNEL1_USER0_t CHANNEL1_USER0; /* addr: 0x000000c0 */
	ca_uint32_t rsrvd21[3];
	DMA_SEC_SPDIF_CHANNEL1_USER1_t CHANNEL1_USER1; /* addr: 0x000000c4 */
	ca_uint32_t rsrvd22[3];
	DMA_SEC_SPDIF_CHANNEL1_USER2_t CHANNEL1_USER2; /* addr: 0x000000c8 */
	ca_uint32_t rsrvd23[3];
	DMA_SEC_SPDIF_CHANNEL1_USER3_t CHANNEL1_USER3; /* addr: 0x000000cc */
	ca_uint32_t rsrvd24[3];
	DMA_SEC_SPDIF_CHANNEL1_USER4_t CHANNEL1_USER4; /* addr: 0x000000d0 */
	ca_uint32_t rsrvd25[3];
	DMA_SEC_SPDIF_CHANNEL1_USER5_t CHANNEL1_USER5; /* addr: 0x000000d4 */
	ca_uint32_t rsrvd26[11];
	DMA_SEC_SPDIF_CHANNEL2_USER0_t CHANNEL2_USER0; /* addr: 0x000000e0 */
	ca_uint32_t rsrvd27[3];
	DMA_SEC_SPDIF_CHANNEL2_USER1_t CHANNEL2_USER1; /* addr: 0x000000e4 */
	ca_uint32_t rsrvd28[3];
	DMA_SEC_SPDIF_CHANNEL2_USER2_t CHANNEL2_USER2; /* addr: 0x000000e8 */
	ca_uint32_t rsrvd29[3];
	DMA_SEC_SPDIF_CHANNEL2_USER3_t CHANNEL2_USER3; /* addr: 0x000000ec */
	ca_uint32_t rsrvd30[3];
	DMA_SEC_SPDIF_CHANNEL2_USER4_t CHANNEL2_USER4; /* addr: 0x000000f0 */
	ca_uint32_t rsrvd31[3];
	DMA_SEC_SPDIF_CHANNEL2_USER5_t CHANNEL2_USER5; /* addr: 0x000000f4 */
} DMA_SEC_SPDIF_t;
#endif /* !__ASSEMBLER__ */

/*
 * AXIM2
 */

#define DMA_SEC_AXIM2_CONFIG 0xf7001d80
#define DMA_SEC_AXIM2_CONFIG_dft 0x00000200

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t axi_write_outtrans_num : 4; /* bits 3:0 */
		ca_uint32_t axi_read_outtrans_num : 4; /* bits 7:4 */
		ca_uint32_t axi_xbus_len : 3; /* bits 10:8 */
		ca_uint32_t write_cacheline_trans_en : 1; /* bits 11:11 */
		ca_uint32_t write_cacheline_trans_size : 1; /* bits 12:12 */
		ca_uint32_t read_cacheline_trans_en : 1; /* bits 13:13 */
		ca_uint32_t read_cacheline_trans_size : 1; /* bits 14:14 */
		ca_uint32_t arcache_eos_en : 1; /* bits 15:15 */
		ca_uint32_t awcache_eos_en : 1; /* bits 16:16 */
		ca_uint32_t reserved : 15; /* bits 31:17 */
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_AXIM2_CONFIG_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_AXIM2_TIMEOUT_THRESHOLD 0xf7001d84
#define DMA_SEC_AXIM2_TIMEOUT_THRESHOLD_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_channel_threshold : 1; /* bits 0:0 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t write_channel_threshold : 1; /* bits 4:4 */
		ca_uint32_t rsrvd2 : 27;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_AXIM2_TIMEOUT_THRESHOLD_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_AXIM2_INTERRUPT_STATUS 0xf7001d88
#define DMA_SEC_AXIM2_INTERRUPT_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_AXIM2_INTERRUPT_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_AXIM2_INTERRUPT_ENABLE 0xf7001d8c
#define DMA_SEC_AXIM2_INTERRUPT_ENABLE_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t read_trans_resp_timeout_int_en : 1; /* bits 0:0 */
		ca_uint32_t read_trans_resp_err_int_en : 1; /* bits 1:1 */
		ca_uint32_t write_trans_resp_timeout_int_en : 1; /* bits 2:2 */
		ca_uint32_t write_trans_resp_err_int_en : 1; /* bits 3:3 */
		ca_uint32_t read_trans_resp_ace_err_int_en : 1; /* bits 4:4 */
		ca_uint32_t rsrvd1 : 27;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_AXIM2_INTERRUPT_ENABLE_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* AXIM2 */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_AXIM2_CONFIG_t CONFIG; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_AXIM2_TIMEOUT_THRESHOLD_t TIMEOUT_THRESHOLD; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_AXIM2_INTERRUPT_STATUS_t INTERRUPT_STATUS; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_AXIM2_INTERRUPT_ENABLE_t INTERRUPT_ENABLE; /* addr: 0x0000000c */
} DMA_SEC_AXIM2_t;
#endif /* !__ASSEMBLER__ */

/*
 * DMA_INT
 */

#define DMA_SEC_DMA_INT_DMA_LSO_INT0 0xf7001e00
#define DMA_SEC_DMA_INT_DMA_LSO_INT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN0 0xf7001e04
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT0 0xf7001e08
#define DMA_SEC_DMA_INT_DMA_SSP_INT0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN0 0xf7001e0c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN0_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN0_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT1 0xf7001e10
#define DMA_SEC_DMA_INT_DMA_LSO_INT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN1 0xf7001e14
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT1 0xf7001e18
#define DMA_SEC_DMA_INT_DMA_SSP_INT1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN1 0xf7001e1c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN1_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN1_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT2 0xf7001e20
#define DMA_SEC_DMA_INT_DMA_LSO_INT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN2 0xf7001e24
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT2 0xf7001e28
#define DMA_SEC_DMA_INT_DMA_SSP_INT2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN2 0xf7001e2c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN2_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN2_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT3 0xf7001e30
#define DMA_SEC_DMA_INT_DMA_LSO_INT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN3 0xf7001e34
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT3 0xf7001e38
#define DMA_SEC_DMA_INT_DMA_SSP_INT3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN3 0xf7001e3c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN3_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN3_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT4 0xf7001e40
#define DMA_SEC_DMA_INT_DMA_LSO_INT4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN4 0xf7001e44
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT4 0xf7001e48
#define DMA_SEC_DMA_INT_DMA_SSP_INT4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN4 0xf7001e4c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN4_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN4_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT5 0xf7001e50
#define DMA_SEC_DMA_INT_DMA_LSO_INT5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN5 0xf7001e54
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT5 0xf7001e58
#define DMA_SEC_DMA_INT_DMA_SSP_INT5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN5 0xf7001e5c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN5_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN5_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT6 0xf7001e60
#define DMA_SEC_DMA_INT_DMA_LSO_INT6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT6_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN6 0xf7001e64
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN6_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT6 0xf7001e68
#define DMA_SEC_DMA_INT_DMA_SSP_INT6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT6_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN6 0xf7001e6c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN6_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN6_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INT7 0xf7001e70
#define DMA_SEC_DMA_INT_DMA_LSO_INT7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INT7_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_LSO_INTEN7 0xf7001e74
#define DMA_SEC_DMA_INT_DMA_LSO_INTEN7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t VP0_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t VP1_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t VP2_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t VP3_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t VP4_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t VP5_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t VP6_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t VP7_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t VP8_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t VP9_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t VP10_INTERRUPTi_en : 1; /* bits 10:10 */
		ca_uint32_t VP11_INTERRUPTi_en : 1; /* bits 11:11 */
		ca_uint32_t LSO_INTERRUPTi_en : 1; /* bits 12:12 */
		ca_uint32_t SS_INTERRUPTi_en : 1; /* bits 13:13 */
		ca_uint32_t rsrvd1 : 18;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_LSO_INTEN7_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INT7 0xf7001e78
#define DMA_SEC_DMA_INT_DMA_SSP_INT7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INT7_t;
#endif /* !__ASSEMBLER__ */

#define DMA_SEC_DMA_INT_DMA_SSP_INTEN7 0xf7001e7c
#define DMA_SEC_DMA_INT_DMA_SSP_INTEN7_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t TXQ5_INTERRUPTi_en : 1; /* bits 0:0 */
		ca_uint32_t RXQ5_INTERRUPTi_en : 1; /* bits 1:1 */
		ca_uint32_t TXQ6_INTERRUPTi_en : 1; /* bits 2:2 */
		ca_uint32_t RXQ6_INTERRUPTi_en : 1; /* bits 3:3 */
		ca_uint32_t TXQ7_INTERRUPTi_en : 1; /* bits 4:4 */
		ca_uint32_t RXQ7_INTERRUPTi_en : 1; /* bits 5:5 */
		ca_uint32_t SSP0_INTERRUPTi_en : 1; /* bits 6:6 */
		ca_uint32_t SSP1_INTERRUPTi_en : 1; /* bits 7:7 */
		ca_uint32_t AXIM_INTERRUPTi_en : 1; /* bits 8:8 */
		ca_uint32_t SPDIF_INTERRUPTi_en : 1; /* bits 9:9 */
		ca_uint32_t rsrvd1 : 22;
	} bf;
	ca_uint32_t wrd;
} DMA_SEC_DMA_INT_DMA_SSP_INTEN7_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* DMA_INT */
#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_DMA_INT_DMA_LSO_INT0_t DMA_LSO_INT0; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN0_t DMA_LSO_INTEN0; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT0_t DMA_SSP_INT0; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN0_t DMA_SSP_INTEN0; /* addr: 0x0000000c */
	ca_uint32_t rsrvd4[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT1_t DMA_LSO_INT1; /* addr: 0x00000010 */
	ca_uint32_t rsrvd5[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN1_t DMA_LSO_INTEN1; /* addr: 0x00000014 */
	ca_uint32_t rsrvd6[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT1_t DMA_SSP_INT1; /* addr: 0x00000018 */
	ca_uint32_t rsrvd7[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN1_t DMA_SSP_INTEN1; /* addr: 0x0000001c */
	ca_uint32_t rsrvd8[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT2_t DMA_LSO_INT2; /* addr: 0x00000020 */
	ca_uint32_t rsrvd9[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN2_t DMA_LSO_INTEN2; /* addr: 0x00000024 */
	ca_uint32_t rsrvd10[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT2_t DMA_SSP_INT2; /* addr: 0x00000028 */
	ca_uint32_t rsrvd11[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN2_t DMA_SSP_INTEN2; /* addr: 0x0000002c */
	ca_uint32_t rsrvd12[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT3_t DMA_LSO_INT3; /* addr: 0x00000030 */
	ca_uint32_t rsrvd13[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN3_t DMA_LSO_INTEN3; /* addr: 0x00000034 */
	ca_uint32_t rsrvd14[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT3_t DMA_SSP_INT3; /* addr: 0x00000038 */
	ca_uint32_t rsrvd15[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN3_t DMA_SSP_INTEN3; /* addr: 0x0000003c */
	ca_uint32_t rsrvd16[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT4_t DMA_LSO_INT4; /* addr: 0x00000040 */
	ca_uint32_t rsrvd17[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN4_t DMA_LSO_INTEN4; /* addr: 0x00000044 */
	ca_uint32_t rsrvd18[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT4_t DMA_SSP_INT4; /* addr: 0x00000048 */
	ca_uint32_t rsrvd19[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN4_t DMA_SSP_INTEN4; /* addr: 0x0000004c */
	ca_uint32_t rsrvd20[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT5_t DMA_LSO_INT5; /* addr: 0x00000050 */
	ca_uint32_t rsrvd21[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN5_t DMA_LSO_INTEN5; /* addr: 0x00000054 */
	ca_uint32_t rsrvd22[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT5_t DMA_SSP_INT5; /* addr: 0x00000058 */
	ca_uint32_t rsrvd23[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN5_t DMA_SSP_INTEN5; /* addr: 0x0000005c */
	ca_uint32_t rsrvd24[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT6_t DMA_LSO_INT6; /* addr: 0x00000060 */
	ca_uint32_t rsrvd25[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN6_t DMA_LSO_INTEN6; /* addr: 0x00000064 */
	ca_uint32_t rsrvd26[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT6_t DMA_SSP_INT6; /* addr: 0x00000068 */
	ca_uint32_t rsrvd27[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN6_t DMA_SSP_INTEN6; /* addr: 0x0000006c */
	ca_uint32_t rsrvd28[3];
	DMA_SEC_DMA_INT_DMA_LSO_INT7_t DMA_LSO_INT7; /* addr: 0x00000070 */
	ca_uint32_t rsrvd29[3];
	DMA_SEC_DMA_INT_DMA_LSO_INTEN7_t DMA_LSO_INTEN7; /* addr: 0x00000074 */
	ca_uint32_t rsrvd30[3];
	DMA_SEC_DMA_INT_DMA_SSP_INT7_t DMA_SSP_INT7; /* addr: 0x00000078 */
	ca_uint32_t rsrvd31[3];
	DMA_SEC_DMA_INT_DMA_SSP_INTEN7_t DMA_SSP_INTEN7; /* addr: 0x0000007c */
} DMA_SEC_DMA_INT_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* APB6 */

#ifndef __ASSEMBLER__
typedef struct {
	DMA_SEC_DMA_GLB_t DMA_GLB; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[165];
	DMA_SEC_DMA_LSO_VP_t DMA_LSO_VP[12]; /* addr: 0x00000100 */
	ca_uint32_t rsrvd2[128];
	DMA_SEC_SS_t SS; /* addr: 0x00000900 */
	ca_uint32_t rsrvd3[181];
	DMA_SEC_DMA_SSP_Q_t DMA_SSP_Q[3]; /* addr: 0x00000a00 */
	DMA_SEC_SSP_t SSP[2]; /* addr: 0x00000b80 */
	DMA_SEC_SPDIF_t SPDIF; /* addr: 0x00000c80 */
	ca_uint32_t rsrvd4[133];
	DMA_SEC_AXIM2_t AXIM2; /* addr: 0x00000d80 */
	ca_uint32_t rsrvd5[121];
	DMA_SEC_DMA_INT_t DMA_INT; /* addr: 0x00000e00 */
} APB6_t;
#endif /* !__ASSEMBLER__ */

/*
 * ROMOTP
 */

#define OTP_CTL 0xfff80800
#define OTP_CTL_dft 0x00001000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t rsrvd1 : 12;
		ca_uint32_t RESETB : 1; /* bits 12:12 */
		ca_uint32_t rsrvd2 : 3;
		ca_uint32_t PWR : 1; /* bits 16:16 */
		ca_uint32_t AXIPREVENT : 1; /* bits 17:17 */
		ca_uint32_t rsrvd3 : 6;
		ca_uint32_t SPACE : 5; /* bits 28:24 */
		ca_uint32_t rsrvd4 : 3;
	} bf;
	ca_uint32_t wrd;
} OTP_CTL_t;
#endif /* !__ASSEMBLER__ */

#define SPACE_DEFAULT 0x0
#define SPACE_TDECBIST 0x8
#define SPACE_WRTSBIST 0xa
#define SPACE_LOCK 0xb
#define SPACE_RGSTR 0xd
#define SPACE_BLNKBISR 0xe

#define OTP_STATUS 0xfff80804
#define OTP_STATUS_dft 0x00000000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t RDOPEN_STATE : 1; /* bits 0:0 */
		ca_uint32_t WROPEN_STATE : 1; /* bits 1:1 */
		ca_uint32_t LOCK : 1; /* bits 2:2 */
		ca_uint32_t SRESP : 2; /* bits 4:3 */
		ca_uint32_t rsrvd1 : 3;
		ca_uint32_t SDATA : 8; /* bits 15:8 */
		ca_uint32_t rsrvd2 : 16;
	} bf;
	ca_uint32_t wrd;
} OTP_STATUS_t;
#endif /* !__ASSEMBLER__ */

#define OTP_PROT 0xfff80808
#define OTP_PROT_dft 0x008b0000

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t START : 11; /* bits 10:0 */
		ca_uint32_t rsrvd1 : 5;
		ca_uint32_t END : 11; /* bits 26:16 */
		ca_uint32_t rsrvd2 : 5;
	} bf;
	ca_uint32_t wrd;
} OTP_PROT_t;
#endif /* !__ASSEMBLER__ */

#define OTP_PROTEN 0xfff8080c
#define OTP_PROTEN_dft 0x00000003

#ifndef __ASSEMBLER__
typedef volatile union {
	struct {
		ca_uint32_t EN : 1; /* bits 0:0 */
		ca_uint32_t PROG : 1; /* bits 1:1 */
		ca_uint32_t rsrvd1 : 30;
	} bf;
	ca_uint32_t wrd;
} OTP_PROTEN_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* ROMOTP */
#ifndef __ASSEMBLER__
typedef struct {
	OTP_CTL_t CTL; /* addr: 0x00000000 */
	ca_uint32_t rsrvd1[3];
	OTP_STATUS_t STATUS; /* addr: 0x00000004 */
	ca_uint32_t rsrvd2[3];
	OTP_PROT_t PROT; /* addr: 0x00000008 */
	ca_uint32_t rsrvd3[3];
	OTP_PROTEN_t PROTEN; /* addr: 0x0000000c */
} ROMOTP_t;
#endif /* !__ASSEMBLER__ */

/******************************************************************
 *
 * Block declaration
 *
 ******************************************************************/

/* HV */

#ifndef __ASSEMBLER__
typedef struct {
	ca_uint32_t rsrvd1[4096786432];
	APB0_t APB0; /* addr: 0xf4300000 */
	ca_uint32_t rsrvd2[92416];
	APB2_t APB2; /* addr: 0xf4320000 */
	ca_uint32_t rsrvd3[10483];
	APB3_t APB3; /* addr: 0xf4330000 */
	ca_uint32_t rsrvd4[37539840];
	APB1_t APB1; /* addr: 0xf6700000 */
	ca_uint32_t rsrvd5[9428937];
	APB6_t APB6; /* addr: 0xf7001000 */
	ca_uint32_t rsrvd6[150464961];
	ROMOTP_t ROMOTP; /* addr: 0xfff80800 */
} HV_t;
#endif /* !__ASSEMBLER__ */
#ifdef CA_DEBUG_WORKAROUND
#	define DEBUG CA_DEBUG_WORKAROUND
#	undef CA_DEBUG_WORKAROUND
#endif /* CA_DEBUG_WORKAROUND */
#endif /* _CA77XX_REGISTERS_H_ */
